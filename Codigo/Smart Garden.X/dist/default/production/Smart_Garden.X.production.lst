

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Apr 29 00:14:22 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    74                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    76                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    77                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    78  0000                     
    79                           ; Version 2.10
    80                           ; Generated 31/07/2019 GMT
    81                           ; 
    82                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F4550 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     
   114                           	psect	idataBANK0
   115  0022D0                     __pidataBANK0:
   116                           	opt callstack 0
   117                           
   118                           ;initializer for _VALOR_TIMER0
   119  0022D0  6769               	dw	26473
   120                           
   121                           ;initializer for _VALOR_TIMER0UART
   122  0022D2  6769               	dw	26473
   123  0000                     _TMR0	set	4054
   124  0000                     _TRISD	set	3989
   125  0000                     _T0CON	set	4053
   126  0000                     _T0CONbits	set	4053
   127  0000                     _LATD	set	3980
   128  0000                     _PIE1bits	set	3997
   129  0000                     _ADRESL	set	4035
   130  0000                     _ADRESH	set	4036
   131  0000                     _ADCON0bits	set	4034
   132  0000                     _ADCON2	set	4032
   133  0000                     _ADCON1	set	4033
   134  0000                     _INTCONbits	set	4082
   135  0000                     _LATDbits	set	3980
   136  0000                     _TRISDbits	set	3989
   137  0000                     _PORTDbits	set	3971
   138  0000                     _TXREG	set	4013
   139  0000                     _RCREG	set	4014
   140  0000                     _PIR1bits	set	3998
   141  0000                     _RCSTAbits	set	4011
   142  0000                     _TXSTAbits	set	4012
   143  0000                     _SPBRG	set	4015
   144  0000                     _TRISCbits	set	3988
   145  0000                     _SSPBUF	set	4041
   146  0000                     _SSPCON2bits	set	4037
   147  0000                     _SSPADD	set	4040
   148  0000                     _SSPCON2	set	4037
   149  0000                     _SSPCON1	set	4038
   150  0000                     _SSPSTAT	set	4039
   151  0000                     _TRISBbits	set	3987
   152  0000                     _ACKSTAT	set	32302
   153                           
   154                           	psect	mediumconst
   155  007BCE                     __pmediumconst:
   156                           	opt callstack 0
   157  007BCE  00                 	db	0
   158  007BCF                     STR_11:
   159  007BCF  0D                 	db	13
   160  007BD0  0A                 	db	10
   161  007BD1  20                 	db	32
   162  007BD2  49                 	db	73	;'I'
   163  007BD3  6E                 	db	110	;'n'
   164  007BD4  67                 	db	103	;'g'
   165  007BD5  72                 	db	114	;'r'
   166  007BD6  65                 	db	101	;'e'
   167  007BD7  73                 	db	115	;'s'
   168  007BD8  65                 	db	101	;'e'
   169  007BD9  20                 	db	32
   170  007BDA  6C                 	db	108	;'l'
   171  007BDB  6F                 	db	111	;'o'
   172  007BDC  73                 	db	115	;'s'
   173  007BDD  20                 	db	32
   174  007BDE  6D                 	db	109	;'m'
   175  007BDF  69                 	db	105	;'i'
   176  007BE0  6E                 	db	110	;'n'
   177  007BE1  75                 	db	117	;'u'
   178  007BE2  74                 	db	116	;'t'
   179  007BE3  6F                 	db	111	;'o'
   180  007BE4  73                 	db	115	;'s'
   181  007BE5  20                 	db	32
   182  007BE6  71                 	db	113	;'q'
   183  007BE7  75                 	db	117	;'u'
   184  007BE8  65                 	db	101	;'e'
   185  007BE9  20                 	db	32
   186  007BEA  64                 	db	100	;'d'
   187  007BEB  65                 	db	101	;'e'
   188  007BEC  73                 	db	115	;'s'
   189  007BED  65                 	db	101	;'e'
   190  007BEE  65                 	db	101	;'e'
   191  007BEF  20                 	db	32
   192  007BF0  71                 	db	113	;'q'
   193  007BF1  75                 	db	117	;'u'
   194  007BF2  65                 	db	101	;'e'
   195  007BF3  20                 	db	32
   196  007BF4  73                 	db	115	;'s'
   197  007BF5  65                 	db	101	;'e'
   198  007BF6  20                 	db	32
   199  007BF7  72                 	db	114	;'r'
   200  007BF8  69                 	db	105	;'i'
   201  007BF9  65                 	db	101	;'e'
   202  007BFA  67                 	db	103	;'g'
   203  007BFB  75                 	db	117	;'u'
   204  007BFC  65                 	db	101	;'e'
   205  007BFD  20                 	db	32
   206  007BFE  65                 	db	101	;'e'
   207  007BFF  6E                 	db	110	;'n'
   208  007C00  20                 	db	32
   209  007C01  65                 	db	101	;'e'
   210  007C02  73                 	db	115	;'s'
   211  007C03  65                 	db	101	;'e'
   212  007C04  20                 	db	32
   213  007C05  68                 	db	104	;'h'
   214  007C06  6F                 	db	111	;'o'
   215  007C07  72                 	db	114	;'r'
   216  007C08  61                 	db	97	;'a'
   217  007C09  72                 	db	114	;'r'
   218  007C0A  69                 	db	105	;'i'
   219  007C0B  6F                 	db	111	;'o'
   220  007C0C  20                 	db	32
   221  007C0D  65                 	db	101	;'e'
   222  007C0E  6A                 	db	106	;'j'
   223  007C0F  3A                 	db	58	;':'
   224  007C10  20                 	db	32
   225  007C11  31                 	db	49	;'1'
   226  007C12  35                 	db	53	;'5'
   227  007C13  20                 	db	32
   228  007C14  0D                 	db	13
   229  007C15  0A                 	db	10
   230  007C16  00                 	db	0
   231  007C17                     STR_7:
   232  007C17  0D                 	db	13
   233  007C18  0A                 	db	10
   234  007C19  20                 	db	32
   235  007C1A  49                 	db	73	;'I'
   236  007C1B  6E                 	db	110	;'n'
   237  007C1C  67                 	db	103	;'g'
   238  007C1D  72                 	db	114	;'r'
   239  007C1E  65                 	db	101	;'e'
   240  007C1F  73                 	db	115	;'s'
   241  007C20  65                 	db	101	;'e'
   242  007C21  20                 	db	32
   243  007C22  31                 	db	49	;'1'
   244  007C23  20                 	db	32
   245  007C24  70                 	db	112	;'p'
   246  007C25  61                 	db	97	;'a'
   247  007C26  72                 	db	114	;'r'
   248  007C27  61                 	db	97	;'a'
   249  007C28  20                 	db	32
   250  007C29  72                 	db	114	;'r'
   251  007C2A  65                 	db	101	;'e'
   252  007C2B  67                 	db	103	;'g'
   253  007C2C  61                 	db	97	;'a'
   254  007C2D  72                 	db	114	;'r'
   255  007C2E  20                 	db	32
   256  007C2F  7C                 	db	124
   257  007C30  7C                 	db	124
   258  007C31  20                 	db	32
   259  007C32  69                 	db	105	;'i'
   260  007C33  6E                 	db	110	;'n'
   261  007C34  67                 	db	103	;'g'
   262  007C35  72                 	db	114	;'r'
   263  007C36  65                 	db	101	;'e'
   264  007C37  73                 	db	115	;'s'
   265  007C38  65                 	db	101	;'e'
   266  007C39  20                 	db	32
   267  007C3A  30                 	db	48	;'0'
   268  007C3B  20                 	db	32
   269  007C3C  70                 	db	112	;'p'
   270  007C3D  61                 	db	97	;'a'
   271  007C3E  72                 	db	114	;'r'
   272  007C3F  61                 	db	97	;'a'
   273  007C40  20                 	db	32
   274  007C41  6E                 	db	110	;'n'
   275  007C42  6F                 	db	111	;'o'
   276  007C43  20                 	db	32
   277  007C44  72                 	db	114	;'r'
   278  007C45  65                 	db	101	;'e'
   279  007C46  67                 	db	103	;'g'
   280  007C47  61                 	db	97	;'a'
   281  007C48  72                 	db	114	;'r'
   282  007C49  3A                 	db	58	;':'
   283  007C4A  20                 	db	32
   284  007C4B  0D                 	db	13
   285  007C4C  0A                 	db	10
   286  007C4D  00                 	db	0
   287  007C4E                     STR_6:
   288  007C4E  0D                 	db	13
   289  007C4F  0A                 	db	10
   290  007C50  20                 	db	32
   291  007C51  49                 	db	73	;'I'
   292  007C52  6E                 	db	110	;'n'
   293  007C53  67                 	db	103	;'g'
   294  007C54  72                 	db	114	;'r'
   295  007C55  65                 	db	101	;'e'
   296  007C56  73                 	db	115	;'s'
   297  007C57  65                 	db	101	;'e'
   298  007C58  20                 	db	32
   299  007C59  75                 	db	117	;'u'
   300  007C5A  6E                 	db	110	;'n'
   301  007C5B  61                 	db	97	;'a'
   302  007C5C  20                 	db	32
   303  007C5D  68                 	db	104	;'h'
   304  007C5E  6F                 	db	111	;'o'
   305  007C5F  72                 	db	114	;'r'
   306  007C60  61                 	db	97	;'a'
   307  007C61  20                 	db	32
   308  007C62  65                 	db	101	;'e'
   309  007C63  6E                 	db	110	;'n'
   310  007C64  20                 	db	32
   311  007C65  66                 	db	102	;'f'
   312  007C66  6F                 	db	111	;'o'
   313  007C67  72                 	db	114	;'r'
   314  007C68  6D                 	db	109	;'m'
   315  007C69  61                 	db	97	;'a'
   316  007C6A  74                 	db	116	;'t'
   317  007C6B  6F                 	db	111	;'o'
   318  007C6C  20                 	db	32
   319  007C6D  64                 	db	100	;'d'
   320  007C6E  65                 	db	101	;'e'
   321  007C6F  20                 	db	32
   322  007C70  32                 	db	50	;'2'
   323  007C71  34                 	db	52	;'4'
   324  007C72  20                 	db	32
   325  007C73  68                 	db	104	;'h'
   326  007C74  72                 	db	114	;'r'
   327  007C75  73                 	db	115	;'s'
   328  007C76  20                 	db	32
   329  007C77  65                 	db	101	;'e'
   330  007C78  6A                 	db	106	;'j'
   331  007C79  3A                 	db	58	;':'
   332  007C7A  20                 	db	32
   333  007C7B  31                 	db	49	;'1'
   334  007C7C  35                 	db	53	;'5'
   335  007C7D  20                 	db	32
   336  007C7E  0D                 	db	13
   337  007C7F  0A                 	db	10
   338  007C80  00                 	db	0
   339  007C81                     STR_25:
   340  007C81  0D                 	db	13
   341  007C82  0A                 	db	10
   342  007C83  0A                 	db	10
   343  007C84  48                 	db	72	;'H'
   344  007C85  6F                 	db	111	;'o'
   345  007C86  72                 	db	114	;'r'
   346  007C87  61                 	db	97	;'a'
   347  007C88  20                 	db	32
   348  007C89  7C                 	db	124
   349  007C8A  20                 	db	32
   350  007C8B  52                 	db	82	;'R'
   351  007C8C  65                 	db	101	;'e'
   352  007C8D  67                 	db	103	;'g'
   353  007C8E  61                 	db	97	;'a'
   354  007C8F  72                 	db	114	;'r'
   355  007C90  28                 	db	40
   356  007C91  31                 	db	49	;'1'
   357  007C92  20                 	db	32
   358  007C93  73                 	db	115	;'s'
   359  007C94  69                 	db	105	;'i'
   360  007C95  20                 	db	32
   361  007C96  30                 	db	48	;'0'
   362  007C97  20                 	db	32
   363  007C98  6E                 	db	110	;'n'
   364  007C99  6F                 	db	111	;'o'
   365  007C9A  29                 	db	41
   366  007C9B  20                 	db	32
   367  007C9C  7C                 	db	124
   368  007C9D  20                 	db	32
   369  007C9E  4D                 	db	77	;'M'
   370  007C9F  69                 	db	105	;'i'
   371  007CA0  6E                 	db	110	;'n'
   372  007CA1  75                 	db	117	;'u'
   373  007CA2  74                 	db	116	;'t'
   374  007CA3  6F                 	db	111	;'o'
   375  007CA4  73                 	db	115	;'s'
   376  007CA5  20                 	db	32
   377  007CA6  64                 	db	100	;'d'
   378  007CA7  65                 	db	101	;'e'
   379  007CA8  20                 	db	32
   380  007CA9  72                 	db	114	;'r'
   381  007CAA  69                 	db	105	;'i'
   382  007CAB  65                 	db	101	;'e'
   383  007CAC  67                 	db	103	;'g'
   384  007CAD  6F                 	db	111	;'o'
   385  007CAE  20                 	db	32
   386  007CAF  0D                 	db	13
   387  007CB0  0A                 	db	10
   388  007CB1  0A                 	db	10
   389  007CB2  00                 	db	0
   390  007CB3                     STR_19:
   391  007CB3  0D                 	db	13
   392  007CB4  0A                 	db	10
   393  007CB5  20                 	db	32
   394  007CB6  33                 	db	51	;'3'
   395  007CB7  2E                 	db	46
   396  007CB8  20                 	db	32
   397  007CB9  50                 	db	80	;'P'
   398  007CBA  72                 	db	114	;'r'
   399  007CBB  6F                 	db	111	;'o'
   400  007CBC  67                 	db	103	;'g'
   401  007CBD  72                 	db	114	;'r'
   402  007CBE  61                 	db	97	;'a'
   403  007CBF  6D                 	db	109	;'m'
   404  007CC0  61                 	db	97	;'a'
   405  007CC1  72                 	db	114	;'r'
   406  007CC2  20                 	db	32
   407  007CC3  74                 	db	116	;'t'
   408  007CC4  69                 	db	105	;'i'
   409  007CC5  65                 	db	101	;'e'
   410  007CC6  6D                 	db	109	;'m'
   411  007CC7  70                 	db	112	;'p'
   412  007CC8  6F                 	db	111	;'o'
   413  007CC9  20                 	db	32
   414  007CCA  64                 	db	100	;'d'
   415  007CCB  65                 	db	101	;'e'
   416  007CCC  20                 	db	32
   417  007CCD  72                 	db	114	;'r'
   418  007CCE  69                 	db	105	;'i'
   419  007CCF  65                 	db	101	;'e'
   420  007CD0  67                 	db	103	;'g'
   421  007CD1  6F                 	db	111	;'o'
   422  007CD2  20                 	db	32
   423  007CD3  65                 	db	101	;'e'
   424  007CD4  6E                 	db	110	;'n'
   425  007CD5  20                 	db	32
   426  007CD6  75                 	db	117	;'u'
   427  007CD7  6E                 	db	110	;'n'
   428  007CD8  20                 	db	32
   429  007CD9  68                 	db	104	;'h'
   430  007CDA  6F                 	db	111	;'o'
   431  007CDB  72                 	db	114	;'r'
   432  007CDC  61                 	db	97	;'a'
   433  007CDD  72                 	db	114	;'r'
   434  007CDE  69                 	db	105	;'i'
   435  007CDF  6F                 	db	111	;'o'
   436  007CE0  20                 	db	32
   437  007CE1  0D                 	db	13
   438  007CE2  0A                 	db	10
   439  007CE3  00                 	db	0
   440  007CE4                     STR_2:
   441  007CE4  0D                 	db	13
   442  007CE5  0A                 	db	10
   443  007CE6  20                 	db	32
   444  007CE7  45                 	db	69	;'E'
   445  007CE8  6E                 	db	110	;'n'
   446  007CE9  76                 	db	118	;'v'
   447  007CEA  69                 	db	105	;'i'
   448  007CEB  65                 	db	101	;'e'
   449  007CEC  20                 	db	32
   450  007CED  6C                 	db	108	;'l'
   451  007CEE  61                 	db	97	;'a'
   452  007CEF  73                 	db	115	;'s'
   453  007CF0  20                 	db	32
   454  007CF1  48                 	db	72	;'H'
   455  007CF2  6F                 	db	111	;'o'
   456  007CF3  72                 	db	114	;'r'
   457  007CF4  61                 	db	97	;'a'
   458  007CF5  73                 	db	115	;'s'
   459  007CF6  20                 	db	32
   460  007CF7  65                 	db	101	;'e'
   461  007CF8  6E                 	db	110	;'n'
   462  007CF9  20                 	db	32
   463  007CFA  66                 	db	102	;'f'
   464  007CFB  6F                 	db	111	;'o'
   465  007CFC  72                 	db	114	;'r'
   466  007CFD  6D                 	db	109	;'m'
   467  007CFE  61                 	db	97	;'a'
   468  007CFF  74                 	db	116	;'t'
   469  007D00  6F                 	db	111	;'o'
   470  007D01  20                 	db	32
   471  007D02  32                 	db	50	;'2'
   472  007D03  34                 	db	52	;'4'
   473  007D04  20                 	db	32
   474  007D05  45                 	db	69	;'E'
   475  007D06  6A                 	db	106	;'j'
   476  007D07  3A                 	db	58	;':'
   477  007D08  20                 	db	32
   478  007D09  31                 	db	49	;'1'
   479  007D0A  35                 	db	53	;'5'
   480  007D0B  20                 	db	32
   481  007D0C  0D                 	db	13
   482  007D0D  0A                 	db	10
   483  007D0E  00                 	db	0
   484  007D0F                     STR_24:
   485  007D0F  0D                 	db	13
   486  007D10  0A                 	db	10
   487  007D11  20                 	db	32
   488  007D12  53                 	db	83	;'S'
   489  007D13  6F                 	db	111	;'o'
   490  007D14  6C                 	db	108	;'l'
   491  007D15  6F                 	db	111	;'o'
   492  007D16  20                 	db	32
   493  007D17  73                 	db	115	;'s'
   494  007D18  65                 	db	101	;'e'
   495  007D19  20                 	db	32
   496  007D1A  70                 	db	112	;'p'
   497  007D1B  65                 	db	101	;'e'
   498  007D1C  72                 	db	114	;'r'
   499  007D1D  6D                 	db	109	;'m'
   500  007D1E  69                 	db	105	;'i'
   501  007D1F  74                 	db	116	;'t'
   502  007D20  65                 	db	101	;'e'
   503  007D21  6E                 	db	110	;'n'
   504  007D22  20                 	db	32
   505  007D23  6E                 	db	110	;'n'
   506  007D24  75                 	db	117	;'u'
   507  007D25  6D                 	db	109	;'m'
   508  007D26  65                 	db	101	;'e'
   509  007D27  72                 	db	114	;'r'
   510  007D28  6F                 	db	111	;'o'
   511  007D29  73                 	db	115	;'s'
   512  007D2A  20                 	db	32
   513  007D2B  64                 	db	100	;'d'
   514  007D2C  65                 	db	101	;'e'
   515  007D2D  6C                 	db	108	;'l'
   516  007D2E  20                 	db	32
   517  007D2F  31                 	db	49	;'1'
   518  007D30  20                 	db	32
   519  007D31  61                 	db	97	;'a'
   520  007D32  6C                 	db	108	;'l'
   521  007D33  20                 	db	32
   522  007D34  33                 	db	51	;'3'
   523  007D35  20                 	db	32
   524  007D36  0D                 	db	13
   525  007D37  0A                 	db	10
   526  007D38  00                 	db	0
   527  007D39                     STR_31:
   528  007D39  0D                 	db	13
   529  007D3A  0A                 	db	10
   530  007D3B  0A                 	db	10
   531  007D3C  50                 	db	80	;'P'
   532  007D3D  6F                 	db	111	;'o'
   533  007D3E  72                 	db	114	;'r'
   534  007D3F  63                 	db	99	;'c'
   535  007D40  65                 	db	101	;'e'
   536  007D41  6E                 	db	110	;'n'
   537  007D42  74                 	db	116	;'t'
   538  007D43  61                 	db	97	;'a'
   539  007D44  6A                 	db	106	;'j'
   540  007D45  65                 	db	101	;'e'
   541  007D46  20                 	db	32
   542  007D47  48                 	db	72	;'H'
   543  007D48  75                 	db	117	;'u'
   544  007D49  6D                 	db	109	;'m'
   545  007D4A  65                 	db	101	;'e'
   546  007D4B  64                 	db	100	;'d'
   547  007D4C  61                 	db	97	;'a'
   548  007D4D  64                 	db	100	;'d'
   549  007D4E  20                 	db	32
   550  007D4F  64                 	db	100	;'d'
   551  007D50  65                 	db	101	;'e'
   552  007D51  6C                 	db	108	;'l'
   553  007D52  20                 	db	32
   554  007D53  73                 	db	115	;'s'
   555  007D54  65                 	db	101	;'e'
   556  007D55  6E                 	db	110	;'n'
   557  007D56  73                 	db	115	;'s'
   558  007D57  6F                 	db	111	;'o'
   559  007D58  72                 	db	114	;'r'
   560  007D59  20                 	db	32
   561  007D5A  25                 	db	37
   562  007D5B  64                 	db	100	;'d'
   563  007D5C  3A                 	db	58	;':'
   564  007D5D  20                 	db	32
   565  007D5E  25                 	db	37
   566  007D5F  64                 	db	100	;'d'
   567  007D60  0D                 	db	13
   568  007D61  0A                 	db	10
   569  007D62  00                 	db	0
   570  007D63                     STR_33:
   571  007D63  0D                 	db	13
   572  007D64  0A                 	db	10
   573  007D65  0A                 	db	10
   574  007D66  45                 	db	69	;'E'
   575  007D67  6C                 	db	108	;'l'
   576  007D68  20                 	db	32
   577  007D69  73                 	db	115	;'s'
   578  007D6A  65                 	db	101	;'e'
   579  007D6B  6E                 	db	110	;'n'
   580  007D6C  73                 	db	115	;'s'
   581  007D6D  6F                 	db	111	;'o'
   582  007D6E  72                 	db	114	;'r'
   583  007D6F  20                 	db	32
   584  007D70  25                 	db	37
   585  007D71  64                 	db	100	;'d'
   586  007D72  20                 	db	32
   587  007D73  64                 	db	100	;'d'
   588  007D74  65                 	db	101	;'e'
   589  007D75  74                 	db	116	;'t'
   590  007D76  65                 	db	101	;'e'
   591  007D77  63                 	db	99	;'c'
   592  007D78  74                 	db	116	;'t'
   593  007D79  61                 	db	97	;'a'
   594  007D7A  20                 	db	32
   595  007D7B  74                 	db	116	;'t'
   596  007D7C  69                 	db	105	;'i'
   597  007D7D  65                 	db	101	;'e'
   598  007D7E  72                 	db	114	;'r'
   599  007D7F  72                 	db	114	;'r'
   600  007D80  61                 	db	97	;'a'
   601  007D81  20                 	db	32
   602  007D82  68                 	db	104	;'h'
   603  007D83  75                 	db	117	;'u'
   604  007D84  6D                 	db	109	;'m'
   605  007D85  65                 	db	101	;'e'
   606  007D86  64                 	db	100	;'d'
   607  007D87  61                 	db	97	;'a'
   608  007D88  0D                 	db	13
   609  007D89  0A                 	db	10
   610  007D8A  00                 	db	0
   611  007D8B                     STR_13:
   612  007D8B  0D                 	db	13
   613  007D8C  0A                 	db	10
   614  007D8D  53                 	db	83	;'S'
   615  007D8E  6F                 	db	111	;'o'
   616  007D8F  6C                 	db	108	;'l'
   617  007D90  69                 	db	105	;'i'
   618  007D91  63                 	db	99	;'c'
   619  007D92  69                 	db	105	;'i'
   620  007D93  74                 	db	116	;'t'
   621  007D94  61                 	db	97	;'a'
   622  007D95  6E                 	db	110	;'n'
   623  007D96  64                 	db	100	;'d'
   624  007D97  6F                 	db	111	;'o'
   625  007D98  20                 	db	32
   626  007D99  4D                 	db	77	;'M'
   627  007D9A  75                 	db	117	;'u'
   628  007D9B  65                 	db	101	;'e'
   629  007D9C  73                 	db	115	;'s'
   630  007D9D  74                 	db	116	;'t'
   631  007D9E  72                 	db	114	;'r'
   632  007D9F  65                 	db	101	;'e'
   633  007DA0  6F                 	db	111	;'o'
   634  007DA1  20                 	db	32
   635  007DA2  64                 	db	100	;'d'
   636  007DA3  65                 	db	101	;'e'
   637  007DA4  20                 	db	32
   638  007DA5  73                 	db	115	;'s'
   639  007DA6  65                 	db	101	;'e'
   640  007DA7  6E                 	db	110	;'n'
   641  007DA8  73                 	db	115	;'s'
   642  007DA9  6F                 	db	111	;'o'
   643  007DAA  72                 	db	114	;'r'
   644  007DAB  65                 	db	101	;'e'
   645  007DAC  73                 	db	115	;'s'
   646  007DAD  0D                 	db	13
   647  007DAE  0A                 	db	10
   648  007DAF  0A                 	db	10
   649  007DB0  00                 	db	0
   650  007DB1                     STR_32:
   651  007DB1  0D                 	db	13
   652  007DB2  0A                 	db	10
   653  007DB3  0A                 	db	10
   654  007DB4  45                 	db	69	;'E'
   655  007DB5  6C                 	db	108	;'l'
   656  007DB6  20                 	db	32
   657  007DB7  73                 	db	115	;'s'
   658  007DB8  65                 	db	101	;'e'
   659  007DB9  6E                 	db	110	;'n'
   660  007DBA  73                 	db	115	;'s'
   661  007DBB  6F                 	db	111	;'o'
   662  007DBC  72                 	db	114	;'r'
   663  007DBD  20                 	db	32
   664  007DBE  25                 	db	37
   665  007DBF  64                 	db	100	;'d'
   666  007DC0  20                 	db	32
   667  007DC1  64                 	db	100	;'d'
   668  007DC2  65                 	db	101	;'e'
   669  007DC3  74                 	db	116	;'t'
   670  007DC4  65                 	db	101	;'e'
   671  007DC5  63                 	db	99	;'c'
   672  007DC6  74                 	db	116	;'t'
   673  007DC7  61                 	db	97	;'a'
   674  007DC8  20                 	db	32
   675  007DC9  74                 	db	116	;'t'
   676  007DCA  69                 	db	105	;'i'
   677  007DCB  65                 	db	101	;'e'
   678  007DCC  72                 	db	114	;'r'
   679  007DCD  72                 	db	114	;'r'
   680  007DCE  61                 	db	97	;'a'
   681  007DCF  20                 	db	32
   682  007DD0  73                 	db	115	;'s'
   683  007DD1  65                 	db	101	;'e'
   684  007DD2  63                 	db	99	;'c'
   685  007DD3  61                 	db	97	;'a'
   686  007DD4  0D                 	db	13
   687  007DD5  0A                 	db	10
   688  007DD6  00                 	db	0
   689  007DD7                     STR_12:
   690  007DD7  0D                 	db	13
   691  007DD8  0A                 	db	10
   692  007DD9  20                 	db	32
   693  007DDA  4D                 	db	77	;'M'
   694  007DDB  69                 	db	105	;'i'
   695  007DDC  6E                 	db	110	;'n'
   696  007DDD  75                 	db	117	;'u'
   697  007DDE  74                 	db	116	;'t'
   698  007DDF  6F                 	db	111	;'o'
   699  007DE0  73                 	db	115	;'s'
   700  007DE1  20                 	db	32
   701  007DE2  64                 	db	100	;'d'
   702  007DE3  65                 	db	101	;'e'
   703  007DE4  20                 	db	32
   704  007DE5  72                 	db	114	;'r'
   705  007DE6  69                 	db	105	;'i'
   706  007DE7  65                 	db	101	;'e'
   707  007DE8  67                 	db	103	;'g'
   708  007DE9  6F                 	db	111	;'o'
   709  007DEA  20                 	db	32
   710  007DEB  65                 	db	101	;'e'
   711  007DEC  73                 	db	115	;'s'
   712  007DED  74                 	db	116	;'t'
   713  007DEE  61                 	db	97	;'a'
   714  007DEF  62                 	db	98	;'b'
   715  007DF0  6C                 	db	108	;'l'
   716  007DF1  65                 	db	101	;'e'
   717  007DF2  63                 	db	99	;'c'
   718  007DF3  69                 	db	105	;'i'
   719  007DF4  64                 	db	100	;'d'
   720  007DF5  6F                 	db	111	;'o'
   721  007DF6  73                 	db	115	;'s'
   722  007DF7  21                 	db	33
   723  007DF8  20                 	db	32
   724  007DF9  0D                 	db	13
   725  007DFA  0A                 	db	10
   726  007DFB  00                 	db	0
   727  007DFC                     STR_16:
   728  007DFC  0D                 	db	13
   729  007DFD  0A                 	db	10
   730  007DFE  20                 	db	32
   731  007DFF  49                 	db	73	;'I'
   732  007E00  6E                 	db	110	;'n'
   733  007E01  67                 	db	103	;'g'
   734  007E02  72                 	db	114	;'r'
   735  007E03  65                 	db	101	;'e'
   736  007E04  73                 	db	115	;'s'
   737  007E05  61                 	db	97	;'a'
   738  007E06  20                 	db	32
   739  007E07  75                 	db	117	;'u'
   740  007E08  6E                 	db	110	;'n'
   741  007E09  61                 	db	97	;'a'
   742  007E0A  20                 	db	32
   743  007E0B  6F                 	db	111	;'o'
   744  007E0C  70                 	db	112	;'p'
   745  007E0D  63                 	db	99	;'c'
   746  007E0E  69                 	db	105	;'i'
   747  007E0F  6F                 	db	111	;'o'
   748  007E10  6E                 	db	110	;'n'
   749  007E11  20                 	db	32
   750  007E12  61                 	db	97	;'a'
   751  007E13  20                 	db	32
   752  007E14  52                 	db	82	;'R'
   753  007E15  65                 	db	101	;'e'
   754  007E16  61                 	db	97	;'a'
   755  007E17  6C                 	db	108	;'l'
   756  007E18  69                 	db	105	;'i'
   757  007E19  7A                 	db	122	;'z'
   758  007E1A  61                 	db	97	;'a'
   759  007E1B  72                 	db	114	;'r'
   760  007E1C  3A                 	db	58	;':'
   761  007E1D  20                 	db	32
   762  007E1E  0D                 	db	13
   763  007E1F  0A                 	db	10
   764  007E20  00                 	db	0
   765  007E21                     STR_4:
   766  007E21  0D                 	db	13
   767  007E22  0A                 	db	10
   768  007E23  20                 	db	32
   769  007E24  48                 	db	72	;'H'
   770  007E25  4F                 	db	79	;'O'
   771  007E26  52                 	db	82	;'R'
   772  007E27  41                 	db	65	;'A'
   773  007E28  20                 	db	32
   774  007E29  45                 	db	69	;'E'
   775  007E2A  53                 	db	83	;'S'
   776  007E2B  54                 	db	84	;'T'
   777  007E2C  41                 	db	65	;'A'
   778  007E2D  42                 	db	66	;'B'
   779  007E2E  4C                 	db	76	;'L'
   780  007E2F  45                 	db	69	;'E'
   781  007E30  43                 	db	67	;'C'
   782  007E31  49                 	db	73	;'I'
   783  007E32  44                 	db	68	;'D'
   784  007E33  41                 	db	65	;'A'
   785  007E34  20                 	db	32
   786  007E35  43                 	db	67	;'C'
   787  007E36  4F                 	db	79	;'O'
   788  007E37  52                 	db	82	;'R'
   789  007E38  52                 	db	82	;'R'
   790  007E39  45                 	db	69	;'E'
   791  007E3A  43                 	db	67	;'C'
   792  007E3B  54                 	db	84	;'T'
   793  007E3C  41                 	db	65	;'A'
   794  007E3D  4D                 	db	77	;'M'
   795  007E3E  45                 	db	69	;'E'
   796  007E3F  4E                 	db	78	;'N'
   797  007E40  54                 	db	84	;'T'
   798  007E41  45                 	db	69	;'E'
   799  007E42  20                 	db	32
   800  007E43  0D                 	db	13
   801  007E44  0A                 	db	10
   802  007E45  00                 	db	0
   803  007E46                     STR_18:
   804  007E46  0D                 	db	13
   805  007E47  0A                 	db	10
   806  007E48  20                 	db	32
   807  007E49  32                 	db	50	;'2'
   808  007E4A  2E                 	db	46
   809  007E4B  20                 	db	32
   810  007E4C  41                 	db	65	;'A'
   811  007E4D  73                 	db	115	;'s'
   812  007E4E  69                 	db	105	;'i'
   813  007E4F  67                 	db	103	;'g'
   814  007E50  6E                 	db	110	;'n'
   815  007E51  61                 	db	97	;'a'
   816  007E52  72                 	db	114	;'r'
   817  007E53  20                 	db	32
   818  007E54  48                 	db	72	;'H'
   819  007E55  6F                 	db	111	;'o'
   820  007E56  72                 	db	114	;'r'
   821  007E57  61                 	db	97	;'a'
   822  007E58  72                 	db	114	;'r'
   823  007E59  69                 	db	105	;'i'
   824  007E5A  6F                 	db	111	;'o'
   825  007E5B  73                 	db	115	;'s'
   826  007E5C  20                 	db	32
   827  007E5D  70                 	db	112	;'p'
   828  007E5E  61                 	db	97	;'a'
   829  007E5F  72                 	db	114	;'r'
   830  007E60  61                 	db	97	;'a'
   831  007E61  20                 	db	32
   832  007E62  72                 	db	114	;'r'
   833  007E63  65                 	db	101	;'e'
   834  007E64  67                 	db	103	;'g'
   835  007E65  61                 	db	97	;'a'
   836  007E66  72                 	db	114	;'r'
   837  007E67  20                 	db	32
   838  007E68  0D                 	db	13
   839  007E69  0A                 	db	10
   840  007E6A  00                 	db	0
   841  007E6B                     STR_21:
   842  007E6B  0D                 	db	13
   843  007E6C  0A                 	db	10
   844  007E6D  20                 	db	32
   845  007E6E  35                 	db	53	;'5'
   846  007E6F  2E                 	db	46
   847  007E70  20                 	db	32
   848  007E71  4D                 	db	77	;'M'
   849  007E72  6F                 	db	111	;'o'
   850  007E73  73                 	db	115	;'s'
   851  007E74  74                 	db	116	;'t'
   852  007E75  72                 	db	114	;'r'
   853  007E76  61                 	db	97	;'a'
   854  007E77  72                 	db	114	;'r'
   855  007E78  20                 	db	32
   856  007E79  76                 	db	118	;'v'
   857  007E7A  61                 	db	97	;'a'
   858  007E7B  6C                 	db	108	;'l'
   859  007E7C  6F                 	db	111	;'o'
   860  007E7D  72                 	db	114	;'r'
   861  007E7E  65                 	db	101	;'e'
   862  007E7F  73                 	db	115	;'s'
   863  007E80  20                 	db	32
   864  007E81  73                 	db	115	;'s'
   865  007E82  65                 	db	101	;'e'
   866  007E83  6E                 	db	110	;'n'
   867  007E84  73                 	db	115	;'s'
   868  007E85  6F                 	db	111	;'o'
   869  007E86  72                 	db	114	;'r'
   870  007E87  65                 	db	101	;'e'
   871  007E88  73                 	db	115	;'s'
   872  007E89  20                 	db	32
   873  007E8A  0D                 	db	13
   874  007E8B  0A                 	db	10
   875  007E8C  00                 	db	0
   876  007E8D                     STR_15:
   877  007E8D  0D                 	db	13
   878  007E8E  0A                 	db	10
   879  007E8F  53                 	db	83	;'S'
   880  007E90  65                 	db	101	;'e'
   881  007E91  6E                 	db	110	;'n'
   882  007E92  73                 	db	115	;'s'
   883  007E93  6F                 	db	111	;'o'
   884  007E94  72                 	db	114	;'r'
   885  007E95  65                 	db	101	;'e'
   886  007E96  73                 	db	115	;'s'
   887  007E97  20                 	db	32
   888  007E98  4C                 	db	76	;'L'
   889  007E99  65                 	db	101	;'e'
   890  007E9A  69                 	db	105	;'i'
   891  007E9B  64                 	db	100	;'d'
   892  007E9C  6F                 	db	111	;'o'
   893  007E9D  73                 	db	115	;'s'
   894  007E9E  20                 	db	32
   895  007E9F  63                 	db	99	;'c'
   896  007EA0  6F                 	db	111	;'o'
   897  007EA1  6E                 	db	110	;'n'
   898  007EA2  20                 	db	32
   899  007EA3  45                 	db	69	;'E'
   900  007EA4  78                 	db	120	;'x'
   901  007EA5  69                 	db	105	;'i'
   902  007EA6  74                 	db	116	;'t'
   903  007EA7  6F                 	db	111	;'o'
   904  007EA8  21                 	db	33
   905  007EA9  0D                 	db	13
   906  007EAA  0A                 	db	10
   907  007EAB  0A                 	db	10
   908  007EAC  00                 	db	0
   909  007EAD                     STR_20:
   910  007EAD  0D                 	db	13
   911  007EAE  0A                 	db	10
   912  007EAF  20                 	db	32
   913  007EB0  34                 	db	52	;'4'
   914  007EB1  2E                 	db	46
   915  007EB2  20                 	db	32
   916  007EB3  44                 	db	68	;'D'
   917  007EB4  61                 	db	97	;'a'
   918  007EB5  6D                 	db	109	;'m'
   919  007EB6  65                 	db	101	;'e'
   920  007EB7  20                 	db	32
   921  007EB8  64                 	db	100	;'d'
   922  007EB9  61                 	db	97	;'a'
   923  007EBA  74                 	db	116	;'t'
   924  007EBB  6F                 	db	111	;'o'
   925  007EBC  73                 	db	115	;'s'
   926  007EBD  20                 	db	32
   927  007EBE  64                 	db	100	;'d'
   928  007EBF  65                 	db	101	;'e'
   929  007EC0  6C                 	db	108	;'l'
   930  007EC1  20                 	db	32
   931  007EC2  73                 	db	115	;'s'
   932  007EC3  69                 	db	105	;'i'
   933  007EC4  73                 	db	115	;'s'
   934  007EC5  74                 	db	116	;'t'
   935  007EC6  65                 	db	101	;'e'
   936  007EC7  6D                 	db	109	;'m'
   937  007EC8  61                 	db	97	;'a'
   938  007EC9  20                 	db	32
   939  007ECA  0D                 	db	13
   940  007ECB  0A                 	db	10
   941  007ECC  00                 	db	0
   942  007ECD                     STR_29:
   943  007ECD  0D                 	db	13
   944  007ECE  0A                 	db	10
   945  007ECF  0A                 	db	10
   946  007ED0  4C                 	db	76	;'L'
   947  007ED1  61                 	db	97	;'a'
   948  007ED2  20                 	db	32
   949  007ED3  48                 	db	72	;'H'
   950  007ED4  75                 	db	117	;'u'
   951  007ED5  6D                 	db	109	;'m'
   952  007ED6  65                 	db	101	;'e'
   953  007ED7  64                 	db	100	;'d'
   954  007ED8  61                 	db	97	;'a'
   955  007ED9  64                 	db	100	;'d'
   956  007EDA  20                 	db	32
   957  007EDB  41                 	db	65	;'A'
   958  007EDC  6D                 	db	109	;'m'
   959  007EDD  62                 	db	98	;'b'
   960  007EDE  69                 	db	105	;'i'
   961  007EDF  65                 	db	101	;'e'
   962  007EE0  6E                 	db	110	;'n'
   963  007EE1  74                 	db	116	;'t'
   964  007EE2  65                 	db	101	;'e'
   965  007EE3  20                 	db	32
   966  007EE4  65                 	db	101	;'e'
   967  007EE5  73                 	db	115	;'s'
   968  007EE6  3A                 	db	58	;':'
   969  007EE7  20                 	db	32
   970  007EE8  25                 	db	37
   971  007EE9  64                 	db	100	;'d'
   972  007EEA  0D                 	db	13
   973  007EEB  0A                 	db	10
   974  007EEC  00                 	db	0
   975  007EED                     STR_3:
   976  007EED  0D                 	db	13
   977  007EEE  0A                 	db	10
   978  007EEF  20                 	db	32
   979  007EF0  45                 	db	69	;'E'
   980  007EF1  6E                 	db	110	;'n'
   981  007EF2  76                 	db	118	;'v'
   982  007EF3  69                 	db	105	;'i'
   983  007EF4  65                 	db	101	;'e'
   984  007EF5  20                 	db	32
   985  007EF6  6C                 	db	108	;'l'
   986  007EF7  6F                 	db	111	;'o'
   987  007EF8  73                 	db	115	;'s'
   988  007EF9  20                 	db	32
   989  007EFA  4D                 	db	77	;'M'
   990  007EFB  69                 	db	105	;'i'
   991  007EFC  6E                 	db	110	;'n'
   992  007EFD  75                 	db	117	;'u'
   993  007EFE  74                 	db	116	;'t'
   994  007EFF  6F                 	db	111	;'o'
   995  007F00  73                 	db	115	;'s'
   996  007F01  20                 	db	32
   997  007F02  45                 	db	69	;'E'
   998  007F03  6A                 	db	106	;'j'
   999  007F04  3A                 	db	58	;':'
  1000  007F05  20                 	db	32
  1001  007F06  32                 	db	50	;'2'
  1002  007F07  35                 	db	53	;'5'
  1003  007F08  20                 	db	32
  1004  007F09  0D                 	db	13
  1005  007F0A  0A                 	db	10
  1006  007F0B  00                 	db	0
  1007  007F0C                     STR_30:
  1008  007F0C  0D                 	db	13
  1009  007F0D  0A                 	db	10
  1010  007F0E  0A                 	db	10
  1011  007F0F  4C                 	db	76	;'L'
  1012  007F10  61                 	db	97	;'a'
  1013  007F11  20                 	db	32
  1014  007F12  54                 	db	84	;'T'
  1015  007F13  65                 	db	101	;'e'
  1016  007F14  6D                 	db	109	;'m'
  1017  007F15  70                 	db	112	;'p'
  1018  007F16  65                 	db	101	;'e'
  1019  007F17  72                 	db	114	;'r'
  1020  007F18  61                 	db	97	;'a'
  1021  007F19  74                 	db	116	;'t'
  1022  007F1A  75                 	db	117	;'u'
  1023  007F1B  72                 	db	114	;'r'
  1024  007F1C  61                 	db	97	;'a'
  1025  007F1D  20                 	db	32
  1026  007F1E  65                 	db	101	;'e'
  1027  007F1F  73                 	db	115	;'s'
  1028  007F20  3A                 	db	58	;':'
  1029  007F21  20                 	db	32
  1030  007F22  25                 	db	37
  1031  007F23  64                 	db	100	;'d'
  1032  007F24  20                 	db	32
  1033  007F25  43                 	db	67	;'C'
  1034  007F26  0D                 	db	13
  1035  007F27  0A                 	db	10
  1036  007F28  00                 	db	0
  1037  007F29                     STR_14:
  1038  007F29  0D                 	db	13
  1039  007F2A  0A                 	db	10
  1040  007F2B  44                 	db	68	;'D'
  1041  007F2C  61                 	db	97	;'a'
  1042  007F2D  6D                 	db	109	;'m'
  1043  007F2E  65                 	db	101	;'e'
  1044  007F2F  20                 	db	32
  1045  007F30  44                 	db	68	;'D'
  1046  007F31  41                 	db	65	;'A'
  1047  007F32  54                 	db	84	;'T'
  1048  007F33  4F                 	db	79	;'O'
  1049  007F34  53                 	db	83	;'S'
  1050  007F35  20                 	db	32
  1051  007F36  44                 	db	68	;'D'
  1052  007F37  45                 	db	69	;'E'
  1053  007F38  4C                 	db	76	;'L'
  1054  007F39  20                 	db	32
  1055  007F3A  53                 	db	83	;'S'
  1056  007F3B  45                 	db	69	;'E'
  1057  007F3C  4E                 	db	78	;'N'
  1058  007F3D  53                 	db	83	;'S'
  1059  007F3E  4F                 	db	79	;'O'
  1060  007F3F  52                 	db	82	;'R'
  1061  007F40  20                 	db	32
  1062  007F41  3A                 	db	58	;':'
  1063  007F42  0D                 	db	13
  1064  007F43  0A                 	db	10
  1065  007F44  00                 	db	0
  1066  007F45                     STR_17:
  1067  007F45  0D                 	db	13
  1068  007F46  0A                 	db	10
  1069  007F47  20                 	db	32
  1070  007F48  31                 	db	49	;'1'
  1071  007F49  2E                 	db	46
  1072  007F4A  20                 	db	32
  1073  007F4B  46                 	db	70	;'F'
  1074  007F4C  69                 	db	105	;'i'
  1075  007F4D  6A                 	db	106	;'j'
  1076  007F4E  61                 	db	97	;'a'
  1077  007F4F  72                 	db	114	;'r'
  1078  007F50  20                 	db	32
  1079  007F51  48                 	db	72	;'H'
  1080  007F52  6F                 	db	111	;'o'
  1081  007F53  72                 	db	114	;'r'
  1082  007F54  61                 	db	97	;'a'
  1083  007F55  20                 	db	32
  1084  007F56  41                 	db	65	;'A'
  1085  007F57  63                 	db	99	;'c'
  1086  007F58  74                 	db	116	;'t'
  1087  007F59  75                 	db	117	;'u'
  1088  007F5A  61                 	db	97	;'a'
  1089  007F5B  6C                 	db	108	;'l'
  1090  007F5C  20                 	db	32
  1091  007F5D  0D                 	db	13
  1092  007F5E  0A                 	db	10
  1093  007F5F  00                 	db	0
  1094  007F60                     STR_8:
  1095  007F60  0D                 	db	13
  1096  007F61  0A                 	db	10
  1097  007F62  20                 	db	32
  1098  007F63  48                 	db	72	;'H'
  1099  007F64  6F                 	db	111	;'o'
  1100  007F65  72                 	db	114	;'r'
  1101  007F66  61                 	db	97	;'a'
  1102  007F67  72                 	db	114	;'r'
  1103  007F68  69                 	db	105	;'i'
  1104  007F69  6F                 	db	111	;'o'
  1105  007F6A  20                 	db	32
  1106  007F6B  4D                 	db	77	;'M'
  1107  007F6C  6F                 	db	111	;'o'
  1108  007F6D  64                 	db	100	;'d'
  1109  007F6E  69                 	db	105	;'i'
  1110  007F6F  66                 	db	102	;'f'
  1111  007F70  69                 	db	105	;'i'
  1112  007F71  63                 	db	99	;'c'
  1113  007F72  61                 	db	97	;'a'
  1114  007F73  64                 	db	100	;'d'
  1115  007F74  6F                 	db	111	;'o'
  1116  007F75  21                 	db	33
  1117  007F76  20                 	db	32
  1118  007F77  0D                 	db	13
  1119  007F78  0A                 	db	10
  1120  007F79  00                 	db	0
  1121  007F7A                     STR_5:
  1122  007F7A  0D                 	db	13
  1123  007F7B  0A                 	db	10
  1124  007F7C  20                 	db	32
  1125  007F7D  4F                 	db	79	;'O'
  1126  007F7E  50                 	db	80	;'P'
  1127  007F7F  43                 	db	67	;'C'
  1128  007F80  49                 	db	73	;'I'
  1129  007F81  4F                 	db	79	;'O'
  1130  007F82  4E                 	db	78	;'N'
  1131  007F83  45                 	db	69	;'E'
  1132  007F84  53                 	db	83	;'S'
  1133  007F85  20                 	db	32
  1134  007F86  44                 	db	68	;'D'
  1135  007F87  45                 	db	69	;'E'
  1136  007F88  20                 	db	32
  1137  007F89  52                 	db	82	;'R'
  1138  007F8A  45                 	db	69	;'E'
  1139  007F8B  47                 	db	71	;'G'
  1140  007F8C  41                 	db	65	;'A'
  1141  007F8D  44                 	db	68	;'D'
  1142  007F8E  4F                 	db	79	;'O'
  1143  007F8F  20                 	db	32
  1144  007F90  0D                 	db	13
  1145  007F91  0A                 	db	10
  1146  007F92  00                 	db	0
  1147  007F93                     STR_9:
  1148  007F93  0D                 	db	13
  1149  007F94  0A                 	db	10
  1150  007F95  20                 	db	32
  1151  007F96  54                 	db	84	;'T'
  1152  007F97  49                 	db	73	;'I'
  1153  007F98  45                 	db	69	;'E'
  1154  007F99  4D                 	db	77	;'M'
  1155  007F9A  50                 	db	80	;'P'
  1156  007F9B  4F                 	db	79	;'O'
  1157  007F9C  20                 	db	32
  1158  007F9D  44                 	db	68	;'D'
  1159  007F9E  45                 	db	69	;'E'
  1160  007F9F  20                 	db	32
  1161  007FA0  52                 	db	82	;'R'
  1162  007FA1  45                 	db	69	;'E'
  1163  007FA2  47                 	db	71	;'G'
  1164  007FA3  41                 	db	65	;'A'
  1165  007FA4  44                 	db	68	;'D'
  1166  007FA5  4F                 	db	79	;'O'
  1167  007FA6  20                 	db	32
  1168  007FA7  0D                 	db	13
  1169  007FA8  0A                 	db	10
  1170  007FA9  00                 	db	0
  1171  007FAA                     STR_28:
  1172  007FAA  44                 	db	68	;'D'
  1173  007FAB  48                 	db	72	;'H'
  1174  007FAC  54                 	db	84	;'T'
  1175  007FAD  20                 	db	32
  1176  007FAE  4E                 	db	78	;'N'
  1177  007FAF  4F                 	db	79	;'O'
  1178  007FB0  20                 	db	32
  1179  007FB1  52                 	db	82	;'R'
  1180  007FB2  45                 	db	69	;'E'
  1181  007FB3  53                 	db	83	;'S'
  1182  007FB4  50                 	db	80	;'P'
  1183  007FB5  4F                 	db	79	;'O'
  1184  007FB6  4E                 	db	78	;'N'
  1185  007FB7  44                 	db	68	;'D'
  1186  007FB8  49                 	db	73	;'I'
  1187  007FB9  4F                 	db	79	;'O'
  1188  007FBA  0D                 	db	13
  1189  007FBB  0A                 	db	10
  1190  007FBC  00                 	db	0
  1191  007FBD                     STR_27:
  1192  007FBD  45                 	db	69	;'E'
  1193  007FBE  72                 	db	114	;'r'
  1194  007FBF  72                 	db	114	;'r'
  1195  007FC0  6F                 	db	111	;'o'
  1196  007FC1  72                 	db	114	;'r'
  1197  007FC2  20                 	db	32
  1198  007FC3  64                 	db	100	;'d'
  1199  007FC4  65                 	db	101	;'e'
  1200  007FC5  20                 	db	32
  1201  007FC6  6C                 	db	108	;'l'
  1202  007FC7  65                 	db	101	;'e'
  1203  007FC8  63                 	db	99	;'c'
  1204  007FC9  74                 	db	116	;'t'
  1205  007FCA  75                 	db	117	;'u'
  1206  007FCB  72                 	db	114	;'r'
  1207  007FCC  61                 	db	97	;'a'
  1208  007FCD  0D                 	db	13
  1209  007FCE  0A                 	db	10
  1210  007FCF  00                 	db	0
  1211  007FD0                     STR_1:
  1212  007FD0  0D                 	db	13
  1213  007FD1  0A                 	db	10
  1214  007FD2  20                 	db	32
  1215  007FD3  46                 	db	70	;'F'
  1216  007FD4  49                 	db	73	;'I'
  1217  007FD5  4A                 	db	74	;'J'
  1218  007FD6  41                 	db	65	;'A'
  1219  007FD7  20                 	db	32
  1220  007FD8  48                 	db	72	;'H'
  1221  007FD9  4F                 	db	79	;'O'
  1222  007FDA  52                 	db	82	;'R'
  1223  007FDB  41                 	db	65	;'A'
  1224  007FDC  20                 	db	32
  1225  007FDD  0D                 	db	13
  1226  007FDE  0A                 	db	10
  1227  007FDF  00                 	db	0
  1228  007FE0                     STR_26:
  1229  007FE0  25                 	db	37
  1230  007FE1  64                 	db	100	;'d'
  1231  007FE2  20                 	db	32
  1232  007FE3  7C                 	db	124
  1233  007FE4  20                 	db	32
  1234  007FE5  25                 	db	37
  1235  007FE6  64                 	db	100	;'d'
  1236  007FE7  20                 	db	32
  1237  007FE8  7C                 	db	124
  1238  007FE9  20                 	db	32
  1239  007FEA  25                 	db	37
  1240  007FEB  64                 	db	100	;'d'
  1241  007FEC  20                 	db	32
  1242  007FED  0D                 	db	13
  1243  007FEE  0A                 	db	10
  1244  007FEF  00                 	db	0
  1245  007FF0                     STR_22:
  1246  007FF0  0D                 	db	13
  1247  007FF1  0A                 	db	10
  1248  007FF2  20                 	db	32
  1249  007FF3  4F                 	db	79	;'O'
  1250  007FF4  70                 	db	112	;'p'
  1251  007FF5  63                 	db	99	;'c'
  1252  007FF6  69                 	db	105	;'i'
  1253  007FF7  6F                 	db	111	;'o'
  1254  007FF8  6E                 	db	110	;'n'
  1255  007FF9  3A                 	db	58	;':'
  1256  007FFA  20                 	db	32
  1257  007FFB  20                 	db	32
  1258  007FFC  0D                 	db	13
  1259  007FFD  00                 	db	0
  1260  0000                     
  1261                           ; #config settings
  1262  007FFE  00                 	db	0	; dummy byte at the end
  1263  0000                     
  1264                           	psect	cinit
  1265  001F30                     __pcinit:
  1266                           	opt callstack 0
  1267  001F30                     start_initialization:
  1268                           	opt callstack 0
  1269  001F30                     __initialization:
  1270                           	opt callstack 0
  1271                           
  1272                           ; Initialize objects allocated to BANK0 (4 bytes)
  1273                           ; load TBLPTR registers with __pidataBANK0
  1274  001F30  0ED0               	movlw	low __pidataBANK0
  1275  001F32  6EF6               	movwf	tblptrl,c
  1276  001F34  0E22               	movlw	high __pidataBANK0
  1277  001F36  6EF7               	movwf	tblptrh,c
  1278  001F38  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1279  001F3A  6EF8               	movwf	tblptru,c
  1280  001F3C  EE00  F0FA         	lfsr	0,__pdataBANK0
  1281  001F40  EE10 F004          	lfsr	1,4
  1282  001F44                     copy_data0:
  1283  001F44  0009               	tblrd		*+
  1284  001F46  CFF5 FFEE          	movff	tablat,postinc0
  1285  001F4A  50E5               	movf	postdec1,w,c
  1286  001F4C  50E1               	movf	fsr1l,w,c
  1287  001F4E  E1FA               	bnz	copy_data0
  1288                           
  1289                           ; Clear objects allocated to BANK1 (72 bytes)
  1290  001F50  EE01  F000         	lfsr	0,__pbssBANK1
  1291  001F54  0E48               	movlw	72
  1292  001F56                     clear_0:
  1293  001F56  6AEE               	clrf	postinc0,c
  1294  001F58  06E8               	decf	wreg,f,c
  1295  001F5A  E1FD               	bnz	clear_0
  1296                           
  1297                           ; Clear objects allocated to BANK0 (78 bytes)
  1298  001F5C  EE00  F060         	lfsr	0,__pbssBANK0
  1299  001F60  0E4E               	movlw	78
  1300  001F62                     clear_1:
  1301  001F62  6AEE               	clrf	postinc0,c
  1302  001F64  06E8               	decf	wreg,f,c
  1303  001F66  E1FD               	bnz	clear_1
  1304                           
  1305                           ; Clear objects allocated to COMRAM (1 bytes)
  1306  001F68  6A5E               	clrf	__pbssCOMRAM& (0+255),c
  1307  001F6A                     end_of_initialization:
  1308                           	opt callstack 0
  1309  001F6A                     __end_of__initialization:
  1310                           	opt callstack 0
  1311  001F6A  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1312  001F6C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1313  001F6E  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1314  001F70  6EF8               	movwf	tblptru,c
  1315  001F72  0100               	movlb	0
  1316  001F74  EF7F  F00C         	goto	_main	;jump to C main() function
  1317                           
  1318                           	psect	bssCOMRAM
  1319  00005E                     __pbssCOMRAM:
  1320                           	opt callstack 0
  1321  00005E                     _esperandoDatos:
  1322                           	opt callstack 0
  1323  00005E                     	ds	1
  1324                           
  1325                           	psect	bssBANK0
  1326  000060                     __pbssBANK0:
  1327                           	opt callstack 0
  1328  000060                     _sensores:
  1329                           	opt callstack 0
  1330  000060                     	ds	24
  1331  000078                     _nout:
  1332                           	opt callstack 0
  1333  000078                     	ds	2
  1334  00007A                     _width:
  1335                           	opt callstack 0
  1336  00007A                     	ds	2
  1337  00007C                     _prec:
  1338                           	opt callstack 0
  1339  00007C                     	ds	2
  1340  00007E                     _flags:
  1341                           	opt callstack 0
  1342  00007E                     	ds	2
  1343  000080                     _contInterrupciones:
  1344                           	opt callstack 0
  1345  000080                     	ds	2
  1346  000082                     _peticionLecturaSensores:
  1347                           	opt callstack 0
  1348  000082                     	ds	1
  1349  000083                     _regando:
  1350                           	opt callstack 0
  1351  000083                     	ds	1
  1352  000084                     _minutosTranscurridos:
  1353                           	opt callstack 0
  1354  000084                     	ds	1
  1355  000085                     _minutosRegar:
  1356                           	opt callstack 0
  1357  000085                     	ds	1
  1358  000086                     _overflowTimer:
  1359                           	opt callstack 0
  1360  000086                     	ds	1
  1361  000087                     _datoRecibido:
  1362                           	opt callstack 0
  1363  000087                     	ds	1
  1364  000088                     _segundos:
  1365                           	opt callstack 0
  1366  000088                     	ds	1
  1367  000089                     _minutos:
  1368                           	opt callstack 0
  1369  000089                     	ds	1
  1370  00008A                     _hora:
  1371                           	opt callstack 0
  1372  00008A                     	ds	1
  1373  00008B                     _esperaDatoConcluida:
  1374                           	opt callstack 0
  1375  00008B                     	ds	1
  1376  00008C                     _byteUart:
  1377                           	opt callstack 0
  1378  00008C                     	ds	1
  1379  00008D                     _tiempoInactividadTrans:
  1380                           	opt callstack 0
  1381  00008D                     	ds	1
  1382  00008E                     _dbuf:
  1383                           	opt callstack 0
  1384  00008E                     	ds	32
  1385                           
  1386                           	psect	dataBANK0
  1387  0000FA                     __pdataBANK0:
  1388                           	opt callstack 0
  1389  0000FA                     _VALOR_TIMER0:
  1390                           	opt callstack 0
  1391  0000FA                     	ds	2
  1392  0000FC                     _VALOR_TIMER0UART:
  1393                           	opt callstack 0
  1394  0000FC                     	ds	2
  1395                           
  1396                           	psect	bssBANK1
  1397  000100                     __pbssBANK1:
  1398                           	opt callstack 0
  1399  000100                     _horarios:
  1400                           	opt callstack 0
  1401  000100                     	ds	72
  1402                           
  1403                           	psect	cstackBANK0
  1404  0000AE                     __pcstackBANK0:
  1405                           	opt callstack 0
  1406  0000AE                     ?_sprintf:
  1407                           	opt callstack 0
  1408  0000AE                     sprintf@s:
  1409                           	opt callstack 0
  1410                           
  1411                           ; 2 bytes @ 0x0
  1412  0000AE                     	ds	2
  1413  0000B0                     sprintf@fmt:
  1414                           	opt callstack 0
  1415                           
  1416                           ; 2 bytes @ 0x2
  1417  0000B0                     	ds	10
  1418  0000BA                     sprintf@ap:
  1419                           	opt callstack 0
  1420                           
  1421                           ; 2 bytes @ 0xC
  1422  0000BA                     	ds	2
  1423  0000BC                     sprintf@f:
  1424                           	opt callstack 0
  1425                           
  1426                           ; 6 bytes @ 0xE
  1427  0000BC                     	ds	6
  1428  0000C2                     dameDatosSistema@buffer:
  1429                           	opt callstack 0
  1430  0000C2                     mostrarDatosSensores@buffer:
  1431                           	opt callstack 0
  1432  0000C2                     mostrarDatosSensoresWIFI@buffer:
  1433                           	opt callstack 0
  1434                           
  1435                           ; 50 bytes @ 0x14
  1436  0000C2                     	ds	50
  1437  0000F4                     mostrarDatosSensores@temperatura:
  1438                           	opt callstack 0
  1439  0000F4                     mostrarDatosSensoresWIFI@temperatura:
  1440                           	opt callstack 0
  1441  0000F4                     dameDatosSistema@i:
  1442                           	opt callstack 0
  1443                           
  1444                           ; 2 bytes @ 0x46
  1445  0000F4                     	ds	1
  1446  0000F5                     mostrarDatosSensores@humedad:
  1447                           	opt callstack 0
  1448  0000F5                     mostrarDatosSensoresWIFI@humedad:
  1449                           	opt callstack 0
  1450                           
  1451                           ; 1 bytes @ 0x47
  1452  0000F5                     	ds	1
  1453  0000F6                     mostrarDatosSensores@i:
  1454                           	opt callstack 0
  1455  0000F6                     mostrarDatosSensoresWIFI@i:
  1456                           	opt callstack 0
  1457                           
  1458                           ; 2 bytes @ 0x48
  1459  0000F6                     	ds	2
  1460  0000F8                     mostrarDatosSensores@porcentajeHumedad:
  1461                           	opt callstack 0
  1462                           
  1463                           ; 2 bytes @ 0x4A
  1464  0000F8                     	ds	2
  1465                           
  1466                           	psect	cstackCOMRAM
  1467  000001                     __pcstackCOMRAM:
  1468                           	opt callstack 0
  1469  000001                     ??_i2c_espera:
  1470  000001                     ??_convertirDato:
  1471  000001                     ??_DHT11_Start:
  1472  000001                     ?_strlen:
  1473                           	opt callstack 0
  1474  000001                     ?_horaRegar:
  1475                           	opt callstack 0
  1476  000001                     ?_dameHumedadSuelo:
  1477                           	opt callstack 0
  1478  000001                     ?___wmul:
  1479                           	opt callstack 0
  1480  000001                     ?___awdiv:
  1481                           	opt callstack 0
  1482  000001                     ?___aldiv:
  1483                           	opt callstack 0
  1484  000001                     ?___aodiv:
  1485                           	opt callstack 0
  1486  000001                     ?___aomod:
  1487                           	opt callstack 0
  1488  000001                     UART_write@dato:
  1489                           	opt callstack 0
  1490  000001                     DHT11_ReadData@i:
  1491                           	opt callstack 0
  1492  000001                     check_response@respuesta:
  1493                           	opt callstack 0
  1494  000001                     ___wmul@multiplier:
  1495                           	opt callstack 0
  1496  000001                     ___awdiv@dividend:
  1497                           	opt callstack 0
  1498  000001                     fputc@c:
  1499                           	opt callstack 0
  1500  000001                     strlen@s:
  1501                           	opt callstack 0
  1502  000001                     ___aldiv@dividend:
  1503                           	opt callstack 0
  1504  000001                     ___aodiv@dividend:
  1505                           	opt callstack 0
  1506  000001                     ___aomod@dividend:
  1507                           	opt callstack 0
  1508                           
  1509                           ; 8 bytes @ 0x0
  1510  000001                     	ds	1
  1511  000002                     i2c_envia_dato@dato:
  1512                           	opt callstack 0
  1513  000002                     i2c_recibe_dato@datoleido:
  1514                           	opt callstack 0
  1515  000002                     convertirDato@dato:
  1516                           	opt callstack 0
  1517  000002                     DHT11_ReadData@data:
  1518                           	opt callstack 0
  1519  000002                     UART_printf@cadena:
  1520                           	opt callstack 0
  1521                           
  1522                           ; 2 bytes @ 0x1
  1523  000002                     	ds	1
  1524  000003                     ??_dameHumedadSuelo:
  1525  000003                     escribe_rtc@dato:
  1526                           	opt callstack 0
  1527  000003                     leer_rtc@direccion:
  1528                           	opt callstack 0
  1529  000003                     convertirDato@datoR:
  1530                           	opt callstack 0
  1531  000003                     leer_eeprom@direccion:
  1532                           	opt callstack 0
  1533  000003                     ___wmul@multiplicand:
  1534                           	opt callstack 0
  1535  000003                     ___awdiv@divisor:
  1536                           	opt callstack 0
  1537  000003                     fputc@fp:
  1538                           	opt callstack 0
  1539  000003                     strlen@a:
  1540                           	opt callstack 0
  1541                           
  1542                           ; 2 bytes @ 0x2
  1543  000003                     	ds	1
  1544  000004                     escribe_rtc@direccion:
  1545                           	opt callstack 0
  1546  000004                     leer_rtc@dato:
  1547                           	opt callstack 0
  1548  000004                     dameTemperaturaHumedad@Humedad:
  1549                           	opt callstack 0
  1550                           
  1551                           ; 2 bytes @ 0x3
  1552  000004                     	ds	1
  1553  000005                     ??_fputc:
  1554  000005                     ??_setRtc:
  1555  000005                     ??_leer_eeprom:
  1556  000005                     dameHumedadSuelo@canalLeer:
  1557                           	opt callstack 0
  1558  000005                     ___awdiv@counter:
  1559                           	opt callstack 0
  1560  000005                     ___wmul@product:
  1561                           	opt callstack 0
  1562  000005                     ___aldiv@divisor:
  1563                           	opt callstack 0
  1564                           
  1565                           ; 4 bytes @ 0x4
  1566  000005                     	ds	1
  1567  000006                     setRtc@direccion:
  1568                           	opt callstack 0
  1569  000006                     leer_eeprom@dato:
  1570                           	opt callstack 0
  1571  000006                     ___awdiv@sign:
  1572                           	opt callstack 0
  1573  000006                     dameTemperaturaHumedad@Temperatura:
  1574                           	opt callstack 0
  1575                           
  1576                           ; 2 bytes @ 0x5
  1577  000006                     	ds	1
  1578  000007                     ??_lecturaAnalogaSensores:
  1579  000007                     setRtc@dato:
  1580                           	opt callstack 0
  1581  000007                     inicializarObjetos@i:
  1582                           	opt callstack 0
  1583  000007                     escribe_eeprom@direccion:
  1584                           	opt callstack 0
  1585  000007                     leeHorariosMemoria@contMemoria:
  1586                           	opt callstack 0
  1587  000007                     ___awdiv@quotient:
  1588                           	opt callstack 0
  1589  000007                     constructorSensor@s:
  1590                           	opt callstack 0
  1591                           
  1592                           ; 3 bytes @ 0x6
  1593  000007                     	ds	1
  1594  000008                     ??_dameTemperaturaHumedad:
  1595  000008                     setRtc@datoCapturado:
  1596                           	opt callstack 0
  1597  000008                     lecturaAnalogaSensores@i:
  1598                           	opt callstack 0
  1599                           
  1600                           ; 2 bytes @ 0x7
  1601  000008                     	ds	1
  1602  000009                     escribe_eeprom@dato:
  1603                           	opt callstack 0
  1604  000009                     ___aldiv@counter:
  1605                           	opt callstack 0
  1606  000009                     setRtc@i:
  1607                           	opt callstack 0
  1608  000009                     leeHorariosMemoria@i:
  1609                           	opt callstack 0
  1610  000009                     ___aodiv@divisor:
  1611                           	opt callstack 0
  1612  000009                     ___aomod@divisor:
  1613                           	opt callstack 0
  1614                           
  1615                           ; 8 bytes @ 0x8
  1616  000009                     	ds	1
  1617  00000A                     ??_escribe_eeprom:
  1618  00000A                     constructorSensor@humedad:
  1619                           	opt callstack 0
  1620  00000A                     ___aldiv@sign:
  1621                           	opt callstack 0
  1622  00000A                     dameTemperaturaHumedad@checkSum:
  1623                           	opt callstack 0
  1624  00000A                     fputs@s:
  1625                           	opt callstack 0
  1626                           
  1627                           ; 2 bytes @ 0x9
  1628  00000A                     	ds	1
  1629  00000B                     constructorSensor@pin:
  1630                           	opt callstack 0
  1631  00000B                     setRtc@Rx:
  1632                           	opt callstack 0
  1633  00000B                     escribeHorariosMemoria@contMemoria:
  1634                           	opt callstack 0
  1635  00000B                     ___aldiv@quotient:
  1636                           	opt callstack 0
  1637                           
  1638                           ; 4 bytes @ 0xA
  1639  00000B                     	ds	1
  1640  00000C                     dameTemperaturaHumedad@humedadDecimal:
  1641                           	opt callstack 0
  1642  00000C                     restablecerDatosSensor@i:
  1643                           	opt callstack 0
  1644  00000C                     fputs@fp:
  1645                           	opt callstack 0
  1646                           
  1647                           ; 2 bytes @ 0xB
  1648  00000C                     	ds	1
  1649  00000D                     dameTemperaturaHumedad@temperaturaDecimal:
  1650                           	opt callstack 0
  1651  00000D                     escribeHorariosMemoria@i:
  1652                           	opt callstack 0
  1653                           
  1654                           ; 2 bytes @ 0xC
  1655  00000D                     	ds	1
  1656  00000E                     lecturaWifi@Rx:
  1657                           	opt callstack 0
  1658  00000E                     dameTemperaturaHumedad@humedad:
  1659                           	opt callstack 0
  1660  00000E                     fputs@c:
  1661                           	opt callstack 0
  1662                           
  1663                           ; 1 bytes @ 0xD
  1664  00000E                     	ds	1
  1665  00000F                     asignarHorarios@hora:
  1666                           	opt callstack 0
  1667  00000F                     setTiempoRegar@tiempoRegar:
  1668                           	opt callstack 0
  1669  00000F                     dameTemperaturaHumedad@temperatura:
  1670                           	opt callstack 0
  1671  00000F                     lecturaWifi@i:
  1672                           	opt callstack 0
  1673  00000F                     fputs@i:
  1674                           	opt callstack 0
  1675  00000F                     UART_init@BAUD:
  1676                           	opt callstack 0
  1677                           
  1678                           ; 4 bytes @ 0xE
  1679  00000F                     	ds	1
  1680  000010                     ?_estaSeco:
  1681                           	opt callstack 0
  1682  000010                     asignarHorarios@datoCapturado:
  1683                           	opt callstack 0
  1684  000010                     setTiempoRegar@hora:
  1685                           	opt callstack 0
  1686  000010                     estaSeco@s:
  1687                           	opt callstack 0
  1688                           
  1689                           ; 3 bytes @ 0xF
  1690  000010                     	ds	1
  1691  000011                     ?_pad:
  1692                           	opt callstack 0
  1693  000011                     ___aodiv@counter:
  1694                           	opt callstack 0
  1695  000011                     ___aomod@counter:
  1696                           	opt callstack 0
  1697  000011                     asignarHorarios@i:
  1698                           	opt callstack 0
  1699  000011                     setTiempoRegar@i:
  1700                           	opt callstack 0
  1701  000011                     pad@fp:
  1702                           	opt callstack 0
  1703                           
  1704                           ; 2 bytes @ 0x10
  1705  000011                     	ds	1
  1706  000012                     ___aodiv@sign:
  1707                           	opt callstack 0
  1708  000012                     ___aomod@sign:
  1709                           	opt callstack 0
  1710                           
  1711                           ; 1 bytes @ 0x11
  1712  000012                     	ds	1
  1713  000013                     ?_abs:
  1714                           	opt callstack 0
  1715  000013                     _estaSeco$770:
  1716                           	opt callstack 0
  1717  000013                     asignarHorarios@Rx:
  1718                           	opt callstack 0
  1719  000013                     setTiempoRegar@i_834:
  1720                           	opt callstack 0
  1721  000013                     pad@buf:
  1722                           	opt callstack 0
  1723  000013                     abs@a:
  1724                           	opt callstack 0
  1725  000013                     ___aodiv@quotient:
  1726                           	opt callstack 0
  1727                           
  1728                           ; 8 bytes @ 0x12
  1729  000013                     	ds	1
  1730  000014                     estaSeco@temperatura:
  1731                           	opt callstack 0
  1732                           
  1733                           ; 1 bytes @ 0x13
  1734  000014                     	ds	1
  1735  000015                     ??_abs:
  1736  000015                     ??_encenderBombas:
  1737  000015                     setTiempoRegar@datoCapturado:
  1738                           	opt callstack 0
  1739  000015                     pad@p:
  1740                           	opt callstack 0
  1741                           
  1742                           ; 2 bytes @ 0x14
  1743  000015                     	ds	1
  1744  000016                     setTiempoRegar@Rx:
  1745                           	opt callstack 0
  1746                           
  1747                           ; 1 bytes @ 0x15
  1748  000016                     	ds	1
  1749  000017                     ??_pad:
  1750  000017                     encenderBombas@flagSeco:
  1751                           	opt callstack 0
  1752  000017                     _UART_init$1778:
  1753                           	opt callstack 0
  1754                           
  1755                           ; 4 bytes @ 0x16
  1756  000017                     	ds	1
  1757  000018                     encenderBombas@i:
  1758                           	opt callstack 0
  1759  000018                     pad@i:
  1760                           	opt callstack 0
  1761                           
  1762                           ; 2 bytes @ 0x17
  1763  000018                     	ds	2
  1764  00001A                     pad@w:
  1765                           	opt callstack 0
  1766                           
  1767                           ; 2 bytes @ 0x19
  1768  00001A                     	ds	2
  1769  00001C                     ?_dtoa:
  1770                           	opt callstack 0
  1771  00001C                     dtoa@fp:
  1772                           	opt callstack 0
  1773                           
  1774                           ; 2 bytes @ 0x1B
  1775  00001C                     	ds	2
  1776  00001E                     dtoa@d:
  1777                           	opt callstack 0
  1778                           
  1779                           ; 8 bytes @ 0x1D
  1780  00001E                     	ds	8
  1781  000026                     ??_dtoa:
  1782                           
  1783                           ; 1 bytes @ 0x25
  1784  000026                     	ds	8
  1785  00002E                     _dtoa$1005:
  1786                           	opt callstack 0
  1787                           
  1788                           ; 2 bytes @ 0x2D
  1789  00002E                     	ds	2
  1790  000030                     dtoa@p:
  1791                           	opt callstack 0
  1792                           
  1793                           ; 2 bytes @ 0x2F
  1794  000030                     	ds	2
  1795  000032                     dtoa@w:
  1796                           	opt callstack 0
  1797                           
  1798                           ; 2 bytes @ 0x31
  1799  000032                     	ds	2
  1800  000034                     dtoa@s:
  1801                           	opt callstack 0
  1802                           
  1803                           ; 2 bytes @ 0x33
  1804  000034                     	ds	2
  1805  000036                     dtoa@n:
  1806                           	opt callstack 0
  1807                           
  1808                           ; 8 bytes @ 0x35
  1809  000036                     	ds	8
  1810  00003E                     dtoa@i:
  1811                           	opt callstack 0
  1812                           
  1813                           ; 2 bytes @ 0x3D
  1814  00003E                     	ds	2
  1815  000040                     ?_vfpfcnvrt:
  1816                           	opt callstack 0
  1817  000040                     vfpfcnvrt@fp:
  1818                           	opt callstack 0
  1819                           
  1820                           ; 2 bytes @ 0x3F
  1821  000040                     	ds	2
  1822  000042                     vfpfcnvrt@fmt:
  1823                           	opt callstack 0
  1824                           
  1825                           ; 2 bytes @ 0x41
  1826  000042                     	ds	2
  1827  000044                     vfpfcnvrt@ap:
  1828                           	opt callstack 0
  1829                           
  1830                           ; 2 bytes @ 0x43
  1831  000044                     	ds	2
  1832  000046                     ??_vfpfcnvrt:
  1833                           
  1834                           ; 1 bytes @ 0x45
  1835  000046                     	ds	2
  1836  000048                     vfpfcnvrt@ll:
  1837                           	opt callstack 0
  1838                           
  1839                           ; 8 bytes @ 0x47
  1840  000048                     	ds	8
  1841  000050                     ?_vfprintf:
  1842                           	opt callstack 0
  1843  000050                     vfprintf@fp:
  1844                           	opt callstack 0
  1845                           
  1846                           ; 2 bytes @ 0x4F
  1847  000050                     	ds	2
  1848  000052                     vfprintf@fmt:
  1849                           	opt callstack 0
  1850                           
  1851                           ; 2 bytes @ 0x51
  1852  000052                     	ds	2
  1853  000054                     vfprintf@ap:
  1854                           	opt callstack 0
  1855                           
  1856                           ; 2 bytes @ 0x53
  1857  000054                     	ds	2
  1858  000056                     vfprintf@cfmt:
  1859                           	opt callstack 0
  1860                           
  1861                           ; 2 bytes @ 0x55
  1862  000056                     	ds	2
  1863  000058                     ??_dameDatosSistema:
  1864  000058                     
  1865                           ; 1 bytes @ 0x57
  1866  000058                     	ds	3
  1867  00005B                     ??_sistemaPrincipal:
  1868                           
  1869                           ; 1 bytes @ 0x5A
  1870  00005B                     	ds	2
  1871  00005D                     sistemaPrincipal@opcion:
  1872                           	opt callstack 0
  1873                           
  1874                           ; 1 bytes @ 0x5C
  1875  00005D                     	ds	1
  1876  00005E                     
  1877                           ; 1 bytes @ 0x5D
  1878 ;;
  1879 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1880 ;;
  1881 ;; *************** function _main *****************
  1882 ;; Defined at:
  1883 ;;		line 764 in file "main.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;		None
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;  temperatura     1    0        unsigned char 
  1888 ;;  humedad         1    0        unsigned char 
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  1    wreg      void 
  1891 ;; Registers used:
  1892 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1898 ;;      Params:         0       0       0       0       0       0       0       0       0
  1899 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1900 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1901 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1902 ;;Total ram usage:        0 bytes
  1903 ;; Hardware stack levels required when called:   11
  1904 ;; This function calls:
  1905 ;;		_UART_init
  1906 ;;		_configurarAdc
  1907 ;;		_i2c_iniciar
  1908 ;;		_inicializarObjetos
  1909 ;;		_leeHorariosMemoria
  1910 ;;		_mostrarMenu
  1911 ;;		_restablecerDatosSensor
  1912 ;;		_sistemaPrincipal
  1913 ;;		_sistemaRegado
  1914 ;; This function is called by:
  1915 ;;		Startup code after reset
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           	psect	text0
  1920  0018FE                     __ptext0:
  1921                           	opt callstack 0
  1922  0018FE                     _main:
  1923                           	opt callstack 20
  1924  0018FE                     
  1925                           ;main.c: 766:     unsigned char humedad, temperatura;;main.c: 768:     INTCONbits.GIE = 
      +                          1;
  1926  0018FE  8EF2               	bsf	242,7,c	;volatile
  1927                           
  1928                           ;main.c: 769:     INTCONbits.PEIE = 1;
  1929  001900  8CF2               	bsf	242,6,c	;volatile
  1930                           
  1931                           ;main.c: 770:     INTCONbits.TMR0IE = 0;
  1932  001902  9AF2               	bcf	242,5,c	;volatile
  1933                           
  1934                           ;main.c: 771:     INTCONbits.TMR0IF = 0;
  1935  001904  94F2               	bcf	242,2,c	;volatile
  1936                           
  1937                           ;main.c: 772:     PIE1bits.RCIE = 1;
  1938  001906  8A9D               	bsf	157,5,c	;volatile
  1939  001908                     
  1940                           ;main.c: 774:     T0CON = 0b00000111;
  1941  001908  0E07               	movlw	7
  1942  00190A  6ED5               	movwf	213,c	;volatile
  1943  00190C                     
  1944                           ;main.c: 776:     INTCONbits.TMR0IE = 1;
  1945  00190C  8AF2               	bsf	242,5,c	;volatile
  1946  00190E                     
  1947                           ;main.c: 781:     restablecerDatosSensor();
  1948  00190E  EC5E  F00E         	call	_restablecerDatosSensor	;wreg free
  1949  001912                     
  1950                           ;main.c: 783:     UART_init(9600);
  1951  001912  0E80               	movlw	128
  1952  001914  6E0F               	movwf	UART_init@BAUD^0,c
  1953  001916  0E25               	movlw	37
  1954  001918  6E10               	movwf	(UART_init@BAUD+1)^0,c
  1955  00191A  0E00               	movlw	0
  1956  00191C  6E11               	movwf	(UART_init@BAUD+2)^0,c
  1957  00191E  0E00               	movlw	0
  1958  001920  6E12               	movwf	(UART_init@BAUD+3)^0,c
  1959  001922  EC5A  F00D         	call	_UART_init	;wreg free
  1960  001926                     
  1961                           ;main.c: 784:     i2c_iniciar();
  1962  001926  EC40  F011         	call	_i2c_iniciar	;wreg free
  1963  00192A                     
  1964                           ;main.c: 785:     configurarAdc();
  1965  00192A  EC57  F011         	call	_configurarAdc	;wreg free
  1966  00192E                     
  1967                           ;main.c: 786:     inicializarObjetos();
  1968  00192E  ECCA  F00C         	call	_inicializarObjetos	;wreg free
  1969  001932                     
  1970                           ;main.c: 788:     leeHorariosMemoria();
  1971  001932  EC48  F00A         	call	_leeHorariosMemoria	;wreg free
  1972  001936                     
  1973                           ;main.c: 791:     TRISD = 0;
  1974  001936  0E00               	movlw	0
  1975  001938  6E95               	movwf	149,c	;volatile
  1976  00193A                     
  1977                           ;main.c: 792:     LATD = 0;
  1978  00193A  0E00               	movlw	0
  1979  00193C  6E8C               	movwf	140,c	;volatile
  1980  00193E                     
  1981                           ;main.c: 794:     TMR0 = VALOR_TIMER0;
  1982  00193E  C0FA  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
  1983  001942  C0FB  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
  1984  001946                     
  1985                           ;main.c: 796:     INTCONbits.TMR0IF = 1;
  1986  001946  84F2               	bsf	242,2,c	;volatile
  1987  001948                     
  1988                           ;main.c: 798:     T0CONbits.TMR0ON = 1;
  1989  001948  8ED5               	bsf	213,7,c	;volatile
  1990  00194A                     
  1991                           ;main.c: 800:     mostrarMenu();
  1992  00194A  EC2D  F00E         	call	_mostrarMenu	;wreg free
  1993  00194E                     l3625:
  1994                           
  1995                           ;main.c: 806:         if (datoRecibido) {
  1996  00194E  0100               	movlb	0	; () banked
  1997  001950  5187               	movf	_datoRecibido& (0+255),w,b
  1998  001952  B4D8               	btfsc	status,2,c
  1999  001954  EFAE  F00C         	goto	u2811
  2000  001958  EFB0  F00C         	goto	u2810
  2001  00195C                     u2811:
  2002  00195C  EFB7  F00C         	goto	l3633
  2003  001960                     u2810:
  2004  001960                     
  2005                           ; BSR set to: 0
  2006                           ;main.c: 808:             datoRecibido = 0;
  2007  001960  0E00               	movlw	0
  2008  001962  6F87               	movwf	_datoRecibido& (0+255),b
  2009  001964                     
  2010                           ; BSR set to: 0
  2011                           ;main.c: 809:             byteUart -= 48;
  2012  001964  0E30               	movlw	48
  2013  001966  5F8C               	subwf	_byteUart& (0+255),f,b
  2014  001968                     
  2015                           ; BSR set to: 0
  2016                           ;main.c: 810:             sistemaPrincipal(byteUart);
  2017  001968  518C               	movf	_byteUart& (0+255),w,b
  2018  00196A  EC15  F00D         	call	_sistemaPrincipal
  2019  00196E                     l3633:
  2020                           
  2021                           ;main.c: 814:         if (overflowTimer) {
  2022  00196E  0100               	movlb	0	; () banked
  2023  001970  5186               	movf	_overflowTimer& (0+255),w,b
  2024  001972  B4D8               	btfsc	status,2,c
  2025  001974  EFBE  F00C         	goto	u2821
  2026  001978  EFC0  F00C         	goto	u2820
  2027  00197C                     u2821:
  2028  00197C  EFA7  F00C         	goto	l3625
  2029  001980                     u2820:
  2030  001980                     
  2031                           ; BSR set to: 0
  2032                           ;main.c: 816:             esperandoDatos = 0;
  2033  001980  0E00               	movlw	0
  2034  001982  6E5E               	movwf	_esperandoDatos^0,c
  2035                           
  2036                           ;main.c: 817:             overflowTimer = 0;
  2037  001984  0E00               	movlw	0
  2038  001986  6F86               	movwf	_overflowTimer& (0+255),b
  2039  001988                     
  2040                           ; BSR set to: 0
  2041                           ;main.c: 818:             sistemaRegado();
  2042  001988  EC2E  F00C         	call	_sistemaRegado	;wreg free
  2043  00198C  EFA7  F00C         	goto	l3625
  2044  001990  EF07  F000         	goto	start
  2045  001994                     __end_of_main:
  2046                           	opt callstack 0
  2047                           
  2048 ;; *************** function _sistemaRegado *****************
  2049 ;; Defined at:
  2050 ;;		line 590 in file "main.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;		None
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;		None
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  1    wreg      void 
  2057 ;; Registers used:
  2058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2064 ;;      Params:         0       0       0       0       0       0       0       0       0
  2065 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2066 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2067 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2068 ;;Total ram usage:        0 bytes
  2069 ;; Hardware stack levels used:    1
  2070 ;; Hardware stack levels required when called:    6
  2071 ;; This function calls:
  2072 ;;		_dameHoraActual
  2073 ;;		_encenderBombas
  2074 ;;		_horaRegar
  2075 ;;		_lecturaAnalogaSensores
  2076 ;;		_lecturaWifi
  2077 ;;		_mostrarMenu
  2078 ;; This function is called by:
  2079 ;;		_main
  2080 ;; This function uses a non-reentrant model
  2081 ;;
  2082                           
  2083                           	psect	text1
  2084  00185C                     __ptext1:
  2085                           	opt callstack 0
  2086  00185C                     _sistemaRegado:
  2087                           	opt callstack 24
  2088  00185C                     
  2089                           ;main.c: 594:     if (regando) {
  2090  00185C  0100               	movlb	0	; () banked
  2091  00185E  5183               	movf	_regando& (0+255),w,b
  2092  001860  B4D8               	btfsc	status,2,c
  2093  001862  EF35  F00C         	goto	u2721
  2094  001866  EF37  F00C         	goto	u2720
  2095  00186A                     u2721:
  2096  00186A  EF59  F00C         	goto	l3541
  2097  00186E                     u2720:
  2098  00186E                     
  2099                           ; BSR set to: 0
  2100                           ;main.c: 595:         contInterrupciones++;
  2101  00186E  4B80               	infsnz	_contInterrupciones& (0+255),f,b
  2102  001870  2B81               	incf	(_contInterrupciones+1)& (0+255),f,b
  2103  001872                     
  2104                           ; BSR set to: 0
  2105                           ;main.c: 597:         if (contInterrupciones == 6) {
  2106  001872  0E06               	movlw	6
  2107  001874  1980               	xorwf	_contInterrupciones& (0+255),w,b
  2108  001876  1181               	iorwf	(_contInterrupciones+1)& (0+255),w,b
  2109  001878  A4D8               	btfss	status,2,c
  2110  00187A  EF41  F00C         	goto	u2731
  2111  00187E  EF43  F00C         	goto	u2730
  2112  001882                     u2731:
  2113  001882  EF7E  F00C         	goto	l357
  2114  001886                     u2730:
  2115  001886                     
  2116                           ; BSR set to: 0
  2117                           ;main.c: 598:             contInterrupciones = 0;
  2118  001886  0E00               	movlw	0
  2119  001888  6F81               	movwf	(_contInterrupciones+1)& (0+255),b
  2120  00188A  0E00               	movlw	0
  2121  00188C  6F80               	movwf	_contInterrupciones& (0+255),b
  2122  00188E                     
  2123                           ; BSR set to: 0
  2124                           ;main.c: 599:             minutosTranscurridos++;
  2125  00188E  2B84               	incf	_minutosTranscurridos& (0+255),f,b
  2126  001890                     
  2127                           ; BSR set to: 0
  2128                           ;main.c: 602:             if (minutosTranscurridos >= minutosRegar) {
  2129  001890  5185               	movf	_minutosRegar& (0+255),w,b
  2130  001892  5D84               	subwf	_minutosTranscurridos& (0+255),w,b
  2131  001894  A0D8               	btfss	status,0,c
  2132  001896  EF4F  F00C         	goto	u2741
  2133  00189A  EF51  F00C         	goto	u2740
  2134  00189E                     u2741:
  2135  00189E  EF7E  F00C         	goto	l357
  2136  0018A2                     u2740:
  2137  0018A2                     
  2138                           ; BSR set to: 0
  2139                           ;main.c: 604:                 LATD = 0;
  2140  0018A2  0E00               	movlw	0
  2141  0018A4  6E8C               	movwf	140,c	;volatile
  2142                           
  2143                           ;main.c: 605:                 minutosTranscurridos = 0;
  2144  0018A6  0E00               	movlw	0
  2145  0018A8  6F84               	movwf	_minutosTranscurridos& (0+255),b
  2146                           
  2147                           ;main.c: 606:                 regando = 0;
  2148  0018AA  0E00               	movlw	0
  2149  0018AC  6F83               	movwf	_regando& (0+255),b
  2150  0018AE  EF7E  F00C         	goto	l357
  2151  0018B2                     l3541:
  2152                           
  2153                           ; BSR set to: 0
  2154                           ;main.c: 612:         dameHoraActual();
  2155  0018B2  ECA8  F010         	call	_dameHoraActual	;wreg free
  2156  0018B6                     
  2157                           ;main.c: 614:         if (horaRegar() && !minutos) {
  2158  0018B6  EC92  F010         	call	_horaRegar	;wreg free
  2159  0018BA  5001               	movf	?_horaRegar^0,w,c
  2160  0018BC  1002               	iorwf	(?_horaRegar+1)^0,w,c
  2161  0018BE  B4D8               	btfsc	status,2,c
  2162  0018C0  EF64  F00C         	goto	u2751
  2163  0018C4  EF66  F00C         	goto	u2750
  2164  0018C8                     u2751:
  2165  0018C8  EF7E  F00C         	goto	l357
  2166  0018CC                     u2750:
  2167  0018CC  0100               	movlb	0	; () banked
  2168  0018CE  5189               	movf	_minutos& (0+255),w,b
  2169  0018D0  A4D8               	btfss	status,2,c
  2170  0018D2  EF6D  F00C         	goto	u2761
  2171  0018D6  EF6F  F00C         	goto	u2760
  2172  0018DA                     u2761:
  2173  0018DA  EF7E  F00C         	goto	l357
  2174  0018DE                     u2760:
  2175  0018DE                     
  2176                           ; BSR set to: 0
  2177                           ;main.c: 626:                 lecturaAnalogaSensores();
  2178  0018DE  EC92  F00D         	call	_lecturaAnalogaSensores	;wreg free
  2179  0018E2                     
  2180                           ;main.c: 627:                 minutosRegar = horarios[hora].tiempoRegar;
  2181  0018E2  0100               	movlb	0	; () banked
  2182  0018E4  518A               	movf	_hora& (0+255),w,b
  2183  0018E6  0D03               	mullw	3
  2184  0018E8  0E02               	movlw	low (_horarios+2)
  2185  0018EA  24F3               	addwf	243,w,c
  2186  0018EC  6ED9               	movwf	fsr2l,c
  2187  0018EE  0E01               	movlw	high (_horarios+2)
  2188  0018F0  20F4               	addwfc	prodh,w,c
  2189  0018F2  6EDA               	movwf	fsr2h,c
  2190  0018F4  50DF               	movf	indf2,w,c
  2191  0018F6  6F85               	movwf	_minutosRegar& (0+255),b
  2192  0018F8                     
  2193                           ; BSR set to: 0
  2194                           ;main.c: 628:                 encenderBombas();
  2195  0018F8  EC09  F000         	call	_encenderBombas	;wreg free
  2196  0018FC                     l357:
  2197  0018FC  0012               	return		;funcret
  2198  0018FE                     __end_of_sistemaRegado:
  2199                           	opt callstack 0
  2200                           
  2201 ;; *************** function _horaRegar *****************
  2202 ;; Defined at:
  2203 ;;		line 133 in file "main.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;		None
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;		None
  2208 ;; Return value:  Size  Location     Type
  2209 ;;                  2    0[COMRAM] int 
  2210 ;; Registers used:
  2211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2217 ;;      Params:         2       0       0       0       0       0       0       0       0
  2218 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2219 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2220 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2221 ;;Total ram usage:        3 bytes
  2222 ;; Hardware stack levels used:    1
  2223 ;; Hardware stack levels required when called:    1
  2224 ;; This function calls:
  2225 ;;		Nothing
  2226 ;; This function is called by:
  2227 ;;		_sistemaRegado
  2228 ;; This function uses a non-reentrant model
  2229 ;;
  2230                           
  2231                           	psect	text2
  2232  002124                     __ptext2:
  2233                           	opt callstack 0
  2234  002124                     _horaRegar:
  2235                           	opt callstack 28
  2236  002124                     
  2237                           ;main.c: 135:     return horarios[hora].regar == 1;
  2238  002124  0100               	movlb	0	; () banked
  2239  002126  518A               	movf	_hora& (0+255),w,b
  2240  002128  0D03               	mullw	3
  2241  00212A  0E01               	movlw	low (_horarios+1)
  2242  00212C  24F3               	addwf	243,w,c
  2243  00212E  6ED9               	movwf	fsr2l,c
  2244  002130  0E01               	movlw	high (_horarios+1)
  2245  002132  20F4               	addwfc	prodh,w,c
  2246  002134  6EDA               	movwf	fsr2h,c
  2247  002136  04DE               	decf	postinc2,w,c
  2248  002138  B4D8               	btfsc	status,2,c
  2249  00213A  EFA1  F010         	goto	u2241
  2250  00213E  EFA4  F010         	goto	u2240
  2251  002142                     u2241:
  2252  002142  0E01               	movlw	1
  2253  002144  EFA5  F010         	goto	u2250
  2254  002148                     u2240:
  2255  002148  0E00               	movlw	0
  2256  00214A                     u2250:
  2257  00214A  6E01               	movwf	?_horaRegar^0,c
  2258  00214C  6A02               	clrf	(?_horaRegar+1)^0,c
  2259  00214E                     
  2260                           ; BSR set to: 0
  2261  00214E  0012               	return		;funcret
  2262  002150                     __end_of_horaRegar:
  2263                           	opt callstack 0
  2264                           
  2265 ;; *************** function _encenderBombas *****************
  2266 ;; Defined at:
  2267 ;;		line 244 in file "main.c"
  2268 ;; Parameters:    Size  Location     Type
  2269 ;;		None
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;  i               2   23[COMRAM] int 
  2272 ;;  flagSeco        1   22[COMRAM] unsigned char 
  2273 ;; Return value:  Size  Location     Type
  2274 ;;                  1    wreg      void 
  2275 ;; Registers used:
  2276 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2277 ;; Tracked objects:
  2278 ;;		On entry : 0/0
  2279 ;;		On exit  : 0/0
  2280 ;;		Unchanged: 0/0
  2281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2282 ;;      Params:         0       0       0       0       0       0       0       0       0
  2283 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2284 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2285 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2286 ;;Total ram usage:        5 bytes
  2287 ;; Hardware stack levels used:    1
  2288 ;; Hardware stack levels required when called:    5
  2289 ;; This function calls:
  2290 ;;		___wmul
  2291 ;;		_estaSeco
  2292 ;; This function is called by:
  2293 ;;		_sistemaRegado
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297                           	psect	text3
  2298  000012                     __ptext3:
  2299                           	opt callstack 0
  2300  000012                     _encenderBombas:
  2301                           	opt callstack 24
  2302  000012                     
  2303                           ;main.c: 246:     char flagSeco = 0;
  2304  000012  0E00               	movlw	0
  2305  000014  6E17               	movwf	encenderBombas@flagSeco^0,c
  2306                           
  2307                           ;main.c: 248:     for (int i = 0; i < 3; i++) {
  2308  000016  0E00               	movlw	0
  2309  000018  6E19               	movwf	(encenderBombas@i+1)^0,c
  2310  00001A  0E00               	movlw	0
  2311  00001C  6E18               	movwf	encenderBombas@i^0,c
  2312  00001E  EF33  F001         	goto	l3119
  2313  000022                     l3069:
  2314                           
  2315                           ;main.c: 253:                 if (estaSeco(sensores[i])) {
  2316  000022  C018  F001         	movff	encenderBombas@i,___wmul@multiplier
  2317  000026  C019  F002         	movff	encenderBombas@i+1,___wmul@multiplier+1
  2318  00002A  0E00               	movlw	0
  2319  00002C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2320  00002E  0E03               	movlw	3
  2321  000030  6E03               	movwf	___wmul@multiplicand^0,c
  2322  000032  ECE6  F010         	call	___wmul	;wreg free
  2323  000036  0E60               	movlw	low _sensores
  2324  000038  2401               	addwf	?___wmul^0,w,c
  2325  00003A  6ED9               	movwf	fsr2l,c
  2326  00003C  0E00               	movlw	high _sensores
  2327  00003E  2002               	addwfc	(?___wmul+1)^0,w,c
  2328  000040  6EDA               	movwf	fsr2h,c
  2329  000042  CFDE F010          	movff	postinc2,estaSeco@s
  2330  000046  CFDE F011          	movff	postinc2,estaSeco@s+1
  2331  00004A  CFDD F012          	movff	postdec2,estaSeco@s+2
  2332  00004E  EC70  F00F         	call	_estaSeco	;wreg free
  2333  000052  5010               	movf	?_estaSeco^0,w,c
  2334  000054  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2335  000056  B4D8               	btfsc	status,2,c
  2336  000058  EF30  F000         	goto	u2261
  2337  00005C  EF32  F000         	goto	u2260
  2338  000060                     u2261:
  2339  000060  EF61  F001         	goto	l3121
  2340  000064                     u2260:
  2341  000064                     
  2342                           ;main.c: 254:                     LATDbits.LATD0 = 1;
  2343  000064  808C               	bsf	140,0,c	;volatile
  2344  000066                     l3073:
  2345                           
  2346                           ;main.c: 255:                     flagSeco = 1;
  2347  000066  0E01               	movlw	1
  2348  000068  6E17               	movwf	encenderBombas@flagSeco^0,c
  2349  00006A  EF61  F001         	goto	l3121
  2350  00006E                     l3075:
  2351                           
  2352                           ;main.c: 260:                 if (estaSeco(sensores[i])) {
  2353  00006E  C018  F001         	movff	encenderBombas@i,___wmul@multiplier
  2354  000072  C019  F002         	movff	encenderBombas@i+1,___wmul@multiplier+1
  2355  000076  0E00               	movlw	0
  2356  000078  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2357  00007A  0E03               	movlw	3
  2358  00007C  6E03               	movwf	___wmul@multiplicand^0,c
  2359  00007E  ECE6  F010         	call	___wmul	;wreg free
  2360  000082  0E60               	movlw	low _sensores
  2361  000084  2401               	addwf	?___wmul^0,w,c
  2362  000086  6ED9               	movwf	fsr2l,c
  2363  000088  0E00               	movlw	high _sensores
  2364  00008A  2002               	addwfc	(?___wmul+1)^0,w,c
  2365  00008C  6EDA               	movwf	fsr2h,c
  2366  00008E  CFDE F010          	movff	postinc2,estaSeco@s
  2367  000092  CFDE F011          	movff	postinc2,estaSeco@s+1
  2368  000096  CFDD F012          	movff	postdec2,estaSeco@s+2
  2369  00009A  EC70  F00F         	call	_estaSeco	;wreg free
  2370  00009E  5010               	movf	?_estaSeco^0,w,c
  2371  0000A0  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2372  0000A2  B4D8               	btfsc	status,2,c
  2373  0000A4  EF56  F000         	goto	u2271
  2374  0000A8  EF58  F000         	goto	u2270
  2375  0000AC                     u2271:
  2376  0000AC  EF61  F001         	goto	l3121
  2377  0000B0                     u2270:
  2378  0000B0                     
  2379                           ;main.c: 261:                     LATDbits.LATD1 = 1;
  2380  0000B0  828C               	bsf	140,1,c	;volatile
  2381  0000B2  EF33  F000         	goto	l3073
  2382  0000B6                     l3081:
  2383                           
  2384                           ;main.c: 267:                 if (estaSeco(sensores[i])) {
  2385  0000B6  C018  F001         	movff	encenderBombas@i,___wmul@multiplier
  2386  0000BA  C019  F002         	movff	encenderBombas@i+1,___wmul@multiplier+1
  2387  0000BE  0E00               	movlw	0
  2388  0000C0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2389  0000C2  0E03               	movlw	3
  2390  0000C4  6E03               	movwf	___wmul@multiplicand^0,c
  2391  0000C6  ECE6  F010         	call	___wmul	;wreg free
  2392  0000CA  0E60               	movlw	low _sensores
  2393  0000CC  2401               	addwf	?___wmul^0,w,c
  2394  0000CE  6ED9               	movwf	fsr2l,c
  2395  0000D0  0E00               	movlw	high _sensores
  2396  0000D2  2002               	addwfc	(?___wmul+1)^0,w,c
  2397  0000D4  6EDA               	movwf	fsr2h,c
  2398  0000D6  CFDE F010          	movff	postinc2,estaSeco@s
  2399  0000DA  CFDE F011          	movff	postinc2,estaSeco@s+1
  2400  0000DE  CFDD F012          	movff	postdec2,estaSeco@s+2
  2401  0000E2  EC70  F00F         	call	_estaSeco	;wreg free
  2402  0000E6  5010               	movf	?_estaSeco^0,w,c
  2403  0000E8  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2404  0000EA  B4D8               	btfsc	status,2,c
  2405  0000EC  EF7A  F000         	goto	u2281
  2406  0000F0  EF7C  F000         	goto	u2280
  2407  0000F4                     u2281:
  2408  0000F4  EF61  F001         	goto	l3121
  2409  0000F8                     u2280:
  2410  0000F8                     
  2411                           ;main.c: 268:                     LATDbits.LATD2 = 1;
  2412  0000F8  848C               	bsf	140,2,c	;volatile
  2413  0000FA  EF33  F000         	goto	l3073
  2414  0000FE                     l3087:
  2415                           
  2416                           ;main.c: 274:                 if (estaSeco(sensores[i])) {
  2417  0000FE  C018  F001         	movff	encenderBombas@i,___wmul@multiplier
  2418  000102  C019  F002         	movff	encenderBombas@i+1,___wmul@multiplier+1
  2419  000106  0E00               	movlw	0
  2420  000108  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2421  00010A  0E03               	movlw	3
  2422  00010C  6E03               	movwf	___wmul@multiplicand^0,c
  2423  00010E  ECE6  F010         	call	___wmul	;wreg free
  2424  000112  0E60               	movlw	low _sensores
  2425  000114  2401               	addwf	?___wmul^0,w,c
  2426  000116  6ED9               	movwf	fsr2l,c
  2427  000118  0E00               	movlw	high _sensores
  2428  00011A  2002               	addwfc	(?___wmul+1)^0,w,c
  2429  00011C  6EDA               	movwf	fsr2h,c
  2430  00011E  CFDE F010          	movff	postinc2,estaSeco@s
  2431  000122  CFDE F011          	movff	postinc2,estaSeco@s+1
  2432  000126  CFDD F012          	movff	postdec2,estaSeco@s+2
  2433  00012A  EC70  F00F         	call	_estaSeco	;wreg free
  2434  00012E  5010               	movf	?_estaSeco^0,w,c
  2435  000130  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2436  000132  B4D8               	btfsc	status,2,c
  2437  000134  EF9E  F000         	goto	u2291
  2438  000138  EFA0  F000         	goto	u2290
  2439  00013C                     u2291:
  2440  00013C  EF61  F001         	goto	l3121
  2441  000140                     u2290:
  2442  000140                     
  2443                           ;main.c: 275:                     LATDbits.LATD3 = 1;
  2444  000140  868C               	bsf	140,3,c	;volatile
  2445  000142  EF33  F000         	goto	l3073
  2446  000146                     l3093:
  2447                           
  2448                           ;main.c: 281:                 if (estaSeco(sensores[i])) {
  2449  000146  C018  F001         	movff	encenderBombas@i,___wmul@multiplier
  2450  00014A  C019  F002         	movff	encenderBombas@i+1,___wmul@multiplier+1
  2451  00014E  0E00               	movlw	0
  2452  000150  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2453  000152  0E03               	movlw	3
  2454  000154  6E03               	movwf	___wmul@multiplicand^0,c
  2455  000156  ECE6  F010         	call	___wmul	;wreg free
  2456  00015A  0E60               	movlw	low _sensores
  2457  00015C  2401               	addwf	?___wmul^0,w,c
  2458  00015E  6ED9               	movwf	fsr2l,c
  2459  000160  0E00               	movlw	high _sensores
  2460  000162  2002               	addwfc	(?___wmul+1)^0,w,c
  2461  000164  6EDA               	movwf	fsr2h,c
  2462  000166  CFDE F010          	movff	postinc2,estaSeco@s
  2463  00016A  CFDE F011          	movff	postinc2,estaSeco@s+1
  2464  00016E  CFDD F012          	movff	postdec2,estaSeco@s+2
  2465  000172  EC70  F00F         	call	_estaSeco	;wreg free
  2466  000176  5010               	movf	?_estaSeco^0,w,c
  2467  000178  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2468  00017A  B4D8               	btfsc	status,2,c
  2469  00017C  EFC2  F000         	goto	u2301
  2470  000180  EFC4  F000         	goto	u2300
  2471  000184                     u2301:
  2472  000184  EF61  F001         	goto	l3121
  2473  000188                     u2300:
  2474  000188                     
  2475                           ;main.c: 282:                     LATDbits.LATD4 = 1;
  2476  000188  888C               	bsf	140,4,c	;volatile
  2477  00018A  EF33  F000         	goto	l3073
  2478  00018E                     l3099:
  2479                           
  2480                           ;main.c: 288:                 if (estaSeco(sensores[i])) {
  2481  00018E  C018  F001         	movff	encenderBombas@i,___wmul@multiplier
  2482  000192  C019  F002         	movff	encenderBombas@i+1,___wmul@multiplier+1
  2483  000196  0E00               	movlw	0
  2484  000198  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2485  00019A  0E03               	movlw	3
  2486  00019C  6E03               	movwf	___wmul@multiplicand^0,c
  2487  00019E  ECE6  F010         	call	___wmul	;wreg free
  2488  0001A2  0E60               	movlw	low _sensores
  2489  0001A4  2401               	addwf	?___wmul^0,w,c
  2490  0001A6  6ED9               	movwf	fsr2l,c
  2491  0001A8  0E00               	movlw	high _sensores
  2492  0001AA  2002               	addwfc	(?___wmul+1)^0,w,c
  2493  0001AC  6EDA               	movwf	fsr2h,c
  2494  0001AE  CFDE F010          	movff	postinc2,estaSeco@s
  2495  0001B2  CFDE F011          	movff	postinc2,estaSeco@s+1
  2496  0001B6  CFDD F012          	movff	postdec2,estaSeco@s+2
  2497  0001BA  EC70  F00F         	call	_estaSeco	;wreg free
  2498  0001BE  5010               	movf	?_estaSeco^0,w,c
  2499  0001C0  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2500  0001C2  B4D8               	btfsc	status,2,c
  2501  0001C4  EFE6  F000         	goto	u2311
  2502  0001C8  EFE8  F000         	goto	u2310
  2503  0001CC                     u2311:
  2504  0001CC  EF61  F001         	goto	l3121
  2505  0001D0                     u2310:
  2506  0001D0                     
  2507                           ;main.c: 289:                     LATDbits.LATD5 = 1;
  2508  0001D0  8A8C               	bsf	140,5,c	;volatile
  2509  0001D2  EF33  F000         	goto	l3073
  2510  0001D6                     l3105:
  2511                           
  2512                           ;main.c: 295:                 if (estaSeco(sensores[i])) {
  2513  0001D6  C018  F001         	movff	encenderBombas@i,___wmul@multiplier
  2514  0001DA  C019  F002         	movff	encenderBombas@i+1,___wmul@multiplier+1
  2515  0001DE  0E00               	movlw	0
  2516  0001E0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2517  0001E2  0E03               	movlw	3
  2518  0001E4  6E03               	movwf	___wmul@multiplicand^0,c
  2519  0001E6  ECE6  F010         	call	___wmul	;wreg free
  2520  0001EA  0E60               	movlw	low _sensores
  2521  0001EC  2401               	addwf	?___wmul^0,w,c
  2522  0001EE  6ED9               	movwf	fsr2l,c
  2523  0001F0  0E00               	movlw	high _sensores
  2524  0001F2  2002               	addwfc	(?___wmul+1)^0,w,c
  2525  0001F4  6EDA               	movwf	fsr2h,c
  2526  0001F6  CFDE F010          	movff	postinc2,estaSeco@s
  2527  0001FA  CFDE F011          	movff	postinc2,estaSeco@s+1
  2528  0001FE  CFDD F012          	movff	postdec2,estaSeco@s+2
  2529  000202  EC70  F00F         	call	_estaSeco	;wreg free
  2530  000206  5010               	movf	?_estaSeco^0,w,c
  2531  000208  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2532  00020A  B4D8               	btfsc	status,2,c
  2533  00020C  EF0A  F001         	goto	u2321
  2534  000210  EF0C  F001         	goto	u2320
  2535  000214                     u2321:
  2536  000214  EF61  F001         	goto	l3121
  2537  000218                     u2320:
  2538  000218                     
  2539                           ;main.c: 296:                     LATDbits.LATD6 = 1;
  2540  000218  8C8C               	bsf	140,6,c	;volatile
  2541  00021A  EF33  F000         	goto	l3073
  2542  00021E                     l3111:
  2543                           
  2544                           ;main.c: 302:                 if (estaSeco(sensores[i])) {
  2545  00021E  C018  F001         	movff	encenderBombas@i,___wmul@multiplier
  2546  000222  C019  F002         	movff	encenderBombas@i+1,___wmul@multiplier+1
  2547  000226  0E00               	movlw	0
  2548  000228  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2549  00022A  0E03               	movlw	3
  2550  00022C  6E03               	movwf	___wmul@multiplicand^0,c
  2551  00022E  ECE6  F010         	call	___wmul	;wreg free
  2552  000232  0E60               	movlw	low _sensores
  2553  000234  2401               	addwf	?___wmul^0,w,c
  2554  000236  6ED9               	movwf	fsr2l,c
  2555  000238  0E00               	movlw	high _sensores
  2556  00023A  2002               	addwfc	(?___wmul+1)^0,w,c
  2557  00023C  6EDA               	movwf	fsr2h,c
  2558  00023E  CFDE F010          	movff	postinc2,estaSeco@s
  2559  000242  CFDE F011          	movff	postinc2,estaSeco@s+1
  2560  000246  CFDD F012          	movff	postdec2,estaSeco@s+2
  2561  00024A  EC70  F00F         	call	_estaSeco	;wreg free
  2562  00024E  5010               	movf	?_estaSeco^0,w,c
  2563  000250  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2564  000252  B4D8               	btfsc	status,2,c
  2565  000254  EF2E  F001         	goto	u2331
  2566  000258  EF30  F001         	goto	u2330
  2567  00025C                     u2331:
  2568  00025C  EF61  F001         	goto	l3121
  2569  000260                     u2330:
  2570  000260                     
  2571                           ;main.c: 303:                     LATDbits.LATD7 = 1;
  2572  000260  8E8C               	bsf	140,7,c	;volatile
  2573  000262  EF33  F000         	goto	l3073
  2574  000266                     l3119:
  2575  000266  C018  F015         	movff	encenderBombas@i,??_encenderBombas
  2576  00026A  C019  F016         	movff	encenderBombas@i+1,??_encenderBombas+1
  2577                           
  2578                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2579                           ; Switch size 1, requested type "simple"
  2580                           ; Number of cases is 1, Range of values is 0 to 0
  2581                           ; switch strategies available:
  2582                           ; Name         Instructions Cycles
  2583                           ; simple_byte            4     3 (average)
  2584                           ;	Chosen strategy is simple_byte
  2585  00026E  5016               	movf	(??_encenderBombas+1)^0,w,c
  2586  000270  0A00               	xorlw	0	; case 0
  2587  000272  B4D8               	btfsc	status,2,c
  2588  000274  EF3E  F001         	goto	l3679
  2589  000278  EF61  F001         	goto	l3121
  2590  00027C                     l3679:
  2591                           
  2592                           ; Switch size 1, requested type "simple"
  2593                           ; Number of cases is 8, Range of values is 0 to 7
  2594                           ; switch strategies available:
  2595                           ; Name         Instructions Cycles
  2596                           ; simple_byte           25    13 (average)
  2597                           ;	Chosen strategy is simple_byte
  2598  00027C  5015               	movf	??_encenderBombas^0,w,c
  2599  00027E  0A00               	xorlw	0	; case 0
  2600  000280  B4D8               	btfsc	status,2,c
  2601  000282  EF11  F000         	goto	l3069
  2602  000286  0A01               	xorlw	1	; case 1
  2603  000288  B4D8               	btfsc	status,2,c
  2604  00028A  EF37  F000         	goto	l3075
  2605  00028E  0A03               	xorlw	3	; case 2
  2606  000290  B4D8               	btfsc	status,2,c
  2607  000292  EF5B  F000         	goto	l3081
  2608  000296  0A01               	xorlw	1	; case 3
  2609  000298  B4D8               	btfsc	status,2,c
  2610  00029A  EF7F  F000         	goto	l3087
  2611  00029E  0A07               	xorlw	7	; case 4
  2612  0002A0  B4D8               	btfsc	status,2,c
  2613  0002A2  EFA3  F000         	goto	l3093
  2614  0002A6  0A01               	xorlw	1	; case 5
  2615  0002A8  B4D8               	btfsc	status,2,c
  2616  0002AA  EFC7  F000         	goto	l3099
  2617  0002AE  0A03               	xorlw	3	; case 6
  2618  0002B0  B4D8               	btfsc	status,2,c
  2619  0002B2  EFEB  F000         	goto	l3105
  2620  0002B6  0A01               	xorlw	1	; case 7
  2621  0002B8  B4D8               	btfsc	status,2,c
  2622  0002BA  EF0F  F001         	goto	l3111
  2623  0002BE  EF61  F001         	goto	l3121
  2624  0002C2                     l3121:
  2625                           
  2626                           ;main.c: 309:     }
  2627  0002C2  4A18               	infsnz	encenderBombas@i^0,f,c
  2628  0002C4  2A19               	incf	(encenderBombas@i+1)^0,f,c
  2629  0002C6  BE19               	btfsc	(encenderBombas@i+1)^0,7,c
  2630  0002C8  EF6F  F001         	goto	u2341
  2631  0002CC  5019               	movf	(encenderBombas@i+1)^0,w,c
  2632  0002CE  E109               	bnz	u2340
  2633  0002D0  0E03               	movlw	3
  2634  0002D2  5C18               	subwf	encenderBombas@i^0,w,c
  2635  0002D4  A0D8               	btfss	status,0,c
  2636  0002D6  EF6F  F001         	goto	u2341
  2637  0002DA  EF71  F001         	goto	u2340
  2638  0002DE                     u2341:
  2639  0002DE  EF33  F001         	goto	l3119
  2640  0002E2                     u2340:
  2641  0002E2                     
  2642                           ;main.c: 311:     if (flagSeco)
  2643  0002E2  5017               	movf	encenderBombas@flagSeco^0,w,c
  2644  0002E4  B4D8               	btfsc	status,2,c
  2645  0002E6  EF77  F001         	goto	u2351
  2646  0002EA  EF79  F001         	goto	u2350
  2647  0002EE                     u2351:
  2648  0002EE  EF7C  F001         	goto	l270
  2649  0002F2                     u2350:
  2650  0002F2                     
  2651                           ;main.c: 312:         regando = 1;
  2652  0002F2  0E01               	movlw	1
  2653  0002F4  0100               	movlb	0	; () banked
  2654  0002F6  6F83               	movwf	_regando& (0+255),b
  2655  0002F8                     l270:
  2656  0002F8  0012               	return		;funcret
  2657  0002FA                     __end_of_encenderBombas:
  2658                           	opt callstack 0
  2659                           
  2660 ;; *************** function _estaSeco *****************
  2661 ;; Defined at:
  2662 ;;		line 124 in file "main.c"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;  s               3   15[COMRAM] struct .
  2665 ;; Auto vars:     Size  Location     Type
  2666 ;;  temperatura     1   19[COMRAM] unsigned char 
  2667 ;; Return value:  Size  Location     Type
  2668 ;;                  2   15[COMRAM] int 
  2669 ;; Registers used:
  2670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2671 ;; Tracked objects:
  2672 ;;		On entry : 0/0
  2673 ;;		On exit  : 0/0
  2674 ;;		Unchanged: 0/0
  2675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2676 ;;      Params:         3       0       0       0       0       0       0       0       0
  2677 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2678 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2679 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2680 ;;Total ram usage:        5 bytes
  2681 ;; Hardware stack levels used:    1
  2682 ;; Hardware stack levels required when called:    4
  2683 ;; This function calls:
  2684 ;;		_dameTemperaturaHumedad
  2685 ;; This function is called by:
  2686 ;;		_encenderBombas
  2687 ;; This function uses a non-reentrant model
  2688 ;;
  2689                           
  2690                           	psect	text4
  2691  001EE0                     __ptext4:
  2692                           	opt callstack 0
  2693  001EE0                     _estaSeco:
  2694                           	opt callstack 24
  2695  001EE0                     
  2696                           ;main.c: 125:     unsigned char temperatura;;main.c: 127:     dameTemperaturaHumedad(((v
      +                          oid*)0), &temperatura);
  2697  001EE0  0E00               	movlw	0
  2698  001EE2  6E04               	movwf	dameTemperaturaHumedad@Humedad^0,c
  2699  001EE4  0E00               	movlw	0
  2700  001EE6  6E05               	movwf	(dameTemperaturaHumedad@Humedad+1)^0,c
  2701  001EE8  0E14               	movlw	low estaSeco@temperatura
  2702  001EEA  6E06               	movwf	dameTemperaturaHumedad@Temperatura^0,c
  2703  001EEC  0E00               	movlw	high estaSeco@temperatura
  2704  001EEE  6E07               	movwf	(dameTemperaturaHumedad@Temperatura+1)^0,c
  2705  001EF0  ECD4  F00B         	call	_dameTemperaturaHumedad	;wreg free
  2706  001EF4                     
  2707                           ;main.c: 130:     return (s.humedadMedida >= 60) && (temperatura < 34);
  2708  001EF4  0E00               	movlw	0
  2709  001EF6  6E13               	movwf	_estaSeco$770^0,c
  2710  001EF8  BE11               	btfsc	(estaSeco@s+1)^0,7,c
  2711  001EFA  EF88  F00F         	goto	u2051
  2712  001EFE  5011               	movf	(estaSeco@s+1)^0,w,c
  2713  001F00  E109               	bnz	u2050
  2714  001F02  0E3C               	movlw	60
  2715  001F04  5C10               	subwf	estaSeco@s^0,w,c
  2716  001F06  A0D8               	btfss	status,0,c
  2717  001F08  EF88  F00F         	goto	u2051
  2718  001F0C  EF8A  F00F         	goto	u2050
  2719  001F10                     u2051:
  2720  001F10  EF94  F00F         	goto	l2879
  2721  001F14                     u2050:
  2722  001F14  0E22               	movlw	34
  2723  001F16  6014               	cpfslt	estaSeco@temperatura^0,c
  2724  001F18  EF90  F00F         	goto	u2061
  2725  001F1C  EF92  F00F         	goto	u2060
  2726  001F20                     u2061:
  2727  001F20  EF94  F00F         	goto	l2879
  2728  001F24                     u2060:
  2729  001F24  0E01               	movlw	1
  2730  001F26  6E13               	movwf	_estaSeco$770^0,c
  2731  001F28                     l2879:
  2732  001F28  C013  F010         	movff	_estaSeco$770,?_estaSeco
  2733  001F2C  6A11               	clrf	(?_estaSeco+1)^0,c
  2734  001F2E  0012               	return		;funcret
  2735  001F30                     __end_of_estaSeco:
  2736                           	opt callstack 0
  2737                           
  2738 ;; *************** function _dameHoraActual *****************
  2739 ;; Defined at:
  2740 ;;		line 148 in file "main.c"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;		None
  2743 ;; Auto vars:     Size  Location     Type
  2744 ;;		None
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  1    wreg      void 
  2747 ;; Registers used:
  2748 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2754 ;;      Params:         0       0       0       0       0       0       0       0       0
  2755 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2756 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2757 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2758 ;;Total ram usage:        0 bytes
  2759 ;; Hardware stack levels used:    1
  2760 ;; Hardware stack levels required when called:    4
  2761 ;; This function calls:
  2762 ;;		_convertirDato
  2763 ;;		_leer_rtc
  2764 ;; This function is called by:
  2765 ;;		_sistemaRegado
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           	psect	text5
  2770  002150                     __ptext5:
  2771                           	opt callstack 0
  2772  002150                     _dameHoraActual:
  2773                           	opt callstack 25
  2774  002150                     
  2775                           ;main.c: 150:     segundos = convertirDato(leer_rtc(0x00));
  2776  002150  0E00               	movlw	0
  2777  002152  ECBE  F010         	call	_leer_rtc
  2778  002156  ECF9  F010         	call	_convertirDato
  2779  00215A  0100               	movlb	0	; () banked
  2780  00215C  6F88               	movwf	_segundos& (0+255),b
  2781                           
  2782                           ;main.c: 151:     minutos = convertirDato(leer_rtc(0x01));
  2783  00215E  0E01               	movlw	1
  2784  002160  ECBE  F010         	call	_leer_rtc
  2785  002164  ECF9  F010         	call	_convertirDato
  2786  002168  0100               	movlb	0	; () banked
  2787  00216A  6F89               	movwf	_minutos& (0+255),b
  2788                           
  2789                           ;main.c: 152:     hora = convertirDato(leer_rtc(0x02));
  2790  00216C  0E02               	movlw	2
  2791  00216E  ECBE  F010         	call	_leer_rtc
  2792  002172  ECF9  F010         	call	_convertirDato
  2793  002176  0100               	movlb	0	; () banked
  2794  002178  6F8A               	movwf	_hora& (0+255),b
  2795  00217A                     
  2796                           ; BSR set to: 0
  2797  00217A  0012               	return		;funcret
  2798  00217C                     __end_of_dameHoraActual:
  2799                           	opt callstack 0
  2800                           
  2801 ;; *************** function _leer_rtc *****************
  2802 ;; Defined at:
  2803 ;;		line 13 in file "./RTC.h"
  2804 ;; Parameters:    Size  Location     Type
  2805 ;;  direccion       1    wreg     unsigned char 
  2806 ;; Auto vars:     Size  Location     Type
  2807 ;;  direccion       1    2[COMRAM] unsigned char 
  2808 ;;  dato            1    3[COMRAM] unsigned char 
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  1    wreg      unsigned char 
  2811 ;; Registers used:
  2812 ;;		wreg, status,2, status,0, cstack
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2818 ;;      Params:         0       0       0       0       0       0       0       0       0
  2819 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2820 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2821 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2822 ;;Total ram usage:        2 bytes
  2823 ;; Hardware stack levels used:    1
  2824 ;; Hardware stack levels required when called:    3
  2825 ;; This function calls:
  2826 ;;		_i2c_detener
  2827 ;;		_i2c_envia_dato
  2828 ;;		_i2c_inicia_com
  2829 ;;		_i2c_recibe_dato
  2830 ;;		_i2c_reinicia_com
  2831 ;; This function is called by:
  2832 ;;		_dameHoraActual
  2833 ;; This function uses a non-reentrant model
  2834 ;;
  2835                           
  2836                           	psect	text6
  2837  00217C                     __ptext6:
  2838                           	opt callstack 0
  2839  00217C                     _leer_rtc:
  2840                           	opt callstack 25
  2841                           
  2842                           ; BSR set to: 0
  2843                           ;incstack = 0
  2844                           ;leer_rtc@direccion stored from wreg
  2845  00217C  6E03               	movwf	leer_rtc@direccion^0,c
  2846  00217E                     
  2847                           ;./RTC.h: 14:     unsigned char dato;;./RTC.h: 15:     i2c_inicia_com();
  2848  00217E  EC60  F011         	call	_i2c_inicia_com	;wreg free
  2849                           
  2850                           ;./RTC.h: 16:     i2c_envia_dato(0xD0);
  2851  002182  0ED0               	movlw	208
  2852  002184  EC51  F011         	call	_i2c_envia_dato
  2853                           
  2854                           ;./RTC.h: 17:     i2c_envia_dato(direccion);
  2855  002188  5003               	movf	leer_rtc@direccion^0,w,c
  2856  00218A  EC51  F011         	call	_i2c_envia_dato
  2857                           
  2858                           ;./RTC.h: 18:     i2c_reinicia_com();
  2859  00218E  EC5C  F011         	call	_i2c_reinicia_com	;wreg free
  2860                           
  2861                           ;./RTC.h: 19:     i2c_envia_dato(0xD1);
  2862  002192  0ED1               	movlw	209
  2863  002194  EC51  F011         	call	_i2c_envia_dato
  2864                           
  2865                           ;./RTC.h: 20:     dato = i2c_recibe_dato();
  2866  002198  EC28  F011         	call	_i2c_recibe_dato	;wreg free
  2867  00219C  6E04               	movwf	leer_rtc@dato^0,c
  2868                           
  2869                           ;./RTC.h: 21:     i2c_detener();
  2870  00219E  EC64  F011         	call	_i2c_detener	;wreg free
  2871  0021A2                     
  2872                           ;./RTC.h: 22:     return dato;
  2873  0021A2  5004               	movf	leer_rtc@dato^0,w,c
  2874  0021A4  0012               	return		;funcret
  2875  0021A6                     __end_of_leer_rtc:
  2876                           	opt callstack 0
  2877                           
  2878 ;; *************** function _convertirDato *****************
  2879 ;; Defined at:
  2880 ;;		line 28 in file "./RTC.h"
  2881 ;; Parameters:    Size  Location     Type
  2882 ;;  dato            1    wreg     unsigned char 
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;  dato            1    1[COMRAM] unsigned char 
  2885 ;;  datoR           1    2[COMRAM] unsigned char 
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  1    wreg      unsigned char 
  2888 ;; Registers used:
  2889 ;;		wreg, status,2, status,0, prodl, prodh
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2895 ;;      Params:         0       0       0       0       0       0       0       0       0
  2896 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2897 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2898 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2899 ;;Total ram usage:        3 bytes
  2900 ;; Hardware stack levels used:    1
  2901 ;; Hardware stack levels required when called:    1
  2902 ;; This function calls:
  2903 ;;		Nothing
  2904 ;; This function is called by:
  2905 ;;		_dameHoraActual
  2906 ;; This function uses a non-reentrant model
  2907 ;;
  2908                           
  2909                           	psect	text7
  2910  0021F2                     __ptext7:
  2911                           	opt callstack 0
  2912  0021F2                     _convertirDato:
  2913                           	opt callstack 27
  2914                           
  2915                           ;incstack = 0
  2916                           ;convertirDato@dato stored from wreg
  2917  0021F2  6E02               	movwf	convertirDato@dato^0,c
  2918  0021F4                     
  2919                           ;./RTC.h: 30:     datoR = (dato & 0xF0) >> 4;
  2920  0021F4  3802               	swapf	convertirDato@dato^0,w,c
  2921  0021F6  0B0F               	andlw	15
  2922  0021F8  0B0F               	andlw	15
  2923  0021FA  6E03               	movwf	convertirDato@datoR^0,c
  2924  0021FC                     
  2925                           ;./RTC.h: 31:     datoR = (datoR * 10) + (dato & 0x0F);
  2926  0021FC  C002  F001         	movff	convertirDato@dato,??_convertirDato
  2927  002200  0E0F               	movlw	15
  2928  002202  1601               	andwf	??_convertirDato^0,f,c
  2929  002204  5003               	movf	convertirDato@datoR^0,w,c
  2930  002206  0D0A               	mullw	10
  2931  002208  50F3               	movf	243,w,c
  2932  00220A  2401               	addwf	??_convertirDato^0,w,c
  2933  00220C  6E03               	movwf	convertirDato@datoR^0,c
  2934  00220E                     
  2935                           ;./RTC.h: 32:     return datoR;
  2936  00220E  5003               	movf	convertirDato@datoR^0,w,c
  2937  002210  0012               	return		;funcret
  2938  002212                     __end_of_convertirDato:
  2939                           	opt callstack 0
  2940                           
  2941 ;; *************** function _sistemaPrincipal *****************
  2942 ;; Defined at:
  2943 ;;		line 550 in file "main.c"
  2944 ;; Parameters:    Size  Location     Type
  2945 ;;  opcion          1    wreg     unsigned char 
  2946 ;; Auto vars:     Size  Location     Type
  2947 ;;  opcion          1   92[COMRAM] unsigned char 
  2948 ;; Return value:  Size  Location     Type
  2949 ;;                  1    wreg      void 
  2950 ;; Registers used:
  2951 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2952 ;; Tracked objects:
  2953 ;;		On entry : 0/0
  2954 ;;		On exit  : 0/0
  2955 ;;		Unchanged: 0/0
  2956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2957 ;;      Params:         0       0       0       0       0       0       0       0       0
  2958 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2959 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2960 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2961 ;;Total ram usage:        3 bytes
  2962 ;; Hardware stack levels used:    1
  2963 ;; Hardware stack levels required when called:   10
  2964 ;; This function calls:
  2965 ;;		_UART_printf
  2966 ;;		_asignarHorarios
  2967 ;;		_dameDatosSistema
  2968 ;;		_fijaHoraRtc
  2969 ;;		_mostrarDatosSensores
  2970 ;;		_mostrarDatosSensoresWIFI
  2971 ;;		_mostrarMenu
  2972 ;;		_setTiempoRegar
  2973 ;; This function is called by:
  2974 ;;		_main
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978                           	psect	text8
  2979  001A2A                     __ptext8:
  2980                           	opt callstack 0
  2981  001A2A                     _sistemaPrincipal:
  2982                           	opt callstack 20
  2983                           
  2984                           ;incstack = 0
  2985                           ;sistemaPrincipal@opcion stored from wreg
  2986  001A2A  6E5D               	movwf	sistemaPrincipal@opcion^0,c
  2987  001A2C                     
  2988                           ;main.c: 552:     PIE1bits.RCIE = 0;
  2989  001A2C  9A9D               	bcf	157,5,c	;volatile
  2990                           
  2991                           ;main.c: 554:     switch (opcion) {
  2992  001A2E  EF35  F00D         	goto	l3517
  2993  001A32                     l3501:
  2994                           
  2995                           ;main.c: 557:             fijaHoraRtc();
  2996  001A32  ECC6  F00D         	call	_fijaHoraRtc	;wreg free
  2997                           
  2998                           ;main.c: 558:             break;
  2999  001A36  EF56  F00D         	goto	l3519
  3000  001A3A                     l3503:
  3001                           
  3002                           ;main.c: 561:             asignarHorarios();
  3003  001A3A  ECC9  F006         	call	_asignarHorarios	;wreg free
  3004                           
  3005                           ;main.c: 562:             break;
  3006  001A3E  EF56  F00D         	goto	l3519
  3007  001A42                     l3505:
  3008                           
  3009                           ;main.c: 565:             setTiempoRegar();
  3010  001A42  ECEE  F002         	call	_setTiempoRegar	;wreg free
  3011                           
  3012                           ;main.c: 566:             break;
  3013  001A46  EF56  F00D         	goto	l3519
  3014  001A4A                     l3507:
  3015                           
  3016                           ;main.c: 569:             dameDatosSistema();
  3017  001A4A  EC0D  F009         	call	_dameDatosSistema	;wreg free
  3018                           
  3019                           ;main.c: 570:             break;
  3020  001A4E  EF56  F00D         	goto	l3519
  3021  001A52                     l3511:
  3022                           
  3023                           ;main.c: 576:                 mostrarDatosSensores();
  3024  001A52  EC22  F006         	call	_mostrarDatosSensores	;wreg free
  3025  001A56  EF56  F00D         	goto	l3519
  3026  001A5A                     l3513:
  3027                           
  3028                           ;main.c: 581:             UART_printf("\r\n Solo se permiten numeros del 1 al 3 \r\n");
  3029  001A5A  0E0F               	movlw	low STR_24
  3030  001A5C  6E02               	movwf	UART_printf@cadena^0,c
  3031  001A5E  0E7D               	movlw	high STR_24
  3032  001A60  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3033  001A62  ECC0  F00E         	call	_UART_printf	;wreg free
  3034                           
  3035                           ;main.c: 582:             break;
  3036  001A66  EF56  F00D         	goto	l3519
  3037  001A6A                     l3517:
  3038  001A6A  505D               	movf	sistemaPrincipal@opcion^0,w,c
  3039  001A6C  6E5B               	movwf	??_sistemaPrincipal^0,c
  3040  001A6E  6A5C               	clrf	(??_sistemaPrincipal+1)^0,c
  3041                           
  3042                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3043                           ; Switch size 1, requested type "simple"
  3044                           ; Number of cases is 1, Range of values is 0 to 0
  3045                           ; switch strategies available:
  3046                           ; Name         Instructions Cycles
  3047                           ; simple_byte            4     3 (average)
  3048                           ;	Chosen strategy is simple_byte
  3049  001A70  505C               	movf	(??_sistemaPrincipal+1)^0,w,c
  3050  001A72  0A00               	xorlw	0	; case 0
  3051  001A74  B4D8               	btfsc	status,2,c
  3052  001A76  EF3F  F00D         	goto	l3681
  3053  001A7A  EF2D  F00D         	goto	l3513
  3054  001A7E                     l3681:
  3055                           
  3056                           ; Switch size 1, requested type "simple"
  3057                           ; Number of cases is 5, Range of values is 1 to 5
  3058                           ; switch strategies available:
  3059                           ; Name         Instructions Cycles
  3060                           ; simple_byte           16     9 (average)
  3061                           ;	Chosen strategy is simple_byte
  3062  001A7E  505B               	movf	??_sistemaPrincipal^0,w,c
  3063  001A80  0A01               	xorlw	1	; case 1
  3064  001A82  B4D8               	btfsc	status,2,c
  3065  001A84  EF19  F00D         	goto	l3501
  3066  001A88  0A03               	xorlw	3	; case 2
  3067  001A8A  B4D8               	btfsc	status,2,c
  3068  001A8C  EF1D  F00D         	goto	l3503
  3069  001A90  0A01               	xorlw	1	; case 3
  3070  001A92  B4D8               	btfsc	status,2,c
  3071  001A94  EF21  F00D         	goto	l3505
  3072  001A98  0A07               	xorlw	7	; case 4
  3073  001A9A  B4D8               	btfsc	status,2,c
  3074  001A9C  EF25  F00D         	goto	l3507
  3075  001AA0  0A01               	xorlw	1	; case 5
  3076  001AA2  B4D8               	btfsc	status,2,c
  3077  001AA4  EF29  F00D         	goto	l3511
  3078  001AA8  EF2D  F00D         	goto	l3513
  3079  001AAC                     l3519:
  3080                           
  3081                           ;main.c: 585:     mostrarMenu();
  3082  001AAC  EC2D  F00E         	call	_mostrarMenu	;wreg free
  3083  001AB0                     
  3084                           ;main.c: 586:     PIE1bits.RCIE = 1;
  3085  001AB0  8A9D               	bsf	157,5,c	;volatile
  3086  001AB2  0012               	return		;funcret
  3087  001AB4                     __end_of_sistemaPrincipal:
  3088                           	opt callstack 0
  3089                           
  3090 ;; *************** function _setTiempoRegar *****************
  3091 ;; Defined at:
  3092 ;;		line 396 in file "main.c"
  3093 ;; Parameters:    Size  Location     Type
  3094 ;;		None
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;  i               2   18[COMRAM] int 
  3097 ;;  i               2   16[COMRAM] int 
  3098 ;;  Rx              1   21[COMRAM] unsigned char 
  3099 ;;  datoCapturad    1   20[COMRAM] unsigned char 
  3100 ;;  hora            1   15[COMRAM] unsigned char 
  3101 ;;  tiempoRegar     1   14[COMRAM] unsigned char 
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  1    wreg      void 
  3104 ;; Registers used:
  3105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3111 ;;      Params:         0       0       0       0       0       0       0       0       0
  3112 ;;      Locals:         8       0       0       0       0       0       0       0       0
  3113 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3114 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3115 ;;Total ram usage:        8 bytes
  3116 ;; Hardware stack levels used:    1
  3117 ;; Hardware stack levels required when called:    5
  3118 ;; This function calls:
  3119 ;;		_UART_printf
  3120 ;;		_UART_read
  3121 ;;		_UART_write
  3122 ;;		_escribeHorariosMemoria
  3123 ;; This function is called by:
  3124 ;;		_sistemaPrincipal
  3125 ;; This function uses a non-reentrant model
  3126 ;;
  3127                           
  3128                           	psect	text9
  3129  0005DC                     __ptext9:
  3130                           	opt callstack 0
  3131  0005DC                     _setTiempoRegar:
  3132                           	opt callstack 24
  3133  0005DC                     
  3134                           ;main.c: 398:     unsigned char hora;;main.c: 399:     unsigned char tiempoRegar;;main.c
      +                          : 400:     unsigned char Rx;;main.c: 401:     char datoCapturado = 0;
  3135  0005DC  0E00               	movlw	0
  3136  0005DE  6E15               	movwf	setTiempoRegar@datoCapturado^0,c
  3137  0005E0                     
  3138                           ;main.c: 403:     UART_printf("\r\n TIEMPO DE REGADO \r\n");
  3139  0005E0  0E93               	movlw	low STR_9
  3140  0005E2  6E02               	movwf	UART_printf@cadena^0,c
  3141  0005E4  0E7F               	movlw	high STR_9
  3142  0005E6  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3143  0005E8  ECC0  F00E         	call	_UART_printf	;wreg free
  3144  0005EC                     
  3145                           ;main.c: 404:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  3146  0005EC  0E4E               	movlw	low STR_6
  3147  0005EE  6E02               	movwf	UART_printf@cadena^0,c
  3148  0005F0  0E7C               	movlw	high STR_6
  3149  0005F2  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3150  0005F4  ECC0  F00E         	call	_UART_printf	;wreg free
  3151                           
  3152                           ;main.c: 406:     for (int i = 0; i < 2; i++) {
  3153  0005F8  0E00               	movlw	0
  3154  0005FA  6E12               	movwf	(setTiempoRegar@i+1)^0,c
  3155  0005FC  0E00               	movlw	0
  3156  0005FE  6E11               	movwf	setTiempoRegar@i^0,c
  3157  000600                     l3221:
  3158                           
  3159                           ;main.c: 407:         Rx = UART_read();
  3160  000600  EC1D  F00F         	call	_UART_read	;wreg free
  3161  000604  6E16               	movwf	setTiempoRegar@Rx^0,c
  3162  000606                     
  3163                           ;main.c: 408:         if (Rx >= 48 && Rx <= 57) {
  3164  000606  0E2F               	movlw	47
  3165  000608  6416               	cpfsgt	setTiempoRegar@Rx^0,c
  3166  00060A  EF09  F003         	goto	u2471
  3167  00060E  EF0B  F003         	goto	u2470
  3168  000612                     u2471:
  3169  000612  EF2E  F003         	goto	l3241
  3170  000616                     u2470:
  3171  000616  0E3A               	movlw	58
  3172  000618  6016               	cpfslt	setTiempoRegar@Rx^0,c
  3173  00061A  EF11  F003         	goto	u2481
  3174  00061E  EF13  F003         	goto	u2480
  3175  000622                     u2481:
  3176  000622  EF2E  F003         	goto	l3241
  3177  000626                     u2480:
  3178  000626                     
  3179                           ;main.c: 409:             if (!i) {
  3180  000626  5011               	movf	setTiempoRegar@i^0,w,c
  3181  000628  1012               	iorwf	(setTiempoRegar@i+1)^0,w,c
  3182  00062A  A4D8               	btfss	status,2,c
  3183  00062C  EF1A  F003         	goto	u2491
  3184  000630  EF1C  F003         	goto	u2490
  3185  000634                     u2491:
  3186  000634  EF26  F003         	goto	l3235
  3187  000638                     u2490:
  3188  000638                     
  3189                           ;main.c: 410:                 Rx -= 48;
  3190  000638  0E30               	movlw	48
  3191  00063A  5E16               	subwf	setTiempoRegar@Rx^0,f,c
  3192  00063C                     
  3193                           ;main.c: 411:                 hora = Rx;
  3194  00063C  C016  F010         	movff	setTiempoRegar@Rx,setTiempoRegar@hora
  3195  000640                     
  3196                           ;main.c: 412:                 hora *= 10;
  3197  000640  0E0A               	movlw	10
  3198  000642  0210               	mulwf	setTiempoRegar@hora^0,c
  3199  000644  50F3               	movf	prodl,w,c
  3200  000646  6E10               	movwf	setTiempoRegar@hora^0,c
  3201                           
  3202                           ;main.c: 413:             } else {
  3203  000648  EF35  F003         	goto	l3245
  3204  00064C                     l3235:
  3205                           
  3206                           ;main.c: 414:                 datoCapturado = 1;
  3207  00064C  0E01               	movlw	1
  3208  00064E  6E15               	movwf	setTiempoRegar@datoCapturado^0,c
  3209  000650                     
  3210                           ;main.c: 415:                 Rx -= 48;
  3211  000650  0E30               	movlw	48
  3212  000652  5E16               	subwf	setTiempoRegar@Rx^0,f,c
  3213  000654                     
  3214                           ;main.c: 416:                 hora += Rx;
  3215  000654  5016               	movf	setTiempoRegar@Rx^0,w,c
  3216  000656  2610               	addwf	setTiempoRegar@hora^0,f,c
  3217  000658  EF35  F003         	goto	l3245
  3218  00065C                     l3241:
  3219                           
  3220                           ;main.c: 419:             datoCapturado = 0;
  3221  00065C  0E00               	movlw	0
  3222  00065E  6E15               	movwf	setTiempoRegar@datoCapturado^0,c
  3223  000660                     
  3224                           ;main.c: 421:             UART_write('F');
  3225  000660  0E46               	movlw	70
  3226  000662  EC35  F011         	call	_UART_write
  3227                           
  3228                           ;main.c: 422:             break;
  3229  000666  EF45  F003         	goto	l3249
  3230  00066A                     l3245:
  3231                           
  3232                           ;main.c: 424:     }
  3233  00066A  4A11               	infsnz	setTiempoRegar@i^0,f,c
  3234  00066C  2A12               	incf	(setTiempoRegar@i+1)^0,f,c
  3235  00066E  BE12               	btfsc	(setTiempoRegar@i+1)^0,7,c
  3236  000670  EF43  F003         	goto	u2501
  3237  000674  5012               	movf	(setTiempoRegar@i+1)^0,w,c
  3238  000676  E109               	bnz	u2500
  3239  000678  0E02               	movlw	2
  3240  00067A  5C11               	subwf	setTiempoRegar@i^0,w,c
  3241  00067C  A0D8               	btfss	status,0,c
  3242  00067E  EF43  F003         	goto	u2501
  3243  000682  EF45  F003         	goto	u2500
  3244  000686                     u2501:
  3245  000686  EF00  F003         	goto	l3221
  3246  00068A                     u2500:
  3247  00068A                     l3249:
  3248                           
  3249                           ;main.c: 426:     if (datoCapturado && !esperandoDatos) {
  3250  00068A  5015               	movf	setTiempoRegar@datoCapturado^0,w,c
  3251  00068C  B4D8               	btfsc	status,2,c
  3252  00068E  EF4B  F003         	goto	u2511
  3253  000692  EF4D  F003         	goto	u2510
  3254  000696                     u2511:
  3255  000696  EFD1  F003         	goto	l305
  3256  00069A                     u2510:
  3257  00069A  505E               	movf	_esperandoDatos^0,w,c
  3258  00069C  A4D8               	btfss	status,2,c
  3259  00069E  EF53  F003         	goto	u2521
  3260  0006A2  EF55  F003         	goto	u2520
  3261  0006A6                     u2521:
  3262  0006A6  EFD1  F003         	goto	l305
  3263  0006AA                     u2520:
  3264  0006AA                     
  3265                           ;main.c: 428:         UART_printf("\r\n Ingrese los minutos que desee que se riegue en e
      +                          se horario ej: 15 \r\n");
  3266  0006AA  0ECF               	movlw	low STR_11
  3267  0006AC  6E02               	movwf	UART_printf@cadena^0,c
  3268  0006AE  0E7B               	movlw	high STR_11
  3269  0006B0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3270  0006B2  ECC0  F00E         	call	_UART_printf	;wreg free
  3271  0006B6                     
  3272                           ;main.c: 430:         for (int i = 0; i < 2; i++) {
  3273  0006B6  0E00               	movlw	0
  3274  0006B8  6E14               	movwf	(setTiempoRegar@i_834+1)^0,c
  3275  0006BA  0E00               	movlw	0
  3276  0006BC  6E13               	movwf	setTiempoRegar@i_834^0,c
  3277  0006BE                     l3261:
  3278                           
  3279                           ;main.c: 431:             Rx = UART_read();
  3280  0006BE  EC1D  F00F         	call	_UART_read	;wreg free
  3281  0006C2  6E16               	movwf	setTiempoRegar@Rx^0,c
  3282  0006C4                     
  3283                           ;main.c: 432:             if (Rx >= 48 && Rx <= 57) {
  3284  0006C4  0E2F               	movlw	47
  3285  0006C6  6416               	cpfsgt	setTiempoRegar@Rx^0,c
  3286  0006C8  EF68  F003         	goto	u2531
  3287  0006CC  EF6A  F003         	goto	u2530
  3288  0006D0                     u2531:
  3289  0006D0  EF8D  F003         	goto	l3281
  3290  0006D4                     u2530:
  3291  0006D4  0E3A               	movlw	58
  3292  0006D6  6016               	cpfslt	setTiempoRegar@Rx^0,c
  3293  0006D8  EF70  F003         	goto	u2541
  3294  0006DC  EF72  F003         	goto	u2540
  3295  0006E0                     u2541:
  3296  0006E0  EF8D  F003         	goto	l3281
  3297  0006E4                     u2540:
  3298  0006E4                     
  3299                           ;main.c: 433:                 if (!i) {
  3300  0006E4  5013               	movf	setTiempoRegar@i_834^0,w,c
  3301  0006E6  1014               	iorwf	(setTiempoRegar@i_834+1)^0,w,c
  3302  0006E8  A4D8               	btfss	status,2,c
  3303  0006EA  EF79  F003         	goto	u2551
  3304  0006EE  EF7B  F003         	goto	u2550
  3305  0006F2                     u2551:
  3306  0006F2  EF85  F003         	goto	l3275
  3307  0006F6                     u2550:
  3308  0006F6                     
  3309                           ;main.c: 434:                     Rx -= 48;
  3310  0006F6  0E30               	movlw	48
  3311  0006F8  5E16               	subwf	setTiempoRegar@Rx^0,f,c
  3312  0006FA                     
  3313                           ;main.c: 435:                     tiempoRegar = Rx;
  3314  0006FA  C016  F00F         	movff	setTiempoRegar@Rx,setTiempoRegar@tiempoRegar
  3315  0006FE                     
  3316                           ;main.c: 436:                     tiempoRegar *= 10;
  3317  0006FE  0E0A               	movlw	10
  3318  000700  020F               	mulwf	setTiempoRegar@tiempoRegar^0,c
  3319  000702  50F3               	movf	prodl,w,c
  3320  000704  6E0F               	movwf	setTiempoRegar@tiempoRegar^0,c
  3321                           
  3322                           ;main.c: 437:                 } else {
  3323  000706  EF94  F003         	goto	l3285
  3324  00070A                     l3275:
  3325                           
  3326                           ;main.c: 438:                     datoCapturado = 1;
  3327  00070A  0E01               	movlw	1
  3328  00070C  6E15               	movwf	setTiempoRegar@datoCapturado^0,c
  3329  00070E                     
  3330                           ;main.c: 439:                     Rx -= 48;
  3331  00070E  0E30               	movlw	48
  3332  000710  5E16               	subwf	setTiempoRegar@Rx^0,f,c
  3333  000712                     
  3334                           ;main.c: 440:                     tiempoRegar += Rx;
  3335  000712  5016               	movf	setTiempoRegar@Rx^0,w,c
  3336  000714  260F               	addwf	setTiempoRegar@tiempoRegar^0,f,c
  3337  000716  EF94  F003         	goto	l3285
  3338  00071A                     l3281:
  3339                           
  3340                           ;main.c: 443:                 datoCapturado = 0;
  3341  00071A  0E00               	movlw	0
  3342  00071C  6E15               	movwf	setTiempoRegar@datoCapturado^0,c
  3343  00071E                     
  3344                           ;main.c: 445:                 UART_write('F');
  3345  00071E  0E46               	movlw	70
  3346  000720  EC35  F011         	call	_UART_write
  3347                           
  3348                           ;main.c: 446:                 break;
  3349  000724  EFA4  F003         	goto	l3289
  3350  000728                     l3285:
  3351                           
  3352                           ;main.c: 448:         }
  3353  000728  4A13               	infsnz	setTiempoRegar@i_834^0,f,c
  3354  00072A  2A14               	incf	(setTiempoRegar@i_834+1)^0,f,c
  3355  00072C  BE14               	btfsc	(setTiempoRegar@i_834+1)^0,7,c
  3356  00072E  EFA2  F003         	goto	u2561
  3357  000732  5014               	movf	(setTiempoRegar@i_834+1)^0,w,c
  3358  000734  E109               	bnz	u2560
  3359  000736  0E02               	movlw	2
  3360  000738  5C13               	subwf	setTiempoRegar@i_834^0,w,c
  3361  00073A  A0D8               	btfss	status,0,c
  3362  00073C  EFA2  F003         	goto	u2561
  3363  000740  EFA4  F003         	goto	u2560
  3364  000744                     u2561:
  3365  000744  EF5F  F003         	goto	l3261
  3366  000748                     u2560:
  3367  000748                     l3289:
  3368                           
  3369                           ;main.c: 450:         if (datoCapturado && !esperandoDatos) {
  3370  000748  5015               	movf	setTiempoRegar@datoCapturado^0,w,c
  3371  00074A  B4D8               	btfsc	status,2,c
  3372  00074C  EFAA  F003         	goto	u2571
  3373  000750  EFAC  F003         	goto	u2570
  3374  000754                     u2571:
  3375  000754  EFD1  F003         	goto	l305
  3376  000758                     u2570:
  3377  000758  505E               	movf	_esperandoDatos^0,w,c
  3378  00075A  A4D8               	btfss	status,2,c
  3379  00075C  EFB2  F003         	goto	u2581
  3380  000760  EFB4  F003         	goto	u2580
  3381  000764                     u2581:
  3382  000764  EFD1  F003         	goto	l305
  3383  000768                     u2580:
  3384  000768                     
  3385                           ;main.c: 452:             UART_printf("\r\n Minutos de riego establecidos! \r\n");
  3386  000768  0ED7               	movlw	low STR_12
  3387  00076A  6E02               	movwf	UART_printf@cadena^0,c
  3388  00076C  0E7D               	movlw	high STR_12
  3389  00076E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3390  000770  ECC0  F00E         	call	_UART_printf	;wreg free
  3391  000774                     
  3392                           ;main.c: 454:             horarios[hora].tiempoRegar = tiempoRegar;
  3393  000774  5010               	movf	setTiempoRegar@hora^0,w,c
  3394  000776  0D03               	mullw	3
  3395  000778  0E02               	movlw	low (_horarios+2)
  3396  00077A  24F3               	addwf	243,w,c
  3397  00077C  6ED9               	movwf	fsr2l,c
  3398  00077E  0E01               	movlw	high (_horarios+2)
  3399  000780  20F4               	addwfc	prodh,w,c
  3400  000782  6EDA               	movwf	fsr2h,c
  3401  000784  C00F  FFDF         	movff	setTiempoRegar@tiempoRegar,indf2
  3402  000788                     
  3403                           ;main.c: 455:             minutosRegar = horarios[hora].tiempoRegar;
  3404  000788  5010               	movf	setTiempoRegar@hora^0,w,c
  3405  00078A  0D03               	mullw	3
  3406  00078C  0E02               	movlw	low (_horarios+2)
  3407  00078E  24F3               	addwf	243,w,c
  3408  000790  6ED9               	movwf	fsr2l,c
  3409  000792  0E01               	movlw	high (_horarios+2)
  3410  000794  20F4               	addwfc	prodh,w,c
  3411  000796  6EDA               	movwf	fsr2h,c
  3412  000798  50DF               	movf	indf2,w,c
  3413  00079A  0100               	movlb	0	; () banked
  3414  00079C  6F85               	movwf	_minutosRegar& (0+255),b
  3415  00079E                     
  3416                           ; BSR set to: 0
  3417                           ;main.c: 457:             escribeHorariosMemoria();
  3418  00079E  EC7C  F009         	call	_escribeHorariosMemoria	;wreg free
  3419  0007A2                     l305:
  3420  0007A2  0012               	return		;funcret
  3421  0007A4                     __end_of_setTiempoRegar:
  3422                           	opt callstack 0
  3423                           
  3424 ;; *************** function _mostrarMenu *****************
  3425 ;; Defined at:
  3426 ;;		line 538 in file "main.c"
  3427 ;; Parameters:    Size  Location     Type
  3428 ;;		None
  3429 ;; Auto vars:     Size  Location     Type
  3430 ;;		None
  3431 ;; Return value:  Size  Location     Type
  3432 ;;                  1    wreg      void 
  3433 ;; Registers used:
  3434 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3435 ;; Tracked objects:
  3436 ;;		On entry : 0/0
  3437 ;;		On exit  : 0/0
  3438 ;;		Unchanged: 0/0
  3439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3440 ;;      Params:         0       0       0       0       0       0       0       0       0
  3441 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3442 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3443 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3444 ;;Total ram usage:        0 bytes
  3445 ;; Hardware stack levels used:    1
  3446 ;; Hardware stack levels required when called:    3
  3447 ;; This function calls:
  3448 ;;		_UART_printf
  3449 ;; This function is called by:
  3450 ;;		_sistemaPrincipal
  3451 ;;		_sistemaRegado
  3452 ;;		_main
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455                           
  3456                           	psect	text10
  3457  001C5A                     __ptext10:
  3458                           	opt callstack 0
  3459  001C5A                     _mostrarMenu:
  3460                           	opt callstack 26
  3461  001C5A                     
  3462                           ;main.c: 540:     UART_printf("\r\n Ingresa una opcion a Realizar: \r\n");
  3463  001C5A  0EFC               	movlw	low STR_16
  3464  001C5C  6E02               	movwf	UART_printf@cadena^0,c
  3465  001C5E  0E7D               	movlw	high STR_16
  3466  001C60  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3467  001C62  ECC0  F00E         	call	_UART_printf	;wreg free
  3468                           
  3469                           ;main.c: 541:     UART_printf("\r\n 1. Fijar Hora Actual \r\n");
  3470  001C66  0E45               	movlw	low STR_17
  3471  001C68  6E02               	movwf	UART_printf@cadena^0,c
  3472  001C6A  0E7F               	movlw	high STR_17
  3473  001C6C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3474  001C6E  ECC0  F00E         	call	_UART_printf	;wreg free
  3475                           
  3476                           ;main.c: 542:     UART_printf("\r\n 2. Asignar Horarios para regar \r\n");
  3477  001C72  0E46               	movlw	low STR_18
  3478  001C74  6E02               	movwf	UART_printf@cadena^0,c
  3479  001C76  0E7E               	movlw	high STR_18
  3480  001C78  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3481  001C7A  ECC0  F00E         	call	_UART_printf	;wreg free
  3482                           
  3483                           ;main.c: 543:     UART_printf("\r\n 3. Programar tiempo de riego en un horario \r\n");
  3484  001C7E  0EB3               	movlw	low STR_19
  3485  001C80  6E02               	movwf	UART_printf@cadena^0,c
  3486  001C82  0E7C               	movlw	high STR_19
  3487  001C84  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3488  001C86  ECC0  F00E         	call	_UART_printf	;wreg free
  3489                           
  3490                           ;main.c: 544:     UART_printf("\r\n 4. Dame datos del sistema \r\n");
  3491  001C8A  0EAD               	movlw	low STR_20
  3492  001C8C  6E02               	movwf	UART_printf@cadena^0,c
  3493  001C8E  0E7E               	movlw	high STR_20
  3494  001C90  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3495  001C92  ECC0  F00E         	call	_UART_printf	;wreg free
  3496                           
  3497                           ;main.c: 545:     UART_printf("\r\n 5. Mostrar valores sensores \r\n");
  3498  001C96  0E6B               	movlw	low STR_21
  3499  001C98  6E02               	movwf	UART_printf@cadena^0,c
  3500  001C9A  0E7E               	movlw	high STR_21
  3501  001C9C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3502  001C9E  ECC0  F00E         	call	_UART_printf	;wreg free
  3503                           
  3504                           ;main.c: 546:     UART_printf("\r\n Opcion:  \r");
  3505  001CA2  0EF0               	movlw	low STR_22
  3506  001CA4  6E02               	movwf	UART_printf@cadena^0,c
  3507  001CA6  0E7F               	movlw	high STR_22
  3508  001CA8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3509  001CAA  ECC0  F00E         	call	_UART_printf	;wreg free
  3510                           
  3511                           ;main.c: 547:     UART_printf("\r\n");
  3512  001CAE  0E77               	movlw	low (STR_8+23)
  3513  001CB0  6E02               	movwf	UART_printf@cadena^0,c
  3514  001CB2  0E7F               	movlw	high (STR_8+23)
  3515  001CB4  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3516  001CB6  ECC0  F00E         	call	_UART_printf	;wreg free
  3517  001CBA  0012               	return		;funcret
  3518  001CBC                     __end_of_mostrarMenu:
  3519                           	opt callstack 0
  3520                           
  3521 ;; *************** function _mostrarDatosSensoresWIFI *****************
  3522 ;; Defined at:
  3523 ;;		line 724 in file "main.c"
  3524 ;; Parameters:    Size  Location     Type
  3525 ;;		None
  3526 ;; Auto vars:     Size  Location     Type
  3527 ;;  i               2   72[BANK0 ] int 
  3528 ;;  buffer         50   20[BANK0 ] unsigned char [50]
  3529 ;;  humedad         1   71[BANK0 ] unsigned char 
  3530 ;;  temperatura     1   70[BANK0 ] unsigned char 
  3531 ;; Return value:  Size  Location     Type
  3532 ;;                  1    wreg      void 
  3533 ;; Registers used:
  3534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3540 ;;      Params:         0       0       0       0       0       0       0       0       0
  3541 ;;      Locals:         0      54       0       0       0       0       0       0       0
  3542 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3543 ;;      Totals:         2      54       0       0       0       0       0       0       0
  3544 ;;Total ram usage:       56 bytes
  3545 ;; Hardware stack levels used:    1
  3546 ;; Hardware stack levels required when called:    9
  3547 ;; This function calls:
  3548 ;;		_UART_printf
  3549 ;;		_UART_write
  3550 ;;		___wmul
  3551 ;;		_dameTemperaturaHumedad
  3552 ;;		_lecturaWifi
  3553 ;;		_sprintf
  3554 ;; This function is called by:
  3555 ;;		_sistemaPrincipal
  3556 ;; This function uses a non-reentrant model
  3557 ;;
  3558                           
  3559                           	psect	text11
  3560  000EDA                     __ptext11:
  3561                           	opt callstack 0
  3562  000EDA                     _mostrarDatosSensoresWIFI:
  3563                           	opt callstack 20
  3564  000EDA                     
  3565                           ;main.c: 727:     char buffer[50];;main.c: 728:     unsigned char temperatura, humedad;;
      +                          main.c: 730:     lecturaWifi();
  3566  000EDA  EC94  F008         	call	_lecturaWifi	;wreg free
  3567  000EDE                     
  3568                           ;main.c: 732:     UART_write('I');
  3569  000EDE  0E49               	movlw	73
  3570  000EE0  EC35  F011         	call	_UART_write
  3571  000EE4                     
  3572                           ;main.c: 735:     if (peticionLecturaSensores) {
  3573  000EE4  0100               	movlb	0	; () banked
  3574  000EE6  5182               	movf	_peticionLecturaSensores& (0+255),w,b
  3575  000EE8  B4D8               	btfsc	status,2,c
  3576  000EEA  EF79  F007         	goto	u2601
  3577  000EEE  EF7B  F007         	goto	u2600
  3578  000EF2                     u2601:
  3579  000EF2  EFD8  F007         	goto	l3345
  3580  000EF6                     u2600:
  3581  000EF6                     
  3582                           ; BSR set to: 0
  3583                           ;main.c: 737:         for (int i = 0; i < 3; i++) {
  3584  000EF6  0E00               	movlw	0
  3585  000EF8  6FF7               	movwf	(mostrarDatosSensoresWIFI@i+1)& (0+255),b
  3586  000EFA  0E00               	movlw	0
  3587  000EFC  6FF6               	movwf	mostrarDatosSensoresWIFI@i& (0+255),b
  3588  000EFE                     l3331:
  3589                           
  3590                           ; BSR set to: 0
  3591                           ;main.c: 739:             if (sensores[i].humedadMedida >= 60) {
  3592  000EFE  C0F6  F001         	movff	mostrarDatosSensoresWIFI@i,___wmul@multiplier
  3593  000F02  C0F7  F002         	movff	mostrarDatosSensoresWIFI@i+1,___wmul@multiplier+1
  3594  000F06  0E00               	movlw	0
  3595  000F08  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3596  000F0A  0E03               	movlw	3
  3597  000F0C  6E03               	movwf	___wmul@multiplicand^0,c
  3598  000F0E  ECE6  F010         	call	___wmul	;wreg free
  3599  000F12  0E60               	movlw	low _sensores
  3600  000F14  2401               	addwf	?___wmul^0,w,c
  3601  000F16  6ED9               	movwf	fsr2l,c
  3602  000F18  0E00               	movlw	high _sensores
  3603  000F1A  2002               	addwfc	(?___wmul+1)^0,w,c
  3604  000F1C  6EDA               	movwf	fsr2h,c
  3605  000F1E  0E01               	movlw	1
  3606  000F20  BEDB               	btfsc	plusw2,7,c
  3607  000F22  EF9D  F007         	goto	u2611
  3608  000F26  0E01               	movlw	1
  3609  000F28  50DB               	movf	plusw2,w,c
  3610  000F2A  E109               	bnz	u2610
  3611  000F2C  0E3C               	movlw	60
  3612  000F2E  5CDE               	subwf	postinc2,w,c
  3613  000F30  A0D8               	btfss	status,0,c
  3614  000F32  EF9D  F007         	goto	u2611
  3615  000F36  EF9F  F007         	goto	u2610
  3616  000F3A                     u2611:
  3617  000F3A  EFB6  F007         	goto	l3337
  3618  000F3E                     u2610:
  3619  000F3E                     
  3620                           ;main.c: 740:                 sprintf(buffer, "\r\n\nEl sensor %d detecta tierra seca\r\
      +                          n", i);
  3621  000F3E  0EC2               	movlw	low mostrarDatosSensoresWIFI@buffer
  3622  000F40  0100               	movlb	0	; () banked
  3623  000F42  6FAE               	movwf	sprintf@s& (0+255),b
  3624  000F44  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3625  000F46  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  3626  000F48  0EB1               	movlw	low STR_32
  3627  000F4A  6FB0               	movwf	sprintf@fmt& (0+255),b
  3628  000F4C  0E7D               	movlw	high STR_32
  3629  000F4E  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  3630  000F50  C0F6  F0B2         	movff	mostrarDatosSensoresWIFI@i,?_sprintf+4
  3631  000F54  C0F7  F0B3         	movff	mostrarDatosSensoresWIFI@i+1,?_sprintf+5
  3632  000F58  EC47  F00F         	call	_sprintf	;wreg free
  3633  000F5C                     l3335:
  3634                           
  3635                           ;main.c: 741:                 UART_printf(buffer);
  3636  000F5C  0EC2               	movlw	low mostrarDatosSensoresWIFI@buffer
  3637  000F5E  6E02               	movwf	UART_printf@cadena^0,c
  3638  000F60  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3639  000F62  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3640  000F64  ECC0  F00E         	call	_UART_printf	;wreg free
  3641                           
  3642                           ;main.c: 744:             } else {
  3643  000F68  EFC7  F007         	goto	l3341
  3644  000F6C                     l3337:
  3645                           
  3646                           ;main.c: 745:                 sprintf(buffer, "\r\n\nEl sensor %d detecta tierra humeda\
      +                          r\n", i);
  3647  000F6C  0EC2               	movlw	low mostrarDatosSensoresWIFI@buffer
  3648  000F6E  0100               	movlb	0	; () banked
  3649  000F70  6FAE               	movwf	sprintf@s& (0+255),b
  3650  000F72  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3651  000F74  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  3652  000F76  0E63               	movlw	low STR_33
  3653  000F78  6FB0               	movwf	sprintf@fmt& (0+255),b
  3654  000F7A  0E7D               	movlw	high STR_33
  3655  000F7C  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  3656  000F7E  C0F6  F0B2         	movff	mostrarDatosSensoresWIFI@i,?_sprintf+4
  3657  000F82  C0F7  F0B3         	movff	mostrarDatosSensoresWIFI@i+1,?_sprintf+5
  3658  000F86  EC47  F00F         	call	_sprintf	;wreg free
  3659  000F8A  EFAE  F007         	goto	l3335
  3660  000F8E                     l3341:
  3661                           
  3662                           ;main.c: 749:         }
  3663  000F8E  0100               	movlb	0	; () banked
  3664  000F90  4BF6               	infsnz	mostrarDatosSensoresWIFI@i& (0+255),f,b
  3665  000F92  2BF7               	incf	(mostrarDatosSensoresWIFI@i+1)& (0+255),f,b
  3666  000F94                     
  3667                           ; BSR set to: 0
  3668  000F94  BFF7               	btfsc	(mostrarDatosSensoresWIFI@i+1)& (0+255),7,b
  3669  000F96  EFD6  F007         	goto	u2621
  3670  000F9A  51F7               	movf	(mostrarDatosSensoresWIFI@i+1)& (0+255),w,b
  3671  000F9C  E109               	bnz	u2620
  3672  000F9E  0E03               	movlw	3
  3673  000FA0  5DF6               	subwf	mostrarDatosSensoresWIFI@i& (0+255),w,b
  3674  000FA2  A0D8               	btfss	status,0,c
  3675  000FA4  EFD6  F007         	goto	u2621
  3676  000FA8  EFD8  F007         	goto	u2620
  3677  000FAC                     u2621:
  3678  000FAC  EF7F  F007         	goto	l3331
  3679  000FB0                     u2620:
  3680  000FB0                     l3345:
  3681                           
  3682                           ; BSR set to: 0
  3683                           ;main.c: 753:     dameTemperaturaHumedad(&humedad, &temperatura);
  3684  000FB0  0EF5               	movlw	low mostrarDatosSensoresWIFI@humedad
  3685  000FB2  6E04               	movwf	dameTemperaturaHumedad@Humedad^0,c
  3686  000FB4  0E00               	movlw	high mostrarDatosSensoresWIFI@humedad
  3687  000FB6  6E05               	movwf	(dameTemperaturaHumedad@Humedad+1)^0,c
  3688  000FB8  0EF4               	movlw	low mostrarDatosSensoresWIFI@temperatura
  3689  000FBA  6E06               	movwf	dameTemperaturaHumedad@Temperatura^0,c
  3690  000FBC  0E00               	movlw	high mostrarDatosSensoresWIFI@temperatura
  3691  000FBE  6E07               	movwf	(dameTemperaturaHumedad@Temperatura+1)^0,c
  3692  000FC0  ECD4  F00B         	call	_dameTemperaturaHumedad	;wreg free
  3693                           
  3694                           ;main.c: 755:     sprintf(buffer, "\r\n\nLa Humedad Ambiente es: %d\r\n", humedad);
  3695  000FC4  0EC2               	movlw	low mostrarDatosSensoresWIFI@buffer
  3696  000FC6  0100               	movlb	0	; () banked
  3697  000FC8  6FAE               	movwf	sprintf@s& (0+255),b
  3698  000FCA  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3699  000FCC  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  3700  000FCE  0ECD               	movlw	low STR_29
  3701  000FD0  6FB0               	movwf	sprintf@fmt& (0+255),b
  3702  000FD2  0E7E               	movlw	high STR_29
  3703  000FD4  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  3704  000FD6  C0F5  F0B2         	movff	mostrarDatosSensoresWIFI@humedad,?_sprintf+4
  3705  000FDA  6BB3               	clrf	(?_sprintf+5)& (0+255),b
  3706  000FDC  EC47  F00F         	call	_sprintf	;wreg free
  3707  000FE0                     
  3708                           ;main.c: 756:     UART_printf(buffer);
  3709  000FE0  0EC2               	movlw	low mostrarDatosSensoresWIFI@buffer
  3710  000FE2  6E02               	movwf	UART_printf@cadena^0,c
  3711  000FE4  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3712  000FE6  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3713  000FE8  ECC0  F00E         	call	_UART_printf	;wreg free
  3714  000FEC                     
  3715                           ;main.c: 757:     sprintf(buffer, "\r\n\nLa Temperatura es: %d C\r\n", temperatura);
  3716  000FEC  0EC2               	movlw	low mostrarDatosSensoresWIFI@buffer
  3717  000FEE  0100               	movlb	0	; () banked
  3718  000FF0  6FAE               	movwf	sprintf@s& (0+255),b
  3719  000FF2  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3720  000FF4  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  3721  000FF6  0E0C               	movlw	low STR_30
  3722  000FF8  6FB0               	movwf	sprintf@fmt& (0+255),b
  3723  000FFA  0E7F               	movlw	high STR_30
  3724  000FFC  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  3725  000FFE  C0F4  F0B2         	movff	mostrarDatosSensoresWIFI@temperatura,?_sprintf+4
  3726  001002  6BB3               	clrf	(?_sprintf+5)& (0+255),b
  3727  001004  EC47  F00F         	call	_sprintf	;wreg free
  3728                           
  3729                           ;main.c: 758:     UART_printf(buffer);
  3730  001008  0EC2               	movlw	low mostrarDatosSensoresWIFI@buffer
  3731  00100A  6E02               	movwf	UART_printf@cadena^0,c
  3732  00100C  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  3733  00100E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3734  001010  ECC0  F00E         	call	_UART_printf	;wreg free
  3735  001014                     
  3736                           ;main.c: 760:     UART_write('I');
  3737  001014  0E49               	movlw	73
  3738  001016  EC35  F011         	call	_UART_write
  3739  00101A  0012               	return		;funcret
  3740  00101C                     __end_of_mostrarDatosSensoresWIFI:
  3741                           	opt callstack 0
  3742                           
  3743 ;; *************** function _lecturaWifi *****************
  3744 ;; Defined at:
  3745 ;;		line 487 in file "main.c"
  3746 ;; Parameters:    Size  Location     Type
  3747 ;;		None
  3748 ;; Auto vars:     Size  Location     Type
  3749 ;;  i               2   14[COMRAM] int 
  3750 ;;  Rx              1   13[COMRAM] unsigned char 
  3751 ;; Return value:  Size  Location     Type
  3752 ;;                  1    wreg      void 
  3753 ;; Registers used:
  3754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3755 ;; Tracked objects:
  3756 ;;		On entry : 0/0
  3757 ;;		On exit  : 0/0
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3760 ;;      Params:         0       0       0       0       0       0       0       0       0
  3761 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3762 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3763 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3764 ;;Total ram usage:        3 bytes
  3765 ;; Hardware stack levels used:    1
  3766 ;; Hardware stack levels required when called:    3
  3767 ;; This function calls:
  3768 ;;		_UART_printf
  3769 ;;		_UART_read
  3770 ;;		_UART_write
  3771 ;;		___wmul
  3772 ;;		_restablecerDatosSensor
  3773 ;; This function is called by:
  3774 ;;		_sistemaRegado
  3775 ;;		_mostrarDatosSensoresWIFI
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778                           
  3779                           	psect	text12
  3780  001128                     __ptext12:
  3781                           	opt callstack 0
  3782  001128                     _lecturaWifi:
  3783                           	opt callstack 26
  3784  001128                     
  3785                           ;main.c: 489:     PIE1bits.RCIE = 0;
  3786  001128  9A9D               	bcf	157,5,c	;volatile
  3787  00112A                     
  3788                           ;main.c: 493:     restablecerDatosSensor();
  3789  00112A  EC5E  F00E         	call	_restablecerDatosSensor	;wreg free
  3790  00112E                     
  3791                           ;main.c: 495:     UART_write('R');
  3792  00112E  0E52               	movlw	82
  3793  001130  EC35  F011         	call	_UART_write
  3794  001134                     
  3795                           ;main.c: 497:     UART_printf("\r\nSolicitando Muestreo de sensores\r\n\n");
  3796  001134  0E8B               	movlw	low STR_13
  3797  001136  6E02               	movwf	UART_printf@cadena^0,c
  3798  001138  0E7D               	movlw	high STR_13
  3799  00113A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3800  00113C  ECC0  F00E         	call	_UART_printf	;wreg free
  3801  001140                     
  3802                           ;main.c: 499:     Rx = UART_read();
  3803  001140  EC1D  F00F         	call	_UART_read	;wreg free
  3804  001144  6E0E               	movwf	lecturaWifi@Rx^0,c
  3805  001146                     
  3806                           ;main.c: 501:     if (Rx == 'O') {
  3807  001146  0E4F               	movlw	79
  3808  001148  180E               	xorwf	lecturaWifi@Rx^0,w,c
  3809  00114A  A4D8               	btfss	status,2,c
  3810  00114C  EFAA  F008         	goto	u2141
  3811  001150  EFAC  F008         	goto	u2140
  3812  001154                     u2141:
  3813  001154  EF08  F009         	goto	l2975
  3814  001158                     u2140:
  3815  001158                     
  3816                           ;main.c: 503:         peticionLecturaSensores = 1;
  3817  001158  0E01               	movlw	1
  3818  00115A  0100               	movlb	0	; () banked
  3819  00115C  6F82               	movwf	_peticionLecturaSensores& (0+255),b
  3820                           
  3821                           ;main.c: 505:         for (int i = 0; i < 3; i++) {
  3822  00115E  0E00               	movlw	0
  3823  001160  6E10               	movwf	(lecturaWifi@i+1)^0,c
  3824  001162  0E00               	movlw	0
  3825  001164  6E0F               	movwf	lecturaWifi@i^0,c
  3826  001166                     l2957:
  3827                           
  3828                           ;main.c: 507:             UART_printf("\r\nDame DATOS DEL SENSOR :\r\n");
  3829  001166  0E29               	movlw	low STR_14
  3830  001168  6E02               	movwf	UART_printf@cadena^0,c
  3831  00116A  0E7F               	movlw	high STR_14
  3832  00116C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3833  00116E  ECC0  F00E         	call	_UART_printf	;wreg free
  3834  001172                     
  3835                           ;main.c: 509:             Rx = UART_read();
  3836  001172  EC1D  F00F         	call	_UART_read	;wreg free
  3837  001176  6E0E               	movwf	lecturaWifi@Rx^0,c
  3838  001178                     
  3839                           ;main.c: 510:             Rx -= 48;
  3840  001178  0E30               	movlw	48
  3841  00117A  5E0E               	subwf	lecturaWifi@Rx^0,f,c
  3842  00117C                     
  3843                           ;main.c: 512:             if (Rx == 1)
  3844  00117C  040E               	decf	lecturaWifi@Rx^0,w,c
  3845  00117E  A4D8               	btfss	status,2,c
  3846  001180  EFC4  F008         	goto	u2151
  3847  001184  EFC6  F008         	goto	u2150
  3848  001188                     u2151:
  3849  001188  EFDC  F008         	goto	l2967
  3850  00118C                     u2150:
  3851  00118C                     
  3852                           ;main.c: 513:                 sensores[i].humedadMedida = 60;
  3853  00118C  C00F  F001         	movff	lecturaWifi@i,___wmul@multiplier
  3854  001190  C010  F002         	movff	lecturaWifi@i+1,___wmul@multiplier+1
  3855  001194  0E00               	movlw	0
  3856  001196  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3857  001198  0E03               	movlw	3
  3858  00119A  6E03               	movwf	___wmul@multiplicand^0,c
  3859  00119C  ECE6  F010         	call	___wmul	;wreg free
  3860  0011A0  0E60               	movlw	low _sensores
  3861  0011A2  2401               	addwf	?___wmul^0,w,c
  3862  0011A4  6ED9               	movwf	fsr2l,c
  3863  0011A6  0E00               	movlw	high _sensores
  3864  0011A8  2002               	addwfc	(?___wmul+1)^0,w,c
  3865  0011AA  6EDA               	movwf	fsr2h,c
  3866  0011AC  0E3C               	movlw	60
  3867  0011AE  6EDE               	movwf	postinc2,c
  3868  0011B0  0E00               	movlw	0
  3869  0011B2  6EDD               	movwf	postdec2,c
  3870  0011B4  EFF0  F008         	goto	l2969
  3871  0011B8                     l2967:
  3872                           
  3873                           ;main.c: 515:                 sensores[i].humedadMedida = 0;
  3874  0011B8  C00F  F001         	movff	lecturaWifi@i,___wmul@multiplier
  3875  0011BC  C010  F002         	movff	lecturaWifi@i+1,___wmul@multiplier+1
  3876  0011C0  0E00               	movlw	0
  3877  0011C2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3878  0011C4  0E03               	movlw	3
  3879  0011C6  6E03               	movwf	___wmul@multiplicand^0,c
  3880  0011C8  ECE6  F010         	call	___wmul	;wreg free
  3881  0011CC  0E60               	movlw	low _sensores
  3882  0011CE  2401               	addwf	?___wmul^0,w,c
  3883  0011D0  6ED9               	movwf	fsr2l,c
  3884  0011D2  0E00               	movlw	high _sensores
  3885  0011D4  2002               	addwfc	(?___wmul+1)^0,w,c
  3886  0011D6  6EDA               	movwf	fsr2h,c
  3887  0011D8  0E00               	movlw	0
  3888  0011DA  6EDE               	movwf	postinc2,c
  3889  0011DC  0E00               	movlw	0
  3890  0011DE  6EDD               	movwf	postdec2,c
  3891  0011E0                     l2969:
  3892                           
  3893                           ;main.c: 517:         }
  3894  0011E0  4A0F               	infsnz	lecturaWifi@i^0,f,c
  3895  0011E2  2A10               	incf	(lecturaWifi@i+1)^0,f,c
  3896  0011E4  BE10               	btfsc	(lecturaWifi@i+1)^0,7,c
  3897  0011E6  EFFE  F008         	goto	u2161
  3898  0011EA  5010               	movf	(lecturaWifi@i+1)^0,w,c
  3899  0011EC  E109               	bnz	u2160
  3900  0011EE  0E03               	movlw	3
  3901  0011F0  5C0F               	subwf	lecturaWifi@i^0,w,c
  3902  0011F2  A0D8               	btfss	status,0,c
  3903  0011F4  EFFE  F008         	goto	u2161
  3904  0011F8  EF00  F009         	goto	u2160
  3905  0011FC                     u2161:
  3906  0011FC  EFB3  F008         	goto	l2957
  3907  001200                     u2160:
  3908  001200                     
  3909                           ;main.c: 519:         UART_printf("\r\nSensores Leidos con Exito!\r\n\n");
  3910  001200  0E8D               	movlw	low STR_15
  3911  001202  6E02               	movwf	UART_printf@cadena^0,c
  3912  001204  0E7E               	movlw	high STR_15
  3913  001206  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3914  001208  ECC0  F00E         	call	_UART_printf	;wreg free
  3915                           
  3916                           ;main.c: 521:     } else {
  3917  00120C  EF0B  F009         	goto	l2977
  3918  001210                     l2975:
  3919                           
  3920                           ;main.c: 522:         peticionLecturaSensores = 0;
  3921  001210  0E00               	movlw	0
  3922  001212  0100               	movlb	0	; () banked
  3923  001214  6F82               	movwf	_peticionLecturaSensores& (0+255),b
  3924  001216                     l2977:
  3925                           
  3926                           ;main.c: 525:     PIE1bits.RCIE = 1;
  3927  001216  8A9D               	bsf	157,5,c	;volatile
  3928  001218  0012               	return		;funcret
  3929  00121A                     __end_of_lecturaWifi:
  3930                           	opt callstack 0
  3931                           
  3932 ;; *************** function _restablecerDatosSensor *****************
  3933 ;; Defined at:
  3934 ;;		line 482 in file "main.c"
  3935 ;; Parameters:    Size  Location     Type
  3936 ;;		None
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;  i               2   11[COMRAM] int 
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  1    wreg      void 
  3941 ;; Registers used:
  3942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3948 ;;      Params:         0       0       0       0       0       0       0       0       0
  3949 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3950 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3951 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3952 ;;Total ram usage:        2 bytes
  3953 ;; Hardware stack levels used:    1
  3954 ;; Hardware stack levels required when called:    2
  3955 ;; This function calls:
  3956 ;;		___wmul
  3957 ;;		_constructorSensor
  3958 ;; This function is called by:
  3959 ;;		_lecturaWifi
  3960 ;;		_main
  3961 ;; This function uses a non-reentrant model
  3962 ;;
  3963                           
  3964                           	psect	text13
  3965  001CBC                     __ptext13:
  3966                           	opt callstack 0
  3967  001CBC                     _restablecerDatosSensor:
  3968                           	opt callstack 26
  3969  001CBC                     
  3970                           ;main.c: 483:     for (int i = 0; i < 3; i++)
  3971  001CBC  0E00               	movlw	0
  3972  001CBE  6E0D               	movwf	(restablecerDatosSensor@i+1)^0,c
  3973  001CC0  0E00               	movlw	0
  3974  001CC2  6E0C               	movwf	restablecerDatosSensor@i^0,c
  3975  001CC4                     l2839:
  3976                           
  3977                           ;main.c: 484:         constructorSensor(sensores[i], 0, i);
  3978  001CC4  C00C  F001         	movff	restablecerDatosSensor@i,___wmul@multiplier
  3979  001CC8  C00D  F002         	movff	restablecerDatosSensor@i+1,___wmul@multiplier+1
  3980  001CCC  0E00               	movlw	0
  3981  001CCE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3982  001CD0  0E03               	movlw	3
  3983  001CD2  6E03               	movwf	___wmul@multiplicand^0,c
  3984  001CD4  ECE6  F010         	call	___wmul	;wreg free
  3985  001CD8  0E60               	movlw	low _sensores
  3986  001CDA  2401               	addwf	?___wmul^0,w,c
  3987  001CDC  6ED9               	movwf	fsr2l,c
  3988  001CDE  0E00               	movlw	high _sensores
  3989  001CE0  2002               	addwfc	(?___wmul+1)^0,w,c
  3990  001CE2  6EDA               	movwf	fsr2h,c
  3991  001CE4  CFDE F007          	movff	postinc2,constructorSensor@s
  3992  001CE8  CFDE F008          	movff	postinc2,constructorSensor@s+1
  3993  001CEC  CFDD F009          	movff	postdec2,constructorSensor@s+2
  3994  001CF0  0E00               	movlw	0
  3995  001CF2  6E0A               	movwf	constructorSensor@humedad^0,c
  3996  001CF4  C00C  F00B         	movff	restablecerDatosSensor@i,constructorSensor@pin
  3997  001CF8  EC4B  F011         	call	_constructorSensor	;wreg free
  3998  001CFC  4A0C               	infsnz	restablecerDatosSensor@i^0,f,c
  3999  001CFE  2A0D               	incf	(restablecerDatosSensor@i+1)^0,f,c
  4000  001D00  BE0D               	btfsc	(restablecerDatosSensor@i+1)^0,7,c
  4001  001D02  EF8C  F00E         	goto	u2031
  4002  001D06  500D               	movf	(restablecerDatosSensor@i+1)^0,w,c
  4003  001D08  E109               	bnz	u2030
  4004  001D0A  0E03               	movlw	3
  4005  001D0C  5C0C               	subwf	restablecerDatosSensor@i^0,w,c
  4006  001D0E  A0D8               	btfss	status,0,c
  4007  001D10  EF8C  F00E         	goto	u2031
  4008  001D14  EF8E  F00E         	goto	u2030
  4009  001D18                     u2031:
  4010  001D18  EF62  F00E         	goto	l2839
  4011  001D1C                     u2030:
  4012  001D1C  0012               	return		;funcret
  4013  001D1E                     __end_of_restablecerDatosSensor:
  4014                           	opt callstack 0
  4015                           
  4016 ;; *************** function _constructorSensor *****************
  4017 ;; Defined at:
  4018 ;;		line 113 in file "main.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;  s               3    6[COMRAM] struct .
  4021 ;;  humedad         1    9[COMRAM] unsigned char 
  4022 ;;  pin             1   10[COMRAM] unsigned char 
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;		None
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  1    wreg      void 
  4027 ;; Registers used:
  4028 ;;		None
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4034 ;;      Params:         5       0       0       0       0       0       0       0       0
  4035 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4036 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4037 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4038 ;;Total ram usage:        5 bytes
  4039 ;; Hardware stack levels used:    1
  4040 ;; Hardware stack levels required when called:    1
  4041 ;; This function calls:
  4042 ;;		Nothing
  4043 ;; This function is called by:
  4044 ;;		_restablecerDatosSensor
  4045 ;; This function uses a non-reentrant model
  4046 ;;
  4047                           
  4048                           	psect	text14
  4049  002296                     __ptext14:
  4050                           	opt callstack 0
  4051  002296                     _constructorSensor:
  4052                           	opt callstack 26
  4053  002296                     
  4054                           ;main.c: 115:     s.humedadMedida = humedad;
  4055  002296  C00A  F007         	movff	constructorSensor@humedad,constructorSensor@s
  4056  00229A  6A08               	clrf	(constructorSensor@s+1)^0,c
  4057                           
  4058                           ;main.c: 116:     s.pinSensor = pin;
  4059  00229C  C00B  F009         	movff	constructorSensor@pin,constructorSensor@s+2
  4060  0022A0  0012               	return		;funcret
  4061  0022A2                     __end_of_constructorSensor:
  4062                           	opt callstack 0
  4063                           
  4064 ;; *************** function _mostrarDatosSensores *****************
  4065 ;; Defined at:
  4066 ;;		line 687 in file "main.c"
  4067 ;; Parameters:    Size  Location     Type
  4068 ;;		None
  4069 ;; Auto vars:     Size  Location     Type
  4070 ;;  i               2   72[BANK0 ] int 
  4071 ;;  buffer         50   20[BANK0 ] unsigned char [50]
  4072 ;;  porcentajeHu    2   74[BANK0 ] int 
  4073 ;;  humedad         1   71[BANK0 ] unsigned char 
  4074 ;;  temperatura     1   70[BANK0 ] unsigned char 
  4075 ;; Return value:  Size  Location     Type
  4076 ;;                  1    wreg      void 
  4077 ;; Registers used:
  4078 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4079 ;; Tracked objects:
  4080 ;;		On entry : 0/0
  4081 ;;		On exit  : 0/0
  4082 ;;		Unchanged: 0/0
  4083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4084 ;;      Params:         0       0       0       0       0       0       0       0       0
  4085 ;;      Locals:         0      56       0       0       0       0       0       0       0
  4086 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4087 ;;      Totals:         0      56       0       0       0       0       0       0       0
  4088 ;;Total ram usage:       56 bytes
  4089 ;; Hardware stack levels used:    1
  4090 ;; Hardware stack levels required when called:    9
  4091 ;; This function calls:
  4092 ;;		_UART_printf
  4093 ;;		_UART_write
  4094 ;;		___awdiv
  4095 ;;		___wmul
  4096 ;;		_dameTemperaturaHumedad
  4097 ;;		_lecturaAnalogaSensores
  4098 ;;		_sprintf
  4099 ;; This function is called by:
  4100 ;;		_sistemaPrincipal
  4101 ;; This function uses a non-reentrant model
  4102 ;;
  4103                           
  4104                           	psect	text15
  4105  000C44                     __ptext15:
  4106                           	opt callstack 0
  4107  000C44                     _mostrarDatosSensores:
  4108                           	opt callstack 20
  4109  000C44                     
  4110                           ;main.c: 691:     unsigned char temperatura, humedad;;main.c: 693:     dameTemperaturaHu
      +                          medad(&humedad, &temperatura);
  4111  000C44  0EF5               	movlw	low mostrarDatosSensores@humedad
  4112  000C46  6E04               	movwf	dameTemperaturaHumedad@Humedad^0,c
  4113  000C48  0E00               	movlw	high mostrarDatosSensores@humedad
  4114  000C4A  6E05               	movwf	(dameTemperaturaHumedad@Humedad+1)^0,c
  4115  000C4C  0EF4               	movlw	low mostrarDatosSensores@temperatura
  4116  000C4E  6E06               	movwf	dameTemperaturaHumedad@Temperatura^0,c
  4117  000C50  0E00               	movlw	high mostrarDatosSensores@temperatura
  4118  000C52  6E07               	movwf	(dameTemperaturaHumedad@Temperatura+1)^0,c
  4119  000C54  ECD4  F00B         	call	_dameTemperaturaHumedad	;wreg free
  4120  000C58                     
  4121                           ;main.c: 695:     UART_write('I');
  4122  000C58  0E49               	movlw	73
  4123  000C5A  EC35  F011         	call	_UART_write
  4124  000C5E                     
  4125                           ;main.c: 698:     sprintf(buffer, "\r\n\nLa Humedad Ambiente es: %d\r\n", humedad);
  4126  000C5E  0EC2               	movlw	low mostrarDatosSensores@buffer
  4127  000C60  0100               	movlb	0	; () banked
  4128  000C62  6FAE               	movwf	sprintf@s& (0+255),b
  4129  000C64  0E00               	movlw	high mostrarDatosSensores@buffer
  4130  000C66  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  4131  000C68  0ECD               	movlw	low STR_29
  4132  000C6A  6FB0               	movwf	sprintf@fmt& (0+255),b
  4133  000C6C  0E7E               	movlw	high STR_29
  4134  000C6E  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  4135  000C70  C0F5  F0B2         	movff	mostrarDatosSensores@humedad,?_sprintf+4
  4136  000C74  6BB3               	clrf	(?_sprintf+5)& (0+255),b
  4137  000C76  EC47  F00F         	call	_sprintf	;wreg free
  4138  000C7A                     
  4139                           ;main.c: 699:     UART_printf(buffer);
  4140  000C7A  0EC2               	movlw	low mostrarDatosSensores@buffer
  4141  000C7C  6E02               	movwf	UART_printf@cadena^0,c
  4142  000C7E  0E00               	movlw	high mostrarDatosSensores@buffer
  4143  000C80  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4144  000C82  ECC0  F00E         	call	_UART_printf	;wreg free
  4145  000C86                     
  4146                           ;main.c: 700:     sprintf(buffer, "\r\n\nLa Temperatura es: %d C\r\n", temperatura);
  4147  000C86  0EC2               	movlw	low mostrarDatosSensores@buffer
  4148  000C88  0100               	movlb	0	; () banked
  4149  000C8A  6FAE               	movwf	sprintf@s& (0+255),b
  4150  000C8C  0E00               	movlw	high mostrarDatosSensores@buffer
  4151  000C8E  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  4152  000C90  0E0C               	movlw	low STR_30
  4153  000C92  6FB0               	movwf	sprintf@fmt& (0+255),b
  4154  000C94  0E7F               	movlw	high STR_30
  4155  000C96  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  4156  000C98  C0F4  F0B2         	movff	mostrarDatosSensores@temperatura,?_sprintf+4
  4157  000C9C  6BB3               	clrf	(?_sprintf+5)& (0+255),b
  4158  000C9E  EC47  F00F         	call	_sprintf	;wreg free
  4159  000CA2                     
  4160                           ;main.c: 701:     UART_printf(buffer);
  4161  000CA2  0EC2               	movlw	low mostrarDatosSensores@buffer
  4162  000CA4  6E02               	movwf	UART_printf@cadena^0,c
  4163  000CA6  0E00               	movlw	high mostrarDatosSensores@buffer
  4164  000CA8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4165  000CAA  ECC0  F00E         	call	_UART_printf	;wreg free
  4166  000CAE                     
  4167                           ;main.c: 703:     lecturaAnalogaSensores();
  4168  000CAE  EC92  F00D         	call	_lecturaAnalogaSensores	;wreg free
  4169  000CB2                     
  4170                           ;main.c: 706:     for (int i = 0; i < 3; i++) {
  4171  000CB2  0E00               	movlw	0
  4172  000CB4  0100               	movlb	0	; () banked
  4173  000CB6  6FF7               	movwf	(mostrarDatosSensores@i+1)& (0+255),b
  4174  000CB8  0E00               	movlw	0
  4175  000CBA  6FF6               	movwf	mostrarDatosSensores@i& (0+255),b
  4176  000CBC                     l3375:
  4177                           
  4178                           ; BSR set to: 0
  4179                           ;main.c: 708:         porcentajeHumedad = (sensores[i].humedadMedida);
  4180  000CBC  C0F6  F001         	movff	mostrarDatosSensores@i,___wmul@multiplier
  4181  000CC0  C0F7  F002         	movff	mostrarDatosSensores@i+1,___wmul@multiplier+1
  4182  000CC4  0E00               	movlw	0
  4183  000CC6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4184  000CC8  0E03               	movlw	3
  4185  000CCA  6E03               	movwf	___wmul@multiplicand^0,c
  4186  000CCC  ECE6  F010         	call	___wmul	;wreg free
  4187  000CD0  0E60               	movlw	low _sensores
  4188  000CD2  2401               	addwf	?___wmul^0,w,c
  4189  000CD4  6ED9               	movwf	fsr2l,c
  4190  000CD6  0E00               	movlw	high _sensores
  4191  000CD8  2002               	addwfc	(?___wmul+1)^0,w,c
  4192  000CDA  6EDA               	movwf	fsr2h,c
  4193  000CDC  CFDE F0F8          	movff	postinc2,mostrarDatosSensores@porcentajeHumedad
  4194  000CE0  CFDD F0F9          	movff	postdec2,mostrarDatosSensores@porcentajeHumedad+1
  4195  000CE4                     
  4196                           ;main.c: 709:         porcentajeHumedad *= 10;
  4197  000CE4  C0F8  F001         	movff	mostrarDatosSensores@porcentajeHumedad,___wmul@multiplier
  4198  000CE8  C0F9  F002         	movff	mostrarDatosSensores@porcentajeHumedad+1,___wmul@multiplier+1
  4199  000CEC  0E00               	movlw	0
  4200  000CEE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4201  000CF0  0E0A               	movlw	10
  4202  000CF2  6E03               	movwf	___wmul@multiplicand^0,c
  4203  000CF4  ECE6  F010         	call	___wmul	;wreg free
  4204  000CF8  C001  F0F8         	movff	?___wmul,mostrarDatosSensores@porcentajeHumedad
  4205  000CFC  C002  F0F9         	movff	?___wmul+1,mostrarDatosSensores@porcentajeHumedad+1
  4206  000D00                     
  4207                           ;main.c: 710:         porcentajeHumedad /= 1023;
  4208  000D00  C0F8  F001         	movff	mostrarDatosSensores@porcentajeHumedad,___awdiv@dividend
  4209  000D04  C0F9  F002         	movff	mostrarDatosSensores@porcentajeHumedad+1,___awdiv@dividend+1
  4210  000D08  0E03               	movlw	3
  4211  000D0A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4212  000D0C  6803               	setf	___awdiv@divisor^0,c
  4213  000D0E  EC72  F00B         	call	___awdiv	;wreg free
  4214  000D12  C001  F0F8         	movff	?___awdiv,mostrarDatosSensores@porcentajeHumedad
  4215  000D16  C002  F0F9         	movff	?___awdiv+1,mostrarDatosSensores@porcentajeHumedad+1
  4216  000D1A                     
  4217                           ;main.c: 711:         porcentajeHumedad *= 10;
  4218  000D1A  C0F8  F001         	movff	mostrarDatosSensores@porcentajeHumedad,___wmul@multiplier
  4219  000D1E  C0F9  F002         	movff	mostrarDatosSensores@porcentajeHumedad+1,___wmul@multiplier+1
  4220  000D22  0E00               	movlw	0
  4221  000D24  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4222  000D26  0E0A               	movlw	10
  4223  000D28  6E03               	movwf	___wmul@multiplicand^0,c
  4224  000D2A  ECE6  F010         	call	___wmul	;wreg free
  4225  000D2E  C001  F0F8         	movff	?___wmul,mostrarDatosSensores@porcentajeHumedad
  4226  000D32  C002  F0F9         	movff	?___wmul+1,mostrarDatosSensores@porcentajeHumedad+1
  4227  000D36                     
  4228                           ;main.c: 713:         sprintf(buffer, "\r\n\nPorcentaje Humedad del sensor %d: %d\r\n"
  4229  000D36  0EC2               	movlw	low mostrarDatosSensores@buffer
  4230  000D38  0100               	movlb	0	; () banked
  4231  000D3A  6FAE               	movwf	sprintf@s& (0+255),b
  4232  000D3C  0E00               	movlw	high mostrarDatosSensores@buffer
  4233  000D3E  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  4234  000D40  0E39               	movlw	low STR_31
  4235  000D42  6FB0               	movwf	sprintf@fmt& (0+255),b
  4236  000D44  0E7D               	movlw	high STR_31
  4237  000D46  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  4238  000D48  C0F6  F0B2         	movff	mostrarDatosSensores@i,?_sprintf+4
  4239  000D4C  C0F7  F0B3         	movff	mostrarDatosSensores@i+1,?_sprintf+5
  4240  000D50  C0F8  F0B4         	movff	mostrarDatosSensores@porcentajeHumedad,?_sprintf+6
  4241  000D54  C0F9  F0B5         	movff	mostrarDatosSensores@porcentajeHumedad+1,?_sprintf+7
  4242  000D58  EC47  F00F         	call	_sprintf	;wreg free
  4243  000D5C                     
  4244                           ;main.c: 715:         UART_printf(buffer);
  4245  000D5C  0EC2               	movlw	low mostrarDatosSensores@buffer
  4246  000D5E  6E02               	movwf	UART_printf@cadena^0,c
  4247  000D60  0E00               	movlw	high mostrarDatosSensores@buffer
  4248  000D62  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4249  000D64  ECC0  F00E         	call	_UART_printf	;wreg free
  4250  000D68                     
  4251                           ;main.c: 718:     }
  4252  000D68  0100               	movlb	0	; () banked
  4253  000D6A  4BF6               	infsnz	mostrarDatosSensores@i& (0+255),f,b
  4254  000D6C  2BF7               	incf	(mostrarDatosSensores@i+1)& (0+255),f,b
  4255  000D6E                     
  4256                           ; BSR set to: 0
  4257  000D6E  BFF7               	btfsc	(mostrarDatosSensores@i+1)& (0+255),7,b
  4258  000D70  EFC3  F006         	goto	u2631
  4259  000D74  51F7               	movf	(mostrarDatosSensores@i+1)& (0+255),w,b
  4260  000D76  E109               	bnz	u2630
  4261  000D78  0E03               	movlw	3
  4262  000D7A  5DF6               	subwf	mostrarDatosSensores@i& (0+255),w,b
  4263  000D7C  A0D8               	btfss	status,0,c
  4264  000D7E  EFC3  F006         	goto	u2631
  4265  000D82  EFC5  F006         	goto	u2630
  4266  000D86                     u2631:
  4267  000D86  EF5E  F006         	goto	l3375
  4268  000D8A                     u2630:
  4269  000D8A                     
  4270                           ; BSR set to: 0
  4271                           ;main.c: 720:     UART_write('I');
  4272  000D8A  0E49               	movlw	73
  4273  000D8C  EC35  F011         	call	_UART_write
  4274  000D90  0012               	return		;funcret
  4275  000D92                     __end_of_mostrarDatosSensores:
  4276                           	opt callstack 0
  4277                           
  4278 ;; *************** function _lecturaAnalogaSensores *****************
  4279 ;; Defined at:
  4280 ;;		line 529 in file "main.c"
  4281 ;; Parameters:    Size  Location     Type
  4282 ;;		None
  4283 ;; Auto vars:     Size  Location     Type
  4284 ;;  i               2    7[COMRAM] int 
  4285 ;; Return value:  Size  Location     Type
  4286 ;;                  1    wreg      void 
  4287 ;; Registers used:
  4288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4289 ;; Tracked objects:
  4290 ;;		On entry : 0/0
  4291 ;;		On exit  : 0/0
  4292 ;;		Unchanged: 0/0
  4293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4294 ;;      Params:         0       0       0       0       0       0       0       0       0
  4295 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4296 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4297 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4298 ;;Total ram usage:        3 bytes
  4299 ;; Hardware stack levels used:    1
  4300 ;; Hardware stack levels required when called:    2
  4301 ;; This function calls:
  4302 ;;		___wmul
  4303 ;;		_dameHumedadSuelo
  4304 ;; This function is called by:
  4305 ;;		_sistemaRegado
  4306 ;;		_mostrarDatosSensores
  4307 ;; This function uses a non-reentrant model
  4308 ;;
  4309                           
  4310                           	psect	text16
  4311  001B24                     __ptext16:
  4312                           	opt callstack 0
  4313  001B24                     _lecturaAnalogaSensores:
  4314                           	opt callstack 27
  4315  001B24                     
  4316                           ;main.c: 531:     for (int i = 0; i < 3; i++) {
  4317  001B24  0E00               	movlw	0
  4318  001B26  6E09               	movwf	(lecturaAnalogaSensores@i+1)^0,c
  4319  001B28  0E00               	movlw	0
  4320  001B2A  6E08               	movwf	lecturaAnalogaSensores@i^0,c
  4321  001B2C                     l2985:
  4322                           
  4323                           ;main.c: 532:         sensores[i].humedadMedida = dameHumedadSuelo(i);
  4324  001B2C  C008  F001         	movff	lecturaAnalogaSensores@i,___wmul@multiplier
  4325  001B30  C009  F002         	movff	lecturaAnalogaSensores@i+1,___wmul@multiplier+1
  4326  001B34  0E00               	movlw	0
  4327  001B36  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4328  001B38  0E03               	movlw	3
  4329  001B3A  6E03               	movwf	___wmul@multiplicand^0,c
  4330  001B3C  ECE6  F010         	call	___wmul	;wreg free
  4331  001B40  0E60               	movlw	low _sensores
  4332  001B42  2401               	addwf	?___wmul^0,w,c
  4333  001B44  6ED9               	movwf	fsr2l,c
  4334  001B46  0E00               	movlw	high _sensores
  4335  001B48  2002               	addwfc	(?___wmul+1)^0,w,c
  4336  001B4A  6EDA               	movwf	fsr2h,c
  4337  001B4C  5008               	movf	lecturaAnalogaSensores@i^0,w,c
  4338  001B4E  ECBC  F00F         	call	_dameHumedadSuelo
  4339  001B52  C001  FFDE         	movff	?_dameHumedadSuelo,postinc2
  4340  001B56  C002  FFDD         	movff	?_dameHumedadSuelo+1,postdec2
  4341  001B5A                     
  4342                           ;main.c: 533:         _delay((unsigned long)((5)*(4000000/4000.0)));
  4343  001B5A  0E07               	movlw	7
  4344  001B5C  6E07               	movwf	??_lecturaAnalogaSensores^0,c
  4345  001B5E  0E7D               	movlw	125
  4346  001B60                     u2837:
  4347  001B60  2EE8               	decfsz	wreg,f,c
  4348  001B62  D7FE               	bra	u2837
  4349  001B64  2E07               	decfsz	??_lecturaAnalogaSensores^0,f,c
  4350  001B66  D7FC               	bra	u2837
  4351  001B68  F000               	nop	
  4352  001B6A                     
  4353                           ;main.c: 534:     }
  4354  001B6A  4A08               	infsnz	lecturaAnalogaSensores@i^0,f,c
  4355  001B6C  2A09               	incf	(lecturaAnalogaSensores@i+1)^0,f,c
  4356  001B6E  BE09               	btfsc	(lecturaAnalogaSensores@i+1)^0,7,c
  4357  001B70  EFC3  F00D         	goto	u2171
  4358  001B74  5009               	movf	(lecturaAnalogaSensores@i+1)^0,w,c
  4359  001B76  E109               	bnz	u2170
  4360  001B78  0E03               	movlw	3
  4361  001B7A  5C08               	subwf	lecturaAnalogaSensores@i^0,w,c
  4362  001B7C  A0D8               	btfss	status,0,c
  4363  001B7E  EFC3  F00D         	goto	u2171
  4364  001B82  EFC5  F00D         	goto	u2170
  4365  001B86                     u2171:
  4366  001B86  EF96  F00D         	goto	l2985
  4367  001B8A                     u2170:
  4368  001B8A  0012               	return		;funcret
  4369  001B8C                     __end_of_lecturaAnalogaSensores:
  4370                           	opt callstack 0
  4371                           
  4372 ;; *************** function _dameHumedadSuelo *****************
  4373 ;; Defined at:
  4374 ;;		line 465 in file "main.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;  canalLeer       1    wreg     unsigned char 
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;  canalLeer       1    4[COMRAM] unsigned char 
  4379 ;; Return value:  Size  Location     Type
  4380 ;;                  2    0[COMRAM] short 
  4381 ;; Registers used:
  4382 ;;		wreg, status,2, status,0
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4388 ;;      Params:         2       0       0       0       0       0       0       0       0
  4389 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4390 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4391 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4392 ;;Total ram usage:        5 bytes
  4393 ;; Hardware stack levels used:    1
  4394 ;; Hardware stack levels required when called:    1
  4395 ;; This function calls:
  4396 ;;		Nothing
  4397 ;; This function is called by:
  4398 ;;		_lecturaAnalogaSensores
  4399 ;; This function uses a non-reentrant model
  4400 ;;
  4401                           
  4402                           	psect	text17
  4403  001F78                     __ptext17:
  4404                           	opt callstack 0
  4405  001F78                     _dameHumedadSuelo:
  4406                           	opt callstack 27
  4407                           
  4408                           ;incstack = 0
  4409                           ;dameHumedadSuelo@canalLeer stored from wreg
  4410  001F78  6E05               	movwf	dameHumedadSuelo@canalLeer^0,c
  4411  001F7A                     
  4412                           ;main.c: 467:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  4413  001F7A  0E06               	movlw	6
  4414  001F7C                     u2847:
  4415  001F7C  2EE8               	decfsz	wreg,f,c
  4416  001F7E  D7FE               	bra	u2847
  4417  001F80  D000               	nop2	
  4418  001F82                     
  4419                           ;main.c: 469:     ADCON0bits.ADON = 1;
  4420  001F82  80C2               	bsf	194,0,c	;volatile
  4421  001F84                     
  4422                           ;main.c: 470:     ADCON0bits.CHS = canalLeer;
  4423  001F84  C005  F003         	movff	dameHumedadSuelo@canalLeer,??_dameHumedadSuelo
  4424  001F88  4603               	rlncf	??_dameHumedadSuelo^0,f,c
  4425  001F8A  4603               	rlncf	??_dameHumedadSuelo^0,f,c
  4426  001F8C  50C2               	movf	194,w,c	;volatile
  4427  001F8E  1803               	xorwf	??_dameHumedadSuelo^0,w,c
  4428  001F90  0BC3               	andlw	-61
  4429  001F92  1803               	xorwf	??_dameHumedadSuelo^0,w,c
  4430  001F94  6EC2               	movwf	194,c	;volatile
  4431  001F96                     
  4432                           ;main.c: 471:     ADCON0bits.GO = 1;
  4433  001F96  82C2               	bsf	194,1,c	;volatile
  4434  001F98                     
  4435                           ;main.c: 472:     ADCON0bits.GO_DONE = 1;
  4436  001F98  82C2               	bsf	194,1,c	;volatile
  4437  001F9A                     l308:
  4438  001F9A  B2C2               	btfsc	194,1,c	;volatile
  4439  001F9C  EFD2  F00F         	goto	u2021
  4440  001FA0  EFD4  F00F         	goto	u2020
  4441  001FA4                     u2021:
  4442  001FA4  EFCD  F00F         	goto	l308
  4443  001FA8                     u2020:
  4444  001FA8                     
  4445                           ;main.c: 476:     ADCON0bits.ADON = 0;
  4446  001FA8  90C2               	bcf	194,0,c	;volatile
  4447  001FAA                     
  4448                           ;main.c: 478:     return (ADRESH << 8) +ADRESL;
  4449  001FAA  50C4               	movf	196,w,c	;volatile
  4450  001FAC  6E04               	movwf	(??_dameHumedadSuelo+1)^0,c
  4451  001FAE  6A03               	clrf	??_dameHumedadSuelo^0,c
  4452  001FB0  50C3               	movf	195,w,c	;volatile
  4453  001FB2  2403               	addwf	??_dameHumedadSuelo^0,w,c
  4454  001FB4  6E01               	movwf	?_dameHumedadSuelo^0,c
  4455  001FB6  0E00               	movlw	0
  4456  001FB8  2004               	addwfc	(??_dameHumedadSuelo+1)^0,w,c
  4457  001FBA  6E02               	movwf	(?_dameHumedadSuelo+1)^0,c
  4458  001FBC  0012               	return		;funcret
  4459  001FBE                     __end_of_dameHumedadSuelo:
  4460                           	opt callstack 0
  4461                           
  4462 ;; *************** function _dameTemperaturaHumedad *****************
  4463 ;; Defined at:
  4464 ;;		line 652 in file "main.c"
  4465 ;; Parameters:    Size  Location     Type
  4466 ;;  Humedad         2    3[COMRAM] PTR unsigned char 
  4467 ;;		 -> mostrarDatosSensoresWIFI@humedad(1), mostrarDatosSensores@humedad(1), NULL(0), 
  4468 ;;  Temperatura     2    5[COMRAM] PTR unsigned char 
  4469 ;;		 -> mostrarDatosSensoresWIFI@temperatura(1), mostrarDatosSensores@temperatura(1), estaSeco@temperatura(1), 
  4470 ;; Auto vars:     Size  Location     Type
  4471 ;;  checkSum        2    9[COMRAM] unsigned int 
  4472 ;;  temperatura     1   14[COMRAM] unsigned char 
  4473 ;;  humedad         1   13[COMRAM] unsigned char 
  4474 ;;  temperaturaD    1   12[COMRAM] unsigned char 
  4475 ;;  humedadDecim    1   11[COMRAM] unsigned char 
  4476 ;; Return value:  Size  Location     Type
  4477 ;;                  1    wreg      void 
  4478 ;; Registers used:
  4479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4480 ;; Tracked objects:
  4481 ;;		On entry : 0/0
  4482 ;;		On exit  : 0/0
  4483 ;;		Unchanged: 0/0
  4484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4485 ;;      Params:         4       0       0       0       0       0       0       0       0
  4486 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4487 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4488 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4489 ;;Total ram usage:       12 bytes
  4490 ;; Hardware stack levels used:    1
  4491 ;; Hardware stack levels required when called:    3
  4492 ;; This function calls:
  4493 ;;		_DHT11_ReadData
  4494 ;;		_DHT11_Start
  4495 ;;		_UART_printf
  4496 ;;		_check_response
  4497 ;; This function is called by:
  4498 ;;		_estaSeco
  4499 ;;		_mostrarDatosSensores
  4500 ;;		_mostrarDatosSensoresWIFI
  4501 ;; This function uses a non-reentrant model
  4502 ;;
  4503                           
  4504                           	psect	text18
  4505  0017A8                     __ptext18:
  4506                           	opt callstack 0
  4507  0017A8                     _dameTemperaturaHumedad:
  4508                           	opt callstack 24
  4509  0017A8                     
  4510                           ;main.c: 654:     PIE1bits.RCIE = 0;
  4511  0017A8  9A9D               	bcf	157,5,c	;volatile
  4512                           
  4513                           ;main.c: 655:     T0CONbits.TMR0ON = 0;
  4514  0017AA  9ED5               	bcf	213,7,c	;volatile
  4515  0017AC                     
  4516                           ;main.c: 661:     DHT11_Start();
  4517  0017AC  EC09  F011         	call	_DHT11_Start	;wreg free
  4518  0017B0                     
  4519                           ;main.c: 663:     if (check_response()) {
  4520  0017B0  EC01  F010         	call	_check_response	;wreg free
  4521  0017B4  0900               	iorlw	0
  4522  0017B6  B4D8               	btfsc	status,2,c
  4523  0017B8  EFE0  F00B         	goto	u2001
  4524  0017BC  EFE2  F00B         	goto	u2000
  4525  0017C0                     u2001:
  4526  0017C0  EF25  F00C         	goto	l2809
  4527  0017C4                     u2000:
  4528  0017C4                     
  4529                           ;main.c: 666:         humedad = DHT11_ReadData();
  4530  0017C4  ECEF  F00E         	call	_DHT11_ReadData	;wreg free
  4531  0017C8  6E0E               	movwf	dameTemperaturaHumedad@humedad^0,c
  4532                           
  4533                           ;main.c: 667:         humedadDecimal = DHT11_ReadData();
  4534  0017CA  ECEF  F00E         	call	_DHT11_ReadData	;wreg free
  4535  0017CE  6E0C               	movwf	dameTemperaturaHumedad@humedadDecimal^0,c
  4536                           
  4537                           ;main.c: 668:         temperatura = DHT11_ReadData();
  4538  0017D0  ECEF  F00E         	call	_DHT11_ReadData	;wreg free
  4539  0017D4  6E0F               	movwf	dameTemperaturaHumedad@temperatura^0,c
  4540                           
  4541                           ;main.c: 669:         temperaturaDecimal = DHT11_ReadData();
  4542  0017D6  ECEF  F00E         	call	_DHT11_ReadData	;wreg free
  4543  0017DA  6E0D               	movwf	dameTemperaturaHumedad@temperaturaDecimal^0,c
  4544                           
  4545                           ;main.c: 670:         checkSum = DHT11_ReadData();
  4546  0017DC  ECEF  F00E         	call	_DHT11_ReadData	;wreg free
  4547  0017E0  6E08               	movwf	??_dameTemperaturaHumedad^0,c
  4548  0017E2  5008               	movf	??_dameTemperaturaHumedad^0,w,c
  4549  0017E4  6E0A               	movwf	dameTemperaturaHumedad@checkSum^0,c
  4550  0017E6  6A0B               	clrf	(dameTemperaturaHumedad@checkSum+1)^0,c
  4551  0017E8                     
  4552                           ;main.c: 672:         if (checkSum != (humedad + humedadDecimal + temperatura + temperat
      +                          uraDecimal))
  4553  0017E8  500C               	movf	dameTemperaturaHumedad@humedadDecimal^0,w,c
  4554  0017EA  C00E  F008         	movff	dameTemperaturaHumedad@humedad,??_dameTemperaturaHumedad
  4555  0017EE  6A09               	clrf	(??_dameTemperaturaHumedad+1)^0,c
  4556  0017F0  2608               	addwf	??_dameTemperaturaHumedad^0,f,c
  4557  0017F2  0E00               	movlw	0
  4558  0017F4  2209               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  4559  0017F6  500F               	movf	dameTemperaturaHumedad@temperatura^0,w,c
  4560  0017F8  2608               	addwf	??_dameTemperaturaHumedad^0,f,c
  4561  0017FA  0E00               	movlw	0
  4562  0017FC  2209               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  4563  0017FE  500D               	movf	dameTemperaturaHumedad@temperaturaDecimal^0,w,c
  4564  001800  2608               	addwf	??_dameTemperaturaHumedad^0,f,c
  4565  001802  0E00               	movlw	0
  4566  001804  2209               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  4567  001806  500A               	movf	dameTemperaturaHumedad@checkSum^0,w,c
  4568  001808  1808               	xorwf	??_dameTemperaturaHumedad^0,w,c
  4569  00180A  E109               	bnz	u2010
  4570  00180C  500B               	movf	(dameTemperaturaHumedad@checkSum+1)^0,w,c
  4571  00180E  1809               	xorwf	(??_dameTemperaturaHumedad+1)^0,w,c
  4572  001810  B4D8               	btfsc	status,2,c
  4573  001812  EF0D  F00C         	goto	u2011
  4574  001816  EF0F  F00C         	goto	u2010
  4575  00181A                     u2011:
  4576  00181A  EF17  F00C         	goto	l2807
  4577  00181E                     u2010:
  4578  00181E                     
  4579                           ;main.c: 673:             UART_printf("Error de lectura\r\n");
  4580  00181E  0EBD               	movlw	low STR_27
  4581  001820  6E02               	movwf	UART_printf@cadena^0,c
  4582  001822  0E7F               	movlw	high STR_27
  4583  001824  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4584  001826  ECC0  F00E         	call	_UART_printf	;wreg free
  4585  00182A  EF2B  F00C         	goto	l2811
  4586  00182E                     l2807:
  4587                           
  4588                           ;main.c: 675:             *Humedad = humedad;
  4589  00182E  C004  FFD9         	movff	dameTemperaturaHumedad@Humedad,fsr2l
  4590  001832  C005  FFDA         	movff	dameTemperaturaHumedad@Humedad+1,fsr2h
  4591  001836  C00E  FFDF         	movff	dameTemperaturaHumedad@humedad,indf2
  4592                           
  4593                           ;main.c: 676:             *Temperatura = temperatura;
  4594  00183A  C006  FFD9         	movff	dameTemperaturaHumedad@Temperatura,fsr2l
  4595  00183E  C007  FFDA         	movff	dameTemperaturaHumedad@Temperatura+1,fsr2h
  4596  001842  C00F  FFDF         	movff	dameTemperaturaHumedad@temperatura,indf2
  4597  001846  EF2B  F00C         	goto	l2811
  4598  00184A                     l2809:
  4599                           
  4600                           ;main.c: 680:         UART_printf("DHT NO RESPONDIO\r\n");
  4601  00184A  0EAA               	movlw	low STR_28
  4602  00184C  6E02               	movwf	UART_printf@cadena^0,c
  4603  00184E  0E7F               	movlw	high STR_28
  4604  001850  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4605  001852  ECC0  F00E         	call	_UART_printf	;wreg free
  4606  001856                     l2811:
  4607                           
  4608                           ;main.c: 683:     PIE1bits.RCIE = 1;
  4609  001856  8A9D               	bsf	157,5,c	;volatile
  4610  001858                     
  4611                           ;main.c: 684:     T0CONbits.TMR0ON = 1;
  4612  001858  8ED5               	bsf	213,7,c	;volatile
  4613  00185A  0012               	return		;funcret
  4614  00185C                     __end_of_dameTemperaturaHumedad:
  4615                           	opt callstack 0
  4616                           
  4617 ;; *************** function _check_response *****************
  4618 ;; Defined at:
  4619 ;;		line 38 in file "./DHT11.h"
  4620 ;; Parameters:    Size  Location     Type
  4621 ;;		None
  4622 ;; Auto vars:     Size  Location     Type
  4623 ;;  respuesta       1    0[COMRAM] unsigned char 
  4624 ;; Return value:  Size  Location     Type
  4625 ;;                  1    wreg      unsigned char 
  4626 ;; Registers used:
  4627 ;;		wreg, status,2
  4628 ;; Tracked objects:
  4629 ;;		On entry : 0/0
  4630 ;;		On exit  : 0/0
  4631 ;;		Unchanged: 0/0
  4632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4633 ;;      Params:         0       0       0       0       0       0       0       0       0
  4634 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4635 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4636 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4637 ;;Total ram usage:        1 bytes
  4638 ;; Hardware stack levels used:    1
  4639 ;; Hardware stack levels required when called:    1
  4640 ;; This function calls:
  4641 ;;		Nothing
  4642 ;; This function is called by:
  4643 ;;		_dameTemperaturaHumedad
  4644 ;; This function uses a non-reentrant model
  4645 ;;
  4646                           
  4647                           	psect	text19
  4648  002002                     __ptext19:
  4649                           	opt callstack 0
  4650  002002                     _check_response:
  4651                           	opt callstack 25
  4652  002002                     
  4653                           ;./DHT11.h: 40:     unsigned char respuesta = 0;
  4654  002002  0E00               	movlw	0
  4655  002004  6E01               	movwf	check_response@respuesta^0,c
  4656  002006                     
  4657                           ;./DHT11.h: 41:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4658  002006  0E0D               	movlw	13
  4659  002008                     u2857:
  4660  002008  2EE8               	decfsz	wreg,f,c
  4661  00200A  D7FE               	bra	u2857
  4662  00200C  F000               	nop	
  4663  00200E                     
  4664                           ;./DHT11.h: 42:     if (!PORTDbits.RD7) {
  4665  00200E  BE83               	btfsc	131,7,c	;volatile
  4666  002010  EF0C  F010         	goto	u1911
  4667  002014  EF0E  F010         	goto	u1910
  4668  002018                     u1911:
  4669  002018  EF1F  F010         	goto	l2707
  4670  00201C                     u1910:
  4671  00201C                     
  4672                           ;./DHT11.h: 43:         _delay((unsigned long)((80)*(4000000/4000000.0)));
  4673  00201C  0E1A               	movlw	26
  4674  00201E                     u2867:
  4675  00201E  2EE8               	decfsz	wreg,f,c
  4676  002020  D7FE               	bra	u2867
  4677  002022  D000               	nop2	
  4678  002024                     
  4679                           ;./DHT11.h: 44:         if (PORTDbits.RD7) {
  4680  002024  AE83               	btfss	131,7,c	;volatile
  4681  002026  EF17  F010         	goto	u1921
  4682  00202A  EF19  F010         	goto	u1920
  4683  00202E                     u1921:
  4684  00202E  EF1F  F010         	goto	l2707
  4685  002032                     u1920:
  4686  002032                     
  4687                           ;./DHT11.h: 45:             _delay((unsigned long)((50)*(4000000/4000000.0)));
  4688  002032  0E10               	movlw	16
  4689  002034                     u2877:
  4690  002034  2EE8               	decfsz	wreg,f,c
  4691  002036  D7FE               	bra	u2877
  4692  002038  D000               	nop2	
  4693  00203A                     
  4694                           ;./DHT11.h: 46:             respuesta = 1;
  4695  00203A  0E01               	movlw	1
  4696  00203C  6E01               	movwf	check_response@respuesta^0,c
  4697  00203E                     l2707:
  4698                           
  4699                           ;./DHT11.h: 50:     return respuesta;
  4700  00203E  5001               	movf	check_response@respuesta^0,w,c
  4701  002040  0012               	return		;funcret
  4702  002042                     __end_of_check_response:
  4703                           	opt callstack 0
  4704                           
  4705 ;; *************** function _DHT11_Start *****************
  4706 ;; Defined at:
  4707 ;;		line 23 in file "./DHT11.h"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;		None
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;		None
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  1    wreg      void 
  4714 ;; Registers used:
  4715 ;;		wreg
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4721 ;;      Params:         0       0       0       0       0       0       0       0       0
  4722 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4723 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4724 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4725 ;;Total ram usage:        1 bytes
  4726 ;; Hardware stack levels used:    1
  4727 ;; Hardware stack levels required when called:    1
  4728 ;; This function calls:
  4729 ;;		Nothing
  4730 ;; This function is called by:
  4731 ;;		_dameTemperaturaHumedad
  4732 ;; This function uses a non-reentrant model
  4733 ;;
  4734                           
  4735                           	psect	text20
  4736  002212                     __ptext20:
  4737                           	opt callstack 0
  4738  002212                     _DHT11_Start:
  4739                           	opt callstack 25
  4740  002212                     
  4741                           ;./DHT11.h: 24:     TRISDbits.RD7 = 0;
  4742  002212  9E95               	bcf	149,7,c	;volatile
  4743                           
  4744                           ;./DHT11.h: 26:     LATDbits.LATD7 = 0;
  4745  002214  9E8C               	bcf	140,7,c	;volatile
  4746  002216                     
  4747                           ;./DHT11.h: 28:     _delay((unsigned long)((20)*(4000000/4000.0)));
  4748  002216  0E1A               	movlw	26
  4749  002218  6E01               	movwf	??_DHT11_Start^0,c
  4750  00221A  0EF8               	movlw	248
  4751  00221C                     u2887:
  4752  00221C  2EE8               	decfsz	wreg,f,c
  4753  00221E  D7FE               	bra	u2887
  4754  002220  2E01               	decfsz	??_DHT11_Start^0,f,c
  4755  002222  D7FC               	bra	u2887
  4756  002224  D000               	nop2	
  4757  002226                     
  4758                           ;./DHT11.h: 30:     LATDbits.LATD7 = 1;
  4759  002226  8E8C               	bsf	140,7,c	;volatile
  4760                           
  4761                           ;./DHT11.h: 32:     _delay((unsigned long)((30)*(4000000/4000000.0)));
  4762  002228  0E0A               	movlw	10
  4763  00222A                     u2897:
  4764  00222A  2EE8               	decfsz	wreg,f,c
  4765  00222C  D7FE               	bra	u2897
  4766  00222E                     
  4767                           ;./DHT11.h: 34:     TRISDbits.RD7 = 1;
  4768  00222E  8E95               	bsf	149,7,c	;volatile
  4769  002230  0012               	return		;funcret
  4770  002232                     __end_of_DHT11_Start:
  4771                           	opt callstack 0
  4772                           
  4773 ;; *************** function _DHT11_ReadData *****************
  4774 ;; Defined at:
  4775 ;;		line 9 in file "./DHT11.h"
  4776 ;; Parameters:    Size  Location     Type
  4777 ;;		None
  4778 ;; Auto vars:     Size  Location     Type
  4779 ;;  data            1    1[COMRAM] unsigned char 
  4780 ;;  i               1    0[COMRAM] unsigned char 
  4781 ;; Return value:  Size  Location     Type
  4782 ;;                  1    wreg      unsigned char 
  4783 ;; Registers used:
  4784 ;;		wreg, status,2, status,0
  4785 ;; Tracked objects:
  4786 ;;		On entry : 0/0
  4787 ;;		On exit  : 0/0
  4788 ;;		Unchanged: 0/0
  4789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4790 ;;      Params:         0       0       0       0       0       0       0       0       0
  4791 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4792 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4793 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4794 ;;Total ram usage:        2 bytes
  4795 ;; Hardware stack levels used:    1
  4796 ;; Hardware stack levels required when called:    1
  4797 ;; This function calls:
  4798 ;;		Nothing
  4799 ;; This function is called by:
  4800 ;;		_dameTemperaturaHumedad
  4801 ;; This function uses a non-reentrant model
  4802 ;;
  4803                           
  4804                           	psect	text21
  4805  001DDE                     __ptext21:
  4806                           	opt callstack 0
  4807  001DDE                     _DHT11_ReadData:
  4808                           	opt callstack 25
  4809  001DDE                     
  4810                           ;./DHT11.h: 10:     char i, data = 0;
  4811  001DDE  0E00               	movlw	0
  4812  001DE0  6E02               	movwf	DHT11_ReadData@data^0,c
  4813                           
  4814                           ;./DHT11.h: 11:     for (i = 0; i < 8; i++) {
  4815  001DE2  0E00               	movlw	0
  4816  001DE4  6E01               	movwf	DHT11_ReadData@i^0,c
  4817  001DE6                     l144:
  4818  001DE6  AE83               	btfss	131,7,c	;volatile
  4819  001DE8  EFF8  F00E         	goto	u1871
  4820  001DEC  EFFA  F00E         	goto	u1870
  4821  001DF0                     u1871:
  4822  001DF0  EFF3  F00E         	goto	l144
  4823  001DF4                     u1870:
  4824  001DF4                     
  4825                           ;./DHT11.h: 13:         _delay((unsigned long)((30)*(4000000/4000000.0)));
  4826  001DF4  0E0A               	movlw	10
  4827  001DF6                     u2907:
  4828  001DF6  2EE8               	decfsz	wreg,f,c
  4829  001DF8  D7FE               	bra	u2907
  4830  001DFA                     
  4831                           ;./DHT11.h: 14:         if (PORTDbits.RD7 & 1)
  4832  001DFA  AE83               	btfss	131,7,c	;volatile
  4833  001DFC  EF02  F00F         	goto	u1881
  4834  001E00  EF04  F00F         	goto	u1880
  4835  001E04                     u1881:
  4836  001E04  EF08  F00F         	goto	l2675
  4837  001E08                     u1880:
  4838  001E08                     
  4839                           ;./DHT11.h: 15:             data = ((data << 1) | 1);
  4840  001E08  80D8               	bsf	status,0,c
  4841  001E0A  3602               	rlcf	DHT11_ReadData@data^0,f,c
  4842  001E0C  EF0B  F00F         	goto	l149
  4843  001E10                     l2675:
  4844                           
  4845                           ;./DHT11.h: 17:             data = (data << 1);
  4846  001E10  5002               	movf	DHT11_ReadData@data^0,w,c
  4847  001E12  2402               	addwf	DHT11_ReadData@data^0,w,c
  4848  001E14  6E02               	movwf	DHT11_ReadData@data^0,c
  4849  001E16                     l149:
  4850  001E16  BE83               	btfsc	131,7,c	;volatile
  4851  001E18  EF10  F00F         	goto	u1891
  4852  001E1C  EF12  F00F         	goto	u1890
  4853  001E20                     u1891:
  4854  001E20  EF0B  F00F         	goto	l149
  4855  001E24                     u1890:
  4856  001E24                     
  4857                           ;./DHT11.h: 19:     }
  4858  001E24  2A01               	incf	DHT11_ReadData@i^0,f,c
  4859  001E26  0E07               	movlw	7
  4860  001E28  6401               	cpfsgt	DHT11_ReadData@i^0,c
  4861  001E2A  EF19  F00F         	goto	u1901
  4862  001E2E  EF1B  F00F         	goto	u1900
  4863  001E32                     u1901:
  4864  001E32  EFF3  F00E         	goto	l144
  4865  001E36                     u1900:
  4866  001E36                     
  4867                           ;./DHT11.h: 20:     return data;
  4868  001E36  5002               	movf	DHT11_ReadData@data^0,w,c
  4869  001E38  0012               	return		;funcret
  4870  001E3A                     __end_of_DHT11_ReadData:
  4871                           	opt callstack 0
  4872                           
  4873 ;; *************** function ___awdiv *****************
  4874 ;; Defined at:
  4875 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  4876 ;; Parameters:    Size  Location     Type
  4877 ;;  dividend        2    0[COMRAM] int 
  4878 ;;  divisor         2    2[COMRAM] int 
  4879 ;; Auto vars:     Size  Location     Type
  4880 ;;  quotient        2    6[COMRAM] int 
  4881 ;;  sign            1    5[COMRAM] unsigned char 
  4882 ;;  counter         1    4[COMRAM] unsigned char 
  4883 ;; Return value:  Size  Location     Type
  4884 ;;                  2    0[COMRAM] int 
  4885 ;; Registers used:
  4886 ;;		wreg, status,2, status,0
  4887 ;; Tracked objects:
  4888 ;;		On entry : 0/0
  4889 ;;		On exit  : 0/0
  4890 ;;		Unchanged: 0/0
  4891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4892 ;;      Params:         4       0       0       0       0       0       0       0       0
  4893 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4894 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4895 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4896 ;;Total ram usage:        8 bytes
  4897 ;; Hardware stack levels used:    1
  4898 ;; Hardware stack levels required when called:    1
  4899 ;; This function calls:
  4900 ;;		Nothing
  4901 ;; This function is called by:
  4902 ;;		_mostrarDatosSensores
  4903 ;; This function uses a non-reentrant model
  4904 ;;
  4905                           
  4906                           	psect	text22
  4907  0016E4                     __ptext22:
  4908                           	opt callstack 0
  4909  0016E4                     ___awdiv:
  4910                           	opt callstack 27
  4911  0016E4  0E00               	movlw	0
  4912  0016E6  6E06               	movwf	___awdiv@sign^0,c
  4913  0016E8  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  4914  0016EA  EF7B  F00B         	goto	u2180
  4915  0016EE  EF79  F00B         	goto	u2181
  4916  0016F2                     u2181:
  4917  0016F2  EF81  F00B         	goto	l3013
  4918  0016F6                     u2180:
  4919  0016F6  6C03               	negf	___awdiv@divisor^0,c
  4920  0016F8  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  4921  0016FA  B0D8               	btfsc	status,0,c
  4922  0016FC  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  4923  0016FE  0E01               	movlw	1
  4924  001700  6E06               	movwf	___awdiv@sign^0,c
  4925  001702                     l3013:
  4926  001702  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  4927  001704  EF88  F00B         	goto	u2190
  4928  001708  EF86  F00B         	goto	u2191
  4929  00170C                     u2191:
  4930  00170C  EF8E  F00B         	goto	l3019
  4931  001710                     u2190:
  4932  001710  6C01               	negf	___awdiv@dividend^0,c
  4933  001712  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  4934  001714  B0D8               	btfsc	status,0,c
  4935  001716  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  4936  001718  0E01               	movlw	1
  4937  00171A  1A06               	xorwf	___awdiv@sign^0,f,c
  4938  00171C                     l3019:
  4939  00171C  0E00               	movlw	0
  4940  00171E  6E08               	movwf	(___awdiv@quotient+1)^0,c
  4941  001720  0E00               	movlw	0
  4942  001722  6E07               	movwf	___awdiv@quotient^0,c
  4943  001724  5003               	movf	___awdiv@divisor^0,w,c
  4944  001726  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  4945  001728  B4D8               	btfsc	status,2,c
  4946  00172A  EF99  F00B         	goto	u2201
  4947  00172E  EF9B  F00B         	goto	u2200
  4948  001732                     u2201:
  4949  001732  EFC3  F00B         	goto	l3041
  4950  001736                     u2200:
  4951  001736  0E01               	movlw	1
  4952  001738  6E05               	movwf	___awdiv@counter^0,c
  4953  00173A  EFA3  F00B         	goto	l3027
  4954  00173E                     l3025:
  4955  00173E  90D8               	bcf	status,0,c
  4956  001740  3603               	rlcf	___awdiv@divisor^0,f,c
  4957  001742  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  4958  001744  2A05               	incf	___awdiv@counter^0,f,c
  4959  001746                     l3027:
  4960  001746  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  4961  001748  EFA8  F00B         	goto	u2211
  4962  00174C  EFAA  F00B         	goto	u2210
  4963  001750                     u2211:
  4964  001750  EF9F  F00B         	goto	l3025
  4965  001754                     u2210:
  4966  001754                     l3029:
  4967  001754  90D8               	bcf	status,0,c
  4968  001756  3607               	rlcf	___awdiv@quotient^0,f,c
  4969  001758  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  4970  00175A  5003               	movf	___awdiv@divisor^0,w,c
  4971  00175C  5C01               	subwf	___awdiv@dividend^0,w,c
  4972  00175E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4973  001760  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  4974  001762  A0D8               	btfss	status,0,c
  4975  001764  EFB6  F00B         	goto	u2221
  4976  001768  EFB8  F00B         	goto	u2220
  4977  00176C                     u2221:
  4978  00176C  EFBD  F00B         	goto	l3037
  4979  001770                     u2220:
  4980  001770  5003               	movf	___awdiv@divisor^0,w,c
  4981  001772  5E01               	subwf	___awdiv@dividend^0,f,c
  4982  001774  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4983  001776  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  4984  001778  8007               	bsf	___awdiv@quotient^0,0,c
  4985  00177A                     l3037:
  4986  00177A  90D8               	bcf	status,0,c
  4987  00177C  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  4988  00177E  3203               	rrcf	___awdiv@divisor^0,f,c
  4989  001780  2E05               	decfsz	___awdiv@counter^0,f,c
  4990  001782  EFAA  F00B         	goto	l3029
  4991  001786                     l3041:
  4992  001786  5006               	movf	___awdiv@sign^0,w,c
  4993  001788  B4D8               	btfsc	status,2,c
  4994  00178A  EFC9  F00B         	goto	u2231
  4995  00178E  EFCB  F00B         	goto	u2230
  4996  001792                     u2231:
  4997  001792  EFCF  F00B         	goto	l3045
  4998  001796                     u2230:
  4999  001796  6C07               	negf	___awdiv@quotient^0,c
  5000  001798  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  5001  00179A  B0D8               	btfsc	status,0,c
  5002  00179C  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  5003  00179E                     l3045:
  5004  00179E  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5005  0017A2  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5006  0017A6  0012               	return		;funcret
  5007  0017A8                     __end_of___awdiv:
  5008                           	opt callstack 0
  5009                           
  5010 ;; *************** function _fijaHoraRtc *****************
  5011 ;; Defined at:
  5012 ;;		line 316 in file "main.c"
  5013 ;; Parameters:    Size  Location     Type
  5014 ;;		None
  5015 ;; Auto vars:     Size  Location     Type
  5016 ;;		None
  5017 ;; Return value:  Size  Location     Type
  5018 ;;                  1    wreg      void 
  5019 ;; Registers used:
  5020 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5021 ;; Tracked objects:
  5022 ;;		On entry : 0/0
  5023 ;;		On exit  : 0/0
  5024 ;;		Unchanged: 0/0
  5025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5026 ;;      Params:         0       0       0       0       0       0       0       0       0
  5027 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5028 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5029 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5030 ;;Total ram usage:        0 bytes
  5031 ;; Hardware stack levels used:    1
  5032 ;; Hardware stack levels required when called:    5
  5033 ;; This function calls:
  5034 ;;		_UART_printf
  5035 ;;		_escribe_rtc
  5036 ;;		_setRtc
  5037 ;; This function is called by:
  5038 ;;		_sistemaPrincipal
  5039 ;; This function uses a non-reentrant model
  5040 ;;
  5041                           
  5042                           	psect	text23
  5043  001B8C                     __ptext23:
  5044                           	opt callstack 0
  5045  001B8C                     _fijaHoraRtc:
  5046                           	opt callstack 24
  5047  001B8C                     
  5048                           ;main.c: 318:     UART_printf("\r\n FIJA HORA \r\n");
  5049  001B8C  0ED0               	movlw	low STR_1
  5050  001B8E  6E02               	movwf	UART_printf@cadena^0,c
  5051  001B90  0E7F               	movlw	high STR_1
  5052  001B92  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5053  001B94  ECC0  F00E         	call	_UART_printf	;wreg free
  5054                           
  5055                           ;main.c: 321:     UART_printf("\r\n Envie las Horas en formato 24 Ej: 15 \r\n");
  5056  001B98  0EE4               	movlw	low STR_2
  5057  001B9A  6E02               	movwf	UART_printf@cadena^0,c
  5058  001B9C  0E7C               	movlw	high STR_2
  5059  001B9E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5060  001BA0  ECC0  F00E         	call	_UART_printf	;wreg free
  5061  001BA4                     
  5062                           ;main.c: 322:     setRtc(0x02);
  5063  001BA4  0E02               	movlw	2
  5064  001BA6  ECAC  F00A         	call	_setRtc
  5065  001BAA                     
  5066                           ;main.c: 325:     if (!esperandoDatos) {
  5067  001BAA  505E               	movf	_esperandoDatos^0,w,c
  5068  001BAC  A4D8               	btfss	status,2,c
  5069  001BAE  EFDB  F00D         	goto	u2361
  5070  001BB2  EFDD  F00D         	goto	u2360
  5071  001BB6                     u2361:
  5072  001BB6  EFE6  F00D         	goto	l3143
  5073  001BBA                     u2360:
  5074  001BBA                     
  5075                           ;main.c: 326:         UART_printf("\r\n Envie los Minutos Ej: 25 \r\n");
  5076  001BBA  0EED               	movlw	low STR_3
  5077  001BBC  6E02               	movwf	UART_printf@cadena^0,c
  5078  001BBE  0E7E               	movlw	high STR_3
  5079  001BC0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5080  001BC2  ECC0  F00E         	call	_UART_printf	;wreg free
  5081  001BC6                     
  5082                           ;main.c: 327:         setRtc(0x01);
  5083  001BC6  0E01               	movlw	1
  5084  001BC8  ECAC  F00A         	call	_setRtc
  5085  001BCC                     l3143:
  5086                           
  5087                           ;main.c: 331:     if (!esperandoDatos) {
  5088  001BCC  505E               	movf	_esperandoDatos^0,w,c
  5089  001BCE  A4D8               	btfss	status,2,c
  5090  001BD0  EFEC  F00D         	goto	u2371
  5091  001BD4  EFEE  F00D         	goto	u2370
  5092  001BD8                     u2371:
  5093  001BD8  EFF9  F00D         	goto	l275
  5094  001BDC                     u2370:
  5095  001BDC                     
  5096                           ;main.c: 333:         UART_printf("\r\n HORA ESTABLECIDA CORRECTAMENTE \r\n");
  5097  001BDC  0E21               	movlw	low STR_4
  5098  001BDE  6E02               	movwf	UART_printf@cadena^0,c
  5099  001BE0  0E7E               	movlw	high STR_4
  5100  001BE2  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5101  001BE4  ECC0  F00E         	call	_UART_printf	;wreg free
  5102  001BE8                     
  5103                           ;main.c: 334:         escribe_rtc(0x00, 0);
  5104  001BE8  0E00               	movlw	0
  5105  001BEA  6E03               	movwf	escribe_rtc@dato^0,c
  5106  001BEC  0E00               	movlw	0
  5107  001BEE  EC19  F011         	call	_escribe_rtc
  5108  001BF2                     l275:
  5109  001BF2  0012               	return		;funcret
  5110  001BF4                     __end_of_fijaHoraRtc:
  5111                           	opt callstack 0
  5112                           
  5113 ;; *************** function _setRtc *****************
  5114 ;; Defined at:
  5115 ;;		line 155 in file "main.c"
  5116 ;; Parameters:    Size  Location     Type
  5117 ;;  direccion       1    wreg     unsigned char 
  5118 ;; Auto vars:     Size  Location     Type
  5119 ;;  direccion       1    5[COMRAM] unsigned char 
  5120 ;;  Rx              1   10[COMRAM] unsigned char 
  5121 ;;  i               2    8[COMRAM] int 
  5122 ;;  datoCapturad    1    7[COMRAM] unsigned char 
  5123 ;;  dato            1    6[COMRAM] unsigned char 
  5124 ;; Return value:  Size  Location     Type
  5125 ;;                  1    wreg      void 
  5126 ;; Registers used:
  5127 ;;		wreg, status,2, status,0, cstack
  5128 ;; Tracked objects:
  5129 ;;		On entry : 0/0
  5130 ;;		On exit  : 0/0
  5131 ;;		Unchanged: 0/0
  5132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5133 ;;      Params:         0       0       0       0       0       0       0       0       0
  5134 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5135 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5136 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5137 ;;Total ram usage:        7 bytes
  5138 ;; Hardware stack levels used:    1
  5139 ;; Hardware stack levels required when called:    4
  5140 ;; This function calls:
  5141 ;;		_UART_read
  5142 ;;		_UART_write
  5143 ;;		_escribe_rtc
  5144 ;; This function is called by:
  5145 ;;		_fijaHoraRtc
  5146 ;; This function uses a non-reentrant model
  5147 ;;
  5148                           
  5149                           	psect	text24
  5150  001558                     __ptext24:
  5151                           	opt callstack 0
  5152  001558                     _setRtc:
  5153                           	opt callstack 24
  5154                           
  5155                           ;incstack = 0
  5156                           ;setRtc@direccion stored from wreg
  5157  001558  6E06               	movwf	setRtc@direccion^0,c
  5158  00155A                     
  5159                           ;main.c: 156:     unsigned char dato;;main.c: 157:     char datoCapturado = 0;
  5160  00155A  0E00               	movlw	0
  5161  00155C  6E08               	movwf	setRtc@datoCapturado^0,c
  5162                           
  5163                           ;main.c: 159:     for (int i = 0; i < 2; i++) {
  5164  00155E  0E00               	movlw	0
  5165  001560  6E0A               	movwf	(setRtc@i+1)^0,c
  5166  001562  0E00               	movlw	0
  5167  001564  6E09               	movwf	setRtc@i^0,c
  5168  001566                     l2889:
  5169                           
  5170                           ;main.c: 160:         char Rx = UART_read();
  5171  001566  EC1D  F00F         	call	_UART_read	;wreg free
  5172  00156A  6E0B               	movwf	setRtc@Rx^0,c
  5173  00156C                     
  5174                           ;main.c: 161:         if (Rx >= 48 && Rx <= 57) {
  5175  00156C  0E2F               	movlw	47
  5176  00156E  640B               	cpfsgt	setRtc@Rx^0,c
  5177  001570  EFBC  F00A         	goto	u2071
  5178  001574  EFBE  F00A         	goto	u2070
  5179  001578                     u2071:
  5180  001578  EFE2  F00A         	goto	l2903
  5181  00157C                     u2070:
  5182  00157C  0E3A               	movlw	58
  5183  00157E  600B               	cpfslt	setRtc@Rx^0,c
  5184  001580  EFC4  F00A         	goto	u2081
  5185  001584  EFC6  F00A         	goto	u2080
  5186  001588                     u2081:
  5187  001588  EFE2  F00A         	goto	l2903
  5188  00158C                     u2080:
  5189  00158C                     
  5190                           ;main.c: 162:             if (!i) {
  5191  00158C  5009               	movf	setRtc@i^0,w,c
  5192  00158E  100A               	iorwf	(setRtc@i+1)^0,w,c
  5193  001590  A4D8               	btfss	status,2,c
  5194  001592  EFCD  F00A         	goto	u2091
  5195  001596  EFCF  F00A         	goto	u2090
  5196  00159A                     u2091:
  5197  00159A  EFDA  F00A         	goto	l2899
  5198  00159E                     u2090:
  5199  00159E                     
  5200                           ;main.c: 163:                 dato = ((Rx - 48) & 0x0F) << 4;
  5201  00159E  C00B  F005         	movff	setRtc@Rx,??_setRtc
  5202  0015A2  0ED0               	movlw	208
  5203  0015A4  2605               	addwf	??_setRtc^0,f,c
  5204  0015A6  0E0F               	movlw	15
  5205  0015A8  1605               	andwf	??_setRtc^0,f,c
  5206  0015AA  3805               	swapf	??_setRtc^0,w,c
  5207  0015AC  0BF0               	andlw	240
  5208  0015AE  6E07               	movwf	setRtc@dato^0,c
  5209                           
  5210                           ;main.c: 164:             } else {
  5211  0015B0  EFE9  F00A         	goto	l2907
  5212  0015B4                     l2899:
  5213                           
  5214                           ;main.c: 165:                 dato |= (Rx - 48) & 0x0F;
  5215  0015B4  500B               	movf	setRtc@Rx^0,w,c
  5216  0015B6  0FD0               	addlw	208
  5217  0015B8  0B0F               	andlw	15
  5218  0015BA  1207               	iorwf	setRtc@dato^0,f,c
  5219  0015BC                     
  5220                           ;main.c: 166:                 datoCapturado = 1;
  5221  0015BC  0E01               	movlw	1
  5222  0015BE  6E08               	movwf	setRtc@datoCapturado^0,c
  5223  0015C0  EFE9  F00A         	goto	l2907
  5224  0015C4                     l2903:
  5225                           
  5226                           ;main.c: 169:             datoCapturado = 0;
  5227  0015C4  0E00               	movlw	0
  5228  0015C6  6E08               	movwf	setRtc@datoCapturado^0,c
  5229  0015C8                     
  5230                           ;main.c: 171:             UART_write('F');
  5231  0015C8  0E46               	movlw	70
  5232  0015CA  EC35  F011         	call	_UART_write
  5233                           
  5234                           ;main.c: 172:             break;
  5235  0015CE  EFF9  F00A         	goto	l2911
  5236  0015D2                     l2907:
  5237                           
  5238                           ;main.c: 174:     }
  5239  0015D2  4A09               	infsnz	setRtc@i^0,f,c
  5240  0015D4  2A0A               	incf	(setRtc@i+1)^0,f,c
  5241  0015D6  BE0A               	btfsc	(setRtc@i+1)^0,7,c
  5242  0015D8  EFF7  F00A         	goto	u2101
  5243  0015DC  500A               	movf	(setRtc@i+1)^0,w,c
  5244  0015DE  E109               	bnz	u2100
  5245  0015E0  0E02               	movlw	2
  5246  0015E2  5C09               	subwf	setRtc@i^0,w,c
  5247  0015E4  A0D8               	btfss	status,0,c
  5248  0015E6  EFF7  F00A         	goto	u2101
  5249  0015EA  EFF9  F00A         	goto	u2100
  5250  0015EE                     u2101:
  5251  0015EE  EFB3  F00A         	goto	l2889
  5252  0015F2                     u2100:
  5253  0015F2                     l2911:
  5254                           
  5255                           ;main.c: 176:     if (datoCapturado && !esperandoDatos)
  5256  0015F2  5008               	movf	setRtc@datoCapturado^0,w,c
  5257  0015F4  B4D8               	btfsc	status,2,c
  5258  0015F6  EFFF  F00A         	goto	u2111
  5259  0015FA  EF01  F00B         	goto	u2110
  5260  0015FE                     u2111:
  5261  0015FE  EF0E  F00B         	goto	l227
  5262  001602                     u2110:
  5263  001602  505E               	movf	_esperandoDatos^0,w,c
  5264  001604  A4D8               	btfss	status,2,c
  5265  001606  EF07  F00B         	goto	u2121
  5266  00160A  EF09  F00B         	goto	u2120
  5267  00160E                     u2121:
  5268  00160E  EF0E  F00B         	goto	l227
  5269  001612                     u2120:
  5270  001612                     
  5271                           ;main.c: 177:         escribe_rtc(direccion, dato);
  5272  001612  C007  F003         	movff	setRtc@dato,escribe_rtc@dato
  5273  001616  5006               	movf	setRtc@direccion^0,w,c
  5274  001618  EC19  F011         	call	_escribe_rtc
  5275  00161C                     l227:
  5276  00161C  0012               	return		;funcret
  5277  00161E                     __end_of_setRtc:
  5278                           	opt callstack 0
  5279                           
  5280 ;; *************** function _escribe_rtc *****************
  5281 ;; Defined at:
  5282 ;;		line 2 in file "./RTC.h"
  5283 ;; Parameters:    Size  Location     Type
  5284 ;;  direccion       1    wreg     unsigned char 
  5285 ;;  dato            1    2[COMRAM] unsigned char 
  5286 ;; Auto vars:     Size  Location     Type
  5287 ;;  direccion       1    3[COMRAM] unsigned char 
  5288 ;; Return value:  Size  Location     Type
  5289 ;;                  1    wreg      void 
  5290 ;; Registers used:
  5291 ;;		wreg, status,2, status,0, cstack
  5292 ;; Tracked objects:
  5293 ;;		On entry : 0/0
  5294 ;;		On exit  : 0/0
  5295 ;;		Unchanged: 0/0
  5296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5297 ;;      Params:         1       0       0       0       0       0       0       0       0
  5298 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5299 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5300 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5301 ;;Total ram usage:        2 bytes
  5302 ;; Hardware stack levels used:    1
  5303 ;; Hardware stack levels required when called:    3
  5304 ;; This function calls:
  5305 ;;		_i2c_detener
  5306 ;;		_i2c_envia_dato
  5307 ;;		_i2c_inicia_com
  5308 ;; This function is called by:
  5309 ;;		_setRtc
  5310 ;;		_fijaHoraRtc
  5311 ;;		_setRtcDefault
  5312 ;; This function uses a non-reentrant model
  5313 ;;
  5314                           
  5315                           	psect	text25
  5316  002232                     __ptext25:
  5317                           	opt callstack 0
  5318  002232                     _escribe_rtc:
  5319                           	opt callstack 24
  5320                           
  5321                           ;incstack = 0
  5322                           ;escribe_rtc@direccion stored from wreg
  5323  002232  6E04               	movwf	escribe_rtc@direccion^0,c
  5324  002234                     
  5325                           ;./RTC.h: 3:     i2c_inicia_com();
  5326  002234  EC60  F011         	call	_i2c_inicia_com	;wreg free
  5327                           
  5328                           ;./RTC.h: 4:     i2c_envia_dato(0xD0);
  5329  002238  0ED0               	movlw	208
  5330  00223A  EC51  F011         	call	_i2c_envia_dato
  5331                           
  5332                           ;./RTC.h: 5:     i2c_envia_dato(direccion);
  5333  00223E  5004               	movf	escribe_rtc@direccion^0,w,c
  5334  002240  EC51  F011         	call	_i2c_envia_dato
  5335                           
  5336                           ;./RTC.h: 6:     i2c_envia_dato(dato);
  5337  002244  5003               	movf	escribe_rtc@dato^0,w,c
  5338  002246  EC51  F011         	call	_i2c_envia_dato
  5339                           
  5340                           ;./RTC.h: 7:     i2c_detener();
  5341  00224A  EC64  F011         	call	_i2c_detener	;wreg free
  5342  00224E  0012               	return		;funcret
  5343  002250                     __end_of_escribe_rtc:
  5344                           	opt callstack 0
  5345                           
  5346 ;; *************** function _dameDatosSistema *****************
  5347 ;; Defined at:
  5348 ;;		line 635 in file "main.c"
  5349 ;; Parameters:    Size  Location     Type
  5350 ;;		None
  5351 ;; Auto vars:     Size  Location     Type
  5352 ;;  i               2   70[BANK0 ] int 
  5353 ;;  buffer         50   20[BANK0 ] unsigned char [50]
  5354 ;; Return value:  Size  Location     Type
  5355 ;;                  1    wreg      void 
  5356 ;; Registers used:
  5357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5358 ;; Tracked objects:
  5359 ;;		On entry : 0/0
  5360 ;;		On exit  : 0/0
  5361 ;;		Unchanged: 0/0
  5362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5363 ;;      Params:         0       0       0       0       0       0       0       0       0
  5364 ;;      Locals:         0      52       0       0       0       0       0       0       0
  5365 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5366 ;;      Totals:         3      52       0       0       0       0       0       0       0
  5367 ;;Total ram usage:       55 bytes
  5368 ;; Hardware stack levels used:    1
  5369 ;; Hardware stack levels required when called:    9
  5370 ;; This function calls:
  5371 ;;		_UART_printf
  5372 ;;		___wmul
  5373 ;;		_sprintf
  5374 ;; This function is called by:
  5375 ;;		_sistemaPrincipal
  5376 ;; This function uses a non-reentrant model
  5377 ;;
  5378                           
  5379                           	psect	text26
  5380  00121A                     __ptext26:
  5381                           	opt callstack 0
  5382  00121A                     _dameDatosSistema:
  5383                           	opt callstack 20
  5384  00121A                     
  5385                           ;main.c: 637:     char buffer[50];;main.c: 639:     UART_printf("\r\n\nHora | Regar(1 si
      +                           0 no) | Minutos de riego \r\n\n");
  5386  00121A  0E81               	movlw	low STR_25
  5387  00121C  6E02               	movwf	UART_printf@cadena^0,c
  5388  00121E  0E7C               	movlw	high STR_25
  5389  001220  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5390  001222  ECC0  F00E         	call	_UART_printf	;wreg free
  5391  001226                     
  5392                           ;main.c: 641:     for (int i = 0; i < 24; i++) {
  5393  001226  0E00               	movlw	0
  5394  001228  0100               	movlb	0	; () banked
  5395  00122A  6FF5               	movwf	(dameDatosSistema@i+1)& (0+255),b
  5396  00122C  0E00               	movlw	0
  5397  00122E  6FF4               	movwf	dameDatosSistema@i& (0+255),b
  5398  001230                     l3311:
  5399                           
  5400                           ; BSR set to: 0
  5401                           ;main.c: 643:         sprintf(buffer, "%d | %d | %d \r\n", horarios[i].hora, horarios[i]
      +                          .regar,
  5402  001230  0EC2               	movlw	low dameDatosSistema@buffer
  5403  001232  6FAE               	movwf	sprintf@s& (0+255),b
  5404  001234  0E00               	movlw	high dameDatosSistema@buffer
  5405  001236  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  5406  001238  0EE0               	movlw	low STR_26
  5407  00123A  6FB0               	movwf	sprintf@fmt& (0+255),b
  5408  00123C  0E7F               	movlw	high STR_26
  5409  00123E  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  5410  001240  C0F4  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  5411  001244  C0F5  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  5412  001248  0E00               	movlw	0
  5413  00124A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5414  00124C  0E03               	movlw	3
  5415  00124E  6E03               	movwf	___wmul@multiplicand^0,c
  5416  001250  ECE6  F010         	call	___wmul	;wreg free
  5417  001254  0E00               	movlw	low _horarios
  5418  001256  2401               	addwf	?___wmul^0,w,c
  5419  001258  6ED9               	movwf	fsr2l,c
  5420  00125A  0E01               	movlw	high _horarios
  5421  00125C  2002               	addwfc	(?___wmul+1)^0,w,c
  5422  00125E  6EDA               	movwf	fsr2h,c
  5423  001260  50DF               	movf	indf2,w,c
  5424  001262  6E58               	movwf	??_dameDatosSistema^0,c
  5425  001264  5058               	movf	??_dameDatosSistema^0,w,c
  5426  001266  0100               	movlb	0	; () banked
  5427  001268  6FB2               	movwf	(?_sprintf+4)& (0+255),b
  5428  00126A  6BB3               	clrf	(?_sprintf+5)& (0+255),b
  5429  00126C  C0F4  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  5430  001270  C0F5  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  5431  001274  0E00               	movlw	0
  5432  001276  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5433  001278  0E03               	movlw	3
  5434  00127A  6E03               	movwf	___wmul@multiplicand^0,c
  5435  00127C  ECE6  F010         	call	___wmul	;wreg free
  5436  001280  0E01               	movlw	low (_horarios+1)
  5437  001282  2401               	addwf	?___wmul^0,w,c
  5438  001284  6ED9               	movwf	fsr2l,c
  5439  001286  0E01               	movlw	high (_horarios+1)
  5440  001288  2002               	addwfc	(?___wmul+1)^0,w,c
  5441  00128A  6EDA               	movwf	fsr2h,c
  5442  00128C  50DF               	movf	indf2,w,c
  5443  00128E  6E59               	movwf	(??_dameDatosSistema+1)^0,c
  5444  001290  5059               	movf	(??_dameDatosSistema+1)^0,w,c
  5445  001292  0100               	movlb	0	; () banked
  5446  001294  6FB4               	movwf	(?_sprintf+6)& (0+255),b
  5447  001296  6BB5               	clrf	(?_sprintf+7)& (0+255),b
  5448  001298  C0F4  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  5449  00129C  C0F5  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  5450  0012A0  0E00               	movlw	0
  5451  0012A2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5452  0012A4  0E03               	movlw	3
  5453  0012A6  6E03               	movwf	___wmul@multiplicand^0,c
  5454  0012A8  ECE6  F010         	call	___wmul	;wreg free
  5455  0012AC  0E02               	movlw	low (_horarios+2)
  5456  0012AE  2401               	addwf	?___wmul^0,w,c
  5457  0012B0  6ED9               	movwf	fsr2l,c
  5458  0012B2  0E01               	movlw	high (_horarios+2)
  5459  0012B4  2002               	addwfc	(?___wmul+1)^0,w,c
  5460  0012B6  6EDA               	movwf	fsr2h,c
  5461  0012B8  50DF               	movf	indf2,w,c
  5462  0012BA  6E5A               	movwf	(??_dameDatosSistema+2)^0,c
  5463  0012BC  505A               	movf	(??_dameDatosSistema+2)^0,w,c
  5464  0012BE  0100               	movlb	0	; () banked
  5465  0012C0  6FB6               	movwf	(?_sprintf+8)& (0+255),b
  5466  0012C2  6BB7               	clrf	(?_sprintf+9)& (0+255),b
  5467  0012C4  EC47  F00F         	call	_sprintf	;wreg free
  5468  0012C8                     
  5469                           ;main.c: 646:         UART_printf(buffer);
  5470  0012C8  0EC2               	movlw	low dameDatosSistema@buffer
  5471  0012CA  6E02               	movwf	UART_printf@cadena^0,c
  5472  0012CC  0E00               	movlw	high dameDatosSistema@buffer
  5473  0012CE  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5474  0012D0  ECC0  F00E         	call	_UART_printf	;wreg free
  5475  0012D4                     
  5476                           ;main.c: 648:     }
  5477  0012D4  0100               	movlb	0	; () banked
  5478  0012D6  4BF4               	infsnz	dameDatosSistema@i& (0+255),f,b
  5479  0012D8  2BF5               	incf	(dameDatosSistema@i+1)& (0+255),f,b
  5480  0012DA                     
  5481                           ; BSR set to: 0
  5482  0012DA  BFF5               	btfsc	(dameDatosSistema@i+1)& (0+255),7,b
  5483  0012DC  EF79  F009         	goto	u2591
  5484  0012E0  51F5               	movf	(dameDatosSistema@i+1)& (0+255),w,b
  5485  0012E2  E109               	bnz	u2590
  5486  0012E4  0E18               	movlw	24
  5487  0012E6  5DF4               	subwf	dameDatosSistema@i& (0+255),w,b
  5488  0012E8  A0D8               	btfss	status,0,c
  5489  0012EA  EF79  F009         	goto	u2591
  5490  0012EE  EF7B  F009         	goto	u2590
  5491  0012F2                     u2591:
  5492  0012F2  EF18  F009         	goto	l3311
  5493  0012F6                     u2590:
  5494  0012F6                     
  5495                           ; BSR set to: 0
  5496  0012F6  0012               	return		;funcret
  5497  0012F8                     __end_of_dameDatosSistema:
  5498                           	opt callstack 0
  5499                           
  5500 ;; *************** function _sprintf *****************
  5501 ;; Defined at:
  5502 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  5503 ;; Parameters:    Size  Location     Type
  5504 ;;  s               2    0[BANK0 ] PTR unsigned char 
  5505 ;;		 -> mostrarDatosSensoresWIFI@buffer(50), mostrarDatosSensores@buffer(50), dameDatosSistema@buffer(50), 
  5506 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  5507 ;;		 -> STR_35(29), STR_34(32), STR_33(40), STR_32(38), 
  5508 ;;		 -> STR_31(42), STR_30(29), STR_29(32), STR_26(16), 
  5509 ;; Auto vars:     Size  Location     Type
  5510 ;;  f               6   14[BANK0 ] struct _IO_FILE
  5511 ;;  ap              2   12[BANK0 ] PTR void [1]
  5512 ;;		 -> ?_sprintf(2), 
  5513 ;;  ret             2    0        int 
  5514 ;; Return value:  Size  Location     Type
  5515 ;;                  2    0[BANK0 ] int 
  5516 ;; Registers used:
  5517 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5518 ;; Tracked objects:
  5519 ;;		On entry : 0/0
  5520 ;;		On exit  : 0/0
  5521 ;;		Unchanged: 0/0
  5522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5523 ;;      Params:         0      10       0       0       0       0       0       0       0
  5524 ;;      Locals:         0      10       0       0       0       0       0       0       0
  5525 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5526 ;;      Totals:         0      20       0       0       0       0       0       0       0
  5527 ;;Total ram usage:       20 bytes
  5528 ;; Hardware stack levels used:    1
  5529 ;; Hardware stack levels required when called:    8
  5530 ;; This function calls:
  5531 ;;		_vfprintf
  5532 ;; This function is called by:
  5533 ;;		_dameDatosSistema
  5534 ;;		_mostrarDatosSensores
  5535 ;;		_mostrarDatosSensoresWIFI
  5536 ;; This function uses a non-reentrant model
  5537 ;;
  5538                           
  5539                           	psect	text27
  5540  001E8E                     __ptext27:
  5541                           	opt callstack 0
  5542  001E8E                     _sprintf:
  5543                           	opt callstack 20
  5544  001E8E  0EB2               	movlw	low (?_sprintf+4)
  5545  001E90  0100               	movlb	0	; () banked
  5546  001E92  6FBA               	movwf	sprintf@ap& (0+255),b
  5547  001E94  0E00               	movlw	high (?_sprintf+4)
  5548  001E96  6FBB               	movwf	(sprintf@ap+1)& (0+255),b
  5549  001E98  C0AE  F0BC         	movff	sprintf@s,sprintf@f
  5550  001E9C  C0AF  F0BD         	movff	sprintf@s+1,sprintf@f+1
  5551  001EA0                     
  5552                           ; BSR set to: 0
  5553  001EA0  0E00               	movlw	0
  5554  001EA2  6FBF               	movwf	(sprintf@f+3)& (0+255),b
  5555  001EA4  0E00               	movlw	0
  5556  001EA6  6FBE               	movwf	(sprintf@f+2)& (0+255),b
  5557  001EA8                     
  5558                           ; BSR set to: 0
  5559  001EA8  0E00               	movlw	0
  5560  001EAA  6FC1               	movwf	(sprintf@f+5)& (0+255),b
  5561  001EAC  0E00               	movlw	0
  5562  001EAE  6FC0               	movwf	(sprintf@f+4)& (0+255),b
  5563  001EB0                     
  5564                           ; BSR set to: 0
  5565  001EB0  0EBC               	movlw	low sprintf@f
  5566  001EB2  6E50               	movwf	vfprintf@fp^0,c
  5567  001EB4  0E00               	movlw	high sprintf@f
  5568  001EB6  6E51               	movwf	(vfprintf@fp+1)^0,c
  5569  001EB8  C0B0  F052         	movff	sprintf@fmt,vfprintf@fmt
  5570  001EBC  C0B1  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  5571  001EC0  0EBA               	movlw	low sprintf@ap
  5572  001EC2  6E54               	movwf	vfprintf@ap^0,c
  5573  001EC4  0E00               	movlw	high sprintf@ap
  5574  001EC6  6E55               	movwf	(vfprintf@ap+1)^0,c
  5575  001EC8  EC8F  F00E         	call	_vfprintf	;wreg free
  5576  001ECC  0100               	movlb	0	; () banked
  5577  001ECE  51BE               	movf	(sprintf@f+2)& (0+255),w,b
  5578  001ED0  25AE               	addwf	sprintf@s& (0+255),w,b
  5579  001ED2  6ED9               	movwf	fsr2l,c
  5580  001ED4  51BF               	movf	(sprintf@f+3)& (0+255),w,b
  5581  001ED6  21AF               	addwfc	(sprintf@s+1)& (0+255),w,b
  5582  001ED8  6EDA               	movwf	fsr2h,c
  5583  001EDA  0E00               	movlw	0
  5584  001EDC  6EDF               	movwf	indf2,c
  5585  001EDE                     
  5586                           ; BSR set to: 0
  5587  001EDE  0012               	return		;funcret
  5588  001EE0                     __end_of_sprintf:
  5589                           	opt callstack 0
  5590                           
  5591 ;; *************** function _vfprintf *****************
  5592 ;; Defined at:
  5593 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5594 ;; Parameters:    Size  Location     Type
  5595 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  5596 ;;		 -> sprintf@f(6), 
  5597 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  5598 ;;		 -> STR_35(29), STR_34(32), STR_33(40), STR_32(38), 
  5599 ;;		 -> STR_31(42), STR_30(29), STR_29(32), STR_26(16), 
  5600 ;;  ap              2   83[COMRAM] PTR PTR void 
  5601 ;;		 -> sprintf@ap(2), 
  5602 ;; Auto vars:     Size  Location     Type
  5603 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  5604 ;;		 -> STR_35(29), STR_34(32), STR_33(40), STR_32(38), 
  5605 ;;		 -> STR_31(42), STR_30(29), STR_29(32), STR_26(16), 
  5606 ;; Return value:  Size  Location     Type
  5607 ;;                  2   79[COMRAM] int 
  5608 ;; Registers used:
  5609 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5610 ;; Tracked objects:
  5611 ;;		On entry : 0/0
  5612 ;;		On exit  : 0/0
  5613 ;;		Unchanged: 0/0
  5614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5615 ;;      Params:         6       0       0       0       0       0       0       0       0
  5616 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5617 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5618 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5619 ;;Total ram usage:        8 bytes
  5620 ;; Hardware stack levels used:    1
  5621 ;; Hardware stack levels required when called:    7
  5622 ;; This function calls:
  5623 ;;		_vfpfcnvrt
  5624 ;; This function is called by:
  5625 ;;		_sprintf
  5626 ;; This function uses a non-reentrant model
  5627 ;;
  5628                           
  5629                           	psect	text28
  5630  001D1E                     __ptext28:
  5631                           	opt callstack 0
  5632  001D1E                     _vfprintf:
  5633                           	opt callstack 20
  5634  001D1E                     
  5635                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  5636  001D1E  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  5637  001D22  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  5638  001D26                     
  5639                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  5640  001D26  0E00               	movlw	0
  5641  001D28  0100               	movlb	0	; () banked
  5642  001D2A  6F79               	movwf	(_nout+1)& (0+255),b
  5643  001D2C  0E00               	movlw	0
  5644  001D2E  6F78               	movwf	_nout& (0+255),b
  5645                           
  5646                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5647  001D30  EFAD  F00E         	goto	l2851
  5648  001D34                     l2849:
  5649                           
  5650                           ; BSR set to: 0
  5651                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  5652  001D34  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  5653  001D38  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5654  001D3C  0E56               	movlw	low vfprintf@cfmt
  5655  001D3E  6E42               	movwf	vfpfcnvrt@fmt^0,c
  5656  001D40  0E00               	movlw	high vfprintf@cfmt
  5657  001D42  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  5658  001D44  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  5659  001D48  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  5660  001D4C  ECD2  F003         	call	_vfpfcnvrt	;wreg free
  5661  001D50  5040               	movf	?_vfpfcnvrt^0,w,c
  5662  001D52  0100               	movlb	0	; () banked
  5663  001D54  2778               	addwf	_nout& (0+255),f,b
  5664  001D56  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  5665  001D58  2379               	addwfc	(_nout+1)& (0+255),f,b
  5666  001D5A                     l2851:
  5667                           
  5668                           ; BSR set to: 0
  5669                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5670  001D5A  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  5671  001D5E  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  5672  001D62                     	if	0	;tblptru may be non-zero
  5673  001D62                     	endif
  5674  001D62                     	if	0	;tblptru may be non-zero
  5675  001D62                     	endif
  5676  001D62  0008               	tblrd		*
  5677  001D64  50F5               	movf	tablat,w,c
  5678  001D66  0900               	iorlw	0
  5679  001D68  A4D8               	btfss	status,2,c
  5680  001D6A  EFB9  F00E         	goto	u2041
  5681  001D6E  EFBB  F00E         	goto	u2040
  5682  001D72                     u2041:
  5683  001D72  EF9A  F00E         	goto	l2849
  5684  001D76                     u2040:
  5685  001D76                     
  5686                           ; BSR set to: 0
  5687                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  5688  001D76  C078  F050         	movff	_nout,?_vfprintf
  5689  001D7A  C079  F051         	movff	_nout+1,?_vfprintf+1
  5690  001D7E                     
  5691                           ; BSR set to: 0
  5692  001D7E  0012               	return		;funcret
  5693  001D80                     __end_of_vfprintf:
  5694                           	opt callstack 0
  5695                           
  5696 ;; *************** function _vfpfcnvrt *****************
  5697 ;; Defined at:
  5698 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5699 ;; Parameters:    Size  Location     Type
  5700 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  5701 ;;		 -> sprintf@f(6), 
  5702 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  5703 ;;		 -> vfprintf@cfmt(2), 
  5704 ;;  ap              2   67[COMRAM] PTR PTR void 
  5705 ;;		 -> sprintf@ap(2), 
  5706 ;; Auto vars:     Size  Location     Type
  5707 ;;  ll              8   71[COMRAM] long long 
  5708 ;;  llu             8    0        unsigned long long 
  5709 ;;  f               4    0        unsigned long long 
  5710 ;;  vp              3    0        PTR void 
  5711 ;;  ct              3    0        unsigned char [3]
  5712 ;;  cp              3    0        PTR unsigned char 
  5713 ;;  i               2    0        int 
  5714 ;;  done            2    0        int 
  5715 ;;  c               1    0        unsigned char 
  5716 ;; Return value:  Size  Location     Type
  5717 ;;                  2   63[COMRAM] int 
  5718 ;; Registers used:
  5719 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5720 ;; Tracked objects:
  5721 ;;		On entry : 0/0
  5722 ;;		On exit  : 0/0
  5723 ;;		Unchanged: 0/0
  5724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5725 ;;      Params:         6       0       0       0       0       0       0       0       0
  5726 ;;      Locals:         8       0       0       0       0       0       0       0       0
  5727 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5728 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5729 ;;Total ram usage:       16 bytes
  5730 ;; Hardware stack levels used:    1
  5731 ;; Hardware stack levels required when called:    6
  5732 ;; This function calls:
  5733 ;;		_dtoa
  5734 ;;		_fputc
  5735 ;; This function is called by:
  5736 ;;		_vfprintf
  5737 ;; This function uses a non-reentrant model
  5738 ;;
  5739                           
  5740                           	psect	text29
  5741  0007A4                     __ptext29:
  5742                           	opt callstack 0
  5743  0007A4                     _vfpfcnvrt:
  5744                           	opt callstack 20
  5745  0007A4                     
  5746                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  5747  0007A4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5748  0007A8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5749  0007AC  CFDE FFF6          	movff	postinc2,tblptrl
  5750  0007B0  CFDD FFF7          	movff	postdec2,tblptrh
  5751  0007B4                     	if	0	;tblptru may be non-zero
  5752  0007B4                     	endif
  5753  0007B4                     	if	0	;tblptru may be non-zero
  5754  0007B4                     	endif
  5755  0007B4  0008               	tblrd		*
  5756  0007B6  50F5               	movf	tablat,w,c
  5757  0007B8  0A25               	xorlw	37
  5758  0007BA  A4D8               	btfss	status,2,c
  5759  0007BC  EFE2  F003         	goto	u1931
  5760  0007C0  EFE4  F003         	goto	u1930
  5761  0007C4                     u1931:
  5762  0007C4  EF90  F004         	goto	l2747
  5763  0007C8                     u1930:
  5764  0007C8                     
  5765                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  5766  0007C8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5767  0007CC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5768  0007D0  2ADE               	incf	postinc2,f,c
  5769  0007D2  0E00               	movlw	0
  5770  0007D4  22DD               	addwfc	postdec2,f,c
  5771  0007D6                     
  5772                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  5773  0007D6  0E00               	movlw	0
  5774  0007D8  0100               	movlb	0	; () banked
  5775  0007DA  6F7B               	movwf	(_width+1)& (0+255),b
  5776  0007DC  0E00               	movlw	0
  5777  0007DE  6F7A               	movwf	_width& (0+255),b
  5778  0007E0  C07A  F07E         	movff	_width,_flags
  5779  0007E4  C07B  F07F         	movff	_width+1,_flags+1
  5780  0007E8                     
  5781                           ; BSR set to: 0
  5782                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  5783  0007E8  697C               	setf	_prec& (0+255),b
  5784  0007EA  697D               	setf	(_prec+1)& (0+255),b
  5785  0007EC                     
  5786                           ; BSR set to: 0
  5787                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5788  0007EC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5789  0007F0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5790  0007F4  CFDE FFF6          	movff	postinc2,tblptrl
  5791  0007F8  CFDD FFF7          	movff	postdec2,tblptrh
  5792  0007FC                     	if	0	;tblptru may be non-zero
  5793  0007FC                     	endif
  5794  0007FC                     	if	0	;tblptru may be non-zero
  5795  0007FC                     	endif
  5796  0007FC  0008               	tblrd		*
  5797  0007FE  50F5               	movf	tablat,w,c
  5798  000800  0A64               	xorlw	100
  5799  000802  B4D8               	btfsc	status,2,c
  5800  000804  EF06  F004         	goto	u1941
  5801  000808  EF08  F004         	goto	u1940
  5802  00080C                     u1941:
  5803  00080C  EF1A  F004         	goto	l2725
  5804  000810                     u1940:
  5805  000810                     
  5806                           ; BSR set to: 0
  5807  000810  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5808  000814  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5809  000818  CFDE FFF6          	movff	postinc2,tblptrl
  5810  00081C  CFDD FFF7          	movff	postdec2,tblptrh
  5811  000820                     	if	0	;tblptru may be non-zero
  5812  000820                     	endif
  5813  000820                     	if	0	;tblptru may be non-zero
  5814  000820                     	endif
  5815  000820  0008               	tblrd		*
  5816  000822  50F5               	movf	tablat,w,c
  5817  000824  0A69               	xorlw	105
  5818  000826  A4D8               	btfss	status,2,c
  5819  000828  EF18  F004         	goto	u1951
  5820  00082C  EF1A  F004         	goto	u1950
  5821  000830                     u1951:
  5822  000830  EF5A  F004         	goto	l2731
  5823  000834                     u1950:
  5824  000834                     l2725:
  5825                           
  5826                           ; BSR set to: 0
  5827                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  5828  000834  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5829  000838  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5830  00083C  2ADE               	incf	postinc2,f,c
  5831  00083E  0E00               	movlw	0
  5832  000840  22DD               	addwfc	postdec2,f,c
  5833                           
  5834                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5835  000842  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5836  000846  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5837  00084A  CFDF F046          	movff	indf2,??_vfpfcnvrt
  5838  00084E  0E02               	movlw	2
  5839  000850  26DE               	addwf	postinc2,f,c
  5840  000852  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  5841  000856  0E00               	movlw	0
  5842  000858  22DD               	addwfc	postdec2,f,c
  5843  00085A  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5844  00085E  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5845  000862  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  5846  000866  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  5847  00086A  0E00               	movlw	0
  5848  00086C  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  5849  00086E  0EFF               	movlw	-1
  5850  000870  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  5851  000872  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  5852  000874  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  5853  000876  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  5854  000878  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  5855  00087A  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  5856  00087C                     
  5857                           ; BSR set to: 0
  5858                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  5859  00087C  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  5860  000880  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5861  000884  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  5862  000888  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5863  00088C  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5864  000890  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5865  000894  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5866  000898  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5867  00089C  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5868  0008A0  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5869  0008A4  EC7D  F001         	call	_dtoa	;wreg free
  5870  0008A8  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  5871  0008AC  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5872  0008B0  EFAB  F004         	goto	l457
  5873  0008B4                     l2731:
  5874                           
  5875                           ; BSR set to: 0
  5876                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  5877  0008B4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5878  0008B8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5879  0008BC  CFDE FFF6          	movff	postinc2,tblptrl
  5880  0008C0  CFDD FFF7          	movff	postdec2,tblptrh
  5881  0008C4                     	if	0	;tblptru may be non-zero
  5882  0008C4                     	endif
  5883  0008C4                     	if	0	;tblptru may be non-zero
  5884  0008C4                     	endif
  5885  0008C4  0008               	tblrd		*
  5886  0008C6  50F5               	movf	tablat,w,c
  5887  0008C8  0A25               	xorlw	37
  5888  0008CA  A4D8               	btfss	status,2,c
  5889  0008CC  EF6A  F004         	goto	u1961
  5890  0008D0  EF6C  F004         	goto	u1960
  5891  0008D4                     u1961:
  5892  0008D4  EF83  F004         	goto	l2741
  5893  0008D8                     u1960:
  5894  0008D8                     
  5895                           ; BSR set to: 0
  5896                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  5897  0008D8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5898  0008DC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5899  0008E0  2ADE               	incf	postinc2,f,c
  5900  0008E2  0E00               	movlw	0
  5901  0008E4  22DD               	addwfc	postdec2,f,c
  5902  0008E6                     
  5903                           ; BSR set to: 0
  5904                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  5905  0008E6  0E00               	movlw	0
  5906  0008E8  6E02               	movwf	(fputc@c+1)^0,c
  5907  0008EA  0E25               	movlw	37
  5908  0008EC  6E01               	movwf	fputc@c^0,c
  5909  0008EE  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5910  0008F2  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5911  0008F6  ECE3  F009         	call	_fputc	;wreg free
  5912  0008FA                     l2737:
  5913                           
  5914                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  5915  0008FA  0E00               	movlw	0
  5916  0008FC  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  5917  0008FE  0E01               	movlw	1
  5918  000900  6E40               	movwf	?_vfpfcnvrt^0,c
  5919  000902  EFAB  F004         	goto	l457
  5920  000906                     l2741:
  5921                           
  5922                           ; BSR set to: 0
  5923                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  5924  000906  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5925  00090A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5926  00090E  2ADE               	incf	postinc2,f,c
  5927  000910  0E00               	movlw	0
  5928  000912  22DD               	addwfc	postdec2,f,c
  5929  000914                     
  5930                           ; BSR set to: 0
  5931                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  5932  000914  0E00               	movlw	0
  5933  000916  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  5934  000918  0E00               	movlw	0
  5935  00091A  6E40               	movwf	?_vfpfcnvrt^0,c
  5936  00091C  EFAB  F004         	goto	l457
  5937  000920                     l2747:
  5938                           
  5939                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  5940  000920  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5941  000924  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5942  000928  CFDE FFF6          	movff	postinc2,tblptrl
  5943  00092C  CFDD FFF7          	movff	postdec2,tblptrh
  5944  000930                     	if	0	;tblptru may be non-zero
  5945  000930                     	endif
  5946  000930                     	if	0	;tblptru may be non-zero
  5947  000930                     	endif
  5948  000930  0008               	tblrd		*
  5949  000932  50F5               	movf	tablat,w,c
  5950  000934  6E01               	movwf	fputc@c^0,c
  5951  000936  6A02               	clrf	(fputc@c+1)^0,c
  5952  000938  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5953  00093C  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5954  000940  ECE3  F009         	call	_fputc	;wreg free
  5955  000944                     
  5956                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  5957  000944  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5958  000948  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5959  00094C  2ADE               	incf	postinc2,f,c
  5960  00094E  0E00               	movlw	0
  5961  000950  22DD               	addwfc	postdec2,f,c
  5962  000952  EF7D  F004         	goto	l2737
  5963  000956                     l457:
  5964  000956  0012               	return		;funcret
  5965  000958                     __end_of_vfpfcnvrt:
  5966                           	opt callstack 0
  5967                           
  5968 ;; *************** function _dtoa *****************
  5969 ;; Defined at:
  5970 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5971 ;; Parameters:    Size  Location     Type
  5972 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5973 ;;		 -> sprintf@f(6), 
  5974 ;;  d               8   29[COMRAM] long long 
  5975 ;; Auto vars:     Size  Location     Type
  5976 ;;  n               8   53[COMRAM] long long 
  5977 ;;  i               2   61[COMRAM] int 
  5978 ;;  s               2   51[COMRAM] int 
  5979 ;;  w               2   49[COMRAM] int 
  5980 ;;  p               2   47[COMRAM] int 
  5981 ;; Return value:  Size  Location     Type
  5982 ;;                  2   27[COMRAM] int 
  5983 ;; Registers used:
  5984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5985 ;; Tracked objects:
  5986 ;;		On entry : 0/0
  5987 ;;		On exit  : 0/0
  5988 ;;		Unchanged: 0/0
  5989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5990 ;;      Params:        10       0       0       0       0       0       0       0       0
  5991 ;;      Locals:        18       0       0       0       0       0       0       0       0
  5992 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5993 ;;      Totals:        36       0       0       0       0       0       0       0       0
  5994 ;;Total ram usage:       36 bytes
  5995 ;; Hardware stack levels used:    1
  5996 ;; Hardware stack levels required when called:    5
  5997 ;; This function calls:
  5998 ;;		___aodiv
  5999 ;;		___aomod
  6000 ;;		_abs
  6001 ;;		_pad
  6002 ;; This function is called by:
  6003 ;;		_vfpfcnvrt
  6004 ;; This function uses a non-reentrant model
  6005 ;;
  6006                           
  6007                           	psect	text30
  6008  0002FA                     __ptext30:
  6009                           	opt callstack 0
  6010  0002FA                     _dtoa:
  6011                           	opt callstack 20
  6012  0002FA                     
  6013                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  6014  0002FA  C01E  F036         	movff	dtoa@d,dtoa@n
  6015  0002FE  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  6016  000302  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  6017  000306  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  6018  00030A  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  6019  00030E  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  6020  000312  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  6021  000316  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  6022  00031A                     
  6023                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  6024  00031A  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  6025  00031C  EF92  F001         	goto	u1691
  6026  000320  EF95  F001         	goto	u1690
  6027  000324                     u1691:
  6028  000324  0E01               	movlw	1
  6029  000326  EF96  F001         	goto	u1700
  6030  00032A                     u1690:
  6031  00032A  0E00               	movlw	0
  6032  00032C                     u1700:
  6033  00032C  6E34               	movwf	dtoa@s^0,c
  6034  00032E  6A35               	clrf	(dtoa@s+1)^0,c
  6035                           
  6036                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  6037  000330  5034               	movf	dtoa@s^0,w,c
  6038  000332  1035               	iorwf	(dtoa@s+1)^0,w,c
  6039  000334  B4D8               	btfsc	status,2,c
  6040  000336  EF9F  F001         	goto	u1711
  6041  00033A  EFA1  F001         	goto	u1710
  6042  00033E                     u1711:
  6043  00033E  EFB1  F001         	goto	l2583
  6044  000342                     u1710:
  6045  000342                     
  6046                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  6047  000342  1E3D               	comf	(dtoa@n+7)^0,f,c
  6048  000344  1E3C               	comf	(dtoa@n+6)^0,f,c
  6049  000346  1E3B               	comf	(dtoa@n+5)^0,f,c
  6050  000348  1E3A               	comf	(dtoa@n+4)^0,f,c
  6051  00034A  1E39               	comf	(dtoa@n+3)^0,f,c
  6052  00034C  1E38               	comf	(dtoa@n+2)^0,f,c
  6053  00034E  1E37               	comf	(dtoa@n+1)^0,f,c
  6054  000350  6C36               	negf	dtoa@n^0,c
  6055  000352  0E00               	movlw	0
  6056  000354  2237               	addwfc	(dtoa@n+1)^0,f,c
  6057  000356  2238               	addwfc	(dtoa@n+2)^0,f,c
  6058  000358  2239               	addwfc	(dtoa@n+3)^0,f,c
  6059  00035A  223A               	addwfc	(dtoa@n+4)^0,f,c
  6060  00035C  223B               	addwfc	(dtoa@n+5)^0,f,c
  6061  00035E  223C               	addwfc	(dtoa@n+6)^0,f,c
  6062  000360  223D               	addwfc	(dtoa@n+7)^0,f,c
  6063  000362                     l2583:
  6064                           
  6065                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  6066  000362  0100               	movlb	0	; () banked
  6067  000364  BF7D               	btfsc	(_prec+1)& (0+255),7,b
  6068  000366  EFB7  F001         	goto	u1721
  6069  00036A  EFB9  F001         	goto	u1720
  6070  00036E                     u1721:
  6071  00036E  EFBA  F001         	goto	l2587
  6072  000372                     u1720:
  6073  000372                     
  6074                           ; BSR set to: 0
  6075                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  6076  000372  937E               	bcf	_flags& (0+255),1,b
  6077  000374                     l2587:
  6078                           
  6079                           ; BSR set to: 0
  6080                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  6081  000374  BF7D               	btfsc	(_prec+1)& (0+255),7,b
  6082  000376  EFC7  F001         	goto	u1730
  6083  00037A  517D               	movf	(_prec+1)& (0+255),w,b
  6084  00037C  E106               	bnz	u1731
  6085  00037E  057C               	decf	_prec& (0+255),w,b
  6086  000380  B0D8               	btfsc	status,0,c
  6087  000382  EFC5  F001         	goto	u1731
  6088  000386  EFC7  F001         	goto	u1730
  6089  00038A                     u1731:
  6090  00038A  EFCD  F001         	goto	l430
  6091  00038E                     u1730:
  6092  00038E                     
  6093                           ; BSR set to: 0
  6094  00038E  0E00               	movlw	0
  6095  000390  6E31               	movwf	(dtoa@p+1)^0,c
  6096  000392  0E01               	movlw	1
  6097  000394  6E30               	movwf	dtoa@p^0,c
  6098  000396  EFD1  F001         	goto	l432
  6099  00039A                     l430:
  6100                           
  6101                           ; BSR set to: 0
  6102  00039A  C07C  F030         	movff	_prec,dtoa@p
  6103  00039E  C07D  F031         	movff	_prec+1,dtoa@p+1
  6104  0003A2                     l432:
  6105                           
  6106                           ; BSR set to: 0
  6107                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  6108  0003A2  C07A  F032         	movff	_width,dtoa@w
  6109  0003A6  C07B  F033         	movff	_width+1,dtoa@w+1
  6110  0003AA                     
  6111                           ; BSR set to: 0
  6112                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  6113  0003AA  5034               	movf	dtoa@s^0,w,c
  6114  0003AC  1035               	iorwf	(dtoa@s+1)^0,w,c
  6115  0003AE  A4D8               	btfss	status,2,c
  6116  0003B0  EFDC  F001         	goto	u1741
  6117  0003B4  EFDE  F001         	goto	u1740
  6118  0003B8                     u1741:
  6119  0003B8  EFE5  F001         	goto	l2595
  6120  0003BC                     u1740:
  6121  0003BC                     
  6122                           ; BSR set to: 0
  6123  0003BC  A57E               	btfss	_flags& (0+255),2,b
  6124  0003BE  EFE3  F001         	goto	u1751
  6125  0003C2  EFE5  F001         	goto	u1750
  6126  0003C6                     u1751:
  6127  0003C6  EFE8  F001         	goto	l2597
  6128  0003CA                     u1750:
  6129  0003CA                     l2595:
  6130                           
  6131                           ; BSR set to: 0
  6132                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  6133  0003CA  0632               	decf	dtoa@w^0,f,c
  6134  0003CC  A0D8               	btfss	status,0,c
  6135  0003CE  0633               	decf	(dtoa@w+1)^0,f,c
  6136  0003D0                     l2597:
  6137                           
  6138                           ; BSR set to: 0
  6139                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  6140  0003D0  0E00               	movlw	0
  6141  0003D2  6E3F               	movwf	(dtoa@i+1)^0,c
  6142  0003D4  0E1F               	movlw	31
  6143  0003D6  6E3E               	movwf	dtoa@i^0,c
  6144  0003D8                     
  6145                           ; BSR set to: 0
  6146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  6147  0003D8  0E00               	movlw	0
  6148  0003DA  6FAD               	movwf	(_dbuf+31)& (0+255),b
  6149                           
  6150                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6151  0003DC  EF6C  F002         	goto	l2611
  6152  0003E0                     l2601:
  6153                           
  6154                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  6155  0003E0  063E               	decf	dtoa@i^0,f,c
  6156  0003E2  A0D8               	btfss	status,0,c
  6157  0003E4  063F               	decf	(dtoa@i+1)^0,f,c
  6158  0003E6                     
  6159                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  6160  0003E6  0E8E               	movlw	low _dbuf
  6161  0003E8  243E               	addwf	dtoa@i^0,w,c
  6162  0003EA  6ED9               	movwf	fsr2l,c
  6163  0003EC  0E00               	movlw	high _dbuf
  6164  0003EE  203F               	addwfc	(dtoa@i+1)^0,w,c
  6165  0003F0  6EDA               	movwf	fsr2h,c
  6166  0003F2  C036  F001         	movff	dtoa@n,___aomod@dividend
  6167  0003F6  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  6168  0003FA  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  6169  0003FE  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  6170  000402  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  6171  000406  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  6172  00040A  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  6173  00040E  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  6174  000412  0E0A               	movlw	10
  6175  000414  6E09               	movwf	___aomod@divisor^0,c
  6176  000416  0E00               	movlw	0
  6177  000418  6E0A               	movwf	(___aomod@divisor+1)^0,c
  6178  00041A  0E00               	movlw	0
  6179  00041C  6E0B               	movwf	(___aomod@divisor+2)^0,c
  6180  00041E  0E00               	movlw	0
  6181  000420  6E0C               	movwf	(___aomod@divisor+3)^0,c
  6182  000422  0E00               	movlw	0
  6183  000424  6E0D               	movwf	(___aomod@divisor+4)^0,c
  6184  000426  0E00               	movlw	0
  6185  000428  6E0E               	movwf	(___aomod@divisor+5)^0,c
  6186  00042A  0E00               	movlw	0
  6187  00042C  6E0F               	movwf	(___aomod@divisor+6)^0,c
  6188  00042E  0E00               	movlw	0
  6189  000430  6E10               	movwf	(___aomod@divisor+7)^0,c
  6190  000432  EC70  F005         	call	___aomod	;wreg free
  6191  000436  C001  F026         	movff	?___aomod,??_dtoa
  6192  00043A  C002  F027         	movff	?___aomod+1,??_dtoa+1
  6193  00043E  C003  F028         	movff	?___aomod+2,??_dtoa+2
  6194  000442  C004  F029         	movff	?___aomod+3,??_dtoa+3
  6195  000446  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  6196  00044A  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  6197  00044E  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  6198  000452  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  6199  000456  C026  F013         	movff	??_dtoa,abs@a
  6200  00045A  C028  F014         	movff	??_dtoa+2,abs@a+1
  6201  00045E  EC21  F010         	call	_abs	;wreg free
  6202  000462  5013               	movf	?_abs^0,w,c
  6203  000464  0F30               	addlw	48
  6204  000466  6EDF               	movwf	indf2,c
  6205  000468                     
  6206                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  6207  000468  0630               	decf	dtoa@p^0,f,c
  6208  00046A  A0D8               	btfss	status,0,c
  6209  00046C  0631               	decf	(dtoa@p+1)^0,f,c
  6210  00046E                     
  6211                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  6212  00046E  0632               	decf	dtoa@w^0,f,c
  6213  000470  A0D8               	btfss	status,0,c
  6214  000472  0633               	decf	(dtoa@w+1)^0,f,c
  6215  000474                     
  6216                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  6217  000474  C036  F001         	movff	dtoa@n,___aodiv@dividend
  6218  000478  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  6219  00047C  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  6220  000480  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  6221  000484  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  6222  000488  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  6223  00048C  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  6224  000490  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  6225  000494  0E0A               	movlw	10
  6226  000496  6E09               	movwf	___aodiv@divisor^0,c
  6227  000498  0E00               	movlw	0
  6228  00049A  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  6229  00049C  0E00               	movlw	0
  6230  00049E  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  6231  0004A0  0E00               	movlw	0
  6232  0004A2  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  6233  0004A4  0E00               	movlw	0
  6234  0004A6  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  6235  0004A8  0E00               	movlw	0
  6236  0004AA  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  6237  0004AC  0E00               	movlw	0
  6238  0004AE  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  6239  0004B0  0E00               	movlw	0
  6240  0004B2  6E10               	movwf	(___aodiv@divisor+7)^0,c
  6241  0004B4  ECAC  F004         	call	___aodiv	;wreg free
  6242  0004B8  C001  F036         	movff	?___aodiv,dtoa@n
  6243  0004BC  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  6244  0004C0  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  6245  0004C4  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  6246  0004C8  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  6247  0004CC  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  6248  0004D0  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  6249  0004D4  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  6250  0004D8                     l2611:
  6251                           
  6252                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6253  0004D8  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  6254  0004DA  EF77  F002         	goto	u1761
  6255  0004DE  503F               	movf	(dtoa@i+1)^0,w,c
  6256  0004E0  E108               	bnz	u1760
  6257  0004E2  043E               	decf	dtoa@i^0,w,c
  6258  0004E4  A0D8               	btfss	status,0,c
  6259  0004E6  EF77  F002         	goto	u1761
  6260  0004EA  EF79  F002         	goto	u1760
  6261  0004EE                     u1761:
  6262  0004EE  EFAA  F002         	goto	l2621
  6263  0004F2                     u1760:
  6264  0004F2  5036               	movf	dtoa@n^0,w,c
  6265  0004F4  1037               	iorwf	(dtoa@n+1)^0,w,c
  6266  0004F6  1038               	iorwf	(dtoa@n+2)^0,w,c
  6267  0004F8  1039               	iorwf	(dtoa@n+3)^0,w,c
  6268  0004FA  103A               	iorwf	(dtoa@n+4)^0,w,c
  6269  0004FC  103B               	iorwf	(dtoa@n+5)^0,w,c
  6270  0004FE  103C               	iorwf	(dtoa@n+6)^0,w,c
  6271  000500  103D               	iorwf	(dtoa@n+7)^0,w,c
  6272  000502  A4D8               	btfss	status,2,c
  6273  000504  EF86  F002         	goto	u1771
  6274  000508  EF88  F002         	goto	u1770
  6275  00050C                     u1771:
  6276  00050C  EFF0  F001         	goto	l2601
  6277  000510                     u1770:
  6278  000510  BE31               	btfsc	(dtoa@p+1)^0,7,c
  6279  000512  EF95  F002         	goto	u1780
  6280  000516  5031               	movf	(dtoa@p+1)^0,w,c
  6281  000518  E106               	bnz	u1781
  6282  00051A  0430               	decf	dtoa@p^0,w,c
  6283  00051C  B0D8               	btfsc	status,0,c
  6284  00051E  EF93  F002         	goto	u1781
  6285  000522  EF95  F002         	goto	u1780
  6286  000526                     u1781:
  6287  000526  EFF0  F001         	goto	l2601
  6288  00052A                     u1780:
  6289  00052A  BE33               	btfsc	(dtoa@w+1)^0,7,c
  6290  00052C  EFA0  F002         	goto	u1791
  6291  000530  5033               	movf	(dtoa@w+1)^0,w,c
  6292  000532  E108               	bnz	u1790
  6293  000534  0432               	decf	dtoa@w^0,w,c
  6294  000536  A0D8               	btfss	status,0,c
  6295  000538  EFA0  F002         	goto	u1791
  6296  00053C  EFA2  F002         	goto	u1790
  6297  000540                     u1791:
  6298  000540  EFAA  F002         	goto	l2621
  6299  000544                     u1790:
  6300  000544  0100               	movlb	0	; () banked
  6301  000546  B37E               	btfsc	_flags& (0+255),1,b
  6302  000548  EFA8  F002         	goto	u1801
  6303  00054C  EFAA  F002         	goto	u1800
  6304  000550                     u1801:
  6305  000550  EFF0  F001         	goto	l2601
  6306  000554                     u1800:
  6307  000554                     l2621:
  6308                           
  6309                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  6310  000554  5034               	movf	dtoa@s^0,w,c
  6311  000556  1035               	iorwf	(dtoa@s+1)^0,w,c
  6312  000558  A4D8               	btfss	status,2,c
  6313  00055A  EFB1  F002         	goto	u1811
  6314  00055E  EFB3  F002         	goto	u1810
  6315  000562                     u1811:
  6316  000562  EFBB  F002         	goto	l2625
  6317  000566                     u1810:
  6318  000566  0100               	movlb	0	; () banked
  6319  000568  A57E               	btfss	_flags& (0+255),2,b
  6320  00056A  EFB9  F002         	goto	u1821
  6321  00056E  EFBB  F002         	goto	u1820
  6322  000572                     u1821:
  6323  000572  EFD9  F002         	goto	l2635
  6324  000576                     u1820:
  6325  000576                     l2625:
  6326                           
  6327                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  6328  000576  063E               	decf	dtoa@i^0,f,c
  6329  000578  A0D8               	btfss	status,0,c
  6330  00057A  063F               	decf	(dtoa@i+1)^0,f,c
  6331  00057C                     
  6332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  6333  00057C  5034               	movf	dtoa@s^0,w,c
  6334  00057E  1035               	iorwf	(dtoa@s+1)^0,w,c
  6335  000580  A4D8               	btfss	status,2,c
  6336  000582  EFC5  F002         	goto	u1831
  6337  000586  EFC7  F002         	goto	u1830
  6338  00058A                     u1831:
  6339  00058A  EFCD  F002         	goto	l2631
  6340  00058E                     u1830:
  6341  00058E  0E00               	movlw	0
  6342  000590  6E2F               	movwf	(_dtoa$1005+1)^0,c
  6343  000592  0E2B               	movlw	43
  6344  000594  6E2E               	movwf	_dtoa$1005^0,c
  6345  000596  EFD1  F002         	goto	l2633
  6346  00059A                     l2631:
  6347  00059A  0E00               	movlw	0
  6348  00059C  6E2F               	movwf	(_dtoa$1005+1)^0,c
  6349  00059E  0E2D               	movlw	45
  6350  0005A0  6E2E               	movwf	_dtoa$1005^0,c
  6351  0005A2                     l2633:
  6352  0005A2  0E8E               	movlw	low _dbuf
  6353  0005A4  243E               	addwf	dtoa@i^0,w,c
  6354  0005A6  6ED9               	movwf	fsr2l,c
  6355  0005A8  0E00               	movlw	high _dbuf
  6356  0005AA  203F               	addwfc	(dtoa@i+1)^0,w,c
  6357  0005AC  6EDA               	movwf	fsr2h,c
  6358  0005AE  C02E  FFDF         	movff	_dtoa$1005,indf2
  6359  0005B2                     l2635:
  6360                           
  6361                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  6362  0005B2  C01C  F011         	movff	dtoa@fp,pad@fp
  6363  0005B6  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  6364  0005BA  0E8E               	movlw	low _dbuf
  6365  0005BC  243E               	addwf	dtoa@i^0,w,c
  6366  0005BE  6E13               	movwf	pad@buf^0,c
  6367  0005C0  0E00               	movlw	high _dbuf
  6368  0005C2  203F               	addwfc	(dtoa@i+1)^0,w,c
  6369  0005C4  6E14               	movwf	(pad@buf+1)^0,c
  6370  0005C6  C032  F015         	movff	dtoa@w,pad@p
  6371  0005CA  C033  F016         	movff	dtoa@w+1,pad@p+1
  6372  0005CE  EC0F  F00B         	call	_pad	;wreg free
  6373  0005D2  C011  F01C         	movff	?_pad,?_dtoa
  6374  0005D6  C012  F01D         	movff	?_pad+1,?_dtoa+1
  6375  0005DA  0012               	return		;funcret
  6376  0005DC                     __end_of_dtoa:
  6377                           	opt callstack 0
  6378                           
  6379 ;; *************** function _pad *****************
  6380 ;; Defined at:
  6381 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6382 ;; Parameters:    Size  Location     Type
  6383 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6384 ;;		 -> sprintf@f(6), 
  6385 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6386 ;;		 -> dbuf(32), 
  6387 ;;  p               2   20[COMRAM] int 
  6388 ;; Auto vars:     Size  Location     Type
  6389 ;;  w               2   25[COMRAM] int 
  6390 ;;  i               2   23[COMRAM] int 
  6391 ;; Return value:  Size  Location     Type
  6392 ;;                  2   16[COMRAM] int 
  6393 ;; Registers used:
  6394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6395 ;; Tracked objects:
  6396 ;;		On entry : 0/0
  6397 ;;		On exit  : 0/0
  6398 ;;		Unchanged: 0/0
  6399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6400 ;;      Params:         6       0       0       0       0       0       0       0       0
  6401 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6402 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6403 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6404 ;;Total ram usage:       11 bytes
  6405 ;; Hardware stack levels used:    1
  6406 ;; Hardware stack levels required when called:    4
  6407 ;; This function calls:
  6408 ;;		_fputc
  6409 ;;		_fputs
  6410 ;;		_strlen
  6411 ;; This function is called by:
  6412 ;;		_dtoa
  6413 ;; This function uses a non-reentrant model
  6414 ;;
  6415                           
  6416                           	psect	text31
  6417  00161E                     __ptext31:
  6418                           	opt callstack 0
  6419  00161E                     _pad:
  6420                           	opt callstack 20
  6421  00161E                     
  6422                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  6423  00161E  0100               	movlb	0	; () banked
  6424  001620  A17E               	btfss	_flags& (0+255),0,b
  6425  001622  EF15  F00B         	goto	u1481
  6426  001626  EF17  F00B         	goto	u1480
  6427  00162A                     u1481:
  6428  00162A  EF21  F00B         	goto	l2467
  6429  00162E                     u1480:
  6430  00162E                     
  6431                           ; BSR set to: 0
  6432                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  6433  00162E  C013  F00A         	movff	pad@buf,fputs@s
  6434  001632  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6435  001636  C011  F00C         	movff	pad@fp,fputs@fp
  6436  00163A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6437  00163E  ECDF  F00F         	call	_fputs	;wreg free
  6438  001642                     l2467:
  6439                           
  6440                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  6441  001642  BE16               	btfsc	(pad@p+1)^0,7,c
  6442  001644  EF26  F00B         	goto	u1491
  6443  001648  EF28  F00B         	goto	u1490
  6444  00164C                     u1491:
  6445  00164C  EF2E  F00B         	goto	l2471
  6446  001650                     u1490:
  6447  001650  C015  F01A         	movff	pad@p,pad@w
  6448  001654  C016  F01B         	movff	pad@p+1,pad@w+1
  6449  001658  EF32  F00B         	goto	l419
  6450  00165C                     l2471:
  6451  00165C  0E00               	movlw	0
  6452  00165E  6E1B               	movwf	(pad@w+1)^0,c
  6453  001660  0E00               	movlw	0
  6454  001662  6E1A               	movwf	pad@w^0,c
  6455  001664                     l419:
  6456                           
  6457                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  6458  001664  0E00               	movlw	0
  6459  001666  6E19               	movwf	(pad@i+1)^0,c
  6460  001668  0E00               	movlw	0
  6461  00166A  6E18               	movwf	pad@i^0,c
  6462                           
  6463                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6464  00166C  EF44  F00B         	goto	l2477
  6465  001670                     l2473:
  6466                           
  6467                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  6468  001670  0E00               	movlw	0
  6469  001672  6E02               	movwf	(fputc@c+1)^0,c
  6470  001674  0E20               	movlw	32
  6471  001676  6E01               	movwf	fputc@c^0,c
  6472  001678  C011  F003         	movff	pad@fp,fputc@fp
  6473  00167C  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6474  001680  ECE3  F009         	call	_fputc	;wreg free
  6475  001684                     
  6476                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  6477  001684  4A18               	infsnz	pad@i^0,f,c
  6478  001686  2A19               	incf	(pad@i+1)^0,f,c
  6479  001688                     l2477:
  6480                           
  6481                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6482  001688  501A               	movf	pad@w^0,w,c
  6483  00168A  5C18               	subwf	pad@i^0,w,c
  6484  00168C  5019               	movf	(pad@i+1)^0,w,c
  6485  00168E  0A80               	xorlw	128
  6486  001690  6E17               	movwf	??_pad^0,c
  6487  001692  501B               	movf	(pad@w+1)^0,w,c
  6488  001694  0A80               	xorlw	128
  6489  001696  5817               	subwfb	??_pad^0,w,c
  6490  001698  A0D8               	btfss	status,0,c
  6491  00169A  EF51  F00B         	goto	u1501
  6492  00169E  EF53  F00B         	goto	u1500
  6493  0016A2                     u1501:
  6494  0016A2  EF38  F00B         	goto	l2473
  6495  0016A6                     u1500:
  6496  0016A6                     
  6497                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  6498  0016A6  0100               	movlb	0	; () banked
  6499  0016A8  B17E               	btfsc	_flags& (0+255),0,b
  6500  0016AA  EF59  F00B         	goto	u1511
  6501  0016AE  EF5B  F00B         	goto	u1510
  6502  0016B2                     u1511:
  6503  0016B2  EF65  F00B         	goto	l2481
  6504  0016B6                     u1510:
  6505  0016B6                     
  6506                           ; BSR set to: 0
  6507                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6508  0016B6  C013  F00A         	movff	pad@buf,fputs@s
  6509  0016BA  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6510  0016BE  C011  F00C         	movff	pad@fp,fputs@fp
  6511  0016C2  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6512  0016C6  ECDF  F00F         	call	_fputs	;wreg free
  6513  0016CA                     l2481:
  6514                           
  6515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6516  0016CA  C013  F001         	movff	pad@buf,strlen@s
  6517  0016CE  C014  F002         	movff	pad@buf+1,strlen@s+1
  6518  0016D2  EC5F  F010         	call	_strlen	;wreg free
  6519  0016D6  501A               	movf	pad@w^0,w,c
  6520  0016D8  2401               	addwf	?_strlen^0,w,c
  6521  0016DA  6E11               	movwf	?_pad^0,c
  6522  0016DC  501B               	movf	(pad@w+1)^0,w,c
  6523  0016DE  2002               	addwfc	(?_strlen+1)^0,w,c
  6524  0016E0  6E12               	movwf	(?_pad+1)^0,c
  6525  0016E2  0012               	return		;funcret
  6526  0016E4                     __end_of_pad:
  6527                           	opt callstack 0
  6528                           
  6529 ;; *************** function _strlen *****************
  6530 ;; Defined at:
  6531 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  6532 ;; Parameters:    Size  Location     Type
  6533 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6534 ;;		 -> dbuf(32), 
  6535 ;; Auto vars:     Size  Location     Type
  6536 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6537 ;;		 -> dbuf(32), 
  6538 ;; Return value:  Size  Location     Type
  6539 ;;                  2    0[COMRAM] unsigned int 
  6540 ;; Registers used:
  6541 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6542 ;; Tracked objects:
  6543 ;;		On entry : 0/0
  6544 ;;		On exit  : 0/0
  6545 ;;		Unchanged: 0/0
  6546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6547 ;;      Params:         2       0       0       0       0       0       0       0       0
  6548 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6549 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6550 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6551 ;;Total ram usage:        4 bytes
  6552 ;; Hardware stack levels used:    1
  6553 ;; Hardware stack levels required when called:    1
  6554 ;; This function calls:
  6555 ;;		Nothing
  6556 ;; This function is called by:
  6557 ;;		_pad
  6558 ;; This function uses a non-reentrant model
  6559 ;;
  6560                           
  6561                           	psect	text32
  6562  0020BE                     __ptext32:
  6563                           	opt callstack 0
  6564  0020BE                     _strlen:
  6565                           	opt callstack 22
  6566  0020BE  C001  F003         	movff	strlen@s,strlen@a
  6567  0020C2  C002  F004         	movff	strlen@s+1,strlen@a+1
  6568  0020C6  EF67  F010         	goto	l2457
  6569  0020CA                     l2455:
  6570  0020CA  4A01               	infsnz	strlen@s^0,f,c
  6571  0020CC  2A02               	incf	(strlen@s+1)^0,f,c
  6572  0020CE                     l2457:
  6573  0020CE  C001  FFD9         	movff	strlen@s,fsr2l
  6574  0020D2  C002  FFDA         	movff	strlen@s+1,fsr2h
  6575  0020D6  50DF               	movf	indf2,w,c
  6576  0020D8  A4D8               	btfss	status,2,c
  6577  0020DA  EF71  F010         	goto	u1471
  6578  0020DE  EF73  F010         	goto	u1470
  6579  0020E2                     u1471:
  6580  0020E2  EF65  F010         	goto	l2455
  6581  0020E6                     u1470:
  6582  0020E6  5003               	movf	strlen@a^0,w,c
  6583  0020E8  5C01               	subwf	strlen@s^0,w,c
  6584  0020EA  6E01               	movwf	?_strlen^0,c
  6585  0020EC  5004               	movf	(strlen@a+1)^0,w,c
  6586  0020EE  5802               	subwfb	(strlen@s+1)^0,w,c
  6587  0020F0  6E02               	movwf	(?_strlen+1)^0,c
  6588  0020F2  0012               	return		;funcret
  6589  0020F4                     __end_of_strlen:
  6590                           	opt callstack 0
  6591                           
  6592 ;; *************** function _fputs *****************
  6593 ;; Defined at:
  6594 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  6595 ;; Parameters:    Size  Location     Type
  6596 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6597 ;;		 -> dbuf(32), 
  6598 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6599 ;;		 -> sprintf@f(6), 
  6600 ;; Auto vars:     Size  Location     Type
  6601 ;;  i               2   14[COMRAM] int 
  6602 ;;  c               1   13[COMRAM] unsigned char 
  6603 ;; Return value:  Size  Location     Type
  6604 ;;                  2    9[COMRAM] int 
  6605 ;; Registers used:
  6606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6607 ;; Tracked objects:
  6608 ;;		On entry : 0/0
  6609 ;;		On exit  : 0/0
  6610 ;;		Unchanged: 0/0
  6611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6612 ;;      Params:         4       0       0       0       0       0       0       0       0
  6613 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6614 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6615 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6616 ;;Total ram usage:        7 bytes
  6617 ;; Hardware stack levels used:    1
  6618 ;; Hardware stack levels required when called:    3
  6619 ;; This function calls:
  6620 ;;		_fputc
  6621 ;; This function is called by:
  6622 ;;		_pad
  6623 ;; This function uses a non-reentrant model
  6624 ;;
  6625                           
  6626                           	psect	text33
  6627  001FBE                     __ptext33:
  6628                           	opt callstack 0
  6629  001FBE                     _fputs:
  6630                           	opt callstack 20
  6631  001FBE  0E00               	movlw	0
  6632  001FC0  6E10               	movwf	(fputs@i+1)^0,c
  6633  001FC2  0E00               	movlw	0
  6634  001FC4  6E0F               	movwf	fputs@i^0,c
  6635  001FC6  EFF0  F00F         	goto	l2451
  6636  001FCA                     l2447:
  6637  001FCA  C00E  F001         	movff	fputs@c,fputc@c
  6638  001FCE  6A02               	clrf	(fputc@c+1)^0,c
  6639  001FD0  C00C  F003         	movff	fputs@fp,fputc@fp
  6640  001FD4  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6641  001FD8  ECE3  F009         	call	_fputc	;wreg free
  6642  001FDC  4A0F               	infsnz	fputs@i^0,f,c
  6643  001FDE  2A10               	incf	(fputs@i+1)^0,f,c
  6644  001FE0                     l2451:
  6645  001FE0  500F               	movf	fputs@i^0,w,c
  6646  001FE2  240A               	addwf	fputs@s^0,w,c
  6647  001FE4  6ED9               	movwf	fsr2l,c
  6648  001FE6  5010               	movf	(fputs@i+1)^0,w,c
  6649  001FE8  200B               	addwfc	(fputs@s+1)^0,w,c
  6650  001FEA  6EDA               	movwf	fsr2h,c
  6651  001FEC  50DF               	movf	indf2,w,c
  6652  001FEE  6E0E               	movwf	fputs@c^0,c
  6653  001FF0  500E               	movf	fputs@c^0,w,c
  6654  001FF2  A4D8               	btfss	status,2,c
  6655  001FF4  EFFE  F00F         	goto	u1461
  6656  001FF8  EF00  F010         	goto	u1460
  6657  001FFC                     u1461:
  6658  001FFC  EFE5  F00F         	goto	l2447
  6659  002000                     u1460:
  6660  002000  0012               	return		;funcret
  6661  002002                     __end_of_fputs:
  6662                           	opt callstack 0
  6663                           
  6664 ;; *************** function _fputc *****************
  6665 ;; Defined at:
  6666 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  6667 ;; Parameters:    Size  Location     Type
  6668 ;;  c               2    0[COMRAM] int 
  6669 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6670 ;;		 -> sprintf@f(6), 
  6671 ;; Auto vars:     Size  Location     Type
  6672 ;;		None
  6673 ;; Return value:  Size  Location     Type
  6674 ;;                  2    0[COMRAM] int 
  6675 ;; Registers used:
  6676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6677 ;; Tracked objects:
  6678 ;;		On entry : 0/0
  6679 ;;		On exit  : 0/0
  6680 ;;		Unchanged: 0/0
  6681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6682 ;;      Params:         4       0       0       0       0       0       0       0       0
  6683 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6684 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6685 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6686 ;;Total ram usage:        9 bytes
  6687 ;; Hardware stack levels used:    1
  6688 ;; Hardware stack levels required when called:    2
  6689 ;; This function calls:
  6690 ;;		_putch
  6691 ;; This function is called by:
  6692 ;;		_pad
  6693 ;;		_vfpfcnvrt
  6694 ;;		_fputs
  6695 ;; This function uses a non-reentrant model
  6696 ;;
  6697                           
  6698                           	psect	text34
  6699  0013C6                     __ptext34:
  6700                           	opt callstack 0
  6701  0013C6                     _fputc:
  6702                           	opt callstack 23
  6703  0013C6  5003               	movf	fputc@fp^0,w,c
  6704  0013C8  1004               	iorwf	(fputc@fp+1)^0,w,c
  6705  0013CA  B4D8               	btfsc	status,2,c
  6706  0013CC  EFEA  F009         	goto	u1421
  6707  0013D0  EFEC  F009         	goto	u1420
  6708  0013D4                     u1421:
  6709  0013D4  EFF5  F009         	goto	l2435
  6710  0013D8                     u1420:
  6711  0013D8  5003               	movf	fputc@fp^0,w,c
  6712  0013DA  1004               	iorwf	(fputc@fp+1)^0,w,c
  6713  0013DC  A4D8               	btfss	status,2,c
  6714  0013DE  EFF3  F009         	goto	u1431
  6715  0013E2  EFF5  F009         	goto	u1430
  6716  0013E6                     u1431:
  6717  0013E6  EFFA  F009         	goto	l2437
  6718  0013EA                     u1430:
  6719  0013EA                     l2435:
  6720  0013EA  5001               	movf	fputc@c^0,w,c
  6721  0013EC  EC6A  F011         	call	_putch
  6722  0013F0  EF47  F00A         	goto	l1157
  6723  0013F4                     l2437:
  6724  0013F4  EE20 F004          	lfsr	2,4
  6725  0013F8  5003               	movf	fputc@fp^0,w,c
  6726  0013FA  26D9               	addwf	fsr2l,f,c
  6727  0013FC  5004               	movf	(fputc@fp+1)^0,w,c
  6728  0013FE  22DA               	addwfc	fsr2h,f,c
  6729  001400  50DE               	movf	postinc2,w,c
  6730  001402  10DE               	iorwf	postinc2,w,c
  6731  001404  B4D8               	btfsc	status,2,c
  6732  001406  EF07  F00A         	goto	u1441
  6733  00140A  EF09  F00A         	goto	u1440
  6734  00140E                     u1441:
  6735  00140E  EF24  F00A         	goto	l2441
  6736  001412                     u1440:
  6737  001412  EE20 F004          	lfsr	2,4
  6738  001416  5003               	movf	fputc@fp^0,w,c
  6739  001418  26D9               	addwf	fsr2l,f,c
  6740  00141A  5004               	movf	(fputc@fp+1)^0,w,c
  6741  00141C  22DA               	addwfc	fsr2h,f,c
  6742  00141E  EE10 F002          	lfsr	1,2
  6743  001422  5003               	movf	fputc@fp^0,w,c
  6744  001424  26E1               	addwf	fsr1l,f,c
  6745  001426  5004               	movf	(fputc@fp+1)^0,w,c
  6746  001428  22E2               	addwfc	fsr1h,f,c
  6747  00142A  50DE               	movf	postinc2,w,c
  6748  00142C  5CE6               	subwf	postinc1,w,c
  6749  00142E  50E6               	movf	postinc1,w,c
  6750  001430  0A80               	xorlw	128
  6751  001432  6E09               	movwf	(??_fputc+4)^0,c
  6752  001434  50DE               	movf	postinc2,w,c
  6753  001436  0A80               	xorlw	128
  6754  001438  5809               	subwfb	(??_fputc+4)^0,w,c
  6755  00143A  B0D8               	btfsc	status,0,c
  6756  00143C  EF22  F00A         	goto	u1451
  6757  001440  EF24  F00A         	goto	u1450
  6758  001444                     u1451:
  6759  001444  EF47  F00A         	goto	l1157
  6760  001448                     u1450:
  6761  001448                     l2441:
  6762  001448  EE20 F002          	lfsr	2,2
  6763  00144C  5003               	movf	fputc@fp^0,w,c
  6764  00144E  26D9               	addwf	fsr2l,f,c
  6765  001450  5004               	movf	(fputc@fp+1)^0,w,c
  6766  001452  22DA               	addwfc	fsr2h,f,c
  6767  001454  CFDE F005          	movff	postinc2,??_fputc
  6768  001458  CFDD F006          	movff	postdec2,??_fputc+1
  6769  00145C  C003  FFD9         	movff	fputc@fp,fsr2l
  6770  001460  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6771  001464  CFDE F007          	movff	postinc2,??_fputc+2
  6772  001468  CFDD F008          	movff	postdec2,??_fputc+3
  6773  00146C  5005               	movf	??_fputc^0,w,c
  6774  00146E  2407               	addwf	(??_fputc+2)^0,w,c
  6775  001470  6ED9               	movwf	fsr2l,c
  6776  001472  5006               	movf	(??_fputc+1)^0,w,c
  6777  001474  2008               	addwfc	(??_fputc+3)^0,w,c
  6778  001476  6EDA               	movwf	fsr2h,c
  6779  001478  C001  FFDF         	movff	fputc@c,indf2
  6780  00147C  EE20 F002          	lfsr	2,2
  6781  001480  5003               	movf	fputc@fp^0,w,c
  6782  001482  26D9               	addwf	fsr2l,f,c
  6783  001484  5004               	movf	(fputc@fp+1)^0,w,c
  6784  001486  22DA               	addwfc	fsr2h,f,c
  6785  001488  2ADE               	incf	postinc2,f,c
  6786  00148A  0E00               	movlw	0
  6787  00148C  22DD               	addwfc	postdec2,f,c
  6788  00148E                     l1157:
  6789  00148E  0012               	return		;funcret
  6790  001490                     __end_of_fputc:
  6791                           	opt callstack 0
  6792                           
  6793 ;; *************** function _putch *****************
  6794 ;; Defined at:
  6795 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  6796 ;; Parameters:    Size  Location     Type
  6797 ;;  c               1    wreg     unsigned char 
  6798 ;; Auto vars:     Size  Location     Type
  6799 ;;  c               1    0[COMRAM] unsigned char 
  6800 ;; Return value:  Size  Location     Type
  6801 ;;                  1    wreg      void 
  6802 ;; Registers used:
  6803 ;;		wreg
  6804 ;; Tracked objects:
  6805 ;;		On entry : 0/0
  6806 ;;		On exit  : 0/0
  6807 ;;		Unchanged: 0/0
  6808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6809 ;;      Params:         0       0       0       0       0       0       0       0       0
  6810 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6811 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6812 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6813 ;;Total ram usage:        0 bytes
  6814 ;; Hardware stack levels used:    1
  6815 ;; Hardware stack levels required when called:    1
  6816 ;; This function calls:
  6817 ;;		Nothing
  6818 ;; This function is called by:
  6819 ;;		_fputc
  6820 ;; This function uses a non-reentrant model
  6821 ;;
  6822                           
  6823                           	psect	text35
  6824  0022D4                     __ptext35:
  6825                           	opt callstack 0
  6826  0022D4                     _putch:
  6827                           	opt callstack 23
  6828  0022D4  0012               	return		;funcret
  6829  0022D6                     __end_of_putch:
  6830                           	opt callstack 0
  6831                           
  6832 ;; *************** function _abs *****************
  6833 ;; Defined at:
  6834 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  6835 ;; Parameters:    Size  Location     Type
  6836 ;;  a               2   18[COMRAM] int 
  6837 ;; Auto vars:     Size  Location     Type
  6838 ;;		None
  6839 ;; Return value:  Size  Location     Type
  6840 ;;                  2   18[COMRAM] int 
  6841 ;; Registers used:
  6842 ;;		wreg, status,2, status,0
  6843 ;; Tracked objects:
  6844 ;;		On entry : 0/0
  6845 ;;		On exit  : 0/0
  6846 ;;		Unchanged: 0/0
  6847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6848 ;;      Params:         2       0       0       0       0       0       0       0       0
  6849 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6850 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6851 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6852 ;;Total ram usage:        4 bytes
  6853 ;; Hardware stack levels used:    1
  6854 ;; Hardware stack levels required when called:    1
  6855 ;; This function calls:
  6856 ;;		Nothing
  6857 ;; This function is called by:
  6858 ;;		_dtoa
  6859 ;; This function uses a non-reentrant model
  6860 ;;
  6861                           
  6862                           	psect	text36
  6863  002042                     __ptext36:
  6864                           	opt callstack 0
  6865  002042                     _abs:
  6866                           	opt callstack 23
  6867  002042  BE14               	btfsc	(abs@a+1)^0,7,c
  6868  002044  EF2E  F010         	goto	u1520
  6869  002048  5014               	movf	(abs@a+1)^0,w,c
  6870  00204A  E106               	bnz	u1521
  6871  00204C  0413               	decf	abs@a^0,w,c
  6872  00204E  B0D8               	btfsc	status,0,c
  6873  002050  EF2C  F010         	goto	u1521
  6874  002054  EF2E  F010         	goto	u1520
  6875  002058                     u1521:
  6876  002058  EF3C  F010         	goto	l1142
  6877  00205C                     u1520:
  6878  00205C  C013  F015         	movff	abs@a,??_abs
  6879  002060  C014  F016         	movff	abs@a+1,??_abs+1
  6880  002064  1E15               	comf	??_abs^0,f,c
  6881  002066  1E16               	comf	(??_abs+1)^0,f,c
  6882  002068  4A15               	infsnz	??_abs^0,f,c
  6883  00206A  2A16               	incf	(??_abs+1)^0,f,c
  6884  00206C  C015  F013         	movff	??_abs,?_abs
  6885  002070  C016  F014         	movff	??_abs+1,?_abs+1
  6886  002074  EF40  F010         	goto	l1145
  6887  002078                     l1142:
  6888  002078  C013  F013         	movff	abs@a,?_abs
  6889  00207C  C014  F014         	movff	abs@a+1,?_abs+1
  6890  002080                     l1145:
  6891  002080  0012               	return		;funcret
  6892  002082                     __end_of_abs:
  6893                           	opt callstack 0
  6894                           
  6895 ;; *************** function ___aomod *****************
  6896 ;; Defined at:
  6897 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  6898 ;; Parameters:    Size  Location     Type
  6899 ;;  dividend        8    0[COMRAM] long long 
  6900 ;;  divisor         8    8[COMRAM] long long 
  6901 ;; Auto vars:     Size  Location     Type
  6902 ;;  sign            1   17[COMRAM] unsigned char 
  6903 ;;  counter         1   16[COMRAM] unsigned char 
  6904 ;; Return value:  Size  Location     Type
  6905 ;;                  8    0[COMRAM] long long 
  6906 ;; Registers used:
  6907 ;;		wreg, status,2, status,0
  6908 ;; Tracked objects:
  6909 ;;		On entry : 0/0
  6910 ;;		On exit  : 0/0
  6911 ;;		Unchanged: 0/0
  6912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6913 ;;      Params:        16       0       0       0       0       0       0       0       0
  6914 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6915 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6916 ;;      Totals:        18       0       0       0       0       0       0       0       0
  6917 ;;Total ram usage:       18 bytes
  6918 ;; Hardware stack levels used:    1
  6919 ;; Hardware stack levels required when called:    1
  6920 ;; This function calls:
  6921 ;;		Nothing
  6922 ;; This function is called by:
  6923 ;;		_dtoa
  6924 ;; This function uses a non-reentrant model
  6925 ;;
  6926                           
  6927                           	psect	text37
  6928  000AE0                     __ptext37:
  6929                           	opt callstack 0
  6930  000AE0                     ___aomod:
  6931                           	opt callstack 23
  6932  000AE0  0E00               	movlw	0
  6933  000AE2  6E12               	movwf	___aomod@sign^0,c
  6934  000AE4  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6935  000AE6  EF79  F005         	goto	u1600
  6936  000AEA  EF77  F005         	goto	u1601
  6937  000AEE                     u1601:
  6938  000AEE  EF8B  F005         	goto	l2541
  6939  000AF2                     u1600:
  6940  000AF2  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6941  000AF4  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6942  000AF6  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6943  000AF8  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6944  000AFA  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6945  000AFC  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6946  000AFE  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6947  000B00  6C01               	negf	___aomod@dividend^0,c
  6948  000B02  0E00               	movlw	0
  6949  000B04  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6950  000B06  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6951  000B08  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6952  000B0A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6953  000B0C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6954  000B0E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6955  000B10  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6956  000B12  0E01               	movlw	1
  6957  000B14  6E12               	movwf	___aomod@sign^0,c
  6958  000B16                     l2541:
  6959  000B16  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6960  000B18  EF92  F005         	goto	u1610
  6961  000B1C  EF90  F005         	goto	u1611
  6962  000B20                     u1611:
  6963  000B20  EFA2  F005         	goto	l2545
  6964  000B24                     u1610:
  6965  000B24  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6966  000B26  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6967  000B28  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6968  000B2A  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6969  000B2C  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6970  000B2E  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6971  000B30  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6972  000B32  6C09               	negf	___aomod@divisor^0,c
  6973  000B34  0E00               	movlw	0
  6974  000B36  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6975  000B38  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6976  000B3A  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6977  000B3C  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6978  000B3E  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6979  000B40  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6980  000B42  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6981  000B44                     l2545:
  6982  000B44  5009               	movf	___aomod@divisor^0,w,c
  6983  000B46  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6984  000B48  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6985  000B4A  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6986  000B4C  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6987  000B4E  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6988  000B50  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6989  000B52  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6990  000B54  B4D8               	btfsc	status,2,c
  6991  000B56  EFAF  F005         	goto	u1621
  6992  000B5A  EFB1  F005         	goto	u1620
  6993  000B5E                     u1621:
  6994  000B5E  EFF9  F005         	goto	l2561
  6995  000B62                     u1620:
  6996  000B62  0E01               	movlw	1
  6997  000B64  6E11               	movwf	___aomod@counter^0,c
  6998  000B66  EFBF  F005         	goto	l2551
  6999  000B6A                     l2549:
  7000  000B6A  90D8               	bcf	status,0,c
  7001  000B6C  3609               	rlcf	___aomod@divisor^0,f,c
  7002  000B6E  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  7003  000B70  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  7004  000B72  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  7005  000B74  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  7006  000B76  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  7007  000B78  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  7008  000B7A  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  7009  000B7C  2A11               	incf	___aomod@counter^0,f,c
  7010  000B7E                     l2551:
  7011  000B7E  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  7012  000B80  EFC4  F005         	goto	u1631
  7013  000B84  EFC6  F005         	goto	u1630
  7014  000B88                     u1631:
  7015  000B88  EFB5  F005         	goto	l2549
  7016  000B8C                     u1630:
  7017  000B8C                     l2553:
  7018  000B8C  5009               	movf	___aomod@divisor^0,w,c
  7019  000B8E  5C01               	subwf	___aomod@dividend^0,w,c
  7020  000B90  500A               	movf	(___aomod@divisor+1)^0,w,c
  7021  000B92  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  7022  000B94  500B               	movf	(___aomod@divisor+2)^0,w,c
  7023  000B96  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  7024  000B98  500C               	movf	(___aomod@divisor+3)^0,w,c
  7025  000B9A  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  7026  000B9C  500D               	movf	(___aomod@divisor+4)^0,w,c
  7027  000B9E  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  7028  000BA0  500E               	movf	(___aomod@divisor+5)^0,w,c
  7029  000BA2  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  7030  000BA4  500F               	movf	(___aomod@divisor+6)^0,w,c
  7031  000BA6  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  7032  000BA8  5010               	movf	(___aomod@divisor+7)^0,w,c
  7033  000BAA  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  7034  000BAC  A0D8               	btfss	status,0,c
  7035  000BAE  EFDB  F005         	goto	u1641
  7036  000BB2  EFDD  F005         	goto	u1640
  7037  000BB6                     u1641:
  7038  000BB6  EFED  F005         	goto	l2557
  7039  000BBA                     u1640:
  7040  000BBA  5009               	movf	___aomod@divisor^0,w,c
  7041  000BBC  5E01               	subwf	___aomod@dividend^0,f,c
  7042  000BBE  500A               	movf	(___aomod@divisor+1)^0,w,c
  7043  000BC0  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  7044  000BC2  500B               	movf	(___aomod@divisor+2)^0,w,c
  7045  000BC4  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  7046  000BC6  500C               	movf	(___aomod@divisor+3)^0,w,c
  7047  000BC8  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  7048  000BCA  500D               	movf	(___aomod@divisor+4)^0,w,c
  7049  000BCC  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  7050  000BCE  500E               	movf	(___aomod@divisor+5)^0,w,c
  7051  000BD0  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  7052  000BD2  500F               	movf	(___aomod@divisor+6)^0,w,c
  7053  000BD4  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  7054  000BD6  5010               	movf	(___aomod@divisor+7)^0,w,c
  7055  000BD8  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  7056  000BDA                     l2557:
  7057  000BDA  90D8               	bcf	status,0,c
  7058  000BDC  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  7059  000BDE  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  7060  000BE0  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  7061  000BE2  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  7062  000BE4  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  7063  000BE6  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  7064  000BE8  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  7065  000BEA  3209               	rrcf	___aomod@divisor^0,f,c
  7066  000BEC  2E11               	decfsz	___aomod@counter^0,f,c
  7067  000BEE  EFC6  F005         	goto	l2553
  7068  000BF2                     l2561:
  7069  000BF2  5012               	movf	___aomod@sign^0,w,c
  7070  000BF4  B4D8               	btfsc	status,2,c
  7071  000BF6  EFFF  F005         	goto	u1651
  7072  000BFA  EF01  F006         	goto	u1650
  7073  000BFE                     u1651:
  7074  000BFE  EF11  F006         	goto	l2565
  7075  000C02                     u1650:
  7076  000C02  1E08               	comf	(___aomod@dividend+7)^0,f,c
  7077  000C04  1E07               	comf	(___aomod@dividend+6)^0,f,c
  7078  000C06  1E06               	comf	(___aomod@dividend+5)^0,f,c
  7079  000C08  1E05               	comf	(___aomod@dividend+4)^0,f,c
  7080  000C0A  1E04               	comf	(___aomod@dividend+3)^0,f,c
  7081  000C0C  1E03               	comf	(___aomod@dividend+2)^0,f,c
  7082  000C0E  1E02               	comf	(___aomod@dividend+1)^0,f,c
  7083  000C10  6C01               	negf	___aomod@dividend^0,c
  7084  000C12  0E00               	movlw	0
  7085  000C14  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  7086  000C16  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  7087  000C18  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  7088  000C1A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  7089  000C1C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  7090  000C1E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  7091  000C20  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  7092  000C22                     l2565:
  7093  000C22  C001  F001         	movff	___aomod@dividend,?___aomod
  7094  000C26  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  7095  000C2A  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  7096  000C2E  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  7097  000C32  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  7098  000C36  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  7099  000C3A  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  7100  000C3E  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  7101  000C42  0012               	return		;funcret
  7102  000C44                     __end_of___aomod:
  7103                           	opt callstack 0
  7104                           
  7105 ;; *************** function ___aodiv *****************
  7106 ;; Defined at:
  7107 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  7108 ;; Parameters:    Size  Location     Type
  7109 ;;  dividend        8    0[COMRAM] long long 
  7110 ;;  divisor         8    8[COMRAM] long long 
  7111 ;; Auto vars:     Size  Location     Type
  7112 ;;  quotient        8   18[COMRAM] long long 
  7113 ;;  sign            1   17[COMRAM] unsigned char 
  7114 ;;  counter         1   16[COMRAM] unsigned char 
  7115 ;; Return value:  Size  Location     Type
  7116 ;;                  8    0[COMRAM] long long 
  7117 ;; Registers used:
  7118 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7119 ;; Tracked objects:
  7120 ;;		On entry : 0/0
  7121 ;;		On exit  : 0/0
  7122 ;;		Unchanged: 0/0
  7123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7124 ;;      Params:        16       0       0       0       0       0       0       0       0
  7125 ;;      Locals:        10       0       0       0       0       0       0       0       0
  7126 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7127 ;;      Totals:        26       0       0       0       0       0       0       0       0
  7128 ;;Total ram usage:       26 bytes
  7129 ;; Hardware stack levels used:    1
  7130 ;; Hardware stack levels required when called:    1
  7131 ;; This function calls:
  7132 ;;		Nothing
  7133 ;; This function is called by:
  7134 ;;		_dtoa
  7135 ;; This function uses a non-reentrant model
  7136 ;;
  7137                           
  7138                           	psect	text38
  7139  000958                     __ptext38:
  7140                           	opt callstack 0
  7141  000958                     ___aodiv:
  7142                           	opt callstack 23
  7143  000958  0E00               	movlw	0
  7144  00095A  6E12               	movwf	___aodiv@sign^0,c
  7145  00095C  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  7146  00095E  EFB5  F004         	goto	u1530
  7147  000962  EFB3  F004         	goto	u1531
  7148  000966                     u1531:
  7149  000966  EFC7  F004         	goto	l2497
  7150  00096A                     u1530:
  7151  00096A  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  7152  00096C  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  7153  00096E  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  7154  000970  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  7155  000972  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  7156  000974  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  7157  000976  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  7158  000978  6C09               	negf	___aodiv@divisor^0,c
  7159  00097A  0E00               	movlw	0
  7160  00097C  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  7161  00097E  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  7162  000980  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  7163  000982  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  7164  000984  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  7165  000986  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  7166  000988  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  7167  00098A  0E01               	movlw	1
  7168  00098C  6E12               	movwf	___aodiv@sign^0,c
  7169  00098E                     l2497:
  7170  00098E  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  7171  000990  EFCE  F004         	goto	u1540
  7172  000994  EFCC  F004         	goto	u1541
  7173  000998                     u1541:
  7174  000998  EFE0  F004         	goto	l2503
  7175  00099C                     u1540:
  7176  00099C  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  7177  00099E  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  7178  0009A0  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  7179  0009A2  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  7180  0009A4  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  7181  0009A6  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  7182  0009A8  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  7183  0009AA  6C01               	negf	___aodiv@dividend^0,c
  7184  0009AC  0E00               	movlw	0
  7185  0009AE  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  7186  0009B0  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  7187  0009B2  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  7188  0009B4  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  7189  0009B6  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  7190  0009B8  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  7191  0009BA  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  7192  0009BC  0E01               	movlw	1
  7193  0009BE  1A12               	xorwf	___aodiv@sign^0,f,c
  7194  0009C0                     l2503:
  7195  0009C0  EE20  F013         	lfsr	2,___aodiv@quotient
  7196  0009C4  0E07               	movlw	7
  7197  0009C6                     u1551:
  7198  0009C6  6ADE               	clrf	postinc2,c
  7199  0009C8  06E8               	decf	wreg,f,c
  7200  0009CA  E2FD               	bc	u1551
  7201  0009CC  5009               	movf	___aodiv@divisor^0,w,c
  7202  0009CE  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  7203  0009D0  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  7204  0009D2  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  7205  0009D4  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  7206  0009D6  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  7207  0009D8  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  7208  0009DA  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  7209  0009DC  B4D8               	btfsc	status,2,c
  7210  0009DE  EFF3  F004         	goto	u1561
  7211  0009E2  EFF5  F004         	goto	u1560
  7212  0009E6                     u1561:
  7213  0009E6  EF47  F005         	goto	l2525
  7214  0009EA                     u1560:
  7215  0009EA  0E01               	movlw	1
  7216  0009EC  6E11               	movwf	___aodiv@counter^0,c
  7217  0009EE  EF03  F005         	goto	l2511
  7218  0009F2                     l2509:
  7219  0009F2  90D8               	bcf	status,0,c
  7220  0009F4  3609               	rlcf	___aodiv@divisor^0,f,c
  7221  0009F6  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  7222  0009F8  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  7223  0009FA  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  7224  0009FC  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  7225  0009FE  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  7226  000A00  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  7227  000A02  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  7228  000A04  2A11               	incf	___aodiv@counter^0,f,c
  7229  000A06                     l2511:
  7230  000A06  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  7231  000A08  EF08  F005         	goto	u1571
  7232  000A0C  EF0A  F005         	goto	u1570
  7233  000A10                     u1571:
  7234  000A10  EFF9  F004         	goto	l2509
  7235  000A14                     u1570:
  7236  000A14                     l2513:
  7237  000A14  90D8               	bcf	status,0,c
  7238  000A16  3613               	rlcf	___aodiv@quotient^0,f,c
  7239  000A18  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  7240  000A1A  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  7241  000A1C  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  7242  000A1E  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  7243  000A20  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  7244  000A22  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  7245  000A24  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  7246  000A26  5009               	movf	___aodiv@divisor^0,w,c
  7247  000A28  5C01               	subwf	___aodiv@dividend^0,w,c
  7248  000A2A  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7249  000A2C  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  7250  000A2E  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7251  000A30  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  7252  000A32  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7253  000A34  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  7254  000A36  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7255  000A38  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  7256  000A3A  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7257  000A3C  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  7258  000A3E  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7259  000A40  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  7260  000A42  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7261  000A44  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  7262  000A46  A0D8               	btfss	status,0,c
  7263  000A48  EF28  F005         	goto	u1581
  7264  000A4C  EF2A  F005         	goto	u1580
  7265  000A50                     u1581:
  7266  000A50  EF3B  F005         	goto	l2521
  7267  000A54                     u1580:
  7268  000A54  5009               	movf	___aodiv@divisor^0,w,c
  7269  000A56  5E01               	subwf	___aodiv@dividend^0,f,c
  7270  000A58  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7271  000A5A  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  7272  000A5C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7273  000A5E  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  7274  000A60  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7275  000A62  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  7276  000A64  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7277  000A66  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  7278  000A68  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7279  000A6A  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  7280  000A6C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7281  000A6E  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  7282  000A70  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7283  000A72  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  7284  000A74  8013               	bsf	___aodiv@quotient^0,0,c
  7285  000A76                     l2521:
  7286  000A76  90D8               	bcf	status,0,c
  7287  000A78  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  7288  000A7A  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  7289  000A7C  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  7290  000A7E  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  7291  000A80  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  7292  000A82  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  7293  000A84  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  7294  000A86  3209               	rrcf	___aodiv@divisor^0,f,c
  7295  000A88  2E11               	decfsz	___aodiv@counter^0,f,c
  7296  000A8A  EF0A  F005         	goto	l2513
  7297  000A8E                     l2525:
  7298  000A8E  5012               	movf	___aodiv@sign^0,w,c
  7299  000A90  B4D8               	btfsc	status,2,c
  7300  000A92  EF4D  F005         	goto	u1591
  7301  000A96  EF4F  F005         	goto	u1590
  7302  000A9A                     u1591:
  7303  000A9A  EF5F  F005         	goto	l2529
  7304  000A9E                     u1590:
  7305  000A9E  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  7306  000AA0  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  7307  000AA2  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  7308  000AA4  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  7309  000AA6  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  7310  000AA8  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  7311  000AAA  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  7312  000AAC  6C13               	negf	___aodiv@quotient^0,c
  7313  000AAE  0E00               	movlw	0
  7314  000AB0  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  7315  000AB2  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  7316  000AB4  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  7317  000AB6  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  7318  000AB8  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  7319  000ABA  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  7320  000ABC  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  7321  000ABE                     l2529:
  7322  000ABE  C013  F001         	movff	___aodiv@quotient,?___aodiv
  7323  000AC2  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  7324  000AC6  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  7325  000ACA  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  7326  000ACE  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  7327  000AD2  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  7328  000AD6  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  7329  000ADA  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  7330  000ADE  0012               	return		;funcret
  7331  000AE0                     __end_of___aodiv:
  7332                           	opt callstack 0
  7333                           
  7334 ;; *************** function _asignarHorarios *****************
  7335 ;; Defined at:
  7336 ;;		line 340 in file "main.c"
  7337 ;; Parameters:    Size  Location     Type
  7338 ;;		None
  7339 ;; Auto vars:     Size  Location     Type
  7340 ;;  i               2   16[COMRAM] int 
  7341 ;;  Rx              1   18[COMRAM] unsigned char 
  7342 ;;  datoCapturad    1   15[COMRAM] unsigned char 
  7343 ;;  hora            1   14[COMRAM] unsigned char 
  7344 ;; Return value:  Size  Location     Type
  7345 ;;                  1    wreg      void 
  7346 ;; Registers used:
  7347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7348 ;; Tracked objects:
  7349 ;;		On entry : 0/0
  7350 ;;		On exit  : 0/0
  7351 ;;		Unchanged: 0/0
  7352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7353 ;;      Params:         0       0       0       0       0       0       0       0       0
  7354 ;;      Locals:         5       0       0       0       0       0       0       0       0
  7355 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7356 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7357 ;;Total ram usage:        5 bytes
  7358 ;; Hardware stack levels used:    1
  7359 ;; Hardware stack levels required when called:    5
  7360 ;; This function calls:
  7361 ;;		_UART_printf
  7362 ;;		_UART_read
  7363 ;;		_UART_write
  7364 ;;		_escribeHorariosMemoria
  7365 ;; This function is called by:
  7366 ;;		_sistemaPrincipal
  7367 ;; This function uses a non-reentrant model
  7368 ;;
  7369                           
  7370                           	psect	text39
  7371  000D92                     __ptext39:
  7372                           	opt callstack 0
  7373  000D92                     _asignarHorarios:
  7374                           	opt callstack 24
  7375  000D92                     
  7376                           ;main.c: 342:     unsigned char hora;;main.c: 343:     unsigned char Rx;;main.c: 344:   
      +                            char datoCapturado = 0;
  7377  000D92  0E00               	movlw	0
  7378  000D94  6E10               	movwf	asignarHorarios@datoCapturado^0,c
  7379  000D96                     
  7380                           ;main.c: 346:     UART_printf("\r\n OPCIONES DE REGADO \r\n");
  7381  000D96  0E7A               	movlw	low STR_5
  7382  000D98  6E02               	movwf	UART_printf@cadena^0,c
  7383  000D9A  0E7F               	movlw	high STR_5
  7384  000D9C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7385  000D9E  ECC0  F00E         	call	_UART_printf	;wreg free
  7386  000DA2                     
  7387                           ;main.c: 347:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  7388  000DA2  0E4E               	movlw	low STR_6
  7389  000DA4  6E02               	movwf	UART_printf@cadena^0,c
  7390  000DA6  0E7C               	movlw	high STR_6
  7391  000DA8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7392  000DAA  ECC0  F00E         	call	_UART_printf	;wreg free
  7393                           
  7394                           ;main.c: 349:     for (int i = 0; i < 2; i++) {
  7395  000DAE  0E00               	movlw	0
  7396  000DB0  6E12               	movwf	(asignarHorarios@i+1)^0,c
  7397  000DB2  0E00               	movlw	0
  7398  000DB4  6E11               	movwf	asignarHorarios@i^0,c
  7399  000DB6                     l3159:
  7400                           
  7401                           ;main.c: 350:         Rx = UART_read();
  7402  000DB6  EC1D  F00F         	call	_UART_read	;wreg free
  7403  000DBA  6E13               	movwf	asignarHorarios@Rx^0,c
  7404  000DBC                     
  7405                           ;main.c: 351:         if (Rx >= 48 && Rx <= 57) {
  7406  000DBC  0E2F               	movlw	47
  7407  000DBE  6413               	cpfsgt	asignarHorarios@Rx^0,c
  7408  000DC0  EFE4  F006         	goto	u2381
  7409  000DC4  EFE6  F006         	goto	u2380
  7410  000DC8                     u2381:
  7411  000DC8  EF09  F007         	goto	l3179
  7412  000DCC                     u2380:
  7413  000DCC  0E3A               	movlw	58
  7414  000DCE  6013               	cpfslt	asignarHorarios@Rx^0,c
  7415  000DD0  EFEC  F006         	goto	u2391
  7416  000DD4  EFEE  F006         	goto	u2390
  7417  000DD8                     u2391:
  7418  000DD8  EF09  F007         	goto	l3179
  7419  000DDC                     u2390:
  7420  000DDC                     
  7421                           ;main.c: 352:             if (!i) {
  7422  000DDC  5011               	movf	asignarHorarios@i^0,w,c
  7423  000DDE  1012               	iorwf	(asignarHorarios@i+1)^0,w,c
  7424  000DE0  A4D8               	btfss	status,2,c
  7425  000DE2  EFF5  F006         	goto	u2401
  7426  000DE6  EFF7  F006         	goto	u2400
  7427  000DEA                     u2401:
  7428  000DEA  EF01  F007         	goto	l3173
  7429  000DEE                     u2400:
  7430  000DEE                     
  7431                           ;main.c: 353:                 Rx -= 48;
  7432  000DEE  0E30               	movlw	48
  7433  000DF0  5E13               	subwf	asignarHorarios@Rx^0,f,c
  7434  000DF2                     
  7435                           ;main.c: 354:                 hora = Rx;
  7436  000DF2  C013  F00F         	movff	asignarHorarios@Rx,asignarHorarios@hora
  7437  000DF6                     
  7438                           ;main.c: 355:                 hora *= 10;
  7439  000DF6  0E0A               	movlw	10
  7440  000DF8  020F               	mulwf	asignarHorarios@hora^0,c
  7441  000DFA  50F3               	movf	prodl,w,c
  7442  000DFC  6E0F               	movwf	asignarHorarios@hora^0,c
  7443                           
  7444                           ;main.c: 356:             } else {
  7445  000DFE  EF10  F007         	goto	l3183
  7446  000E02                     l3173:
  7447                           
  7448                           ;main.c: 357:                 datoCapturado = 1;
  7449  000E02  0E01               	movlw	1
  7450  000E04  6E10               	movwf	asignarHorarios@datoCapturado^0,c
  7451  000E06                     
  7452                           ;main.c: 358:                 Rx -= 48;
  7453  000E06  0E30               	movlw	48
  7454  000E08  5E13               	subwf	asignarHorarios@Rx^0,f,c
  7455  000E0A                     
  7456                           ;main.c: 359:                 hora += Rx;
  7457  000E0A  5013               	movf	asignarHorarios@Rx^0,w,c
  7458  000E0C  260F               	addwf	asignarHorarios@hora^0,f,c
  7459  000E0E  EF10  F007         	goto	l3183
  7460  000E12                     l3179:
  7461                           
  7462                           ;main.c: 362:             datoCapturado = 0;
  7463  000E12  0E00               	movlw	0
  7464  000E14  6E10               	movwf	asignarHorarios@datoCapturado^0,c
  7465  000E16                     
  7466                           ;main.c: 364:             UART_write('F');
  7467  000E16  0E46               	movlw	70
  7468  000E18  EC35  F011         	call	_UART_write
  7469                           
  7470                           ;main.c: 365:             break;
  7471  000E1C  EF20  F007         	goto	l3187
  7472  000E20                     l3183:
  7473                           
  7474                           ;main.c: 367:     }
  7475  000E20  4A11               	infsnz	asignarHorarios@i^0,f,c
  7476  000E22  2A12               	incf	(asignarHorarios@i+1)^0,f,c
  7477  000E24  BE12               	btfsc	(asignarHorarios@i+1)^0,7,c
  7478  000E26  EF1E  F007         	goto	u2411
  7479  000E2A  5012               	movf	(asignarHorarios@i+1)^0,w,c
  7480  000E2C  E109               	bnz	u2410
  7481  000E2E  0E02               	movlw	2
  7482  000E30  5C11               	subwf	asignarHorarios@i^0,w,c
  7483  000E32  A0D8               	btfss	status,0,c
  7484  000E34  EF1E  F007         	goto	u2411
  7485  000E38  EF20  F007         	goto	u2410
  7486  000E3C                     u2411:
  7487  000E3C  EFDB  F006         	goto	l3159
  7488  000E40                     u2410:
  7489  000E40                     l3187:
  7490                           
  7491                           ;main.c: 369:     if (datoCapturado && !esperandoDatos) {
  7492  000E40  5010               	movf	asignarHorarios@datoCapturado^0,w,c
  7493  000E42  B4D8               	btfsc	status,2,c
  7494  000E44  EF26  F007         	goto	u2421
  7495  000E48  EF28  F007         	goto	u2420
  7496  000E4C                     u2421:
  7497  000E4C  EF6C  F007         	goto	l288
  7498  000E50                     u2420:
  7499  000E50  505E               	movf	_esperandoDatos^0,w,c
  7500  000E52  A4D8               	btfss	status,2,c
  7501  000E54  EF2E  F007         	goto	u2431
  7502  000E58  EF30  F007         	goto	u2430
  7503  000E5C                     u2431:
  7504  000E5C  EF6C  F007         	goto	l288
  7505  000E60                     u2430:
  7506  000E60                     
  7507                           ;main.c: 371:         UART_printf("\r\n Ingrese 1 para regar || ingrese 0 para no regar:
      +                           \r\n");
  7508  000E60  0E17               	movlw	low STR_7
  7509  000E62  6E02               	movwf	UART_printf@cadena^0,c
  7510  000E64  0E7C               	movlw	high STR_7
  7511  000E66  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7512  000E68  ECC0  F00E         	call	_UART_printf	;wreg free
  7513  000E6C                     
  7514                           ;main.c: 373:         Rx = UART_read();
  7515  000E6C  EC1D  F00F         	call	_UART_read	;wreg free
  7516  000E70  6E13               	movwf	asignarHorarios@Rx^0,c
  7517  000E72                     
  7518                           ;main.c: 374:         Rx -= 48;
  7519  000E72  0E30               	movlw	48
  7520  000E74  5E13               	subwf	asignarHorarios@Rx^0,f,c
  7521  000E76                     
  7522                           ;main.c: 376:         if (Rx != 1 && Rx != 0)
  7523  000E76  0413               	decf	asignarHorarios@Rx^0,w,c
  7524  000E78  B4D8               	btfsc	status,2,c
  7525  000E7A  EF41  F007         	goto	u2441
  7526  000E7E  EF43  F007         	goto	u2440
  7527  000E82                     u2441:
  7528  000E82  EF4D  F007         	goto	l285
  7529  000E86                     u2440:
  7530  000E86  5013               	movf	asignarHorarios@Rx^0,w,c
  7531  000E88  B4D8               	btfsc	status,2,c
  7532  000E8A  EF49  F007         	goto	u2451
  7533  000E8E  EF4B  F007         	goto	u2450
  7534  000E92                     u2451:
  7535  000E92  EF4D  F007         	goto	l285
  7536  000E96                     u2450:
  7537  000E96                     
  7538                           ;main.c: 377:             Rx = 0;
  7539  000E96  0E00               	movlw	0
  7540  000E98  6E13               	movwf	asignarHorarios@Rx^0,c
  7541  000E9A                     l285:
  7542                           
  7543                           ;main.c: 379:         if (!esperandoDatos) {
  7544  000E9A  505E               	movf	_esperandoDatos^0,w,c
  7545  000E9C  A4D8               	btfss	status,2,c
  7546  000E9E  EF53  F007         	goto	u2461
  7547  000EA2  EF55  F007         	goto	u2460
  7548  000EA6                     u2461:
  7549  000EA6  EF69  F007         	goto	l3209
  7550  000EAA                     u2460:
  7551  000EAA                     
  7552                           ;main.c: 380:             UART_printf("\r\n Horario Modificado! \r\n");
  7553  000EAA  0E60               	movlw	low STR_8
  7554  000EAC  6E02               	movwf	UART_printf@cadena^0,c
  7555  000EAE  0E7F               	movlw	high STR_8
  7556  000EB0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7557  000EB2  ECC0  F00E         	call	_UART_printf	;wreg free
  7558  000EB6                     
  7559                           ;main.c: 382:             horarios[hora].regar = Rx;
  7560  000EB6  500F               	movf	asignarHorarios@hora^0,w,c
  7561  000EB8  0D03               	mullw	3
  7562  000EBA  0E01               	movlw	low (_horarios+1)
  7563  000EBC  24F3               	addwf	243,w,c
  7564  000EBE  6ED9               	movwf	fsr2l,c
  7565  000EC0  0E01               	movlw	high (_horarios+1)
  7566  000EC2  20F4               	addwfc	prodh,w,c
  7567  000EC4  6EDA               	movwf	fsr2h,c
  7568  000EC6  C013  FFDF         	movff	asignarHorarios@Rx,indf2
  7569  000ECA                     
  7570                           ;main.c: 384:             escribeHorariosMemoria();
  7571  000ECA  EC7C  F009         	call	_escribeHorariosMemoria	;wreg free
  7572                           
  7573                           ;main.c: 387:         } else {
  7574  000ECE  EF6C  F007         	goto	l288
  7575  000ED2                     l3209:
  7576                           
  7577                           ;main.c: 389:             UART_write('F');
  7578  000ED2  0E46               	movlw	70
  7579  000ED4  EC35  F011         	call	_UART_write
  7580  000ED8                     l288:
  7581  000ED8  0012               	return		;funcret
  7582  000EDA                     __end_of_asignarHorarios:
  7583                           	opt callstack 0
  7584                           
  7585 ;; *************** function _escribeHorariosMemoria *****************
  7586 ;; Defined at:
  7587 ;;		line 209 in file "main.c"
  7588 ;; Parameters:    Size  Location     Type
  7589 ;;		None
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;  i               2   12[COMRAM] int 
  7592 ;;  contMemoria     2   10[COMRAM] int 
  7593 ;; Return value:  Size  Location     Type
  7594 ;;                  1    wreg      void 
  7595 ;; Registers used:
  7596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7597 ;; Tracked objects:
  7598 ;;		On entry : 0/0
  7599 ;;		On exit  : 0/0
  7600 ;;		Unchanged: 0/0
  7601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7602 ;;      Params:         0       0       0       0       0       0       0       0       0
  7603 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7604 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7605 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7606 ;;Total ram usage:        4 bytes
  7607 ;; Hardware stack levels used:    1
  7608 ;; Hardware stack levels required when called:    4
  7609 ;; This function calls:
  7610 ;;		___wmul
  7611 ;;		_escribe_eeprom
  7612 ;; This function is called by:
  7613 ;;		_asignarHorarios
  7614 ;;		_setTiempoRegar
  7615 ;; This function uses a non-reentrant model
  7616 ;;
  7617                           
  7618                           	psect	text40
  7619  0012F8                     __ptext40:
  7620                           	opt callstack 0
  7621  0012F8                     _escribeHorariosMemoria:
  7622                           	opt callstack 24
  7623  0012F8                     
  7624                           ;main.c: 211:     int contMemoria = 0;
  7625  0012F8  0E00               	movlw	0
  7626  0012FA  6E0C               	movwf	(escribeHorariosMemoria@contMemoria+1)^0,c
  7627  0012FC  0E00               	movlw	0
  7628  0012FE  6E0B               	movwf	escribeHorariosMemoria@contMemoria^0,c
  7629                           
  7630                           ;main.c: 212:     for (int i = 0; i < 24; i++) {
  7631  001300  0E00               	movlw	0
  7632  001302  6E0E               	movwf	(escribeHorariosMemoria@i+1)^0,c
  7633  001304  0E00               	movlw	0
  7634  001306  6E0D               	movwf	escribeHorariosMemoria@i^0,c
  7635  001308                     l2923:
  7636                           
  7637                           ;main.c: 213:         escribe_eeprom(contMemoria++, horarios[i].hora);
  7638  001308  C00B  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  7639  00130C  C00C  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  7640  001310  C00D  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  7641  001314  C00E  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  7642  001318  0E00               	movlw	0
  7643  00131A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7644  00131C  0E03               	movlw	3
  7645  00131E  6E03               	movwf	___wmul@multiplicand^0,c
  7646  001320  ECE6  F010         	call	___wmul	;wreg free
  7647  001324  0E00               	movlw	low _horarios
  7648  001326  2401               	addwf	?___wmul^0,w,c
  7649  001328  6ED9               	movwf	fsr2l,c
  7650  00132A  0E01               	movlw	high _horarios
  7651  00132C  2002               	addwfc	(?___wmul+1)^0,w,c
  7652  00132E  6EDA               	movwf	fsr2h,c
  7653  001330  50DF               	movf	indf2,w,c
  7654  001332  6E09               	movwf	escribe_eeprom@dato^0,c
  7655  001334  EC7A  F010         	call	_escribe_eeprom	;wreg free
  7656  001338  4A0B               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  7657  00133A  2A0C               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  7658  00133C                     
  7659                           ;main.c: 214:         escribe_eeprom(contMemoria++, horarios[i].regar);
  7660  00133C  C00B  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  7661  001340  C00C  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  7662  001344  C00D  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  7663  001348  C00E  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  7664  00134C  0E00               	movlw	0
  7665  00134E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7666  001350  0E03               	movlw	3
  7667  001352  6E03               	movwf	___wmul@multiplicand^0,c
  7668  001354  ECE6  F010         	call	___wmul	;wreg free
  7669  001358  0E01               	movlw	low (_horarios+1)
  7670  00135A  2401               	addwf	?___wmul^0,w,c
  7671  00135C  6ED9               	movwf	fsr2l,c
  7672  00135E  0E01               	movlw	high (_horarios+1)
  7673  001360  2002               	addwfc	(?___wmul+1)^0,w,c
  7674  001362  6EDA               	movwf	fsr2h,c
  7675  001364  50DF               	movf	indf2,w,c
  7676  001366  6E09               	movwf	escribe_eeprom@dato^0,c
  7677  001368  EC7A  F010         	call	_escribe_eeprom	;wreg free
  7678  00136C  4A0B               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  7679  00136E  2A0C               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  7680  001370                     
  7681                           ;main.c: 215:         escribe_eeprom(contMemoria++, horarios[i].tiempoRegar);
  7682  001370  C00B  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  7683  001374  C00C  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  7684  001378  C00D  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  7685  00137C  C00E  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  7686  001380  0E00               	movlw	0
  7687  001382  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7688  001384  0E03               	movlw	3
  7689  001386  6E03               	movwf	___wmul@multiplicand^0,c
  7690  001388  ECE6  F010         	call	___wmul	;wreg free
  7691  00138C  0E02               	movlw	low (_horarios+2)
  7692  00138E  2401               	addwf	?___wmul^0,w,c
  7693  001390  6ED9               	movwf	fsr2l,c
  7694  001392  0E01               	movlw	high (_horarios+2)
  7695  001394  2002               	addwfc	(?___wmul+1)^0,w,c
  7696  001396  6EDA               	movwf	fsr2h,c
  7697  001398  50DF               	movf	indf2,w,c
  7698  00139A  6E09               	movwf	escribe_eeprom@dato^0,c
  7699  00139C  EC7A  F010         	call	_escribe_eeprom	;wreg free
  7700  0013A0  4A0B               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  7701  0013A2  2A0C               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  7702  0013A4                     
  7703                           ;main.c: 216:     }
  7704  0013A4  4A0D               	infsnz	escribeHorariosMemoria@i^0,f,c
  7705  0013A6  2A0E               	incf	(escribeHorariosMemoria@i+1)^0,f,c
  7706  0013A8  BE0E               	btfsc	(escribeHorariosMemoria@i+1)^0,7,c
  7707  0013AA  EFE0  F009         	goto	u2131
  7708  0013AE  500E               	movf	(escribeHorariosMemoria@i+1)^0,w,c
  7709  0013B0  E109               	bnz	u2130
  7710  0013B2  0E18               	movlw	24
  7711  0013B4  5C0D               	subwf	escribeHorariosMemoria@i^0,w,c
  7712  0013B6  A0D8               	btfss	status,0,c
  7713  0013B8  EFE0  F009         	goto	u2131
  7714  0013BC  EFE2  F009         	goto	u2130
  7715  0013C0                     u2131:
  7716  0013C0  EF84  F009         	goto	l2923
  7717  0013C4                     u2130:
  7718  0013C4  0012               	return		;funcret
  7719  0013C6                     __end_of_escribeHorariosMemoria:
  7720                           	opt callstack 0
  7721                           
  7722 ;; *************** function _escribe_eeprom *****************
  7723 ;; Defined at:
  7724 ;;		line 180 in file "main.c"
  7725 ;; Parameters:    Size  Location     Type
  7726 ;;  direccion       2    6[COMRAM] unsigned short 
  7727 ;;  dato            1    8[COMRAM] unsigned char 
  7728 ;; Auto vars:     Size  Location     Type
  7729 ;;		None
  7730 ;; Return value:  Size  Location     Type
  7731 ;;                  1    wreg      void 
  7732 ;; Registers used:
  7733 ;;		wreg, status,2, status,0, cstack
  7734 ;; Tracked objects:
  7735 ;;		On entry : 0/0
  7736 ;;		On exit  : 0/0
  7737 ;;		Unchanged: 0/0
  7738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7739 ;;      Params:         3       0       0       0       0       0       0       0       0
  7740 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7741 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7742 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7743 ;;Total ram usage:        4 bytes
  7744 ;; Hardware stack levels used:    1
  7745 ;; Hardware stack levels required when called:    3
  7746 ;; This function calls:
  7747 ;;		_i2c_detener
  7748 ;;		_i2c_envia_dato
  7749 ;;		_i2c_inicia_com
  7750 ;; This function is called by:
  7751 ;;		_escribeHorariosMemoria
  7752 ;; This function uses a non-reentrant model
  7753 ;;
  7754                           
  7755                           	psect	text41
  7756  0020F4                     __ptext41:
  7757                           	opt callstack 0
  7758  0020F4                     _escribe_eeprom:
  7759                           	opt callstack 24
  7760  0020F4                     
  7761                           ;main.c: 181:     i2c_inicia_com();
  7762  0020F4  EC60  F011         	call	_i2c_inicia_com	;wreg free
  7763                           
  7764                           ;main.c: 182:     i2c_envia_dato(0xAE);
  7765  0020F8  0EAE               	movlw	174
  7766  0020FA  EC51  F011         	call	_i2c_envia_dato
  7767                           
  7768                           ;main.c: 183:     i2c_envia_dato(direccion >> 8);
  7769  0020FE  5008               	movf	(escribe_eeprom@direccion+1)^0,w,c
  7770  002100  EC51  F011         	call	_i2c_envia_dato
  7771                           
  7772                           ;main.c: 185:     i2c_envia_dato(direccion);
  7773  002104  5007               	movf	escribe_eeprom@direccion^0,w,c
  7774  002106  EC51  F011         	call	_i2c_envia_dato
  7775                           
  7776                           ;main.c: 187:     i2c_envia_dato(dato);
  7777  00210A  5009               	movf	escribe_eeprom@dato^0,w,c
  7778  00210C  EC51  F011         	call	_i2c_envia_dato
  7779                           
  7780                           ;main.c: 188:     i2c_detener();
  7781  002110  EC64  F011         	call	_i2c_detener	;wreg free
  7782  002114                     
  7783                           ;main.c: 189:     _delay((unsigned long)((10)*(4000000/4000.0)));
  7784  002114  0E0D               	movlw	13
  7785  002116  6E0A               	movwf	??_escribe_eeprom^0,c
  7786  002118  0EFC               	movlw	252
  7787  00211A                     u2917:
  7788  00211A  2EE8               	decfsz	wreg,f,c
  7789  00211C  D7FE               	bra	u2917
  7790  00211E  2E0A               	decfsz	??_escribe_eeprom^0,f,c
  7791  002120  D7FC               	bra	u2917
  7792  002122  0012               	return		;funcret
  7793  002124                     __end_of_escribe_eeprom:
  7794                           	opt callstack 0
  7795                           
  7796 ;; *************** function _UART_read *****************
  7797 ;; Defined at:
  7798 ;;		line 34 in file "./UART.h"
  7799 ;; Parameters:    Size  Location     Type
  7800 ;;		None
  7801 ;; Auto vars:     Size  Location     Type
  7802 ;;		None
  7803 ;; Return value:  Size  Location     Type
  7804 ;;                  1    wreg      unsigned char 
  7805 ;; Registers used:
  7806 ;;		wreg, status,2
  7807 ;; Tracked objects:
  7808 ;;		On entry : 0/0
  7809 ;;		On exit  : 0/0
  7810 ;;		Unchanged: 0/0
  7811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7812 ;;      Params:         0       0       0       0       0       0       0       0       0
  7813 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7814 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7815 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7816 ;;Total ram usage:        0 bytes
  7817 ;; Hardware stack levels used:    1
  7818 ;; Hardware stack levels required when called:    1
  7819 ;; This function calls:
  7820 ;;		Nothing
  7821 ;; This function is called by:
  7822 ;;		_setRtc
  7823 ;;		_asignarHorarios
  7824 ;;		_setTiempoRegar
  7825 ;;		_lecturaWifi
  7826 ;; This function uses a non-reentrant model
  7827 ;;
  7828                           
  7829                           	psect	text42
  7830  001E3A                     __ptext42:
  7831                           	opt callstack 0
  7832  001E3A                     _UART_read:
  7833                           	opt callstack 27
  7834  001E3A                     
  7835                           ;./UART.h: 36:     TMR0 = VALOR_TIMER0UART;
  7836  001E3A  0E67               	movlw	103
  7837  001E3C  6ED7               	movwf	215,c	;volatile
  7838  001E3E  0E69               	movlw	105
  7839  001E40  6ED6               	movwf	214,c	;volatile
  7840                           
  7841                           ;./UART.h: 37:     esperaDatoConcluida = 0;
  7842  001E42  0E00               	movlw	0
  7843  001E44  0100               	movlb	0	; () banked
  7844  001E46  6F8B               	movwf	_esperaDatoConcluida& (0+255),b
  7845                           
  7846                           ;./UART.h: 38:     esperandoDatos = 1;
  7847  001E48  0E01               	movlw	1
  7848  001E4A  6E5E               	movwf	_esperandoDatos^0,c
  7849                           
  7850                           ;./UART.h: 39:     byteUart = 0;
  7851  001E4C  0E00               	movlw	0
  7852  001E4E  6F8C               	movwf	_byteUart& (0+255),b
  7853                           
  7854                           ;./UART.h: 40:     tiempoInactividadTrans = 0;
  7855  001E50  0E00               	movlw	0
  7856  001E52  6F8D               	movwf	_tiempoInactividadTrans& (0+255),b
  7857  001E54                     l121:
  7858                           
  7859                           ; BSR set to: 0
  7860  001E54  BA9E               	btfsc	158,5,c	;volatile
  7861  001E56  EF2F  F00F         	goto	u1971
  7862  001E5A  EF31  F00F         	goto	u1970
  7863  001E5E                     u1971:
  7864  001E5E  EF39  F00F         	goto	l2785
  7865  001E62                     u1970:
  7866  001E62                     
  7867                           ; BSR set to: 0
  7868  001E62  518B               	movf	_esperaDatoConcluida& (0+255),w,b
  7869  001E64  B4D8               	btfsc	status,2,c
  7870  001E66  EF37  F00F         	goto	u1981
  7871  001E6A  EF39  F00F         	goto	u1980
  7872  001E6E                     u1981:
  7873  001E6E  EF2A  F00F         	goto	l121
  7874  001E72                     u1980:
  7875  001E72                     l2785:
  7876                           
  7877                           ; BSR set to: 0
  7878                           ;./UART.h: 44:     if (!esperaDatoConcluida) {
  7879  001E72  518B               	movf	_esperaDatoConcluida& (0+255),w,b
  7880  001E74  A4D8               	btfss	status,2,c
  7881  001E76  EF3F  F00F         	goto	u1991
  7882  001E7A  EF41  F00F         	goto	u1990
  7883  001E7E                     u1991:
  7884  001E7E  EF45  F00F         	goto	l126
  7885  001E82                     u1990:
  7886  001E82                     
  7887                           ; BSR set to: 0
  7888                           ;./UART.h: 45:         byteUart = RCREG;
  7889  001E82  CFAE F08C          	movff	4014,_byteUart	;volatile
  7890  001E86                     
  7891                           ; BSR set to: 0
  7892                           ;./UART.h: 46:         esperandoDatos = 0;
  7893  001E86  0E00               	movlw	0
  7894  001E88  6E5E               	movwf	_esperandoDatos^0,c
  7895  001E8A                     l126:
  7896                           
  7897                           ; BSR set to: 0
  7898                           ;./UART.h: 49:     return byteUart;
  7899  001E8A  518C               	movf	_byteUart& (0+255),w,b
  7900  001E8C                     
  7901                           ; BSR set to: 0
  7902  001E8C  0012               	return		;funcret
  7903  001E8E                     __end_of_UART_read:
  7904                           	opt callstack 0
  7905                           
  7906 ;; *************** function _UART_printf *****************
  7907 ;; Defined at:
  7908 ;;		line 57 in file "./UART.h"
  7909 ;; Parameters:    Size  Location     Type
  7910 ;;  cadena          2    1[COMRAM] PTR unsigned char 
  7911 ;;		 -> mostrarDatosSensoresWIFI@buffer(50), mostrarDatosSensores@buffer(50), STR_28(19), STR_27(19), 
  7912 ;;		 -> dameDatosSistema@buffer(50), STR_25(50), STR_24(42), STR_23(3), 
  7913 ;;		 -> STR_22(14), STR_21(34), STR_20(32), STR_19(49), 
  7914 ;;		 -> STR_18(37), STR_17(27), STR_16(37), STR_15(32), 
  7915 ;;		 -> STR_14(28), STR_13(38), STR_12(37), STR_11(72), 
  7916 ;;		 -> STR_10(51), STR_9(23), STR_8(26), STR_7(55), 
  7917 ;;		 -> STR_6(51), STR_5(25), STR_4(37), STR_3(31), 
  7918 ;;		 -> STR_2(43), STR_1(16), 
  7919 ;; Auto vars:     Size  Location     Type
  7920 ;;		None
  7921 ;; Return value:  Size  Location     Type
  7922 ;;                  1    wreg      void 
  7923 ;; Registers used:
  7924 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7925 ;; Tracked objects:
  7926 ;;		On entry : 0/0
  7927 ;;		On exit  : 0/0
  7928 ;;		Unchanged: 0/0
  7929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7930 ;;      Params:         2       0       0       0       0       0       0       0       0
  7931 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7932 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7933 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7934 ;;Total ram usage:        2 bytes
  7935 ;; Hardware stack levels used:    1
  7936 ;; Hardware stack levels required when called:    2
  7937 ;; This function calls:
  7938 ;;		_UART_write
  7939 ;; This function is called by:
  7940 ;;		_fijaHoraRtc
  7941 ;;		_asignarHorarios
  7942 ;;		_setTiempoRegar
  7943 ;;		_lecturaWifi
  7944 ;;		_mostrarMenu
  7945 ;;		_sistemaPrincipal
  7946 ;;		_dameDatosSistema
  7947 ;;		_dameTemperaturaHumedad
  7948 ;;		_mostrarDatosSensores
  7949 ;;		_mostrarDatosSensoresWIFI
  7950 ;; This function uses a non-reentrant model
  7951 ;;
  7952                           
  7953                           	psect	text43
  7954  001D80                     __ptext43:
  7955                           	opt callstack 0
  7956  001D80                     _UART_printf:
  7957                           	opt callstack 26
  7958  001D80                     
  7959                           ;./UART.h: 58:     while (*cadena) {
  7960  001D80  EFD6  F00E         	goto	l2661
  7961  001D84                     l2657:
  7962                           
  7963                           ;./UART.h: 59:         UART_write(*cadena++);
  7964  001D84  C002  FFF6         	movff	UART_printf@cadena,tblptrl
  7965  001D88  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
  7966  001D8C  6AF8               	clrf	tblptru,c
  7967  001D8E  0E07               	movlw	(high __ramtop+-1)
  7968  001D90  64F7               	cpfsgt	tblptrh,c
  7969  001D92  D003               	bra	u1847
  7970  001D94  0008               	tblrd		*
  7971  001D96  50F5               	movf	tablat,w,c
  7972  001D98  D005               	bra	u1840
  7973  001D9A                     u1847:
  7974  001D9A  CFF6 FFE1          	movff	tblptrl,fsr1l
  7975  001D9E  CFF7 FFE2          	movff	tblptrh,fsr1h
  7976  001DA2  50E7               	movf	indf1,w,c
  7977  001DA4                     u1840:
  7978  001DA4  EC35  F011         	call	_UART_write
  7979  001DA8  4A02               	infsnz	UART_printf@cadena^0,f,c
  7980  001DAA  2A03               	incf	(UART_printf@cadena+1)^0,f,c
  7981  001DAC                     l2661:
  7982                           
  7983                           ;./UART.h: 58:     while (*cadena) {
  7984  001DAC  C002  FFF6         	movff	UART_printf@cadena,tblptrl
  7985  001DB0  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
  7986  001DB4  6AF8               	clrf	tblptru,c
  7987  001DB6  0E07               	movlw	(high __ramtop+-1)
  7988  001DB8  64F7               	cpfsgt	tblptrh,c
  7989  001DBA  D003               	bra	u1857
  7990  001DBC  0008               	tblrd		*
  7991  001DBE  50F5               	movf	tablat,w,c
  7992  001DC0  D005               	bra	u1850
  7993  001DC2                     u1857:
  7994  001DC2  CFF6 FFE1          	movff	tblptrl,fsr1l
  7995  001DC6  CFF7 FFE2          	movff	tblptrh,fsr1h
  7996  001DCA  50E7               	movf	indf1,w,c
  7997  001DCC                     u1850:
  7998  001DCC  0900               	iorlw	0
  7999  001DCE  A4D8               	btfss	status,2,c
  8000  001DD0  EFEC  F00E         	goto	u1861
  8001  001DD4  EFEE  F00E         	goto	u1860
  8002  001DD8                     u1861:
  8003  001DD8  EFC2  F00E         	goto	l2657
  8004  001DDC                     u1860:
  8005  001DDC  0012               	return		;funcret
  8006  001DDE                     __end_of_UART_printf:
  8007                           	opt callstack 0
  8008                           
  8009 ;; *************** function _UART_write *****************
  8010 ;; Defined at:
  8011 ;;		line 52 in file "./UART.h"
  8012 ;; Parameters:    Size  Location     Type
  8013 ;;  dato            1    wreg     unsigned char 
  8014 ;; Auto vars:     Size  Location     Type
  8015 ;;  dato            1    0[COMRAM] unsigned char 
  8016 ;; Return value:  Size  Location     Type
  8017 ;;                  1    wreg      void 
  8018 ;; Registers used:
  8019 ;;		wreg
  8020 ;; Tracked objects:
  8021 ;;		On entry : 0/0
  8022 ;;		On exit  : 0/0
  8023 ;;		Unchanged: 0/0
  8024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8025 ;;      Params:         0       0       0       0       0       0       0       0       0
  8026 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8027 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8028 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8029 ;;Total ram usage:        1 bytes
  8030 ;; Hardware stack levels used:    1
  8031 ;; Hardware stack levels required when called:    1
  8032 ;; This function calls:
  8033 ;;		Nothing
  8034 ;; This function is called by:
  8035 ;;		_UART_printf
  8036 ;;		_setRtc
  8037 ;;		_asignarHorarios
  8038 ;;		_setTiempoRegar
  8039 ;;		_lecturaWifi
  8040 ;;		_mostrarDatosSensores
  8041 ;;		_mostrarDatosSensoresWIFI
  8042 ;; This function uses a non-reentrant model
  8043 ;;
  8044                           
  8045                           	psect	text44
  8046  00226A                     __ptext44:
  8047                           	opt callstack 0
  8048  00226A                     _UART_write:
  8049                           	opt callstack 26
  8050                           
  8051                           ;incstack = 0
  8052                           ;UART_write@dato stored from wreg
  8053  00226A  6E01               	movwf	UART_write@dato^0,c
  8054  00226C                     
  8055                           ;./UART.h: 53:     TXREG = dato;
  8056  00226C  C001  FFAD         	movff	UART_write@dato,4013	;volatile
  8057  002270                     l130:
  8058  002270  A2AC               	btfss	172,1,c	;volatile
  8059  002272  EF3D  F011         	goto	u1681
  8060  002276  EF3F  F011         	goto	u1680
  8061  00227A                     u1681:
  8062  00227A  EF38  F011         	goto	l130
  8063  00227E                     u1680:
  8064  00227E  0012               	return		;funcret
  8065  002280                     __end_of_UART_write:
  8066                           	opt callstack 0
  8067                           
  8068 ;; *************** function _leeHorariosMemoria *****************
  8069 ;; Defined at:
  8070 ;;		line 219 in file "main.c"
  8071 ;; Parameters:    Size  Location     Type
  8072 ;;		None
  8073 ;; Auto vars:     Size  Location     Type
  8074 ;;  i               2    8[COMRAM] int 
  8075 ;;  contMemoria     2    6[COMRAM] int 
  8076 ;; Return value:  Size  Location     Type
  8077 ;;                  1    wreg      void 
  8078 ;; Registers used:
  8079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8080 ;; Tracked objects:
  8081 ;;		On entry : 0/0
  8082 ;;		On exit  : 0/0
  8083 ;;		Unchanged: 0/0
  8084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8085 ;;      Params:         0       0       0       0       0       0       0       0       0
  8086 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8087 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8088 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8089 ;;Total ram usage:        4 bytes
  8090 ;; Hardware stack levels used:    1
  8091 ;; Hardware stack levels required when called:    4
  8092 ;; This function calls:
  8093 ;;		___wmul
  8094 ;;		_leer_eeprom
  8095 ;; This function is called by:
  8096 ;;		_main
  8097 ;; This function uses a non-reentrant model
  8098 ;;
  8099                           
  8100                           	psect	text45
  8101  001490                     __ptext45:
  8102                           	opt callstack 0
  8103  001490                     _leeHorariosMemoria:
  8104                           	opt callstack 26
  8105  001490                     
  8106                           ;main.c: 221:     int contMemoria = 0;
  8107  001490  0E00               	movlw	0
  8108  001492  6E08               	movwf	(leeHorariosMemoria@contMemoria+1)^0,c
  8109  001494  0E00               	movlw	0
  8110  001496  6E07               	movwf	leeHorariosMemoria@contMemoria^0,c
  8111                           
  8112                           ;main.c: 223:     for (int i = 0; i < 24; i++) {
  8113  001498  0E00               	movlw	0
  8114  00149A  6E0A               	movwf	(leeHorariosMemoria@i+1)^0,c
  8115  00149C  0E00               	movlw	0
  8116  00149E  6E09               	movwf	leeHorariosMemoria@i^0,c
  8117  0014A0                     l3485:
  8118                           
  8119                           ;main.c: 224:         horarios[i].hora = leer_eeprom(contMemoria++);
  8120  0014A0  C009  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  8121  0014A4  C00A  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  8122  0014A8  0E00               	movlw	0
  8123  0014AA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8124  0014AC  0E03               	movlw	3
  8125  0014AE  6E03               	movwf	___wmul@multiplicand^0,c
  8126  0014B0  ECE6  F010         	call	___wmul	;wreg free
  8127  0014B4  0E00               	movlw	low _horarios
  8128  0014B6  2401               	addwf	?___wmul^0,w,c
  8129  0014B8  6ED9               	movwf	fsr2l,c
  8130  0014BA  0E01               	movlw	high _horarios
  8131  0014BC  2002               	addwfc	(?___wmul+1)^0,w,c
  8132  0014BE  6EDA               	movwf	fsr2h,c
  8133  0014C0  C007  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  8134  0014C4  C008  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  8135  0014C8  EC41  F010         	call	_leer_eeprom	;wreg free
  8136  0014CC  6EDF               	movwf	indf2,c
  8137  0014CE  4A07               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  8138  0014D0  2A08               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  8139  0014D2                     
  8140                           ;main.c: 225:         horarios[i].regar = leer_eeprom(contMemoria++);
  8141  0014D2  C009  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  8142  0014D6  C00A  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  8143  0014DA  0E00               	movlw	0
  8144  0014DC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8145  0014DE  0E03               	movlw	3
  8146  0014E0  6E03               	movwf	___wmul@multiplicand^0,c
  8147  0014E2  ECE6  F010         	call	___wmul	;wreg free
  8148  0014E6  0E01               	movlw	low (_horarios+1)
  8149  0014E8  2401               	addwf	?___wmul^0,w,c
  8150  0014EA  6ED9               	movwf	fsr2l,c
  8151  0014EC  0E01               	movlw	high (_horarios+1)
  8152  0014EE  2002               	addwfc	(?___wmul+1)^0,w,c
  8153  0014F0  6EDA               	movwf	fsr2h,c
  8154  0014F2  C007  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  8155  0014F6  C008  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  8156  0014FA  EC41  F010         	call	_leer_eeprom	;wreg free
  8157  0014FE  6EDF               	movwf	indf2,c
  8158  001500  4A07               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  8159  001502  2A08               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  8160  001504                     
  8161                           ;main.c: 226:         horarios[i].tiempoRegar = leer_eeprom(contMemoria++);
  8162  001504  C009  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
  8163  001508  C00A  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  8164  00150C  0E00               	movlw	0
  8165  00150E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8166  001510  0E03               	movlw	3
  8167  001512  6E03               	movwf	___wmul@multiplicand^0,c
  8168  001514  ECE6  F010         	call	___wmul	;wreg free
  8169  001518  0E02               	movlw	low (_horarios+2)
  8170  00151A  2401               	addwf	?___wmul^0,w,c
  8171  00151C  6ED9               	movwf	fsr2l,c
  8172  00151E  0E01               	movlw	high (_horarios+2)
  8173  001520  2002               	addwfc	(?___wmul+1)^0,w,c
  8174  001522  6EDA               	movwf	fsr2h,c
  8175  001524  C007  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  8176  001528  C008  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  8177  00152C  EC41  F010         	call	_leer_eeprom	;wreg free
  8178  001530  6EDF               	movwf	indf2,c
  8179  001532  4A07               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  8180  001534  2A08               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  8181  001536                     
  8182                           ;main.c: 227:     }
  8183  001536  4A09               	infsnz	leeHorariosMemoria@i^0,f,c
  8184  001538  2A0A               	incf	(leeHorariosMemoria@i+1)^0,f,c
  8185  00153A  BE0A               	btfsc	(leeHorariosMemoria@i+1)^0,7,c
  8186  00153C  EFA9  F00A         	goto	u2711
  8187  001540  500A               	movf	(leeHorariosMemoria@i+1)^0,w,c
  8188  001542  E109               	bnz	u2710
  8189  001544  0E18               	movlw	24
  8190  001546  5C09               	subwf	leeHorariosMemoria@i^0,w,c
  8191  001548  A0D8               	btfss	status,0,c
  8192  00154A  EFA9  F00A         	goto	u2711
  8193  00154E  EFAB  F00A         	goto	u2710
  8194  001552                     u2711:
  8195  001552  EF50  F00A         	goto	l3485
  8196  001556                     u2710:
  8197  001556  0012               	return		;funcret
  8198  001558                     __end_of_leeHorariosMemoria:
  8199                           	opt callstack 0
  8200                           
  8201 ;; *************** function _leer_eeprom *****************
  8202 ;; Defined at:
  8203 ;;		line 192 in file "main.c"
  8204 ;; Parameters:    Size  Location     Type
  8205 ;;  direccion       2    2[COMRAM] unsigned short 
  8206 ;; Auto vars:     Size  Location     Type
  8207 ;;  dato            1    5[COMRAM] unsigned char 
  8208 ;; Return value:  Size  Location     Type
  8209 ;;                  1    wreg      unsigned char 
  8210 ;; Registers used:
  8211 ;;		wreg, status,2, status,0, cstack
  8212 ;; Tracked objects:
  8213 ;;		On entry : 0/0
  8214 ;;		On exit  : 0/0
  8215 ;;		Unchanged: 0/0
  8216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8217 ;;      Params:         2       0       0       0       0       0       0       0       0
  8218 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8219 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8220 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8221 ;;Total ram usage:        4 bytes
  8222 ;; Hardware stack levels used:    1
  8223 ;; Hardware stack levels required when called:    3
  8224 ;; This function calls:
  8225 ;;		_i2c_detener
  8226 ;;		_i2c_envia_dato
  8227 ;;		_i2c_inicia_com
  8228 ;;		_i2c_recibe_dato
  8229 ;;		_i2c_reinicia_com
  8230 ;; This function is called by:
  8231 ;;		_leeHorariosMemoria
  8232 ;; This function uses a non-reentrant model
  8233 ;;
  8234                           
  8235                           	psect	text46
  8236  002082                     __ptext46:
  8237                           	opt callstack 0
  8238  002082                     _leer_eeprom:
  8239                           	opt callstack 26
  8240  002082                     
  8241                           ;main.c: 194:     unsigned char dato;;main.c: 196:     i2c_inicia_com();
  8242  002082  EC60  F011         	call	_i2c_inicia_com	;wreg free
  8243                           
  8244                           ;main.c: 197:     i2c_envia_dato(0xAE);
  8245  002086  0EAE               	movlw	174
  8246  002088  EC51  F011         	call	_i2c_envia_dato
  8247                           
  8248                           ;main.c: 198:     i2c_envia_dato(direccion >> 8);
  8249  00208C  5004               	movf	(leer_eeprom@direccion+1)^0,w,c
  8250  00208E  EC51  F011         	call	_i2c_envia_dato
  8251                           
  8252                           ;main.c: 199:     i2c_envia_dato(direccion);
  8253  002092  5003               	movf	leer_eeprom@direccion^0,w,c
  8254  002094  EC51  F011         	call	_i2c_envia_dato
  8255                           
  8256                           ;main.c: 200:     i2c_reinicia_com();
  8257  002098  EC5C  F011         	call	_i2c_reinicia_com	;wreg free
  8258                           
  8259                           ;main.c: 201:     i2c_envia_dato(0xAF);
  8260  00209C  0EAF               	movlw	175
  8261  00209E  EC51  F011         	call	_i2c_envia_dato
  8262                           
  8263                           ;main.c: 202:     dato = i2c_recibe_dato();
  8264  0020A2  EC28  F011         	call	_i2c_recibe_dato	;wreg free
  8265  0020A6  6E06               	movwf	leer_eeprom@dato^0,c
  8266                           
  8267                           ;main.c: 203:     i2c_detener();
  8268  0020A8  EC64  F011         	call	_i2c_detener	;wreg free
  8269  0020AC                     
  8270                           ;main.c: 204:     _delay((unsigned long)((10)*(4000000/4000.0)));
  8271  0020AC  0E0D               	movlw	13
  8272  0020AE  6E05               	movwf	??_leer_eeprom^0,c
  8273  0020B0  0EFC               	movlw	252
  8274  0020B2                     u2927:
  8275  0020B2  2EE8               	decfsz	wreg,f,c
  8276  0020B4  D7FE               	bra	u2927
  8277  0020B6  2E05               	decfsz	??_leer_eeprom^0,f,c
  8278  0020B8  D7FC               	bra	u2927
  8279  0020BA                     
  8280                           ;main.c: 206:     return dato;
  8281  0020BA  5006               	movf	leer_eeprom@dato^0,w,c
  8282  0020BC  0012               	return		;funcret
  8283  0020BE                     __end_of_leer_eeprom:
  8284                           	opt callstack 0
  8285                           
  8286 ;; *************** function _i2c_reinicia_com *****************
  8287 ;; Defined at:
  8288 ;;		line 37 in file "./I2C.h"
  8289 ;; Parameters:    Size  Location     Type
  8290 ;;		None
  8291 ;; Auto vars:     Size  Location     Type
  8292 ;;		None
  8293 ;; Return value:  Size  Location     Type
  8294 ;;                  1    wreg      void 
  8295 ;; Registers used:
  8296 ;;		wreg, status,2, status,0, cstack
  8297 ;; Tracked objects:
  8298 ;;		On entry : 0/0
  8299 ;;		On exit  : 0/0
  8300 ;;		Unchanged: 0/0
  8301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8302 ;;      Params:         0       0       0       0       0       0       0       0       0
  8303 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8304 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8305 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8306 ;;Total ram usage:        0 bytes
  8307 ;; Hardware stack levels used:    1
  8308 ;; Hardware stack levels required when called:    2
  8309 ;; This function calls:
  8310 ;;		_i2c_espera
  8311 ;; This function is called by:
  8312 ;;		_leer_rtc
  8313 ;;		_leer_eeprom
  8314 ;; This function uses a non-reentrant model
  8315 ;;
  8316                           
  8317                           	psect	text47
  8318  0022B8                     __ptext47:
  8319                           	opt callstack 0
  8320  0022B8                     _i2c_reinicia_com:
  8321                           	opt callstack 25
  8322  0022B8                     
  8323                           ;./I2C.h: 38:     i2c_espera();
  8324  0022B8  ECD3  F010         	call	_i2c_espera	;wreg free
  8325  0022BC                     
  8326                           ;./I2C.h: 39:     SSPCON2bits.RSEN = 1;
  8327  0022BC  82C5               	bsf	197,1,c	;volatile
  8328  0022BE  0012               	return		;funcret
  8329  0022C0                     __end_of_i2c_reinicia_com:
  8330                           	opt callstack 0
  8331                           
  8332 ;; *************** function _i2c_recibe_dato *****************
  8333 ;; Defined at:
  8334 ;;		line 68 in file "./I2C.h"
  8335 ;; Parameters:    Size  Location     Type
  8336 ;;		None
  8337 ;; Auto vars:     Size  Location     Type
  8338 ;;  datoleido       1    1[COMRAM] unsigned char 
  8339 ;; Return value:  Size  Location     Type
  8340 ;;                  1    wreg      unsigned char 
  8341 ;; Registers used:
  8342 ;;		wreg, status,2, status,0, cstack
  8343 ;; Tracked objects:
  8344 ;;		On entry : 0/0
  8345 ;;		On exit  : 0/0
  8346 ;;		Unchanged: 0/0
  8347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8348 ;;      Params:         0       0       0       0       0       0       0       0       0
  8349 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8350 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8351 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8352 ;;Total ram usage:        1 bytes
  8353 ;; Hardware stack levels used:    1
  8354 ;; Hardware stack levels required when called:    2
  8355 ;; This function calls:
  8356 ;;		_i2c_espera
  8357 ;; This function is called by:
  8358 ;;		_leer_rtc
  8359 ;;		_leer_eeprom
  8360 ;; This function uses a non-reentrant model
  8361 ;;
  8362                           
  8363                           	psect	text48
  8364  002250                     __ptext48:
  8365                           	opt callstack 0
  8366  002250                     _i2c_recibe_dato:
  8367                           	opt callstack 25
  8368  002250                     
  8369                           ;./I2C.h: 70:     unsigned char datoleido;;./I2C.h: 73:     i2c_espera();
  8370  002250  ECD3  F010         	call	_i2c_espera	;wreg free
  8371  002254                     
  8372                           ;./I2C.h: 74:     SSPCON2bits.RCEN = 1;
  8373  002254  86C5               	bsf	197,3,c	;volatile
  8374                           
  8375                           ;./I2C.h: 76:     i2c_espera();
  8376  002256  ECD3  F010         	call	_i2c_espera	;wreg free
  8377  00225A                     
  8378                           ;./I2C.h: 77:     datoleido = SSPBUF;
  8379  00225A  CFC9 F002          	movff	4041,i2c_recibe_dato@datoleido	;volatile
  8380                           
  8381                           ;./I2C.h: 80:     i2c_espera();
  8382  00225E  ECD3  F010         	call	_i2c_espera	;wreg free
  8383  002262                     
  8384                           ;./I2C.h: 82:     SSPCON2bits.ACKDT = 1;
  8385  002262  8AC5               	bsf	197,5,c	;volatile
  8386  002264                     
  8387                           ;./I2C.h: 87:     SSPCON2bits.ACKEN = 1;
  8388  002264  88C5               	bsf	197,4,c	;volatile
  8389  002266                     
  8390                           ;./I2C.h: 91:     return datoleido;
  8391  002266  5002               	movf	i2c_recibe_dato@datoleido^0,w,c
  8392  002268  0012               	return		;funcret
  8393  00226A                     __end_of_i2c_recibe_dato:
  8394                           	opt callstack 0
  8395                           
  8396 ;; *************** function _i2c_inicia_com *****************
  8397 ;; Defined at:
  8398 ;;		line 28 in file "./I2C.h"
  8399 ;; Parameters:    Size  Location     Type
  8400 ;;		None
  8401 ;; Auto vars:     Size  Location     Type
  8402 ;;		None
  8403 ;; Return value:  Size  Location     Type
  8404 ;;                  1    wreg      void 
  8405 ;; Registers used:
  8406 ;;		wreg, status,2, status,0, cstack
  8407 ;; Tracked objects:
  8408 ;;		On entry : 0/0
  8409 ;;		On exit  : 0/0
  8410 ;;		Unchanged: 0/0
  8411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8412 ;;      Params:         0       0       0       0       0       0       0       0       0
  8413 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8414 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8415 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8416 ;;Total ram usage:        0 bytes
  8417 ;; Hardware stack levels used:    1
  8418 ;; Hardware stack levels required when called:    2
  8419 ;; This function calls:
  8420 ;;		_i2c_espera
  8421 ;; This function is called by:
  8422 ;;		_escribe_rtc
  8423 ;;		_leer_rtc
  8424 ;;		_escribe_eeprom
  8425 ;;		_leer_eeprom
  8426 ;; This function uses a non-reentrant model
  8427 ;;
  8428                           
  8429                           	psect	text49
  8430  0022C0                     __ptext49:
  8431                           	opt callstack 0
  8432  0022C0                     _i2c_inicia_com:
  8433                           	opt callstack 25
  8434  0022C0                     
  8435                           ;./I2C.h: 29:     i2c_espera();
  8436  0022C0  ECD3  F010         	call	_i2c_espera	;wreg free
  8437  0022C4                     
  8438                           ;./I2C.h: 30:     SSPCON2bits.SEN = 1;
  8439  0022C4  80C5               	bsf	197,0,c	;volatile
  8440  0022C6  0012               	return		;funcret
  8441  0022C8                     __end_of_i2c_inicia_com:
  8442                           	opt callstack 0
  8443                           
  8444 ;; *************** function _i2c_envia_dato *****************
  8445 ;; Defined at:
  8446 ;;		line 57 in file "./I2C.h"
  8447 ;; Parameters:    Size  Location     Type
  8448 ;;  dato            1    wreg     unsigned char 
  8449 ;; Auto vars:     Size  Location     Type
  8450 ;;  dato            1    1[COMRAM] unsigned char 
  8451 ;; Return value:  Size  Location     Type
  8452 ;;                  1    wreg      unsigned char 
  8453 ;; Registers used:
  8454 ;;		wreg, status,2, status,0, cstack
  8455 ;; Tracked objects:
  8456 ;;		On entry : 0/0
  8457 ;;		On exit  : 0/0
  8458 ;;		Unchanged: 0/0
  8459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8460 ;;      Params:         0       0       0       0       0       0       0       0       0
  8461 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8462 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8463 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8464 ;;Total ram usage:        1 bytes
  8465 ;; Hardware stack levels used:    1
  8466 ;; Hardware stack levels required when called:    2
  8467 ;; This function calls:
  8468 ;;		_i2c_espera
  8469 ;; This function is called by:
  8470 ;;		_escribe_rtc
  8471 ;;		_leer_rtc
  8472 ;;		_escribe_eeprom
  8473 ;;		_leer_eeprom
  8474 ;; This function uses a non-reentrant model
  8475 ;;
  8476                           
  8477                           	psect	text50
  8478  0022A2                     __ptext50:
  8479                           	opt callstack 0
  8480  0022A2                     _i2c_envia_dato:
  8481                           	opt callstack 25
  8482                           
  8483                           ;incstack = 0
  8484                           ;i2c_envia_dato@dato stored from wreg
  8485  0022A2  6E02               	movwf	i2c_envia_dato@dato^0,c
  8486  0022A4                     
  8487                           ;./I2C.h: 58:     i2c_espera();
  8488  0022A4  ECD3  F010         	call	_i2c_espera	;wreg free
  8489  0022A8                     
  8490                           ;./I2C.h: 59:     SSPBUF = dato;
  8491  0022A8  C002  FFC9         	movff	i2c_envia_dato@dato,4041	;volatile
  8492  0022AC  0012               	return		;funcret
  8493  0022AE                     __end_of_i2c_envia_dato:
  8494                           	opt callstack 0
  8495                           
  8496 ;; *************** function _i2c_detener *****************
  8497 ;; Defined at:
  8498 ;;		line 46 in file "./I2C.h"
  8499 ;; Parameters:    Size  Location     Type
  8500 ;;		None
  8501 ;; Auto vars:     Size  Location     Type
  8502 ;;		None
  8503 ;; Return value:  Size  Location     Type
  8504 ;;                  1    wreg      void 
  8505 ;; Registers used:
  8506 ;;		wreg, status,2, status,0, cstack
  8507 ;; Tracked objects:
  8508 ;;		On entry : 0/0
  8509 ;;		On exit  : 0/0
  8510 ;;		Unchanged: 0/0
  8511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8512 ;;      Params:         0       0       0       0       0       0       0       0       0
  8513 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8514 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8515 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8516 ;;Total ram usage:        0 bytes
  8517 ;; Hardware stack levels used:    1
  8518 ;; Hardware stack levels required when called:    2
  8519 ;; This function calls:
  8520 ;;		_i2c_espera
  8521 ;; This function is called by:
  8522 ;;		_escribe_rtc
  8523 ;;		_leer_rtc
  8524 ;;		_escribe_eeprom
  8525 ;;		_leer_eeprom
  8526 ;; This function uses a non-reentrant model
  8527 ;;
  8528                           
  8529                           	psect	text51
  8530  0022C8                     __ptext51:
  8531                           	opt callstack 0
  8532  0022C8                     _i2c_detener:
  8533                           	opt callstack 25
  8534  0022C8                     
  8535                           ;./I2C.h: 47:     i2c_espera();
  8536  0022C8  ECD3  F010         	call	_i2c_espera	;wreg free
  8537  0022CC                     
  8538                           ;./I2C.h: 48:     SSPCON2bits.PEN = 1;
  8539  0022CC  84C5               	bsf	197,2,c	;volatile
  8540  0022CE  0012               	return		;funcret
  8541  0022D0                     __end_of_i2c_detener:
  8542                           	opt callstack 0
  8543                           
  8544 ;; *************** function _i2c_espera *****************
  8545 ;; Defined at:
  8546 ;;		line 20 in file "./I2C.h"
  8547 ;; Parameters:    Size  Location     Type
  8548 ;;		None
  8549 ;; Auto vars:     Size  Location     Type
  8550 ;;		None
  8551 ;; Return value:  Size  Location     Type
  8552 ;;                  1    wreg      void 
  8553 ;; Registers used:
  8554 ;;		wreg, status,2, status,0
  8555 ;; Tracked objects:
  8556 ;;		On entry : 0/0
  8557 ;;		On exit  : 0/0
  8558 ;;		Unchanged: 0/0
  8559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8560 ;;      Params:         0       0       0       0       0       0       0       0       0
  8561 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8562 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8563 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8564 ;;Total ram usage:        1 bytes
  8565 ;; Hardware stack levels used:    1
  8566 ;; Hardware stack levels required when called:    1
  8567 ;; This function calls:
  8568 ;;		Nothing
  8569 ;; This function is called by:
  8570 ;;		_i2c_inicia_com
  8571 ;;		_i2c_reinicia_com
  8572 ;;		_i2c_detener
  8573 ;;		_i2c_envia_dato
  8574 ;;		_i2c_recibe_dato
  8575 ;; This function uses a non-reentrant model
  8576 ;;
  8577                           
  8578                           	psect	text52
  8579  0021A6                     __ptext52:
  8580                           	opt callstack 0
  8581  0021A6                     _i2c_espera:
  8582                           	opt callstack 25
  8583  0021A6                     l2571:
  8584  0021A6  CFC5 F001          	movff	4037,??_i2c_espera	;volatile
  8585  0021AA  0E1F               	movlw	31
  8586  0021AC  1601               	andwf	??_i2c_espera^0,f,c
  8587  0021AE  A4D8               	btfss	status,2,c
  8588  0021B0  EFDC  F010         	goto	u1661
  8589  0021B4  EFDE  F010         	goto	u1660
  8590  0021B8                     u1661:
  8591  0021B8  EFD3  F010         	goto	l2571
  8592  0021BC                     u1660:
  8593  0021BC  B4C7               	btfsc	199,2,c	;volatile
  8594  0021BE  EFE3  F010         	goto	u1671
  8595  0021C2  EFE5  F010         	goto	u1670
  8596  0021C6                     u1671:
  8597  0021C6  EFD3  F010         	goto	l2571
  8598  0021CA                     u1670:
  8599  0021CA  0012               	return		;funcret
  8600  0021CC                     __end_of_i2c_espera:
  8601                           	opt callstack 0
  8602                           
  8603 ;; *************** function _inicializarObjetos *****************
  8604 ;; Defined at:
  8605 ;;		line 138 in file "main.c"
  8606 ;; Parameters:    Size  Location     Type
  8607 ;;		None
  8608 ;; Auto vars:     Size  Location     Type
  8609 ;;  i               2    6[COMRAM] int 
  8610 ;; Return value:  Size  Location     Type
  8611 ;;                  1    wreg      void 
  8612 ;; Registers used:
  8613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8614 ;; Tracked objects:
  8615 ;;		On entry : 0/0
  8616 ;;		On exit  : 0/0
  8617 ;;		Unchanged: 0/0
  8618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8619 ;;      Params:         0       0       0       0       0       0       0       0       0
  8620 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8621 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8622 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8623 ;;Total ram usage:        2 bytes
  8624 ;; Hardware stack levels used:    1
  8625 ;; Hardware stack levels required when called:    2
  8626 ;; This function calls:
  8627 ;;		___wmul
  8628 ;; This function is called by:
  8629 ;;		_main
  8630 ;; This function uses a non-reentrant model
  8631 ;;
  8632                           
  8633                           	psect	text53
  8634  001994                     __ptext53:
  8635                           	opt callstack 0
  8636  001994                     _inicializarObjetos:
  8637                           	opt callstack 28
  8638  001994                     
  8639                           ;main.c: 140:     for (int i = 0; i < 24; i++) {
  8640  001994  0E00               	movlw	0
  8641  001996  6E08               	movwf	(inicializarObjetos@i+1)^0,c
  8642  001998  0E00               	movlw	0
  8643  00199A  6E07               	movwf	inicializarObjetos@i^0,c
  8644  00199C                     l3473:
  8645                           
  8646                           ;main.c: 141:         horarios[i].hora = i;
  8647  00199C  C007  F001         	movff	inicializarObjetos@i,___wmul@multiplier
  8648  0019A0  C008  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  8649  0019A4  0E00               	movlw	0
  8650  0019A6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8651  0019A8  0E03               	movlw	3
  8652  0019AA  6E03               	movwf	___wmul@multiplicand^0,c
  8653  0019AC  ECE6  F010         	call	___wmul	;wreg free
  8654  0019B0  0E00               	movlw	low _horarios
  8655  0019B2  2401               	addwf	?___wmul^0,w,c
  8656  0019B4  6ED9               	movwf	fsr2l,c
  8657  0019B6  0E01               	movlw	high _horarios
  8658  0019B8  2002               	addwfc	(?___wmul+1)^0,w,c
  8659  0019BA  6EDA               	movwf	fsr2h,c
  8660  0019BC  C007  FFDF         	movff	inicializarObjetos@i,indf2
  8661                           
  8662                           ;main.c: 142:         horarios[i].regar = 0;
  8663  0019C0  C007  F001         	movff	inicializarObjetos@i,___wmul@multiplier
  8664  0019C4  C008  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  8665  0019C8  0E00               	movlw	0
  8666  0019CA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8667  0019CC  0E03               	movlw	3
  8668  0019CE  6E03               	movwf	___wmul@multiplicand^0,c
  8669  0019D0  ECE6  F010         	call	___wmul	;wreg free
  8670  0019D4  0E01               	movlw	low (_horarios+1)
  8671  0019D6  2401               	addwf	?___wmul^0,w,c
  8672  0019D8  6ED9               	movwf	fsr2l,c
  8673  0019DA  0E01               	movlw	high (_horarios+1)
  8674  0019DC  2002               	addwfc	(?___wmul+1)^0,w,c
  8675  0019DE  6EDA               	movwf	fsr2h,c
  8676  0019E0  0E00               	movlw	0
  8677  0019E2  6EDF               	movwf	indf2,c
  8678                           
  8679                           ;main.c: 143:         horarios[i].tiempoRegar = 15;
  8680  0019E4  C007  F001         	movff	inicializarObjetos@i,___wmul@multiplier
  8681  0019E8  C008  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  8682  0019EC  0E00               	movlw	0
  8683  0019EE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8684  0019F0  0E03               	movlw	3
  8685  0019F2  6E03               	movwf	___wmul@multiplicand^0,c
  8686  0019F4  ECE6  F010         	call	___wmul	;wreg free
  8687  0019F8  0E02               	movlw	low (_horarios+2)
  8688  0019FA  2401               	addwf	?___wmul^0,w,c
  8689  0019FC  6ED9               	movwf	fsr2l,c
  8690  0019FE  0E01               	movlw	high (_horarios+2)
  8691  001A00  2002               	addwfc	(?___wmul+1)^0,w,c
  8692  001A02  6EDA               	movwf	fsr2h,c
  8693  001A04  0E0F               	movlw	15
  8694  001A06  6EDF               	movwf	indf2,c
  8695  001A08                     
  8696                           ;main.c: 144:     }
  8697  001A08  4A07               	infsnz	inicializarObjetos@i^0,f,c
  8698  001A0A  2A08               	incf	(inicializarObjetos@i+1)^0,f,c
  8699  001A0C  BE08               	btfsc	(inicializarObjetos@i+1)^0,7,c
  8700  001A0E  EF12  F00D         	goto	u2701
  8701  001A12  5008               	movf	(inicializarObjetos@i+1)^0,w,c
  8702  001A14  E109               	bnz	u2700
  8703  001A16  0E18               	movlw	24
  8704  001A18  5C07               	subwf	inicializarObjetos@i^0,w,c
  8705  001A1A  A0D8               	btfss	status,0,c
  8706  001A1C  EF12  F00D         	goto	u2701
  8707  001A20  EF14  F00D         	goto	u2700
  8708  001A24                     u2701:
  8709  001A24  EFCE  F00C         	goto	l3473
  8710  001A28                     u2700:
  8711  001A28  0012               	return		;funcret
  8712  001A2A                     __end_of_inicializarObjetos:
  8713                           	opt callstack 0
  8714                           
  8715 ;; *************** function ___wmul *****************
  8716 ;; Defined at:
  8717 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  8718 ;; Parameters:    Size  Location     Type
  8719 ;;  multiplier      2    0[COMRAM] unsigned int 
  8720 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8721 ;; Auto vars:     Size  Location     Type
  8722 ;;  product         2    4[COMRAM] unsigned int 
  8723 ;; Return value:  Size  Location     Type
  8724 ;;                  2    0[COMRAM] unsigned int 
  8725 ;; Registers used:
  8726 ;;		wreg, status,2, status,0, prodl, prodh
  8727 ;; Tracked objects:
  8728 ;;		On entry : 0/0
  8729 ;;		On exit  : 0/0
  8730 ;;		Unchanged: 0/0
  8731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8732 ;;      Params:         4       0       0       0       0       0       0       0       0
  8733 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8734 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8735 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8736 ;;Total ram usage:        6 bytes
  8737 ;; Hardware stack levels used:    1
  8738 ;; Hardware stack levels required when called:    1
  8739 ;; This function calls:
  8740 ;;		Nothing
  8741 ;; This function is called by:
  8742 ;;		_inicializarObjetos
  8743 ;;		_escribeHorariosMemoria
  8744 ;;		_leeHorariosMemoria
  8745 ;;		_encenderBombas
  8746 ;;		_restablecerDatosSensor
  8747 ;;		_lecturaWifi
  8748 ;;		_lecturaAnalogaSensores
  8749 ;;		_dameDatosSistema
  8750 ;;		_mostrarDatosSensores
  8751 ;;		_mostrarDatosSensoresWIFI
  8752 ;; This function uses a non-reentrant model
  8753 ;;
  8754                           
  8755                           	psect	text54
  8756  0021CC                     __ptext54:
  8757                           	opt callstack 0
  8758  0021CC                     ___wmul:
  8759                           	opt callstack 26
  8760  0021CC  5001               	movf	___wmul@multiplier^0,w,c
  8761  0021CE  0203               	mulwf	___wmul@multiplicand^0,c
  8762  0021D0  CFF3 F005          	movff	prodl,___wmul@product
  8763  0021D4  CFF4 F006          	movff	prodh,___wmul@product+1
  8764  0021D8  5001               	movf	___wmul@multiplier^0,w,c
  8765  0021DA  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8766  0021DC  50F3               	movf	243,w,c
  8767  0021DE  2606               	addwf	(___wmul@product+1)^0,f,c
  8768  0021E0  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8769  0021E2  0203               	mulwf	___wmul@multiplicand^0,c
  8770  0021E4  50F3               	movf	243,w,c
  8771  0021E6  2606               	addwf	(___wmul@product+1)^0,f,c
  8772  0021E8  C005  F001         	movff	___wmul@product,?___wmul
  8773  0021EC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8774  0021F0  0012               	return		;funcret
  8775  0021F2                     __end_of___wmul:
  8776                           	opt callstack 0
  8777                           
  8778 ;; *************** function _i2c_iniciar *****************
  8779 ;; Defined at:
  8780 ;;		line 4 in file "./I2C.h"
  8781 ;; Parameters:    Size  Location     Type
  8782 ;;		None
  8783 ;; Auto vars:     Size  Location     Type
  8784 ;;		None
  8785 ;; Return value:  Size  Location     Type
  8786 ;;                  1    wreg      void 
  8787 ;; Registers used:
  8788 ;;		wreg, status,2
  8789 ;; Tracked objects:
  8790 ;;		On entry : 0/0
  8791 ;;		On exit  : 0/0
  8792 ;;		Unchanged: 0/0
  8793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8794 ;;      Params:         0       0       0       0       0       0       0       0       0
  8795 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8796 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8797 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8798 ;;Total ram usage:        0 bytes
  8799 ;; Hardware stack levels used:    1
  8800 ;; Hardware stack levels required when called:    1
  8801 ;; This function calls:
  8802 ;;		Nothing
  8803 ;; This function is called by:
  8804 ;;		_main
  8805 ;; This function uses a non-reentrant model
  8806 ;;
  8807                           
  8808                           	psect	text55
  8809  002280                     __ptext55:
  8810                           	opt callstack 0
  8811  002280                     _i2c_iniciar:
  8812                           	opt callstack 29
  8813  002280                     
  8814                           ;./I2C.h: 5:     TRISBbits.RB0 = 1;
  8815  002280  8093               	bsf	147,0,c	;volatile
  8816                           
  8817                           ;./I2C.h: 6:     TRISBbits.RB1 = 1;
  8818  002282  8293               	bsf	147,1,c	;volatile
  8819  002284                     
  8820                           ;./I2C.h: 7:     SSPSTAT = 0b10000000;
  8821  002284  0E80               	movlw	128
  8822  002286  6EC7               	movwf	199,c	;volatile
  8823                           
  8824                           ;./I2C.h: 8:     SSPCON1 = 0b00101000;
  8825  002288  0E28               	movlw	40
  8826  00228A  6EC6               	movwf	198,c	;volatile
  8827                           
  8828                           ;./I2C.h: 9:     SSPCON2 = 0b00000000;
  8829  00228C  0E00               	movlw	0
  8830  00228E  6EC5               	movwf	197,c	;volatile
  8831                           
  8832                           ;./I2C.h: 10:     SSPADD = 9;
  8833  002290  0E09               	movlw	9
  8834  002292  6EC8               	movwf	200,c	;volatile
  8835  002294  0012               	return		;funcret
  8836  002296                     __end_of_i2c_iniciar:
  8837                           	opt callstack 0
  8838                           
  8839 ;; *************** function _configurarAdc *****************
  8840 ;; Defined at:
  8841 ;;		line 119 in file "main.c"
  8842 ;; Parameters:    Size  Location     Type
  8843 ;;		None
  8844 ;; Auto vars:     Size  Location     Type
  8845 ;;		None
  8846 ;; Return value:  Size  Location     Type
  8847 ;;                  1    wreg      void 
  8848 ;; Registers used:
  8849 ;;		wreg, status,2
  8850 ;; Tracked objects:
  8851 ;;		On entry : 0/0
  8852 ;;		On exit  : 0/0
  8853 ;;		Unchanged: 0/0
  8854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8855 ;;      Params:         0       0       0       0       0       0       0       0       0
  8856 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8857 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8858 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8859 ;;Total ram usage:        0 bytes
  8860 ;; Hardware stack levels used:    1
  8861 ;; Hardware stack levels required when called:    1
  8862 ;; This function calls:
  8863 ;;		Nothing
  8864 ;; This function is called by:
  8865 ;;		_main
  8866 ;; This function uses a non-reentrant model
  8867 ;;
  8868                           
  8869                           	psect	text56
  8870  0022AE                     __ptext56:
  8871                           	opt callstack 0
  8872  0022AE                     _configurarAdc:
  8873                           	opt callstack 29
  8874  0022AE                     
  8875                           ;main.c: 120:     ADCON1 = 0b00000000;
  8876  0022AE  0E00               	movlw	0
  8877  0022B0  6EC1               	movwf	193,c	;volatile
  8878                           
  8879                           ;main.c: 121:     ADCON2 = 0b10100101;
  8880  0022B2  0EA5               	movlw	165
  8881  0022B4  6EC0               	movwf	192,c	;volatile
  8882  0022B6  0012               	return		;funcret
  8883  0022B8                     __end_of_configurarAdc:
  8884                           	opt callstack 0
  8885                           
  8886 ;; *************** function _UART_init *****************
  8887 ;; Defined at:
  8888 ;;		line 12 in file "./UART.h"
  8889 ;; Parameters:    Size  Location     Type
  8890 ;;  BAUD            4   14[COMRAM] long 
  8891 ;; Auto vars:     Size  Location     Type
  8892 ;;  frecuenciaCr    4    0        long 
  8893 ;; Return value:  Size  Location     Type
  8894 ;;                  1    wreg      void 
  8895 ;; Registers used:
  8896 ;;		wreg, status,2, status,0, cstack
  8897 ;; Tracked objects:
  8898 ;;		On entry : 0/0
  8899 ;;		On exit  : 0/0
  8900 ;;		Unchanged: 0/0
  8901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8902 ;;      Params:         4       0       0       0       0       0       0       0       0
  8903 ;;      Locals:         8       0       0       0       0       0       0       0       0
  8904 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8905 ;;      Totals:        12       0       0       0       0       0       0       0       0
  8906 ;;Total ram usage:       12 bytes
  8907 ;; Hardware stack levels used:    1
  8908 ;; Hardware stack levels required when called:    2
  8909 ;; This function calls:
  8910 ;;		___aldiv
  8911 ;; This function is called by:
  8912 ;;		_main
  8913 ;; This function uses a non-reentrant model
  8914 ;;
  8915                           
  8916                           	psect	text57
  8917  001AB4                     __ptext57:
  8918                           	opt callstack 0
  8919  001AB4                     _UART_init:
  8920                           	opt callstack 28
  8921  001AB4                     
  8922                           ;./UART.h: 14:     TRISCbits.TRISC6 = 0;
  8923  001AB4  9C94               	bcf	148,6,c	;volatile
  8924  001AB6                     
  8925                           ;./UART.h: 15:     TRISCbits.TRISC7 = 1;
  8926  001AB6  8E94               	bsf	148,7,c	;volatile
  8927  001AB8                     
  8928                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
  8929  001AB8  0E10               	movlw	16
  8930  001ABA  6E05               	movwf	___aldiv@divisor^0,c
  8931  001ABC  0E00               	movlw	0
  8932  001ABE  6E06               	movwf	(___aldiv@divisor+1)^0,c
  8933  001AC0  0E00               	movlw	0
  8934  001AC2  6E07               	movwf	(___aldiv@divisor+2)^0,c
  8935  001AC4  0E00               	movlw	0
  8936  001AC6  6E08               	movwf	(___aldiv@divisor+3)^0,c
  8937  001AC8  0E00               	movlw	0
  8938  001ACA  6E01               	movwf	___aldiv@dividend^0,c
  8939  001ACC  0E09               	movlw	9
  8940  001ACE  6E02               	movwf	(___aldiv@dividend+1)^0,c
  8941  001AD0  0E3D               	movlw	61
  8942  001AD2  6E03               	movwf	(___aldiv@dividend+2)^0,c
  8943  001AD4  0E00               	movlw	0
  8944  001AD6  6E04               	movwf	(___aldiv@dividend+3)^0,c
  8945  001AD8  EC0E  F008         	call	___aldiv	;wreg free
  8946  001ADC  C001  F017         	movff	?___aldiv,_UART_init$1778
  8947  001AE0  C002  F018         	movff	?___aldiv+1,_UART_init$1778+1
  8948  001AE4  C003  F019         	movff	?___aldiv+2,_UART_init$1778+2
  8949  001AE8  C004  F01A         	movff	?___aldiv+3,_UART_init$1778+3
  8950  001AEC                     
  8951                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
  8952  001AEC  C017  F001         	movff	_UART_init$1778,___aldiv@dividend
  8953  001AF0  C018  F002         	movff	_UART_init$1778+1,___aldiv@dividend+1
  8954  001AF4  C019  F003         	movff	_UART_init$1778+2,___aldiv@dividend+2
  8955  001AF8  C01A  F004         	movff	_UART_init$1778+3,___aldiv@dividend+3
  8956  001AFC  C00F  F005         	movff	UART_init@BAUD,___aldiv@divisor
  8957  001B00  C010  F006         	movff	UART_init@BAUD+1,___aldiv@divisor+1
  8958  001B04  C011  F007         	movff	UART_init@BAUD+2,___aldiv@divisor+2
  8959  001B08  C012  F008         	movff	UART_init@BAUD+3,___aldiv@divisor+3
  8960  001B0C  EC0E  F008         	call	___aldiv	;wreg free
  8961  001B10  0401               	decf	?___aldiv^0,w,c
  8962  001B12  6EAF               	movwf	175,c	;volatile
  8963  001B14                     
  8964                           ;./UART.h: 21:     TXSTAbits.BRGH = 1;
  8965  001B14  84AC               	bsf	172,2,c	;volatile
  8966  001B16                     
  8967                           ;./UART.h: 22:     TXSTAbits.SYNC = 0;
  8968  001B16  98AC               	bcf	172,4,c	;volatile
  8969  001B18                     
  8970                           ;./UART.h: 23:     RCSTAbits.SPEN = 1;
  8971  001B18  8EAB               	bsf	171,7,c	;volatile
  8972  001B1A                     
  8973                           ;./UART.h: 26:     TXSTAbits.TX9 = 0;
  8974  001B1A  9CAC               	bcf	172,6,c	;volatile
  8975  001B1C                     
  8976                           ;./UART.h: 27:     TXSTAbits.TXEN = 1;
  8977  001B1C  8AAC               	bsf	172,5,c	;volatile
  8978  001B1E                     
  8979                           ;./UART.h: 30:     RCSTAbits.RC9 = 0;
  8980  001B1E  9CAB               	bcf	171,6,c	;volatile
  8981  001B20                     
  8982                           ;./UART.h: 31:     RCSTAbits.CREN = 1;
  8983  001B20  88AB               	bsf	171,4,c	;volatile
  8984  001B22  0012               	return		;funcret
  8985  001B24                     __end_of_UART_init:
  8986                           	opt callstack 0
  8987                           
  8988 ;; *************** function ___aldiv *****************
  8989 ;; Defined at:
  8990 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  8991 ;; Parameters:    Size  Location     Type
  8992 ;;  dividend        4    0[COMRAM] long 
  8993 ;;  divisor         4    4[COMRAM] long 
  8994 ;; Auto vars:     Size  Location     Type
  8995 ;;  quotient        4   10[COMRAM] long 
  8996 ;;  sign            1    9[COMRAM] unsigned char 
  8997 ;;  counter         1    8[COMRAM] unsigned char 
  8998 ;; Return value:  Size  Location     Type
  8999 ;;                  4    0[COMRAM] long 
  9000 ;; Registers used:
  9001 ;;		wreg, status,2, status,0
  9002 ;; Tracked objects:
  9003 ;;		On entry : 0/0
  9004 ;;		On exit  : 0/0
  9005 ;;		Unchanged: 0/0
  9006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9007 ;;      Params:         8       0       0       0       0       0       0       0       0
  9008 ;;      Locals:         6       0       0       0       0       0       0       0       0
  9009 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9010 ;;      Totals:        14       0       0       0       0       0       0       0       0
  9011 ;;Total ram usage:       14 bytes
  9012 ;; Hardware stack levels used:    1
  9013 ;; Hardware stack levels required when called:    1
  9014 ;; This function calls:
  9015 ;;		Nothing
  9016 ;; This function is called by:
  9017 ;;		_UART_init
  9018 ;; This function uses a non-reentrant model
  9019 ;;
  9020                           
  9021                           	psect	text58
  9022  00101C                     __ptext58:
  9023                           	opt callstack 0
  9024  00101C                     ___aldiv:
  9025                           	opt callstack 28
  9026  00101C  0E00               	movlw	0
  9027  00101E  6E0A               	movwf	___aldiv@sign^0,c
  9028  001020  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  9029  001022  EF17  F008         	goto	u2640
  9030  001026  EF15  F008         	goto	u2641
  9031  00102A                     u2641:
  9032  00102A  EF21  F008         	goto	l3401
  9033  00102E                     u2640:
  9034  00102E  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  9035  001030  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  9036  001032  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  9037  001034  6C05               	negf	___aldiv@divisor^0,c
  9038  001036  0E00               	movlw	0
  9039  001038  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  9040  00103A  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  9041  00103C  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  9042  00103E  0E01               	movlw	1
  9043  001040  6E0A               	movwf	___aldiv@sign^0,c
  9044  001042                     l3401:
  9045  001042  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  9046  001044  EF28  F008         	goto	u2650
  9047  001048  EF26  F008         	goto	u2651
  9048  00104C                     u2651:
  9049  00104C  EF32  F008         	goto	l3407
  9050  001050                     u2650:
  9051  001050  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  9052  001052  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  9053  001054  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  9054  001056  6C01               	negf	___aldiv@dividend^0,c
  9055  001058  0E00               	movlw	0
  9056  00105A  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  9057  00105C  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  9058  00105E  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  9059  001060  0E01               	movlw	1
  9060  001062  1A0A               	xorwf	___aldiv@sign^0,f,c
  9061  001064                     l3407:
  9062  001064  0E00               	movlw	0
  9063  001066  6E0B               	movwf	___aldiv@quotient^0,c
  9064  001068  0E00               	movlw	0
  9065  00106A  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  9066  00106C  0E00               	movlw	0
  9067  00106E  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  9068  001070  0E00               	movlw	0
  9069  001072  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  9070  001074  5005               	movf	___aldiv@divisor^0,w,c
  9071  001076  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  9072  001078  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  9073  00107A  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  9074  00107C  B4D8               	btfsc	status,2,c
  9075  00107E  EF43  F008         	goto	u2661
  9076  001082  EF45  F008         	goto	u2660
  9077  001086                     u2661:
  9078  001086  EF7B  F008         	goto	l3429
  9079  00108A                     u2660:
  9080  00108A  0E01               	movlw	1
  9081  00108C  6E09               	movwf	___aldiv@counter^0,c
  9082  00108E  EF4F  F008         	goto	l3415
  9083  001092                     l3413:
  9084  001092  90D8               	bcf	status,0,c
  9085  001094  3605               	rlcf	___aldiv@divisor^0,f,c
  9086  001096  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  9087  001098  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  9088  00109A  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  9089  00109C  2A09               	incf	___aldiv@counter^0,f,c
  9090  00109E                     l3415:
  9091  00109E  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  9092  0010A0  EF54  F008         	goto	u2671
  9093  0010A4  EF56  F008         	goto	u2670
  9094  0010A8                     u2671:
  9095  0010A8  EF49  F008         	goto	l3413
  9096  0010AC                     u2670:
  9097  0010AC                     l3417:
  9098  0010AC  90D8               	bcf	status,0,c
  9099  0010AE  360B               	rlcf	___aldiv@quotient^0,f,c
  9100  0010B0  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  9101  0010B2  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  9102  0010B4  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  9103  0010B6  5005               	movf	___aldiv@divisor^0,w,c
  9104  0010B8  5C01               	subwf	___aldiv@dividend^0,w,c
  9105  0010BA  5006               	movf	(___aldiv@divisor+1)^0,w,c
  9106  0010BC  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  9107  0010BE  5007               	movf	(___aldiv@divisor+2)^0,w,c
  9108  0010C0  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  9109  0010C2  5008               	movf	(___aldiv@divisor+3)^0,w,c
  9110  0010C4  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  9111  0010C6  A0D8               	btfss	status,0,c
  9112  0010C8  EF68  F008         	goto	u2681
  9113  0010CC  EF6A  F008         	goto	u2680
  9114  0010D0                     u2681:
  9115  0010D0  EF73  F008         	goto	l3425
  9116  0010D4                     u2680:
  9117  0010D4  5005               	movf	___aldiv@divisor^0,w,c
  9118  0010D6  5E01               	subwf	___aldiv@dividend^0,f,c
  9119  0010D8  5006               	movf	(___aldiv@divisor+1)^0,w,c
  9120  0010DA  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  9121  0010DC  5007               	movf	(___aldiv@divisor+2)^0,w,c
  9122  0010DE  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  9123  0010E0  5008               	movf	(___aldiv@divisor+3)^0,w,c
  9124  0010E2  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  9125  0010E4  800B               	bsf	___aldiv@quotient^0,0,c
  9126  0010E6                     l3425:
  9127  0010E6  90D8               	bcf	status,0,c
  9128  0010E8  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  9129  0010EA  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  9130  0010EC  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  9131  0010EE  3205               	rrcf	___aldiv@divisor^0,f,c
  9132  0010F0  2E09               	decfsz	___aldiv@counter^0,f,c
  9133  0010F2  EF56  F008         	goto	l3417
  9134  0010F6                     l3429:
  9135  0010F6  500A               	movf	___aldiv@sign^0,w,c
  9136  0010F8  B4D8               	btfsc	status,2,c
  9137  0010FA  EF81  F008         	goto	u2691
  9138  0010FE  EF83  F008         	goto	u2690
  9139  001102                     u2691:
  9140  001102  EF8B  F008         	goto	l3433
  9141  001106                     u2690:
  9142  001106  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  9143  001108  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  9144  00110A  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  9145  00110C  6C0B               	negf	___aldiv@quotient^0,c
  9146  00110E  0E00               	movlw	0
  9147  001110  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  9148  001112  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  9149  001114  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  9150  001116                     l3433:
  9151  001116  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  9152  00111A  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  9153  00111E  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  9154  001122  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  9155  001126  0012               	return		;funcret
  9156  001128                     __end_of___aldiv:
  9157                           	opt callstack 0
  9158                           
  9159 ;; *************** function _desbordamiento *****************
  9160 ;; Defined at:
  9161 ;;		line 84 in file "main.c"
  9162 ;; Parameters:    Size  Location     Type
  9163 ;;		None
  9164 ;; Auto vars:     Size  Location     Type
  9165 ;;		None
  9166 ;; Return value:  Size  Location     Type
  9167 ;;                  1    wreg      void 
  9168 ;; Registers used:
  9169 ;;		wreg, status,2, status,0
  9170 ;; Tracked objects:
  9171 ;;		On entry : 0/0
  9172 ;;		On exit  : 0/0
  9173 ;;		Unchanged: 0/0
  9174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9175 ;;      Params:         0       0       0       0       0       0       0       0       0
  9176 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9177 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9178 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9179 ;;Total ram usage:        0 bytes
  9180 ;; Hardware stack levels used:    1
  9181 ;; This function calls:
  9182 ;;		Nothing
  9183 ;; This function is called by:
  9184 ;;		Interrupt level 2
  9185 ;; This function uses a non-reentrant model
  9186 ;;
  9187                           
  9188                           	psect	intcode
  9189  000008                     __pintcode:
  9190                           	opt callstack 0
  9191  000008                     _desbordamiento:
  9192                           	opt callstack 20
  9193                           
  9194                           ;incstack = 0
  9195  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9196  00000A  EDFA  F00D         	call	int_func,f	;refresh shadow registers
  9197                           
  9198                           	psect	intcode_body
  9199  001BF4                     __pintcode_body:
  9200                           	opt callstack 20
  9201  001BF4                     int_func:
  9202                           	opt callstack 20
  9203  001BF4  0006               	pop		; remove dummy address from shadow register refresh
  9204  001BF6                     
  9205                           ;main.c: 86:     if (INTCONbits.TMR0IF) {
  9206  001BF6  A4F2               	btfss	242,2,c	;volatile
  9207  001BF8  EF00  F00E         	goto	i2u277_41
  9208  001BFC  EF02  F00E         	goto	i2u277_40
  9209  001C00                     i2u277_41:
  9210  001C00  EF1F  F00E         	goto	i2l3579
  9211  001C04                     i2u277_40:
  9212  001C04                     
  9213                           ;main.c: 88:         if (esperandoDatos) {
  9214  001C04  505E               	movf	_esperandoDatos^0,w,c
  9215  001C06  B4D8               	btfsc	status,2,c
  9216  001C08  EF08  F00E         	goto	i2u278_41
  9217  001C0C  EF0A  F00E         	goto	i2u278_40
  9218  001C10                     i2u278_41:
  9219  001C10  EF17  F00E         	goto	i2l3575
  9220  001C14                     i2u278_40:
  9221  001C14                     
  9222                           ;main.c: 90:             tiempoInactividadTrans++;
  9223  001C14  0100               	movlb	0	; () banked
  9224  001C16  2B8D               	incf	_tiempoInactividadTrans& (0+255),f,b
  9225  001C18                     
  9226                           ; BSR set to: 0
  9227                           ;main.c: 92:             if (tiempoInactividadTrans == 2)
  9228  001C18  0E02               	movlw	2
  9229  001C1A  198D               	xorwf	_tiempoInactividadTrans& (0+255),w,b
  9230  001C1C  A4D8               	btfss	status,2,c
  9231  001C1E  EF13  F00E         	goto	i2u279_41
  9232  001C22  EF15  F00E         	goto	i2u279_40
  9233  001C26                     i2u279_41:
  9234  001C26  EF17  F00E         	goto	i2l3575
  9235  001C2A                     i2u279_40:
  9236  001C2A                     
  9237                           ; BSR set to: 0
  9238                           ;main.c: 93:                 esperaDatoConcluida = 1;
  9239  001C2A  0E01               	movlw	1
  9240  001C2C  6F8B               	movwf	_esperaDatoConcluida& (0+255),b
  9241  001C2E                     i2l3575:
  9242                           
  9243                           ;main.c: 98:         INTCONbits.TMR0IF = 0;
  9244  001C2E  94F2               	bcf	242,2,c	;volatile
  9245  001C30                     
  9246                           ;main.c: 99:         TMR0 = VALOR_TIMER0;
  9247  001C30  C0FA  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
  9248  001C34  C0FB  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
  9249                           
  9250                           ;main.c: 100:         overflowTimer = 1;
  9251  001C38  0E01               	movlw	1
  9252  001C3A  0100               	movlb	0	; () banked
  9253  001C3C  6F86               	movwf	_overflowTimer& (0+255),b
  9254  001C3E                     i2l3579:
  9255                           
  9256                           ;main.c: 104:     if (PIR1bits.RCIF) {
  9257  001C3E  AA9E               	btfss	158,5,c	;volatile
  9258  001C40  EF24  F00E         	goto	i2u280_41
  9259  001C44  EF26  F00E         	goto	i2u280_40
  9260  001C48                     i2u280_41:
  9261  001C48  EF2B  F00E         	goto	i2l195
  9262  001C4C                     i2u280_40:
  9263  001C4C                     
  9264                           ;main.c: 106:         byteUart = RCREG;
  9265  001C4C  CFAE F08C          	movff	4014,_byteUart	;volatile
  9266  001C50                     
  9267                           ;main.c: 107:         datoRecibido = 1;
  9268  001C50  0E01               	movlw	1
  9269  001C52  0100               	movlb	0	; () banked
  9270  001C54  6F87               	movwf	_datoRecibido& (0+255),b
  9271  001C56                     i2l195:
  9272  001C56  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9273  001C58  0011               	retfie		f
  9274  001C5A                     __end_of_desbordamiento:
  9275                           	opt callstack 0
  9276                           
  9277                           	psect	rparam
  9278  0000                     
  9279                           	psect	temp
  9280  00005F                     btemp:
  9281                           	opt callstack 0
  9282  00005F                     	ds	1
  9283  0000                     int$flags	set	btemp
  9284  0000                     wtemp8	set	btemp+1
  9285  0000                     ttemp5	set	btemp+1
  9286  0000                     ttemp6	set	btemp+4
  9287  0000                     ttemp7	set	btemp+8
  9288                           tosu	equ	0xFFF
  9289                           tosh	equ	0xFFE
  9290                           tosl	equ	0xFFD
  9291                           stkptr	equ	0xFFC
  9292                           pclatu	equ	0xFFB
  9293                           pclath	equ	0xFFA
  9294                           pcl	equ	0xFF9
  9295                           tblptru	equ	0xFF8
  9296                           tblptrh	equ	0xFF7
  9297                           tblptrl	equ	0xFF6
  9298                           tablat	equ	0xFF5
  9299                           prodh	equ	0xFF4
  9300                           prodl	equ	0xFF3
  9301                           indf0	equ	0xFEF
  9302                           postinc0	equ	0xFEE
  9303                           postdec0	equ	0xFED
  9304                           preinc0	equ	0xFEC
  9305                           plusw0	equ	0xFEB
  9306                           fsr0h	equ	0xFEA
  9307                           fsr0l	equ	0xFE9
  9308                           wreg	equ	0xFE8
  9309                           indf1	equ	0xFE7
  9310                           postinc1	equ	0xFE6
  9311                           postdec1	equ	0xFE5
  9312                           preinc1	equ	0xFE4
  9313                           plusw1	equ	0xFE3
  9314                           fsr1h	equ	0xFE2
  9315                           fsr1l	equ	0xFE1
  9316                           bsr	equ	0xFE0
  9317                           indf2	equ	0xFDF
  9318                           postinc2	equ	0xFDE
  9319                           postdec2	equ	0xFDD
  9320                           preinc2	equ	0xFDC
  9321                           plusw2	equ	0xFDB
  9322                           fsr2h	equ	0xFDA
  9323                           fsr2l	equ	0xFD9
  9324                           status	equ	0xFD8


Data Sizes:
    Strings     1071
    Constant    0
    Data        4
    BSS         151
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160     76     158
    BANK1           256      0      72
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_35(CODE[29]), STR_34(CODE[32]), STR_33(CODE[40]), STR_32(CODE[38]), 
		 -> STR_31(CODE[42]), STR_30(CODE[29]), STR_29(CODE[32]), STR_26(CODE[16]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1466_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_35(CODE[29]), STR_34(CODE[32]), STR_33(CODE[40]), STR_32(CODE[38]), 
		 -> STR_31(CODE[42]), STR_30(CODE[29]), STR_29(CODE[32]), STR_26(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 42
		 -> STR_35(CODE[29]), STR_34(CODE[32]), STR_33(CODE[40]), STR_32(CODE[38]), 
		 -> STR_31(CODE[42]), STR_30(CODE[29]), STR_29(CODE[32]), STR_26(CODE[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    dameTemperaturaHumedad@Temperatura	PTR unsigned char  size(2) Largest target is 1
		 -> mostrarDatosSensoresWIFI@temperatura(BANK0[1]), mostrarDatosSensores@temperatura(BANK0[1]), estaSeco@temperatura(COMRAM[1]), 

    dameTemperaturaHumedad@Humedad	PTR unsigned char  size(2) Largest target is 1
		 -> mostrarDatosSensoresWIFI@humedad(BANK0[1]), mostrarDatosSensores@humedad(BANK0[1]), NULL(NULL[0]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 72
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> dameDatosSistema@buffer(BANK0[50]), STR_25(CODE[50]), STR_24(CODE[42]), STR_23(CODE[3]), 
		 -> STR_22(CODE[14]), STR_21(CODE[34]), STR_20(CODE[32]), STR_19(CODE[49]), 
		 -> STR_18(CODE[37]), STR_17(CODE[27]), STR_16(CODE[37]), STR_15(CODE[32]), 
		 -> STR_14(CODE[28]), STR_13(CODE[38]), STR_12(CODE[37]), STR_11(CODE[72]), 
		 -> STR_10(CODE[51]), STR_9(CODE[23]), STR_8(CODE[26]), STR_7(CODE[55]), 
		 -> STR_6(CODE[51]), STR_5(CODE[25]), STR_4(CODE[37]), STR_3(CODE[31]), 
		 -> STR_2(CODE[43]), STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_sistemaPrincipal
    _sistemaRegado->_encenderBombas
    _encenderBombas->_estaSeco
    _estaSeco->_dameTemperaturaHumedad
    _dameHoraActual->_leer_rtc
    _leer_rtc->_i2c_envia_dato
    _leer_rtc->_i2c_recibe_dato
    _sistemaPrincipal->_dameDatosSistema
    _setTiempoRegar->_escribeHorariosMemoria
    _mostrarMenu->_UART_printf
    _lecturaWifi->_restablecerDatosSensor
    _restablecerDatosSensor->_constructorSensor
    _constructorSensor->___wmul
    _lecturaAnalogaSensores->___wmul
    _dameTemperaturaHumedad->_UART_printf
    _fijaHoraRtc->_setRtc
    _setRtc->_escribe_rtc
    _escribe_rtc->_i2c_envia_dato
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _asignarHorarios->_escribeHorariosMemoria
    _escribeHorariosMemoria->_escribe_eeprom
    _escribe_eeprom->___wmul
    _UART_printf->_UART_write
    _leeHorariosMemoria->___wmul
    _leeHorariosMemoria->_leer_eeprom
    _leer_eeprom->_i2c_envia_dato
    _leer_eeprom->_i2c_recibe_dato
    _i2c_reinicia_com->_i2c_espera
    _i2c_recibe_dato->_i2c_espera
    _i2c_inicia_com->_i2c_espera
    _i2c_envia_dato->_i2c_espera
    _i2c_detener->_i2c_espera
    _inicializarObjetos->___wmul
    _UART_init->___aldiv

Critical Paths under _desbordamiento in COMRAM

    None.

Critical Paths under _main in BANK0

    _sistemaPrincipal->_mostrarDatosSensores
    _mostrarDatosSensoresWIFI->_sprintf
    _mostrarDatosSensores->_sprintf
    _dameDatosSistema->_sprintf

Critical Paths under _desbordamiento in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _desbordamiento in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _desbordamiento in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _desbordamiento in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _desbordamiento in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _desbordamiento in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _desbordamiento in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _desbordamiento in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  142566
                          _UART_init
                      _configurarAdc
                        _i2c_iniciar
                 _inicializarObjetos
                 _leeHorariosMemoria
                        _mostrarMenu
             _restablecerDatosSensor
                   _sistemaPrincipal
                      _sistemaRegado
 ---------------------------------------------------------------------------------
 (1) _sistemaRegado                                        0     0      0   28823
                     _dameHoraActual
                     _encenderBombas
                          _horaRegar
             _lecturaAnalogaSensores
                        _lecturaWifi
                        _mostrarMenu
 ---------------------------------------------------------------------------------
 (2) _horaRegar                                            3     1      2       0
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _encenderBombas                                       5     5      0    9008
                                             20 COMRAM     5     5      0
                             ___wmul
                           _estaSeco
 ---------------------------------------------------------------------------------
 (3) _estaSeco                                             5     2      3    4226
                                             15 COMRAM     5     2      3
                             ___wmul (ARG)
             _dameTemperaturaHumedad
 ---------------------------------------------------------------------------------
 (2) _dameHoraActual                                       0     0      0     181
                      _convertirDato
                           _leer_rtc
 ---------------------------------------------------------------------------------
 (3) _leer_rtc                                             2     2      0      90
                                              2 COMRAM     2     2      0
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (3) _convertirDato                                        3     3      0      91
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _sistemaPrincipal                                     3     3      0   95704
                                             90 COMRAM     3     3      0
                        _UART_printf
                    _asignarHorarios
                   _dameDatosSistema
                        _fijaHoraRtc
               _mostrarDatosSensores
           _mostrarDatosSensoresWIFI
                        _mostrarMenu
                     _setTiempoRegar
 ---------------------------------------------------------------------------------
 (2) _setTiempoRegar                                       8     8      0    8421
                                             14 COMRAM     8     8      0
                        _UART_printf
                          _UART_read
                         _UART_write
             _escribeHorariosMemoria
 ---------------------------------------------------------------------------------
 (2) _mostrarMenu                                          0     0      0    2727
                        _UART_printf
 ---------------------------------------------------------------------------------
 (2) _mostrarDatosSensoresWIFI                            56    56      0   30976
                                             87 COMRAM     2     2      0
                                             20 BANK0     54    54      0
                        _UART_printf
                         _UART_write
                             ___wmul
             _dameTemperaturaHumedad
                        _lecturaWifi
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lecturaWifi                                          3     3      0   12288
                                             13 COMRAM     3     3      0
                        _UART_printf
                          _UART_read
                         _UART_write
                             ___wmul
             _restablecerDatosSensor
 ---------------------------------------------------------------------------------
 (3) _restablecerDatosSensor                               2     2      0    4894
                                             11 COMRAM     2     2      0
                             ___wmul
                  _constructorSensor
 ---------------------------------------------------------------------------------
 (4) _constructorSensor                                    5     0      5     297
                                              6 COMRAM     5     0      5
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _mostrarDatosSensores                                56    56      0   23786
                                             20 BANK0     56    56      0
                        _UART_printf
                         _UART_write
                            ___awdiv
                             ___wmul
             _dameTemperaturaHumedad
             _lecturaAnalogaSensores
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lecturaAnalogaSensores                               3     3      0    4619
                                              6 COMRAM     3     3      0
                             ___wmul
                   _dameHumedadSuelo
 ---------------------------------------------------------------------------------
 (3) _dameHumedadSuelo                                     5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _dameTemperaturaHumedad                              12     8      4    3526
                                              3 COMRAM    12     8      4
                     _DHT11_ReadData
                        _DHT11_Start
                        _UART_printf
                     _check_response
 ---------------------------------------------------------------------------------
 (5) _check_response                                       1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _DHT11_ReadData                                       2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _fijaHoraRtc                                          0     0      0    3869
                        _UART_printf
                        _escribe_rtc
                             _setRtc
 ---------------------------------------------------------------------------------
 (3) _setRtc                                               7     7      0     696
                                              4 COMRAM     7     7      0
                          _UART_read
                         _UART_write
                        _escribe_rtc
 ---------------------------------------------------------------------------------
 (4) _escribe_rtc                                          2     1      1     446
                                              2 COMRAM     2     1      1
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (2) _dameDatosSistema                                    55    55      0   14916
                                             87 COMRAM     3     3      0
                                             20 BANK0     52    52      0
                        _UART_printf
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             20    10     10    7520
                                              0 BANK0     20    10     10
                             ___wmul (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _asignarHorarios                                      5     5      0    8260
                                             14 COMRAM     5     5      0
                        _UART_printf
                          _UART_read
                         _UART_write
             _escribeHorariosMemoria
 ---------------------------------------------------------------------------------
 (3) _escribeHorariosMemoria                               4     4      0    5233
                                             10 COMRAM     4     4      0
                             ___wmul
                     _escribe_eeprom
 ---------------------------------------------------------------------------------
 (4) _escribe_eeprom                                       4     1      3     544
                                              6 COMRAM     4     1      3
                             ___wmul (ARG)
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (3) _UART_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART_printf                                          2     0      2    2727
                                              1 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (4) _UART_write                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _leeHorariosMemoria                                   4     4      0    5029
                                              6 COMRAM     4     4      0
                             ___wmul
                        _leer_eeprom
 ---------------------------------------------------------------------------------
 (2) _leer_eeprom                                          4     2      2     340
                                              2 COMRAM     4     2      2
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (4) _i2c_reinicia_com                                     0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_recibe_dato                                      1     1      0      23
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_inicia_com                                       0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_envia_dato                                       1     1      0      22
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_detener                                          0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (5) _i2c_espera                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _inicializarObjetos                                   2     2      0    4641
                                              6 COMRAM     2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    4507
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _i2c_iniciar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4     748
                                             14 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _desbordamiento                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
   _configurarAdc
   _i2c_iniciar
   _inicializarObjetos
     ___wmul
   _leeHorariosMemoria
     ___wmul
     _leer_eeprom
       _i2c_detener
         _i2c_espera
       _i2c_envia_dato
         _i2c_espera
       _i2c_inicia_com
         _i2c_espera
       _i2c_recibe_dato
         _i2c_espera
       _i2c_reinicia_com
         _i2c_espera
   _mostrarMenu
     _UART_printf
       _UART_write
   _restablecerDatosSensor
     ___wmul
     _constructorSensor
       ___wmul (ARG)
   _sistemaPrincipal
     _UART_printf
       _UART_write
     _asignarHorarios
       _UART_printf
         _UART_write
       _UART_read
       _UART_write
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
     _dameDatosSistema
       _UART_printf
         _UART_write
       ___wmul
       _sprintf
         ___wmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
     _fijaHoraRtc
       _UART_printf
         _UART_write
       _escribe_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
       _setRtc
         _UART_read
         _UART_write
         _escribe_rtc
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
     _mostrarDatosSensores
       _UART_printf
         _UART_write
       _UART_write
       ___awdiv
       ___wmul
       _dameTemperaturaHumedad
         _DHT11_ReadData
         _DHT11_Start
         _UART_printf
           _UART_write
         _check_response
       _lecturaAnalogaSensores
         ___wmul
         _dameHumedadSuelo
       _sprintf
         ___wmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
     _mostrarDatosSensoresWIFI
       _UART_printf
         _UART_write
       _UART_write
       ___wmul
       _dameTemperaturaHumedad
         _DHT11_ReadData
         _DHT11_Start
         _UART_printf
           _UART_write
         _check_response
       _lecturaWifi
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
         ___wmul
         _restablecerDatosSensor
           ___wmul
           _constructorSensor
             ___wmul (ARG)
       _sprintf
         ___wmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
     _mostrarMenu
       _UART_printf
         _UART_write
     _setTiempoRegar
       _UART_printf
         _UART_write
       _UART_read
       _UART_write
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
   _sistemaRegado
     _dameHoraActual
       _convertirDato
       _leer_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _encenderBombas
       ___wmul
       _estaSeco
         ___wmul (ARG)
         _dameTemperaturaHumedad (ARG)
           _DHT11_ReadData
           _DHT11_Start
           _UART_printf
             _UART_write
           _check_response
     _horaRegar
     _lecturaAnalogaSensores
       ___wmul
       _dameHumedadSuelo
     _lecturaWifi
       _UART_printf
         _UART_write
       _UART_read
       _UART_write
       ___wmul
       _restablecerDatosSensor
         ___wmul
         _constructorSensor
           ___wmul (ARG)
     _mostrarMenu
       _UART_printf
         _UART_write

 _desbordamiento (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      48       7       28.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4C      9E       5       98.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     144      20        0.0%
DATA                 0      0     144       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Apr 29 00:14:22 2020

                 __size_of_escribe_eeprom 0030                                        l81 21CA  
                                      l90 22CE                                        l75 2294  
                                      l84 22C6                                        l93 22AC  
                                      l87 22BE                                        l96 2268  
                                      l99 224E                              ___awdiv@sign 0006  
                          ?_configurarAdc 0001                       ___wmul@multiplicand 0003  
                             __CFG_BORV$3 000000            __end_of_dameTemperaturaHumedad 185C  
                            __CFG_CP0$OFF 000000                              __CFG_CP1$OFF 000000  
                            __CFG_CP2$OFF 000000                              __CFG_CP3$OFF 000000  
                                     l102 21A4                                       l201 22B6  
                                     l121 1E54                                       l105 2210  
                                     l130 2270                                       l133 227E  
                                     l118 1B22                                       l214 1A28  
                                     l126 1E8A                                       l230 2122  
                                     l310 1FA8                                       l206 1F2E  
                                     l127 1E8C                                       l311 1FBC  
                                     l152 1E38                                       l144 1DE6  
                                     l160 2040                                       l233 20BC  
                                     l305 07A2                                       l217 217A  
                                     l209 214E                                       l330 1B8A  
                                     l243 1556                                       l139 1DDC  
                                     l227 161C                                       l155 2230  
                                     l308 1F9A                                       l316 1D1C  
                                     l149 1E16                                       l325 1218  
                                     l333 1CBA                                       l238 13C4  
                                     l422 16A6                                       l430 039A  
                                     l270 02F8                                       l424 16E2  
                                     l432 03A2                                       l450 05DA  
                                     l362 12F6                                       l346 1AB2  
                                     l419 1664                                       l275 1BF2  
                                     l285 0E9A                                       l357 18FC  
                                     l374 0D90                                       l198 22A0  
                                     l382 101A                                       l463 1D76  
                                     l288 0ED8                                       l464 1D7E  
                                     l457 0956                                       l369 185A  
                                     l546 1126                                       l467 21F0  
                                     l581 0ADE                                       l594 0C42  
                                     l698 17A6                              __CFG_CPB$OFF 000000  
                            __CFG_CPD$OFF 000000                              __CFG_BOR$OFF 000000  
                                     _abs 2042                                       _pad 161E  
                                     prod 000FF3                                       wreg 000FE8  
                __end_of_dameDatosSistema 12F8                              __CFG_LVP$OFF 000000  
                       ?_i2c_reinicia_com 0001                              ?_escribe_rtc 0003  
                            __CFG_WDT$OFF 000000                                      ?_abs 0013  
                                    l1142 2078                                      l1145 2080  
                                    l3001 1ECC                                      l3011 16FE  
                                    l1172 1EDE                                      l1157 148E  
                                    l1165 2000                                      l1181 20F2  
                                    l3021 1724                                      l3013 1702  
                                    l3005 16E4                                      l3101 01D0  
                                    l1175 22D4                                      l3031 175A  
                                    l3023 1736                                      l3015 1710  
                                    l3007 16E8                                      l3111 021E  
                                    l3201 0E96                                      l3033 1770  
                                    l3025 173E                                      l3041 1786  
                                    l3017 1718                                      l3009 16F6  
                                    l3113 0260                                      l3105 01D6  
                                    l3121 02C2                                      l3203 0EAA  
                                    l3043 1796                                      l3035 1778  
                                    l3027 1746                                      l3019 171C  
                                    l3211 05DC                                      l3123 02C6  
                                    l3107 0218                                      l3205 0EB6  
                                    l2501 09BC                                      l3141 1BC6  
                                    l3133 1B8C                                      l3045 179E  
                                    l3037 177A                                      l3029 1754  
                                    l3301 1C5A                                      l3221 0600  
                                    l3213 05E0                                      l3053 2150  
                                    l3125 02E2                                      l3055 2082  
                                    l3207 0ECA                                      l3151 0D96  
                                    l2511 0A06                                      l2503 09C0  
                                    l2431 13C6                                      l3311 1230  
                                    l3303 121A                                      l3143 1BCC  
                                    l3135 1BA4                                      l3039 1780  
                                    l3231 063C                                      l3223 0606  
                                    l3215 05EC                                      l3127 02F2  
                                    l3071 0064                                      l3119 0266  
                                    l3063 0012                                      l3401 1042  
                                    l3057 20AC                                      l3209 0ED2  
                                    l3161 0DBC                                      l3153 0DA2  
                                    l2521 0A76                                      l2513 0A14  
                                    l2505 09CC                                      l2441 1448  
                                    l2433 13D8                                      l2601 03E0  
                                    l3313 12C8                                      l3305 1226  
                                    l3145 1BDC                                      l3137 1BAA  
                                    l3321 0EDE                                      l3233 0640  
                                    l3225 0616                                      l3241 065C  
                                    l3081 00B6                                      l3073 0066  
                                    l3049 2124                                      l3411 108A  
                                    l3403 1050                                      l3059 20BA  
                                    l3171 0DF6                                      l3163 0DCC  
                                    l2523 0A88                                      l2515 0A26  
                                    l2507 09EA                                      l2435 13EA  
                                    l2451 1FE0                                      l2603 03E6  
                                    l2611 04D8                                      l3315 12D4  
                                    l3147 1BE8                                      l3139 1BBA  
                                    l3331 0EFE                                      l3323 0EE4  
                                    l3251 069A                                      l3243 0660  
                                    l3235 064C                                      l3227 0626  
                                    l3083 00F8                                      l3075 006E  
                                    l3421 10D4                                      l3413 1092  
                                    l3405 1060                                      l3181 0E16  
                                    l3173 0E02                                      l3165 0DDC  
                                    l3149 0D92                                      l2517 0A54  
                                    l2509 09F2                                      l2525 0A8E  
                                    l2541 0B16                                      l2533 0AE0  
                                    l2437 13F4                                      l2445 1FBE  
                                    l2453 20BE                                      l2613 04F2  
                                    l2621 0554                                      l2605 0468  
                                    l3317 12DA                                      l2701 2024  
                                    l3341 0F8E                                      l3333 0F3E  
                                    l3325 0EF6                                      l3261 06BE  
                                    l3253 06AA                                      l3237 0650  
                                    l3245 066A                                      l3229 0638  
                                    l3501 1A32                                      l3093 0146  
                                    l3077 00B0                                      l3069 0022  
                                    l3431 1106                                      l3423 10E4  
                                    l3415 109E                                      l3407 1064  
                                    l3191 0E60                                      l3175 0E06  
                                    l3183 0E20                                      l3167 0DEE  
                                    l3159 0DB6                                      l2527 0A9E  
                                    l2519 0A74                                      l2551 0B7E  
                                    l2543 0B24                                      l2535 0AE4  
                                    l2439 1412                                      l2447 1FCA  
                                    l2455 20CA                                      l2471 165C  
                                    l2463 161E                                      l2631 059A  
                                    l2623 0566                                      l2615 0510  
                                    l2607 046E                                      l2703 2032  
                                    l2711 2296                                      l3351 1014  
                                    l3343 0F94                                      l3335 0F5C  
                                    l3319 0EDA                                      l3271 06FA  
                                    l3263 06C4                                      l3255 06B6  
                                    l3247 066E                                      l3239 0654  
                                    l3511 1A52                                      l3503 1A3A  
                                    l3095 0188                                      l3087 00FE  
                                    l3433 1116                                      l3425 10E6  
                                    l3417 10AC                                      l3409 1074  
                                    l3441 1AB4                                      l2641 22C4  
                                    l3193 0E6C                                      l3185 0E24  
                                    l3177 0E0A                                      l3169 0DF2  
                                    l2529 0ABE                                      l2553 0B8C  
                                    l2561 0BF2                                      l2545 0B44  
                                    l2537 0AF2                                      l2449 1FDC  
                                    l2457 20CE                                      l2481 16CA  
                                    l2473 1670                                      l2465 162E  
                                    l2633 05A2                                      l2625 0576  
                                    l2617 052A                                      l2609 0474  
                                    l2721 07EC                                      l2713 07A4  
                                    l2705 203A                                      l2801 17C4  
                                    l3361 0C7A                                      l3353 0C44  
                                    l3337 0F6C                                      l3345 0FB0  
                                    l3273 06FE                                      l3265 06D4  
                                    l3281 071A                                      l3249 068A  
                                    l3521 1AB0                                      l3513 1A5A  
                                    l3505 1A42                                      l3089 0140  
                                    l3601 190E                                      l3427 10F0  
                                    l3419 10B6                                      l3451 1B14  
                                    l3443 1AB4                                      l2571 21A6  
                                    l2643 22C8                                      l2651 22AC  
                                    l3195 0E72                                      l3187 0E40  
                                    l3179 0E12                                      l2491 095C  
                                    l2563 0C02                                      l2555 0BBA  
                                    l2547 0B62                                      l2539 0B12  
                                    l2459 20E6                                      l2475 1684  
                                    l2467 1642                                      l2627 057C  
                                    l2635 05B2                                      l2619 0544  
                                    l2731 08B4                                      l2723 0810  
                                    l2715 07C8                                      l2707 203E  
                                    l2811 1856                                      l2803 17E8  
                                    l3363 0C86                                      l3355 0C44  
                                    l3347 0FE0                                      l3291 0758  
                                    l3283 071E                                      l3275 070A  
                                    l3267 06E4                                      l3507 1A4A  
                                    l3099 018E                                      l3531 1872  
                                    l3611 1932                                      l3603 1912  
                                    l3429 10F6                                      l3461 1B1E  
                                    l3453 1B16                                      l3445 1AB6  
                                    l3437 2280                                      l2573 21BC  
                                    l2645 22CC                                      l2661 1DAC  
                                    l3197 0E76                                      l3189 0E50  
                                    l2493 096A                                      l2565 0C22  
                                    l2557 0BDA                                      l2549 0B6A  
                                    l2485 2042                                      l2477 1688  
                                    l2469 1650                                      l2629 058E  
                                    l2581 0342                                      l2733 08D8  
                                    l2741 0906                                      l2725 0834  
                                    l2717 07D6                                      l2901 15BC  
                                    l2813 1858                                      l2805 181E  
                                    l2821 1F82                                      l3381 0D1A  
                                    l3365 0CA2                                      l3357 0C58  
                                    l3349 0FEC                                      l3293 0768  
                                    l3277 070E                                      l3285 0728  
                                    l3269 06F6                                      l3517 1A6A  
                                    l3533 1886                                      l3541 18B2  
                                    l3621 1948                                      l3613 1936  
                                    l3605 1926                                      l3463 1B20  
                                    l3455 1B18                                      l3447 1AB8  
                                    l3439 2284                                      l2647 22A4  
                                    l2639 22C0                                      l2575 226C  
                                    l2655 1D80                                      l2815 20F4  
                                    l3199 0E86                                      l2495 098A  
                                    l2559 0BEC                                      l2487 205C  
                                    l2479 16B6                                      l2591 03AA  
                                    l2583 0362                                      l2743 0914  
                                    l2735 08E6                                      l2727 087C  
                                    l2719 07E8                                      l2911 15F2  
                                    l2903 15C4                                      l2671 1DFA  
                                    l2663 1DDE                                      l2807 182E  
                                    l2823 1F84                                      l3391 0D8A  
                                    l3383 0D36                                      l3375 0CBC  
                                    l3367 0CAE                                      l3359 0C5E  
                                    l3295 0774                                      l3287 072C  
                                    l3279 0712                                      l3519 1AAC  
                                    l3543 18B6                                      l3535 188E  
                                    l3527 185C                                      l3631 1968  
                                    l3623 194A                                      l3615 193A  
                                    l3607 192A                                      l3393 101C  
                                    l3457 1B1A                                      l3449 1AEC  
                                    l3465 22AE                                      l3473 199C  
                                    l2569 21A6                                      l2649 22A8  
                                    l2761 22B8                                      l2657 1D84  
                                    l2817 2114                                      l2497 098E  
                                    l2489 0958                                      l2593 03BC  
                                    l2585 0372                                      l2577 02FA  
                                    l2737 08FA                                      l2913 1602  
                                    l2905 15C8                                      l2681 1E36  
                                    l2673 1E08                                      l2809 184A  
                                    l2825 1F96                                      l3385 0D5C  
                                    l3377 0CE4                                      l3369 0CB2  
                                    l2841 1CFC                                      l2833 1CBC  
                                    l3297 0788                                      l3289 0748  
                                    l3561 18E2                                      l3545 18CC  
                                    l3537 1890                                      l3529 186E  
                                    l3633 196E                                      l3625 194E  
                                    l3617 193E                                      l3609 192E  
                                    l3395 1020                                      l3459 1B1C  
                                    l2755 21CC                                      l3475 1A08  
                                    l3467 1994                                      l2771 2262  
                                    l2763 22BC                                      l3491 1504  
                                    l2659 1DA8                                      l2931 13A0  
                                    l2923 1308                                      l2499 099C  
                                    l2595 03CA                                      l2587 0374  
                                    l2579 031A                                      l2747 0920  
                                    l2851 1D5A                                      l2915 1612  
                                    l2907 15D2                                      l2675 1E10  
                                    l2691 222E                                      l2827 1F98  
                                    l2819 1F7A                                      l3387 0D68  
                                    l3379 0D00                                      l2843 1D00  
                                    l3299 079E                                      l3563 18F8  
                                    l3539 18A2                                      l3635 1980  
                                    l3627 1960                                      l3619 1946  
                                    l3397 102E                                      l2757 21E8  
                                    l3477 1A0C                                      l2773 2264  
                                    l2765 2250                                      l3493 1532  
                                    l3485 14A0                                      l2781 1E3A  
                                    l2933 13A4                                      l2925 1338  
                                    l2917 12F8                                      l2597 03D0  
                                    l2589 038E                                      l2749 0944  
                                    l2845 1D1E                                      l2909 15D6  
                                    l2677 1E24                                      l2669 1DF4  
                                    l2685 2212                                      l2693 2002  
                                    l2829 1FAA                                      l3389 0D6E  
                                    l2941 112A                                      l2861 21F4  
                                    l2853 217E                                      l3637 1988  
                                    l3629 1964                                      ?_pad 0011  
                                    l3399 103E                                      l2775 2266  
                                    l2767 2254                                      l3495 1536  
                                    l3487 14CE                                      l3479 1490  
                                    l2783 1E62                                      l2935 13A8  
                                    l2927 133C                                      l2599 03D8  
                                    l2847 1D26                                      l2679 1E26  
                                    l2687 2216                                      l2695 2006  
                                    l2839 1CC4                                      l2951 1158  
                                    l2943 112E                                      l2863 21FC  
                                    l2855 21A2                                      l2871 1EF4  
                                    l3559 18DE                                      l2769 225A  
                                    l3497 153A                                      l3489 14D2  
                                    l2785 1E72                                      l2929 1370  
                                    l2849 1D34                                      l2689 2226  
                                    l2697 200E                                      l2793 17A8  
                                    l2961 1178                                      l2945 1134  
                                    l2937 1128                                      l3681 1A7E  
                                    l2865 220E                                      l2873 1EF8  
                                    l2787 1E82                                      l2779 2234  
                                    l2891 156C                                      l2883 155A  
                                    l2699 201C                                      l2795 17AC  
                                    l2971 11E4                                      l2963 117C  
                                    l2947 1140                                      l2939 112A  
                                    l3499 1A2C                                      l2859 21F4  
                                    l2875 1F14                                      l3595 18FE  
                                    l2789 1E86                                      l2893 157C  
                                    l2797 17AC                                      l2973 1200  
                                    l2965 118C                                      l2957 1166  
                                    l2949 1146                                      l2877 1F24  
                                    l2869 1EE0                                      l3597 1908  
                                    l2895 158C                                      l2799 17B0  
                                    l2991 1B6E                                      l2967 11B8  
                                    l2959 1172                                      l2975 1210  
                                    l2879 1F28                                      l3679 027C  
                                    l3599 190C                                      l2993 1E8E  
                                    l2897 159E                                      l2889 1566  
                                    l2985 1B2C                                      l2977 1216  
                                    l2969 11E0                                      l2995 1EA0  
                                    l2899 15B4                                      l2987 1B5A  
                                    l2979 1B24                                      l2997 1EA8  
                                    l2989 1B6A                                      l2999 1EB0  
                            ?_leer_eeprom 0003                                      STR_1 7FD0  
                                    STR_2 7CE4                                      STR_3 7EED  
                                    STR_4 7E21                                      STR_5 7F7A  
                                    STR_6 7C4E                                      STR_7 7C17  
                                    STR_8 7F60                                      STR_9 7F93  
                                    u2000 17C4                                      u2001 17C0  
                                    u2010 181E                                      u2011 181A  
                                    u2100 15F2                                      u2020 1FA8  
                                    u2101 15EE                                      u2021 1FA4  
                                    u2110 1602                                      u2030 1D1C  
                                    u2111 15FE                                      u2031 1D18  
                                    u2040 1D76                                      u2120 1612  
                                    u2200 1736                                      u2041 1D72  
                                    u2121 160E                                      u2201 1732  
                                    u2130 13C4                                      u2210 1754  
                                    u2050 1F14                                      u2131 13C0  
                                    u2211 1750                                      u2051 1F10  
                                    u1420 13D8                                      u1500 16A6  
                                    u2220 1770                                      u2140 1158  
                                    u2060 1F24                                      u2300 0188  
                                    u1421 13D4                                      u1501 16A2  
                                    u2221 176C                                      u2141 1154  
                                    u2061 1F20                                      u2301 0184  
                                    u1430 13EA                                      u1510 16B6  
                                    u2070 157C                                      u2230 1796  
                                    u2150 118C                                      u2310 01D0  
                                    u1431 13E6                                      u1511 16B2  
                                    u2071 1578                                      u2231 1792  
                                    u2151 1188                                      u2311 01CC  
                                    u2400 0DEE                                      u1600 0AF2  
                                    u1520 205C                                      u1440 1412  
                                    u2080 158C                                      u2160 1200  
                                    u2320 0218                                      u2240 2148  
                                    _LATD 000F8C                                      u2401 0DEA  
                                    u1601 0AEE                                      u1521 2058  
                                    u1441 140E                                      u2081 1588  
                                    u2161 11FC                                      u2321 0214  
                                    u2241 2142                                      u2410 0E40  
                                    u1530 096A                                      u1610 0B24  
                                    u1450 1448                                      u2090 159E  
                                    u2170 1B8A                                      u2330 0260  
                                    u2250 214A                                      u2411 0E3C  
                                    u1531 0966                                      u1611 0B20  
                                    u1451 1444                                      u2091 159A  
                                    u2171 1B86                                      u2331 025C  
                                    u2420 0E50                                      u1540 099C  
                                    u1620 0B62                                      u1460 2000  
                                    u1700 032C                                      u2180 16F6  
                                    u2500 068A                                      u2340 02E2  
                                    u2260 0064                                      u2421 0E4C  
                                    u1541 0998                                      u1621 0B5E  
                                    u1461 1FFC                                      u2181 16F2  
                                    u2501 0686                                      u2341 02DE  
                                    u2261 0060                                      u2430 0E60  
                                    u1630 0B8C                                      u1470 20E6  
                                    u1710 0342                                      u2190 1710  
                                    u2510 069A                                      u2350 02F2  
                                    u2270 00B0                                      u2431 0E5C  
                                    u1551 09C6                                      u1631 0B88  
                                    u1471 20E2                                      u1711 033E  
                                    u2191 170C                                      u2511 0696  
                                    u2351 02EE                                      u2271 00AC  
                                    u2440 0E86                                      u1560 09EA  
                                    u1640 0BBA                                      u1480 162E  
                                    u1800 0554                                      u1720 0372  
                                    u2360 1BBA                                      u2600 0EF6  
                                    u2520 06AA                                      u2280 00F8  
                                    u2441 0E82                                      u1561 09E6  
                                    u1641 0BB6                                      u1481 162A  
                                    u1801 0550                                      u1721 036E  
                                    u2361 1BB6                                      u2601 0EF2  
                                    u2521 06A6                                      u2281 00F4  
                                    u2450 0E96                                      u1570 0A14  
                                    u1650 0C02                                      u1490 1650  
                                    u1810 0566                                      u1730 038E  
                                    u2370 1BDC                                      u2610 0F3E  
                                    u2530 06D4                                      u2290 0140  
                                    u2451 0E92                                      u1571 0A10  
                                    u1651 0BFE                                      u1491 164C  
                                    u1811 0562                                      u1731 038A  
                                    u2371 1BD8                                      u2611 0F3A  
                                    u2531 06D0                                      u2291 013C  
                                    u2700 1A28                                      u1660 21BC  
                                    u2460 0EAA                                      u2380 0DCC  
                                    u1580 0A54                                      u1820 0576  
                                    u1740 03BC                                      u1900 1E36  
                                    u2620 0FB0                                      u2540 06E4  
                                    u2701 1A24                                      u1661 21B8  
                                    u2461 0EA6                                      u2381 0DC8  
                                    u1581 0A50                                      u1821 0572  
                                    u1741 03B8                                      u1901 1E32  
                                    u2621 0FAC                                      u2541 06E0  
                                    u1670 21CA                                      u2710 1556  
                                    u2390 0DDC                                      u1590 0A9E  
                                    u1830 058E                                      u1750 03CA  
                                    u1910 201C                                      u2630 0D8A  
                                    u2550 06F6                                      u2470 0616  
                                    u1671 21C6                                      u2711 1552  
                                    u2391 0DD8                                      u1591 0A9A  
                                    u1831 058A                                      u1751 03C6  
                                    u1911 2018                                      u2631 0D86  
                                    u2551 06F2                                      u2471 0612  
                                    u2640 102E                                      u1680 227E  
                                    u1840 1DA4                                      u1760 04F2  
                                    u1920 2032                                      u2560 0748  
                                    u2480 0626                                      u2720 186E  
                                    u2641 102A                                      u1681 227A  
                                    u1761 04EE                                      u1921 202E  
                                    u2561 0744                                      u2481 0622  
                                    u2721 186A                                      u2650 1050  
                                    u1850 1DCC                                      u1770 0510  
                                    u1690 032A                                      u1930 07C8  
                                    u2570 0758                                      u2490 0638  
                                    u2730 1886                                      u2810 1960  
                                    u2651 104C                                      u1771 050C  
                                    u1691 0324                                      u1931 07C4  
                                    u2571 0754                                      u2491 0634  
                                    u2731 1882                                      u2811 195C  
                                    u2660 108A                                      u1860 1DDC  
                                    u1780 052A                                      u1940 0810  
                                    u2580 0768                                      u2740 18A2  
                                    u2820 1980                                      u2661 1086  
                                    u1861 1DD8                                      u1781 0526  
                                    u1941 080C                                      u2581 0764  
                                    u2741 189E                                      u2821 197C  
                                    u2670 10AC                                      u1790 0544  
                                    u1950 0834                                      u2590 12F6  
                                    u1870 1DF4                                      u2750 18CC  
                                    u2671 10A8                                      u1847 1D9A  
                                    u1791 0540                                      u1951 0830  
                                    u2591 12F2                                      u1871 1DF0  
                                    u2751 18C8                                      u2680 10D4  
                                    u1960 08D8                                      u1880 1E08  
                                    u2760 18DE                                      u2681 10D0  
                                    u1857 1DC2                                      u1961 08D4  
                                    u1881 1E04                                      u2761 18DA  
                                    u2690 1106                                      u1970 1E62  
                                    u1890 1E24                                      u2691 1102  
                                    u1971 1E5E                                      u1891 1E20  
                                    u2907 1DF6                                      u1980 1E72  
                                    u1981 1E6E                                      u2917 211A  
                                    u2837 1B60                                      u1990 1E82  
                                    u2927 20B2                                      u1991 1E7E  
                                    u2847 1F7C                                      u2857 2008  
                                    u2867 201E                                      u2877 2034  
                                    u2887 221C                                      u2897 222A  
                                    _TMR0 000FD6                      _minutosTranscurridos 0084  
                      ??_i2c_reinicia_com 0002                            _check_response 2002  
                 escribeHorariosMemoria@i 000D                             ??_i2c_detener 0002  
                                    abs@a 0013                                      _dbuf 008E  
                                    _main 18FE                                      _dtoa 02FA  
                                    _hora 008A                                      _prec 007C  
                                    _nout 0078                                      pad@i 0018  
                                    pad@p 0015                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      indf1 000FE7  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    pad@w 001A                                      fsr2l 000FD9  
                                    btemp 005F                            ?_sistemaRegado 0001  
                __size_of_asignarHorarios 0148                             ??_i2c_iniciar 0001  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 000E                  ??_restablecerDatosSensor 000C  
                           __CFG_IESO$OFF 000000                          ??_DHT11_ReadData 0001  
                       _constructorSensor 2296                      __size_of_DHT11_Start 0020  
                            ?_lecturaWifi 0001                   __size_of_setTiempoRegar 01C8  
                            ___param_bank 000000                        ?_constructorSensor 0007  
                      setTiempoRegar@hora 0010                        _leeHorariosMemoria 1490  
                        ??_encenderBombas 0015                                     ??_abs 0015  
                                   ??_pad 0017                            _i2c_envia_dato 22A2  
                           __CFG_PLLDIV$1 000000                            _i2c_inicia_com 22C0  
                         __end_of___aldiv 1128                           __end_of___aodiv 0AE0  
                                   ?_main 0001                                     ?_dtoa 001C  
                         __end_of___aomod 0C44                             _convertirDato 21F2  
                         __end_of___awdiv 17A8                                     STR_10 7C4E  
                                   STR_11 7BCF                                     STR_20 7EAD  
                                   STR_12 7DD7                                     STR_21 7E6B  
                                   STR_13 7D8B                                     STR_22 7FF0  
                                   STR_14 7F29                                     STR_30 7F0C  
                                   STR_23 7F77                                     STR_15 7E8D  
                                   STR_31 7D39                                     STR_16 7DFC  
                                   STR_32 7DB1                                     STR_24 7D0F  
                                   STR_17 7F45                                     STR_33 7D63  
                                   STR_25 7C81                                     STR_34 7ECD  
                                   STR_26 7FE0                                     STR_18 7E46  
                                   STR_35 7F0C                                     STR_27 7FBD  
                                   STR_19 7CB3                                     STR_28 7FAA  
                                   STR_29 7ECD                       ??_constructorSensor 000C  
                       convertirDato@dato 0002                                     _T0CON 000FD5  
                         ___awdiv@divisor 0003                       ?_leeHorariosMemoria 0001  
                                   i2l195 1C56                           ___awdiv@counter 0005  
                                   _RCREG 000FAE                              vfpfcnvrt@fmt 0042  
                                   _SPBRG 000FAF                             __CFG_USBDIV$1 000000  
                                   _TRISD 000F95                                     _TXREG 000FAD  
                           __CFG_PWRT$OFF 000000                             __CFG_WRT0$OFF 000000  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
                           __CFG_WRT3$OFF 000000                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            __CFG_EBTRB$OFF 000000  
                      __size_of_UART_init 0070                        __size_of_UART_read 0054  
                                   _flags 007E                                     _fputc 13C6  
                                   _fputs 1FBE                    __end_of_check_response 2042  
                             ?_UART_write 0001                                     pad@fp 0011  
                                   _width 007A                                     _putch 22D4  
                                   dtoa@d 001E                                     dtoa@i 003E  
                                   dtoa@n 0036                                     dtoa@p 0030  
                                   dtoa@s 0034                                     dtoa@w 0032  
                                   tablat 000FF5                                     plusw2 000FDB  
       __size_of_mostrarDatosSensoresWIFI 0142                                     ttemp5 0060  
                                   ttemp6 0063                                     ttemp7 0067  
                                   status 000FD8                 ?_mostrarDatosSensoresWIFI 0001  
                                   wtemp8 0060                           __end_of_sprintf 1EE0  
                      escribe_eeprom@dato 0009                 __end_of_constructorSensor 22A2  
                    ??_leeHorariosMemoria 0007                            __CFG_ICPRT$OFF 000000  
                              _i2c_espera 21A6                          ??_dameHoraActual 0005  
                          __CFG_MCLRE$OFF 000000                           __initialization 1F30  
                         setTiempoRegar@i 0011                       __end_of_i2c_detener 22D0  
         __size_of_lecturaAnalogaSensores 0068                    __end_of_i2c_envia_dato 22AE  
                            __end_of_main 1994                              __end_of_dtoa 05DC  
                ??_escribeHorariosMemoria 000B                           ??_configurarAdc 0001  
                     setTiempoRegar@i_834 0013                    __end_of_i2c_inicia_com 22C8  
                      _inicializarObjetos 1994                       __end_of_i2c_iniciar 2296  
                  sistemaPrincipal@opcion 005D                          _dameHumedadSuelo 1F78  
                          ?_convertirDato 0001                      __size_of_fijaHoraRtc 0068  
                                  ??_main 005E                                    ??_dtoa 0026  
               setTiempoRegar@tiempoRegar 000F                             __activetblptr 000002  
                     ?_inicializarObjetos 0001                        i2c_envia_dato@dato 0002  
                         __CFG_CCP2MX$OFF 000000                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                                    ?_fputc 0001  
                                  ?_fputs 000A                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                           ?_check_response 0001  
                        ___awdiv@dividend 0001                    encenderBombas@flagSeco 0017  
                                  ?_putch 0001                        convertirDato@datoR 0003  
                                  i2l3571 1C18                                    i2l3581 1C4C  
                                  i2l3573 1C2A                                    i2l3565 1BF6  
                                  i2l3583 1C50                                    i2l3575 1C2E  
                                  i2l3567 1C04                                    i2l3577 1C30  
                                  i2l3569 1C14                                    i2l3579 1C3E  
                         ??_sistemaRegado 001A     mostrarDatosSensores@porcentajeHumedad 00F8  
                                  _SSPADD 000FC8                                    _SSPBUF 000FC9  
                    ??_inicializarObjetos 0007           __size_of_restablecerDatosSensor 0062  
                          __CFG_XINST$OFF 000000                              vfprintf@cfmt 0056  
                __end_of_sistemaPrincipal 1AB4                            _escribe_eeprom 20F4  
                         ?_i2c_envia_dato 0001                                 ??___aldiv 0009  
                               ??___aodiv 0011                                 ??___aomod 0011  
                                  ___wmul 21CC                         __end_of_UART_init 1B24  
                       __end_of_UART_read 1E8E                                 ??___awdiv 0005  
                       ??_asignarHorarios 000F                          __end_of_leer_rtc 21A6  
                         ?_i2c_inicia_com 0001                          __end_of_estaSeco 1F30  
                     __size_of_UART_write 0016                              ?_UART_printf 0002  
                                  clear_0 1F56                                    clear_1 1F62  
                        ___awdiv@quotient 0007                                    _setRtc 1558  
                                  pad@buf 0013       mostrarDatosSensoresWIFI@temperatura 00F4  
                                  dtoa@fp 001C                                    _strlen 20BE  
                         _i2c_recibe_dato 2250                              ?_mostrarMenu 0001  
                                  fputc@c 0001                                    fputs@c 000E  
                                  fputs@i 000F                                    fputs@s 000A  
                    escribe_rtc@direccion 0004                              __mediumconst 7BCE  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                    _lecturaAnalogaSensores 1B24  
            __end_of_mostrarDatosSensores 0D92                                    putch@c 0001  
                        __end_of_vfprintf 1D80                                 ??_sprintf 0058  
                              __accesstop 0060                   __end_of__initialization 1F6A  
                    __size_of_escribe_rtc 001E                           __CFG_PBADEN$OFF 000000  
                    __size_of_leer_eeprom 003C                           __CFG_FOSC$XT_XT 000000  
                             _i2c_detener 22C8                __size_of_constructorSensor 000C  
                           ___rparam_used 000001                               _i2c_iniciar 2280  
                  __end_of_escribe_eeprom 2124                               ?_i2c_espera 0001  
                          _setTiempoRegar 05DC                          setTiempoRegar@Rx 0016  
                          __pcstackCOMRAM 0001                              leer_rtc@dato 0004  
                            __pidataBANK0 22D0                      __size_of_lecturaWifi 00F2  
         __size_of_escribeHorariosMemoria 00CE                           ??_convertirDato 0001  
                           __end_of_fputc 1490                             __end_of_fputs 2002  
                     estaSeco@temperatura 0014                             __end_of_putch 22D6  
                  _restablecerDatosSensor 1CBC                              _datoRecibido 0087  
                       ?_dameDatosSistema 0001                                   ??_fputc 0005  
                                 ??_fputs 000E                                   ??_putch 0001  
                              __pbssBANK0 0060                                __pbssBANK1 0100  
                      ??_dameDatosSistema 0058                   __size_of_desbordamiento 1C52  
                      __size_of_horaRegar 002C                    __end_of_setTiempoRegar 07A4  
                            lecturaWifi@i 000F                           ?_escribe_eeprom 0007  
           dameTemperaturaHumedad@Humedad 0004                        _contInterrupciones 0080  
               __size_of_i2c_reinicia_com 0008                                   ?___wmul 0001  
              mostrarDatosSensores@buffer 00C2                   __end_of_i2c_recibe_dato 226A  
                                 _ACKSTAT 007E2E                                   ?_setRtc 0001  
                                 ?_strlen 0001           mostrarDatosSensores@temperatura 00F4  
           dameTemperaturaHumedad@humedad 000E                        __size_of_vfpfcnvrt 01B4  
                     __size_of_i2c_espera 0026                    _escribeHorariosMemoria 12F8  
                                 _SSPCON1 000FC6                                   _SSPCON2 000FC5  
                            ??_UART_write 0001                                   _SSPSTAT 000FC7  
                __end_of_dameHumedadSuelo 1FBE                                 ?_leer_rtc 0001  
                               ?_estaSeco 0010                           __CFG_VREGEN$OFF 000000  
                           ??_DHT11_Start 0001                           ?_setTiempoRegar 0001  
                                 __Hparam 0000                                   __Lparam 0000  
       dameTemperaturaHumedad@Temperatura 0006                                   ___aldiv 101C  
                                 ___aodiv 0958                                   ___aomod 0AE0  
                                 ___awdiv 16E4                      _mostrarDatosSensores 0C44  
                         __size_of___wmul 0026                  constructorSensor@humedad 000A  
                               ?_vfprintf 0050                           __CFG_STVREN$OFF 000000  
                                 __pcinit 1F30                                   __ramtop 0800  
                      __end_of_UART_write 2280                           __size_of_setRtc 00C6  
                                 __ptext0 18FE                                   __ptext1 185C  
                                 __ptext2 2124                                   __ptext3 0012  
                                 __ptext4 1EE0                                   __ptext5 2150  
                                 __ptext6 217C                                   __ptext7 21F2  
                                 __ptext8 1A2A                                   __ptext9 05DC  
                 check_response@respuesta 0001                         __end_of_horaRegar 2150  
                               _T0CONbits 000FD5                           __size_of_strlen 0036  
                    __size_of_UART_printf 005E                              __size_of_abs 0040  
                            __size_of_pad 00C6                          ??_check_response 0001  
                                 _regando 0083                          ___aldiv@dividend 0001  
                                 _minutos 0089                      __size_of_mostrarMenu 0062  
                                 _sprintf 1E8E                            __pintcode_body 1BF4  
                    end_of_initialization 1F6A            mostrarDatosSensoresWIFI@buffer 00C2  
                              ??_leer_rtc 0003                                ??_estaSeco 0013  
                                 fputc@fp 0003                           _asignarHorarios 0D92  
                           __Lmediumconst 7BCE                                   int_func 1BF4  
                                 fputs@fp 000C                          ??_i2c_envia_dato 0002  
             __size_of_leeHorariosMemoria 00C8                                   setRtc@i 0009  
                        ??_i2c_inicia_com 0002                          _VALOR_TIMER0UART 00FC  
                       __end_of_vfpfcnvrt 0958                  ??_dameTemperaturaHumedad 0008  
                               _RCSTAbits 000FAB                          ___aldiv@quotient 000B  
                   ?_mostrarDatosSensores 0001                       __end_of_DHT11_Start 2232  
                                 postdec1 000FE5                                   postdec2 000FDD  
                       ?_sistemaPrincipal 0001                   _peticionLecturaSensores 0082  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                             ??_fijaHoraRtc 000C  
                        ?_i2c_recibe_dato 0001                                ??_vfprintf 0056  
                   __end_of_configurarAdc 22B8                        ??_sistemaPrincipal 005B  
                                 strlen@a 0003                                   strlen@s 0001  
                               _UART_init 1AB4                                 _UART_read 1E3A  
                               _PORTDbits 000F83                   __size_of_DHT11_ReadData 005C  
                 ?_lecturaAnalogaSensores 0001                 dameHumedadSuelo@canalLeer 0005  
                 lecturaAnalogaSensores@i 0008                                 _TRISBbits 000F93  
                               _TRISCbits 000F94                                 _TRISDbits 000F95  
                 __size_of_encenderBombas 02E8                  _mostrarDatosSensoresWIFI 0EDA  
                          _desbordamiento 0008                            _esperandoDatos 005E  
                          _UART_init$1778 0017                              ?_i2c_detener 0001  
                   __end_of_sistemaRegado 18FE                                 _TXSTAbits 000FAC  
                       dameDatosSistema@i 00F4               __size_of_inicializarObjetos 0096  
                            ?_i2c_iniciar 0001                              ??_i2c_espera 0001  
                      DHT11_ReadData@data 0002                          _i2c_reinicia_com 22B8  
             setTiempoRegar@datoCapturado 0015                               vfpfcnvrt@ap 0044  
                             vfpfcnvrt@fp 0040                               vfpfcnvrt@ll 0048  
                          __end_of___wmul 21F2                   ?_restablecerDatosSensor 0001  
          __end_of_lecturaAnalogaSensores 1B8C                                ?_UART_init 000F  
                              ?_UART_read 0001                       setRtc@datoCapturado 0008  
                 __size_of_dameHoraActual 002C                            __end_of_setRtc 161E  
                     __end_of_fijaHoraRtc 1BF4                            __end_of_strlen 20F4  
                     start_initialization 1F30                              _estaSeco$770 0013  
                             __end_of_abs 2082                   __end_of_asignarHorarios 0EDA  
                             __end_of_pad 16E4         escribeHorariosMemoria@contMemoria 000B  
                  __end_of_desbordamiento 1C5A                        __end_of_i2c_espera 21CC  
                           ??_escribe_rtc 0004                             ??_leer_eeprom 0005  
                        ??_escribe_eeprom 000A                       leeHorariosMemoria@i 0009  
                    constructorSensor@pin 000B                               _DHT11_Start 2212  
                           ??_lecturaWifi 000E                    ??_mostrarDatosSensores 0058  
                             vfprintf@fmt 0052                 __size_of_dameDatosSistema 00DE  
         __size_of_dameTemperaturaHumedad 00B4                                  ??___wmul 0005  
          __end_of_restablecerDatosSensor 1D1E                               __pdataBANK0 00FA  
                        __CFG_LPT1OSC$OFF 000000                         leer_rtc@direccion 0003  
                                ??_setRtc 0005                     __end_of_convertirDato 2212  
            asignarHorarios@datoCapturado 0010                                  ??_strlen 0003  
                 ?_escribeHorariosMemoria 0001                               __pbssCOMRAM 005E  
                           __pcstackBANK0 00AE                          ___aodiv@dividend 0001  
                         ?_desbordamiento 0001                          ??_setTiempoRegar 000F  
                       ?_dameHumedadSuelo 0001                         UART_printf@cadena 0002  
                           lecturaWifi@Rx 000E                        ??_dameHumedadSuelo 0003  
                       __size_of_leer_rtc 002A                         __size_of_estaSeco 0050  
                     __end_of_escribe_rtc 2250                       __end_of_leer_eeprom 20BE  
                               _dtoa$1005 002E                                 __pintcode 0008  
                           __pmediumconst 7BCE                                  ?___aldiv 0001  
                                ?___aodiv 0001                                  ?___aomod 0001  
                                ?___awdiv 0001                          ___aodiv@quotient 0013  
                             _fijaHoraRtc 1B8C                       __end_of_lecturaWifi 121A  
                          _DHT11_ReadData 1DDE                                setRtc@dato 0007  
                             ??_UART_init 0013                               ??_UART_read 0001  
                       __size_of_vfprintf 0062               mostrarDatosSensores@humedad 00F5  
          __end_of_escribeHorariosMemoria 13C6                            _encenderBombas 0012  
                               _horaRegar 2124            dameTemperaturaHumedad@checkSum 000A  
                  _dameTemperaturaHumedad 17A8                          ?_asignarHorarios 0001  
                                ?_sprintf 00AE                            __size_of_fputc 00CA  
                          __size_of_fputs 0044                            __size_of_putch 0002  
                         ___aldiv@divisor 0005                           ___aldiv@counter 0009  
                          ___wmul@product 0005                                  _LATDbits 000F8C  
                                _PIE1bits 000F9D                      __size_of_i2c_detener 0008  
                                i2u280_40 1C4C                                  i2u280_41 1C48  
                                _PIR1bits 000F9E                                  i2u277_40 1C04  
                                i2u277_41 1C00                                  i2u278_40 1C14  
                                i2u278_41 1C10                                  i2u279_40 1C2A  
                                i2u279_41 1C26                   restablecerDatosSensor@i 000C  
                    __size_of_i2c_iniciar 0016                          __CFG_WDTPS$32768 000000  
                  _tiempoInactividadTrans 008D             leeHorariosMemoria@contMemoria 0007  
                     asignarHorarios@hora 000F                    __end_of_DHT11_ReadData 1E3A  
                           ??_UART_printf 0004                    dameDatosSistema@buffer 00C2  
                               _vfpfcnvrt 07A4                                _ADCON0bits 000FC2  
                          _dameHoraActual 2150                         ___wmul@multiplier 0001  
              ??_mostrarDatosSensoresWIFI 0058                    __end_of_encenderBombas 02FA  
                           ??_mostrarMenu 0004                            UART_write@dato 0001  
                              ?_horaRegar 0001                     mostrarDatosSensores@i 00F6  
               __size_of_sistemaPrincipal 008A                  __end_of_i2c_reinicia_com 22C0  
                               copy_data0 1F44                               _escribe_rtc 2232  
                             _leer_eeprom 2082                              _VALOR_TIMER0 00FA  
              __end_of_leeHorariosMemoria 1558                                 estaSeco@s 0010  
                                __Hrparam 0000                              _minutosRegar 0085  
                             _lecturaWifi 1128                             UART_init@BAUD 000F  
                              vfprintf@ap 0054                                  __Lrparam 0000  
                              vfprintf@fp 0050                          _dameDatosSistema 121A  
dameTemperaturaHumedad@temperaturaDecimal 000D                       _esperaDatoConcluida 008B  
                        __size_of___aldiv 010C                           ?_DHT11_ReadData 0001  
                        __size_of___aodiv 0188                          __size_of___aomod 0164  
                        __size_of___awdiv 00C4                    __end_of_dameHoraActual 217C  
                              ?_vfpfcnvrt 0040                           DHT11_ReadData@i 0001  
                         ___aodiv@divisor 0009                           ___aodiv@counter 0011  
                         ?_encenderBombas 0001                                sprintf@fmt 00B0  
                __size_of_i2c_recibe_dato 001A                       __end_of_UART_printf 1DDE  
                                __ptext10 1C5A                                  __ptext11 0EDA  
                                __ptext20 2212                                  __ptext12 1128  
                                __ptext21 1DDE                                  __ptext13 1CBC  
                                __ptext30 02FA                                  __ptext22 16E4  
                                __ptext14 2296                                  __ptext31 161E  
                                __ptext23 1B8C                                  __ptext15 0C44  
                                __ptext40 12F8                                  __ptext32 20BE  
                                __ptext24 1558                                  __ptext16 1B24  
                                __ptext41 20F4                                  __ptext33 1FBE  
                                __ptext25 2232                                  __ptext17 1F78  
                                __ptext50 22A2                                  __ptext42 1E3A  
                                __ptext34 13C6                                  __ptext26 121A  
                                __ptext18 17A8                                  __ptext51 22C8  
                                __ptext43 1D80                                  __ptext35 22D4  
                                __ptext27 1E8E                                  __ptext19 2002  
                                __ptext52 21A6                                  __ptext44 226A  
                                __ptext36 2042                                  __ptext28 1D1E  
                                __ptext53 1994                                  __ptext45 1490  
                                __ptext37 0AE0                                  __ptext29 07A4  
                                __ptext54 21CC                                  __ptext46 2082  
                                __ptext38 0958                                  __ptext55 2280  
                                __ptext47 22B8                                  __ptext39 0D92  
                                __ptext56 22AE                                  __ptext48 2250  
                                __ptext57 1AB4                                  __ptext49 22C0  
                                __ptext58 101C                       __end_of_mostrarMenu 1CBC  
                        __size_of_sprintf 0052                                  _leer_rtc 217C  
                                _estaSeco 1EE0                __end_of_inicializarObjetos 1A2A  
                                _byteUart 008C                    __size_of_configurarAdc 000A  
                 __size_of_check_response 0040                       inicializarObjetos@i 0007  
                           __size_of_main 0096                             __size_of_dtoa 02E2  
                                _horarios 0100                              ?_DHT11_Start 0001  
    dameTemperaturaHumedad@humedadDecimal 000C                                  _segundos 0088  
                         encenderBombas@i 0018                                  _sensores 0060  
               mostrarDatosSensoresWIFI@i 00F6                                  int$flags 005F  
                                _vfprintf 1D1E                           ?_dameHoraActual 0001  
                 __size_of_i2c_envia_dato 000C                   __size_of_i2c_inicia_com 0008  
                i2c_recibe_dato@datoleido 0002                          ___aomod@dividend 0001  
                   __CFG_CPUDIV$OSC1_PLL2 000000                          ??_desbordamiento 0001  
                  __size_of_sistemaRegado 00A2                                _INTCONbits 000FF2  
                      constructorSensor@s 0007                               ??_horaRegar 0003  
         mostrarDatosSensoresWIFI@humedad 00F5                   escribe_eeprom@direccion 0007  
                                intlevel2 0000                                 sprintf@ap 00BA  
                         escribe_rtc@dato 0003                                  setRtc@Rx 000B  
                         setRtc@direccion 0006                         asignarHorarios@Rx 0013  
           __size_of_mostrarDatosSensores 014E                             _overflowTimer 0086  
                            ?_fijaHoraRtc 0001         dameTemperaturaHumedad@temperatura 000F  
                         ___aomod@divisor 0009                 __size_of_dameHumedadSuelo 0046  
                             ??_vfpfcnvrt 0046                           ___aomod@counter 0011  
                             _UART_printf 1D80                             _configurarAdc 22AE  
        __end_of_mostrarDatosSensoresWIFI 101C                                  sprintf@f 00BC  
                                sprintf@s 00AE                   ?_dameTemperaturaHumedad 0004  
                             _mostrarMenu 1C5A                              ___aldiv@sign 000A  
                        asignarHorarios@i 0011                          _sistemaPrincipal 1A2A  
                         leer_eeprom@dato 0006                               _SSPCON2bits 000FC5  
                              _UART_write 226A                              ___aodiv@sign 0012  
                       ??_i2c_recibe_dato 0002                    __size_of_convertirDato 0020  
                    leer_eeprom@direccion 0003                             _sistemaRegado 185C  
                            ___aomod@sign 0012                  ??_lecturaAnalogaSensores 0007  
