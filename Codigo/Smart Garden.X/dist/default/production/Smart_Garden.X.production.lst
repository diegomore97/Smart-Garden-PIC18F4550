

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Jun 17 19:45:04 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    87                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    88                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    89                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    90                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    91  0000                     
    92                           ; Version 2.10
    93                           ; Generated 31/07/2019 GMT
    94                           ; 
    95                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    96                           ; All rights reserved.
    97                           ; 
    98                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    99                           ; 
   100                           ; Redistribution and use in source and binary forms, with or without modification, are
   101                           ; permitted provided that the following conditions are met:
   102                           ; 
   103                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   104                           ;        conditions and the following disclaimer.
   105                           ; 
   106                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   107                           ;        of conditions and the following disclaimer in the documentation and/or other
   108                           ;        materials provided with the distribution.
   109                           ; 
   110                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   111                           ;        software without specific prior written permission.
   112                           ; 
   113                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   114                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   115                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   116                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   117                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   118                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   119                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   120                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   121                           ; 
   122                           ; 
   123                           ; Code-generator required, PIC18F4550 Definitions
   124                           ; 
   125                           ; SFR Addresses
   126  0000                     
   127                           	psect	idataBANK1
   128  002FA8                     __pidataBANK1:
   129                           	opt callstack 0
   130                           
   131                           ;initializer for stoa@F1144
   132  002FA8  28                 	db	40
   133  002FA9  6E                 	db	110
   134  002FAA  75                 	db	117
   135  002FAB  6C                 	db	108
   136  002FAC  6C                 	db	108
   137  002FAD  29                 	db	41
   138  002FAE  00                 	db	0
   139                           
   140                           ;initializer for _VALOR_TIMER0
   141  002FAF  6769               	dw	26473
   142                           
   143                           ;initializer for _VALOR_TIMER0UART
   144  002FB1  6769               	dw	26473
   145  0000                     _TMR0	set	4054
   146  0000                     _TRISD	set	3989
   147  0000                     _T0CON	set	4053
   148  0000                     _T0CONbits	set	4053
   149  0000                     _LATD	set	3980
   150  0000                     _PIE1bits	set	3997
   151  0000                     _ADRESL	set	4035
   152  0000                     _ADRESH	set	4036
   153  0000                     _ADCON0bits	set	4034
   154  0000                     _ADCON2	set	4032
   155  0000                     _ADCON1	set	4033
   156  0000                     _INTCONbits	set	4082
   157  0000                     _LATDbits	set	3980
   158  0000                     _TRISDbits	set	3989
   159  0000                     _PORTDbits	set	3971
   160  0000                     _TXREG	set	4013
   161  0000                     _RCREG	set	4014
   162  0000                     _PIR1bits	set	3998
   163  0000                     _RCSTAbits	set	4011
   164  0000                     _TXSTAbits	set	4012
   165  0000                     _SPBRG	set	4015
   166  0000                     _TRISCbits	set	3988
   167  0000                     _SSPBUF	set	4041
   168  0000                     _SSPCON2bits	set	4037
   169  0000                     _SSPADD	set	4040
   170  0000                     _SSPCON2	set	4037
   171  0000                     _SSPCON1	set	4038
   172  0000                     _SSPSTAT	set	4039
   173  0000                     _TRISBbits	set	3987
   174  0000                     _ACKSTAT	set	32302
   175                           
   176                           	psect	mediumconst
   177  0079E8                     __pmediumconst:
   178                           	opt callstack 0
   179  0079E8  00                 	db	0
   180  0079E9                     STR_16:
   181  0079E9  0D                 	db	13
   182  0079EA  0A                 	db	10
   183  0079EB  20                 	db	32
   184  0079EC  49                 	db	73	;'I'
   185  0079ED  6E                 	db	110	;'n'
   186  0079EE  67                 	db	103	;'g'
   187  0079EF  72                 	db	114	;'r'
   188  0079F0  65                 	db	101	;'e'
   189  0079F1  73                 	db	115	;'s'
   190  0079F2  65                 	db	101	;'e'
   191  0079F3  20                 	db	32
   192  0079F4  6C                 	db	108	;'l'
   193  0079F5  6F                 	db	111	;'o'
   194  0079F6  73                 	db	115	;'s'
   195  0079F7  20                 	db	32
   196  0079F8  6D                 	db	109	;'m'
   197  0079F9  69                 	db	105	;'i'
   198  0079FA  6E                 	db	110	;'n'
   199  0079FB  75                 	db	117	;'u'
   200  0079FC  74                 	db	116	;'t'
   201  0079FD  6F                 	db	111	;'o'
   202  0079FE  73                 	db	115	;'s'
   203  0079FF  20                 	db	32
   204  007A00  71                 	db	113	;'q'
   205  007A01  75                 	db	117	;'u'
   206  007A02  65                 	db	101	;'e'
   207  007A03  20                 	db	32
   208  007A04  64                 	db	100	;'d'
   209  007A05  65                 	db	101	;'e'
   210  007A06  73                 	db	115	;'s'
   211  007A07  65                 	db	101	;'e'
   212  007A08  65                 	db	101	;'e'
   213  007A09  20                 	db	32
   214  007A0A  71                 	db	113	;'q'
   215  007A0B  75                 	db	117	;'u'
   216  007A0C  65                 	db	101	;'e'
   217  007A0D  20                 	db	32
   218  007A0E  73                 	db	115	;'s'
   219  007A0F  65                 	db	101	;'e'
   220  007A10  20                 	db	32
   221  007A11  72                 	db	114	;'r'
   222  007A12  69                 	db	105	;'i'
   223  007A13  65                 	db	101	;'e'
   224  007A14  67                 	db	103	;'g'
   225  007A15  75                 	db	117	;'u'
   226  007A16  65                 	db	101	;'e'
   227  007A17  20                 	db	32
   228  007A18  65                 	db	101	;'e'
   229  007A19  6E                 	db	110	;'n'
   230  007A1A  20                 	db	32
   231  007A1B  65                 	db	101	;'e'
   232  007A1C  73                 	db	115	;'s'
   233  007A1D  65                 	db	101	;'e'
   234  007A1E  20                 	db	32
   235  007A1F  68                 	db	104	;'h'
   236  007A20  6F                 	db	111	;'o'
   237  007A21  72                 	db	114	;'r'
   238  007A22  61                 	db	97	;'a'
   239  007A23  72                 	db	114	;'r'
   240  007A24  69                 	db	105	;'i'
   241  007A25  6F                 	db	111	;'o'
   242  007A26  20                 	db	32
   243  007A27  65                 	db	101	;'e'
   244  007A28  6A                 	db	106	;'j'
   245  007A29  3A                 	db	58	;':'
   246  007A2A  20                 	db	32
   247  007A2B  31                 	db	49	;'1'
   248  007A2C  35                 	db	53	;'5'
   249  007A2D  20                 	db	32
   250  007A2E  0D                 	db	13
   251  007A2F  0A                 	db	10
   252  007A30  00                 	db	0
   253  007A31                     STR_1:
   254  007A31  0D                 	db	13
   255  007A32  0A                 	db	10
   256  007A33  20                 	db	32
   257  007A34  45                 	db	69	;'E'
   258  007A35  6E                 	db	110	;'n'
   259  007A36  76                 	db	118	;'v'
   260  007A37  69                 	db	105	;'i'
   261  007A38  65                 	db	101	;'e'
   262  007A39  20                 	db	32
   263  007A3A  65                 	db	101	;'e'
   264  007A3B  6C                 	db	108	;'l'
   265  007A3C  20                 	db	32
   266  007A3D  64                 	db	100	;'d'
   267  007A3E  69                 	db	105	;'i'
   268  007A3F  61                 	db	97	;'a'
   269  007A40  20                 	db	32
   270  007A41  64                 	db	100	;'d'
   271  007A42  65                 	db	101	;'e'
   272  007A43  20                 	db	32
   273  007A44  6C                 	db	108	;'l'
   274  007A45  61                 	db	97	;'a'
   275  007A46  20                 	db	32
   276  007A47  73                 	db	115	;'s'
   277  007A48  65                 	db	101	;'e'
   278  007A49  6D                 	db	109	;'m'
   279  007A4A  61                 	db	97	;'a'
   280  007A4B  6E                 	db	110	;'n'
   281  007A4C  61                 	db	97	;'a'
   282  007A4D  20                 	db	32
   283  007A4E  45                 	db	69	;'E'
   284  007A4F  6A                 	db	106	;'j'
   285  007A50  3A                 	db	58	;':'
   286  007A51  20                 	db	32
   287  007A52  30                 	db	48	;'0'
   288  007A53  31                 	db	49	;'1'
   289  007A54  20                 	db	32
   290  007A55  3D                 	db	61	;'='
   291  007A56  20                 	db	32
   292  007A57  44                 	db	68	;'D'
   293  007A58  4F                 	db	79	;'O'
   294  007A59  4D                 	db	77	;'M'
   295  007A5A  49                 	db	73	;'I'
   296  007A5B  4E                 	db	78	;'N'
   297  007A5C  47                 	db	71	;'G'
   298  007A5D  4F                 	db	79	;'O'
   299  007A5E  20                 	db	32
   300  007A5F  2E                 	db	46
   301  007A60  2E                 	db	46
   302  007A61  2E                 	db	46
   303  007A62  20                 	db	32
   304  007A63  30                 	db	48	;'0'
   305  007A64  37                 	db	55	;'7'
   306  007A65  20                 	db	32
   307  007A66  3D                 	db	61	;'='
   308  007A67  20                 	db	32
   309  007A68  53                 	db	83	;'S'
   310  007A69  41                 	db	65	;'A'
   311  007A6A  42                 	db	66	;'B'
   312  007A6B  41                 	db	65	;'A'
   313  007A6C  44                 	db	68	;'D'
   314  007A6D  4F                 	db	79	;'O'
   315  007A6E  20                 	db	32
   316  007A6F  0D                 	db	13
   317  007A70  0A                 	db	10
   318  007A71  00                 	db	0
   319  007A72                     STR_32:
   320  007A72  0D                 	db	13
   321  007A73  0A                 	db	10
   322  007A74  0A                 	db	10
   323  007A75  48                 	db	72	;'H'
   324  007A76  6F                 	db	111	;'o'
   325  007A77  72                 	db	114	;'r'
   326  007A78  61                 	db	97	;'a'
   327  007A79  20                 	db	32
   328  007A7A  7C                 	db	124
   329  007A7B  20                 	db	32
   330  007A7C  52                 	db	82	;'R'
   331  007A7D  65                 	db	101	;'e'
   332  007A7E  67                 	db	103	;'g'
   333  007A7F  61                 	db	97	;'a'
   334  007A80  72                 	db	114	;'r'
   335  007A81  28                 	db	40
   336  007A82  31                 	db	49	;'1'
   337  007A83  20                 	db	32
   338  007A84  73                 	db	115	;'s'
   339  007A85  69                 	db	105	;'i'
   340  007A86  20                 	db	32
   341  007A87  30                 	db	48	;'0'
   342  007A88  20                 	db	32
   343  007A89  6E                 	db	110	;'n'
   344  007A8A  6F                 	db	111	;'o'
   345  007A8B  29                 	db	41
   346  007A8C  20                 	db	32
   347  007A8D  7C                 	db	124
   348  007A8E  20                 	db	32
   349  007A8F  4D                 	db	77	;'M'
   350  007A90  69                 	db	105	;'i'
   351  007A91  6E                 	db	110	;'n'
   352  007A92  75                 	db	117	;'u'
   353  007A93  74                 	db	116	;'t'
   354  007A94  6F                 	db	111	;'o'
   355  007A95  73                 	db	115	;'s'
   356  007A96  20                 	db	32
   357  007A97  64                 	db	100	;'d'
   358  007A98  65                 	db	101	;'e'
   359  007A99  20                 	db	32
   360  007A9A  72                 	db	114	;'r'
   361  007A9B  69                 	db	105	;'i'
   362  007A9C  65                 	db	101	;'e'
   363  007A9D  67                 	db	103	;'g'
   364  007A9E  6F                 	db	111	;'o'
   365  007A9F  20                 	db	32
   366  007AA0  7C                 	db	124
   367  007AA1  20                 	db	32
   368  007AA2  44                 	db	68	;'D'
   369  007AA3  49                 	db	73	;'I'
   370  007AA4  41                 	db	65	;'A'
   371  007AA5  53                 	db	83	;'S'
   372  007AA6  20                 	db	32
   373  007AA7  52                 	db	82	;'R'
   374  007AA8  45                 	db	69	;'E'
   375  007AA9  47                 	db	71	;'G'
   376  007AAA  41                 	db	65	;'A'
   377  007AAB  52                 	db	82	;'R'
   378  007AAC  0D                 	db	13
   379  007AAD  0A                 	db	10
   380  007AAE  0A                 	db	10
   381  007AAF  00                 	db	0
   382  007AB0                     STR_9:
   383  007AB0  0D                 	db	13
   384  007AB1  0A                 	db	10
   385  007AB2  20                 	db	32
   386  007AB3  49                 	db	73	;'I'
   387  007AB4  6E                 	db	110	;'n'
   388  007AB5  67                 	db	103	;'g'
   389  007AB6  72                 	db	114	;'r'
   390  007AB7  65                 	db	101	;'e'
   391  007AB8  73                 	db	115	;'s'
   392  007AB9  65                 	db	101	;'e'
   393  007ABA  20                 	db	32
   394  007ABB  31                 	db	49	;'1'
   395  007ABC  20                 	db	32
   396  007ABD  70                 	db	112	;'p'
   397  007ABE  61                 	db	97	;'a'
   398  007ABF  72                 	db	114	;'r'
   399  007AC0  61                 	db	97	;'a'
   400  007AC1  20                 	db	32
   401  007AC2  61                 	db	97	;'a'
   402  007AC3  63                 	db	99	;'c'
   403  007AC4  74                 	db	116	;'t'
   404  007AC5  69                 	db	105	;'i'
   405  007AC6  76                 	db	118	;'v'
   406  007AC7  61                 	db	97	;'a'
   407  007AC8  72                 	db	114	;'r'
   408  007AC9  20                 	db	32
   409  007ACA  7C                 	db	124
   410  007ACB  7C                 	db	124
   411  007ACC  20                 	db	32
   412  007ACD  69                 	db	105	;'i'
   413  007ACE  6E                 	db	110	;'n'
   414  007ACF  67                 	db	103	;'g'
   415  007AD0  72                 	db	114	;'r'
   416  007AD1  65                 	db	101	;'e'
   417  007AD2  73                 	db	115	;'s'
   418  007AD3  65                 	db	101	;'e'
   419  007AD4  20                 	db	32
   420  007AD5  30                 	db	48	;'0'
   421  007AD6  20                 	db	32
   422  007AD7  70                 	db	112	;'p'
   423  007AD8  61                 	db	97	;'a'
   424  007AD9  72                 	db	114	;'r'
   425  007ADA  61                 	db	97	;'a'
   426  007ADB  20                 	db	32
   427  007ADC  64                 	db	100	;'d'
   428  007ADD  65                 	db	101	;'e'
   429  007ADE  73                 	db	115	;'s'
   430  007ADF  61                 	db	97	;'a'
   431  007AE0  63                 	db	99	;'c'
   432  007AE1  74                 	db	116	;'t'
   433  007AE2  69                 	db	105	;'i'
   434  007AE3  76                 	db	118	;'v'
   435  007AE4  61                 	db	97	;'a'
   436  007AE5  72                 	db	114	;'r'
   437  007AE6  3A                 	db	58	;':'
   438  007AE7  20                 	db	32
   439  007AE8  0D                 	db	13
   440  007AE9  0A                 	db	10
   441  007AEA  00                 	db	0
   442  007AEB                     STR_49:
   443  007AEB  0D                 	db	13
   444  007AEC  0A                 	db	10
   445  007AED  20                 	db	32
   446  007AEE  59                 	db	89	;'Y'
   447  007AEF  61                 	db	97	;'a'
   448  007AF0  20                 	db	32
   449  007AF1  73                 	db	115	;'s'
   450  007AF2  65                 	db	101	;'e'
   451  007AF3  20                 	db	32
   452  007AF4  65                 	db	101	;'e'
   453  007AF5  73                 	db	115	;'s'
   454  007AF6  74                 	db	116	;'t'
   455  007AF7  61                 	db	97	;'a'
   456  007AF8  20                 	db	32
   457  007AF9  65                 	db	101	;'e'
   458  007AFA  66                 	db	102	;'f'
   459  007AFB  65                 	db	101	;'e'
   460  007AFC  63                 	db	99	;'c'
   461  007AFD  74                 	db	116	;'t'
   462  007AFE  75                 	db	117	;'u'
   463  007AFF  61                 	db	97	;'a'
   464  007B00  6E                 	db	110	;'n'
   465  007B01  64                 	db	100	;'d'
   466  007B02  6F                 	db	111	;'o'
   467  007B03  20                 	db	32
   468  007B04  75                 	db	117	;'u'
   469  007B05  6E                 	db	110	;'n'
   470  007B06  20                 	db	32
   471  007B07  72                 	db	114	;'r'
   472  007B08  69                 	db	105	;'i'
   473  007B09  65                 	db	101	;'e'
   474  007B0A  67                 	db	103	;'g'
   475  007B0B  6F                 	db	111	;'o'
   476  007B0C  2C                 	db	44
   477  007B0D  20                 	db	32
   478  007B0E  69                 	db	105	;'i'
   479  007B0F  6E                 	db	110	;'n'
   480  007B10  74                 	db	116	;'t'
   481  007B11  65                 	db	101	;'e'
   482  007B12  6E                 	db	110	;'n'
   483  007B13  74                 	db	116	;'t'
   484  007B14  65                 	db	101	;'e'
   485  007B15  6C                 	db	108	;'l'
   486  007B16  6F                 	db	111	;'o'
   487  007B17  20                 	db	32
   488  007B18  6D                 	db	109	;'m'
   489  007B19  61                 	db	97	;'a'
   490  007B1A  73                 	db	115	;'s'
   491  007B1B  20                 	db	32
   492  007B1C  74                 	db	116	;'t'
   493  007B1D  61                 	db	97	;'a'
   494  007B1E  72                 	db	114	;'r'
   495  007B1F  64                 	db	100	;'d'
   496  007B20  65                 	db	101	;'e'
   497  007B21  20                 	db	32
   498  007B22  0D                 	db	13
   499  007B23  0A                 	db	10
   500  007B24  00                 	db	0
   501  007B25                     STR_48:
   502  007B25  0D                 	db	13
   503  007B26  0A                 	db	10
   504  007B27  20                 	db	32
   505  007B28  49                 	db	73	;'I'
   506  007B29  6E                 	db	110	;'n'
   507  007B2A  67                 	db	103	;'g'
   508  007B2B  72                 	db	114	;'r'
   509  007B2C  65                 	db	101	;'e'
   510  007B2D  73                 	db	115	;'s'
   511  007B2E  65                 	db	101	;'e'
   512  007B2F  20                 	db	32
   513  007B30  65                 	db	101	;'e'
   514  007B31  6C                 	db	108	;'l'
   515  007B32  20                 	db	32
   516  007B33  6E                 	db	110	;'n'
   517  007B34  75                 	db	117	;'u'
   518  007B35  6D                 	db	109	;'m'
   519  007B36  65                 	db	101	;'e'
   520  007B37  72                 	db	114	;'r'
   521  007B38  6F                 	db	111	;'o'
   522  007B39  20                 	db	32
   523  007B3A  64                 	db	100	;'d'
   524  007B3B  65                 	db	101	;'e'
   525  007B3C  20                 	db	32
   526  007B3D  73                 	db	115	;'s'
   527  007B3E  65                 	db	101	;'e'
   528  007B3F  6E                 	db	110	;'n'
   529  007B40  73                 	db	115	;'s'
   530  007B41  6F                 	db	111	;'o'
   531  007B42  72                 	db	114	;'r'
   532  007B43  20                 	db	32
   533  007B44  64                 	db	100	;'d'
   534  007B45  65                 	db	101	;'e'
   535  007B46  6C                 	db	108	;'l'
   536  007B47  20                 	db	32
   537  007B48  61                 	db	97	;'a'
   538  007B49  72                 	db	114	;'r'
   539  007B4A  65                 	db	101	;'e'
   540  007B4B  61                 	db	97	;'a'
   541  007B4C  20                 	db	32
   542  007B4D  61                 	db	97	;'a'
   543  007B4E  20                 	db	32
   544  007B4F  72                 	db	114	;'r'
   545  007B50  65                 	db	101	;'e'
   546  007B51  67                 	db	103	;'g'
   547  007B52  61                 	db	97	;'a'
   548  007B53  72                 	db	114	;'r'
   549  007B54  20                 	db	32
   550  007B55  65                 	db	101	;'e'
   551  007B56  6A                 	db	106	;'j'
   552  007B57  3A                 	db	58	;':'
   553  007B58  20                 	db	32
   554  007B59  35                 	db	53	;'5'
   555  007B5A  20                 	db	32
   556  007B5B  0D                 	db	13
   557  007B5C  0A                 	db	10
   558  007B5D  00                 	db	0
   559  007B5E                     STR_47:
   560  007B5E  0D                 	db	13
   561  007B5F  0A                 	db	10
   562  007B60  20                 	db	32
   563  007B61  49                 	db	73	;'I'
   564  007B62  6E                 	db	110	;'n'
   565  007B63  67                 	db	103	;'g'
   566  007B64  72                 	db	114	;'r'
   567  007B65  65                 	db	101	;'e'
   568  007B66  73                 	db	115	;'s'
   569  007B67  65                 	db	101	;'e'
   570  007B68  20                 	db	32
   571  007B69  6C                 	db	108	;'l'
   572  007B6A  6F                 	db	111	;'o'
   573  007B6B  73                 	db	115	;'s'
   574  007B6C  20                 	db	32
   575  007B6D  6D                 	db	109	;'m'
   576  007B6E  69                 	db	105	;'i'
   577  007B6F  6E                 	db	110	;'n'
   578  007B70  75                 	db	117	;'u'
   579  007B71  74                 	db	116	;'t'
   580  007B72  6F                 	db	111	;'o'
   581  007B73  73                 	db	115	;'s'
   582  007B74  20                 	db	32
   583  007B75  71                 	db	113	;'q'
   584  007B76  75                 	db	117	;'u'
   585  007B77  65                 	db	101	;'e'
   586  007B78  20                 	db	32
   587  007B79  64                 	db	100	;'d'
   588  007B7A  65                 	db	101	;'e'
   589  007B7B  73                 	db	115	;'s'
   590  007B7C  65                 	db	101	;'e'
   591  007B7D  65                 	db	101	;'e'
   592  007B7E  20                 	db	32
   593  007B7F  71                 	db	113	;'q'
   594  007B80  75                 	db	117	;'u'
   595  007B81  65                 	db	101	;'e'
   596  007B82  20                 	db	32
   597  007B83  73                 	db	115	;'s'
   598  007B84  65                 	db	101	;'e'
   599  007B85  20                 	db	32
   600  007B86  72                 	db	114	;'r'
   601  007B87  69                 	db	105	;'i'
   602  007B88  65                 	db	101	;'e'
   603  007B89  67                 	db	103	;'g'
   604  007B8A  75                 	db	117	;'u'
   605  007B8B  65                 	db	101	;'e'
   606  007B8C  20                 	db	32
   607  007B8D  65                 	db	101	;'e'
   608  007B8E  6A                 	db	106	;'j'
   609  007B8F  3A                 	db	58	;':'
   610  007B90  20                 	db	32
   611  007B91  31                 	db	49	;'1'
   612  007B92  35                 	db	53	;'5'
   613  007B93  20                 	db	32
   614  007B94  0D                 	db	13
   615  007B95  0A                 	db	10
   616  007B96  00                 	db	0
   617  007B97                     STR_33:
   618  007B97  20                 	db	32
   619  007B98  20                 	db	32
   620  007B99  20                 	db	32
   621  007B9A  20                 	db	32
   622  007B9B  20                 	db	32
   623  007B9C  20                 	db	32
   624  007B9D  20                 	db	32
   625  007B9E  20                 	db	32
   626  007B9F  20                 	db	32
   627  007BA0  20                 	db	32
   628  007BA1  20                 	db	32
   629  007BA2  20                 	db	32
   630  007BA3  20                 	db	32
   631  007BA4  20                 	db	32
   632  007BA5  20                 	db	32
   633  007BA6  20                 	db	32
   634  007BA7  20                 	db	32
   635  007BA8  20                 	db	32
   636  007BA9  20                 	db	32
   637  007BAA  20                 	db	32
   638  007BAB  20                 	db	32
   639  007BAC  20                 	db	32
   640  007BAD  20                 	db	32
   641  007BAE  20                 	db	32
   642  007BAF  20                 	db	32
   643  007BB0  20                 	db	32
   644  007BB1  20                 	db	32
   645  007BB2  20                 	db	32
   646  007BB3  20                 	db	32
   647  007BB4  20                 	db	32
   648  007BB5  20                 	db	32
   649  007BB6  20                 	db	32
   650  007BB7  20                 	db	32
   651  007BB8  20                 	db	32
   652  007BB9  20                 	db	32
   653  007BBA  20                 	db	32
   654  007BBB  20                 	db	32
   655  007BBC  20                 	db	32
   656  007BBD  20                 	db	32
   657  007BBE  20                 	db	32
   658  007BBF  20                 	db	32
   659  007BC0  20                 	db	32
   660  007BC1  20                 	db	32
   661  007BC2  20                 	db	32
   662  007BC3  20                 	db	32
   663  007BC4  44                 	db	68	;'D'
   664  007BC5  4C                 	db	76	;'L'
   665  007BC6  4D                 	db	77	;'M'
   666  007BC7  49                 	db	73	;'I'
   667  007BC8  4A                 	db	74	;'J'
   668  007BC9  56                 	db	86	;'V'
   669  007BCA  53                 	db	83	;'S'
   670  007BCB  0D                 	db	13
   671  007BCC  0A                 	db	10
   672  007BCD  00                 	db	0
   673  007BCE                     STR_34:
   674  007BCE  20                 	db	32
   675  007BCF  25                 	db	37
   676  007BD0  32                 	db	50	;'2'
   677  007BD1  64                 	db	100	;'d'
   678  007BD2  20                 	db	32
   679  007BD3  20                 	db	32
   680  007BD4  7C                 	db	124
   681  007BD5  20                 	db	32
   682  007BD6  20                 	db	32
   683  007BD7  20                 	db	32
   684  007BD8  20                 	db	32
   685  007BD9  20                 	db	32
   686  007BDA  20                 	db	32
   687  007BDB  20                 	db	32
   688  007BDC  20                 	db	32
   689  007BDD  20                 	db	32
   690  007BDE  20                 	db	32
   691  007BDF  25                 	db	37
   692  007BE0  64                 	db	100	;'d'
   693  007BE1  20                 	db	32
   694  007BE2  20                 	db	32
   695  007BE3  20                 	db	32
   696  007BE4  20                 	db	32
   697  007BE5  20                 	db	32
   698  007BE6  20                 	db	32
   699  007BE7  20                 	db	32
   700  007BE8  7C                 	db	124
   701  007BE9  20                 	db	32
   702  007BEA  20                 	db	32
   703  007BEB  20                 	db	32
   704  007BEC  20                 	db	32
   705  007BED  20                 	db	32
   706  007BEE  20                 	db	32
   707  007BEF  20                 	db	32
   708  007BF0  20                 	db	32
   709  007BF1  20                 	db	32
   710  007BF2  25                 	db	37
   711  007BF3  32                 	db	50	;'2'
   712  007BF4  64                 	db	100	;'d'
   713  007BF5  20                 	db	32
   714  007BF6  20                 	db	32
   715  007BF7  20                 	db	32
   716  007BF8  20                 	db	32
   717  007BF9  20                 	db	32
   718  007BFA  20                 	db	32
   719  007BFB  20                 	db	32
   720  007BFC  7C                 	db	124
   721  007BFD  20                 	db	32
   722  007BFE  25                 	db	37
   723  007BFF  73                 	db	115	;'s'
   724  007C00  0D                 	db	13
   725  007C01  0A                 	db	10
   726  007C02  00                 	db	0
   727  007C03                     STR_8:
   728  007C03  0D                 	db	13
   729  007C04  0A                 	db	10
   730  007C05  20                 	db	32
   731  007C06  49                 	db	73	;'I'
   732  007C07  6E                 	db	110	;'n'
   733  007C08  67                 	db	103	;'g'
   734  007C09  72                 	db	114	;'r'
   735  007C0A  65                 	db	101	;'e'
   736  007C0B  73                 	db	115	;'s'
   737  007C0C  65                 	db	101	;'e'
   738  007C0D  20                 	db	32
   739  007C0E  75                 	db	117	;'u'
   740  007C0F  6E                 	db	110	;'n'
   741  007C10  61                 	db	97	;'a'
   742  007C11  20                 	db	32
   743  007C12  68                 	db	104	;'h'
   744  007C13  6F                 	db	111	;'o'
   745  007C14  72                 	db	114	;'r'
   746  007C15  61                 	db	97	;'a'
   747  007C16  20                 	db	32
   748  007C17  65                 	db	101	;'e'
   749  007C18  6E                 	db	110	;'n'
   750  007C19  20                 	db	32
   751  007C1A  66                 	db	102	;'f'
   752  007C1B  6F                 	db	111	;'o'
   753  007C1C  72                 	db	114	;'r'
   754  007C1D  6D                 	db	109	;'m'
   755  007C1E  61                 	db	97	;'a'
   756  007C1F  74                 	db	116	;'t'
   757  007C20  6F                 	db	111	;'o'
   758  007C21  20                 	db	32
   759  007C22  64                 	db	100	;'d'
   760  007C23  65                 	db	101	;'e'
   761  007C24  20                 	db	32
   762  007C25  32                 	db	50	;'2'
   763  007C26  34                 	db	52	;'4'
   764  007C27  20                 	db	32
   765  007C28  68                 	db	104	;'h'
   766  007C29  72                 	db	114	;'r'
   767  007C2A  73                 	db	115	;'s'
   768  007C2B  20                 	db	32
   769  007C2C  65                 	db	101	;'e'
   770  007C2D  6A                 	db	106	;'j'
   771  007C2E  3A                 	db	58	;':'
   772  007C2F  20                 	db	32
   773  007C30  31                 	db	49	;'1'
   774  007C31  35                 	db	53	;'5'
   775  007C32  20                 	db	32
   776  007C33  0D                 	db	13
   777  007C34  0A                 	db	10
   778  007C35  00                 	db	0
   779  007C36                     STR_19:
   780  007C36  0D                 	db	13
   781  007C37  0A                 	db	10
   782  007C38  49                 	db	73	;'I'
   783  007C39  6E                 	db	110	;'n'
   784  007C3A  67                 	db	103	;'g'
   785  007C3B  72                 	db	114	;'r'
   786  007C3C  65                 	db	101	;'e'
   787  007C3D  73                 	db	115	;'s'
   788  007C3E  65                 	db	101	;'e'
   789  007C3F  20                 	db	32
   790  007C40  65                 	db	101	;'e'
   791  007C41  6C                 	db	108	;'l'
   792  007C42  20                 	db	32
   793  007C43  70                 	db	112	;'p'
   794  007C44  6F                 	db	111	;'o'
   795  007C45  72                 	db	114	;'r'
   796  007C46  63                 	db	99	;'c'
   797  007C47  65                 	db	101	;'e'
   798  007C48  6E                 	db	110	;'n'
   799  007C49  74                 	db	116	;'t'
   800  007C4A  61                 	db	97	;'a'
   801  007C4B  6A                 	db	106	;'j'
   802  007C4C  65                 	db	101	;'e'
   803  007C4D  20                 	db	32
   804  007C4E  64                 	db	100	;'d'
   805  007C4F  65                 	db	101	;'e'
   806  007C50  20                 	db	32
   807  007C51  68                 	db	104	;'h'
   808  007C52  75                 	db	117	;'u'
   809  007C53  6D                 	db	109	;'m'
   810  007C54  65                 	db	101	;'e'
   811  007C55  64                 	db	100	;'d'
   812  007C56  61                 	db	97	;'a'
   813  007C57  64                 	db	100	;'d'
   814  007C58  20                 	db	32
   815  007C59  64                 	db	100	;'d'
   816  007C5A  65                 	db	101	;'e'
   817  007C5B  6C                 	db	108	;'l'
   818  007C5C  20                 	db	32
   819  007C5D  73                 	db	115	;'s'
   820  007C5E  65                 	db	101	;'e'
   821  007C5F  6E                 	db	110	;'n'
   822  007C60  73                 	db	115	;'s'
   823  007C61  6F                 	db	111	;'o'
   824  007C62  72                 	db	114	;'r'
   825  007C63  20                 	db	32
   826  007C64  25                 	db	37
   827  007C65  64                 	db	100	;'d'
   828  007C66  0D                 	db	13
   829  007C67  0A                 	db	10
   830  007C68  00                 	db	0
   831  007C69                     STR_24:
   832  007C69  0D                 	db	13
   833  007C6A  0A                 	db	10
   834  007C6B  20                 	db	32
   835  007C6C  33                 	db	51	;'3'
   836  007C6D  2E                 	db	46
   837  007C6E  20                 	db	32
   838  007C6F  50                 	db	80	;'P'
   839  007C70  72                 	db	114	;'r'
   840  007C71  6F                 	db	111	;'o'
   841  007C72  67                 	db	103	;'g'
   842  007C73  72                 	db	114	;'r'
   843  007C74  61                 	db	97	;'a'
   844  007C75  6D                 	db	109	;'m'
   845  007C76  61                 	db	97	;'a'
   846  007C77  72                 	db	114	;'r'
   847  007C78  20                 	db	32
   848  007C79  74                 	db	116	;'t'
   849  007C7A  69                 	db	105	;'i'
   850  007C7B  65                 	db	101	;'e'
   851  007C7C  6D                 	db	109	;'m'
   852  007C7D  70                 	db	112	;'p'
   853  007C7E  6F                 	db	111	;'o'
   854  007C7F  20                 	db	32
   855  007C80  64                 	db	100	;'d'
   856  007C81  65                 	db	101	;'e'
   857  007C82  20                 	db	32
   858  007C83  72                 	db	114	;'r'
   859  007C84  69                 	db	105	;'i'
   860  007C85  65                 	db	101	;'e'
   861  007C86  67                 	db	103	;'g'
   862  007C87  6F                 	db	111	;'o'
   863  007C88  20                 	db	32
   864  007C89  65                 	db	101	;'e'
   865  007C8A  6E                 	db	110	;'n'
   866  007C8B  20                 	db	32
   867  007C8C  75                 	db	117	;'u'
   868  007C8D  6E                 	db	110	;'n'
   869  007C8E  20                 	db	32
   870  007C8F  68                 	db	104	;'h'
   871  007C90  6F                 	db	111	;'o'
   872  007C91  72                 	db	114	;'r'
   873  007C92  61                 	db	97	;'a'
   874  007C93  72                 	db	114	;'r'
   875  007C94  69                 	db	105	;'i'
   876  007C95  6F                 	db	111	;'o'
   877  007C96  20                 	db	32
   878  007C97  0D                 	db	13
   879  007C98  0A                 	db	10
   880  007C99  00                 	db	0
   881  007C9A                     STR_38:
   882  007C9A  0D                 	db	13
   883  007C9B  0A                 	db	10
   884  007C9C  0A                 	db	10
   885  007C9D  50                 	db	80	;'P'
   886  007C9E  6F                 	db	111	;'o'
   887  007C9F  72                 	db	114	;'r'
   888  007CA0  63                 	db	99	;'c'
   889  007CA1  65                 	db	101	;'e'
   890  007CA2  6E                 	db	110	;'n'
   891  007CA3  74                 	db	116	;'t'
   892  007CA4  61                 	db	97	;'a'
   893  007CA5  6A                 	db	106	;'j'
   894  007CA6  65                 	db	101	;'e'
   895  007CA7  20                 	db	32
   896  007CA8  48                 	db	72	;'H'
   897  007CA9  75                 	db	117	;'u'
   898  007CAA  6D                 	db	109	;'m'
   899  007CAB  65                 	db	101	;'e'
   900  007CAC  64                 	db	100	;'d'
   901  007CAD  61                 	db	97	;'a'
   902  007CAE  64                 	db	100	;'d'
   903  007CAF  20                 	db	32
   904  007CB0  64                 	db	100	;'d'
   905  007CB1  65                 	db	101	;'e'
   906  007CB2  6C                 	db	108	;'l'
   907  007CB3  20                 	db	32
   908  007CB4  73                 	db	115	;'s'
   909  007CB5  65                 	db	101	;'e'
   910  007CB6  6E                 	db	110	;'n'
   911  007CB7  73                 	db	115	;'s'
   912  007CB8  6F                 	db	111	;'o'
   913  007CB9  72                 	db	114	;'r'
   914  007CBA  20                 	db	32
   915  007CBB  25                 	db	37
   916  007CBC  64                 	db	100	;'d'
   917  007CBD  3A                 	db	58	;':'
   918  007CBE  20                 	db	32
   919  007CBF  25                 	db	37
   920  007CC0  64                 	db	100	;'d'
   921  007CC1  20                 	db	32
   922  007CC2  25                 	db	37
   923  007CC3  63                 	db	99	;'c'
   924  007CC4  0D                 	db	13
   925  007CC5  0A                 	db	10
   926  007CC6  00                 	db	0
   927  007CC7                     STR_4:
   928  007CC7  0D                 	db	13
   929  007CC8  0A                 	db	10
   930  007CC9  20                 	db	32
   931  007CCA  45                 	db	69	;'E'
   932  007CCB  6E                 	db	110	;'n'
   933  007CCC  76                 	db	118	;'v'
   934  007CCD  69                 	db	105	;'i'
   935  007CCE  65                 	db	101	;'e'
   936  007CCF  20                 	db	32
   937  007CD0  6C                 	db	108	;'l'
   938  007CD1  61                 	db	97	;'a'
   939  007CD2  73                 	db	115	;'s'
   940  007CD3  20                 	db	32
   941  007CD4  48                 	db	72	;'H'
   942  007CD5  6F                 	db	111	;'o'
   943  007CD6  72                 	db	114	;'r'
   944  007CD7  61                 	db	97	;'a'
   945  007CD8  73                 	db	115	;'s'
   946  007CD9  20                 	db	32
   947  007CDA  65                 	db	101	;'e'
   948  007CDB  6E                 	db	110	;'n'
   949  007CDC  20                 	db	32
   950  007CDD  66                 	db	102	;'f'
   951  007CDE  6F                 	db	111	;'o'
   952  007CDF  72                 	db	114	;'r'
   953  007CE0  6D                 	db	109	;'m'
   954  007CE1  61                 	db	97	;'a'
   955  007CE2  74                 	db	116	;'t'
   956  007CE3  6F                 	db	111	;'o'
   957  007CE4  20                 	db	32
   958  007CE5  32                 	db	50	;'2'
   959  007CE6  34                 	db	52	;'4'
   960  007CE7  20                 	db	32
   961  007CE8  45                 	db	69	;'E'
   962  007CE9  6A                 	db	106	;'j'
   963  007CEA  3A                 	db	58	;':'
   964  007CEB  20                 	db	32
   965  007CEC  31                 	db	49	;'1'
   966  007CED  35                 	db	53	;'5'
   967  007CEE  20                 	db	32
   968  007CEF  0D                 	db	13
   969  007CF0  0A                 	db	10
   970  007CF1  00                 	db	0
   971  007CF2                     STR_31:
   972  007CF2  0D                 	db	13
   973  007CF3  0A                 	db	10
   974  007CF4  20                 	db	32
   975  007CF5  53                 	db	83	;'S'
   976  007CF6  6F                 	db	111	;'o'
   977  007CF7  6C                 	db	108	;'l'
   978  007CF8  6F                 	db	111	;'o'
   979  007CF9  20                 	db	32
   980  007CFA  73                 	db	115	;'s'
   981  007CFB  65                 	db	101	;'e'
   982  007CFC  20                 	db	32
   983  007CFD  70                 	db	112	;'p'
   984  007CFE  65                 	db	101	;'e'
   985  007CFF  72                 	db	114	;'r'
   986  007D00  6D                 	db	109	;'m'
   987  007D01  69                 	db	105	;'i'
   988  007D02  74                 	db	116	;'t'
   989  007D03  65                 	db	101	;'e'
   990  007D04  6E                 	db	110	;'n'
   991  007D05  20                 	db	32
   992  007D06  6E                 	db	110	;'n'
   993  007D07  75                 	db	117	;'u'
   994  007D08  6D                 	db	109	;'m'
   995  007D09  65                 	db	101	;'e'
   996  007D0A  72                 	db	114	;'r'
   997  007D0B  6F                 	db	111	;'o'
   998  007D0C  73                 	db	115	;'s'
   999  007D0D  20                 	db	32
  1000  007D0E  64                 	db	100	;'d'
  1001  007D0F  65                 	db	101	;'e'
  1002  007D10  6C                 	db	108	;'l'
  1003  007D11  20                 	db	32
  1004  007D12  31                 	db	49	;'1'
  1005  007D13  20                 	db	32
  1006  007D14  61                 	db	97	;'a'
  1007  007D15  6C                 	db	108	;'l'
  1008  007D16  20                 	db	32
  1009  007D17  33                 	db	51	;'3'
  1010  007D18  20                 	db	32
  1011  007D19  0D                 	db	13
  1012  007D1A  0A                 	db	10
  1013  007D1B  00                 	db	0
  1014  007D1C                     STR_18:
  1015  007D1C  0D                 	db	13
  1016  007D1D  0A                 	db	10
  1017  007D1E  53                 	db	83	;'S'
  1018  007D1F  6F                 	db	111	;'o'
  1019  007D20  6C                 	db	108	;'l'
  1020  007D21  69                 	db	105	;'i'
  1021  007D22  63                 	db	99	;'c'
  1022  007D23  69                 	db	105	;'i'
  1023  007D24  74                 	db	116	;'t'
  1024  007D25  61                 	db	97	;'a'
  1025  007D26  6E                 	db	110	;'n'
  1026  007D27  64                 	db	100	;'d'
  1027  007D28  6F                 	db	111	;'o'
  1028  007D29  20                 	db	32
  1029  007D2A  4D                 	db	77	;'M'
  1030  007D2B  75                 	db	117	;'u'
  1031  007D2C  65                 	db	101	;'e'
  1032  007D2D  73                 	db	115	;'s'
  1033  007D2E  74                 	db	116	;'t'
  1034  007D2F  72                 	db	114	;'r'
  1035  007D30  65                 	db	101	;'e'
  1036  007D31  6F                 	db	111	;'o'
  1037  007D32  20                 	db	32
  1038  007D33  64                 	db	100	;'d'
  1039  007D34  65                 	db	101	;'e'
  1040  007D35  20                 	db	32
  1041  007D36  73                 	db	115	;'s'
  1042  007D37  65                 	db	101	;'e'
  1043  007D38  6E                 	db	110	;'n'
  1044  007D39  73                 	db	115	;'s'
  1045  007D3A  6F                 	db	111	;'o'
  1046  007D3B  72                 	db	114	;'r'
  1047  007D3C  65                 	db	101	;'e'
  1048  007D3D  73                 	db	115	;'s'
  1049  007D3E  0D                 	db	13
  1050  007D3F  0A                 	db	10
  1051  007D40  0A                 	db	10
  1052  007D41  00                 	db	0
  1053  007D42                     STR_17:
  1054  007D42  0D                 	db	13
  1055  007D43  0A                 	db	10
  1056  007D44  20                 	db	32
  1057  007D45  4D                 	db	77	;'M'
  1058  007D46  69                 	db	105	;'i'
  1059  007D47  6E                 	db	110	;'n'
  1060  007D48  75                 	db	117	;'u'
  1061  007D49  74                 	db	116	;'t'
  1062  007D4A  6F                 	db	111	;'o'
  1063  007D4B  73                 	db	115	;'s'
  1064  007D4C  20                 	db	32
  1065  007D4D  64                 	db	100	;'d'
  1066  007D4E  65                 	db	101	;'e'
  1067  007D4F  20                 	db	32
  1068  007D50  72                 	db	114	;'r'
  1069  007D51  69                 	db	105	;'i'
  1070  007D52  65                 	db	101	;'e'
  1071  007D53  67                 	db	103	;'g'
  1072  007D54  6F                 	db	111	;'o'
  1073  007D55  20                 	db	32
  1074  007D56  65                 	db	101	;'e'
  1075  007D57  73                 	db	115	;'s'
  1076  007D58  74                 	db	116	;'t'
  1077  007D59  61                 	db	97	;'a'
  1078  007D5A  62                 	db	98	;'b'
  1079  007D5B  6C                 	db	108	;'l'
  1080  007D5C  65                 	db	101	;'e'
  1081  007D5D  63                 	db	99	;'c'
  1082  007D5E  69                 	db	105	;'i'
  1083  007D5F  64                 	db	100	;'d'
  1084  007D60  6F                 	db	111	;'o'
  1085  007D61  73                 	db	115	;'s'
  1086  007D62  21                 	db	33
  1087  007D63  20                 	db	32
  1088  007D64  0D                 	db	13
  1089  007D65  0A                 	db	10
  1090  007D66  00                 	db	0
  1091  007D67                     STR_21:
  1092  007D67  0D                 	db	13
  1093  007D68  0A                 	db	10
  1094  007D69  20                 	db	32
  1095  007D6A  49                 	db	73	;'I'
  1096  007D6B  6E                 	db	110	;'n'
  1097  007D6C  67                 	db	103	;'g'
  1098  007D6D  72                 	db	114	;'r'
  1099  007D6E  65                 	db	101	;'e'
  1100  007D6F  73                 	db	115	;'s'
  1101  007D70  61                 	db	97	;'a'
  1102  007D71  20                 	db	32
  1103  007D72  75                 	db	117	;'u'
  1104  007D73  6E                 	db	110	;'n'
  1105  007D74  61                 	db	97	;'a'
  1106  007D75  20                 	db	32
  1107  007D76  6F                 	db	111	;'o'
  1108  007D77  70                 	db	112	;'p'
  1109  007D78  63                 	db	99	;'c'
  1110  007D79  69                 	db	105	;'i'
  1111  007D7A  6F                 	db	111	;'o'
  1112  007D7B  6E                 	db	110	;'n'
  1113  007D7C  20                 	db	32
  1114  007D7D  61                 	db	97	;'a'
  1115  007D7E  20                 	db	32
  1116  007D7F  52                 	db	82	;'R'
  1117  007D80  65                 	db	101	;'e'
  1118  007D81  61                 	db	97	;'a'
  1119  007D82  6C                 	db	108	;'l'
  1120  007D83  69                 	db	105	;'i'
  1121  007D84  7A                 	db	122	;'z'
  1122  007D85  61                 	db	97	;'a'
  1123  007D86  72                 	db	114	;'r'
  1124  007D87  3A                 	db	58	;':'
  1125  007D88  20                 	db	32
  1126  007D89  0D                 	db	13
  1127  007D8A  0A                 	db	10
  1128  007D8B  00                 	db	0
  1129  007D8C                     STR_6:
  1130  007D8C  0D                 	db	13
  1131  007D8D  0A                 	db	10
  1132  007D8E  20                 	db	32
  1133  007D8F  48                 	db	72	;'H'
  1134  007D90  4F                 	db	79	;'O'
  1135  007D91  52                 	db	82	;'R'
  1136  007D92  41                 	db	65	;'A'
  1137  007D93  20                 	db	32
  1138  007D94  45                 	db	69	;'E'
  1139  007D95  53                 	db	83	;'S'
  1140  007D96  54                 	db	84	;'T'
  1141  007D97  41                 	db	65	;'A'
  1142  007D98  42                 	db	66	;'B'
  1143  007D99  4C                 	db	76	;'L'
  1144  007D9A  45                 	db	69	;'E'
  1145  007D9B  43                 	db	67	;'C'
  1146  007D9C  49                 	db	73	;'I'
  1147  007D9D  44                 	db	68	;'D'
  1148  007D9E  41                 	db	65	;'A'
  1149  007D9F  20                 	db	32
  1150  007DA0  43                 	db	67	;'C'
  1151  007DA1  4F                 	db	79	;'O'
  1152  007DA2  52                 	db	82	;'R'
  1153  007DA3  52                 	db	82	;'R'
  1154  007DA4  45                 	db	69	;'E'
  1155  007DA5  43                 	db	67	;'C'
  1156  007DA6  54                 	db	84	;'T'
  1157  007DA7  41                 	db	65	;'A'
  1158  007DA8  4D                 	db	77	;'M'
  1159  007DA9  45                 	db	69	;'E'
  1160  007DAA  4E                 	db	78	;'N'
  1161  007DAB  54                 	db	84	;'T'
  1162  007DAC  45                 	db	69	;'E'
  1163  007DAD  20                 	db	32
  1164  007DAE  0D                 	db	13
  1165  007DAF  0A                 	db	10
  1166  007DB0  00                 	db	0
  1167  007DB1                     STR_11:
  1168  007DB1  0D                 	db	13
  1169  007DB2  0A                 	db	10
  1170  007DB3  20                 	db	32
  1171  007DB4  44                 	db	68	;'D'
  1172  007DB5  4F                 	db	79	;'O'
  1173  007DB6  4D                 	db	77	;'M'
  1174  007DB7  49                 	db	73	;'I'
  1175  007DB8  4E                 	db	78	;'N'
  1176  007DB9  47                 	db	71	;'G'
  1177  007DBA  4F                 	db	79	;'O'
  1178  007DBB  20                 	db	32
  1179  007DBC  3D                 	db	61	;'='
  1180  007DBD  20                 	db	32
  1181  007DBE  5B                 	db	91	;'['
  1182  007DBF  31                 	db	49	;'1'
  1183  007DC0  5D                 	db	93	;']'
  1184  007DC1  20                 	db	32
  1185  007DC2  2E                 	db	46
  1186  007DC3  2E                 	db	46
  1187  007DC4  2E                 	db	46
  1188  007DC5  20                 	db	32
  1189  007DC6  53                 	db	83	;'S'
  1190  007DC7  41                 	db	65	;'A'
  1191  007DC8  42                 	db	66	;'B'
  1192  007DC9  41                 	db	65	;'A'
  1193  007DCA  44                 	db	68	;'D'
  1194  007DCB  4F                 	db	79	;'O'
  1195  007DCC  20                 	db	32
  1196  007DCD  3D                 	db	61	;'='
  1197  007DCE  20                 	db	32
  1198  007DCF  5B                 	db	91	;'['
  1199  007DD0  37                 	db	55	;'7'
  1200  007DD1  5D                 	db	93	;']'
  1201  007DD2  20                 	db	32
  1202  007DD3  0D                 	db	13
  1203  007DD4  0A                 	db	10
  1204  007DD5  00                 	db	0
  1205  007DD6                     STR_23:
  1206  007DD6  0D                 	db	13
  1207  007DD7  0A                 	db	10
  1208  007DD8  20                 	db	32
  1209  007DD9  32                 	db	50	;'2'
  1210  007DDA  2E                 	db	46
  1211  007DDB  20                 	db	32
  1212  007DDC  41                 	db	65	;'A'
  1213  007DDD  73                 	db	115	;'s'
  1214  007DDE  69                 	db	105	;'i'
  1215  007DDF  67                 	db	103	;'g'
  1216  007DE0  6E                 	db	110	;'n'
  1217  007DE1  61                 	db	97	;'a'
  1218  007DE2  72                 	db	114	;'r'
  1219  007DE3  20                 	db	32
  1220  007DE4  48                 	db	72	;'H'
  1221  007DE5  6F                 	db	111	;'o'
  1222  007DE6  72                 	db	114	;'r'
  1223  007DE7  61                 	db	97	;'a'
  1224  007DE8  72                 	db	114	;'r'
  1225  007DE9  69                 	db	105	;'i'
  1226  007DEA  6F                 	db	111	;'o'
  1227  007DEB  73                 	db	115	;'s'
  1228  007DEC  20                 	db	32
  1229  007DED  70                 	db	112	;'p'
  1230  007DEE  61                 	db	97	;'a'
  1231  007DEF  72                 	db	114	;'r'
  1232  007DF0  61                 	db	97	;'a'
  1233  007DF1  20                 	db	32
  1234  007DF2  72                 	db	114	;'r'
  1235  007DF3  65                 	db	101	;'e'
  1236  007DF4  67                 	db	103	;'g'
  1237  007DF5  61                 	db	97	;'a'
  1238  007DF6  72                 	db	114	;'r'
  1239  007DF7  20                 	db	32
  1240  007DF8  0D                 	db	13
  1241  007DF9  0A                 	db	10
  1242  007DFA  00                 	db	0
  1243  007DFB                     STR_2:
  1244  007DFB  0D                 	db	13
  1245  007DFC  0A                 	db	10
  1246  007DFD  20                 	db	32
  1247  007DFE  44                 	db	68	;'D'
  1248  007DFF  49                 	db	73	;'I'
  1249  007E00  41                 	db	65	;'A'
  1250  007E01  20                 	db	32
  1251  007E02  45                 	db	69	;'E'
  1252  007E03  53                 	db	83	;'S'
  1253  007E04  54                 	db	84	;'T'
  1254  007E05  41                 	db	65	;'A'
  1255  007E06  42                 	db	66	;'B'
  1256  007E07  4C                 	db	76	;'L'
  1257  007E08  45                 	db	69	;'E'
  1258  007E09  43                 	db	67	;'C'
  1259  007E0A  49                 	db	73	;'I'
  1260  007E0B  44                 	db	68	;'D'
  1261  007E0C  4F                 	db	79	;'O'
  1262  007E0D  20                 	db	32
  1263  007E0E  43                 	db	67	;'C'
  1264  007E0F  4F                 	db	79	;'O'
  1265  007E10  52                 	db	82	;'R'
  1266  007E11  52                 	db	82	;'R'
  1267  007E12  45                 	db	69	;'E'
  1268  007E13  43                 	db	67	;'C'
  1269  007E14  54                 	db	84	;'T'
  1270  007E15  41                 	db	65	;'A'
  1271  007E16  4D                 	db	77	;'M'
  1272  007E17  45                 	db	69	;'E'
  1273  007E18  4E                 	db	78	;'N'
  1274  007E19  54                 	db	84	;'T'
  1275  007E1A  45                 	db	69	;'E'
  1276  007E1B  20                 	db	32
  1277  007E1C  0D                 	db	13
  1278  007E1D  0A                 	db	10
  1279  007E1E  00                 	db	0
  1280  007E1F                     STR_26:
  1281  007E1F  0D                 	db	13
  1282  007E20  0A                 	db	10
  1283  007E21  20                 	db	32
  1284  007E22  35                 	db	53	;'5'
  1285  007E23  2E                 	db	46
  1286  007E24  20                 	db	32
  1287  007E25  4D                 	db	77	;'M'
  1288  007E26  6F                 	db	111	;'o'
  1289  007E27  73                 	db	115	;'s'
  1290  007E28  74                 	db	116	;'t'
  1291  007E29  72                 	db	114	;'r'
  1292  007E2A  61                 	db	97	;'a'
  1293  007E2B  72                 	db	114	;'r'
  1294  007E2C  20                 	db	32
  1295  007E2D  76                 	db	118	;'v'
  1296  007E2E  61                 	db	97	;'a'
  1297  007E2F  6C                 	db	108	;'l'
  1298  007E30  6F                 	db	111	;'o'
  1299  007E31  72                 	db	114	;'r'
  1300  007E32  65                 	db	101	;'e'
  1301  007E33  73                 	db	115	;'s'
  1302  007E34  20                 	db	32
  1303  007E35  73                 	db	115	;'s'
  1304  007E36  65                 	db	101	;'e'
  1305  007E37  6E                 	db	110	;'n'
  1306  007E38  73                 	db	115	;'s'
  1307  007E39  6F                 	db	111	;'o'
  1308  007E3A  72                 	db	114	;'r'
  1309  007E3B  65                 	db	101	;'e'
  1310  007E3C  73                 	db	115	;'s'
  1311  007E3D  20                 	db	32
  1312  007E3E  0D                 	db	13
  1313  007E3F  0A                 	db	10
  1314  007E40  00                 	db	0
  1315  007E41                     STR_20:
  1316  007E41  0D                 	db	13
  1317  007E42  0A                 	db	10
  1318  007E43  53                 	db	83	;'S'
  1319  007E44  65                 	db	101	;'e'
  1320  007E45  6E                 	db	110	;'n'
  1321  007E46  73                 	db	115	;'s'
  1322  007E47  6F                 	db	111	;'o'
  1323  007E48  72                 	db	114	;'r'
  1324  007E49  65                 	db	101	;'e'
  1325  007E4A  73                 	db	115	;'s'
  1326  007E4B  20                 	db	32
  1327  007E4C  4C                 	db	76	;'L'
  1328  007E4D  65                 	db	101	;'e'
  1329  007E4E  69                 	db	105	;'i'
  1330  007E4F  64                 	db	100	;'d'
  1331  007E50  6F                 	db	111	;'o'
  1332  007E51  73                 	db	115	;'s'
  1333  007E52  20                 	db	32
  1334  007E53  63                 	db	99	;'c'
  1335  007E54  6F                 	db	111	;'o'
  1336  007E55  6E                 	db	110	;'n'
  1337  007E56  20                 	db	32
  1338  007E57  45                 	db	69	;'E'
  1339  007E58  78                 	db	120	;'x'
  1340  007E59  69                 	db	105	;'i'
  1341  007E5A  74                 	db	116	;'t'
  1342  007E5B  6F                 	db	111	;'o'
  1343  007E5C  21                 	db	33
  1344  007E5D  0D                 	db	13
  1345  007E5E  0A                 	db	10
  1346  007E5F  0A                 	db	10
  1347  007E60  00                 	db	0
  1348  007E61                     STR_25:
  1349  007E61  0D                 	db	13
  1350  007E62  0A                 	db	10
  1351  007E63  20                 	db	32
  1352  007E64  34                 	db	52	;'4'
  1353  007E65  2E                 	db	46
  1354  007E66  20                 	db	32
  1355  007E67  44                 	db	68	;'D'
  1356  007E68  61                 	db	97	;'a'
  1357  007E69  6D                 	db	109	;'m'
  1358  007E6A  65                 	db	101	;'e'
  1359  007E6B  20                 	db	32
  1360  007E6C  64                 	db	100	;'d'
  1361  007E6D  61                 	db	97	;'a'
  1362  007E6E  74                 	db	116	;'t'
  1363  007E6F  6F                 	db	111	;'o'
  1364  007E70  73                 	db	115	;'s'
  1365  007E71  20                 	db	32
  1366  007E72  64                 	db	100	;'d'
  1367  007E73  65                 	db	101	;'e'
  1368  007E74  6C                 	db	108	;'l'
  1369  007E75  20                 	db	32
  1370  007E76  73                 	db	115	;'s'
  1371  007E77  69                 	db	105	;'i'
  1372  007E78  73                 	db	115	;'s'
  1373  007E79  74                 	db	116	;'t'
  1374  007E7A  65                 	db	101	;'e'
  1375  007E7B  6D                 	db	109	;'m'
  1376  007E7C  61                 	db	97	;'a'
  1377  007E7D  20                 	db	32
  1378  007E7E  0D                 	db	13
  1379  007E7F  0A                 	db	10
  1380  007E80  00                 	db	0
  1381  007E81                     STR_36:
  1382  007E81  0D                 	db	13
  1383  007E82  0A                 	db	10
  1384  007E83  0A                 	db	10
  1385  007E84  4C                 	db	76	;'L'
  1386  007E85  61                 	db	97	;'a'
  1387  007E86  20                 	db	32
  1388  007E87  48                 	db	72	;'H'
  1389  007E88  75                 	db	117	;'u'
  1390  007E89  6D                 	db	109	;'m'
  1391  007E8A  65                 	db	101	;'e'
  1392  007E8B  64                 	db	100	;'d'
  1393  007E8C  61                 	db	97	;'a'
  1394  007E8D  64                 	db	100	;'d'
  1395  007E8E  20                 	db	32
  1396  007E8F  41                 	db	65	;'A'
  1397  007E90  6D                 	db	109	;'m'
  1398  007E91  62                 	db	98	;'b'
  1399  007E92  69                 	db	105	;'i'
  1400  007E93  65                 	db	101	;'e'
  1401  007E94  6E                 	db	110	;'n'
  1402  007E95  74                 	db	116	;'t'
  1403  007E96  65                 	db	101	;'e'
  1404  007E97  20                 	db	32
  1405  007E98  65                 	db	101	;'e'
  1406  007E99  73                 	db	115	;'s'
  1407  007E9A  3A                 	db	58	;':'
  1408  007E9B  20                 	db	32
  1409  007E9C  25                 	db	37
  1410  007E9D  64                 	db	100	;'d'
  1411  007E9E  0D                 	db	13
  1412  007E9F  0A                 	db	10
  1413  007EA0  00                 	db	0
  1414  007EA1                     STR_5:
  1415  007EA1  0D                 	db	13
  1416  007EA2  0A                 	db	10
  1417  007EA3  20                 	db	32
  1418  007EA4  45                 	db	69	;'E'
  1419  007EA5  6E                 	db	110	;'n'
  1420  007EA6  76                 	db	118	;'v'
  1421  007EA7  69                 	db	105	;'i'
  1422  007EA8  65                 	db	101	;'e'
  1423  007EA9  20                 	db	32
  1424  007EAA  6C                 	db	108	;'l'
  1425  007EAB  6F                 	db	111	;'o'
  1426  007EAC  73                 	db	115	;'s'
  1427  007EAD  20                 	db	32
  1428  007EAE  4D                 	db	77	;'M'
  1429  007EAF  69                 	db	105	;'i'
  1430  007EB0  6E                 	db	110	;'n'
  1431  007EB1  75                 	db	117	;'u'
  1432  007EB2  74                 	db	116	;'t'
  1433  007EB3  6F                 	db	111	;'o'
  1434  007EB4  73                 	db	115	;'s'
  1435  007EB5  20                 	db	32
  1436  007EB6  45                 	db	69	;'E'
  1437  007EB7  6A                 	db	106	;'j'
  1438  007EB8  3A                 	db	58	;':'
  1439  007EB9  20                 	db	32
  1440  007EBA  32                 	db	50	;'2'
  1441  007EBB  35                 	db	53	;'5'
  1442  007EBC  20                 	db	32
  1443  007EBD  0D                 	db	13
  1444  007EBE  0A                 	db	10
  1445  007EBF  00                 	db	0
  1446  007EC0                     STR_37:
  1447  007EC0  0D                 	db	13
  1448  007EC1  0A                 	db	10
  1449  007EC2  0A                 	db	10
  1450  007EC3  4C                 	db	76	;'L'
  1451  007EC4  61                 	db	97	;'a'
  1452  007EC5  20                 	db	32
  1453  007EC6  54                 	db	84	;'T'
  1454  007EC7  65                 	db	101	;'e'
  1455  007EC8  6D                 	db	109	;'m'
  1456  007EC9  70                 	db	112	;'p'
  1457  007ECA  65                 	db	101	;'e'
  1458  007ECB  72                 	db	114	;'r'
  1459  007ECC  61                 	db	97	;'a'
  1460  007ECD  74                 	db	116	;'t'
  1461  007ECE  75                 	db	117	;'u'
  1462  007ECF  72                 	db	114	;'r'
  1463  007ED0  61                 	db	97	;'a'
  1464  007ED1  20                 	db	32
  1465  007ED2  65                 	db	101	;'e'
  1466  007ED3  73                 	db	115	;'s'
  1467  007ED4  3A                 	db	58	;':'
  1468  007ED5  20                 	db	32
  1469  007ED6  25                 	db	37
  1470  007ED7  64                 	db	100	;'d'
  1471  007ED8  20                 	db	32
  1472  007ED9  43                 	db	67	;'C'
  1473  007EDA  0D                 	db	13
  1474  007EDB  0A                 	db	10
  1475  007EDC  00                 	db	0
  1476  007EDD                     STR_22:
  1477  007EDD  0D                 	db	13
  1478  007EDE  0A                 	db	10
  1479  007EDF  20                 	db	32
  1480  007EE0  31                 	db	49	;'1'
  1481  007EE1  2E                 	db	46
  1482  007EE2  20                 	db	32
  1483  007EE3  46                 	db	70	;'F'
  1484  007EE4  69                 	db	105	;'i'
  1485  007EE5  6A                 	db	106	;'j'
  1486  007EE6  61                 	db	97	;'a'
  1487  007EE7  72                 	db	114	;'r'
  1488  007EE8  20                 	db	32
  1489  007EE9  48                 	db	72	;'H'
  1490  007EEA  6F                 	db	111	;'o'
  1491  007EEB  72                 	db	114	;'r'
  1492  007EEC  61                 	db	97	;'a'
  1493  007EED  20                 	db	32
  1494  007EEE  41                 	db	65	;'A'
  1495  007EEF  63                 	db	99	;'c'
  1496  007EF0  74                 	db	116	;'t'
  1497  007EF1  75                 	db	117	;'u'
  1498  007EF2  61                 	db	97	;'a'
  1499  007EF3  6C                 	db	108	;'l'
  1500  007EF4  20                 	db	32
  1501  007EF5  0D                 	db	13
  1502  007EF6  0A                 	db	10
  1503  007EF7  00                 	db	0
  1504  007EF8                     STR_13:
  1505  007EF8  0D                 	db	13
  1506  007EF9  0A                 	db	10
  1507  007EFA  20                 	db	32
  1508  007EFB  48                 	db	72	;'H'
  1509  007EFC  6F                 	db	111	;'o'
  1510  007EFD  72                 	db	114	;'r'
  1511  007EFE  61                 	db	97	;'a'
  1512  007EFF  72                 	db	114	;'r'
  1513  007F00  69                 	db	105	;'i'
  1514  007F01  6F                 	db	111	;'o'
  1515  007F02  20                 	db	32
  1516  007F03  4D                 	db	77	;'M'
  1517  007F04  6F                 	db	111	;'o'
  1518  007F05  64                 	db	100	;'d'
  1519  007F06  69                 	db	105	;'i'
  1520  007F07  66                 	db	102	;'f'
  1521  007F08  69                 	db	105	;'i'
  1522  007F09  63                 	db	99	;'c'
  1523  007F0A  61                 	db	97	;'a'
  1524  007F0B  64                 	db	100	;'d'
  1525  007F0C  6F                 	db	111	;'o'
  1526  007F0D  21                 	db	33
  1527  007F0E  20                 	db	32
  1528  007F0F  0D                 	db	13
  1529  007F10  0A                 	db	10
  1530  007F11  00                 	db	0
  1531  007F12                     STR_28:
  1532  007F12  0D                 	db	13
  1533  007F13  0A                 	db	10
  1534  007F14  20                 	db	32
  1535  007F15  37                 	db	55	;'7'
  1536  007F16  2E                 	db	46
  1537  007F17  20                 	db	32
  1538  007F18  46                 	db	70	;'F'
  1539  007F19  69                 	db	105	;'i'
  1540  007F1A  6A                 	db	106	;'j'
  1541  007F1B  61                 	db	97	;'a'
  1542  007F1C  72                 	db	114	;'r'
  1543  007F1D  20                 	db	32
  1544  007F1E  44                 	db	68	;'D'
  1545  007F1F  69                 	db	105	;'i'
  1546  007F20  61                 	db	97	;'a'
  1547  007F21  20                 	db	32
  1548  007F22  41                 	db	65	;'A'
  1549  007F23  63                 	db	99	;'c'
  1550  007F24  74                 	db	116	;'t'
  1551  007F25  75                 	db	117	;'u'
  1552  007F26  61                 	db	97	;'a'
  1553  007F27  6C                 	db	108	;'l'
  1554  007F28  20                 	db	32
  1555  007F29  0D                 	db	13
  1556  007F2A  0A                 	db	10
  1557  007F2B  00                 	db	0
  1558  007F2C                     STR_7:
  1559  007F2C  0D                 	db	13
  1560  007F2D  0A                 	db	10
  1561  007F2E  20                 	db	32
  1562  007F2F  4F                 	db	79	;'O'
  1563  007F30  50                 	db	80	;'P'
  1564  007F31  43                 	db	67	;'C'
  1565  007F32  49                 	db	73	;'I'
  1566  007F33  4F                 	db	79	;'O'
  1567  007F34  4E                 	db	78	;'N'
  1568  007F35  45                 	db	69	;'E'
  1569  007F36  53                 	db	83	;'S'
  1570  007F37  20                 	db	32
  1571  007F38  44                 	db	68	;'D'
  1572  007F39  45                 	db	69	;'E'
  1573  007F3A  20                 	db	32
  1574  007F3B  52                 	db	82	;'R'
  1575  007F3C  45                 	db	69	;'E'
  1576  007F3D  47                 	db	71	;'G'
  1577  007F3E  41                 	db	65	;'A'
  1578  007F3F  44                 	db	68	;'D'
  1579  007F40  4F                 	db	79	;'O'
  1580  007F41  20                 	db	32
  1581  007F42  0D                 	db	13
  1582  007F43  0A                 	db	10
  1583  007F44  00                 	db	0
  1584  007F45                     STR_35:
  1585  007F45  45                 	db	69	;'E'
  1586  007F46  72                 	db	114	;'r'
  1587  007F47  72                 	db	114	;'r'
  1588  007F48  6F                 	db	111	;'o'
  1589  007F49  72                 	db	114	;'r'
  1590  007F4A  20                 	db	32
  1591  007F4B  64                 	db	100	;'d'
  1592  007F4C  65                 	db	101	;'e'
  1593  007F4D  20                 	db	32
  1594  007F4E  6C                 	db	108	;'l'
  1595  007F4F  65                 	db	101	;'e'
  1596  007F50  63                 	db	99	;'c'
  1597  007F51  74                 	db	116	;'t'
  1598  007F52  75                 	db	117	;'u'
  1599  007F53  72                 	db	114	;'r'
  1600  007F54  61                 	db	97	;'a'
  1601  007F55  20                 	db	32
  1602  007F56  44                 	db	68	;'D'
  1603  007F57  48                 	db	72	;'H'
  1604  007F58  54                 	db	84	;'T'
  1605  007F59  31                 	db	49	;'1'
  1606  007F5A  31                 	db	49	;'1'
  1607  007F5B  0D                 	db	13
  1608  007F5C  0A                 	db	10
  1609  007F5D  00                 	db	0
  1610  007F5E                     STR_14:
  1611  007F5E  0D                 	db	13
  1612  007F5F  0A                 	db	10
  1613  007F60  20                 	db	32
  1614  007F61  54                 	db	84	;'T'
  1615  007F62  49                 	db	73	;'I'
  1616  007F63  45                 	db	69	;'E'
  1617  007F64  4D                 	db	77	;'M'
  1618  007F65  50                 	db	80	;'P'
  1619  007F66  4F                 	db	79	;'O'
  1620  007F67  20                 	db	32
  1621  007F68  44                 	db	68	;'D'
  1622  007F69  45                 	db	69	;'E'
  1623  007F6A  20                 	db	32
  1624  007F6B  52                 	db	82	;'R'
  1625  007F6C  45                 	db	69	;'E'
  1626  007F6D  47                 	db	71	;'G'
  1627  007F6E  41                 	db	65	;'A'
  1628  007F6F  44                 	db	68	;'D'
  1629  007F70  4F                 	db	79	;'O'
  1630  007F71  20                 	db	32
  1631  007F72  0D                 	db	13
  1632  007F73  0A                 	db	10
  1633  007F74  00                 	db	0
  1634  007F75                     STR_27:
  1635  007F75  0D                 	db	13
  1636  007F76  0A                 	db	10
  1637  007F77  20                 	db	32
  1638  007F78  36                 	db	54	;'6'
  1639  007F79  2E                 	db	46
  1640  007F7A  20                 	db	32
  1641  007F7B  52                 	db	82	;'R'
  1642  007F7C  65                 	db	101	;'e'
  1643  007F7D  67                 	db	103	;'g'
  1644  007F7E  61                 	db	97	;'a'
  1645  007F7F  64                 	db	100	;'d'
  1646  007F80  6F                 	db	111	;'o'
  1647  007F81  20                 	db	32
  1648  007F82  72                 	db	114	;'r'
  1649  007F83  61                 	db	97	;'a'
  1650  007F84  70                 	db	112	;'p'
  1651  007F85  69                 	db	105	;'i'
  1652  007F86  64                 	db	100	;'d'
  1653  007F87  6F                 	db	111	;'o'
  1654  007F88  20                 	db	32
  1655  007F89  0D                 	db	13
  1656  007F8A  0A                 	db	10
  1657  007F8B  00                 	db	0
  1658  007F8C                     STR_46:
  1659  007F8C  0D                 	db	13
  1660  007F8D  0A                 	db	10
  1661  007F8E  20                 	db	32
  1662  007F8F  52                 	db	82	;'R'
  1663  007F90  45                 	db	69	;'E'
  1664  007F91  47                 	db	71	;'G'
  1665  007F92  41                 	db	65	;'A'
  1666  007F93  44                 	db	68	;'D'
  1667  007F94  4F                 	db	79	;'O'
  1668  007F95  20                 	db	32
  1669  007F96  52                 	db	82	;'R'
  1670  007F97  41                 	db	65	;'A'
  1671  007F98  50                 	db	80	;'P'
  1672  007F99  49                 	db	73	;'I'
  1673  007F9A  44                 	db	68	;'D'
  1674  007F9B  4F                 	db	79	;'O'
  1675  007F9C  20                 	db	32
  1676  007F9D  0D                 	db	13
  1677  007F9E  0A                 	db	10
  1678  007F9F  00                 	db	0
  1679  007FA0                     STR_45:
  1680  007FA0  0A                 	db	10
  1681  007FA1  46                 	db	70	;'F'
  1682  007FA2  41                 	db	65	;'A'
  1683  007FA3  4C                 	db	76	;'L'
  1684  007FA4  4C                 	db	76	;'L'
  1685  007FA5  4F                 	db	79	;'O'
  1686  007FA6  20                 	db	32
  1687  007FA7  45                 	db	69	;'E'
  1688  007FA8  4C                 	db	76	;'L'
  1689  007FA9  20                 	db	32
  1690  007FAA  53                 	db	83	;'S'
  1691  007FAB  45                 	db	69	;'E'
  1692  007FAC  54                 	db	84	;'T'
  1693  007FAD  45                 	db	69	;'E'
  1694  007FAE  4F                 	db	79	;'O'
  1695  007FAF  0D                 	db	13
  1696  007FB0  0A                 	db	10
  1697  007FB1  00                 	db	0
  1698  007FB2  41                 	db	65	;'A'
  1699  007FB3  54                 	db	84	;'T'
  1700  007FB4  2B                 	db	43
  1701  007FB5  4E                 	db	78	;'N'
  1702  007FB6  41                 	db	65	;'A'
  1703  007FB7  4D                 	db	77	;'M'
  1704  007FB8  45                 	db	69	;'E'
  1705  007FB9  53                 	db	83	;'S'
  1706  007FBA  4D                 	db	77	;'M'
  1707  007FBB  41                 	db	65	;'A'
  1708  007FBC  52                 	db	82	;'R'
  1709  007FBD  54                 	db	84	;'T'
  1710  007FBE  48                 	db	72	;'H'
  1711  007FBF  4F                 	db	79	;'O'
  1712  007FC0  4D                 	db	77	;'M'
  1713  007FC1  45                 	db	69	;'E'
  1714  007FC2  00                 	db	0
  1715  007FC3                     STR_3:
  1716  007FC3  0D                 	db	13
  1717  007FC4  0A                 	db	10
  1718  007FC5  20                 	db	32
  1719  007FC6  46                 	db	70	;'F'
  1720  007FC7  49                 	db	73	;'I'
  1721  007FC8  4A                 	db	74	;'J'
  1722  007FC9  41                 	db	65	;'A'
  1723  007FCA  20                 	db	32
  1724  007FCB  48                 	db	72	;'H'
  1725  007FCC  4F                 	db	79	;'O'
  1726  007FCD  52                 	db	82	;'R'
  1727  007FCE  41                 	db	65	;'A'
  1728  007FCF  20                 	db	32
  1729  007FD0  0D                 	db	13
  1730  007FD1  0A                 	db	10
  1731  007FD2  00                 	db	0
  1732  007FD3                     STR_29:
  1733  007FD3  0D                 	db	13
  1734  007FD4  0A                 	db	10
  1735  007FD5  20                 	db	32
  1736  007FD6  4F                 	db	79	;'O'
  1737  007FD7  70                 	db	112	;'p'
  1738  007FD8  63                 	db	99	;'c'
  1739  007FD9  69                 	db	105	;'i'
  1740  007FDA  6F                 	db	111	;'o'
  1741  007FDB  6E                 	db	110	;'n'
  1742  007FDC  3A                 	db	58	;':'
  1743  007FDD  20                 	db	32
  1744  007FDE  20                 	db	32
  1745  007FDF  0D                 	db	13
  1746  007FE0  00                 	db	0
  1747  007FE1  41                 	db	65	;'A'
  1748  007FE2  54                 	db	84	;'T'
  1749  007FE3  2B                 	db	43
  1750  007FE4  50                 	db	80	;'P'
  1751  007FE5  49                 	db	73	;'I'
  1752  007FE6  4E                 	db	78	;'N'
  1753  007FE7  32                 	db	50	;'2'
  1754  007FE8  35                 	db	53	;'5'
  1755  007FE9  30                 	db	48	;'0'
  1756  007FEA  31                 	db	49	;'1'
  1757  007FEB  00                 	db	0
  1758  007FEC                     STR_12:
  1759  007FEC  0D                 	db	13
  1760  007FED  0A                 	db	10
  1761  007FEE  5B                 	db	91	;'['
  1762  007FEF  25                 	db	37
  1763  007FF0  64                 	db	100	;'d'
  1764  007FF1  5D                 	db	93	;']'
  1765  007FF2  3A                 	db	58	;':'
  1766  007FF3  20                 	db	32
  1767  007FF4  00                 	db	0
  1768  007FF5  41                 	db	65	;'A'
  1769  007FF6  54                 	db	84	;'T'
  1770  007FF7  2B                 	db	43
  1771  007FF8  42                 	db	66	;'B'
  1772  007FF9  41                 	db	65	;'A'
  1773  007FFA  55                 	db	85	;'U'
  1774  007FFB  44                 	db	68	;'D'
  1775  007FFC  34                 	db	52	;'4'
  1776  007FFD  00                 	db	0
  1777  0000                     
  1778                           ; #config settings
  1779  007FFE  00                 	db	0	; dummy byte at the end
  1780  0000                     
  1781                           	psect	cinit
  1782  002AA0                     __pcinit:
  1783                           	opt callstack 0
  1784  002AA0                     start_initialization:
  1785                           	opt callstack 0
  1786  002AA0                     __initialization:
  1787                           	opt callstack 0
  1788                           
  1789                           ; Initialize objects allocated to BANK1 (11 bytes)
  1790                           ; load TBLPTR registers with __pidataBANK1
  1791  002AA0  0EA8               	movlw	low __pidataBANK1
  1792  002AA2  6EF6               	movwf	tblptrl,c
  1793  002AA4  0E2F               	movlw	high __pidataBANK1
  1794  002AA6  6EF7               	movwf	tblptrh,c
  1795  002AA8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1796  002AAA  6EF8               	movwf	tblptru,c
  1797  002AAC  EE01  F09F         	lfsr	0,__pdataBANK1
  1798  002AB0  EE10 F00B          	lfsr	1,11
  1799  002AB4                     copy_data0:
  1800  002AB4  0009               	tblrd		*+
  1801  002AB6  CFF5 FFEE          	movff	tablat,postinc0
  1802  002ABA  50E5               	movf	postdec1,w,c
  1803  002ABC  50E1               	movf	fsr1l,w,c
  1804  002ABE  E1FA               	bnz	copy_data0
  1805                           
  1806                           ; Clear objects allocated to BIGRAM (288 bytes)
  1807  002AC0  EE01  F0AA         	lfsr	0,__pbssBIGRAM
  1808  002AC4  EE11 F020          	lfsr	1,288
  1809  002AC8                     clear_0:
  1810  002AC8  6AEE               	clrf	postinc0,c
  1811  002ACA  50E5               	movf	postdec1,w,c
  1812  002ACC  50E1               	movf	fsr1l,w,c
  1813  002ACE  E1FC               	bnz	clear_0
  1814  002AD0  50E2               	movf	fsr1h,w,c
  1815  002AD2  E1FA               	bnz	clear_0
  1816                           
  1817                           ; Clear objects allocated to BANK1 (55 bytes)
  1818  002AD4  EE01  F068         	lfsr	0,__pbssBANK1
  1819  002AD8  0E37               	movlw	55
  1820  002ADA                     clear_1:
  1821  002ADA  6AEE               	clrf	postinc0,c
  1822  002ADC  06E8               	decf	wreg,f,c
  1823  002ADE  E1FD               	bnz	clear_1
  1824                           
  1825                           ; Clear objects allocated to BANK0 (20 bytes)
  1826  002AE0  EE00  F0EB         	lfsr	0,__pbssBANK0
  1827  002AE4  0E14               	movlw	20
  1828  002AE6                     clear_2:
  1829  002AE6  6AEE               	clrf	postinc0,c
  1830  002AE8  06E8               	decf	wreg,f,c
  1831  002AEA  E1FD               	bnz	clear_2
  1832  002AEC                     end_of_initialization:
  1833                           	opt callstack 0
  1834  002AEC                     __end_of__initialization:
  1835                           	opt callstack 0
  1836  002AEC  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1837  002AEE  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1838  002AF0  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1839  002AF2  6EF8               	movwf	tblptru,c
  1840  002AF4  0100               	movlb	0
  1841  002AF6  EF51  F012         	goto	_main	;jump to C main() function
  1842                           
  1843                           	psect	bssBANK0
  1844  0000EB                     __pbssBANK0:
  1845                           	opt callstack 0
  1846  0000EB                     _width:
  1847                           	opt callstack 0
  1848  0000EB                     	ds	2
  1849  0000ED                     _prec:
  1850                           	opt callstack 0
  1851  0000ED                     	ds	2
  1852  0000EF                     _flags:
  1853                           	opt callstack 0
  1854  0000EF                     	ds	2
  1855  0000F1                     _contInterrupciones:
  1856                           	opt callstack 0
  1857  0000F1                     	ds	2
  1858  0000F3                     _peticionLecturaSensores:
  1859                           	opt callstack 0
  1860  0000F3                     	ds	1
  1861  0000F4                     _regando:
  1862                           	opt callstack 0
  1863  0000F4                     	ds	1
  1864  0000F5                     _minutosTranscurridos:
  1865                           	opt callstack 0
  1866  0000F5                     	ds	1
  1867  0000F6                     _minutosRegar:
  1868                           	opt callstack 0
  1869  0000F6                     	ds	1
  1870  0000F7                     _flagRegado:
  1871                           	opt callstack 0
  1872  0000F7                     	ds	1
  1873  0000F8                     _tempHora:
  1874                           	opt callstack 0
  1875  0000F8                     	ds	1
  1876  0000F9                     _diaActual:
  1877                           	opt callstack 0
  1878  0000F9                     	ds	1
  1879  0000FA                     _segundos:
  1880                           	opt callstack 0
  1881  0000FA                     	ds	1
  1882  0000FB                     _minutos:
  1883                           	opt callstack 0
  1884  0000FB                     	ds	1
  1885  0000FC                     _hora:
  1886                           	opt callstack 0
  1887  0000FC                     	ds	1
  1888  0000FD                     _esperaDatoConcluida:
  1889                           	opt callstack 0
  1890  0000FD                     	ds	1
  1891  0000FE                     _tiempoInactividadTrans:
  1892                           	opt callstack 0
  1893  0000FE                     	ds	1
  1894                           
  1895                           	psect	bssBANK1
  1896  000168                     __pbssBANK1:
  1897                           	opt callstack 0
  1898  000168                     _sensores:
  1899                           	opt callstack 0
  1900  000168                     	ds	16
  1901  000178                     _nout:
  1902                           	opt callstack 0
  1903  000178                     	ds	2
  1904  00017A                     _overflowTimer:
  1905                           	opt callstack 0
  1906  00017A                     	ds	1
  1907  00017B                     _datoRecibido:
  1908                           	opt callstack 0
  1909  00017B                     	ds	1
  1910  00017C                     _MODO_COMUNICACION:
  1911                           	opt callstack 0
  1912  00017C                     	ds	1
  1913  00017D                     _esperandoDatos:
  1914                           	opt callstack 0
  1915  00017D                     	ds	1
  1916  00017E                     _byteUart:
  1917                           	opt callstack 0
  1918  00017E                     	ds	1
  1919  00017F                     _dbuf:
  1920                           	opt callstack 0
  1921  00017F                     	ds	32
  1922                           
  1923                           	psect	dataBANK1
  1924  00019F                     __pdataBANK1:
  1925                           	opt callstack 0
  1926  00019F                     stoa@F1144:
  1927                           	opt callstack 0
  1928  00019F                     	ds	7
  1929  0001A6                     _VALOR_TIMER0:
  1930                           	opt callstack 0
  1931  0001A6                     	ds	2
  1932  0001A8                     _VALOR_TIMER0UART:
  1933                           	opt callstack 0
  1934  0001A8                     	ds	2
  1935                           
  1936                           	psect	bssBIGRAM
  1937  0001AA                     __pbssBIGRAM:
  1938                           	opt callstack 0
  1939  0001AA                     _horarios:
  1940                           	opt callstack 0
  1941  0001AA                     	ds	288
  1942                           
  1943                           	psect	cstackBANK1
  1944  000100                     __pcstackBANK1:
  1945                           	opt callstack 0
  1946  000100                     mostrarDatosSensoresWIFI@bufferSensor:
  1947                           	opt callstack 0
  1948                           
  1949                           ; 50 bytes @ 0x0
  1950  000100                     	ds	50
  1951  000132                     mostrarDatosSensoresWIFI@buffer:
  1952                           	opt callstack 0
  1953                           
  1954                           ; 50 bytes @ 0x32
  1955  000132                     	ds	50
  1956  000164                     mostrarDatosSensoresWIFI@temperatura:
  1957                           	opt callstack 0
  1958                           
  1959                           ; 1 bytes @ 0x64
  1960  000164                     	ds	1
  1961  000165                     mostrarDatosSensoresWIFI@humedad:
  1962                           	opt callstack 0
  1963                           
  1964                           ; 1 bytes @ 0x65
  1965  000165                     	ds	1
  1966  000166                     mostrarDatosSensoresWIFI@i:
  1967                           	opt callstack 0
  1968                           
  1969                           ; 2 bytes @ 0x66
  1970  000166                     	ds	2
  1971                           
  1972                           	psect	cstackBANK0
  1973  000060                     __pcstackBANK0:
  1974                           	opt callstack 0
  1975  000060                     ?_sprintf:
  1976                           	opt callstack 0
  1977  000060                     sprintf@s:
  1978                           	opt callstack 0
  1979                           
  1980                           ; 2 bytes @ 0x0
  1981  000060                     	ds	2
  1982  000062                     sprintf@fmt:
  1983                           	opt callstack 0
  1984                           
  1985                           ; 2 bytes @ 0x2
  1986  000062                     	ds	12
  1987  00006E                     sprintf@ap:
  1988                           	opt callstack 0
  1989                           
  1990                           ; 2 bytes @ 0xE
  1991  00006E                     	ds	2
  1992  000070                     sprintf@f:
  1993                           	opt callstack 0
  1994                           
  1995                           ; 6 bytes @ 0x10
  1996  000070                     	ds	6
  1997  000076                     ??_dameDatosSistema:
  1998  000076                     ??_mostrarDatosSensores:
  1999  000076                     ??_asignarHorarios:
  2000  000076                     lecturaWifi@buffer:
  2001                           	opt callstack 0
  2002                           
  2003                           ; 50 bytes @ 0x16
  2004  000076                     	ds	1
  2005  000077                     mostrarDatosSensores@buffer:
  2006                           	opt callstack 0
  2007                           
  2008                           ; 50 bytes @ 0x17
  2009  000077                     	ds	1
  2010  000078                     asignarHorarios@buffer:
  2011                           	opt callstack 0
  2012                           
  2013                           ; 50 bytes @ 0x18
  2014  000078                     	ds	2
  2015  00007A                     dameDatosSistema@buffer:
  2016                           	opt callstack 0
  2017                           
  2018                           ; 50 bytes @ 0x1A
  2019  00007A                     	ds	46
  2020  0000A8                     lecturaWifi@Rx:
  2021                           	opt callstack 0
  2022                           
  2023                           ; 1 bytes @ 0x48
  2024  0000A8                     	ds	1
  2025  0000A9                     lecturaWifi@humedadMedida:
  2026                           	opt callstack 0
  2027  0000A9                     mostrarDatosSensores@temperatura:
  2028                           	opt callstack 0
  2029                           
  2030                           ; 1 bytes @ 0x49
  2031  0000A9                     	ds	1
  2032  0000AA                     asignarHorarios@Rx:
  2033                           	opt callstack 0
  2034  0000AA                     mostrarDatosSensores@humedad:
  2035                           	opt callstack 0
  2036  0000AA                     lecturaWifi@i:
  2037                           	opt callstack 0
  2038                           
  2039                           ; 2 bytes @ 0x4A
  2040  0000AA                     	ds	1
  2041  0000AB                     asignarHorarios@diaRegar:
  2042                           	opt callstack 0
  2043  0000AB                     mostrarDatosSensores@i:
  2044                           	opt callstack 0
  2045                           
  2046                           ; 2 bytes @ 0x4B
  2047  0000AB                     	ds	1
  2048  0000AC                     ??_mostrarDatosSensoresWIFI:
  2049  0000AC                     asignarHorarios@hora:
  2050                           	opt callstack 0
  2051  0000AC                     dameDatosSistema@diasRegar:
  2052                           	opt callstack 0
  2053                           
  2054                           ; 50 bytes @ 0x4C
  2055  0000AC                     	ds	1
  2056  0000AD                     asignarHorarios@i:
  2057                           	opt callstack 0
  2058                           
  2059                           ; 2 bytes @ 0x4D
  2060  0000AD                     	ds	49
  2061  0000DE                     _dameDatosSistema$1916:
  2062                           	opt callstack 0
  2063                           
  2064                           ; 2 bytes @ 0x7E
  2065  0000DE                     	ds	2
  2066  0000E0                     _dameDatosSistema$1917:
  2067                           	opt callstack 0
  2068                           
  2069                           ; 2 bytes @ 0x80
  2070  0000E0                     	ds	2
  2071  0000E2                     _dameDatosSistema$1918:
  2072                           	opt callstack 0
  2073                           
  2074                           ; 2 bytes @ 0x82
  2075  0000E2                     	ds	2
  2076  0000E4                     dameDatosSistema@j:
  2077                           	opt callstack 0
  2078                           
  2079                           ; 2 bytes @ 0x84
  2080  0000E4                     	ds	2
  2081  0000E6                     dameDatosSistema@i:
  2082                           	opt callstack 0
  2083                           
  2084                           ; 2 bytes @ 0x86
  2085  0000E6                     	ds	2
  2086  0000E8                     ??_sistemaPrincipal:
  2087                           
  2088                           ; 1 bytes @ 0x88
  2089  0000E8                     	ds	2
  2090  0000EA                     sistemaPrincipal@opcion:
  2091                           	opt callstack 0
  2092                           
  2093                           ; 1 bytes @ 0x8A
  2094  0000EA                     	ds	1
  2095                           
  2096                           	psect	cstackCOMRAM
  2097  000001                     __pcstackCOMRAM:
  2098                           	opt callstack 0
  2099  000001                     ??_i2c_espera:
  2100  000001                     ??_convertirDato:
  2101  000001                     ??_DHT11_Start:
  2102  000001                     ?_strlen:
  2103                           	opt callstack 0
  2104  000001                     ?_isdigit:
  2105                           	opt callstack 0
  2106  000001                     ?_isspace:
  2107                           	opt callstack 0
  2108  000001                     ?_horaRegar:
  2109                           	opt callstack 0
  2110  000001                     ?_dameHumedadSuelo:
  2111                           	opt callstack 0
  2112  000001                     ?___wmul:
  2113                           	opt callstack 0
  2114  000001                     ?___awdiv:
  2115                           	opt callstack 0
  2116  000001                     ?___awmod:
  2117                           	opt callstack 0
  2118  000001                     ?___lmul:
  2119                           	opt callstack 0
  2120  000001                     ?___aodiv:
  2121                           	opt callstack 0
  2122  000001                     ?___aomod:
  2123                           	opt callstack 0
  2124  000001                     UART_write@dato:
  2125                           	opt callstack 0
  2126  000001                     DHT11_ReadData@i:
  2127                           	opt callstack 0
  2128  000001                     check_response@respuesta:
  2129                           	opt callstack 0
  2130  000001                     constructorSensor@s:
  2131                           	opt callstack 0
  2132  000001                     ___wmul@multiplier:
  2133                           	opt callstack 0
  2134  000001                     ___awdiv@dividend:
  2135                           	opt callstack 0
  2136  000001                     ___awmod@dividend:
  2137                           	opt callstack 0
  2138  000001                     isdigit@c:
  2139                           	opt callstack 0
  2140  000001                     isspace@c:
  2141                           	opt callstack 0
  2142  000001                     fputc@c:
  2143                           	opt callstack 0
  2144  000001                     strlen@s:
  2145                           	opt callstack 0
  2146  000001                     ___lmul@multiplier:
  2147                           	opt callstack 0
  2148  000001                     ___aodiv@dividend:
  2149                           	opt callstack 0
  2150  000001                     ___aomod@dividend:
  2151                           	opt callstack 0
  2152                           
  2153                           ; 8 bytes @ 0x0
  2154  000001                     	ds	1
  2155  000002                     i2c_envia_dato@dato:
  2156                           	opt callstack 0
  2157  000002                     i2c_recibe_dato@datoleido:
  2158                           	opt callstack 0
  2159  000002                     convertirDato@dato:
  2160                           	opt callstack 0
  2161  000002                     DHT11_ReadData@data:
  2162                           	opt callstack 0
  2163  000002                     UART_printf@cadena:
  2164                           	opt callstack 0
  2165                           
  2166                           ; 2 bytes @ 0x1
  2167  000002                     	ds	1
  2168  000003                     ??_isdigit:
  2169  000003                     ??_isspace:
  2170  000003                     ??_horaRegar:
  2171  000003                     ??_dameHumedadSuelo:
  2172  000003                     escribe_rtc@dato:
  2173                           	opt callstack 0
  2174  000003                     leer_rtc@direccion:
  2175                           	opt callstack 0
  2176  000003                     convertirDato@datoR:
  2177                           	opt callstack 0
  2178  000003                     constructorSensor@porcientoHumedad:
  2179                           	opt callstack 0
  2180  000003                     leer_eeprom@direccion:
  2181                           	opt callstack 0
  2182  000003                     ___wmul@multiplicand:
  2183                           	opt callstack 0
  2184  000003                     ___awdiv@divisor:
  2185                           	opt callstack 0
  2186  000003                     ___awmod@divisor:
  2187                           	opt callstack 0
  2188  000003                     fputc@fp:
  2189                           	opt callstack 0
  2190  000003                     strlen@a:
  2191                           	opt callstack 0
  2192                           
  2193                           ; 2 bytes @ 0x2
  2194  000003                     	ds	1
  2195  000004                     escribe_rtc@direccion:
  2196                           	opt callstack 0
  2197  000004                     leer_rtc@dato:
  2198                           	opt callstack 0
  2199  000004                     constructorSensor@pin:
  2200                           	opt callstack 0
  2201  000004                     dameTemperaturaHumedad@Humedad:
  2202                           	opt callstack 0
  2203  000004                     getValue@numCharacters:
  2204                           	opt callstack 0
  2205                           
  2206                           ; 2 bytes @ 0x3
  2207  000004                     	ds	1
  2208  000005                     ??_fputc:
  2209  000005                     ??_leer_eeprom:
  2210  000005                     _horaRegar$803:
  2211                           	opt callstack 0
  2212  000005                     dameHumedadSuelo@canalLeer:
  2213                           	opt callstack 0
  2214  000005                     ___awdiv@counter:
  2215                           	opt callstack 0
  2216  000005                     ___awmod@counter:
  2217                           	opt callstack 0
  2218  000005                     restablecerDatosSensor@i:
  2219                           	opt callstack 0
  2220  000005                     ___wmul@product:
  2221                           	opt callstack 0
  2222  000005                     ___lmul@multiplicand:
  2223                           	opt callstack 0
  2224                           
  2225                           ; 4 bytes @ 0x4
  2226  000005                     	ds	1
  2227  000006                     ??_getValue:
  2228  000006                     leer_eeprom@dato:
  2229                           	opt callstack 0
  2230  000006                     ___awdiv@sign:
  2231                           	opt callstack 0
  2232  000006                     ___awmod@sign:
  2233                           	opt callstack 0
  2234  000006                     dameTemperaturaHumedad@Temperatura:
  2235                           	opt callstack 0
  2236                           
  2237                           ; 2 bytes @ 0x5
  2238  000006                     	ds	1
  2239  000007                     ??_inicializarObjetos:
  2240  000007                     ??_leeHorariosMemoria:
  2241  000007                     _isspace$1582:
  2242                           	opt callstack 0
  2243  000007                     escribe_eeprom@direccion:
  2244                           	opt callstack 0
  2245  000007                     ___awdiv@quotient:
  2246                           	opt callstack 0
  2247                           
  2248                           ; 2 bytes @ 0x6
  2249  000007                     	ds	1
  2250  000008                     ??_dameTemperaturaHumedad:
  2251  000008                     ?_atoi:
  2252                           	opt callstack 0
  2253  000008                     getValue@datoIncorrecto:
  2254                           	opt callstack 0
  2255  000008                     atoi@s:
  2256                           	opt callstack 0
  2257                           
  2258                           ; 2 bytes @ 0x7
  2259  000008                     	ds	1
  2260  000009                     escribe_eeprom@dato:
  2261                           	opt callstack 0
  2262  000009                     inicializarObjetos@j:
  2263                           	opt callstack 0
  2264  000009                     leeHorariosMemoria@j:
  2265                           	opt callstack 0
  2266  000009                     getValue@i:
  2267                           	opt callstack 0
  2268  000009                     ___lmul@product:
  2269                           	opt callstack 0
  2270  000009                     ___aodiv@divisor:
  2271                           	opt callstack 0
  2272  000009                     ___aomod@divisor:
  2273                           	opt callstack 0
  2274                           
  2275                           ; 8 bytes @ 0x8
  2276  000009                     	ds	1
  2277  00000A                     ??_atoi:
  2278  00000A                     ??_escribe_eeprom:
  2279  00000A                     ?_stoa:
  2280                           	opt callstack 0
  2281  00000A                     dameTemperaturaHumedad@checkSum:
  2282                           	opt callstack 0
  2283  00000A                     stoa@fp:
  2284                           	opt callstack 0
  2285  00000A                     fputs@s:
  2286                           	opt callstack 0
  2287                           
  2288                           ; 2 bytes @ 0x9
  2289  00000A                     	ds	1
  2290  00000B                     ??_escribeHorariosMemoria:
  2291  00000B                     inicializarObjetos@i_806:
  2292                           	opt callstack 0
  2293  00000B                     leeHorariosMemoria@contMemoria:
  2294                           	opt callstack 0
  2295  00000B                     getValue@i_989:
  2296                           	opt callstack 0
  2297                           
  2298                           ; 2 bytes @ 0xA
  2299  00000B                     	ds	1
  2300  00000C                     dameTemperaturaHumedad@humedadDecimal:
  2301                           	opt callstack 0
  2302  00000C                     stoa@s:
  2303                           	opt callstack 0
  2304  00000C                     fputs@fp:
  2305                           	opt callstack 0
  2306                           
  2307                           ; 2 bytes @ 0xB
  2308  00000C                     	ds	1
  2309  00000D                     ?___aldiv:
  2310                           	opt callstack 0
  2311  00000D                     dameTemperaturaHumedad@temperaturaDecimal:
  2312                           	opt callstack 0
  2313  00000D                     getValue@dato:
  2314                           	opt callstack 0
  2315  00000D                     inicializarObjetos@i:
  2316                           	opt callstack 0
  2317  00000D                     escribeHorariosMemoria@j:
  2318                           	opt callstack 0
  2319  00000D                     leeHorariosMemoria@i:
  2320                           	opt callstack 0
  2321  00000D                     ___aldiv@dividend:
  2322                           	opt callstack 0
  2323                           
  2324                           ; 4 bytes @ 0xC
  2325  00000D                     	ds	1
  2326  00000E                     ??_stoa:
  2327  00000E                     dameTemperaturaHumedad@humedad:
  2328                           	opt callstack 0
  2329  00000E                     getValue@Rx:
  2330                           	opt callstack 0
  2331  00000E                     fputs@c:
  2332                           	opt callstack 0
  2333  00000E                     atoi@neg:
  2334                           	opt callstack 0
  2335                           
  2336                           ; 2 bytes @ 0xD
  2337  00000E                     	ds	1
  2338  00000F                     ??_regadoRapido:
  2339  00000F                     setRtc@direccion:
  2340                           	opt callstack 0
  2341  00000F                     dameTemperaturaHumedad@temperatura:
  2342                           	opt callstack 0
  2343  00000F                     escribeHorariosMemoria@contMemoria:
  2344                           	opt callstack 0
  2345  00000F                     fputs@i:
  2346                           	opt callstack 0
  2347  00000F                     stoa@nuls:
  2348                           	opt callstack 0
  2349                           
  2350                           ; 7 bytes @ 0xE
  2351  00000F                     	ds	1
  2352  000010                     ?_estaSeco:
  2353                           	opt callstack 0
  2354  000010                     setRtc@seteado:
  2355                           	opt callstack 0
  2356  000010                     estaSeco@s:
  2357                           	opt callstack 0
  2358  000010                     _atoi$1564:
  2359                           	opt callstack 0
  2360                           
  2361                           ; 2 bytes @ 0xF
  2362  000010                     	ds	1
  2363  000011                     ?_pad:
  2364                           	opt callstack 0
  2365  000011                     setRtc@datoRtc:
  2366                           	opt callstack 0
  2367  000011                     regadoRapido@tiempoRegar:
  2368                           	opt callstack 0
  2369  000011                     ___aodiv@counter:
  2370                           	opt callstack 0
  2371  000011                     ___aomod@counter:
  2372                           	opt callstack 0
  2373  000011                     escribeHorariosMemoria@i:
  2374                           	opt callstack 0
  2375  000011                     pad@fp:
  2376                           	opt callstack 0
  2377  000011                     ___aldiv@divisor:
  2378                           	opt callstack 0
  2379                           
  2380                           ; 4 bytes @ 0x10
  2381  000011                     	ds	1
  2382  000012                     _estaSeco$796:
  2383                           	opt callstack 0
  2384  000012                     setRtc@dato:
  2385                           	opt callstack 0
  2386  000012                     regadoRapido@areaRegar:
  2387                           	opt callstack 0
  2388  000012                     ___aodiv@sign:
  2389                           	opt callstack 0
  2390  000012                     ___aomod@sign:
  2391                           	opt callstack 0
  2392  000012                     _atoi$1566:
  2393                           	opt callstack 0
  2394                           
  2395                           ; 2 bytes @ 0x11
  2396  000012                     	ds	1
  2397  000013                     ?_abs:
  2398                           	opt callstack 0
  2399  000013                     estaSeco@temperatura:
  2400                           	opt callstack 0
  2401  000013                     setTiempoRegar@tiempoRegar:
  2402                           	opt callstack 0
  2403  000013                     pad@buf:
  2404                           	opt callstack 0
  2405  000013                     abs@a:
  2406                           	opt callstack 0
  2407  000013                     ___aodiv@quotient:
  2408                           	opt callstack 0
  2409                           
  2410                           ; 8 bytes @ 0x12
  2411  000013                     	ds	1
  2412  000014                     ??_encenderBombas:
  2413  000014                     setTiempoRegar@hora:
  2414                           	opt callstack 0
  2415  000014                     _atoi$1565:
  2416                           	opt callstack 0
  2417                           
  2418                           ; 1 bytes @ 0x13
  2419  000014                     	ds	1
  2420  000015                     ??_abs:
  2421  000015                     ___aldiv@counter:
  2422                           	opt callstack 0
  2423  000015                     pad@p:
  2424                           	opt callstack 0
  2425  000015                     atoi@n:
  2426                           	opt callstack 0
  2427                           
  2428                           ; 2 bytes @ 0x14
  2429  000015                     	ds	1
  2430  000016                     encenderBombas@flagSeco:
  2431                           	opt callstack 0
  2432  000016                     ___aldiv@sign:
  2433                           	opt callstack 0
  2434  000016                     stoa@i:
  2435                           	opt callstack 0
  2436                           
  2437                           ; 2 bytes @ 0x15
  2438  000016                     	ds	1
  2439  000017                     ??_pad:
  2440  000017                     encenderBombas@i:
  2441                           	opt callstack 0
  2442  000017                     ___aldiv@quotient:
  2443                           	opt callstack 0
  2444                           
  2445                           ; 4 bytes @ 0x16
  2446  000017                     	ds	1
  2447  000018                     pad@i:
  2448                           	opt callstack 0
  2449  000018                     stoa@w:
  2450                           	opt callstack 0
  2451                           
  2452                           ; 2 bytes @ 0x17
  2453  000018                     	ds	2
  2454  00001A                     pad@w:
  2455                           	opt callstack 0
  2456  00001A                     stoa@cp:
  2457                           	opt callstack 0
  2458                           
  2459                           ; 2 bytes @ 0x19
  2460  00001A                     	ds	1
  2461  00001B                     ?_map:
  2462                           	opt callstack 0
  2463  00001B                     UART_init@BAUD:
  2464                           	opt callstack 0
  2465  00001B                     map@x:
  2466                           	opt callstack 0
  2467                           
  2468                           ; 4 bytes @ 0x1A
  2469  00001B                     	ds	1
  2470  00001C                     ?_ctoa:
  2471                           	opt callstack 0
  2472  00001C                     ?_dtoa:
  2473                           	opt callstack 0
  2474  00001C                     ctoa@fp:
  2475                           	opt callstack 0
  2476  00001C                     dtoa@fp:
  2477                           	opt callstack 0
  2478  00001C                     stoa@p:
  2479                           	opt callstack 0
  2480                           
  2481                           ; 2 bytes @ 0x1B
  2482  00001C                     	ds	2
  2483  00001E                     ctoa@c:
  2484                           	opt callstack 0
  2485  00001E                     stoa@l:
  2486                           	opt callstack 0
  2487  00001E                     dtoa@d:
  2488                           	opt callstack 0
  2489                           
  2490                           ; 8 bytes @ 0x1D
  2491  00001E                     	ds	1
  2492  00001F                     ctoa@w:
  2493                           	opt callstack 0
  2494  00001F                     map@in_min:
  2495                           	opt callstack 0
  2496                           
  2497                           ; 4 bytes @ 0x1E
  2498  00001F                     	ds	4
  2499  000023                     map@in_max:
  2500                           	opt callstack 0
  2501  000023                     _UART_init$1915:
  2502                           	opt callstack 0
  2503                           
  2504                           ; 4 bytes @ 0x22
  2505  000023                     	ds	3
  2506  000026                     ??_dtoa:
  2507                           
  2508                           ; 1 bytes @ 0x25
  2509  000026                     	ds	1
  2510  000027                     map@out_min:
  2511                           	opt callstack 0
  2512                           
  2513                           ; 4 bytes @ 0x26
  2514  000027                     	ds	4
  2515  00002B                     map@out_max:
  2516                           	opt callstack 0
  2517                           
  2518                           ; 4 bytes @ 0x2A
  2519  00002B                     	ds	3
  2520  00002E                     _dtoa$1081:
  2521                           	opt callstack 0
  2522                           
  2523                           ; 2 bytes @ 0x2D
  2524  00002E                     	ds	1
  2525  00002F                     ??_lecturaAnalogaSensores:
  2526                           
  2527                           ; 1 bytes @ 0x2E
  2528  00002F                     	ds	1
  2529  000030                     lecturaAnalogaSensores@i:
  2530                           	opt callstack 0
  2531  000030                     dtoa@p:
  2532                           	opt callstack 0
  2533                           
  2534                           ; 2 bytes @ 0x2F
  2535  000030                     	ds	2
  2536  000032                     dtoa@w:
  2537                           	opt callstack 0
  2538                           
  2539                           ; 2 bytes @ 0x31
  2540  000032                     	ds	2
  2541  000034                     dtoa@s:
  2542                           	opt callstack 0
  2543                           
  2544                           ; 2 bytes @ 0x33
  2545  000034                     	ds	2
  2546  000036                     dtoa@n:
  2547                           	opt callstack 0
  2548                           
  2549                           ; 8 bytes @ 0x35
  2550  000036                     	ds	8
  2551  00003E                     dtoa@i:
  2552                           	opt callstack 0
  2553                           
  2554                           ; 2 bytes @ 0x3D
  2555  00003E                     	ds	2
  2556  000040                     ?_vfpfcnvrt:
  2557                           	opt callstack 0
  2558  000040                     vfpfcnvrt@fp:
  2559                           	opt callstack 0
  2560                           
  2561                           ; 2 bytes @ 0x3F
  2562  000040                     	ds	2
  2563  000042                     vfpfcnvrt@fmt:
  2564                           	opt callstack 0
  2565                           
  2566                           ; 2 bytes @ 0x41
  2567  000042                     	ds	2
  2568  000044                     vfpfcnvrt@ap:
  2569                           	opt callstack 0
  2570                           
  2571                           ; 2 bytes @ 0x43
  2572  000044                     	ds	2
  2573  000046                     ??_vfpfcnvrt:
  2574                           
  2575                           ; 1 bytes @ 0x45
  2576  000046                     	ds	4
  2577  00004A                     vfpfcnvrt@ll:
  2578                           	opt callstack 0
  2579                           
  2580                           ; 8 bytes @ 0x49
  2581  00004A                     	ds	8
  2582  000052                     vfpfcnvrt@cp:
  2583                           	opt callstack 0
  2584                           
  2585                           ; 2 bytes @ 0x51
  2586  000052                     	ds	2
  2587  000054                     _vfpfcnvrt$1105:
  2588                           	opt callstack 0
  2589                           
  2590                           ; 2 bytes @ 0x53
  2591  000054                     	ds	2
  2592  000056                     vfpfcnvrt@c:
  2593                           	opt callstack 0
  2594                           
  2595                           ; 1 bytes @ 0x55
  2596  000056                     	ds	1
  2597  000057                     ?_vfprintf:
  2598                           	opt callstack 0
  2599  000057                     vfprintf@fp:
  2600                           	opt callstack 0
  2601                           
  2602                           ; 2 bytes @ 0x56
  2603  000057                     	ds	2
  2604  000059                     vfprintf@fmt:
  2605                           	opt callstack 0
  2606                           
  2607                           ; 2 bytes @ 0x58
  2608  000059                     	ds	2
  2609  00005B                     vfprintf@ap:
  2610                           	opt callstack 0
  2611                           
  2612                           ; 2 bytes @ 0x5A
  2613  00005B                     	ds	2
  2614  00005D                     vfprintf@cfmt:
  2615                           	opt callstack 0
  2616                           
  2617                           ; 2 bytes @ 0x5C
  2618  00005D                     	ds	2
  2619  00005F                     
  2620                           ; 1 bytes @ 0x5E
  2621 ;;
  2622 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2623 ;;
  2624 ;; *************** function _main *****************
  2625 ;; Defined at:
  2626 ;;		line 978 in file "main.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;		None
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;		None
  2631 ;; Return value:  Size  Location     Type
  2632 ;;                  1    wreg      void 
  2633 ;; Registers used:
  2634 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 0/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2640 ;;      Params:         0       0       0       0       0       0       0       0       0
  2641 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2642 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2643 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2644 ;;Total ram usage:        0 bytes
  2645 ;; Hardware stack levels required when called:   12
  2646 ;; This function calls:
  2647 ;;		_UART_init
  2648 ;;		_configurarAdc
  2649 ;;		_i2c_iniciar
  2650 ;;		_inicializarObjetos
  2651 ;;		_leeHorariosMemoria
  2652 ;;		_mostrarMenu
  2653 ;;		_restablecerDatosSensor
  2654 ;;		_sistemaPrincipal
  2655 ;;		_sistemaRegado
  2656 ;; This function is called by:
  2657 ;;		Startup code after reset
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661                           	psect	text0
  2662  0024A2                     __ptext0:
  2663                           	opt callstack 0
  2664  0024A2                     _main:
  2665                           	opt callstack 19
  2666  0024A2                     
  2667                           ;main.c: 980:     INTCONbits.GIE = 1;
  2668  0024A2  8EF2               	bsf	242,7,c	;volatile
  2669                           
  2670                           ;main.c: 981:     INTCONbits.PEIE = 1;
  2671  0024A4  8CF2               	bsf	242,6,c	;volatile
  2672                           
  2673                           ;main.c: 982:     INTCONbits.TMR0IE = 0;
  2674  0024A6  9AF2               	bcf	242,5,c	;volatile
  2675                           
  2676                           ;main.c: 983:     INTCONbits.TMR0IF = 0;
  2677  0024A8  94F2               	bcf	242,2,c	;volatile
  2678                           
  2679                           ;main.c: 984:     PIE1bits.RCIE = 1;
  2680  0024AA  8A9D               	bsf	157,5,c	;volatile
  2681  0024AC                     
  2682                           ;main.c: 986:     T0CON = 0b00000111;
  2683  0024AC  0E07               	movlw	7
  2684  0024AE  6ED5               	movwf	213,c	;volatile
  2685  0024B0                     
  2686                           ;main.c: 988:     INTCONbits.TMR0IE = 1;
  2687  0024B0  8AF2               	bsf	242,5,c	;volatile
  2688  0024B2                     
  2689                           ;main.c: 993:     restablecerDatosSensor();
  2690  0024B2  ECCF  F015         	call	_restablecerDatosSensor	;wreg free
  2691  0024B6                     
  2692                           ;main.c: 995:     UART_init(9600);
  2693  0024B6  0E80               	movlw	128
  2694  0024B8  6E1B               	movwf	UART_init@BAUD^0,c
  2695  0024BA  0E25               	movlw	37
  2696  0024BC  6E1C               	movwf	(UART_init@BAUD+1)^0,c
  2697  0024BE  0E00               	movlw	0
  2698  0024C0  6E1D               	movwf	(UART_init@BAUD+2)^0,c
  2699  0024C2  0E00               	movlw	0
  2700  0024C4  6E1E               	movwf	(UART_init@BAUD+3)^0,c
  2701  0024C6  EC92  F013         	call	_UART_init	;wreg free
  2702  0024CA                     
  2703                           ;main.c: 996:     i2c_iniciar();
  2704  0024CA  ECBB  F017         	call	_i2c_iniciar	;wreg free
  2705  0024CE                     
  2706                           ;main.c: 997:     configurarAdc();
  2707  0024CE  ECDF  F017         	call	_configurarAdc	;wreg free
  2708  0024D2                     
  2709                           ;main.c: 998:     inicializarObjetos();
  2710  0024D2  EC97  F009         	call	_inicializarObjetos	;wreg free
  2711  0024D6                     
  2712                           ;main.c: 1000:     leeHorariosMemoria();
  2713  0024D6  EC43  F00C         	call	_leeHorariosMemoria	;wreg free
  2714  0024DA                     
  2715                           ;main.c: 1004:     TRISD = 0;
  2716  0024DA  0E00               	movlw	0
  2717  0024DC  6E95               	movwf	149,c	;volatile
  2718  0024DE                     
  2719                           ;main.c: 1005:     LATD = 0;
  2720  0024DE  0E00               	movlw	0
  2721  0024E0  6E8C               	movwf	140,c	;volatile
  2722  0024E2                     
  2723                           ;main.c: 1007:     TMR0 = VALOR_TIMER0;
  2724  0024E2  C1A6  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
  2725  0024E6  C1A7  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
  2726  0024EA                     
  2727                           ;main.c: 1009:     INTCONbits.TMR0IF = 1;
  2728  0024EA  84F2               	bsf	242,2,c	;volatile
  2729  0024EC                     
  2730                           ;main.c: 1011:     T0CONbits.TMR0ON = 1;
  2731  0024EC  8ED5               	bsf	213,7,c	;volatile
  2732  0024EE                     
  2733                           ;main.c: 1013:     mostrarMenu();
  2734  0024EE  ECE0  F012         	call	_mostrarMenu	;wreg free
  2735  0024F2                     
  2736                           ;main.c: 1015:     MODO_COMUNICACION = 0;
  2737  0024F2  0E00               	movlw	0
  2738  0024F4  0101               	movlb	1	; () banked
  2739  0024F6  6F7C               	movwf	_MODO_COMUNICACION& (0+255),b
  2740  0024F8                     l4614:
  2741                           
  2742                           ;main.c: 1020:         if (datoRecibido) {
  2743  0024F8  0101               	movlb	1	; () banked
  2744  0024FA  517B               	movf	_datoRecibido& (0+255),w,b
  2745  0024FC  B4D8               	btfsc	status,2,c
  2746  0024FE  EF83  F012         	goto	u3671
  2747  002502  EF85  F012         	goto	u3670
  2748  002506                     u3671:
  2749  002506  EF8C  F012         	goto	l4622
  2750  00250A                     u3670:
  2751  00250A                     
  2752                           ; BSR set to: 1
  2753                           ;main.c: 1022:             datoRecibido = 0;
  2754  00250A  0E00               	movlw	0
  2755  00250C  6F7B               	movwf	_datoRecibido& (0+255),b
  2756  00250E                     
  2757                           ; BSR set to: 1
  2758                           ;main.c: 1023:             byteUart -= 48;
  2759  00250E  0E30               	movlw	48
  2760  002510  5F7E               	subwf	_byteUart& (0+255),f,b
  2761  002512                     
  2762                           ; BSR set to: 1
  2763                           ;main.c: 1024:             sistemaPrincipal(byteUart);
  2764  002512  517E               	movf	_byteUart& (0+255),w,b
  2765  002514  ECD8  F00F         	call	_sistemaPrincipal
  2766  002518                     l4622:
  2767                           
  2768                           ;main.c: 1028:         if (overflowTimer) {
  2769  002518  0101               	movlb	1	; () banked
  2770  00251A  517A               	movf	_overflowTimer& (0+255),w,b
  2771  00251C  B4D8               	btfsc	status,2,c
  2772  00251E  EF93  F012         	goto	u3681
  2773  002522  EF95  F012         	goto	u3680
  2774  002526                     u3681:
  2775  002526  EF7C  F012         	goto	l4614
  2776  00252A                     u3680:
  2777  00252A                     
  2778                           ; BSR set to: 1
  2779                           ;main.c: 1030:             esperandoDatos = 0;
  2780  00252A  0E00               	movlw	0
  2781  00252C  6F7D               	movwf	_esperandoDatos& (0+255),b
  2782                           
  2783                           ;main.c: 1031:             overflowTimer = 0;
  2784  00252E  0E00               	movlw	0
  2785  002530  6F7A               	movwf	_overflowTimer& (0+255),b
  2786  002532                     
  2787                           ; BSR set to: 1
  2788                           ;main.c: 1032:             sistemaRegado();
  2789  002532  ECE0  F008         	call	_sistemaRegado	;wreg free
  2790  002536  EF7C  F012         	goto	l4614
  2791  00253A  EF07  F000         	goto	start
  2792  00253E                     __end_of_main:
  2793                           	opt callstack 0
  2794                           
  2795 ;; *************** function _sistemaRegado *****************
  2796 ;; Defined at:
  2797 ;;		line 600 in file "main.c"
  2798 ;; Parameters:    Size  Location     Type
  2799 ;;		None
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;		None
  2802 ;; Return value:  Size  Location     Type
  2803 ;;                  1    wreg      void 
  2804 ;; Registers used:
  2805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2806 ;; Tracked objects:
  2807 ;;		On entry : 0/0
  2808 ;;		On exit  : 0/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2811 ;;      Params:         0       0       0       0       0       0       0       0       0
  2812 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2813 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2814 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2815 ;;Total ram usage:        0 bytes
  2816 ;; Hardware stack levels used:    1
  2817 ;; Hardware stack levels required when called:   10
  2818 ;; This function calls:
  2819 ;;		_dameDiaActual
  2820 ;;		_dameHoraActual
  2821 ;;		_encenderBombas
  2822 ;;		_horaRegar
  2823 ;;		_lecturaAnalogaSensores
  2824 ;;		_lecturaWifi
  2825 ;;		_mostrarMenu
  2826 ;; This function is called by:
  2827 ;;		_main
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831                           	psect	text1
  2832  0011C0                     __ptext1:
  2833                           	opt callstack 0
  2834  0011C0                     _sistemaRegado:
  2835                           	opt callstack 20
  2836  0011C0                     
  2837                           ;main.c: 604:     if (regando) {
  2838  0011C0  0100               	movlb	0	; () banked
  2839  0011C2  51F4               	movf	_regando& (0+255),w,b
  2840  0011C4  B4D8               	btfsc	status,2,c
  2841  0011C6  EFE7  F008         	goto	u3521
  2842  0011CA  EFE9  F008         	goto	u3520
  2843  0011CE                     u3521:
  2844  0011CE  EF19  F009         	goto	l4506
  2845  0011D2                     u3520:
  2846  0011D2                     
  2847                           ; BSR set to: 0
  2848                           ;main.c: 606:         contInterrupciones++;
  2849  0011D2  4BF1               	infsnz	_contInterrupciones& (0+255),f,b
  2850  0011D4  2BF2               	incf	(_contInterrupciones+1)& (0+255),f,b
  2851  0011D6                     
  2852                           ; BSR set to: 0
  2853                           ;main.c: 608:         if (contInterrupciones == 6) {
  2854  0011D6  0E06               	movlw	6
  2855  0011D8  19F1               	xorwf	_contInterrupciones& (0+255),w,b
  2856  0011DA  11F2               	iorwf	(_contInterrupciones+1)& (0+255),w,b
  2857  0011DC  A4D8               	btfss	status,2,c
  2858  0011DE  EFF3  F008         	goto	u3531
  2859  0011E2  EFF5  F008         	goto	u3530
  2860  0011E6                     u3531:
  2861  0011E6  EF96  F009         	goto	l375
  2862  0011EA                     u3530:
  2863  0011EA                     
  2864                           ; BSR set to: 0
  2865                           ;main.c: 609:             contInterrupciones = 0;
  2866  0011EA  0E00               	movlw	0
  2867  0011EC  6FF2               	movwf	(_contInterrupciones+1)& (0+255),b
  2868  0011EE  0E00               	movlw	0
  2869  0011F0  6FF1               	movwf	_contInterrupciones& (0+255),b
  2870  0011F2                     
  2871                           ; BSR set to: 0
  2872                           ;main.c: 610:             minutosTranscurridos++;
  2873  0011F2  2BF5               	incf	_minutosTranscurridos& (0+255),f,b
  2874  0011F4                     
  2875                           ; BSR set to: 0
  2876                           ;main.c: 613:             if (minutosTranscurridos >= minutosRegar) {
  2877  0011F4  51F6               	movf	_minutosRegar& (0+255),w,b
  2878  0011F6  5DF5               	subwf	_minutosTranscurridos& (0+255),w,b
  2879  0011F8  A0D8               	btfss	status,0,c
  2880  0011FA  EF01  F009         	goto	u3541
  2881  0011FE  EF03  F009         	goto	u3540
  2882  001202                     u3541:
  2883  001202  EF96  F009         	goto	l375
  2884  001206                     u3540:
  2885  001206                     
  2886                           ; BSR set to: 0
  2887                           ;main.c: 615:                 LATD = 0;
  2888  001206  0E00               	movlw	0
  2889  001208  6E8C               	movwf	140,c	;volatile
  2890                           
  2891                           ;main.c: 616:                 minutosTranscurridos = 0;
  2892  00120A  0E00               	movlw	0
  2893  00120C  6FF5               	movwf	_minutosTranscurridos& (0+255),b
  2894                           
  2895                           ;main.c: 617:                 regando = 0;
  2896  00120E  0E00               	movlw	0
  2897  001210  6FF4               	movwf	_regando& (0+255),b
  2898  001212                     
  2899                           ; BSR set to: 0
  2900                           ;main.c: 618:                 horarios[hora].regado = 1;
  2901  001212  51FC               	movf	_hora& (0+255),w,b
  2902  001214  0D0C               	mullw	12
  2903  001216  0EB4               	movlw	low (_horarios+10)
  2904  001218  24F3               	addwf	243,w,c
  2905  00121A  6ED9               	movwf	fsr2l,c
  2906  00121C  0E01               	movlw	high (_horarios+10)
  2907  00121E  20F4               	addwfc	prodh,w,c
  2908  001220  6EDA               	movwf	fsr2h,c
  2909  001222  0E01               	movlw	1
  2910  001224  6EDF               	movwf	indf2,c
  2911  001226                     
  2912                           ; BSR set to: 0
  2913                           ;main.c: 619:                 tempHora = hora;
  2914  001226  C0FC  F0F8         	movff	_hora,_tempHora
  2915  00122A                     
  2916                           ; BSR set to: 0
  2917                           ;main.c: 620:                 flagRegado = 0;
  2918  00122A  0E00               	movlw	0
  2919  00122C  6FF7               	movwf	_flagRegado& (0+255),b
  2920  00122E  EF96  F009         	goto	l375
  2921  001232                     l4506:
  2922                           
  2923                           ; BSR set to: 0
  2924                           ;main.c: 626:         dameHoraActual();
  2925  001232  EC23  F017         	call	_dameHoraActual	;wreg free
  2926                           
  2927                           ;main.c: 627:         dameDiaActual();
  2928  001236  ECC6  F017         	call	_dameDiaActual	;wreg free
  2929  00123A                     
  2930                           ;main.c: 629:         if (hora != tempHora && !flagRegado) {
  2931  00123A  0100               	movlb	0	; () banked
  2932  00123C  51F8               	movf	_tempHora& (0+255),w,b
  2933  00123E  19FC               	xorwf	_hora& (0+255),w,b
  2934  001240  B4D8               	btfsc	status,2,c
  2935  001242  EF25  F009         	goto	u3551
  2936  001246  EF27  F009         	goto	u3550
  2937  00124A                     u3551:
  2938  00124A  EF3B  F009         	goto	l4516
  2939  00124E                     u3550:
  2940  00124E                     
  2941                           ; BSR set to: 0
  2942  00124E  51F7               	movf	_flagRegado& (0+255),w,b
  2943  001250  A4D8               	btfss	status,2,c
  2944  001252  EF2D  F009         	goto	u3561
  2945  001256  EF2F  F009         	goto	u3560
  2946  00125A                     u3561:
  2947  00125A  EF3B  F009         	goto	l4516
  2948  00125E                     u3560:
  2949  00125E                     
  2950                           ; BSR set to: 0
  2951                           ;main.c: 630:             horarios[tempHora].regado = 0;
  2952  00125E  51F8               	movf	_tempHora& (0+255),w,b
  2953  001260  0D0C               	mullw	12
  2954  001262  0EB4               	movlw	low (_horarios+10)
  2955  001264  24F3               	addwf	243,w,c
  2956  001266  6ED9               	movwf	fsr2l,c
  2957  001268  0E01               	movlw	high (_horarios+10)
  2958  00126A  20F4               	addwfc	prodh,w,c
  2959  00126C  6EDA               	movwf	fsr2h,c
  2960  00126E  0E00               	movlw	0
  2961  001270  6EDF               	movwf	indf2,c
  2962  001272                     
  2963                           ; BSR set to: 0
  2964                           ;main.c: 631:             flagRegado = 1;
  2965  001272  0E01               	movlw	1
  2966  001274  6FF7               	movwf	_flagRegado& (0+255),b
  2967  001276                     l4516:
  2968                           
  2969                           ; BSR set to: 0
  2970                           ;main.c: 634:         if ((!MODO_COMUNICACION && horaRegar()) || (MODO_COMUNICACION
  2971  001276  0101               	movlb	1	; () banked
  2972  001278  517C               	movf	_MODO_COMUNICACION& (0+255),w,b
  2973  00127A  A4D8               	btfss	status,2,c
  2974  00127C  EF42  F009         	goto	u3571
  2975  001280  EF44  F009         	goto	u3570
  2976  001284                     u3571:
  2977  001284  EF4F  F009         	goto	l4520
  2978  001288                     u3570:
  2979  001288                     
  2980                           ; BSR set to: 1
  2981  001288  EC9F  F012         	call	_horaRegar	;wreg free
  2982  00128C  5001               	movf	?_horaRegar^0,w,c
  2983  00128E  1002               	iorwf	(?_horaRegar+1)^0,w,c
  2984  001290  A4D8               	btfss	status,2,c
  2985  001292  EF4D  F009         	goto	u3581
  2986  001296  EF4F  F009         	goto	u3580
  2987  00129A                     u3581:
  2988  00129A  EF63  F009         	goto	l4524
  2989  00129E                     u3580:
  2990  00129E                     l4520:
  2991  00129E  0101               	movlb	1	; () banked
  2992  0012A0  517C               	movf	_MODO_COMUNICACION& (0+255),w,b
  2993  0012A2  B4D8               	btfsc	status,2,c
  2994  0012A4  EF56  F009         	goto	u3591
  2995  0012A8  EF58  F009         	goto	u3590
  2996  0012AC                     u3591:
  2997  0012AC  EF96  F009         	goto	l375
  2998  0012B0                     u3590:
  2999  0012B0                     
  3000                           ; BSR set to: 1
  3001  0012B0  EC9F  F012         	call	_horaRegar	;wreg free
  3002  0012B4  5001               	movf	?_horaRegar^0,w,c
  3003  0012B6  1002               	iorwf	(?_horaRegar+1)^0,w,c
  3004  0012B8  B4D8               	btfsc	status,2,c
  3005  0012BA  EF61  F009         	goto	u3601
  3006  0012BE  EF63  F009         	goto	u3600
  3007  0012C2                     u3601:
  3008  0012C2  EF96  F009         	goto	l375
  3009  0012C6                     u3600:
  3010  0012C6                     l4524:
  3011                           
  3012                           ;main.c: 635:                 && horaRegar())) {;main.c: 639:             if (MODO_COMUN
      +                          ICACION) {
  3013  0012C6  0101               	movlb	1	; () banked
  3014  0012C8  517C               	movf	_MODO_COMUNICACION& (0+255),w,b
  3015  0012CA  B4D8               	btfsc	status,2,c
  3016  0012CC  EF6A  F009         	goto	u3611
  3017  0012D0  EF6C  F009         	goto	u3610
  3018  0012D4                     u3611:
  3019  0012D4  EF87  F009         	goto	l4536
  3020  0012D8                     u3610:
  3021  0012D8                     
  3022                           ; BSR set to: 1
  3023                           ;main.c: 640:                 lecturaWifi();
  3024  0012D8  EC84  F00E         	call	_lecturaWifi	;wreg free
  3025  0012DC                     
  3026                           ;main.c: 641:                 if (peticionLecturaSensores) {
  3027  0012DC  0100               	movlb	0	; () banked
  3028  0012DE  51F3               	movf	_peticionLecturaSensores& (0+255),w,b
  3029  0012E0  B4D8               	btfsc	status,2,c
  3030  0012E2  EF75  F009         	goto	u3621
  3031  0012E6  EF77  F009         	goto	u3620
  3032  0012EA                     u3621:
  3033  0012EA  EF83  F009         	goto	l4534
  3034  0012EE                     u3620:
  3035  0012EE                     
  3036                           ; BSR set to: 0
  3037                           ;main.c: 642:                     minutosRegar = horarios[hora].tiempoRegar;
  3038  0012EE  51FC               	movf	_hora& (0+255),w,b
  3039  0012F0  0D0C               	mullw	12
  3040  0012F2  0EB5               	movlw	low (_horarios+11)
  3041  0012F4  24F3               	addwf	243,w,c
  3042  0012F6  6ED9               	movwf	fsr2l,c
  3043  0012F8  0E01               	movlw	high (_horarios+11)
  3044  0012FA  20F4               	addwfc	prodh,w,c
  3045  0012FC  6EDA               	movwf	fsr2h,c
  3046  0012FE  50DF               	movf	indf2,w,c
  3047  001300  6FF6               	movwf	_minutosRegar& (0+255),b
  3048  001302                     
  3049                           ; BSR set to: 0
  3050                           ;main.c: 643:                     encenderBombas();
  3051  001302  EC49  F003         	call	_encenderBombas	;wreg free
  3052  001306                     l4534:
  3053                           
  3054                           ;main.c: 645:                 mostrarMenu();
  3055  001306  ECE0  F012         	call	_mostrarMenu	;wreg free
  3056                           
  3057                           ;main.c: 646:             } else {
  3058  00130A  EF96  F009         	goto	l375
  3059  00130E                     l4536:
  3060                           
  3061                           ; BSR set to: 1
  3062                           ;main.c: 647:                 lecturaAnalogaSensores();
  3063  00130E  EC59  F011         	call	_lecturaAnalogaSensores	;wreg free
  3064  001312                     
  3065                           ;main.c: 648:                 minutosRegar = horarios[hora].tiempoRegar;
  3066  001312  0100               	movlb	0	; () banked
  3067  001314  51FC               	movf	_hora& (0+255),w,b
  3068  001316  0D0C               	mullw	12
  3069  001318  0EB5               	movlw	low (_horarios+11)
  3070  00131A  24F3               	addwf	243,w,c
  3071  00131C  6ED9               	movwf	fsr2l,c
  3072  00131E  0E01               	movlw	high (_horarios+11)
  3073  001320  20F4               	addwfc	prodh,w,c
  3074  001322  6EDA               	movwf	fsr2h,c
  3075  001324  50DF               	movf	indf2,w,c
  3076  001326  6FF6               	movwf	_minutosRegar& (0+255),b
  3077  001328                     
  3078                           ; BSR set to: 0
  3079                           ;main.c: 649:                 encenderBombas();
  3080  001328  EC49  F003         	call	_encenderBombas	;wreg free
  3081  00132C                     l375:
  3082  00132C  0012               	return		;funcret
  3083  00132E                     __end_of_sistemaRegado:
  3084                           	opt callstack 0
  3085                           
  3086 ;; *************** function _horaRegar *****************
  3087 ;; Defined at:
  3088 ;;		line 152 in file "main.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;		None
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;		None
  3093 ;; Return value:  Size  Location     Type
  3094 ;;                  2    0[COMRAM] int 
  3095 ;; Registers used:
  3096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3102 ;;      Params:         2       0       0       0       0       0       0       0       0
  3103 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3104 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3105 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3106 ;;Total ram usage:        5 bytes
  3107 ;; Hardware stack levels used:    1
  3108 ;; Hardware stack levels required when called:    1
  3109 ;; This function calls:
  3110 ;;		Nothing
  3111 ;; This function is called by:
  3112 ;;		_sistemaRegado
  3113 ;; This function uses a non-reentrant model
  3114 ;;
  3115                           
  3116                           	psect	text2
  3117  00253E                     __ptext2:
  3118                           	opt callstack 0
  3119  00253E                     _horaRegar:
  3120                           	opt callstack 28
  3121  00253E                     
  3122                           ;main.c: 154:     return (horarios[hora].regar) && (!horarios[hora].regado) &&
  3123  00253E  0E00               	movlw	0
  3124  002540  6E05               	movwf	_horaRegar$803^0,c
  3125  002542  0100               	movlb	0	; () banked
  3126  002544  51FC               	movf	_hora& (0+255),w,b
  3127  002546  0D0C               	mullw	12
  3128  002548  0EB3               	movlw	low (_horarios+9)
  3129  00254A  24F3               	addwf	243,w,c
  3130  00254C  6ED9               	movwf	fsr2l,c
  3131  00254E  0E01               	movlw	high (_horarios+9)
  3132  002550  20F4               	addwfc	prodh,w,c
  3133  002552  6EDA               	movwf	fsr2h,c
  3134  002554  50DF               	movf	indf2,w,c
  3135  002556  B4D8               	btfsc	status,2,c
  3136  002558  EFB0  F012         	goto	u3151
  3137  00255C  EFB2  F012         	goto	u3150
  3138  002560                     u3151:
  3139  002560  EFDC  F012         	goto	l4042
  3140  002564                     u3150:
  3141  002564                     
  3142                           ; BSR set to: 0
  3143  002564  51FC               	movf	_hora& (0+255),w,b
  3144  002566  0D0C               	mullw	12
  3145  002568  0EB4               	movlw	low (_horarios+10)
  3146  00256A  24F3               	addwf	243,w,c
  3147  00256C  6ED9               	movwf	fsr2l,c
  3148  00256E  0E01               	movlw	high (_horarios+10)
  3149  002570  20F4               	addwfc	prodh,w,c
  3150  002572  6EDA               	movwf	fsr2h,c
  3151  002574  50DF               	movf	indf2,w,c
  3152  002576  A4D8               	btfss	status,2,c
  3153  002578  EFC0  F012         	goto	u3161
  3154  00257C  EFC2  F012         	goto	u3160
  3155  002580                     u3161:
  3156  002580  EFDC  F012         	goto	l4042
  3157  002584                     u3160:
  3158  002584                     
  3159                           ; BSR set to: 0
  3160  002584  51FC               	movf	_hora& (0+255),w,b
  3161  002586  0D0C               	mullw	12
  3162  002588  0EAA               	movlw	low _horarios
  3163  00258A  6E03               	movwf	??_horaRegar^0,c
  3164  00258C  0E01               	movlw	high _horarios
  3165  00258E  6E04               	movwf	(??_horaRegar+1)^0,c
  3166  002590  50F3               	movf	243,w,c
  3167  002592  2603               	addwf	??_horaRegar^0,f,c
  3168  002594  50F4               	movf	244,w,c
  3169  002596  2204               	addwfc	(??_horaRegar+1)^0,f,c
  3170  002598  51F9               	movf	_diaActual& (0+255),w,b
  3171  00259A  2403               	addwf	??_horaRegar^0,w,c
  3172  00259C  6ED9               	movwf	fsr2l,c
  3173  00259E  0E00               	movlw	0
  3174  0025A0  2004               	addwfc	(??_horaRegar+1)^0,w,c
  3175  0025A2  6EDA               	movwf	fsr2h,c
  3176  0025A4  50DF               	movf	indf2,w,c
  3177  0025A6  B4D8               	btfsc	status,2,c
  3178  0025A8  EFD8  F012         	goto	u3171
  3179  0025AC  EFDA  F012         	goto	u3170
  3180  0025B0                     u3171:
  3181  0025B0  EFDC  F012         	goto	l4042
  3182  0025B4                     u3170:
  3183  0025B4                     
  3184                           ; BSR set to: 0
  3185  0025B4  0E01               	movlw	1
  3186  0025B6  6E05               	movwf	_horaRegar$803^0,c
  3187  0025B8                     l4042:
  3188                           
  3189                           ; BSR set to: 0
  3190  0025B8  C005  F001         	movff	_horaRegar$803,?_horaRegar
  3191  0025BC  6A02               	clrf	(?_horaRegar+1)^0,c
  3192  0025BE                     
  3193                           ; BSR set to: 0
  3194  0025BE  0012               	return		;funcret
  3195  0025C0                     __end_of_horaRegar:
  3196                           	opt callstack 0
  3197                           
  3198 ;; *************** function _encenderBombas *****************
  3199 ;; Defined at:
  3200 ;;		line 292 in file "main.c"
  3201 ;; Parameters:    Size  Location     Type
  3202 ;;		None
  3203 ;; Auto vars:     Size  Location     Type
  3204 ;;  i               2   22[COMRAM] int 
  3205 ;;  flagSeco        1   21[COMRAM] unsigned char 
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  1    wreg      void 
  3208 ;; Registers used:
  3209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3215 ;;      Params:         0       0       0       0       0       0       0       0       0
  3216 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3217 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3218 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3219 ;;Total ram usage:        5 bytes
  3220 ;; Hardware stack levels used:    1
  3221 ;; Hardware stack levels required when called:    5
  3222 ;; This function calls:
  3223 ;;		_estaSeco
  3224 ;; This function is called by:
  3225 ;;		_sistemaRegado
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           
  3229                           	psect	text3
  3230  000692                     __ptext3:
  3231                           	opt callstack 0
  3232  000692                     _encenderBombas:
  3233                           	opt callstack 24
  3234  000692                     
  3235                           ;main.c: 294:     char flagSeco = 0;
  3236  000692  0E00               	movlw	0
  3237  000694  6E16               	movwf	encenderBombas@flagSeco^0,c
  3238                           
  3239                           ;main.c: 296:     for (int i = 0; i < 3; i++) {
  3240  000696  0E00               	movlw	0
  3241  000698  6E18               	movwf	(encenderBombas@i+1)^0,c
  3242  00069A  0E00               	movlw	0
  3243  00069C  6E17               	movwf	encenderBombas@i^0,c
  3244  00069E  EF2B  F004         	goto	l4120
  3245  0006A2                     l4070:
  3246                           
  3247                           ;main.c: 301:                 if (estaSeco(sensores[i])) {
  3248  0006A2  90D8               	bcf	status,0,c
  3249  0006A4  3417               	rlcf	encenderBombas@i^0,w,c
  3250  0006A6  6ED9               	movwf	fsr2l,c
  3251  0006A8  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  3252  0006AA  6EDA               	movwf	fsr2h,c
  3253  0006AC  0E68               	movlw	low _sensores
  3254  0006AE  26D9               	addwf	fsr2l,f,c
  3255  0006B0  0E01               	movlw	high _sensores
  3256  0006B2  22DA               	addwfc	fsr2h,f,c
  3257  0006B4  CFDE F010          	movff	postinc2,estaSeco@s
  3258  0006B8  CFDD F011          	movff	postdec2,estaSeco@s+1
  3259  0006BC  EC1A  F016         	call	_estaSeco	;wreg free
  3260  0006C0  5010               	movf	?_estaSeco^0,w,c
  3261  0006C2  1011               	iorwf	(?_estaSeco+1)^0,w,c
  3262  0006C4  B4D8               	btfsc	status,2,c
  3263  0006C6  EF67  F003         	goto	u3191
  3264  0006CA  EF69  F003         	goto	u3190
  3265  0006CE                     u3191:
  3266  0006CE  EF59  F004         	goto	l4122
  3267  0006D2                     u3190:
  3268  0006D2                     
  3269                           ;main.c: 302:                     LATDbits.LATD0 = 1;
  3270  0006D2  808C               	bsf	140,0,c	;volatile
  3271  0006D4                     l4074:
  3272                           
  3273                           ;main.c: 303:                     flagSeco = 1;
  3274  0006D4  0E01               	movlw	1
  3275  0006D6  6E16               	movwf	encenderBombas@flagSeco^0,c
  3276  0006D8  EF59  F004         	goto	l4122
  3277  0006DC                     l4076:
  3278                           
  3279                           ;main.c: 308:                 if (estaSeco(sensores[i])) {
  3280  0006DC  90D8               	bcf	status,0,c
  3281  0006DE  3417               	rlcf	encenderBombas@i^0,w,c
  3282  0006E0  6ED9               	movwf	fsr2l,c
  3283  0006E2  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  3284  0006E4  6EDA               	movwf	fsr2h,c
  3285  0006E6  0E68               	movlw	low _sensores
  3286  0006E8  26D9               	addwf	fsr2l,f,c
  3287  0006EA  0E01               	movlw	high _sensores
  3288  0006EC  22DA               	addwfc	fsr2h,f,c
  3289  0006EE  CFDE F010          	movff	postinc2,estaSeco@s
  3290  0006F2  CFDD F011          	movff	postdec2,estaSeco@s+1
  3291  0006F6  EC1A  F016         	call	_estaSeco	;wreg free
  3292  0006FA  5010               	movf	?_estaSeco^0,w,c
  3293  0006FC  1011               	iorwf	(?_estaSeco+1)^0,w,c
  3294  0006FE  B4D8               	btfsc	status,2,c
  3295  000700  EF84  F003         	goto	u3201
  3296  000704  EF86  F003         	goto	u3200
  3297  000708                     u3201:
  3298  000708  EF59  F004         	goto	l4122
  3299  00070C                     u3200:
  3300  00070C                     
  3301                           ;main.c: 309:                     LATDbits.LATD1 = 1;
  3302  00070C  828C               	bsf	140,1,c	;volatile
  3303  00070E  EF6A  F003         	goto	l4074
  3304  000712                     l4082:
  3305                           
  3306                           ;main.c: 315:                 if (estaSeco(sensores[i])) {
  3307  000712  90D8               	bcf	status,0,c
  3308  000714  3417               	rlcf	encenderBombas@i^0,w,c
  3309  000716  6ED9               	movwf	fsr2l,c
  3310  000718  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  3311  00071A  6EDA               	movwf	fsr2h,c
  3312  00071C  0E68               	movlw	low _sensores
  3313  00071E  26D9               	addwf	fsr2l,f,c
  3314  000720  0E01               	movlw	high _sensores
  3315  000722  22DA               	addwfc	fsr2h,f,c
  3316  000724  CFDE F010          	movff	postinc2,estaSeco@s
  3317  000728  CFDD F011          	movff	postdec2,estaSeco@s+1
  3318  00072C  EC1A  F016         	call	_estaSeco	;wreg free
  3319  000730  5010               	movf	?_estaSeco^0,w,c
  3320  000732  1011               	iorwf	(?_estaSeco+1)^0,w,c
  3321  000734  B4D8               	btfsc	status,2,c
  3322  000736  EF9F  F003         	goto	u3211
  3323  00073A  EFA1  F003         	goto	u3210
  3324  00073E                     u3211:
  3325  00073E  EF59  F004         	goto	l4122
  3326  000742                     u3210:
  3327  000742                     
  3328                           ;main.c: 316:                     LATDbits.LATD2 = 1;
  3329  000742  848C               	bsf	140,2,c	;volatile
  3330  000744  EF6A  F003         	goto	l4074
  3331  000748                     l4088:
  3332                           
  3333                           ;main.c: 322:                 if (estaSeco(sensores[i])) {
  3334  000748  90D8               	bcf	status,0,c
  3335  00074A  3417               	rlcf	encenderBombas@i^0,w,c
  3336  00074C  6ED9               	movwf	fsr2l,c
  3337  00074E  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  3338  000750  6EDA               	movwf	fsr2h,c
  3339  000752  0E68               	movlw	low _sensores
  3340  000754  26D9               	addwf	fsr2l,f,c
  3341  000756  0E01               	movlw	high _sensores
  3342  000758  22DA               	addwfc	fsr2h,f,c
  3343  00075A  CFDE F010          	movff	postinc2,estaSeco@s
  3344  00075E  CFDD F011          	movff	postdec2,estaSeco@s+1
  3345  000762  EC1A  F016         	call	_estaSeco	;wreg free
  3346  000766  5010               	movf	?_estaSeco^0,w,c
  3347  000768  1011               	iorwf	(?_estaSeco+1)^0,w,c
  3348  00076A  B4D8               	btfsc	status,2,c
  3349  00076C  EFBA  F003         	goto	u3221
  3350  000770  EFBC  F003         	goto	u3220
  3351  000774                     u3221:
  3352  000774  EF59  F004         	goto	l4122
  3353  000778                     u3220:
  3354  000778                     
  3355                           ;main.c: 323:                     LATDbits.LATD3 = 1;
  3356  000778  868C               	bsf	140,3,c	;volatile
  3357  00077A  EF6A  F003         	goto	l4074
  3358  00077E                     l4094:
  3359                           
  3360                           ;main.c: 329:                 if (estaSeco(sensores[i])) {
  3361  00077E  90D8               	bcf	status,0,c
  3362  000780  3417               	rlcf	encenderBombas@i^0,w,c
  3363  000782  6ED9               	movwf	fsr2l,c
  3364  000784  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  3365  000786  6EDA               	movwf	fsr2h,c
  3366  000788  0E68               	movlw	low _sensores
  3367  00078A  26D9               	addwf	fsr2l,f,c
  3368  00078C  0E01               	movlw	high _sensores
  3369  00078E  22DA               	addwfc	fsr2h,f,c
  3370  000790  CFDE F010          	movff	postinc2,estaSeco@s
  3371  000794  CFDD F011          	movff	postdec2,estaSeco@s+1
  3372  000798  EC1A  F016         	call	_estaSeco	;wreg free
  3373  00079C  5010               	movf	?_estaSeco^0,w,c
  3374  00079E  1011               	iorwf	(?_estaSeco+1)^0,w,c
  3375  0007A0  B4D8               	btfsc	status,2,c
  3376  0007A2  EFD5  F003         	goto	u3231
  3377  0007A6  EFD7  F003         	goto	u3230
  3378  0007AA                     u3231:
  3379  0007AA  EF59  F004         	goto	l4122
  3380  0007AE                     u3230:
  3381  0007AE                     
  3382                           ;main.c: 330:                     LATDbits.LATD4 = 1;
  3383  0007AE  888C               	bsf	140,4,c	;volatile
  3384  0007B0  EF6A  F003         	goto	l4074
  3385  0007B4                     l4100:
  3386                           
  3387                           ;main.c: 336:                 if (estaSeco(sensores[i])) {
  3388  0007B4  90D8               	bcf	status,0,c
  3389  0007B6  3417               	rlcf	encenderBombas@i^0,w,c
  3390  0007B8  6ED9               	movwf	fsr2l,c
  3391  0007BA  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  3392  0007BC  6EDA               	movwf	fsr2h,c
  3393  0007BE  0E68               	movlw	low _sensores
  3394  0007C0  26D9               	addwf	fsr2l,f,c
  3395  0007C2  0E01               	movlw	high _sensores
  3396  0007C4  22DA               	addwfc	fsr2h,f,c
  3397  0007C6  CFDE F010          	movff	postinc2,estaSeco@s
  3398  0007CA  CFDD F011          	movff	postdec2,estaSeco@s+1
  3399  0007CE  EC1A  F016         	call	_estaSeco	;wreg free
  3400  0007D2  5010               	movf	?_estaSeco^0,w,c
  3401  0007D4  1011               	iorwf	(?_estaSeco+1)^0,w,c
  3402  0007D6  B4D8               	btfsc	status,2,c
  3403  0007D8  EFF0  F003         	goto	u3241
  3404  0007DC  EFF2  F003         	goto	u3240
  3405  0007E0                     u3241:
  3406  0007E0  EF59  F004         	goto	l4122
  3407  0007E4                     u3240:
  3408  0007E4                     
  3409                           ;main.c: 337:                     LATDbits.LATD5 = 1;
  3410  0007E4  8A8C               	bsf	140,5,c	;volatile
  3411  0007E6  EF6A  F003         	goto	l4074
  3412  0007EA                     l4106:
  3413                           
  3414                           ;main.c: 343:                 if (estaSeco(sensores[i])) {
  3415  0007EA  90D8               	bcf	status,0,c
  3416  0007EC  3417               	rlcf	encenderBombas@i^0,w,c
  3417  0007EE  6ED9               	movwf	fsr2l,c
  3418  0007F0  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  3419  0007F2  6EDA               	movwf	fsr2h,c
  3420  0007F4  0E68               	movlw	low _sensores
  3421  0007F6  26D9               	addwf	fsr2l,f,c
  3422  0007F8  0E01               	movlw	high _sensores
  3423  0007FA  22DA               	addwfc	fsr2h,f,c
  3424  0007FC  CFDE F010          	movff	postinc2,estaSeco@s
  3425  000800  CFDD F011          	movff	postdec2,estaSeco@s+1
  3426  000804  EC1A  F016         	call	_estaSeco	;wreg free
  3427  000808  5010               	movf	?_estaSeco^0,w,c
  3428  00080A  1011               	iorwf	(?_estaSeco+1)^0,w,c
  3429  00080C  B4D8               	btfsc	status,2,c
  3430  00080E  EF0B  F004         	goto	u3251
  3431  000812  EF0D  F004         	goto	u3250
  3432  000816                     u3251:
  3433  000816  EF59  F004         	goto	l4122
  3434  00081A                     u3250:
  3435  00081A                     
  3436                           ;main.c: 344:                     LATDbits.LATD6 = 1;
  3437  00081A  8C8C               	bsf	140,6,c	;volatile
  3438  00081C  EF6A  F003         	goto	l4074
  3439  000820                     l4112:
  3440                           
  3441                           ;main.c: 350:                 if (estaSeco(sensores[i])) {
  3442  000820  90D8               	bcf	status,0,c
  3443  000822  3417               	rlcf	encenderBombas@i^0,w,c
  3444  000824  6ED9               	movwf	fsr2l,c
  3445  000826  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  3446  000828  6EDA               	movwf	fsr2h,c
  3447  00082A  0E68               	movlw	low _sensores
  3448  00082C  26D9               	addwf	fsr2l,f,c
  3449  00082E  0E01               	movlw	high _sensores
  3450  000830  22DA               	addwfc	fsr2h,f,c
  3451  000832  CFDE F010          	movff	postinc2,estaSeco@s
  3452  000836  CFDD F011          	movff	postdec2,estaSeco@s+1
  3453  00083A  EC1A  F016         	call	_estaSeco	;wreg free
  3454  00083E  5010               	movf	?_estaSeco^0,w,c
  3455  000840  1011               	iorwf	(?_estaSeco+1)^0,w,c
  3456  000842  B4D8               	btfsc	status,2,c
  3457  000844  EF26  F004         	goto	u3261
  3458  000848  EF28  F004         	goto	u3260
  3459  00084C                     u3261:
  3460  00084C  EF59  F004         	goto	l4122
  3461  000850                     u3260:
  3462  000850                     
  3463                           ;main.c: 351:                     LATDbits.LATD7 = 1;
  3464  000850  8E8C               	bsf	140,7,c	;volatile
  3465  000852  EF6A  F003         	goto	l4074
  3466  000856                     l4120:
  3467  000856  C017  F014         	movff	encenderBombas@i,??_encenderBombas
  3468  00085A  C018  F015         	movff	encenderBombas@i+1,??_encenderBombas+1
  3469                           
  3470                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3471                           ; Switch size 1, requested type "simple"
  3472                           ; Number of cases is 1, Range of values is 0 to 0
  3473                           ; switch strategies available:
  3474                           ; Name         Instructions Cycles
  3475                           ; simple_byte            4     3 (average)
  3476                           ;	Chosen strategy is simple_byte
  3477  00085E  5015               	movf	(??_encenderBombas+1)^0,w,c
  3478  000860  0A00               	xorlw	0	; case 0
  3479  000862  B4D8               	btfsc	status,2,c
  3480  000864  EF36  F004         	goto	l4788
  3481  000868  EF59  F004         	goto	l4122
  3482  00086C                     l4788:
  3483                           
  3484                           ; Switch size 1, requested type "simple"
  3485                           ; Number of cases is 8, Range of values is 0 to 7
  3486                           ; switch strategies available:
  3487                           ; Name         Instructions Cycles
  3488                           ; simple_byte           25    13 (average)
  3489                           ;	Chosen strategy is simple_byte
  3490  00086C  5014               	movf	??_encenderBombas^0,w,c
  3491  00086E  0A00               	xorlw	0	; case 0
  3492  000870  B4D8               	btfsc	status,2,c
  3493  000872  EF51  F003         	goto	l4070
  3494  000876  0A01               	xorlw	1	; case 1
  3495  000878  B4D8               	btfsc	status,2,c
  3496  00087A  EF6E  F003         	goto	l4076
  3497  00087E  0A03               	xorlw	3	; case 2
  3498  000880  B4D8               	btfsc	status,2,c
  3499  000882  EF89  F003         	goto	l4082
  3500  000886  0A01               	xorlw	1	; case 3
  3501  000888  B4D8               	btfsc	status,2,c
  3502  00088A  EFA4  F003         	goto	l4088
  3503  00088E  0A07               	xorlw	7	; case 4
  3504  000890  B4D8               	btfsc	status,2,c
  3505  000892  EFBF  F003         	goto	l4094
  3506  000896  0A01               	xorlw	1	; case 5
  3507  000898  B4D8               	btfsc	status,2,c
  3508  00089A  EFDA  F003         	goto	l4100
  3509  00089E  0A03               	xorlw	3	; case 6
  3510  0008A0  B4D8               	btfsc	status,2,c
  3511  0008A2  EFF5  F003         	goto	l4106
  3512  0008A6  0A01               	xorlw	1	; case 7
  3513  0008A8  B4D8               	btfsc	status,2,c
  3514  0008AA  EF10  F004         	goto	l4112
  3515  0008AE  EF59  F004         	goto	l4122
  3516  0008B2                     l4122:
  3517                           
  3518                           ;main.c: 357:     }
  3519  0008B2  4A17               	infsnz	encenderBombas@i^0,f,c
  3520  0008B4  2A18               	incf	(encenderBombas@i+1)^0,f,c
  3521  0008B6  BE18               	btfsc	(encenderBombas@i+1)^0,7,c
  3522  0008B8  EF67  F004         	goto	u3271
  3523  0008BC  5018               	movf	(encenderBombas@i+1)^0,w,c
  3524  0008BE  E109               	bnz	u3270
  3525  0008C0  0E03               	movlw	3
  3526  0008C2  5C17               	subwf	encenderBombas@i^0,w,c
  3527  0008C4  A0D8               	btfss	status,0,c
  3528  0008C6  EF67  F004         	goto	u3271
  3529  0008CA  EF69  F004         	goto	u3270
  3530  0008CE                     u3271:
  3531  0008CE  EF2B  F004         	goto	l4120
  3532  0008D2                     u3270:
  3533  0008D2                     
  3534                           ;main.c: 359:     if (flagSeco) {
  3535  0008D2  5016               	movf	encenderBombas@flagSeco^0,w,c
  3536  0008D4  B4D8               	btfsc	status,2,c
  3537  0008D6  EF6F  F004         	goto	u3281
  3538  0008DA  EF71  F004         	goto	u3280
  3539  0008DE                     u3281:
  3540  0008DE  EF7E  F004         	goto	l298
  3541  0008E2                     u3280:
  3542  0008E2                     
  3543                           ;main.c: 360:         regando = 1;
  3544  0008E2  0E01               	movlw	1
  3545  0008E4  0100               	movlb	0	; () banked
  3546  0008E6  6FF4               	movwf	_regando& (0+255),b
  3547  0008E8                     
  3548                           ; BSR set to: 0
  3549                           ;main.c: 361:         horarios[hora].regado = 0;
  3550  0008E8  51FC               	movf	_hora& (0+255),w,b
  3551  0008EA  0D0C               	mullw	12
  3552  0008EC  0EB4               	movlw	low (_horarios+10)
  3553  0008EE  24F3               	addwf	243,w,c
  3554  0008F0  6ED9               	movwf	fsr2l,c
  3555  0008F2  0E01               	movlw	high (_horarios+10)
  3556  0008F4  20F4               	addwfc	prodh,w,c
  3557  0008F6  6EDA               	movwf	fsr2h,c
  3558  0008F8  0E00               	movlw	0
  3559  0008FA  6EDF               	movwf	indf2,c
  3560  0008FC                     l298:
  3561  0008FC  0012               	return		;funcret
  3562  0008FE                     __end_of_encenderBombas:
  3563                           	opt callstack 0
  3564                           
  3565 ;; *************** function _estaSeco *****************
  3566 ;; Defined at:
  3567 ;;		line 143 in file "main.c"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;  s               2   15[COMRAM] struct .
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;  temperatura     1   18[COMRAM] unsigned char 
  3572 ;; Return value:  Size  Location     Type
  3573 ;;                  2   15[COMRAM] int 
  3574 ;; Registers used:
  3575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3576 ;; Tracked objects:
  3577 ;;		On entry : 0/0
  3578 ;;		On exit  : 0/0
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3581 ;;      Params:         2       0       0       0       0       0       0       0       0
  3582 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3583 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3584 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3585 ;;Total ram usage:        4 bytes
  3586 ;; Hardware stack levels used:    1
  3587 ;; Hardware stack levels required when called:    4
  3588 ;; This function calls:
  3589 ;;		_dameTemperaturaHumedad
  3590 ;; This function is called by:
  3591 ;;		_encenderBombas
  3592 ;; This function uses a non-reentrant model
  3593 ;;
  3594                           
  3595                           	psect	text4
  3596  002C34                     __ptext4:
  3597                           	opt callstack 0
  3598  002C34                     _estaSeco:
  3599                           	opt callstack 24
  3600  002C34                     
  3601                           ;main.c: 144:     unsigned char temperatura;;main.c: 146:     dameTemperaturaHumedad(((v
      +                          oid*)0), &temperatura);
  3602  002C34  0E00               	movlw	0
  3603  002C36  6E04               	movwf	dameTemperaturaHumedad@Humedad^0,c
  3604  002C38  0E00               	movlw	0
  3605  002C3A  6E05               	movwf	(dameTemperaturaHumedad@Humedad+1)^0,c
  3606  002C3C  0E13               	movlw	low estaSeco@temperatura
  3607  002C3E  6E06               	movwf	dameTemperaturaHumedad@Temperatura^0,c
  3608  002C40  0E00               	movlw	high estaSeco@temperatura
  3609  002C42  6E07               	movwf	(dameTemperaturaHumedad@Temperatura+1)^0,c
  3610  002C44  ECAF  F011         	call	_dameTemperaturaHumedad	;wreg free
  3611  002C48                     
  3612                           ;main.c: 149:     return (s.porcientoHumedad < 94) && (temperatura < 34);
  3613  002C48  0E00               	movlw	0
  3614  002C4A  6E12               	movwf	_estaSeco$796^0,c
  3615  002C4C  0E5E               	movlw	94
  3616  002C4E  6010               	cpfslt	estaSeco@s^0,c
  3617  002C50  EF2C  F016         	goto	u3061
  3618  002C54  EF2E  F016         	goto	u3060
  3619  002C58                     u3061:
  3620  002C58  EF38  F016         	goto	l3926
  3621  002C5C                     u3060:
  3622  002C5C  0E22               	movlw	34
  3623  002C5E  6013               	cpfslt	estaSeco@temperatura^0,c
  3624  002C60  EF34  F016         	goto	u3071
  3625  002C64  EF36  F016         	goto	u3070
  3626  002C68                     u3071:
  3627  002C68  EF38  F016         	goto	l3926
  3628  002C6C                     u3070:
  3629  002C6C  0E01               	movlw	1
  3630  002C6E  6E12               	movwf	_estaSeco$796^0,c
  3631  002C70                     l3926:
  3632  002C70  C012  F010         	movff	_estaSeco$796,?_estaSeco
  3633  002C74  6A11               	clrf	(?_estaSeco+1)^0,c
  3634  002C76  0012               	return		;funcret
  3635  002C78                     __end_of_estaSeco:
  3636                           	opt callstack 0
  3637                           
  3638 ;; *************** function _dameHoraActual *****************
  3639 ;; Defined at:
  3640 ;;		line 177 in file "main.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;		None
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;		None
  3645 ;; Return value:  Size  Location     Type
  3646 ;;                  1    wreg      void 
  3647 ;; Registers used:
  3648 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3649 ;; Tracked objects:
  3650 ;;		On entry : 0/0
  3651 ;;		On exit  : 0/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3654 ;;      Params:         0       0       0       0       0       0       0       0       0
  3655 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3656 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3657 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3658 ;;Total ram usage:        0 bytes
  3659 ;; Hardware stack levels used:    1
  3660 ;; Hardware stack levels required when called:    4
  3661 ;; This function calls:
  3662 ;;		_convertirDato
  3663 ;;		_leer_rtc
  3664 ;; This function is called by:
  3665 ;;		_sistemaRegado
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           
  3669                           	psect	text5
  3670  002E46                     __ptext5:
  3671                           	opt callstack 0
  3672  002E46                     _dameHoraActual:
  3673                           	opt callstack 25
  3674  002E46                     
  3675                           ;main.c: 179:     segundos = convertirDato(leer_rtc(0x00));
  3676  002E46  0E00               	movlw	0
  3677  002E48  EC39  F017         	call	_leer_rtc
  3678  002E4C  EC74  F017         	call	_convertirDato
  3679  002E50  0100               	movlb	0	; () banked
  3680  002E52  6FFA               	movwf	_segundos& (0+255),b
  3681                           
  3682                           ;main.c: 180:     minutos = convertirDato(leer_rtc(0x01));
  3683  002E54  0E01               	movlw	1
  3684  002E56  EC39  F017         	call	_leer_rtc
  3685  002E5A  EC74  F017         	call	_convertirDato
  3686  002E5E  0100               	movlb	0	; () banked
  3687  002E60  6FFB               	movwf	_minutos& (0+255),b
  3688                           
  3689                           ;main.c: 181:     hora = convertirDato(leer_rtc(0x02));
  3690  002E62  0E02               	movlw	2
  3691  002E64  EC39  F017         	call	_leer_rtc
  3692  002E68  EC74  F017         	call	_convertirDato
  3693  002E6C  0100               	movlb	0	; () banked
  3694  002E6E  6FFC               	movwf	_hora& (0+255),b
  3695  002E70                     
  3696                           ; BSR set to: 0
  3697  002E70  0012               	return		;funcret
  3698  002E72                     __end_of_dameHoraActual:
  3699                           	opt callstack 0
  3700                           
  3701 ;; *************** function _dameDiaActual *****************
  3702 ;; Defined at:
  3703 ;;		line 184 in file "main.c"
  3704 ;; Parameters:    Size  Location     Type
  3705 ;;		None
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;		None
  3708 ;; Return value:  Size  Location     Type
  3709 ;;                  1    wreg      void 
  3710 ;; Registers used:
  3711 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3712 ;; Tracked objects:
  3713 ;;		On entry : 0/0
  3714 ;;		On exit  : 0/0
  3715 ;;		Unchanged: 0/0
  3716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3717 ;;      Params:         0       0       0       0       0       0       0       0       0
  3718 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3719 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3720 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3721 ;;Total ram usage:        0 bytes
  3722 ;; Hardware stack levels used:    1
  3723 ;; Hardware stack levels required when called:    4
  3724 ;; This function calls:
  3725 ;;		_convertirDato
  3726 ;;		_leer_rtc
  3727 ;; This function is called by:
  3728 ;;		_sistemaRegado
  3729 ;; This function uses a non-reentrant model
  3730 ;;
  3731                           
  3732                           	psect	text6
  3733  002F8C                     __ptext6:
  3734                           	opt callstack 0
  3735  002F8C                     _dameDiaActual:
  3736                           	opt callstack 25
  3737  002F8C                     
  3738                           ;main.c: 186:     diaActual = convertirDato(leer_rtc(0x03));
  3739  002F8C  0E03               	movlw	3
  3740  002F8E  EC39  F017         	call	_leer_rtc
  3741  002F92  EC74  F017         	call	_convertirDato
  3742  002F96  0100               	movlb	0	; () banked
  3743  002F98  6FF9               	movwf	_diaActual& (0+255),b
  3744  002F9A                     
  3745                           ; BSR set to: 0
  3746  002F9A  0012               	return		;funcret
  3747  002F9C                     __end_of_dameDiaActual:
  3748                           	opt callstack 0
  3749                           
  3750 ;; *************** function _leer_rtc *****************
  3751 ;; Defined at:
  3752 ;;		line 13 in file "./RTC.h"
  3753 ;; Parameters:    Size  Location     Type
  3754 ;;  direccion       1    wreg     unsigned char 
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;  direccion       1    2[COMRAM] unsigned char 
  3757 ;;  dato            1    3[COMRAM] unsigned char 
  3758 ;; Return value:  Size  Location     Type
  3759 ;;                  1    wreg      unsigned char 
  3760 ;; Registers used:
  3761 ;;		wreg, status,2, status,0, cstack
  3762 ;; Tracked objects:
  3763 ;;		On entry : 0/0
  3764 ;;		On exit  : 0/0
  3765 ;;		Unchanged: 0/0
  3766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3767 ;;      Params:         0       0       0       0       0       0       0       0       0
  3768 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3769 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3770 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3771 ;;Total ram usage:        2 bytes
  3772 ;; Hardware stack levels used:    1
  3773 ;; Hardware stack levels required when called:    3
  3774 ;; This function calls:
  3775 ;;		_i2c_detener
  3776 ;;		_i2c_envia_dato
  3777 ;;		_i2c_inicia_com
  3778 ;;		_i2c_recibe_dato
  3779 ;;		_i2c_reinicia_com
  3780 ;; This function is called by:
  3781 ;;		_dameHoraActual
  3782 ;;		_dameDiaActual
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           
  3786                           	psect	text7
  3787  002E72                     __ptext7:
  3788                           	opt callstack 0
  3789  002E72                     _leer_rtc:
  3790                           	opt callstack 25
  3791                           
  3792                           ; BSR set to: 0
  3793                           ;incstack = 0
  3794                           ;leer_rtc@direccion stored from wreg
  3795  002E72  6E03               	movwf	leer_rtc@direccion^0,c
  3796  002E74                     
  3797                           ;./RTC.h: 14:     unsigned char dato;;./RTC.h: 15:     i2c_inicia_com();
  3798  002E74  ECE8  F017         	call	_i2c_inicia_com	;wreg free
  3799                           
  3800                           ;./RTC.h: 16:     i2c_envia_dato(0xD0);
  3801  002E78  0ED0               	movlw	208
  3802  002E7A  ECCE  F017         	call	_i2c_envia_dato
  3803                           
  3804                           ;./RTC.h: 17:     i2c_envia_dato(direccion);
  3805  002E7E  5003               	movf	leer_rtc@direccion^0,w,c
  3806  002E80  ECCE  F017         	call	_i2c_envia_dato
  3807                           
  3808                           ;./RTC.h: 18:     i2c_reinicia_com();
  3809  002E84  ECE4  F017         	call	_i2c_reinicia_com	;wreg free
  3810                           
  3811                           ;./RTC.h: 19:     i2c_envia_dato(0xD1);
  3812  002E88  0ED1               	movlw	209
  3813  002E8A  ECCE  F017         	call	_i2c_envia_dato
  3814                           
  3815                           ;./RTC.h: 20:     dato = i2c_recibe_dato();
  3816  002E8E  ECA3  F017         	call	_i2c_recibe_dato	;wreg free
  3817  002E92  6E04               	movwf	leer_rtc@dato^0,c
  3818                           
  3819                           ;./RTC.h: 21:     i2c_detener();
  3820  002E94  ECEC  F017         	call	_i2c_detener	;wreg free
  3821  002E98                     
  3822                           ;./RTC.h: 22:     return dato;
  3823  002E98  5004               	movf	leer_rtc@dato^0,w,c
  3824  002E9A  0012               	return		;funcret
  3825  002E9C                     __end_of_leer_rtc:
  3826                           	opt callstack 0
  3827                           
  3828 ;; *************** function _convertirDato *****************
  3829 ;; Defined at:
  3830 ;;		line 28 in file "./RTC.h"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;  dato            1    wreg     unsigned char 
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;  dato            1    1[COMRAM] unsigned char 
  3835 ;;  datoR           1    2[COMRAM] unsigned char 
  3836 ;; Return value:  Size  Location     Type
  3837 ;;                  1    wreg      unsigned char 
  3838 ;; Registers used:
  3839 ;;		wreg, status,2, status,0, prodl, prodh
  3840 ;; Tracked objects:
  3841 ;;		On entry : 0/0
  3842 ;;		On exit  : 0/0
  3843 ;;		Unchanged: 0/0
  3844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3845 ;;      Params:         0       0       0       0       0       0       0       0       0
  3846 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3847 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3848 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3849 ;;Total ram usage:        3 bytes
  3850 ;; Hardware stack levels used:    1
  3851 ;; Hardware stack levels required when called:    1
  3852 ;; This function calls:
  3853 ;;		Nothing
  3854 ;; This function is called by:
  3855 ;;		_dameHoraActual
  3856 ;;		_dameDiaActual
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           	psect	text8
  3861  002EE8                     __ptext8:
  3862                           	opt callstack 0
  3863  002EE8                     _convertirDato:
  3864                           	opt callstack 27
  3865                           
  3866                           ;incstack = 0
  3867                           ;convertirDato@dato stored from wreg
  3868  002EE8  6E02               	movwf	convertirDato@dato^0,c
  3869  002EEA                     
  3870                           ;./RTC.h: 30:     datoR = (dato & 0xF0) >> 4;
  3871  002EEA  3802               	swapf	convertirDato@dato^0,w,c
  3872  002EEC  0B0F               	andlw	15
  3873  002EEE  0B0F               	andlw	15
  3874  002EF0  6E03               	movwf	convertirDato@datoR^0,c
  3875  002EF2                     
  3876                           ;./RTC.h: 31:     datoR = (datoR * 10) + (dato & 0x0F);
  3877  002EF2  C002  F001         	movff	convertirDato@dato,??_convertirDato
  3878  002EF6  0E0F               	movlw	15
  3879  002EF8  1601               	andwf	??_convertirDato^0,f,c
  3880  002EFA  5003               	movf	convertirDato@datoR^0,w,c
  3881  002EFC  0D0A               	mullw	10
  3882  002EFE  50F3               	movf	243,w,c
  3883  002F00  2401               	addwf	??_convertirDato^0,w,c
  3884  002F02  6E03               	movwf	convertirDato@datoR^0,c
  3885  002F04                     
  3886                           ;./RTC.h: 32:     return datoR;
  3887  002F04  5003               	movf	convertirDato@datoR^0,w,c
  3888  002F06  0012               	return		;funcret
  3889  002F08                     __end_of_convertirDato:
  3890                           	opt callstack 0
  3891                           
  3892 ;; *************** function _sistemaPrincipal *****************
  3893 ;; Defined at:
  3894 ;;		line 553 in file "main.c"
  3895 ;; Parameters:    Size  Location     Type
  3896 ;;  opcion          1    wreg     unsigned char 
  3897 ;; Auto vars:     Size  Location     Type
  3898 ;;  opcion          1  138[BANK0 ] unsigned char 
  3899 ;; Return value:  Size  Location     Type
  3900 ;;                  1    wreg      void 
  3901 ;; Registers used:
  3902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3903 ;; Tracked objects:
  3904 ;;		On entry : 0/0
  3905 ;;		On exit  : 0/0
  3906 ;;		Unchanged: 0/0
  3907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3908 ;;      Params:         0       0       0       0       0       0       0       0       0
  3909 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3910 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3911 ;;      Totals:         0       3       0       0       0       0       0       0       0
  3912 ;;Total ram usage:        3 bytes
  3913 ;; Hardware stack levels used:    1
  3914 ;; Hardware stack levels required when called:   11
  3915 ;; This function calls:
  3916 ;;		_UART_printf
  3917 ;;		_asignarHorarios
  3918 ;;		_dameDatosSistema
  3919 ;;		_fijaDiaRtc
  3920 ;;		_fijaHoraRtc
  3921 ;;		_mostrarDatosSensores
  3922 ;;		_mostrarDatosSensoresWIFI
  3923 ;;		_mostrarMenu
  3924 ;;		_regadoRapido
  3925 ;;		_setTiempoRegar
  3926 ;; This function is called by:
  3927 ;;		_main
  3928 ;; This function uses a non-reentrant model
  3929 ;;
  3930                           
  3931                           	psect	text9
  3932  001FB0                     __ptext9:
  3933                           	opt callstack 0
  3934  001FB0                     _sistemaPrincipal:
  3935                           	opt callstack 19
  3936                           
  3937                           ;incstack = 0
  3938                           ;sistemaPrincipal@opcion stored from wreg
  3939  001FB0  0100               	movlb	0	; () banked
  3940  001FB2  6FEA               	movwf	sistemaPrincipal@opcion& (0+255),b
  3941  001FB4                     
  3942                           ;main.c: 555:     PIE1bits.RCIE = 0;
  3943  001FB4  9A9D               	bcf	157,5,c	;volatile
  3944                           
  3945                           ;main.c: 557:     switch (opcion) {
  3946  001FB6  EF0E  F010         	goto	l4476
  3947  001FBA                     l4454:
  3948                           
  3949                           ; BSR set to: 0
  3950                           ;main.c: 560:             fijaHoraRtc();
  3951  001FBA  ECFF  F013         	call	_fijaHoraRtc	;wreg free
  3952                           
  3953                           ;main.c: 561:             break;
  3954  001FBE  EF38  F010         	goto	l4478
  3955  001FC2                     l4456:
  3956                           
  3957                           ; BSR set to: 0
  3958                           ;main.c: 564:             asignarHorarios();
  3959  001FC2  ECFE  F00A         	call	_asignarHorarios	;wreg free
  3960                           
  3961                           ;main.c: 565:             break;
  3962  001FC6  EF38  F010         	goto	l4478
  3963  001FCA                     l4458:
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;main.c: 568:             setTiempoRegar();
  3967  001FCA  EC01  F012         	call	_setTiempoRegar	;wreg free
  3968                           
  3969                           ;main.c: 569:             break;
  3970  001FCE  EF38  F010         	goto	l4478
  3971  001FD2                     l4460:
  3972                           
  3973                           ; BSR set to: 0
  3974                           ;main.c: 572:             dameDatosSistema();
  3975  001FD2  EC91  F005         	call	_dameDatosSistema	;wreg free
  3976                           
  3977                           ;main.c: 573:             break;
  3978  001FD6  EF38  F010         	goto	l4478
  3979  001FDA                     l4462:
  3980                           
  3981                           ; BSR set to: 0
  3982                           ;main.c: 576:             if (MODO_COMUNICACION)
  3983  001FDA  0101               	movlb	1	; () banked
  3984  001FDC  517C               	movf	_MODO_COMUNICACION& (0+255),w,b
  3985  001FDE  B4D8               	btfsc	status,2,c
  3986  001FE0  EFF4  F00F         	goto	u3511
  3987  001FE4  EFF6  F00F         	goto	u3510
  3988  001FE8                     u3511:
  3989  001FE8  EFFA  F00F         	goto	l4466
  3990  001FEC                     u3510:
  3991  001FEC                     
  3992                           ; BSR set to: 1
  3993                           ;main.c: 577:                 mostrarDatosSensoresWIFI();
  3994  001FEC  EC01  F00E         	call	_mostrarDatosSensoresWIFI	;wreg free
  3995  001FF0  EF38  F010         	goto	l4478
  3996  001FF4                     l4466:
  3997                           
  3998                           ; BSR set to: 1
  3999                           ;main.c: 579:                 mostrarDatosSensores();
  4000  001FF4  ECFC  F00E         	call	_mostrarDatosSensores	;wreg free
  4001  001FF8  EF38  F010         	goto	l4478
  4002  001FFC                     l4468:
  4003                           
  4004                           ; BSR set to: 0
  4005                           ;main.c: 583:             regadoRapido();
  4006  001FFC  ECE0  F00C         	call	_regadoRapido	;wreg free
  4007                           
  4008                           ;main.c: 584:             break;
  4009  002000  EF38  F010         	goto	l4478
  4010  002004                     l4470:
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;main.c: 587:             fijaDiaRtc();
  4014  002004  ECF3  F016         	call	_fijaDiaRtc	;wreg free
  4015                           
  4016                           ;main.c: 588:             break;
  4017  002008  EF38  F010         	goto	l4478
  4018  00200C                     l4472:
  4019                           
  4020                           ; BSR set to: 0
  4021                           ;main.c: 591:             UART_printf("\r\n Solo se permiten numeros del 1 al 3 \r\n");
  4022  00200C  0EF2               	movlw	low STR_31
  4023  00200E  6E02               	movwf	UART_printf@cadena^0,c
  4024  002010  0E7C               	movlw	high STR_31
  4025  002012  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4026  002014  EC97  F014         	call	_UART_printf	;wreg free
  4027                           
  4028                           ;main.c: 592:             break;
  4029  002018  EF38  F010         	goto	l4478
  4030  00201C                     l4476:
  4031  00201C  0100               	movlb	0	; () banked
  4032  00201E  51EA               	movf	sistemaPrincipal@opcion& (0+255),w,b
  4033  002020  6FE8               	movwf	??_sistemaPrincipal& (0+255),b
  4034  002022  6BE9               	clrf	(??_sistemaPrincipal+1)& (0+255),b
  4035                           
  4036                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4037                           ; Switch size 1, requested type "simple"
  4038                           ; Number of cases is 1, Range of values is 0 to 0
  4039                           ; switch strategies available:
  4040                           ; Name         Instructions Cycles
  4041                           ; simple_byte            4     3 (average)
  4042                           ;	Chosen strategy is simple_byte
  4043  002024  51E9               	movf	(??_sistemaPrincipal+1)& (0+255),w,b
  4044  002026  0A00               	xorlw	0	; case 0
  4045  002028  B4D8               	btfsc	status,2,c
  4046  00202A  EF19  F010         	goto	l4790
  4047  00202E  EF06  F010         	goto	l4472
  4048  002032                     l4790:
  4049                           
  4050                           ; BSR set to: 0
  4051                           ; Switch size 1, requested type "simple"
  4052                           ; Number of cases is 7, Range of values is 1 to 7
  4053                           ; switch strategies available:
  4054                           ; Name         Instructions Cycles
  4055                           ; simple_byte           22    12 (average)
  4056                           ;	Chosen strategy is simple_byte
  4057  002032  51E8               	movf	??_sistemaPrincipal& (0+255),w,b
  4058  002034  0A01               	xorlw	1	; case 1
  4059  002036  B4D8               	btfsc	status,2,c
  4060  002038  EFDD  F00F         	goto	l4454
  4061  00203C  0A03               	xorlw	3	; case 2
  4062  00203E  B4D8               	btfsc	status,2,c
  4063  002040  EFE1  F00F         	goto	l4456
  4064  002044  0A01               	xorlw	1	; case 3
  4065  002046  B4D8               	btfsc	status,2,c
  4066  002048  EFE5  F00F         	goto	l4458
  4067  00204C  0A07               	xorlw	7	; case 4
  4068  00204E  B4D8               	btfsc	status,2,c
  4069  002050  EFE9  F00F         	goto	l4460
  4070  002054  0A01               	xorlw	1	; case 5
  4071  002056  B4D8               	btfsc	status,2,c
  4072  002058  EFED  F00F         	goto	l4462
  4073  00205C  0A03               	xorlw	3	; case 6
  4074  00205E  B4D8               	btfsc	status,2,c
  4075  002060  EFFE  F00F         	goto	l4468
  4076  002064  0A01               	xorlw	1	; case 7
  4077  002066  B4D8               	btfsc	status,2,c
  4078  002068  EF02  F010         	goto	l4470
  4079  00206C  EF06  F010         	goto	l4472
  4080  002070                     l4478:
  4081                           
  4082                           ;main.c: 595:     mostrarMenu();
  4083  002070  ECE0  F012         	call	_mostrarMenu	;wreg free
  4084  002074                     
  4085                           ;main.c: 596:     PIE1bits.RCIE = 1;
  4086  002074  8A9D               	bsf	157,5,c	;volatile
  4087  002076  0012               	return		;funcret
  4088  002078                     __end_of_sistemaPrincipal:
  4089                           	opt callstack 0
  4090                           
  4091 ;; *************** function _setTiempoRegar *****************
  4092 ;; Defined at:
  4093 ;;		line 434 in file "main.c"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;		None
  4096 ;; Auto vars:     Size  Location     Type
  4097 ;;  hora            1   19[COMRAM] unsigned char 
  4098 ;;  tiempoRegar     1   18[COMRAM] unsigned char 
  4099 ;; Return value:  Size  Location     Type
  4100 ;;                  1    wreg      void 
  4101 ;; Registers used:
  4102 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/0
  4105 ;;		On exit  : 0/0
  4106 ;;		Unchanged: 0/0
  4107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4108 ;;      Params:         0       0       0       0       0       0       0       0       0
  4109 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4110 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4111 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4112 ;;Total ram usage:        2 bytes
  4113 ;; Hardware stack levels used:    1
  4114 ;; Hardware stack levels required when called:    5
  4115 ;; This function calls:
  4116 ;;		_UART_printf
  4117 ;;		_escribeHorariosMemoria
  4118 ;;		_getValue
  4119 ;; This function is called by:
  4120 ;;		_sistemaPrincipal
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           
  4124                           	psect	text10
  4125  002402                     __ptext10:
  4126                           	opt callstack 0
  4127  002402                     _setTiempoRegar:
  4128                           	opt callstack 24
  4129  002402                     
  4130                           ;main.c: 436:     unsigned char hora;;main.c: 437:     unsigned char tiempoRegar;;main.c
      +                          : 439:     UART_printf("\r\n TIEMPO DE REGADO \r\n");
  4131  002402  0E5E               	movlw	low STR_14
  4132  002404  6E02               	movwf	UART_printf@cadena^0,c
  4133  002406  0E7F               	movlw	high STR_14
  4134  002408  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4135  00240A  EC97  F014         	call	_UART_printf	;wreg free
  4136                           
  4137                           ;main.c: 441:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  4138  00240E  0E03               	movlw	low STR_8
  4139  002410  6E02               	movwf	UART_printf@cadena^0,c
  4140  002412  0E7C               	movlw	high STR_8
  4141  002414  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4142  002416  EC97  F014         	call	_UART_printf	;wreg free
  4143  00241A                     
  4144                           ;main.c: 442:     hora = getValue(2);
  4145  00241A  0E00               	movlw	0
  4146  00241C  6E05               	movwf	(getValue@numCharacters+1)^0,c
  4147  00241E  0E02               	movlw	2
  4148  002420  6E04               	movwf	getValue@numCharacters^0,c
  4149  002422  EC7F  F004         	call	_getValue	;wreg free
  4150  002426  6E14               	movwf	setTiempoRegar@hora^0,c
  4151  002428                     
  4152                           ;main.c: 444:     if (hora != 'F') {
  4153  002428  0E46               	movlw	70
  4154  00242A  1814               	xorwf	setTiempoRegar@hora^0,w,c
  4155  00242C  B4D8               	btfsc	status,2,c
  4156  00242E  EF1B  F012         	goto	u3351
  4157  002432  EF1D  F012         	goto	u3350
  4158  002436                     u3351:
  4159  002436  EF50  F012         	goto	l316
  4160  00243A                     u3350:
  4161  00243A                     
  4162                           ;main.c: 446:         UART_printf("\r\n Ingrese los minutos que desee que se riegue en e
      +                          se horario ej: 15 \r\n");
  4163  00243A  0EE9               	movlw	low STR_16
  4164  00243C  6E02               	movwf	UART_printf@cadena^0,c
  4165  00243E  0E79               	movlw	high STR_16
  4166  002440  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4167  002442  EC97  F014         	call	_UART_printf	;wreg free
  4168  002446                     
  4169                           ;main.c: 447:         tiempoRegar = getValue(2);
  4170  002446  0E00               	movlw	0
  4171  002448  6E05               	movwf	(getValue@numCharacters+1)^0,c
  4172  00244A  0E02               	movlw	2
  4173  00244C  6E04               	movwf	getValue@numCharacters^0,c
  4174  00244E  EC7F  F004         	call	_getValue	;wreg free
  4175  002452  6E13               	movwf	setTiempoRegar@tiempoRegar^0,c
  4176  002454                     
  4177                           ;main.c: 449:         if (tiempoRegar != 'F') {
  4178  002454  0E46               	movlw	70
  4179  002456  1813               	xorwf	setTiempoRegar@tiempoRegar^0,w,c
  4180  002458  B4D8               	btfsc	status,2,c
  4181  00245A  EF31  F012         	goto	u3361
  4182  00245E  EF33  F012         	goto	u3360
  4183  002462                     u3361:
  4184  002462  EF50  F012         	goto	l316
  4185  002466                     u3360:
  4186  002466                     
  4187                           ;main.c: 453:             UART_printf("\r\n Minutos de riego establecidos! \r\n");
  4188  002466  0E42               	movlw	low STR_17
  4189  002468  6E02               	movwf	UART_printf@cadena^0,c
  4190  00246A  0E7D               	movlw	high STR_17
  4191  00246C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4192  00246E  EC97  F014         	call	_UART_printf	;wreg free
  4193  002472                     
  4194                           ;main.c: 455:             horarios[hora].tiempoRegar = tiempoRegar;
  4195  002472  5014               	movf	setTiempoRegar@hora^0,w,c
  4196  002474  0D0C               	mullw	12
  4197  002476  0EB5               	movlw	low (_horarios+11)
  4198  002478  24F3               	addwf	243,w,c
  4199  00247A  6ED9               	movwf	fsr2l,c
  4200  00247C  0E01               	movlw	high (_horarios+11)
  4201  00247E  20F4               	addwfc	prodh,w,c
  4202  002480  6EDA               	movwf	fsr2h,c
  4203  002482  C013  FFDF         	movff	setTiempoRegar@tiempoRegar,indf2
  4204  002486                     
  4205                           ;main.c: 456:             minutosRegar = horarios[hora].tiempoRegar;
  4206  002486  5014               	movf	setTiempoRegar@hora^0,w,c
  4207  002488  0D0C               	mullw	12
  4208  00248A  0EB5               	movlw	low (_horarios+11)
  4209  00248C  24F3               	addwf	243,w,c
  4210  00248E  6ED9               	movwf	fsr2l,c
  4211  002490  0E01               	movlw	high (_horarios+11)
  4212  002492  20F4               	addwfc	prodh,w,c
  4213  002494  6EDA               	movwf	fsr2h,c
  4214  002496  50DF               	movf	indf2,w,c
  4215  002498  0100               	movlb	0	; () banked
  4216  00249A  6FF6               	movwf	_minutosRegar& (0+255),b
  4217  00249C                     
  4218                           ; BSR set to: 0
  4219                           ;main.c: 458:             escribeHorariosMemoria();
  4220  00249C  ECA2  F00B         	call	_escribeHorariosMemoria	;wreg free
  4221  0024A0                     l316:
  4222  0024A0  0012               	return		;funcret
  4223  0024A2                     __end_of_setTiempoRegar:
  4224                           	opt callstack 0
  4225                           
  4226 ;; *************** function _regadoRapido *****************
  4227 ;; Defined at:
  4228 ;;		line 908 in file "main.c"
  4229 ;; Parameters:    Size  Location     Type
  4230 ;;		None
  4231 ;; Auto vars:     Size  Location     Type
  4232 ;;  areaRegar       1   17[COMRAM] unsigned char 
  4233 ;;  tiempoRegar     1   16[COMRAM] unsigned char 
  4234 ;; Return value:  Size  Location     Type
  4235 ;;                  1    wreg      void 
  4236 ;; Registers used:
  4237 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4238 ;; Tracked objects:
  4239 ;;		On entry : 0/0
  4240 ;;		On exit  : 0/0
  4241 ;;		Unchanged: 0/0
  4242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4243 ;;      Params:         0       0       0       0       0       0       0       0       0
  4244 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4245 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4246 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4247 ;;Total ram usage:        4 bytes
  4248 ;; Hardware stack levels used:    1
  4249 ;; Hardware stack levels required when called:    4
  4250 ;; This function calls:
  4251 ;;		_UART_printf
  4252 ;;		_getValue
  4253 ;; This function is called by:
  4254 ;;		_sistemaPrincipal
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258                           	psect	text11
  4259  0019C0                     __ptext11:
  4260                           	opt callstack 0
  4261  0019C0                     _regadoRapido:
  4262                           	opt callstack 25
  4263  0019C0                     
  4264                           ;main.c: 910:     unsigned char tiempoRegar;;main.c: 911:     unsigned char areaRegar;;m
      +                          ain.c: 913:     UART_printf("\r\n REGADO RAPIDO \r\n");
  4265  0019C0  0E8C               	movlw	low STR_46
  4266  0019C2  6E02               	movwf	UART_printf@cadena^0,c
  4267  0019C4  0E7F               	movlw	high STR_46
  4268  0019C6  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4269  0019C8  EC97  F014         	call	_UART_printf	;wreg free
  4270  0019CC                     
  4271                           ;main.c: 915:     if (!regando) {
  4272  0019CC  0100               	movlb	0	; () banked
  4273  0019CE  51F4               	movf	_regando& (0+255),w,b
  4274  0019D0  A4D8               	btfss	status,2,c
  4275  0019D2  EFED  F00C         	goto	u3431
  4276  0019D6  EFEF  F00C         	goto	u3430
  4277  0019DA                     u3431:
  4278  0019DA  EF74  F00D         	goto	l4348
  4279  0019DE                     u3430:
  4280  0019DE                     
  4281                           ; BSR set to: 0
  4282                           ;main.c: 916:         UART_printf("\r\n Ingrese los minutos que desee que se riegue ej: 
      +                          15 \r\n");
  4283  0019DE  0E5E               	movlw	low STR_47
  4284  0019E0  6E02               	movwf	UART_printf@cadena^0,c
  4285  0019E2  0E7B               	movlw	high STR_47
  4286  0019E4  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4287  0019E6  EC97  F014         	call	_UART_printf	;wreg free
  4288  0019EA                     
  4289                           ;main.c: 917:         tiempoRegar = getValue(2);
  4290  0019EA  0E00               	movlw	0
  4291  0019EC  6E05               	movwf	(getValue@numCharacters+1)^0,c
  4292  0019EE  0E02               	movlw	2
  4293  0019F0  6E04               	movwf	getValue@numCharacters^0,c
  4294  0019F2  EC7F  F004         	call	_getValue	;wreg free
  4295  0019F6  6E11               	movwf	regadoRapido@tiempoRegar^0,c
  4296  0019F8                     
  4297                           ;main.c: 919:         if (tiempoRegar != 'F') {
  4298  0019F8  0E46               	movlw	70
  4299  0019FA  1811               	xorwf	regadoRapido@tiempoRegar^0,w,c
  4300  0019FC  B4D8               	btfsc	status,2,c
  4301  0019FE  EF03  F00D         	goto	u3441
  4302  001A02  EF05  F00D         	goto	u3440
  4303  001A06                     u3441:
  4304  001A06  EF7A  F00D         	goto	l460
  4305  001A0A                     u3440:
  4306  001A0A                     
  4307                           ;main.c: 921:             UART_printf("\r\n Ingrese el numero de sensor del area a regar
      +                           ej: 5 \r\n");
  4308  001A0A  0E25               	movlw	low STR_48
  4309  001A0C  6E02               	movwf	UART_printf@cadena^0,c
  4310  001A0E  0E7B               	movlw	high STR_48
  4311  001A10  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4312  001A12  EC97  F014         	call	_UART_printf	;wreg free
  4313  001A16                     
  4314                           ;main.c: 922:             areaRegar = getValue(1);
  4315  001A16  0E00               	movlw	0
  4316  001A18  6E05               	movwf	(getValue@numCharacters+1)^0,c
  4317  001A1A  0E01               	movlw	1
  4318  001A1C  6E04               	movwf	getValue@numCharacters^0,c
  4319  001A1E  EC7F  F004         	call	_getValue	;wreg free
  4320  001A22  6E12               	movwf	regadoRapido@areaRegar^0,c
  4321  001A24                     
  4322                           ;main.c: 924:             if (areaRegar != 'F') {
  4323  001A24  0E46               	movlw	70
  4324  001A26  1812               	xorwf	regadoRapido@areaRegar^0,w,c
  4325  001A28  B4D8               	btfsc	status,2,c
  4326  001A2A  EF19  F00D         	goto	u3451
  4327  001A2E  EF1B  F00D         	goto	u3450
  4328  001A32                     u3451:
  4329  001A32  EF7A  F00D         	goto	l460
  4330  001A36                     u3450:
  4331  001A36                     
  4332                           ;main.c: 926:                 areaRegar--;
  4333  001A36  0612               	decf	regadoRapido@areaRegar^0,f,c
  4334                           
  4335                           ;main.c: 928:                 switch (areaRegar) {
  4336  001A38  EF36  F00D         	goto	l4340
  4337  001A3C                     l450:
  4338                           
  4339                           ;main.c: 931:                         LATDbits.LATD0 = 1;
  4340  001A3C  808C               	bsf	140,0,c	;volatile
  4341                           
  4342                           ;main.c: 932:                         break;
  4343  001A3E  EF63  F00D         	goto	l4342
  4344  001A42                     l452:
  4345                           
  4346                           ;main.c: 935:                         LATDbits.LATD1 = 1;
  4347  001A42  828C               	bsf	140,1,c	;volatile
  4348                           
  4349                           ;main.c: 936:                         break;
  4350  001A44  EF63  F00D         	goto	l4342
  4351  001A48                     l453:
  4352                           
  4353                           ;main.c: 939:                         LATDbits.LATD2 = 1;
  4354  001A48  848C               	bsf	140,2,c	;volatile
  4355                           
  4356                           ;main.c: 940:                         break;
  4357  001A4A  EF63  F00D         	goto	l4342
  4358  001A4E                     l454:
  4359                           
  4360                           ;main.c: 943:                         LATDbits.LATD3 = 1;
  4361  001A4E  868C               	bsf	140,3,c	;volatile
  4362                           
  4363                           ;main.c: 944:                         break;
  4364  001A50  EF63  F00D         	goto	l4342
  4365  001A54                     l455:
  4366                           
  4367                           ;main.c: 947:                         LATDbits.LATD4 = 1;
  4368  001A54  888C               	bsf	140,4,c	;volatile
  4369                           
  4370                           ;main.c: 948:                         break;
  4371  001A56  EF63  F00D         	goto	l4342
  4372  001A5A                     l456:
  4373                           
  4374                           ;main.c: 951:                         LATDbits.LATD5 = 1;
  4375  001A5A  8A8C               	bsf	140,5,c	;volatile
  4376                           
  4377                           ;main.c: 952:                         break;
  4378  001A5C  EF63  F00D         	goto	l4342
  4379  001A60                     l457:
  4380                           
  4381                           ;main.c: 955:                         LATDbits.LATD6 = 1;
  4382  001A60  8C8C               	bsf	140,6,c	;volatile
  4383                           
  4384                           ;main.c: 956:                         break;
  4385  001A62  EF63  F00D         	goto	l4342
  4386  001A66                     l458:
  4387                           
  4388                           ;main.c: 959:                         LATDbits.LATD7 = 1;
  4389  001A66  8E8C               	bsf	140,7,c	;volatile
  4390                           
  4391                           ;main.c: 960:                         break;
  4392  001A68  EF63  F00D         	goto	l4342
  4393  001A6C                     l4340:
  4394  001A6C  5012               	movf	regadoRapido@areaRegar^0,w,c
  4395  001A6E  6E0F               	movwf	??_regadoRapido^0,c
  4396  001A70  6A10               	clrf	(??_regadoRapido+1)^0,c
  4397                           
  4398                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4399                           ; Switch size 1, requested type "simple"
  4400                           ; Number of cases is 1, Range of values is 0 to 0
  4401                           ; switch strategies available:
  4402                           ; Name         Instructions Cycles
  4403                           ; simple_byte            4     3 (average)
  4404                           ;	Chosen strategy is simple_byte
  4405  001A72  5010               	movf	(??_regadoRapido+1)^0,w,c
  4406  001A74  0A00               	xorlw	0	; case 0
  4407  001A76  B4D8               	btfsc	status,2,c
  4408  001A78  EF40  F00D         	goto	l4792
  4409  001A7C  EF63  F00D         	goto	l4342
  4410  001A80                     l4792:
  4411                           
  4412                           ; Switch size 1, requested type "simple"
  4413                           ; Number of cases is 8, Range of values is 0 to 7
  4414                           ; switch strategies available:
  4415                           ; Name         Instructions Cycles
  4416                           ; simple_byte           25    13 (average)
  4417                           ;	Chosen strategy is simple_byte
  4418  001A80  500F               	movf	??_regadoRapido^0,w,c
  4419  001A82  0A00               	xorlw	0	; case 0
  4420  001A84  B4D8               	btfsc	status,2,c
  4421  001A86  EF1E  F00D         	goto	l450
  4422  001A8A  0A01               	xorlw	1	; case 1
  4423  001A8C  B4D8               	btfsc	status,2,c
  4424  001A8E  EF21  F00D         	goto	l452
  4425  001A92  0A03               	xorlw	3	; case 2
  4426  001A94  B4D8               	btfsc	status,2,c
  4427  001A96  EF24  F00D         	goto	l453
  4428  001A9A  0A01               	xorlw	1	; case 3
  4429  001A9C  B4D8               	btfsc	status,2,c
  4430  001A9E  EF27  F00D         	goto	l454
  4431  001AA2  0A07               	xorlw	7	; case 4
  4432  001AA4  B4D8               	btfsc	status,2,c
  4433  001AA6  EF2A  F00D         	goto	l455
  4434  001AAA  0A01               	xorlw	1	; case 5
  4435  001AAC  B4D8               	btfsc	status,2,c
  4436  001AAE  EF2D  F00D         	goto	l456
  4437  001AB2  0A03               	xorlw	3	; case 6
  4438  001AB4  B4D8               	btfsc	status,2,c
  4439  001AB6  EF30  F00D         	goto	l457
  4440  001ABA  0A01               	xorlw	1	; case 7
  4441  001ABC  B4D8               	btfsc	status,2,c
  4442  001ABE  EF33  F00D         	goto	l458
  4443  001AC2  EF63  F00D         	goto	l4342
  4444  001AC6                     l4342:
  4445                           
  4446                           ;main.c: 964:                 regando = 1;
  4447  001AC6  0E01               	movlw	1
  4448  001AC8  0100               	movlb	0	; () banked
  4449  001ACA  6FF4               	movwf	_regando& (0+255),b
  4450  001ACC                     
  4451                           ; BSR set to: 0
  4452                           ;main.c: 965:                 horarios[hora].regado = 0;
  4453  001ACC  51FC               	movf	_hora& (0+255),w,b
  4454  001ACE  0D0C               	mullw	12
  4455  001AD0  0EB4               	movlw	low (_horarios+10)
  4456  001AD2  24F3               	addwf	243,w,c
  4457  001AD4  6ED9               	movwf	fsr2l,c
  4458  001AD6  0E01               	movlw	high (_horarios+10)
  4459  001AD8  20F4               	addwfc	prodh,w,c
  4460  001ADA  6EDA               	movwf	fsr2h,c
  4461  001ADC  0E00               	movlw	0
  4462  001ADE  6EDF               	movwf	indf2,c
  4463  001AE0                     
  4464                           ; BSR set to: 0
  4465                           ;main.c: 966:                 minutosRegar = tiempoRegar;
  4466  001AE0  C011  F0F6         	movff	regadoRapido@tiempoRegar,_minutosRegar
  4467  001AE4  EF7A  F00D         	goto	l460
  4468  001AE8                     l4348:
  4469                           
  4470                           ; BSR set to: 0
  4471                           ;main.c: 973:         UART_printf("\r\n Ya se esta efectuando un riego, intentelo mas ta
      +                          rde \r\n");
  4472  001AE8  0EEB               	movlw	low STR_49
  4473  001AEA  6E02               	movwf	UART_printf@cadena^0,c
  4474  001AEC  0E7A               	movlw	high STR_49
  4475  001AEE  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4476  001AF0  EC97  F014         	call	_UART_printf	;wreg free
  4477  001AF4                     l460:
  4478  001AF4  0012               	return		;funcret
  4479  001AF6                     __end_of_regadoRapido:
  4480                           	opt callstack 0
  4481                           
  4482 ;; *************** function _mostrarMenu *****************
  4483 ;; Defined at:
  4484 ;;		line 539 in file "main.c"
  4485 ;; Parameters:    Size  Location     Type
  4486 ;;		None
  4487 ;; Auto vars:     Size  Location     Type
  4488 ;;		None
  4489 ;; Return value:  Size  Location     Type
  4490 ;;                  1    wreg      void 
  4491 ;; Registers used:
  4492 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4493 ;; Tracked objects:
  4494 ;;		On entry : 0/0
  4495 ;;		On exit  : 0/0
  4496 ;;		Unchanged: 0/0
  4497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4498 ;;      Params:         0       0       0       0       0       0       0       0       0
  4499 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4500 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4501 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4502 ;;Total ram usage:        0 bytes
  4503 ;; Hardware stack levels used:    1
  4504 ;; Hardware stack levels required when called:    3
  4505 ;; This function calls:
  4506 ;;		_UART_printf
  4507 ;; This function is called by:
  4508 ;;		_sistemaPrincipal
  4509 ;;		_sistemaRegado
  4510 ;;		_main
  4511 ;; This function uses a non-reentrant model
  4512 ;;
  4513                           
  4514                           	psect	text12
  4515  0025C0                     __ptext12:
  4516                           	opt callstack 0
  4517  0025C0                     _mostrarMenu:
  4518                           	opt callstack 26
  4519  0025C0                     
  4520                           ;main.c: 541:     UART_printf("\r\n Ingresa una opcion a Realizar: \r\n");
  4521  0025C0  0E67               	movlw	low STR_21
  4522  0025C2  6E02               	movwf	UART_printf@cadena^0,c
  4523  0025C4  0E7D               	movlw	high STR_21
  4524  0025C6  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4525  0025C8  EC97  F014         	call	_UART_printf	;wreg free
  4526                           
  4527                           ;main.c: 542:     UART_printf("\r\n 1. Fijar Hora Actual \r\n");
  4528  0025CC  0EDD               	movlw	low STR_22
  4529  0025CE  6E02               	movwf	UART_printf@cadena^0,c
  4530  0025D0  0E7E               	movlw	high STR_22
  4531  0025D2  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4532  0025D4  EC97  F014         	call	_UART_printf	;wreg free
  4533                           
  4534                           ;main.c: 543:     UART_printf("\r\n 2. Asignar Horarios para regar \r\n");
  4535  0025D8  0ED6               	movlw	low STR_23
  4536  0025DA  6E02               	movwf	UART_printf@cadena^0,c
  4537  0025DC  0E7D               	movlw	high STR_23
  4538  0025DE  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4539  0025E0  EC97  F014         	call	_UART_printf	;wreg free
  4540                           
  4541                           ;main.c: 544:     UART_printf("\r\n 3. Programar tiempo de riego en un horario \r\n");
  4542  0025E4  0E69               	movlw	low STR_24
  4543  0025E6  6E02               	movwf	UART_printf@cadena^0,c
  4544  0025E8  0E7C               	movlw	high STR_24
  4545  0025EA  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4546  0025EC  EC97  F014         	call	_UART_printf	;wreg free
  4547                           
  4548                           ;main.c: 545:     UART_printf("\r\n 4. Dame datos del sistema \r\n");
  4549  0025F0  0E61               	movlw	low STR_25
  4550  0025F2  6E02               	movwf	UART_printf@cadena^0,c
  4551  0025F4  0E7E               	movlw	high STR_25
  4552  0025F6  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4553  0025F8  EC97  F014         	call	_UART_printf	;wreg free
  4554                           
  4555                           ;main.c: 546:     UART_printf("\r\n 5. Mostrar valores sensores \r\n");
  4556  0025FC  0E1F               	movlw	low STR_26
  4557  0025FE  6E02               	movwf	UART_printf@cadena^0,c
  4558  002600  0E7E               	movlw	high STR_26
  4559  002602  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4560  002604  EC97  F014         	call	_UART_printf	;wreg free
  4561                           
  4562                           ;main.c: 547:     UART_printf("\r\n 6. Regado rapido \r\n");
  4563  002608  0E75               	movlw	low STR_27
  4564  00260A  6E02               	movwf	UART_printf@cadena^0,c
  4565  00260C  0E7F               	movlw	high STR_27
  4566  00260E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4567  002610  EC97  F014         	call	_UART_printf	;wreg free
  4568                           
  4569                           ;main.c: 548:     UART_printf("\r\n 7. Fijar Dia Actual \r\n");
  4570  002614  0E12               	movlw	low STR_28
  4571  002616  6E02               	movwf	UART_printf@cadena^0,c
  4572  002618  0E7F               	movlw	high STR_28
  4573  00261A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4574  00261C  EC97  F014         	call	_UART_printf	;wreg free
  4575                           
  4576                           ;main.c: 549:     UART_printf("\r\n Opcion:  \r");
  4577  002620  0ED3               	movlw	low STR_29
  4578  002622  6E02               	movwf	UART_printf@cadena^0,c
  4579  002624  0E7F               	movlw	high STR_29
  4580  002626  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4581  002628  EC97  F014         	call	_UART_printf	;wreg free
  4582                           
  4583                           ;main.c: 550:     UART_printf("\r\n");
  4584  00262C  0E0F               	movlw	low (STR_13+23)
  4585  00262E  6E02               	movwf	UART_printf@cadena^0,c
  4586  002630  0E7F               	movlw	high (STR_13+23)
  4587  002632  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4588  002634  EC97  F014         	call	_UART_printf	;wreg free
  4589  002638  0012               	return		;funcret
  4590  00263A                     __end_of_mostrarMenu:
  4591                           	opt callstack 0
  4592                           
  4593 ;; *************** function _mostrarDatosSensoresWIFI *****************
  4594 ;; Defined at:
  4595 ;;		line 759 in file "main.c"
  4596 ;; Parameters:    Size  Location     Type
  4597 ;;		None
  4598 ;; Auto vars:     Size  Location     Type
  4599 ;;  i               2  102[BANK1 ] int 
  4600 ;;  buffer         50   50[BANK1 ] unsigned char [50]
  4601 ;;  bufferSensor   50    0[BANK1 ] unsigned char [50]
  4602 ;;  humedad         1  101[BANK1 ] unsigned char 
  4603 ;;  temperatura     1  100[BANK1 ] unsigned char 
  4604 ;; Return value:  Size  Location     Type
  4605 ;;                  1    wreg      void 
  4606 ;; Registers used:
  4607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4608 ;; Tracked objects:
  4609 ;;		On entry : 0/0
  4610 ;;		On exit  : 0/0
  4611 ;;		Unchanged: 0/0
  4612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4613 ;;      Params:         0       0       0       0       0       0       0       0       0
  4614 ;;      Locals:         0       0     104       0       0       0       0       0       0
  4615 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4616 ;;      Totals:         0       1     104       0       0       0       0       0       0
  4617 ;;Total ram usage:      105 bytes
  4618 ;; Hardware stack levels used:    1
  4619 ;; Hardware stack levels required when called:   10
  4620 ;; This function calls:
  4621 ;;		_UART_printf
  4622 ;;		_UART_write
  4623 ;;		_dameTemperaturaHumedad
  4624 ;;		_lecturaWifi
  4625 ;;		_sprintf
  4626 ;; This function is called by:
  4627 ;;		_sistemaPrincipal
  4628 ;; This function uses a non-reentrant model
  4629 ;;
  4630                           
  4631                           	psect	text13
  4632  001C02                     __ptext13:
  4633                           	opt callstack 0
  4634  001C02                     _mostrarDatosSensoresWIFI:
  4635                           	opt callstack 19
  4636  001C02                     
  4637                           ;main.c: 762:     char buffer[50];;main.c: 763:     char bufferSensor[50];;main.c: 764: 
      +                              unsigned char temperatura, humedad;;main.c: 766:     dameTemperaturaHumedad(&humedad
      +                          , &temperatura);
  4638  001C02  0E65               	movlw	low mostrarDatosSensoresWIFI@humedad
  4639  001C04  6E04               	movwf	dameTemperaturaHumedad@Humedad^0,c
  4640  001C06  0E01               	movlw	high mostrarDatosSensoresWIFI@humedad
  4641  001C08  6E05               	movwf	(dameTemperaturaHumedad@Humedad+1)^0,c
  4642  001C0A  0E64               	movlw	low mostrarDatosSensoresWIFI@temperatura
  4643  001C0C  6E06               	movwf	dameTemperaturaHumedad@Temperatura^0,c
  4644  001C0E  0E01               	movlw	high mostrarDatosSensoresWIFI@temperatura
  4645  001C10  6E07               	movwf	(dameTemperaturaHumedad@Temperatura+1)^0,c
  4646  001C12  ECAF  F011         	call	_dameTemperaturaHumedad	;wreg free
  4647  001C16                     
  4648                           ;main.c: 768:     UART_write('I');
  4649  001C16  0E49               	movlw	73
  4650  001C18  ECB0  F017         	call	_UART_write
  4651  001C1C                     
  4652                           ;main.c: 771:     sprintf(buffer, "\r\n\nLa Humedad Ambiente es: %d\r\n", humedad);
  4653  001C1C  0E32               	movlw	low mostrarDatosSensoresWIFI@buffer
  4654  001C1E  0100               	movlb	0	; () banked
  4655  001C20  6F60               	movwf	sprintf@s& (0+255),b
  4656  001C22  0E01               	movlw	high mostrarDatosSensoresWIFI@buffer
  4657  001C24  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4658  001C26  0E81               	movlw	low STR_36
  4659  001C28  6F62               	movwf	sprintf@fmt& (0+255),b
  4660  001C2A  0E7E               	movlw	high STR_36
  4661  001C2C  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4662  001C2E  C165  F064         	movff	mostrarDatosSensoresWIFI@humedad,?_sprintf+4
  4663  001C32  6B65               	clrf	(?_sprintf+5)& (0+255),b
  4664  001C34  EC7D  F015         	call	_sprintf	;wreg free
  4665  001C38                     
  4666                           ;main.c: 772:     UART_printf(buffer);
  4667  001C38  0E32               	movlw	low mostrarDatosSensoresWIFI@buffer
  4668  001C3A  6E02               	movwf	UART_printf@cadena^0,c
  4669  001C3C  0E01               	movlw	high mostrarDatosSensoresWIFI@buffer
  4670  001C3E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4671  001C40  EC97  F014         	call	_UART_printf	;wreg free
  4672  001C44                     
  4673                           ;main.c: 773:     sprintf(buffer, "\r\n\nLa Temperatura es: %d C\r\n", temperatura);
  4674  001C44  0E32               	movlw	low mostrarDatosSensoresWIFI@buffer
  4675  001C46  0100               	movlb	0	; () banked
  4676  001C48  6F60               	movwf	sprintf@s& (0+255),b
  4677  001C4A  0E01               	movlw	high mostrarDatosSensoresWIFI@buffer
  4678  001C4C  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4679  001C4E  0EC0               	movlw	low STR_37
  4680  001C50  6F62               	movwf	sprintf@fmt& (0+255),b
  4681  001C52  0E7E               	movlw	high STR_37
  4682  001C54  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4683  001C56  C164  F064         	movff	mostrarDatosSensoresWIFI@temperatura,?_sprintf+4
  4684  001C5A  6B65               	clrf	(?_sprintf+5)& (0+255),b
  4685  001C5C  EC7D  F015         	call	_sprintf	;wreg free
  4686  001C60                     
  4687                           ;main.c: 774:     UART_printf(buffer);
  4688  001C60  0E32               	movlw	low mostrarDatosSensoresWIFI@buffer
  4689  001C62  6E02               	movwf	UART_printf@cadena^0,c
  4690  001C64  0E01               	movlw	high mostrarDatosSensoresWIFI@buffer
  4691  001C66  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4692  001C68  EC97  F014         	call	_UART_printf	;wreg free
  4693  001C6C                     
  4694                           ;main.c: 776:     lecturaWifi();
  4695  001C6C  EC84  F00E         	call	_lecturaWifi	;wreg free
  4696  001C70                     
  4697                           ;main.c: 778:     if (peticionLecturaSensores) {
  4698  001C70  0100               	movlb	0	; () banked
  4699  001C72  51F3               	movf	_peticionLecturaSensores& (0+255),w,b
  4700  001C74  B4D8               	btfsc	status,2,c
  4701  001C76  EF3F  F00E         	goto	u3401
  4702  001C7A  EF41  F00E         	goto	u3400
  4703  001C7E                     u3401:
  4704  001C7E  EF80  F00E         	goto	l4288
  4705  001C82                     u3400:
  4706  001C82                     
  4707                           ; BSR set to: 0
  4708                           ;main.c: 780:         for (int i = 0; i < 3; i++) {
  4709  001C82  0E00               	movlw	0
  4710  001C84  0101               	movlb	1	; () banked
  4711  001C86  6F67               	movwf	(mostrarDatosSensoresWIFI@i+1)& (0+255),b
  4712  001C88  0E00               	movlw	0
  4713  001C8A  6F66               	movwf	mostrarDatosSensoresWIFI@i& (0+255),b
  4714  001C8C                     l4280:
  4715                           
  4716                           ; BSR set to: 1
  4717                           ;main.c: 782:             sprintf(bufferSensor, "\r\n\nPorcentaje Humedad del sensor %d:
      +                           %d %c\r\n"
  4718  001C8C  0E00               	movlw	low mostrarDatosSensoresWIFI@bufferSensor
  4719  001C8E  0100               	movlb	0	; () banked
  4720  001C90  6F60               	movwf	sprintf@s& (0+255),b
  4721  001C92  0E01               	movlw	high mostrarDatosSensoresWIFI@bufferSensor
  4722  001C94  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4723  001C96  0E9A               	movlw	low STR_38
  4724  001C98  6F62               	movwf	sprintf@fmt& (0+255),b
  4725  001C9A  0E7C               	movlw	high STR_38
  4726  001C9C  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4727  001C9E  C166  F064         	movff	mostrarDatosSensoresWIFI@i,?_sprintf+4
  4728  001CA2  C167  F065         	movff	mostrarDatosSensoresWIFI@i+1,?_sprintf+5
  4729  001CA6  90D8               	bcf	status,0,c
  4730  001CA8  0101               	movlb	1	; () banked
  4731  001CAA  3566               	rlcf	mostrarDatosSensoresWIFI@i& (0+255),w,b
  4732  001CAC  6ED9               	movwf	fsr2l,c
  4733  001CAE  3567               	rlcf	(mostrarDatosSensoresWIFI@i+1)& (0+255),w,b
  4734  001CB0  6EDA               	movwf	fsr2h,c
  4735  001CB2  0E68               	movlw	low _sensores
  4736  001CB4  26D9               	addwf	fsr2l,f,c
  4737  001CB6  0E01               	movlw	high _sensores
  4738  001CB8  22DA               	addwfc	fsr2h,f,c
  4739  001CBA  50DF               	movf	indf2,w,c
  4740  001CBC  0100               	movlb	0	; () banked
  4741  001CBE  6FAC               	movwf	??_mostrarDatosSensoresWIFI& (0+255),b
  4742  001CC0  51AC               	movf	??_mostrarDatosSensoresWIFI& (0+255),w,b
  4743  001CC2  6F66               	movwf	(?_sprintf+6)& (0+255),b
  4744  001CC4  6B67               	clrf	(?_sprintf+7)& (0+255),b
  4745  001CC6  0E00               	movlw	0
  4746  001CC8  6F69               	movwf	(?_sprintf+9)& (0+255),b
  4747  001CCA  0E25               	movlw	37
  4748  001CCC  6F68               	movwf	(?_sprintf+8)& (0+255),b
  4749  001CCE  EC7D  F015         	call	_sprintf	;wreg free
  4750  001CD2                     
  4751                           ;main.c: 784:             UART_printf(bufferSensor);
  4752  001CD2  0E00               	movlw	low mostrarDatosSensoresWIFI@bufferSensor
  4753  001CD4  6E02               	movwf	UART_printf@cadena^0,c
  4754  001CD6  0E01               	movlw	high mostrarDatosSensoresWIFI@bufferSensor
  4755  001CD8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4756  001CDA  EC97  F014         	call	_UART_printf	;wreg free
  4757  001CDE                     
  4758                           ;main.c: 786:         }
  4759  001CDE  0101               	movlb	1	; () banked
  4760  001CE0  4B66               	infsnz	mostrarDatosSensoresWIFI@i& (0+255),f,b
  4761  001CE2  2B67               	incf	(mostrarDatosSensoresWIFI@i+1)& (0+255),f,b
  4762  001CE4                     
  4763                           ; BSR set to: 1
  4764  001CE4  BF67               	btfsc	(mostrarDatosSensoresWIFI@i+1)& (0+255),7,b
  4765  001CE6  EF7E  F00E         	goto	u3411
  4766  001CEA  5167               	movf	(mostrarDatosSensoresWIFI@i+1)& (0+255),w,b
  4767  001CEC  E109               	bnz	u3410
  4768  001CEE  0E03               	movlw	3
  4769  001CF0  5D66               	subwf	mostrarDatosSensoresWIFI@i& (0+255),w,b
  4770  001CF2  A0D8               	btfss	status,0,c
  4771  001CF4  EF7E  F00E         	goto	u3411
  4772  001CF8  EF80  F00E         	goto	u3410
  4773  001CFC                     u3411:
  4774  001CFC  EF46  F00E         	goto	l4280
  4775  001D00                     u3410:
  4776  001D00                     l4288:
  4777                           
  4778                           ;main.c: 790:     UART_write('I');
  4779  001D00  0E49               	movlw	73
  4780  001D02  ECB0  F017         	call	_UART_write
  4781  001D06  0012               	return		;funcret
  4782  001D08                     __end_of_mostrarDatosSensoresWIFI:
  4783                           	opt callstack 0
  4784                           
  4785 ;; *************** function _lecturaWifi *****************
  4786 ;; Defined at:
  4787 ;;		line 487 in file "main.c"
  4788 ;; Parameters:    Size  Location     Type
  4789 ;;		None
  4790 ;; Auto vars:     Size  Location     Type
  4791 ;;  i               2   74[BANK0 ] int 
  4792 ;;  buffer         50   22[BANK0 ] unsigned char [50]
  4793 ;;  humedadMedid    1   73[BANK0 ] unsigned char 
  4794 ;;  Rx              1   72[BANK0 ] unsigned char 
  4795 ;; Return value:  Size  Location     Type
  4796 ;;                  1    wreg      void 
  4797 ;; Registers used:
  4798 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4799 ;; Tracked objects:
  4800 ;;		On entry : 0/0
  4801 ;;		On exit  : 0/0
  4802 ;;		Unchanged: 0/0
  4803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4804 ;;      Params:         0       0       0       0       0       0       0       0       0
  4805 ;;      Locals:         0      54       0       0       0       0       0       0       0
  4806 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4807 ;;      Totals:         0      54       0       0       0       0       0       0       0
  4808 ;;Total ram usage:       54 bytes
  4809 ;; Hardware stack levels used:    1
  4810 ;; Hardware stack levels required when called:    9
  4811 ;; This function calls:
  4812 ;;		_UART_printf
  4813 ;;		_UART_read
  4814 ;;		_UART_write
  4815 ;;		_getValue
  4816 ;;		_restablecerDatosSensor
  4817 ;;		_sprintf
  4818 ;; This function is called by:
  4819 ;;		_sistemaRegado
  4820 ;;		_mostrarDatosSensoresWIFI
  4821 ;; This function uses a non-reentrant model
  4822 ;;
  4823                           
  4824                           	psect	text14
  4825  001D08                     __ptext14:
  4826                           	opt callstack 0
  4827  001D08                     _lecturaWifi:
  4828                           	opt callstack 20
  4829  001D08                     
  4830                           ;main.c: 489:     PIE1bits.RCIE = 0;
  4831  001D08  9A9D               	bcf	157,5,c	;volatile
  4832  001D0A                     
  4833                           ;main.c: 492:     char buffer[50];;main.c: 494:     restablecerDatosSensor();
  4834  001D0A  ECCF  F015         	call	_restablecerDatosSensor	;wreg free
  4835  001D0E                     
  4836                           ;main.c: 496:     UART_write('R');
  4837  001D0E  0E52               	movlw	82
  4838  001D10  ECB0  F017         	call	_UART_write
  4839  001D14                     
  4840                           ;main.c: 498:     UART_printf("\r\nSolicitando Muestreo de sensores\r\n\n");
  4841  001D14  0E1C               	movlw	low STR_18
  4842  001D16  6E02               	movwf	UART_printf@cadena^0,c
  4843  001D18  0E7D               	movlw	high STR_18
  4844  001D1A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4845  001D1C  EC97  F014         	call	_UART_printf	;wreg free
  4846  001D20                     
  4847                           ;main.c: 500:     Rx = UART_read();
  4848  001D20  EC22  F015         	call	_UART_read	;wreg free
  4849  001D24  0100               	movlb	0	; () banked
  4850  001D26  6FA8               	movwf	lecturaWifi@Rx& (0+255),b
  4851  001D28                     
  4852                           ; BSR set to: 0
  4853                           ;main.c: 502:     if (Rx == 'O') {
  4854  001D28  0E4F               	movlw	79
  4855  001D2A  19A8               	xorwf	lecturaWifi@Rx& (0+255),w,b
  4856  001D2C  A4D8               	btfss	status,2,c
  4857  001D2E  EF9B  F00E         	goto	u3111
  4858  001D32  EF9D  F00E         	goto	u3110
  4859  001D36                     u3111:
  4860  001D36  EFF8  F00E         	goto	l4014
  4861  001D3A                     u3110:
  4862  001D3A                     
  4863                           ; BSR set to: 0
  4864                           ;main.c: 504:         peticionLecturaSensores = 1;
  4865  001D3A  0E01               	movlw	1
  4866  001D3C  6FF3               	movwf	_peticionLecturaSensores& (0+255),b
  4867                           
  4868                           ;main.c: 506:         for (int i = 0; i < 3; i++) {
  4869  001D3E  0E00               	movlw	0
  4870  001D40  6FAB               	movwf	(lecturaWifi@i+1)& (0+255),b
  4871  001D42  0E00               	movlw	0
  4872  001D44  6FAA               	movwf	lecturaWifi@i& (0+255),b
  4873  001D46                     l3996:
  4874                           
  4875                           ; BSR set to: 0
  4876                           ;main.c: 508:             sprintf(buffer, "\r\nIngrese el porcentaje de humedad del sens
      +                          or %d\r\n", i);
  4877  001D46  0E76               	movlw	low lecturaWifi@buffer
  4878  001D48  6F60               	movwf	sprintf@s& (0+255),b
  4879  001D4A  0E00               	movlw	high lecturaWifi@buffer
  4880  001D4C  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4881  001D4E  0E36               	movlw	low STR_19
  4882  001D50  6F62               	movwf	sprintf@fmt& (0+255),b
  4883  001D52  0E7C               	movlw	high STR_19
  4884  001D54  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4885  001D56  C0AA  F064         	movff	lecturaWifi@i,?_sprintf+4
  4886  001D5A  C0AB  F065         	movff	lecturaWifi@i+1,?_sprintf+5
  4887  001D5E  EC7D  F015         	call	_sprintf	;wreg free
  4888  001D62                     
  4889                           ;main.c: 509:             UART_printf(buffer);
  4890  001D62  0E76               	movlw	low lecturaWifi@buffer
  4891  001D64  6E02               	movwf	UART_printf@cadena^0,c
  4892  001D66  0E00               	movlw	high lecturaWifi@buffer
  4893  001D68  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4894  001D6A  EC97  F014         	call	_UART_printf	;wreg free
  4895  001D6E                     
  4896                           ;main.c: 511:             humedadMedida = getValue(3);
  4897  001D6E  0E00               	movlw	0
  4898  001D70  6E05               	movwf	(getValue@numCharacters+1)^0,c
  4899  001D72  0E03               	movlw	3
  4900  001D74  6E04               	movwf	getValue@numCharacters^0,c
  4901  001D76  EC7F  F004         	call	_getValue	;wreg free
  4902  001D7A  0100               	movlb	0	; () banked
  4903  001D7C  6FA9               	movwf	lecturaWifi@humedadMedida& (0+255),b
  4904  001D7E                     
  4905                           ; BSR set to: 0
  4906                           ;main.c: 513:             if (humedadMedida != 'F')
  4907  001D7E  0E46               	movlw	70
  4908  001D80  19A9               	xorwf	lecturaWifi@humedadMedida& (0+255),w,b
  4909  001D82  B4D8               	btfsc	status,2,c
  4910  001D84  EFC6  F00E         	goto	u3121
  4911  001D88  EFC8  F00E         	goto	u3120
  4912  001D8C                     u3121:
  4913  001D8C  EFD5  F00E         	goto	l4006
  4914  001D90                     u3120:
  4915  001D90                     
  4916                           ; BSR set to: 0
  4917                           ;main.c: 514:                 sensores[i].porcientoHumedad = humedadMedida;
  4918  001D90  90D8               	bcf	status,0,c
  4919  001D92  35AA               	rlcf	lecturaWifi@i& (0+255),w,b
  4920  001D94  6ED9               	movwf	fsr2l,c
  4921  001D96  35AB               	rlcf	(lecturaWifi@i+1)& (0+255),w,b
  4922  001D98  6EDA               	movwf	fsr2h,c
  4923  001D9A  0E68               	movlw	low _sensores
  4924  001D9C  26D9               	addwf	fsr2l,f,c
  4925  001D9E  0E01               	movlw	high _sensores
  4926  001DA0  22DA               	addwfc	fsr2h,f,c
  4927  001DA2  C0A9  FFDF         	movff	lecturaWifi@humedadMedida,indf2
  4928  001DA6  EFE0  F00E         	goto	l4008
  4929  001DAA                     l4006:
  4930                           
  4931                           ; BSR set to: 0
  4932                           ;main.c: 516:                 sensores[i].porcientoHumedad = 100;
  4933  001DAA  90D8               	bcf	status,0,c
  4934  001DAC  35AA               	rlcf	lecturaWifi@i& (0+255),w,b
  4935  001DAE  6ED9               	movwf	fsr2l,c
  4936  001DB0  35AB               	rlcf	(lecturaWifi@i+1)& (0+255),w,b
  4937  001DB2  6EDA               	movwf	fsr2h,c
  4938  001DB4  0E68               	movlw	low _sensores
  4939  001DB6  26D9               	addwf	fsr2l,f,c
  4940  001DB8  0E01               	movlw	high _sensores
  4941  001DBA  22DA               	addwfc	fsr2h,f,c
  4942  001DBC  0E64               	movlw	100
  4943  001DBE  6EDF               	movwf	indf2,c
  4944  001DC0                     l4008:
  4945                           
  4946                           ; BSR set to: 0
  4947                           ;main.c: 518:         }
  4948  001DC0  4BAA               	infsnz	lecturaWifi@i& (0+255),f,b
  4949  001DC2  2BAB               	incf	(lecturaWifi@i+1)& (0+255),f,b
  4950  001DC4                     
  4951                           ; BSR set to: 0
  4952  001DC4  BFAB               	btfsc	(lecturaWifi@i+1)& (0+255),7,b
  4953  001DC6  EFEE  F00E         	goto	u3131
  4954  001DCA  51AB               	movf	(lecturaWifi@i+1)& (0+255),w,b
  4955  001DCC  E109               	bnz	u3130
  4956  001DCE  0E03               	movlw	3
  4957  001DD0  5DAA               	subwf	lecturaWifi@i& (0+255),w,b
  4958  001DD2  A0D8               	btfss	status,0,c
  4959  001DD4  EFEE  F00E         	goto	u3131
  4960  001DD8  EFF0  F00E         	goto	u3130
  4961  001DDC                     u3131:
  4962  001DDC  EFA3  F00E         	goto	l3996
  4963  001DE0                     u3130:
  4964  001DE0                     
  4965                           ; BSR set to: 0
  4966                           ;main.c: 520:         UART_printf("\r\nSensores Leidos con Exito!\r\n\n");
  4967  001DE0  0E41               	movlw	low STR_20
  4968  001DE2  6E02               	movwf	UART_printf@cadena^0,c
  4969  001DE4  0E7E               	movlw	high STR_20
  4970  001DE6  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4971  001DE8  EC97  F014         	call	_UART_printf	;wreg free
  4972                           
  4973                           ;main.c: 522:     } else {
  4974  001DEC  EFFA  F00E         	goto	l4016
  4975  001DF0                     l4014:
  4976                           
  4977                           ; BSR set to: 0
  4978                           ;main.c: 523:         peticionLecturaSensores = 0;
  4979  001DF0  0E00               	movlw	0
  4980  001DF2  6FF3               	movwf	_peticionLecturaSensores& (0+255),b
  4981  001DF4                     l4016:
  4982                           
  4983                           ;main.c: 526:     PIE1bits.RCIE = 1;
  4984  001DF4  8A9D               	bsf	157,5,c	;volatile
  4985  001DF6  0012               	return		;funcret
  4986  001DF8                     __end_of_lecturaWifi:
  4987                           	opt callstack 0
  4988                           
  4989 ;; *************** function _restablecerDatosSensor *****************
  4990 ;; Defined at:
  4991 ;;		line 482 in file "main.c"
  4992 ;; Parameters:    Size  Location     Type
  4993 ;;		None
  4994 ;; Auto vars:     Size  Location     Type
  4995 ;;  i               2    4[COMRAM] int 
  4996 ;; Return value:  Size  Location     Type
  4997 ;;                  1    wreg      void 
  4998 ;; Registers used:
  4999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5000 ;; Tracked objects:
  5001 ;;		On entry : 0/0
  5002 ;;		On exit  : 0/0
  5003 ;;		Unchanged: 0/0
  5004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5005 ;;      Params:         0       0       0       0       0       0       0       0       0
  5006 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5007 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5008 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5009 ;;Total ram usage:        2 bytes
  5010 ;; Hardware stack levels used:    1
  5011 ;; Hardware stack levels required when called:    2
  5012 ;; This function calls:
  5013 ;;		_constructorSensor
  5014 ;; This function is called by:
  5015 ;;		_lecturaWifi
  5016 ;;		_main
  5017 ;; This function uses a non-reentrant model
  5018 ;;
  5019                           
  5020                           	psect	text15
  5021  002B9E                     __ptext15:
  5022                           	opt callstack 0
  5023  002B9E                     _restablecerDatosSensor:
  5024                           	opt callstack 26
  5025  002B9E                     
  5026                           ;main.c: 483:     for (int i = 0; i < 3; i++)
  5027  002B9E  0E00               	movlw	0
  5028  002BA0  6E06               	movwf	(restablecerDatosSensor@i+1)^0,c
  5029  002BA2  0E00               	movlw	0
  5030  002BA4  6E05               	movwf	restablecerDatosSensor@i^0,c
  5031  002BA6                     l3814:
  5032                           
  5033                           ;main.c: 484:         constructorSensor(sensores[i], 0, i);
  5034  002BA6  90D8               	bcf	status,0,c
  5035  002BA8  3405               	rlcf	restablecerDatosSensor@i^0,w,c
  5036  002BAA  6ED9               	movwf	fsr2l,c
  5037  002BAC  3406               	rlcf	(restablecerDatosSensor@i+1)^0,w,c
  5038  002BAE  6EDA               	movwf	fsr2h,c
  5039  002BB0  0E68               	movlw	low _sensores
  5040  002BB2  26D9               	addwf	fsr2l,f,c
  5041  002BB4  0E01               	movlw	high _sensores
  5042  002BB6  22DA               	addwfc	fsr2h,f,c
  5043  002BB8  CFDE F001          	movff	postinc2,constructorSensor@s
  5044  002BBC  CFDD F002          	movff	postdec2,constructorSensor@s+1
  5045  002BC0  0E00               	movlw	0
  5046  002BC2  6E03               	movwf	constructorSensor@porcientoHumedad^0,c
  5047  002BC4  C005  F004         	movff	restablecerDatosSensor@i,constructorSensor@pin
  5048  002BC8  ECDA  F017         	call	_constructorSensor	;wreg free
  5049  002BCC  4A05               	infsnz	restablecerDatosSensor@i^0,f,c
  5050  002BCE  2A06               	incf	(restablecerDatosSensor@i+1)^0,f,c
  5051  002BD0  BE06               	btfsc	(restablecerDatosSensor@i+1)^0,7,c
  5052  002BD2  EFF4  F015         	goto	u2931
  5053  002BD6  5006               	movf	(restablecerDatosSensor@i+1)^0,w,c
  5054  002BD8  E109               	bnz	u2930
  5055  002BDA  0E03               	movlw	3
  5056  002BDC  5C05               	subwf	restablecerDatosSensor@i^0,w,c
  5057  002BDE  A0D8               	btfss	status,0,c
  5058  002BE0  EFF4  F015         	goto	u2931
  5059  002BE4  EFF6  F015         	goto	u2930
  5060  002BE8                     u2931:
  5061  002BE8  EFD3  F015         	goto	l3814
  5062  002BEC                     u2930:
  5063  002BEC  0012               	return		;funcret
  5064  002BEE                     __end_of_restablecerDatosSensor:
  5065                           	opt callstack 0
  5066                           
  5067 ;; *************** function _constructorSensor *****************
  5068 ;; Defined at:
  5069 ;;		line 133 in file "main.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;  s               2    0[COMRAM] struct .
  5072 ;;  porcientoHum    1    2[COMRAM] unsigned char 
  5073 ;;  pin             1    3[COMRAM] unsigned char 
  5074 ;; Auto vars:     Size  Location     Type
  5075 ;;		None
  5076 ;; Return value:  Size  Location     Type
  5077 ;;                  1    wreg      void 
  5078 ;; Registers used:
  5079 ;;		None
  5080 ;; Tracked objects:
  5081 ;;		On entry : 0/0
  5082 ;;		On exit  : 0/0
  5083 ;;		Unchanged: 0/0
  5084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5085 ;;      Params:         4       0       0       0       0       0       0       0       0
  5086 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5087 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5088 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5089 ;;Total ram usage:        4 bytes
  5090 ;; Hardware stack levels used:    1
  5091 ;; Hardware stack levels required when called:    1
  5092 ;; This function calls:
  5093 ;;		Nothing
  5094 ;; This function is called by:
  5095 ;;		_restablecerDatosSensor
  5096 ;; This function uses a non-reentrant model
  5097 ;;
  5098                           
  5099                           	psect	text16
  5100  002FB4                     __ptext16:
  5101                           	opt callstack 0
  5102  002FB4                     _constructorSensor:
  5103                           	opt callstack 26
  5104  002FB4                     
  5105                           ;main.c: 134:     s.porcientoHumedad = porcientoHumedad;
  5106  002FB4  C003  F001         	movff	constructorSensor@porcientoHumedad,constructorSensor@s
  5107                           
  5108                           ;main.c: 135:     s.pinSensor = pin;
  5109  002FB8  C004  F002         	movff	constructorSensor@pin,constructorSensor@s+1
  5110  002FBC  0012               	return		;funcret
  5111  002FBE                     __end_of_constructorSensor:
  5112                           	opt callstack 0
  5113                           
  5114 ;; *************** function _mostrarDatosSensores *****************
  5115 ;; Defined at:
  5116 ;;		line 730 in file "main.c"
  5117 ;; Parameters:    Size  Location     Type
  5118 ;;		None
  5119 ;; Auto vars:     Size  Location     Type
  5120 ;;  i               2   75[BANK0 ] int 
  5121 ;;  buffer         50   23[BANK0 ] unsigned char [50]
  5122 ;;  humedad         1   74[BANK0 ] unsigned char 
  5123 ;;  temperatura     1   73[BANK0 ] unsigned char 
  5124 ;; Return value:  Size  Location     Type
  5125 ;;                  1    wreg      void 
  5126 ;; Registers used:
  5127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5128 ;; Tracked objects:
  5129 ;;		On entry : 0/0
  5130 ;;		On exit  : 0/0
  5131 ;;		Unchanged: 0/0
  5132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5133 ;;      Params:         0       0       0       0       0       0       0       0       0
  5134 ;;      Locals:         0      54       0       0       0       0       0       0       0
  5135 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5136 ;;      Totals:         0      55       0       0       0       0       0       0       0
  5137 ;;Total ram usage:       55 bytes
  5138 ;; Hardware stack levels used:    1
  5139 ;; Hardware stack levels required when called:    9
  5140 ;; This function calls:
  5141 ;;		_UART_printf
  5142 ;;		_UART_write
  5143 ;;		_dameTemperaturaHumedad
  5144 ;;		_lecturaAnalogaSensores
  5145 ;;		_sprintf
  5146 ;; This function is called by:
  5147 ;;		_sistemaPrincipal
  5148 ;; This function uses a non-reentrant model
  5149 ;;
  5150                           
  5151                           	psect	text17
  5152  001DF8                     __ptext17:
  5153                           	opt callstack 0
  5154  001DF8                     _mostrarDatosSensores:
  5155                           	opt callstack 20
  5156  001DF8                     
  5157                           ;main.c: 732:     char buffer[50];;main.c: 733:     unsigned char temperatura, humedad;;
      +                          main.c: 735:     dameTemperaturaHumedad(&humedad, &temperatura);
  5158  001DF8  0EAA               	movlw	low mostrarDatosSensores@humedad
  5159  001DFA  6E04               	movwf	dameTemperaturaHumedad@Humedad^0,c
  5160  001DFC  0E00               	movlw	high mostrarDatosSensores@humedad
  5161  001DFE  6E05               	movwf	(dameTemperaturaHumedad@Humedad+1)^0,c
  5162  001E00  0EA9               	movlw	low mostrarDatosSensores@temperatura
  5163  001E02  6E06               	movwf	dameTemperaturaHumedad@Temperatura^0,c
  5164  001E04  0E00               	movlw	high mostrarDatosSensores@temperatura
  5165  001E06  6E07               	movwf	(dameTemperaturaHumedad@Temperatura+1)^0,c
  5166  001E08  ECAF  F011         	call	_dameTemperaturaHumedad	;wreg free
  5167  001E0C                     
  5168                           ;main.c: 737:     UART_write('I');
  5169  001E0C  0E49               	movlw	73
  5170  001E0E  ECB0  F017         	call	_UART_write
  5171  001E12                     
  5172                           ;main.c: 740:     sprintf(buffer, "\r\n\nLa Humedad Ambiente es: %d\r\n", humedad);
  5173  001E12  0E77               	movlw	low mostrarDatosSensores@buffer
  5174  001E14  0100               	movlb	0	; () banked
  5175  001E16  6F60               	movwf	sprintf@s& (0+255),b
  5176  001E18  0E00               	movlw	high mostrarDatosSensores@buffer
  5177  001E1A  6F61               	movwf	(sprintf@s+1)& (0+255),b
  5178  001E1C  0E81               	movlw	low STR_36
  5179  001E1E  6F62               	movwf	sprintf@fmt& (0+255),b
  5180  001E20  0E7E               	movlw	high STR_36
  5181  001E22  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  5182  001E24  C0AA  F064         	movff	mostrarDatosSensores@humedad,?_sprintf+4
  5183  001E28  6B65               	clrf	(?_sprintf+5)& (0+255),b
  5184  001E2A  EC7D  F015         	call	_sprintf	;wreg free
  5185  001E2E                     
  5186                           ;main.c: 741:     UART_printf(buffer);
  5187  001E2E  0E77               	movlw	low mostrarDatosSensores@buffer
  5188  001E30  6E02               	movwf	UART_printf@cadena^0,c
  5189  001E32  0E00               	movlw	high mostrarDatosSensores@buffer
  5190  001E34  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5191  001E36  EC97  F014         	call	_UART_printf	;wreg free
  5192  001E3A                     
  5193                           ;main.c: 742:     sprintf(buffer, "\r\n\nLa Temperatura es: %d C\r\n", temperatura);
  5194  001E3A  0E77               	movlw	low mostrarDatosSensores@buffer
  5195  001E3C  0100               	movlb	0	; () banked
  5196  001E3E  6F60               	movwf	sprintf@s& (0+255),b
  5197  001E40  0E00               	movlw	high mostrarDatosSensores@buffer
  5198  001E42  6F61               	movwf	(sprintf@s+1)& (0+255),b
  5199  001E44  0EC0               	movlw	low STR_37
  5200  001E46  6F62               	movwf	sprintf@fmt& (0+255),b
  5201  001E48  0E7E               	movlw	high STR_37
  5202  001E4A  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  5203  001E4C  C0A9  F064         	movff	mostrarDatosSensores@temperatura,?_sprintf+4
  5204  001E50  6B65               	clrf	(?_sprintf+5)& (0+255),b
  5205  001E52  EC7D  F015         	call	_sprintf	;wreg free
  5206  001E56                     
  5207                           ;main.c: 743:     UART_printf(buffer);
  5208  001E56  0E77               	movlw	low mostrarDatosSensores@buffer
  5209  001E58  6E02               	movwf	UART_printf@cadena^0,c
  5210  001E5A  0E00               	movlw	high mostrarDatosSensores@buffer
  5211  001E5C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5212  001E5E  EC97  F014         	call	_UART_printf	;wreg free
  5213  001E62                     
  5214                           ;main.c: 745:     lecturaAnalogaSensores();
  5215  001E62  EC59  F011         	call	_lecturaAnalogaSensores	;wreg free
  5216  001E66                     
  5217                           ;main.c: 748:     for (int i = 0; i < 3; i++) {
  5218  001E66  0E00               	movlw	0
  5219  001E68  0100               	movlb	0	; () banked
  5220  001E6A  6FAC               	movwf	(mostrarDatosSensores@i+1)& (0+255),b
  5221  001E6C  0E00               	movlw	0
  5222  001E6E  6FAB               	movwf	mostrarDatosSensores@i& (0+255),b
  5223  001E70                     l4310:
  5224                           
  5225                           ; BSR set to: 0
  5226                           ;main.c: 750:         sprintf(buffer, "\r\n\nPorcentaje Humedad del sensor %d: %d %c\r\n
      +                          "
  5227  001E70  0E77               	movlw	low mostrarDatosSensores@buffer
  5228  001E72  6F60               	movwf	sprintf@s& (0+255),b
  5229  001E74  0E00               	movlw	high mostrarDatosSensores@buffer
  5230  001E76  6F61               	movwf	(sprintf@s+1)& (0+255),b
  5231  001E78  0E9A               	movlw	low STR_38
  5232  001E7A  6F62               	movwf	sprintf@fmt& (0+255),b
  5233  001E7C  0E7C               	movlw	high STR_38
  5234  001E7E  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  5235  001E80  C0AB  F064         	movff	mostrarDatosSensores@i,?_sprintf+4
  5236  001E84  C0AC  F065         	movff	mostrarDatosSensores@i+1,?_sprintf+5
  5237  001E88  90D8               	bcf	status,0,c
  5238  001E8A  35AB               	rlcf	mostrarDatosSensores@i& (0+255),w,b
  5239  001E8C  6ED9               	movwf	fsr2l,c
  5240  001E8E  35AC               	rlcf	(mostrarDatosSensores@i+1)& (0+255),w,b
  5241  001E90  6EDA               	movwf	fsr2h,c
  5242  001E92  0E68               	movlw	low _sensores
  5243  001E94  26D9               	addwf	fsr2l,f,c
  5244  001E96  0E01               	movlw	high _sensores
  5245  001E98  22DA               	addwfc	fsr2h,f,c
  5246  001E9A  50DF               	movf	indf2,w,c
  5247  001E9C  6F76               	movwf	??_mostrarDatosSensores& (0+255),b
  5248  001E9E  5176               	movf	??_mostrarDatosSensores& (0+255),w,b
  5249  001EA0  6F66               	movwf	(?_sprintf+6)& (0+255),b
  5250  001EA2  6B67               	clrf	(?_sprintf+7)& (0+255),b
  5251  001EA4  0E00               	movlw	0
  5252  001EA6  6F69               	movwf	(?_sprintf+9)& (0+255),b
  5253  001EA8  0E25               	movlw	37
  5254  001EAA  6F68               	movwf	(?_sprintf+8)& (0+255),b
  5255  001EAC  EC7D  F015         	call	_sprintf	;wreg free
  5256  001EB0                     
  5257                           ;main.c: 752:         UART_printf(buffer);
  5258  001EB0  0E77               	movlw	low mostrarDatosSensores@buffer
  5259  001EB2  6E02               	movwf	UART_printf@cadena^0,c
  5260  001EB4  0E00               	movlw	high mostrarDatosSensores@buffer
  5261  001EB6  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5262  001EB8  EC97  F014         	call	_UART_printf	;wreg free
  5263  001EBC                     
  5264                           ;main.c: 753:     }
  5265  001EBC  0100               	movlb	0	; () banked
  5266  001EBE  4BAB               	infsnz	mostrarDatosSensores@i& (0+255),f,b
  5267  001EC0  2BAC               	incf	(mostrarDatosSensores@i+1)& (0+255),f,b
  5268  001EC2                     
  5269                           ; BSR set to: 0
  5270  001EC2  BFAC               	btfsc	(mostrarDatosSensores@i+1)& (0+255),7,b
  5271  001EC4  EF6D  F00F         	goto	u3421
  5272  001EC8  51AC               	movf	(mostrarDatosSensores@i+1)& (0+255),w,b
  5273  001ECA  E109               	bnz	u3420
  5274  001ECC  0E03               	movlw	3
  5275  001ECE  5DAB               	subwf	mostrarDatosSensores@i& (0+255),w,b
  5276  001ED0  A0D8               	btfss	status,0,c
  5277  001ED2  EF6D  F00F         	goto	u3421
  5278  001ED6  EF6F  F00F         	goto	u3420
  5279  001EDA                     u3421:
  5280  001EDA  EF38  F00F         	goto	l4310
  5281  001EDE                     u3420:
  5282  001EDE                     
  5283                           ; BSR set to: 0
  5284                           ;main.c: 755:     UART_write('I');
  5285  001EDE  0E49               	movlw	73
  5286  001EE0  ECB0  F017         	call	_UART_write
  5287  001EE4  0012               	return		;funcret
  5288  001EE6                     __end_of_mostrarDatosSensores:
  5289                           	opt callstack 0
  5290                           
  5291 ;; *************** function _lecturaAnalogaSensores *****************
  5292 ;; Defined at:
  5293 ;;		line 530 in file "main.c"
  5294 ;; Parameters:    Size  Location     Type
  5295 ;;		None
  5296 ;; Auto vars:     Size  Location     Type
  5297 ;;  i               2   47[COMRAM] int 
  5298 ;; Return value:  Size  Location     Type
  5299 ;;                  1    wreg      void 
  5300 ;; Registers used:
  5301 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5302 ;; Tracked objects:
  5303 ;;		On entry : 0/0
  5304 ;;		On exit  : 0/0
  5305 ;;		Unchanged: 0/0
  5306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5307 ;;      Params:         0       0       0       0       0       0       0       0       0
  5308 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5309 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5310 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5311 ;;Total ram usage:        3 bytes
  5312 ;; Hardware stack levels used:    1
  5313 ;; Hardware stack levels required when called:    3
  5314 ;; This function calls:
  5315 ;;		_dameHumedadSuelo
  5316 ;;		_map
  5317 ;; This function is called by:
  5318 ;;		_sistemaRegado
  5319 ;;		_mostrarDatosSensores
  5320 ;; This function uses a non-reentrant model
  5321 ;;
  5322                           
  5323                           	psect	text18
  5324  0022B2                     __ptext18:
  5325                           	opt callstack 0
  5326  0022B2                     _lecturaAnalogaSensores:
  5327                           	opt callstack 26
  5328  0022B2                     
  5329                           ;main.c: 532:     for (int i = 0; i < 3; i++) {
  5330  0022B2  0E00               	movlw	0
  5331  0022B4  6E31               	movwf	(lecturaAnalogaSensores@i+1)^0,c
  5332  0022B6  0E00               	movlw	0
  5333  0022B8  6E30               	movwf	lecturaAnalogaSensores@i^0,c
  5334  0022BA                     l4024:
  5335                           
  5336                           ;main.c: 533:         sensores[i].porcientoHumedad = map(dameHumedadSuelo(i), 0, 1023, 1
      +                          00, 0);
  5337  0022BA  90D8               	bcf	status,0,c
  5338  0022BC  3430               	rlcf	lecturaAnalogaSensores@i^0,w,c
  5339  0022BE  6ED9               	movwf	fsr2l,c
  5340  0022C0  3431               	rlcf	(lecturaAnalogaSensores@i+1)^0,w,c
  5341  0022C2  6EDA               	movwf	fsr2h,c
  5342  0022C4  0E68               	movlw	low _sensores
  5343  0022C6  26D9               	addwf	fsr2l,f,c
  5344  0022C8  0E01               	movlw	high _sensores
  5345  0022CA  22DA               	addwfc	fsr2h,f,c
  5346  0022CC  5030               	movf	lecturaAnalogaSensores@i^0,w,c
  5347  0022CE  ECF7  F015         	call	_dameHumedadSuelo
  5348  0022D2  C001  F01B         	movff	?_dameHumedadSuelo,map@x
  5349  0022D6  C002  F01C         	movff	?_dameHumedadSuelo+1,map@x+1
  5350  0022DA  0E00               	movlw	0
  5351  0022DC  BE1C               	btfsc	(map@x+1)^0,7,c
  5352  0022DE  0EFF               	movlw	-1
  5353  0022E0  6E1D               	movwf	(map@x+2)^0,c
  5354  0022E2  6E1E               	movwf	(map@x+3)^0,c
  5355  0022E4  0E00               	movlw	0
  5356  0022E6  6E1F               	movwf	map@in_min^0,c
  5357  0022E8  0E00               	movlw	0
  5358  0022EA  6E20               	movwf	(map@in_min+1)^0,c
  5359  0022EC  0E00               	movlw	0
  5360  0022EE  6E21               	movwf	(map@in_min+2)^0,c
  5361  0022F0  0E00               	movlw	0
  5362  0022F2  6E22               	movwf	(map@in_min+3)^0,c
  5363  0022F4  0EFF               	movlw	255
  5364  0022F6  6E23               	movwf	map@in_max^0,c
  5365  0022F8  0E03               	movlw	3
  5366  0022FA  6E24               	movwf	(map@in_max+1)^0,c
  5367  0022FC  0E00               	movlw	0
  5368  0022FE  6E25               	movwf	(map@in_max+2)^0,c
  5369  002300  0E00               	movlw	0
  5370  002302  6E26               	movwf	(map@in_max+3)^0,c
  5371  002304  0E64               	movlw	100
  5372  002306  6E27               	movwf	map@out_min^0,c
  5373  002308  0E00               	movlw	0
  5374  00230A  6E28               	movwf	(map@out_min+1)^0,c
  5375  00230C  0E00               	movlw	0
  5376  00230E  6E29               	movwf	(map@out_min+2)^0,c
  5377  002310  0E00               	movlw	0
  5378  002312  6E2A               	movwf	(map@out_min+3)^0,c
  5379  002314  0E00               	movlw	0
  5380  002316  6E2B               	movwf	map@out_max^0,c
  5381  002318  0E00               	movlw	0
  5382  00231A  6E2C               	movwf	(map@out_max+1)^0,c
  5383  00231C  0E00               	movlw	0
  5384  00231E  6E2D               	movwf	(map@out_max+2)^0,c
  5385  002320  0E00               	movlw	0
  5386  002322  6E2E               	movwf	(map@out_max+3)^0,c
  5387  002324  EC1D  F013         	call	_map	;wreg free
  5388  002328  501B               	movf	?_map^0,w,c
  5389  00232A  6EDF               	movwf	indf2,c
  5390  00232C                     
  5391                           ;main.c: 534:         _delay((unsigned long)((5)*(4000000/4000.0)));
  5392  00232C  0E07               	movlw	7
  5393  00232E  6E2F               	movwf	??_lecturaAnalogaSensores^0,c
  5394  002330  0E7D               	movlw	125
  5395  002332                     u3697:
  5396  002332  2EE8               	decfsz	wreg,f,c
  5397  002334  D7FE               	bra	u3697
  5398  002336  2E2F               	decfsz	??_lecturaAnalogaSensores^0,f,c
  5399  002338  D7FC               	bra	u3697
  5400  00233A  F000               	nop	
  5401  00233C                     
  5402                           ;main.c: 535:     }
  5403  00233C  4A30               	infsnz	lecturaAnalogaSensores@i^0,f,c
  5404  00233E  2A31               	incf	(lecturaAnalogaSensores@i+1)^0,f,c
  5405  002340  BE31               	btfsc	(lecturaAnalogaSensores@i+1)^0,7,c
  5406  002342  EFAC  F011         	goto	u3141
  5407  002346  5031               	movf	(lecturaAnalogaSensores@i+1)^0,w,c
  5408  002348  E109               	bnz	u3140
  5409  00234A  0E03               	movlw	3
  5410  00234C  5C30               	subwf	lecturaAnalogaSensores@i^0,w,c
  5411  00234E  A0D8               	btfss	status,0,c
  5412  002350  EFAC  F011         	goto	u3141
  5413  002354  EFAE  F011         	goto	u3140
  5414  002358                     u3141:
  5415  002358  EF5D  F011         	goto	l4024
  5416  00235C                     u3140:
  5417  00235C  0012               	return		;funcret
  5418  00235E                     __end_of_lecturaAnalogaSensores:
  5419                           	opt callstack 0
  5420                           
  5421 ;; *************** function _map *****************
  5422 ;; Defined at:
  5423 ;;		line 129 in file "main.c"
  5424 ;; Parameters:    Size  Location     Type
  5425 ;;  x               4   26[COMRAM] long 
  5426 ;;  in_min          4   30[COMRAM] long 
  5427 ;;  in_max          4   34[COMRAM] long 
  5428 ;;  out_min         4   38[COMRAM] long 
  5429 ;;  out_max         4   42[COMRAM] long 
  5430 ;; Auto vars:     Size  Location     Type
  5431 ;;		None
  5432 ;; Return value:  Size  Location     Type
  5433 ;;                  4   26[COMRAM] long 
  5434 ;; Registers used:
  5435 ;;		wreg, status,2, status,0, cstack
  5436 ;; Tracked objects:
  5437 ;;		On entry : 0/0
  5438 ;;		On exit  : 0/0
  5439 ;;		Unchanged: 0/0
  5440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5441 ;;      Params:        20       0       0       0       0       0       0       0       0
  5442 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5443 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5444 ;;      Totals:        20       0       0       0       0       0       0       0       0
  5445 ;;Total ram usage:       20 bytes
  5446 ;; Hardware stack levels used:    1
  5447 ;; Hardware stack levels required when called:    2
  5448 ;; This function calls:
  5449 ;;		___aldiv
  5450 ;;		___lmul
  5451 ;; This function is called by:
  5452 ;;		_lecturaAnalogaSensores
  5453 ;; This function uses a non-reentrant model
  5454 ;;
  5455                           
  5456                           	psect	text19
  5457  00263A                     __ptext19:
  5458                           	opt callstack 0
  5459  00263A                     _map:
  5460                           	opt callstack 26
  5461  00263A                     
  5462                           ;main.c: 130:     return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_mi
      +                          n;
  5463  00263A  501F               	movf	map@in_min^0,w,c
  5464  00263C  5C1B               	subwf	map@x^0,w,c
  5465  00263E  6E01               	movwf	___lmul@multiplier^0,c
  5466  002640  5020               	movf	(map@in_min+1)^0,w,c
  5467  002642  581C               	subwfb	(map@x+1)^0,w,c
  5468  002644  6E02               	movwf	(___lmul@multiplier+1)^0,c
  5469  002646  5021               	movf	(map@in_min+2)^0,w,c
  5470  002648  581D               	subwfb	(map@x+2)^0,w,c
  5471  00264A  6E03               	movwf	(___lmul@multiplier+2)^0,c
  5472  00264C  5022               	movf	(map@in_min+3)^0,w,c
  5473  00264E  581E               	subwfb	(map@x+3)^0,w,c
  5474  002650  6E04               	movwf	(___lmul@multiplier+3)^0,c
  5475  002652  5027               	movf	map@out_min^0,w,c
  5476  002654  5C2B               	subwf	map@out_max^0,w,c
  5477  002656  6E05               	movwf	___lmul@multiplicand^0,c
  5478  002658  5028               	movf	(map@out_min+1)^0,w,c
  5479  00265A  582C               	subwfb	(map@out_max+1)^0,w,c
  5480  00265C  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5481  00265E  5029               	movf	(map@out_min+2)^0,w,c
  5482  002660  582D               	subwfb	(map@out_max+2)^0,w,c
  5483  002662  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5484  002664  502A               	movf	(map@out_min+3)^0,w,c
  5485  002666  582E               	subwfb	(map@out_max+3)^0,w,c
  5486  002668  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5487  00266A  ECCA  F013         	call	___lmul	;wreg free
  5488  00266E  C001  F00D         	movff	?___lmul,___aldiv@dividend
  5489  002672  C002  F00E         	movff	?___lmul+1,___aldiv@dividend+1
  5490  002676  C003  F00F         	movff	?___lmul+2,___aldiv@dividend+2
  5491  00267A  C004  F010         	movff	?___lmul+3,___aldiv@dividend+3
  5492  00267E  501F               	movf	map@in_min^0,w,c
  5493  002680  5C23               	subwf	map@in_max^0,w,c
  5494  002682  6E11               	movwf	___aldiv@divisor^0,c
  5495  002684  5020               	movf	(map@in_min+1)^0,w,c
  5496  002686  5824               	subwfb	(map@in_max+1)^0,w,c
  5497  002688  6E12               	movwf	(___aldiv@divisor+1)^0,c
  5498  00268A  5021               	movf	(map@in_min+2)^0,w,c
  5499  00268C  5825               	subwfb	(map@in_max+2)^0,w,c
  5500  00268E  6E13               	movwf	(___aldiv@divisor+2)^0,c
  5501  002690  5022               	movf	(map@in_min+3)^0,w,c
  5502  002692  5826               	subwfb	(map@in_max+3)^0,w,c
  5503  002694  6E14               	movwf	(___aldiv@divisor+3)^0,c
  5504  002696  EC7B  F00D         	call	___aldiv	;wreg free
  5505  00269A  5027               	movf	map@out_min^0,w,c
  5506  00269C  240D               	addwf	?___aldiv^0,w,c
  5507  00269E  6E1B               	movwf	?_map^0,c
  5508  0026A0  5028               	movf	(map@out_min+1)^0,w,c
  5509  0026A2  200E               	addwfc	(?___aldiv+1)^0,w,c
  5510  0026A4  6E1C               	movwf	(?_map+1)^0,c
  5511  0026A6  5029               	movf	(map@out_min+2)^0,w,c
  5512  0026A8  200F               	addwfc	(?___aldiv+2)^0,w,c
  5513  0026AA  6E1D               	movwf	(?_map+2)^0,c
  5514  0026AC  502A               	movf	(map@out_min+3)^0,w,c
  5515  0026AE  2010               	addwfc	(?___aldiv+3)^0,w,c
  5516  0026B0  6E1E               	movwf	(?_map+3)^0,c
  5517  0026B2  0012               	return		;funcret
  5518  0026B4                     __end_of_map:
  5519                           	opt callstack 0
  5520                           
  5521 ;; *************** function ___lmul *****************
  5522 ;; Defined at:
  5523 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  5524 ;; Parameters:    Size  Location     Type
  5525 ;;  multiplier      4    0[COMRAM] unsigned long 
  5526 ;;  multiplicand    4    4[COMRAM] unsigned long 
  5527 ;; Auto vars:     Size  Location     Type
  5528 ;;  product         4    8[COMRAM] unsigned long 
  5529 ;; Return value:  Size  Location     Type
  5530 ;;                  4    0[COMRAM] unsigned long 
  5531 ;; Registers used:
  5532 ;;		wreg, status,2, status,0
  5533 ;; Tracked objects:
  5534 ;;		On entry : 0/0
  5535 ;;		On exit  : 0/0
  5536 ;;		Unchanged: 0/0
  5537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5538 ;;      Params:         8       0       0       0       0       0       0       0       0
  5539 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5540 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5541 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5542 ;;Total ram usage:       12 bytes
  5543 ;; Hardware stack levels used:    1
  5544 ;; Hardware stack levels required when called:    1
  5545 ;; This function calls:
  5546 ;;		Nothing
  5547 ;; This function is called by:
  5548 ;;		_map
  5549 ;; This function uses a non-reentrant model
  5550 ;;
  5551                           
  5552                           	psect	text20
  5553  002794                     __ptext20:
  5554                           	opt callstack 0
  5555  002794                     ___lmul:
  5556                           	opt callstack 26
  5557  002794  0E00               	movlw	0
  5558  002796  6E09               	movwf	___lmul@product^0,c
  5559  002798  0E00               	movlw	0
  5560  00279A  6E0A               	movwf	(___lmul@product+1)^0,c
  5561  00279C  0E00               	movlw	0
  5562  00279E  6E0B               	movwf	(___lmul@product+2)^0,c
  5563  0027A0  0E00               	movlw	0
  5564  0027A2  6E0C               	movwf	(___lmul@product+3)^0,c
  5565  0027A4                     l3570:
  5566  0027A4  A001               	btfss	___lmul@multiplier^0,0,c
  5567  0027A6  EFD7  F013         	goto	u2721
  5568  0027AA  EFD9  F013         	goto	u2720
  5569  0027AE                     u2721:
  5570  0027AE  EFE1  F013         	goto	l3574
  5571  0027B2                     u2720:
  5572  0027B2  5005               	movf	___lmul@multiplicand^0,w,c
  5573  0027B4  2609               	addwf	___lmul@product^0,f,c
  5574  0027B6  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  5575  0027B8  220A               	addwfc	(___lmul@product+1)^0,f,c
  5576  0027BA  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  5577  0027BC  220B               	addwfc	(___lmul@product+2)^0,f,c
  5578  0027BE  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  5579  0027C0  220C               	addwfc	(___lmul@product+3)^0,f,c
  5580  0027C2                     l3574:
  5581  0027C2  90D8               	bcf	status,0,c
  5582  0027C4  3605               	rlcf	___lmul@multiplicand^0,f,c
  5583  0027C6  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  5584  0027C8  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  5585  0027CA  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  5586  0027CC  90D8               	bcf	status,0,c
  5587  0027CE  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  5588  0027D0  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  5589  0027D2  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  5590  0027D4  3201               	rrcf	___lmul@multiplier^0,f,c
  5591  0027D6  5001               	movf	___lmul@multiplier^0,w,c
  5592  0027D8  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  5593  0027DA  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  5594  0027DC  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  5595  0027DE  A4D8               	btfss	status,2,c
  5596  0027E0  EFF4  F013         	goto	u2731
  5597  0027E4  EFF6  F013         	goto	u2730
  5598  0027E8                     u2731:
  5599  0027E8  EFD2  F013         	goto	l3570
  5600  0027EC                     u2730:
  5601  0027EC  C009  F001         	movff	___lmul@product,?___lmul
  5602  0027F0  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  5603  0027F4  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  5604  0027F8  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  5605  0027FC  0012               	return		;funcret
  5606  0027FE                     __end_of___lmul:
  5607                           	opt callstack 0
  5608                           
  5609 ;; *************** function _dameHumedadSuelo *****************
  5610 ;; Defined at:
  5611 ;;		line 465 in file "main.c"
  5612 ;; Parameters:    Size  Location     Type
  5613 ;;  canalLeer       1    wreg     unsigned char 
  5614 ;; Auto vars:     Size  Location     Type
  5615 ;;  canalLeer       1    4[COMRAM] unsigned char 
  5616 ;; Return value:  Size  Location     Type
  5617 ;;                  2    0[COMRAM] short 
  5618 ;; Registers used:
  5619 ;;		wreg, status,2, status,0
  5620 ;; Tracked objects:
  5621 ;;		On entry : 0/0
  5622 ;;		On exit  : 0/0
  5623 ;;		Unchanged: 0/0
  5624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5625 ;;      Params:         2       0       0       0       0       0       0       0       0
  5626 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5627 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5628 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5629 ;;Total ram usage:        5 bytes
  5630 ;; Hardware stack levels used:    1
  5631 ;; Hardware stack levels required when called:    1
  5632 ;; This function calls:
  5633 ;;		Nothing
  5634 ;; This function is called by:
  5635 ;;		_lecturaAnalogaSensores
  5636 ;; This function uses a non-reentrant model
  5637 ;;
  5638                           
  5639                           	psect	text21
  5640  002BEE                     __ptext21:
  5641                           	opt callstack 0
  5642  002BEE                     _dameHumedadSuelo:
  5643                           	opt callstack 27
  5644                           
  5645                           ;incstack = 0
  5646                           ;dameHumedadSuelo@canalLeer stored from wreg
  5647  002BEE  6E05               	movwf	dameHumedadSuelo@canalLeer^0,c
  5648  002BF0                     
  5649                           ;main.c: 467:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  5650  002BF0  0E06               	movlw	6
  5651  002BF2                     u3707:
  5652  002BF2  2EE8               	decfsz	wreg,f,c
  5653  002BF4  D7FE               	bra	u3707
  5654  002BF6  D000               	nop2	
  5655  002BF8                     
  5656                           ;main.c: 469:     ADCON0bits.ADON = 1;
  5657  002BF8  80C2               	bsf	194,0,c	;volatile
  5658  002BFA                     
  5659                           ;main.c: 470:     ADCON0bits.CHS = canalLeer;
  5660  002BFA  C005  F003         	movff	dameHumedadSuelo@canalLeer,??_dameHumedadSuelo
  5661  002BFE  4603               	rlncf	??_dameHumedadSuelo^0,f,c
  5662  002C00  4603               	rlncf	??_dameHumedadSuelo^0,f,c
  5663  002C02  50C2               	movf	194,w,c	;volatile
  5664  002C04  1803               	xorwf	??_dameHumedadSuelo^0,w,c
  5665  002C06  0BC3               	andlw	-61
  5666  002C08  1803               	xorwf	??_dameHumedadSuelo^0,w,c
  5667  002C0A  6EC2               	movwf	194,c	;volatile
  5668  002C0C                     
  5669                           ;main.c: 471:     ADCON0bits.GO = 1;
  5670  002C0C  82C2               	bsf	194,1,c	;volatile
  5671  002C0E                     
  5672                           ;main.c: 472:     ADCON0bits.GO_DONE = 1;
  5673  002C0E  82C2               	bsf	194,1,c	;volatile
  5674  002C10                     l319:
  5675  002C10  B2C2               	btfsc	194,1,c	;volatile
  5676  002C12  EF0D  F016         	goto	u2921
  5677  002C16  EF0F  F016         	goto	u2920
  5678  002C1A                     u2921:
  5679  002C1A  EF08  F016         	goto	l319
  5680  002C1E                     u2920:
  5681  002C1E                     
  5682                           ;main.c: 476:     ADCON0bits.ADON = 0;
  5683  002C1E  90C2               	bcf	194,0,c	;volatile
  5684  002C20                     
  5685                           ;main.c: 478:     return (ADRESH << 8) +ADRESL;
  5686  002C20  50C4               	movf	196,w,c	;volatile
  5687  002C22  6E04               	movwf	(??_dameHumedadSuelo+1)^0,c
  5688  002C24  6A03               	clrf	??_dameHumedadSuelo^0,c
  5689  002C26  50C3               	movf	195,w,c	;volatile
  5690  002C28  2403               	addwf	??_dameHumedadSuelo^0,w,c
  5691  002C2A  6E01               	movwf	?_dameHumedadSuelo^0,c
  5692  002C2C  0E00               	movlw	0
  5693  002C2E  2004               	addwfc	(??_dameHumedadSuelo+1)^0,w,c
  5694  002C30  6E02               	movwf	(?_dameHumedadSuelo+1)^0,c
  5695  002C32  0012               	return		;funcret
  5696  002C34                     __end_of_dameHumedadSuelo:
  5697                           	opt callstack 0
  5698                           
  5699 ;; *************** function _dameTemperaturaHumedad *****************
  5700 ;; Defined at:
  5701 ;;		line 696 in file "main.c"
  5702 ;; Parameters:    Size  Location     Type
  5703 ;;  Humedad         2    3[COMRAM] PTR unsigned char 
  5704 ;;		 -> mostrarDatosSensoresWIFI@humedad(1), mostrarDatosSensores@humedad(1), NULL(0), 
  5705 ;;  Temperatura     2    5[COMRAM] PTR unsigned char 
  5706 ;;		 -> mostrarDatosSensoresWIFI@temperatura(1), mostrarDatosSensores@temperatura(1), estaSeco@temperatura(1), 
  5707 ;; Auto vars:     Size  Location     Type
  5708 ;;  checkSum        2    9[COMRAM] unsigned int 
  5709 ;;  temperatura     1   14[COMRAM] unsigned char 
  5710 ;;  humedad         1   13[COMRAM] unsigned char 
  5711 ;;  temperaturaD    1   12[COMRAM] unsigned char 
  5712 ;;  humedadDecim    1   11[COMRAM] unsigned char 
  5713 ;; Return value:  Size  Location     Type
  5714 ;;                  1    wreg      void 
  5715 ;; Registers used:
  5716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5717 ;; Tracked objects:
  5718 ;;		On entry : 0/0
  5719 ;;		On exit  : 0/0
  5720 ;;		Unchanged: 0/0
  5721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5722 ;;      Params:         4       0       0       0       0       0       0       0       0
  5723 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5724 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5725 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5726 ;;Total ram usage:       12 bytes
  5727 ;; Hardware stack levels used:    1
  5728 ;; Hardware stack levels required when called:    3
  5729 ;; This function calls:
  5730 ;;		_DHT11_ReadData
  5731 ;;		_DHT11_Start
  5732 ;;		_UART_printf
  5733 ;;		_check_response
  5734 ;; This function is called by:
  5735 ;;		_estaSeco
  5736 ;;		_mostrarDatosSensores
  5737 ;;		_mostrarDatosSensoresWIFI
  5738 ;; This function uses a non-reentrant model
  5739 ;;
  5740                           
  5741                           	psect	text22
  5742  00235E                     __ptext22:
  5743                           	opt callstack 0
  5744  00235E                     _dameTemperaturaHumedad:
  5745                           	opt callstack 24
  5746  00235E                     
  5747                           ;main.c: 698:     PIE1bits.RCIE = 0;
  5748  00235E  9A9D               	bcf	157,5,c	;volatile
  5749                           
  5750                           ;main.c: 699:     T0CONbits.TMR0ON = 0;
  5751  002360  9ED5               	bcf	213,7,c	;volatile
  5752  002362                     l3650:
  5753                           
  5754                           ;main.c: 705:     DHT11_Start();
  5755  002362  EC84  F017         	call	_DHT11_Start	;wreg free
  5756  002366                     
  5757                           ;main.c: 707:     while (!(check_response())) {
  5758  002366  EC5E  F016         	call	_check_response	;wreg free
  5759  00236A  0900               	iorlw	0
  5760  00236C  B4D8               	btfsc	status,2,c
  5761  00236E  EFBB  F011         	goto	u2801
  5762  002372  EFBD  F011         	goto	u2800
  5763  002376                     u2801:
  5764  002376  EFB1  F011         	goto	l3650
  5765  00237A                     u2800:
  5766  00237A                     
  5767                           ;main.c: 713:     humedad = DHT11_ReadData();
  5768  00237A  ECC6  F014         	call	_DHT11_ReadData	;wreg free
  5769  00237E  6E0E               	movwf	dameTemperaturaHumedad@humedad^0,c
  5770                           
  5771                           ;main.c: 714:     humedadDecimal = DHT11_ReadData();
  5772  002380  ECC6  F014         	call	_DHT11_ReadData	;wreg free
  5773  002384  6E0C               	movwf	dameTemperaturaHumedad@humedadDecimal^0,c
  5774                           
  5775                           ;main.c: 715:     temperatura = DHT11_ReadData();
  5776  002386  ECC6  F014         	call	_DHT11_ReadData	;wreg free
  5777  00238A  6E0F               	movwf	dameTemperaturaHumedad@temperatura^0,c
  5778                           
  5779                           ;main.c: 716:     temperaturaDecimal = DHT11_ReadData();
  5780  00238C  ECC6  F014         	call	_DHT11_ReadData	;wreg free
  5781  002390  6E0D               	movwf	dameTemperaturaHumedad@temperaturaDecimal^0,c
  5782                           
  5783                           ;main.c: 717:     checkSum = DHT11_ReadData();
  5784  002392  ECC6  F014         	call	_DHT11_ReadData	;wreg free
  5785  002396  6E08               	movwf	??_dameTemperaturaHumedad^0,c
  5786  002398  5008               	movf	??_dameTemperaturaHumedad^0,w,c
  5787  00239A  6E0A               	movwf	dameTemperaturaHumedad@checkSum^0,c
  5788  00239C  6A0B               	clrf	(dameTemperaturaHumedad@checkSum+1)^0,c
  5789  00239E                     
  5790                           ;main.c: 719:     if (checkSum != (humedad + humedadDecimal + temperatura + temperaturaD
      +                          ecimal))
  5791  00239E  500C               	movf	dameTemperaturaHumedad@humedadDecimal^0,w,c
  5792  0023A0  C00E  F008         	movff	dameTemperaturaHumedad@humedad,??_dameTemperaturaHumedad
  5793  0023A4  6A09               	clrf	(??_dameTemperaturaHumedad+1)^0,c
  5794  0023A6  2608               	addwf	??_dameTemperaturaHumedad^0,f,c
  5795  0023A8  0E00               	movlw	0
  5796  0023AA  2209               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  5797  0023AC  500F               	movf	dameTemperaturaHumedad@temperatura^0,w,c
  5798  0023AE  2608               	addwf	??_dameTemperaturaHumedad^0,f,c
  5799  0023B0  0E00               	movlw	0
  5800  0023B2  2209               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  5801  0023B4  500D               	movf	dameTemperaturaHumedad@temperaturaDecimal^0,w,c
  5802  0023B6  2608               	addwf	??_dameTemperaturaHumedad^0,f,c
  5803  0023B8  0E00               	movlw	0
  5804  0023BA  2209               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  5805  0023BC  500A               	movf	dameTemperaturaHumedad@checkSum^0,w,c
  5806  0023BE  1808               	xorwf	??_dameTemperaturaHumedad^0,w,c
  5807  0023C0  E109               	bnz	u2810
  5808  0023C2  500B               	movf	(dameTemperaturaHumedad@checkSum+1)^0,w,c
  5809  0023C4  1809               	xorwf	(??_dameTemperaturaHumedad+1)^0,w,c
  5810  0023C6  B4D8               	btfsc	status,2,c
  5811  0023C8  EFE8  F011         	goto	u2811
  5812  0023CC  EFEA  F011         	goto	u2810
  5813  0023D0                     u2811:
  5814  0023D0  EFF2  F011         	goto	l3662
  5815  0023D4                     u2810:
  5816  0023D4                     
  5817                           ;main.c: 720:         UART_printf("Error de lectura DHT11\r\n");
  5818  0023D4  0E45               	movlw	low STR_35
  5819  0023D6  6E02               	movwf	UART_printf@cadena^0,c
  5820  0023D8  0E7F               	movlw	high STR_35
  5821  0023DA  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5822  0023DC  EC97  F014         	call	_UART_printf	;wreg free
  5823  0023E0  EFFE  F011         	goto	l3664
  5824  0023E4                     l3662:
  5825                           
  5826                           ;main.c: 722:         *Humedad = humedad;
  5827  0023E4  C004  FFD9         	movff	dameTemperaturaHumedad@Humedad,fsr2l
  5828  0023E8  C005  FFDA         	movff	dameTemperaturaHumedad@Humedad+1,fsr2h
  5829  0023EC  C00E  FFDF         	movff	dameTemperaturaHumedad@humedad,indf2
  5830                           
  5831                           ;main.c: 723:         *Temperatura = temperatura;
  5832  0023F0  C006  FFD9         	movff	dameTemperaturaHumedad@Temperatura,fsr2l
  5833  0023F4  C007  FFDA         	movff	dameTemperaturaHumedad@Temperatura+1,fsr2h
  5834  0023F8  C00F  FFDF         	movff	dameTemperaturaHumedad@temperatura,indf2
  5835  0023FC                     l3664:
  5836                           
  5837                           ;main.c: 726:     PIE1bits.RCIE = 1;
  5838  0023FC  8A9D               	bsf	157,5,c	;volatile
  5839  0023FE                     
  5840                           ;main.c: 727:     T0CONbits.TMR0ON = 1;
  5841  0023FE  8ED5               	bsf	213,7,c	;volatile
  5842  002400  0012               	return		;funcret
  5843  002402                     __end_of_dameTemperaturaHumedad:
  5844                           	opt callstack 0
  5845                           
  5846 ;; *************** function _check_response *****************
  5847 ;; Defined at:
  5848 ;;		line 38 in file "./DHT11.h"
  5849 ;; Parameters:    Size  Location     Type
  5850 ;;		None
  5851 ;; Auto vars:     Size  Location     Type
  5852 ;;  respuesta       1    0[COMRAM] unsigned char 
  5853 ;; Return value:  Size  Location     Type
  5854 ;;                  1    wreg      unsigned char 
  5855 ;; Registers used:
  5856 ;;		wreg, status,2
  5857 ;; Tracked objects:
  5858 ;;		On entry : 0/0
  5859 ;;		On exit  : 0/0
  5860 ;;		Unchanged: 0/0
  5861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5862 ;;      Params:         0       0       0       0       0       0       0       0       0
  5863 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5864 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5865 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5866 ;;Total ram usage:        1 bytes
  5867 ;; Hardware stack levels used:    1
  5868 ;; Hardware stack levels required when called:    1
  5869 ;; This function calls:
  5870 ;;		Nothing
  5871 ;; This function is called by:
  5872 ;;		_dameTemperaturaHumedad
  5873 ;; This function uses a non-reentrant model
  5874 ;;
  5875                           
  5876                           	psect	text23
  5877  002CBC                     __ptext23:
  5878                           	opt callstack 0
  5879  002CBC                     _check_response:
  5880                           	opt callstack 25
  5881  002CBC                     
  5882                           ;./DHT11.h: 40:     unsigned char respuesta = 0;
  5883  002CBC  0E00               	movlw	0
  5884  002CBE  6E01               	movwf	check_response@respuesta^0,c
  5885  002CC0                     
  5886                           ;./DHT11.h: 41:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  5887  002CC0  0E0D               	movlw	13
  5888  002CC2                     u3717:
  5889  002CC2  2EE8               	decfsz	wreg,f,c
  5890  002CC4  D7FE               	bra	u3717
  5891  002CC6  F000               	nop	
  5892  002CC8                     
  5893                           ;./DHT11.h: 42:     if (!PORTDbits.RD7) {
  5894  002CC8  BE83               	btfsc	131,7,c	;volatile
  5895  002CCA  EF69  F016         	goto	u2691
  5896  002CCE  EF6B  F016         	goto	u2690
  5897  002CD2                     u2691:
  5898  002CD2  EF7C  F016         	goto	l3554
  5899  002CD6                     u2690:
  5900  002CD6                     
  5901                           ;./DHT11.h: 43:         _delay((unsigned long)((80)*(4000000/4000000.0)));
  5902  002CD6  0E1A               	movlw	26
  5903  002CD8                     u3727:
  5904  002CD8  2EE8               	decfsz	wreg,f,c
  5905  002CDA  D7FE               	bra	u3727
  5906  002CDC  D000               	nop2	
  5907  002CDE                     
  5908                           ;./DHT11.h: 44:         if (PORTDbits.RD7) {
  5909  002CDE  AE83               	btfss	131,7,c	;volatile
  5910  002CE0  EF74  F016         	goto	u2701
  5911  002CE4  EF76  F016         	goto	u2700
  5912  002CE8                     u2701:
  5913  002CE8  EF7C  F016         	goto	l3554
  5914  002CEC                     u2700:
  5915  002CEC                     
  5916                           ;./DHT11.h: 45:             _delay((unsigned long)((50)*(4000000/4000000.0)));
  5917  002CEC  0E10               	movlw	16
  5918  002CEE                     u3737:
  5919  002CEE  2EE8               	decfsz	wreg,f,c
  5920  002CF0  D7FE               	bra	u3737
  5921  002CF2  D000               	nop2	
  5922  002CF4                     
  5923                           ;./DHT11.h: 46:             respuesta = 1;
  5924  002CF4  0E01               	movlw	1
  5925  002CF6  6E01               	movwf	check_response@respuesta^0,c
  5926  002CF8                     l3554:
  5927                           
  5928                           ;./DHT11.h: 50:     return respuesta;
  5929  002CF8  5001               	movf	check_response@respuesta^0,w,c
  5930  002CFA  0012               	return		;funcret
  5931  002CFC                     __end_of_check_response:
  5932                           	opt callstack 0
  5933                           
  5934 ;; *************** function _DHT11_Start *****************
  5935 ;; Defined at:
  5936 ;;		line 23 in file "./DHT11.h"
  5937 ;; Parameters:    Size  Location     Type
  5938 ;;		None
  5939 ;; Auto vars:     Size  Location     Type
  5940 ;;		None
  5941 ;; Return value:  Size  Location     Type
  5942 ;;                  1    wreg      void 
  5943 ;; Registers used:
  5944 ;;		wreg
  5945 ;; Tracked objects:
  5946 ;;		On entry : 0/0
  5947 ;;		On exit  : 0/0
  5948 ;;		Unchanged: 0/0
  5949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5950 ;;      Params:         0       0       0       0       0       0       0       0       0
  5951 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5952 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5953 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5954 ;;Total ram usage:        1 bytes
  5955 ;; Hardware stack levels used:    1
  5956 ;; Hardware stack levels required when called:    1
  5957 ;; This function calls:
  5958 ;;		Nothing
  5959 ;; This function is called by:
  5960 ;;		_dameTemperaturaHumedad
  5961 ;; This function uses a non-reentrant model
  5962 ;;
  5963                           
  5964                           	psect	text24
  5965  002F08                     __ptext24:
  5966                           	opt callstack 0
  5967  002F08                     _DHT11_Start:
  5968                           	opt callstack 25
  5969  002F08                     
  5970                           ;./DHT11.h: 24:     TRISDbits.RD7 = 0;
  5971  002F08  9E95               	bcf	149,7,c	;volatile
  5972                           
  5973                           ;./DHT11.h: 26:     LATDbits.LATD7 = 0;
  5974  002F0A  9E8C               	bcf	140,7,c	;volatile
  5975  002F0C                     
  5976                           ;./DHT11.h: 28:     _delay((unsigned long)((20)*(4000000/4000.0)));
  5977  002F0C  0E1A               	movlw	26
  5978  002F0E  6E01               	movwf	??_DHT11_Start^0,c
  5979  002F10  0EF8               	movlw	248
  5980  002F12                     u3747:
  5981  002F12  2EE8               	decfsz	wreg,f,c
  5982  002F14  D7FE               	bra	u3747
  5983  002F16  2E01               	decfsz	??_DHT11_Start^0,f,c
  5984  002F18  D7FC               	bra	u3747
  5985  002F1A  D000               	nop2	
  5986  002F1C                     
  5987                           ;./DHT11.h: 30:     LATDbits.LATD7 = 1;
  5988  002F1C  8E8C               	bsf	140,7,c	;volatile
  5989                           
  5990                           ;./DHT11.h: 32:     _delay((unsigned long)((30)*(4000000/4000000.0)));
  5991  002F1E  0E0A               	movlw	10
  5992  002F20                     u3757:
  5993  002F20  2EE8               	decfsz	wreg,f,c
  5994  002F22  D7FE               	bra	u3757
  5995  002F24                     
  5996                           ;./DHT11.h: 34:     TRISDbits.RD7 = 1;
  5997  002F24  8E95               	bsf	149,7,c	;volatile
  5998  002F26  0012               	return		;funcret
  5999  002F28                     __end_of_DHT11_Start:
  6000                           	opt callstack 0
  6001                           
  6002 ;; *************** function _DHT11_ReadData *****************
  6003 ;; Defined at:
  6004 ;;		line 9 in file "./DHT11.h"
  6005 ;; Parameters:    Size  Location     Type
  6006 ;;		None
  6007 ;; Auto vars:     Size  Location     Type
  6008 ;;  data            1    1[COMRAM] unsigned char 
  6009 ;;  i               1    0[COMRAM] unsigned char 
  6010 ;; Return value:  Size  Location     Type
  6011 ;;                  1    wreg      unsigned char 
  6012 ;; Registers used:
  6013 ;;		wreg, status,2, status,0
  6014 ;; Tracked objects:
  6015 ;;		On entry : 0/0
  6016 ;;		On exit  : 0/0
  6017 ;;		Unchanged: 0/0
  6018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6019 ;;      Params:         0       0       0       0       0       0       0       0       0
  6020 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6021 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6022 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6023 ;;Total ram usage:        2 bytes
  6024 ;; Hardware stack levels used:    1
  6025 ;; Hardware stack levels required when called:    1
  6026 ;; This function calls:
  6027 ;;		Nothing
  6028 ;; This function is called by:
  6029 ;;		_dameTemperaturaHumedad
  6030 ;; This function uses a non-reentrant model
  6031 ;;
  6032                           
  6033                           	psect	text25
  6034  00298C                     __ptext25:
  6035                           	opt callstack 0
  6036  00298C                     _DHT11_ReadData:
  6037                           	opt callstack 25
  6038  00298C                     
  6039                           ;./DHT11.h: 10:     char i, data = 0;
  6040  00298C  0E00               	movlw	0
  6041  00298E  6E02               	movwf	DHT11_ReadData@data^0,c
  6042                           
  6043                           ;./DHT11.h: 11:     for (i = 0; i < 8; i++) {
  6044  002990  0E00               	movlw	0
  6045  002992  6E01               	movwf	DHT11_ReadData@i^0,c
  6046  002994                     l150:
  6047  002994  AE83               	btfss	131,7,c	;volatile
  6048  002996  EFCF  F014         	goto	u2651
  6049  00299A  EFD1  F014         	goto	u2650
  6050  00299E                     u2651:
  6051  00299E  EFCA  F014         	goto	l150
  6052  0029A2                     u2650:
  6053  0029A2                     
  6054                           ;./DHT11.h: 13:         _delay((unsigned long)((30)*(4000000/4000000.0)));
  6055  0029A2  0E0A               	movlw	10
  6056  0029A4                     u3767:
  6057  0029A4  2EE8               	decfsz	wreg,f,c
  6058  0029A6  D7FE               	bra	u3767
  6059  0029A8                     
  6060                           ;./DHT11.h: 14:         if (PORTDbits.RD7 & 1)
  6061  0029A8  AE83               	btfss	131,7,c	;volatile
  6062  0029AA  EFD9  F014         	goto	u2661
  6063  0029AE  EFDB  F014         	goto	u2660
  6064  0029B2                     u2661:
  6065  0029B2  EFDF  F014         	goto	l3522
  6066  0029B6                     u2660:
  6067  0029B6                     
  6068                           ;./DHT11.h: 15:             data = ((data << 1) | 1);
  6069  0029B6  80D8               	bsf	status,0,c
  6070  0029B8  3602               	rlcf	DHT11_ReadData@data^0,f,c
  6071  0029BA  EFE2  F014         	goto	l155
  6072  0029BE                     l3522:
  6073                           
  6074                           ;./DHT11.h: 17:             data = (data << 1);
  6075  0029BE  5002               	movf	DHT11_ReadData@data^0,w,c
  6076  0029C0  2402               	addwf	DHT11_ReadData@data^0,w,c
  6077  0029C2  6E02               	movwf	DHT11_ReadData@data^0,c
  6078  0029C4                     l155:
  6079  0029C4  BE83               	btfsc	131,7,c	;volatile
  6080  0029C6  EFE7  F014         	goto	u2671
  6081  0029CA  EFE9  F014         	goto	u2670
  6082  0029CE                     u2671:
  6083  0029CE  EFE2  F014         	goto	l155
  6084  0029D2                     u2670:
  6085  0029D2                     
  6086                           ;./DHT11.h: 19:     }
  6087  0029D2  2A01               	incf	DHT11_ReadData@i^0,f,c
  6088  0029D4  0E07               	movlw	7
  6089  0029D6  6401               	cpfsgt	DHT11_ReadData@i^0,c
  6090  0029D8  EFF0  F014         	goto	u2681
  6091  0029DC  EFF2  F014         	goto	u2680
  6092  0029E0                     u2681:
  6093  0029E0  EFCA  F014         	goto	l150
  6094  0029E4                     u2680:
  6095  0029E4                     
  6096                           ;./DHT11.h: 20:     return data;
  6097  0029E4  5002               	movf	DHT11_ReadData@data^0,w,c
  6098  0029E6  0012               	return		;funcret
  6099  0029E8                     __end_of_DHT11_ReadData:
  6100                           	opt callstack 0
  6101                           
  6102 ;; *************** function _fijaHoraRtc *****************
  6103 ;; Defined at:
  6104 ;;		line 366 in file "main.c"
  6105 ;; Parameters:    Size  Location     Type
  6106 ;;		None
  6107 ;; Auto vars:     Size  Location     Type
  6108 ;;		None
  6109 ;; Return value:  Size  Location     Type
  6110 ;;                  1    wreg      void 
  6111 ;; Registers used:
  6112 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6113 ;; Tracked objects:
  6114 ;;		On entry : 0/0
  6115 ;;		On exit  : 0/0
  6116 ;;		Unchanged: 0/0
  6117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6118 ;;      Params:         0       0       0       0       0       0       0       0       0
  6119 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6120 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6121 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6122 ;;Total ram usage:        0 bytes
  6123 ;; Hardware stack levels used:    1
  6124 ;; Hardware stack levels required when called:    5
  6125 ;; This function calls:
  6126 ;;		_UART_printf
  6127 ;;		_escribe_rtc
  6128 ;;		_setRtc
  6129 ;; This function is called by:
  6130 ;;		_sistemaPrincipal
  6131 ;; This function uses a non-reentrant model
  6132 ;;
  6133                           
  6134                           	psect	text26
  6135  0027FE                     __ptext26:
  6136                           	opt callstack 0
  6137  0027FE                     _fijaHoraRtc:
  6138                           	opt callstack 24
  6139  0027FE                     
  6140                           ;main.c: 368:     UART_printf("\r\n FIJA HORA \r\n");
  6141  0027FE  0EC3               	movlw	low STR_3
  6142  002800  6E02               	movwf	UART_printf@cadena^0,c
  6143  002802  0E7F               	movlw	high STR_3
  6144  002804  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6145  002806  EC97  F014         	call	_UART_printf	;wreg free
  6146                           
  6147                           ;main.c: 371:     UART_printf("\r\n Envie las Horas en formato 24 Ej: 15 \r\n");
  6148  00280A  0EC7               	movlw	low STR_4
  6149  00280C  6E02               	movwf	UART_printf@cadena^0,c
  6150  00280E  0E7C               	movlw	high STR_4
  6151  002810  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6152  002812  EC97  F014         	call	_UART_printf	;wreg free
  6153  002816                     
  6154                           ;main.c: 374:     if (setRtc(0x02)) {
  6155  002816  0E02               	movlw	2
  6156  002818  EC5A  F013         	call	_setRtc
  6157  00281C  0900               	iorlw	0
  6158  00281E  B4D8               	btfsc	status,2,c
  6159  002820  EF14  F014         	goto	u3291
  6160  002824  EF16  F014         	goto	u3290
  6161  002828                     u3291:
  6162  002828  EF32  F014         	goto	l303
  6163  00282C                     u3290:
  6164  00282C                     
  6165                           ;main.c: 375:         UART_printf("\r\n Envie los Minutos Ej: 25 \r\n");
  6166  00282C  0EA1               	movlw	low STR_5
  6167  00282E  6E02               	movwf	UART_printf@cadena^0,c
  6168  002830  0E7E               	movlw	high STR_5
  6169  002832  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6170  002834  EC97  F014         	call	_UART_printf	;wreg free
  6171  002838                     
  6172                           ;main.c: 376:         if (setRtc(0x01)) {
  6173  002838  0E01               	movlw	1
  6174  00283A  EC5A  F013         	call	_setRtc
  6175  00283E  0900               	iorlw	0
  6176  002840  B4D8               	btfsc	status,2,c
  6177  002842  EF25  F014         	goto	u3301
  6178  002846  EF27  F014         	goto	u3300
  6179  00284A                     u3301:
  6180  00284A  EF32  F014         	goto	l303
  6181  00284E                     u3300:
  6182  00284E                     
  6183                           ;main.c: 377:             UART_printf("\r\n HORA ESTABLECIDA CORRECTAMENTE \r\n");
  6184  00284E  0E8C               	movlw	low STR_6
  6185  002850  6E02               	movwf	UART_printf@cadena^0,c
  6186  002852  0E7D               	movlw	high STR_6
  6187  002854  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6188  002856  EC97  F014         	call	_UART_printf	;wreg free
  6189  00285A                     
  6190                           ;main.c: 378:             escribe_rtc(0x00, 0);
  6191  00285A  0E00               	movlw	0
  6192  00285C  6E03               	movwf	escribe_rtc@dato^0,c
  6193  00285E  0E00               	movlw	0
  6194  002860  EC94  F017         	call	_escribe_rtc
  6195  002864                     l303:
  6196  002864  0012               	return		;funcret
  6197  002866                     __end_of_fijaHoraRtc:
  6198                           	opt callstack 0
  6199                           
  6200 ;; *************** function _fijaDiaRtc *****************
  6201 ;; Defined at:
  6202 ;;		line 189 in file "main.c"
  6203 ;; Parameters:    Size  Location     Type
  6204 ;;		None
  6205 ;; Auto vars:     Size  Location     Type
  6206 ;;		None
  6207 ;; Return value:  Size  Location     Type
  6208 ;;                  1    wreg      void 
  6209 ;; Registers used:
  6210 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6211 ;; Tracked objects:
  6212 ;;		On entry : 0/0
  6213 ;;		On exit  : 0/0
  6214 ;;		Unchanged: 0/0
  6215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6216 ;;      Params:         0       0       0       0       0       0       0       0       0
  6217 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6218 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6219 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6220 ;;Total ram usage:        0 bytes
  6221 ;; Hardware stack levels used:    1
  6222 ;; Hardware stack levels required when called:    5
  6223 ;; This function calls:
  6224 ;;		_UART_printf
  6225 ;;		_setRtc
  6226 ;; This function is called by:
  6227 ;;		_sistemaPrincipal
  6228 ;; This function uses a non-reentrant model
  6229 ;;
  6230                           
  6231                           	psect	text27
  6232  002DE6                     __ptext27:
  6233                           	opt callstack 0
  6234  002DE6                     _fijaDiaRtc:
  6235                           	opt callstack 24
  6236  002DE6                     
  6237                           ;main.c: 191:     UART_printf("\r\n Envie el dia de la semana Ej: 01 = DOMINGO ... 07 = 
      +                          SABADO \r\n");
  6238  002DE6  0E31               	movlw	low STR_1
  6239  002DE8  6E02               	movwf	UART_printf@cadena^0,c
  6240  002DEA  0E7A               	movlw	high STR_1
  6241  002DEC  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6242  002DEE  EC97  F014         	call	_UART_printf	;wreg free
  6243  002DF2                     
  6244                           ;main.c: 193:     if (setRtc(0x03)) {
  6245  002DF2  0E03               	movlw	3
  6246  002DF4  EC5A  F013         	call	_setRtc
  6247  002DF8  0900               	iorlw	0
  6248  002DFA  B4D8               	btfsc	status,2,c
  6249  002DFC  EF02  F017         	goto	u3181
  6250  002E00  EF04  F017         	goto	u3180
  6251  002E04                     u3181:
  6252  002E04  EF0A  F017         	goto	l247
  6253  002E08                     u3180:
  6254  002E08                     
  6255                           ;main.c: 194:         UART_printf("\r\n DIA ESTABLECIDO CORRECTAMENTE \r\n");
  6256  002E08  0EFB               	movlw	low STR_2
  6257  002E0A  6E02               	movwf	UART_printf@cadena^0,c
  6258  002E0C  0E7D               	movlw	high STR_2
  6259  002E0E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6260  002E10  EC97  F014         	call	_UART_printf	;wreg free
  6261  002E14                     l247:
  6262  002E14  0012               	return		;funcret
  6263  002E16                     __end_of_fijaDiaRtc:
  6264                           	opt callstack 0
  6265                           
  6266 ;; *************** function _setRtc *****************
  6267 ;; Defined at:
  6268 ;;		line 199 in file "main.c"
  6269 ;; Parameters:    Size  Location     Type
  6270 ;;  direccion       1    wreg     unsigned char 
  6271 ;; Auto vars:     Size  Location     Type
  6272 ;;  direccion       1   14[COMRAM] unsigned char 
  6273 ;;  dato            1   17[COMRAM] unsigned char 
  6274 ;;  datoRtc         1   16[COMRAM] unsigned char 
  6275 ;;  seteado         1   15[COMRAM] unsigned char 
  6276 ;; Return value:  Size  Location     Type
  6277 ;;                  1    wreg      unsigned char 
  6278 ;; Registers used:
  6279 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6280 ;; Tracked objects:
  6281 ;;		On entry : 0/0
  6282 ;;		On exit  : 0/0
  6283 ;;		Unchanged: 0/0
  6284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6285 ;;      Params:         0       0       0       0       0       0       0       0       0
  6286 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6287 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6288 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6289 ;;Total ram usage:        4 bytes
  6290 ;; Hardware stack levels used:    1
  6291 ;; Hardware stack levels required when called:    4
  6292 ;; This function calls:
  6293 ;;		___awdiv
  6294 ;;		___awmod
  6295 ;;		_escribe_rtc
  6296 ;;		_getValue
  6297 ;; This function is called by:
  6298 ;;		_fijaDiaRtc
  6299 ;;		_fijaHoraRtc
  6300 ;; This function uses a non-reentrant model
  6301 ;;
  6302                           
  6303                           	psect	text28
  6304  0026B4                     __ptext28:
  6305                           	opt callstack 0
  6306  0026B4                     _setRtc:
  6307                           	opt callstack 24
  6308                           
  6309                           ;incstack = 0
  6310                           ;setRtc@direccion stored from wreg
  6311  0026B4  6E0F               	movwf	setRtc@direccion^0,c
  6312  0026B6                     
  6313                           ;main.c: 202:     unsigned char seteado = 0;
  6314  0026B6  0E00               	movlw	0
  6315  0026B8  6E10               	movwf	setRtc@seteado^0,c
  6316                           
  6317                           ;main.c: 203:     unsigned char datoRtc = 0;
  6318  0026BA  0E00               	movlw	0
  6319  0026BC  6E11               	movwf	setRtc@datoRtc^0,c
  6320  0026BE                     
  6321                           ;main.c: 205:     dato = getValue(2);
  6322  0026BE  0E00               	movlw	0
  6323  0026C0  6E05               	movwf	(getValue@numCharacters+1)^0,c
  6324  0026C2  0E02               	movlw	2
  6325  0026C4  6E04               	movwf	getValue@numCharacters^0,c
  6326  0026C6  EC7F  F004         	call	_getValue	;wreg free
  6327  0026CA  6E12               	movwf	setRtc@dato^0,c
  6328  0026CC                     
  6329                           ;main.c: 207:     if (dato != 'F') {
  6330  0026CC  0E46               	movlw	70
  6331  0026CE  1812               	xorwf	setRtc@dato^0,w,c
  6332  0026D0  B4D8               	btfsc	status,2,c
  6333  0026D2  EF6D  F013         	goto	u3081
  6334  0026D6  EF6F  F013         	goto	u3080
  6335  0026DA                     u3081:
  6336  0026DA  EF90  F013         	goto	l3940
  6337  0026DE                     u3080:
  6338  0026DE                     
  6339                           ;main.c: 209:         datoRtc = ((dato / 10) & 0x0F) << 4;
  6340  0026DE  C012  F001         	movff	setRtc@dato,___awdiv@dividend
  6341  0026E2  6A02               	clrf	(___awdiv@dividend+1)^0,c
  6342  0026E4  0E00               	movlw	0
  6343  0026E6  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6344  0026E8  0E0A               	movlw	10
  6345  0026EA  6E03               	movwf	___awdiv@divisor^0,c
  6346  0026EC  EC9F  F010         	call	___awdiv	;wreg free
  6347  0026F0  0E0F               	movlw	15
  6348  0026F2  1601               	andwf	?___awdiv^0,f,c
  6349  0026F4  3801               	swapf	?___awdiv^0,w,c
  6350  0026F6  0BF0               	andlw	240
  6351  0026F8  6E11               	movwf	setRtc@datoRtc^0,c
  6352                           
  6353                           ;main.c: 210:         datoRtc |= (dato % 10) & 0x0F;
  6354  0026FA  C012  F001         	movff	setRtc@dato,___awmod@dividend
  6355  0026FE  6A02               	clrf	(___awmod@dividend+1)^0,c
  6356  002700  0E00               	movlw	0
  6357  002702  6E04               	movwf	(___awmod@divisor+1)^0,c
  6358  002704  0E0A               	movlw	10
  6359  002706  6E03               	movwf	___awmod@divisor^0,c
  6360  002708  EC01  F011         	call	___awmod	;wreg free
  6361  00270C  5001               	movf	?___awmod^0,w,c
  6362  00270E  0B0F               	andlw	15
  6363  002710  1211               	iorwf	setRtc@datoRtc^0,f,c
  6364                           
  6365                           ;main.c: 211:         escribe_rtc(direccion, datoRtc);
  6366  002712  C011  F003         	movff	setRtc@datoRtc,escribe_rtc@dato
  6367  002716  500F               	movf	setRtc@direccion^0,w,c
  6368  002718  EC94  F017         	call	_escribe_rtc
  6369  00271C                     
  6370                           ;main.c: 212:         seteado = 1;
  6371  00271C  0E01               	movlw	1
  6372  00271E  6E10               	movwf	setRtc@seteado^0,c
  6373  002720                     l3940:
  6374                           
  6375                           ;main.c: 215:     return seteado;
  6376  002720  5010               	movf	setRtc@seteado^0,w,c
  6377  002722  0012               	return		;funcret
  6378  002724                     __end_of_setRtc:
  6379                           	opt callstack 0
  6380                           
  6381 ;; *************** function _escribe_rtc *****************
  6382 ;; Defined at:
  6383 ;;		line 2 in file "./RTC.h"
  6384 ;; Parameters:    Size  Location     Type
  6385 ;;  direccion       1    wreg     unsigned char 
  6386 ;;  dato            1    2[COMRAM] unsigned char 
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;  direccion       1    3[COMRAM] unsigned char 
  6389 ;; Return value:  Size  Location     Type
  6390 ;;                  1    wreg      void 
  6391 ;; Registers used:
  6392 ;;		wreg, status,2, status,0, cstack
  6393 ;; Tracked objects:
  6394 ;;		On entry : 0/0
  6395 ;;		On exit  : 0/0
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6398 ;;      Params:         1       0       0       0       0       0       0       0       0
  6399 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6400 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6401 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6402 ;;Total ram usage:        2 bytes
  6403 ;; Hardware stack levels used:    1
  6404 ;; Hardware stack levels required when called:    3
  6405 ;; This function calls:
  6406 ;;		_i2c_detener
  6407 ;;		_i2c_envia_dato
  6408 ;;		_i2c_inicia_com
  6409 ;; This function is called by:
  6410 ;;		_setRtc
  6411 ;;		_fijaHoraRtc
  6412 ;;		_setRtcDefault
  6413 ;; This function uses a non-reentrant model
  6414 ;;
  6415                           
  6416                           	psect	text29
  6417  002F28                     __ptext29:
  6418                           	opt callstack 0
  6419  002F28                     _escribe_rtc:
  6420                           	opt callstack 24
  6421                           
  6422                           ;incstack = 0
  6423                           ;escribe_rtc@direccion stored from wreg
  6424  002F28  6E04               	movwf	escribe_rtc@direccion^0,c
  6425  002F2A                     
  6426                           ;./RTC.h: 3:     i2c_inicia_com();
  6427  002F2A  ECE8  F017         	call	_i2c_inicia_com	;wreg free
  6428                           
  6429                           ;./RTC.h: 4:     i2c_envia_dato(0xD0);
  6430  002F2E  0ED0               	movlw	208
  6431  002F30  ECCE  F017         	call	_i2c_envia_dato
  6432                           
  6433                           ;./RTC.h: 5:     i2c_envia_dato(direccion);
  6434  002F34  5004               	movf	escribe_rtc@direccion^0,w,c
  6435  002F36  ECCE  F017         	call	_i2c_envia_dato
  6436                           
  6437                           ;./RTC.h: 6:     i2c_envia_dato(dato);
  6438  002F3A  5003               	movf	escribe_rtc@dato^0,w,c
  6439  002F3C  ECCE  F017         	call	_i2c_envia_dato
  6440                           
  6441                           ;./RTC.h: 7:     i2c_detener();
  6442  002F40  ECEC  F017         	call	_i2c_detener	;wreg free
  6443  002F44  0012               	return		;funcret
  6444  002F46                     __end_of_escribe_rtc:
  6445                           	opt callstack 0
  6446                           
  6447 ;; *************** function ___awmod *****************
  6448 ;; Defined at:
  6449 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  6450 ;; Parameters:    Size  Location     Type
  6451 ;;  dividend        2    0[COMRAM] int 
  6452 ;;  divisor         2    2[COMRAM] int 
  6453 ;; Auto vars:     Size  Location     Type
  6454 ;;  sign            1    5[COMRAM] unsigned char 
  6455 ;;  counter         1    4[COMRAM] unsigned char 
  6456 ;; Return value:  Size  Location     Type
  6457 ;;                  2    0[COMRAM] int 
  6458 ;; Registers used:
  6459 ;;		wreg, status,2, status,0
  6460 ;; Tracked objects:
  6461 ;;		On entry : 0/0
  6462 ;;		On exit  : 0/0
  6463 ;;		Unchanged: 0/0
  6464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6465 ;;      Params:         4       0       0       0       0       0       0       0       0
  6466 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6467 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6468 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6469 ;;Total ram usage:        6 bytes
  6470 ;; Hardware stack levels used:    1
  6471 ;; Hardware stack levels required when called:    1
  6472 ;; This function calls:
  6473 ;;		Nothing
  6474 ;; This function is called by:
  6475 ;;		_setRtc
  6476 ;; This function uses a non-reentrant model
  6477 ;;
  6478                           
  6479                           	psect	text30
  6480  002202                     __ptext30:
  6481                           	opt callstack 0
  6482  002202                     ___awmod:
  6483                           	opt callstack 26
  6484  002202  0E00               	movlw	0
  6485  002204  6E06               	movwf	___awmod@sign^0,c
  6486  002206  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  6487  002208  EF0A  F011         	goto	u3000
  6488  00220C  EF08  F011         	goto	u3001
  6489  002210                     u3001:
  6490  002210  EF10  F011         	goto	l3872
  6491  002214                     u3000:
  6492  002214  6C01               	negf	___awmod@dividend^0,c
  6493  002216  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6494  002218  B0D8               	btfsc	status,0,c
  6495  00221A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6496  00221C  0E01               	movlw	1
  6497  00221E  6E06               	movwf	___awmod@sign^0,c
  6498  002220                     l3872:
  6499  002220  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  6500  002222  EF17  F011         	goto	u3010
  6501  002226  EF15  F011         	goto	u3011
  6502  00222A                     u3011:
  6503  00222A  EF1B  F011         	goto	l3876
  6504  00222E                     u3010:
  6505  00222E  6C03               	negf	___awmod@divisor^0,c
  6506  002230  1E04               	comf	(___awmod@divisor+1)^0,f,c
  6507  002232  B0D8               	btfsc	status,0,c
  6508  002234  2A04               	incf	(___awmod@divisor+1)^0,f,c
  6509  002236                     l3876:
  6510  002236  5003               	movf	___awmod@divisor^0,w,c
  6511  002238  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  6512  00223A  B4D8               	btfsc	status,2,c
  6513  00223C  EF22  F011         	goto	u3021
  6514  002240  EF24  F011         	goto	u3020
  6515  002244                     u3021:
  6516  002244  EF48  F011         	goto	l3892
  6517  002248                     u3020:
  6518  002248  0E01               	movlw	1
  6519  00224A  6E05               	movwf	___awmod@counter^0,c
  6520  00224C  EF2C  F011         	goto	l3882
  6521  002250                     l3880:
  6522  002250  90D8               	bcf	status,0,c
  6523  002252  3603               	rlcf	___awmod@divisor^0,f,c
  6524  002254  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  6525  002256  2A05               	incf	___awmod@counter^0,f,c
  6526  002258                     l3882:
  6527  002258  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6528  00225A  EF31  F011         	goto	u3031
  6529  00225E  EF33  F011         	goto	u3030
  6530  002262                     u3031:
  6531  002262  EF28  F011         	goto	l3880
  6532  002266                     u3030:
  6533  002266                     l3884:
  6534  002266  5003               	movf	___awmod@divisor^0,w,c
  6535  002268  5C01               	subwf	___awmod@dividend^0,w,c
  6536  00226A  5004               	movf	(___awmod@divisor+1)^0,w,c
  6537  00226C  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  6538  00226E  A0D8               	btfss	status,0,c
  6539  002270  EF3C  F011         	goto	u3041
  6540  002274  EF3E  F011         	goto	u3040
  6541  002278                     u3041:
  6542  002278  EF42  F011         	goto	l3888
  6543  00227C                     u3040:
  6544  00227C  5003               	movf	___awmod@divisor^0,w,c
  6545  00227E  5E01               	subwf	___awmod@dividend^0,f,c
  6546  002280  5004               	movf	(___awmod@divisor+1)^0,w,c
  6547  002282  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  6548  002284                     l3888:
  6549  002284  90D8               	bcf	status,0,c
  6550  002286  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  6551  002288  3203               	rrcf	___awmod@divisor^0,f,c
  6552  00228A  2E05               	decfsz	___awmod@counter^0,f,c
  6553  00228C  EF33  F011         	goto	l3884
  6554  002290                     l3892:
  6555  002290  5006               	movf	___awmod@sign^0,w,c
  6556  002292  B4D8               	btfsc	status,2,c
  6557  002294  EF4E  F011         	goto	u3051
  6558  002298  EF50  F011         	goto	u3050
  6559  00229C                     u3051:
  6560  00229C  EF54  F011         	goto	l3896
  6561  0022A0                     u3050:
  6562  0022A0  6C01               	negf	___awmod@dividend^0,c
  6563  0022A2  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6564  0022A4  B0D8               	btfsc	status,0,c
  6565  0022A6  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6566  0022A8                     l3896:
  6567  0022A8  C001  F001         	movff	___awmod@dividend,?___awmod
  6568  0022AC  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6569  0022B0  0012               	return		;funcret
  6570  0022B2                     __end_of___awmod:
  6571                           	opt callstack 0
  6572                           
  6573 ;; *************** function ___awdiv *****************
  6574 ;; Defined at:
  6575 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  6576 ;; Parameters:    Size  Location     Type
  6577 ;;  dividend        2    0[COMRAM] int 
  6578 ;;  divisor         2    2[COMRAM] int 
  6579 ;; Auto vars:     Size  Location     Type
  6580 ;;  quotient        2    6[COMRAM] int 
  6581 ;;  sign            1    5[COMRAM] unsigned char 
  6582 ;;  counter         1    4[COMRAM] unsigned char 
  6583 ;; Return value:  Size  Location     Type
  6584 ;;                  2    0[COMRAM] int 
  6585 ;; Registers used:
  6586 ;;		wreg, status,2, status,0
  6587 ;; Tracked objects:
  6588 ;;		On entry : 0/0
  6589 ;;		On exit  : 0/0
  6590 ;;		Unchanged: 0/0
  6591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6592 ;;      Params:         4       0       0       0       0       0       0       0       0
  6593 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6594 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6595 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6596 ;;Total ram usage:        8 bytes
  6597 ;; Hardware stack levels used:    1
  6598 ;; Hardware stack levels required when called:    1
  6599 ;; This function calls:
  6600 ;;		Nothing
  6601 ;; This function is called by:
  6602 ;;		_setRtc
  6603 ;; This function uses a non-reentrant model
  6604 ;;
  6605                           
  6606                           	psect	text31
  6607  00213E                     __ptext31:
  6608                           	opt callstack 0
  6609  00213E                     ___awdiv:
  6610                           	opt callstack 26
  6611  00213E  0E00               	movlw	0
  6612  002140  6E06               	movwf	___awdiv@sign^0,c
  6613  002142  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  6614  002144  EFA8  F010         	goto	u2940
  6615  002148  EFA6  F010         	goto	u2941
  6616  00214C                     u2941:
  6617  00214C  EFAE  F010         	goto	l3828
  6618  002150                     u2940:
  6619  002150  6C03               	negf	___awdiv@divisor^0,c
  6620  002152  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  6621  002154  B0D8               	btfsc	status,0,c
  6622  002156  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  6623  002158  0E01               	movlw	1
  6624  00215A  6E06               	movwf	___awdiv@sign^0,c
  6625  00215C                     l3828:
  6626  00215C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  6627  00215E  EFB5  F010         	goto	u2950
  6628  002162  EFB3  F010         	goto	u2951
  6629  002166                     u2951:
  6630  002166  EFBB  F010         	goto	l3834
  6631  00216A                     u2950:
  6632  00216A  6C01               	negf	___awdiv@dividend^0,c
  6633  00216C  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  6634  00216E  B0D8               	btfsc	status,0,c
  6635  002170  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  6636  002172  0E01               	movlw	1
  6637  002174  1A06               	xorwf	___awdiv@sign^0,f,c
  6638  002176                     l3834:
  6639  002176  0E00               	movlw	0
  6640  002178  6E08               	movwf	(___awdiv@quotient+1)^0,c
  6641  00217A  0E00               	movlw	0
  6642  00217C  6E07               	movwf	___awdiv@quotient^0,c
  6643  00217E  5003               	movf	___awdiv@divisor^0,w,c
  6644  002180  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  6645  002182  B4D8               	btfsc	status,2,c
  6646  002184  EFC6  F010         	goto	u2961
  6647  002188  EFC8  F010         	goto	u2960
  6648  00218C                     u2961:
  6649  00218C  EFF0  F010         	goto	l3856
  6650  002190                     u2960:
  6651  002190  0E01               	movlw	1
  6652  002192  6E05               	movwf	___awdiv@counter^0,c
  6653  002194  EFD0  F010         	goto	l3842
  6654  002198                     l3840:
  6655  002198  90D8               	bcf	status,0,c
  6656  00219A  3603               	rlcf	___awdiv@divisor^0,f,c
  6657  00219C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  6658  00219E  2A05               	incf	___awdiv@counter^0,f,c
  6659  0021A0                     l3842:
  6660  0021A0  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  6661  0021A2  EFD5  F010         	goto	u2971
  6662  0021A6  EFD7  F010         	goto	u2970
  6663  0021AA                     u2971:
  6664  0021AA  EFCC  F010         	goto	l3840
  6665  0021AE                     u2970:
  6666  0021AE                     l3844:
  6667  0021AE  90D8               	bcf	status,0,c
  6668  0021B0  3607               	rlcf	___awdiv@quotient^0,f,c
  6669  0021B2  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  6670  0021B4  5003               	movf	___awdiv@divisor^0,w,c
  6671  0021B6  5C01               	subwf	___awdiv@dividend^0,w,c
  6672  0021B8  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6673  0021BA  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  6674  0021BC  A0D8               	btfss	status,0,c
  6675  0021BE  EFE3  F010         	goto	u2981
  6676  0021C2  EFE5  F010         	goto	u2980
  6677  0021C6                     u2981:
  6678  0021C6  EFEA  F010         	goto	l3852
  6679  0021CA                     u2980:
  6680  0021CA  5003               	movf	___awdiv@divisor^0,w,c
  6681  0021CC  5E01               	subwf	___awdiv@dividend^0,f,c
  6682  0021CE  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6683  0021D0  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  6684  0021D2  8007               	bsf	___awdiv@quotient^0,0,c
  6685  0021D4                     l3852:
  6686  0021D4  90D8               	bcf	status,0,c
  6687  0021D6  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  6688  0021D8  3203               	rrcf	___awdiv@divisor^0,f,c
  6689  0021DA  2E05               	decfsz	___awdiv@counter^0,f,c
  6690  0021DC  EFD7  F010         	goto	l3844
  6691  0021E0                     l3856:
  6692  0021E0  5006               	movf	___awdiv@sign^0,w,c
  6693  0021E2  B4D8               	btfsc	status,2,c
  6694  0021E4  EFF6  F010         	goto	u2991
  6695  0021E8  EFF8  F010         	goto	u2990
  6696  0021EC                     u2991:
  6697  0021EC  EFFC  F010         	goto	l3860
  6698  0021F0                     u2990:
  6699  0021F0  6C07               	negf	___awdiv@quotient^0,c
  6700  0021F2  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  6701  0021F4  B0D8               	btfsc	status,0,c
  6702  0021F6  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  6703  0021F8                     l3860:
  6704  0021F8  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6705  0021FC  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6706  002200  0012               	return		;funcret
  6707  002202                     __end_of___awdiv:
  6708                           	opt callstack 0
  6709                           
  6710 ;; *************** function _dameDatosSistema *****************
  6711 ;; Defined at:
  6712 ;;		line 656 in file "main.c"
  6713 ;; Parameters:    Size  Location     Type
  6714 ;;		None
  6715 ;; Auto vars:     Size  Location     Type
  6716 ;;  j               2  132[BANK0 ] int 
  6717 ;;  i               2  134[BANK0 ] int 
  6718 ;;  diasRegar      50   76[BANK0 ] unsigned char [50]
  6719 ;;  buffer         50   26[BANK0 ] unsigned char [50]
  6720 ;; Return value:  Size  Location     Type
  6721 ;;                  1    wreg      void 
  6722 ;; Registers used:
  6723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6724 ;; Tracked objects:
  6725 ;;		On entry : 0/0
  6726 ;;		On exit  : 0/0
  6727 ;;		Unchanged: 0/0
  6728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6729 ;;      Params:         0       0       0       0       0       0       0       0       0
  6730 ;;      Locals:         0     110       0       0       0       0       0       0       0
  6731 ;;      Temps:          0       4       0       0       0       0       0       0       0
  6732 ;;      Totals:         0     114       0       0       0       0       0       0       0
  6733 ;;Total ram usage:      114 bytes
  6734 ;; Hardware stack levels used:    1
  6735 ;; Hardware stack levels required when called:    9
  6736 ;; This function calls:
  6737 ;;		_UART_printf
  6738 ;;		_UART_write
  6739 ;;		___wmul
  6740 ;;		_sprintf
  6741 ;; This function is called by:
  6742 ;;		_sistemaPrincipal
  6743 ;; This function uses a non-reentrant model
  6744 ;;
  6745                           
  6746                           	psect	text32
  6747  000B22                     __ptext32:
  6748                           	opt callstack 0
  6749  000B22                     _dameDatosSistema:
  6750                           	opt callstack 20
  6751  000B22                     
  6752                           ;main.c: 658:     char buffer[50];;main.c: 659:     char diasRegar[50];;main.c: 661:    
      +                           UART_write('I');
  6753  000B22  0E49               	movlw	73
  6754  000B24  ECB0  F017         	call	_UART_write
  6755  000B28                     
  6756                           ;main.c: 663:     UART_printf("\r\n\nHora | Regar(1 si 0 no) | Minutos de riego | DIAS R
      +                          EGAR\r\n\n");
  6757  000B28  0E72               	movlw	low STR_32
  6758  000B2A  6E02               	movwf	UART_printf@cadena^0,c
  6759  000B2C  0E7A               	movlw	high STR_32
  6760  000B2E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6761  000B30  EC97  F014         	call	_UART_printf	;wreg free
  6762  000B34                     
  6763                           ;main.c: 664:     UART_printf("                                             DLMIJVS\r\n"
      +                          );
  6764  000B34  0E97               	movlw	low STR_33
  6765  000B36  6E02               	movwf	UART_printf@cadena^0,c
  6766  000B38  0E7B               	movlw	high STR_33
  6767  000B3A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6768  000B3C  EC97  F014         	call	_UART_printf	;wreg free
  6769  000B40                     
  6770                           ;main.c: 666:     for (int i = 0; i < 24; i++) {
  6771  000B40  0E00               	movlw	0
  6772  000B42  0100               	movlb	0	; () banked
  6773  000B44  6FE7               	movwf	(dameDatosSistema@i+1)& (0+255),b
  6774  000B46  0E00               	movlw	0
  6775  000B48  6FE6               	movwf	dameDatosSistema@i& (0+255),b
  6776  000B4A                     l4222:
  6777                           
  6778                           ; BSR set to: 0
  6779                           ;main.c: 668:         if (horarios[i].regar) {
  6780  000B4A  C0E6  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  6781  000B4E  C0E7  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  6782  000B52  0E00               	movlw	0
  6783  000B54  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6784  000B56  0E0C               	movlw	12
  6785  000B58  6E03               	movwf	___wmul@multiplicand^0,c
  6786  000B5A  EC61  F017         	call	___wmul	;wreg free
  6787  000B5E  0EB3               	movlw	low (_horarios+9)
  6788  000B60  2401               	addwf	?___wmul^0,w,c
  6789  000B62  6ED9               	movwf	fsr2l,c
  6790  000B64  0E01               	movlw	high (_horarios+9)
  6791  000B66  2002               	addwfc	(?___wmul+1)^0,w,c
  6792  000B68  6EDA               	movwf	fsr2h,c
  6793  000B6A  50DF               	movf	indf2,w,c
  6794  000B6C  B4D8               	btfsc	status,2,c
  6795  000B6E  EFBB  F005         	goto	u3371
  6796  000B72  EFBD  F005         	goto	u3370
  6797  000B76                     u3371:
  6798  000B76  EF7C  F006         	goto	l4248
  6799  000B7A                     u3370:
  6800  000B7A                     
  6801                           ;main.c: 670:             for (int j = 0; j < 7; j++) {
  6802  000B7A  0E00               	movlw	0
  6803  000B7C  0100               	movlb	0	; () banked
  6804  000B7E  6FE5               	movwf	(dameDatosSistema@j+1)& (0+255),b
  6805  000B80  0E00               	movlw	0
  6806  000B82  6FE4               	movwf	dameDatosSistema@j& (0+255),b
  6807  000B84  EFD8  F005         	goto	l4236
  6808  000B88                     l4230:
  6809                           
  6810                           ; BSR set to: 0
  6811                           ;main.c: 673:                         diasRegar[j] = '0';
  6812  000B88  0EAC               	movlw	low dameDatosSistema@diasRegar
  6813  000B8A  25E4               	addwf	dameDatosSistema@j& (0+255),w,b
  6814  000B8C  6ED9               	movwf	fsr2l,c
  6815  000B8E  0E00               	movlw	high dameDatosSistema@diasRegar
  6816  000B90  21E5               	addwfc	(dameDatosSistema@j+1)& (0+255),w,b
  6817  000B92  6EDA               	movwf	fsr2h,c
  6818  000B94  0E30               	movlw	48
  6819  000B96  6EDF               	movwf	indf2,c
  6820                           
  6821                           ;main.c: 674:                         break;
  6822  000B98  EF0A  F006         	goto	l4238
  6823  000B9C                     l4232:
  6824                           
  6825                           ; BSR set to: 0
  6826                           ;main.c: 677:                         diasRegar[j] = '1';
  6827  000B9C  0EAC               	movlw	low dameDatosSistema@diasRegar
  6828  000B9E  25E4               	addwf	dameDatosSistema@j& (0+255),w,b
  6829  000BA0  6ED9               	movwf	fsr2l,c
  6830  000BA2  0E00               	movlw	high dameDatosSistema@diasRegar
  6831  000BA4  21E5               	addwfc	(dameDatosSistema@j+1)& (0+255),w,b
  6832  000BA6  6EDA               	movwf	fsr2h,c
  6833  000BA8  0E31               	movlw	49
  6834  000BAA  6EDF               	movwf	indf2,c
  6835                           
  6836                           ;main.c: 678:                         break;
  6837  000BAC  EF0A  F006         	goto	l4238
  6838  000BB0                     l4236:
  6839                           
  6840                           ; BSR set to: 0
  6841  000BB0  C0E6  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  6842  000BB4  C0E7  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  6843  000BB8  0E00               	movlw	0
  6844  000BBA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6845  000BBC  0E0C               	movlw	12
  6846  000BBE  6E03               	movwf	___wmul@multiplicand^0,c
  6847  000BC0  EC61  F017         	call	___wmul	;wreg free
  6848  000BC4  0EAA               	movlw	low _horarios
  6849  000BC6  0100               	movlb	0	; () banked
  6850  000BC8  6F76               	movwf	??_dameDatosSistema& (0+255),b
  6851  000BCA  0E01               	movlw	high _horarios
  6852  000BCC  6F77               	movwf	(??_dameDatosSistema+1)& (0+255),b
  6853  000BCE  0E01               	movlw	1
  6854  000BD0  2776               	addwf	??_dameDatosSistema& (0+255),f,b
  6855  000BD2  0E00               	movlw	0
  6856  000BD4  2377               	addwfc	(??_dameDatosSistema+1)& (0+255),f,b
  6857  000BD6  5001               	movf	?___wmul^0,w,c
  6858  000BD8  2776               	addwf	??_dameDatosSistema& (0+255),f,b
  6859  000BDA  5002               	movf	(?___wmul+1)^0,w,c
  6860  000BDC  2377               	addwfc	(??_dameDatosSistema+1)& (0+255),f,b
  6861  000BDE  51E4               	movf	dameDatosSistema@j& (0+255),w,b
  6862  000BE0  2576               	addwf	??_dameDatosSistema& (0+255),w,b
  6863  000BE2  6ED9               	movwf	fsr2l,c
  6864  000BE4  51E5               	movf	(dameDatosSistema@j+1)& (0+255),w,b
  6865  000BE6  2177               	addwfc	(??_dameDatosSistema+1)& (0+255),w,b
  6866  000BE8  6EDA               	movwf	fsr2h,c
  6867  000BEA  50DF               	movf	indf2,w,c
  6868  000BEC  6F78               	movwf	(??_dameDatosSistema+2)& (0+255),b
  6869  000BEE  6B79               	clrf	(??_dameDatosSistema+3)& (0+255),b
  6870                           
  6871                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6872                           ; Switch size 1, requested type "simple"
  6873                           ; Number of cases is 1, Range of values is 0 to 0
  6874                           ; switch strategies available:
  6875                           ; Name         Instructions Cycles
  6876                           ; simple_byte            4     3 (average)
  6877                           ;	Chosen strategy is simple_byte
  6878  000BF0  5179               	movf	(??_dameDatosSistema+3)& (0+255),w,b
  6879  000BF2  0A00               	xorlw	0	; case 0
  6880  000BF4  B4D8               	btfsc	status,2,c
  6881  000BF6  EFFF  F005         	goto	l4794
  6882  000BFA  EF0A  F006         	goto	l4238
  6883  000BFE                     l4794:
  6884                           
  6885                           ; BSR set to: 0
  6886                           ; Switch size 1, requested type "simple"
  6887                           ; Number of cases is 2, Range of values is 0 to 1
  6888                           ; switch strategies available:
  6889                           ; Name         Instructions Cycles
  6890                           ; simple_byte            7     4 (average)
  6891                           ;	Chosen strategy is simple_byte
  6892  000BFE  5178               	movf	(??_dameDatosSistema+2)& (0+255),w,b
  6893  000C00  0A00               	xorlw	0	; case 0
  6894  000C02  B4D8               	btfsc	status,2,c
  6895  000C04  EFC4  F005         	goto	l4230
  6896  000C08  0A01               	xorlw	1	; case 1
  6897  000C0A  B4D8               	btfsc	status,2,c
  6898  000C0C  EFCE  F005         	goto	l4232
  6899  000C10  EF0A  F006         	goto	l4238
  6900  000C14                     l4238:
  6901                           
  6902                           ; BSR set to: 0
  6903                           ;main.c: 680:             }
  6904  000C14  4BE4               	infsnz	dameDatosSistema@j& (0+255),f,b
  6905  000C16  2BE5               	incf	(dameDatosSistema@j+1)& (0+255),f,b
  6906  000C18                     
  6907                           ; BSR set to: 0
  6908  000C18  BFE5               	btfsc	(dameDatosSistema@j+1)& (0+255),7,b
  6909  000C1A  EF18  F006         	goto	u3381
  6910  000C1E  51E5               	movf	(dameDatosSistema@j+1)& (0+255),w,b
  6911  000C20  E109               	bnz	u3380
  6912  000C22  0E07               	movlw	7
  6913  000C24  5DE4               	subwf	dameDatosSistema@j& (0+255),w,b
  6914  000C26  A0D8               	btfss	status,0,c
  6915  000C28  EF18  F006         	goto	u3381
  6916  000C2C  EF1A  F006         	goto	u3380
  6917  000C30                     u3381:
  6918  000C30  EFD8  F005         	goto	l4236
  6919  000C34                     u3380:
  6920  000C34                     
  6921                           ; BSR set to: 0
  6922                           ;main.c: 682:             sprintf(buffer, " %2d  |          %d       |         %2d      
      +                           | %s\r\n",
  6923  000C34  C0E6  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  6924  000C38  C0E7  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  6925  000C3C  0E00               	movlw	0
  6926  000C3E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6927  000C40  0E0C               	movlw	12
  6928  000C42  6E03               	movwf	___wmul@multiplicand^0,c
  6929  000C44  EC61  F017         	call	___wmul	;wreg free
  6930  000C48  0EAA               	movlw	low _horarios
  6931  000C4A  2401               	addwf	?___wmul^0,w,c
  6932  000C4C  6ED9               	movwf	fsr2l,c
  6933  000C4E  0E01               	movlw	high _horarios
  6934  000C50  2002               	addwfc	(?___wmul+1)^0,w,c
  6935  000C52  6EDA               	movwf	fsr2h,c
  6936  000C54  50DF               	movf	indf2,w,c
  6937  000C56  0100               	movlb	0	; () banked
  6938  000C58  6F76               	movwf	??_dameDatosSistema& (0+255),b
  6939  000C5A  5176               	movf	??_dameDatosSistema& (0+255),w,b
  6940  000C5C  6FDE               	movwf	_dameDatosSistema$1916& (0+255),b
  6941  000C5E  6BDF               	clrf	(_dameDatosSistema$1916+1)& (0+255),b
  6942                           
  6943                           ;main.c: 682:             sprintf(buffer, " %2d  |          %d       |         %2d      
      +                           | %s\r\n",
  6944  000C60  C0E6  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  6945  000C64  C0E7  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  6946  000C68  0E00               	movlw	0
  6947  000C6A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6948  000C6C  0E0C               	movlw	12
  6949  000C6E  6E03               	movwf	___wmul@multiplicand^0,c
  6950  000C70  EC61  F017         	call	___wmul	;wreg free
  6951  000C74  0EB3               	movlw	low (_horarios+9)
  6952  000C76  2401               	addwf	?___wmul^0,w,c
  6953  000C78  6ED9               	movwf	fsr2l,c
  6954  000C7A  0E01               	movlw	high (_horarios+9)
  6955  000C7C  2002               	addwfc	(?___wmul+1)^0,w,c
  6956  000C7E  6EDA               	movwf	fsr2h,c
  6957  000C80  50DF               	movf	indf2,w,c
  6958  000C82  0100               	movlb	0	; () banked
  6959  000C84  6F76               	movwf	??_dameDatosSistema& (0+255),b
  6960  000C86  5176               	movf	??_dameDatosSistema& (0+255),w,b
  6961  000C88  6FE0               	movwf	_dameDatosSistema$1917& (0+255),b
  6962  000C8A  6BE1               	clrf	(_dameDatosSistema$1917+1)& (0+255),b
  6963                           
  6964                           ;main.c: 682:             sprintf(buffer, " %2d  |          %d       |         %2d      
      +                           | %s\r\n",
  6965  000C8C  C0E6  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  6966  000C90  C0E7  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  6967  000C94  0E00               	movlw	0
  6968  000C96  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6969  000C98  0E0C               	movlw	12
  6970  000C9A  6E03               	movwf	___wmul@multiplicand^0,c
  6971  000C9C  EC61  F017         	call	___wmul	;wreg free
  6972  000CA0  0EB5               	movlw	low (_horarios+11)
  6973  000CA2  2401               	addwf	?___wmul^0,w,c
  6974  000CA4  6ED9               	movwf	fsr2l,c
  6975  000CA6  0E01               	movlw	high (_horarios+11)
  6976  000CA8  2002               	addwfc	(?___wmul+1)^0,w,c
  6977  000CAA  6EDA               	movwf	fsr2h,c
  6978  000CAC  50DF               	movf	indf2,w,c
  6979  000CAE  0100               	movlb	0	; () banked
  6980  000CB0  6F76               	movwf	??_dameDatosSistema& (0+255),b
  6981  000CB2  5176               	movf	??_dameDatosSistema& (0+255),w,b
  6982  000CB4  6FE2               	movwf	_dameDatosSistema$1918& (0+255),b
  6983  000CB6  6BE3               	clrf	(_dameDatosSistema$1918+1)& (0+255),b
  6984  000CB8                     
  6985                           ; BSR set to: 0
  6986                           ;main.c: 682:             sprintf(buffer, " %2d  |          %d       |         %2d      
      +                           | %s\r\n",
  6987  000CB8  0E7A               	movlw	low dameDatosSistema@buffer
  6988  000CBA  6F60               	movwf	sprintf@s& (0+255),b
  6989  000CBC  0E00               	movlw	high dameDatosSistema@buffer
  6990  000CBE  6F61               	movwf	(sprintf@s+1)& (0+255),b
  6991  000CC0  0ECE               	movlw	low STR_34
  6992  000CC2  6F62               	movwf	sprintf@fmt& (0+255),b
  6993  000CC4  0E7B               	movlw	high STR_34
  6994  000CC6  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  6995  000CC8  C0DE  F064         	movff	_dameDatosSistema$1916,?_sprintf+4
  6996  000CCC  C0DF  F065         	movff	_dameDatosSistema$1916+1,?_sprintf+5
  6997  000CD0  C0E0  F066         	movff	_dameDatosSistema$1917,?_sprintf+6
  6998  000CD4  C0E1  F067         	movff	_dameDatosSistema$1917+1,?_sprintf+7
  6999  000CD8  C0E2  F068         	movff	_dameDatosSistema$1918,?_sprintf+8
  7000  000CDC  C0E3  F069         	movff	_dameDatosSistema$1918+1,?_sprintf+9
  7001  000CE0  0EAC               	movlw	low dameDatosSistema@diasRegar
  7002  000CE2  6F6A               	movwf	(?_sprintf+10)& (0+255),b
  7003  000CE4  0E00               	movlw	high dameDatosSistema@diasRegar
  7004  000CE6  6F6B               	movwf	(?_sprintf+11)& (0+255),b
  7005  000CE8  EC7D  F015         	call	_sprintf	;wreg free
  7006  000CEC                     
  7007                           ;main.c: 686:             UART_printf(buffer);
  7008  000CEC  0E7A               	movlw	low dameDatosSistema@buffer
  7009  000CEE  6E02               	movwf	UART_printf@cadena^0,c
  7010  000CF0  0E00               	movlw	high dameDatosSistema@buffer
  7011  000CF2  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7012  000CF4  EC97  F014         	call	_UART_printf	;wreg free
  7013  000CF8                     l4248:
  7014                           
  7015                           ;main.c: 690:     }
  7016  000CF8  0100               	movlb	0	; () banked
  7017  000CFA  4BE6               	infsnz	dameDatosSistema@i& (0+255),f,b
  7018  000CFC  2BE7               	incf	(dameDatosSistema@i+1)& (0+255),f,b
  7019  000CFE                     
  7020                           ; BSR set to: 0
  7021  000CFE  BFE7               	btfsc	(dameDatosSistema@i+1)& (0+255),7,b
  7022  000D00  EF8B  F006         	goto	u3391
  7023  000D04  51E7               	movf	(dameDatosSistema@i+1)& (0+255),w,b
  7024  000D06  E109               	bnz	u3390
  7025  000D08  0E18               	movlw	24
  7026  000D0A  5DE6               	subwf	dameDatosSistema@i& (0+255),w,b
  7027  000D0C  A0D8               	btfss	status,0,c
  7028  000D0E  EF8B  F006         	goto	u3391
  7029  000D12  EF8D  F006         	goto	u3390
  7030  000D16                     u3391:
  7031  000D16  EFA5  F005         	goto	l4222
  7032  000D1A                     u3390:
  7033  000D1A                     
  7034                           ; BSR set to: 0
  7035                           ;main.c: 692:     UART_write('I');
  7036  000D1A  0E49               	movlw	73
  7037  000D1C  ECB0  F017         	call	_UART_write
  7038  000D20  0012               	return		;funcret
  7039  000D22                     __end_of_dameDatosSistema:
  7040                           	opt callstack 0
  7041                           
  7042 ;; *************** function _asignarHorarios *****************
  7043 ;; Defined at:
  7044 ;;		line 385 in file "main.c"
  7045 ;; Parameters:    Size  Location     Type
  7046 ;;		None
  7047 ;; Auto vars:     Size  Location     Type
  7048 ;;  i               2   77[BANK0 ] int 
  7049 ;;  buffer         50   24[BANK0 ] unsigned char [50]
  7050 ;;  hora            1   76[BANK0 ] unsigned char 
  7051 ;;  diaRegar        1   75[BANK0 ] unsigned char 
  7052 ;;  Rx              1   74[BANK0 ] unsigned char 
  7053 ;; Return value:  Size  Location     Type
  7054 ;;                  1    wreg      void 
  7055 ;; Registers used:
  7056 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7057 ;; Tracked objects:
  7058 ;;		On entry : 0/0
  7059 ;;		On exit  : 0/0
  7060 ;;		Unchanged: 0/0
  7061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7062 ;;      Params:         0       0       0       0       0       0       0       0       0
  7063 ;;      Locals:         0      55       0       0       0       0       0       0       0
  7064 ;;      Temps:          0       2       0       0       0       0       0       0       0
  7065 ;;      Totals:         0      57       0       0       0       0       0       0       0
  7066 ;;Total ram usage:       57 bytes
  7067 ;; Hardware stack levels used:    1
  7068 ;; Hardware stack levels required when called:    9
  7069 ;; This function calls:
  7070 ;;		_UART_printf
  7071 ;;		_escribeHorariosMemoria
  7072 ;;		_getValue
  7073 ;;		_sprintf
  7074 ;; This function is called by:
  7075 ;;		_sistemaPrincipal
  7076 ;; This function uses a non-reentrant model
  7077 ;;
  7078                           
  7079                           	psect	text33
  7080  0015FC                     __ptext33:
  7081                           	opt callstack 0
  7082  0015FC                     _asignarHorarios:
  7083                           	opt callstack 20
  7084  0015FC                     
  7085                           ;main.c: 387:     unsigned char hora;;main.c: 388:     unsigned char Rx;;main.c: 389:   
      +                            unsigned char diaRegar;;main.c: 390:     char buffer[50];;main.c: 392:     UART_printf
      +                          ("\r\n OPCIONES DE REGADO \r\n");
  7086  0015FC  0E2C               	movlw	low STR_7
  7087  0015FE  6E02               	movwf	UART_printf@cadena^0,c
  7088  001600  0E7F               	movlw	high STR_7
  7089  001602  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7090  001604  EC97  F014         	call	_UART_printf	;wreg free
  7091                           
  7092                           ;main.c: 394:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  7093  001608  0E03               	movlw	low STR_8
  7094  00160A  6E02               	movwf	UART_printf@cadena^0,c
  7095  00160C  0E7C               	movlw	high STR_8
  7096  00160E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7097  001610  EC97  F014         	call	_UART_printf	;wreg free
  7098  001614                     
  7099                           ;main.c: 395:     hora = getValue(2);
  7100  001614  0E00               	movlw	0
  7101  001616  6E05               	movwf	(getValue@numCharacters+1)^0,c
  7102  001618  0E02               	movlw	2
  7103  00161A  6E04               	movwf	getValue@numCharacters^0,c
  7104  00161C  EC7F  F004         	call	_getValue	;wreg free
  7105  001620  0100               	movlb	0	; () banked
  7106  001622  6FAC               	movwf	asignarHorarios@hora& (0+255),b
  7107  001624                     
  7108                           ; BSR set to: 0
  7109                           ;main.c: 397:     if (hora != 'F') {
  7110  001624  0E46               	movlw	70
  7111  001626  19AC               	xorwf	asignarHorarios@hora& (0+255),w,b
  7112  001628  B4D8               	btfsc	status,2,c
  7113  00162A  EF19  F00B         	goto	u3311
  7114  00162E  EF1B  F00B         	goto	u3310
  7115  001632                     u3311:
  7116  001632  EFA1  F00B         	goto	l311
  7117  001636                     u3310:
  7118  001636                     
  7119                           ; BSR set to: 0
  7120                           ;main.c: 399:         UART_printf("\r\n Ingrese 1 para activar || ingrese 0 para desacti
      +                          var: \r\n");
  7121  001636  0EB0               	movlw	low STR_9
  7122  001638  6E02               	movwf	UART_printf@cadena^0,c
  7123  00163A  0E7A               	movlw	high STR_9
  7124  00163C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7125  00163E  EC97  F014         	call	_UART_printf	;wreg free
  7126  001642                     
  7127                           ;main.c: 401:         Rx = getValue(1);
  7128  001642  0E00               	movlw	0
  7129  001644  6E05               	movwf	(getValue@numCharacters+1)^0,c
  7130  001646  0E01               	movlw	1
  7131  001648  6E04               	movwf	getValue@numCharacters^0,c
  7132  00164A  EC7F  F004         	call	_getValue	;wreg free
  7133  00164E  0100               	movlb	0	; () banked
  7134  001650  6FAA               	movwf	asignarHorarios@Rx& (0+255),b
  7135  001652                     
  7136                           ; BSR set to: 0
  7137                           ;main.c: 404:         if (Rx == 1) {
  7138  001652  05AA               	decf	asignarHorarios@Rx& (0+255),w,b
  7139  001654  A4D8               	btfss	status,2,c
  7140  001656  EF2F  F00B         	goto	u3321
  7141  00165A  EF31  F00B         	goto	u3320
  7142  00165E                     u3321:
  7143  00165E  EFA1  F00B         	goto	l311
  7144  001662                     u3320:
  7145  001662                     
  7146                           ; BSR set to: 0
  7147                           ;main.c: 406:             UART_printf("\r\n Ingrese 1 para activar || ingrese 0 para des
      +                          activar: \r\n");
  7148  001662  0EB0               	movlw	low STR_9
  7149  001664  6E02               	movwf	UART_printf@cadena^0,c
  7150  001666  0E7A               	movlw	high STR_9
  7151  001668  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7152  00166A  EC97  F014         	call	_UART_printf	;wreg free
  7153                           
  7154                           ;main.c: 407:             UART_printf("\r\n DOMINGO = [1] ... SABADO = [7] \r\n");
  7155  00166E  0EB1               	movlw	low STR_11
  7156  001670  6E02               	movwf	UART_printf@cadena^0,c
  7157  001672  0E7D               	movlw	high STR_11
  7158  001674  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7159  001676  EC97  F014         	call	_UART_printf	;wreg free
  7160  00167A                     
  7161                           ;main.c: 409:             for (int i = 0; i < 7; i++) {
  7162  00167A  0E00               	movlw	0
  7163  00167C  0100               	movlb	0	; () banked
  7164  00167E  6FAE               	movwf	(asignarHorarios@i+1)& (0+255),b
  7165  001680  0E00               	movlw	0
  7166  001682  6FAD               	movwf	asignarHorarios@i& (0+255),b
  7167  001684                     l4168:
  7168                           
  7169                           ; BSR set to: 0
  7170                           ;main.c: 410:                 sprintf(buffer, "\r\n[%d]: ", i + 1);
  7171  001684  0E78               	movlw	low asignarHorarios@buffer
  7172  001686  6F60               	movwf	sprintf@s& (0+255),b
  7173  001688  0E00               	movlw	high asignarHorarios@buffer
  7174  00168A  6F61               	movwf	(sprintf@s+1)& (0+255),b
  7175  00168C  0EEC               	movlw	low STR_12
  7176  00168E  6F62               	movwf	sprintf@fmt& (0+255),b
  7177  001690  0E7F               	movlw	high STR_12
  7178  001692  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  7179  001694  0E01               	movlw	1
  7180  001696  25AD               	addwf	asignarHorarios@i& (0+255),w,b
  7181  001698  6F64               	movwf	(?_sprintf+4)& (0+255),b
  7182  00169A  0E00               	movlw	0
  7183  00169C  21AE               	addwfc	(asignarHorarios@i+1)& (0+255),w,b
  7184  00169E  6F65               	movwf	(?_sprintf+5)& (0+255),b
  7185  0016A0  EC7D  F015         	call	_sprintf	;wreg free
  7186  0016A4                     
  7187                           ;main.c: 411:                 UART_printf(buffer);
  7188  0016A4  0E78               	movlw	low asignarHorarios@buffer
  7189  0016A6  6E02               	movwf	UART_printf@cadena^0,c
  7190  0016A8  0E00               	movlw	high asignarHorarios@buffer
  7191  0016AA  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7192  0016AC  EC97  F014         	call	_UART_printf	;wreg free
  7193  0016B0                     
  7194                           ;main.c: 412:                 diaRegar = getValue(1);
  7195  0016B0  0E00               	movlw	0
  7196  0016B2  6E05               	movwf	(getValue@numCharacters+1)^0,c
  7197  0016B4  0E01               	movlw	1
  7198  0016B6  6E04               	movwf	getValue@numCharacters^0,c
  7199  0016B8  EC7F  F004         	call	_getValue	;wreg free
  7200  0016BC  0100               	movlb	0	; () banked
  7201  0016BE  6FAB               	movwf	asignarHorarios@diaRegar& (0+255),b
  7202  0016C0                     
  7203                           ; BSR set to: 0
  7204                           ;main.c: 414:                 if (diaRegar != 'F') {
  7205  0016C0  0E46               	movlw	70
  7206  0016C2  19AB               	xorwf	asignarHorarios@diaRegar& (0+255),w,b
  7207  0016C4  B4D8               	btfsc	status,2,c
  7208  0016C6  EF67  F00B         	goto	u3331
  7209  0016CA  EF69  F00B         	goto	u3330
  7210  0016CE                     u3331:
  7211  0016CE  EF7F  F00B         	goto	l4178
  7212  0016D2                     u3330:
  7213  0016D2                     
  7214                           ; BSR set to: 0
  7215                           ;main.c: 416:                     horarios[hora].dias[i] = diaRegar;
  7216  0016D2  51AC               	movf	asignarHorarios@hora& (0+255),w,b
  7217  0016D4  0D0C               	mullw	12
  7218  0016D6  0EAA               	movlw	low _horarios
  7219  0016D8  6F76               	movwf	??_asignarHorarios& (0+255),b
  7220  0016DA  0E01               	movlw	high _horarios
  7221  0016DC  6F77               	movwf	(??_asignarHorarios+1)& (0+255),b
  7222  0016DE  0E01               	movlw	1
  7223  0016E0  2776               	addwf	??_asignarHorarios& (0+255),f,b
  7224  0016E2  0E00               	movlw	0
  7225  0016E4  2377               	addwfc	(??_asignarHorarios+1)& (0+255),f,b
  7226  0016E6  50F3               	movf	243,w,c
  7227  0016E8  2776               	addwf	??_asignarHorarios& (0+255),f,b
  7228  0016EA  50F4               	movf	244,w,c
  7229  0016EC  2377               	addwfc	(??_asignarHorarios+1)& (0+255),f,b
  7230  0016EE  51AD               	movf	asignarHorarios@i& (0+255),w,b
  7231  0016F0  2576               	addwf	??_asignarHorarios& (0+255),w,b
  7232  0016F2  6ED9               	movwf	fsr2l,c
  7233  0016F4  51AE               	movf	(asignarHorarios@i+1)& (0+255),w,b
  7234  0016F6  2177               	addwfc	(??_asignarHorarios+1)& (0+255),w,b
  7235  0016F8  6EDA               	movwf	fsr2h,c
  7236  0016FA  C0AB  FFDF         	movff	asignarHorarios@diaRegar,indf2
  7237  0016FE                     l4178:
  7238                           
  7239                           ; BSR set to: 0
  7240                           ;main.c: 419:             }
  7241  0016FE  4BAD               	infsnz	asignarHorarios@i& (0+255),f,b
  7242  001700  2BAE               	incf	(asignarHorarios@i+1)& (0+255),f,b
  7243  001702                     
  7244                           ; BSR set to: 0
  7245  001702  BFAE               	btfsc	(asignarHorarios@i+1)& (0+255),7,b
  7246  001704  EF8D  F00B         	goto	u3341
  7247  001708  51AE               	movf	(asignarHorarios@i+1)& (0+255),w,b
  7248  00170A  E109               	bnz	u3340
  7249  00170C  0E07               	movlw	7
  7250  00170E  5DAD               	subwf	asignarHorarios@i& (0+255),w,b
  7251  001710  A0D8               	btfss	status,0,c
  7252  001712  EF8D  F00B         	goto	u3341
  7253  001716  EF8F  F00B         	goto	u3340
  7254  00171A                     u3341:
  7255  00171A  EF42  F00B         	goto	l4168
  7256  00171E                     u3340:
  7257  00171E                     
  7258                           ; BSR set to: 0
  7259                           ;main.c: 421:             horarios[hora].regar = Rx;
  7260  00171E  51AC               	movf	asignarHorarios@hora& (0+255),w,b
  7261  001720  0D0C               	mullw	12
  7262  001722  0EB3               	movlw	low (_horarios+9)
  7263  001724  24F3               	addwf	243,w,c
  7264  001726  6ED9               	movwf	fsr2l,c
  7265  001728  0E01               	movlw	high (_horarios+9)
  7266  00172A  20F4               	addwfc	prodh,w,c
  7267  00172C  6EDA               	movwf	fsr2h,c
  7268  00172E  C0AA  FFDF         	movff	asignarHorarios@Rx,indf2
  7269  001732                     
  7270                           ; BSR set to: 0
  7271                           ;main.c: 423:             escribeHorariosMemoria();
  7272  001732  ECA2  F00B         	call	_escribeHorariosMemoria	;wreg free
  7273  001736                     
  7274                           ;main.c: 426:             UART_printf("\r\n Horario Modificado! \r\n");
  7275  001736  0EF8               	movlw	low STR_13
  7276  001738  6E02               	movwf	UART_printf@cadena^0,c
  7277  00173A  0E7E               	movlw	high STR_13
  7278  00173C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7279  00173E  EC97  F014         	call	_UART_printf	;wreg free
  7280  001742                     l311:
  7281  001742  0012               	return		;funcret
  7282  001744                     __end_of_asignarHorarios:
  7283                           	opt callstack 0
  7284                           
  7285 ;; *************** function _sprintf *****************
  7286 ;; Defined at:
  7287 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  7288 ;; Parameters:    Size  Location     Type
  7289 ;;  s               2    0[BANK0 ] PTR unsigned char 
  7290 ;;		 -> mostrarDatosSensoresWIFI@bufferSensor(50), mostrarDatosSensoresWIFI@buffer(50), mostrarDatosSensores@buffer(50),
      + dameDatosSistema@buffer(50), 
  7291 ;;		 -> lecturaWifi@buffer(50), asignarHorarios@buffer(50), 
  7292 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  7293 ;;		 -> STR_41(45), STR_40(29), STR_39(32), STR_38(45), 
  7294 ;;		 -> STR_37(29), STR_36(32), STR_34(53), STR_19(51), 
  7295 ;;		 -> STR_12(9), 
  7296 ;; Auto vars:     Size  Location     Type
  7297 ;;  f               6   16[BANK0 ] struct _IO_FILE
  7298 ;;  ap              2   14[BANK0 ] PTR void [1]
  7299 ;;		 -> ?_sprintf(2), 
  7300 ;;  ret             2    0        int 
  7301 ;; Return value:  Size  Location     Type
  7302 ;;                  2    0[BANK0 ] int 
  7303 ;; Registers used:
  7304 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7305 ;; Tracked objects:
  7306 ;;		On entry : 0/0
  7307 ;;		On exit  : 0/0
  7308 ;;		Unchanged: 0/0
  7309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7310 ;;      Params:         0      12       0       0       0       0       0       0       0
  7311 ;;      Locals:         0      10       0       0       0       0       0       0       0
  7312 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7313 ;;      Totals:         0      22       0       0       0       0       0       0       0
  7314 ;;Total ram usage:       22 bytes
  7315 ;; Hardware stack levels used:    1
  7316 ;; Hardware stack levels required when called:    8
  7317 ;; This function calls:
  7318 ;;		_vfprintf
  7319 ;; This function is called by:
  7320 ;;		_asignarHorarios
  7321 ;;		_lecturaWifi
  7322 ;;		_dameDatosSistema
  7323 ;;		_mostrarDatosSensores
  7324 ;;		_mostrarDatosSensoresWIFI
  7325 ;; This function uses a non-reentrant model
  7326 ;;
  7327                           
  7328                           	psect	text34
  7329  002AFA                     __ptext34:
  7330                           	opt callstack 0
  7331  002AFA                     _sprintf:
  7332                           	opt callstack 20
  7333  002AFA  0E64               	movlw	low (?_sprintf+4)
  7334  002AFC  0100               	movlb	0	; () banked
  7335  002AFE  6F6E               	movwf	sprintf@ap& (0+255),b
  7336  002B00  0E00               	movlw	high (?_sprintf+4)
  7337  002B02  6F6F               	movwf	(sprintf@ap+1)& (0+255),b
  7338  002B04  C060  F070         	movff	sprintf@s,sprintf@f
  7339  002B08  C061  F071         	movff	sprintf@s+1,sprintf@f+1
  7340  002B0C                     
  7341                           ; BSR set to: 0
  7342  002B0C  0E00               	movlw	0
  7343  002B0E  6F73               	movwf	(sprintf@f+3)& (0+255),b
  7344  002B10  0E00               	movlw	0
  7345  002B12  6F72               	movwf	(sprintf@f+2)& (0+255),b
  7346  002B14                     
  7347                           ; BSR set to: 0
  7348  002B14  0E00               	movlw	0
  7349  002B16  6F75               	movwf	(sprintf@f+5)& (0+255),b
  7350  002B18  0E00               	movlw	0
  7351  002B1A  6F74               	movwf	(sprintf@f+4)& (0+255),b
  7352  002B1C                     
  7353                           ; BSR set to: 0
  7354  002B1C  0E70               	movlw	low sprintf@f
  7355  002B1E  6E57               	movwf	vfprintf@fp^0,c
  7356  002B20  0E00               	movlw	high sprintf@f
  7357  002B22  6E58               	movwf	(vfprintf@fp+1)^0,c
  7358  002B24  C062  F059         	movff	sprintf@fmt,vfprintf@fmt
  7359  002B28  C063  F05A         	movff	sprintf@fmt+1,vfprintf@fmt+1
  7360  002B2C  0E6E               	movlw	low sprintf@ap
  7361  002B2E  6E5B               	movwf	vfprintf@ap^0,c
  7362  002B30  0E00               	movlw	high sprintf@ap
  7363  002B32  6E5C               	movwf	(vfprintf@ap+1)^0,c
  7364  002B34  EC66  F014         	call	_vfprintf	;wreg free
  7365  002B38  0100               	movlb	0	; () banked
  7366  002B3A  5172               	movf	(sprintf@f+2)& (0+255),w,b
  7367  002B3C  2560               	addwf	sprintf@s& (0+255),w,b
  7368  002B3E  6ED9               	movwf	fsr2l,c
  7369  002B40  5173               	movf	(sprintf@f+3)& (0+255),w,b
  7370  002B42  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  7371  002B44  6EDA               	movwf	fsr2h,c
  7372  002B46  0E00               	movlw	0
  7373  002B48  6EDF               	movwf	indf2,c
  7374  002B4A                     
  7375                           ; BSR set to: 0
  7376  002B4A  0012               	return		;funcret
  7377  002B4C                     __end_of_sprintf:
  7378                           	opt callstack 0
  7379                           
  7380 ;; *************** function _vfprintf *****************
  7381 ;; Defined at:
  7382 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7383 ;; Parameters:    Size  Location     Type
  7384 ;;  fp              2   86[COMRAM] PTR struct _IO_FILE
  7385 ;;		 -> sprintf@f(6), 
  7386 ;;  fmt             2   88[COMRAM] PTR const unsigned char 
  7387 ;;		 -> STR_41(45), STR_40(29), STR_39(32), STR_38(45), 
  7388 ;;		 -> STR_37(29), STR_36(32), STR_34(53), STR_19(51), 
  7389 ;;		 -> STR_12(9), 
  7390 ;;  ap              2   90[COMRAM] PTR PTR void 
  7391 ;;		 -> sprintf@ap(2), 
  7392 ;; Auto vars:     Size  Location     Type
  7393 ;;  cfmt            2   92[COMRAM] PTR unsigned char 
  7394 ;;		 -> STR_41(45), STR_40(29), STR_39(32), STR_38(45), 
  7395 ;;		 -> STR_37(29), STR_36(32), STR_34(53), STR_19(51), 
  7396 ;;		 -> STR_12(9), 
  7397 ;; Return value:  Size  Location     Type
  7398 ;;                  2   86[COMRAM] int 
  7399 ;; Registers used:
  7400 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7401 ;; Tracked objects:
  7402 ;;		On entry : 0/0
  7403 ;;		On exit  : 0/0
  7404 ;;		Unchanged: 0/0
  7405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7406 ;;      Params:         6       0       0       0       0       0       0       0       0
  7407 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7408 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7409 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7410 ;;Total ram usage:        8 bytes
  7411 ;; Hardware stack levels used:    1
  7412 ;; Hardware stack levels required when called:    7
  7413 ;; This function calls:
  7414 ;;		_vfpfcnvrt
  7415 ;; This function is called by:
  7416 ;;		_sprintf
  7417 ;; This function uses a non-reentrant model
  7418 ;;
  7419                           
  7420                           	psect	text35
  7421  0028CC                     __ptext35:
  7422                           	opt callstack 0
  7423  0028CC                     _vfprintf:
  7424                           	opt callstack 20
  7425  0028CC                     
  7426                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  7427  0028CC  C059  F05D         	movff	vfprintf@fmt,vfprintf@cfmt
  7428  0028D0  C05A  F05E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  7429  0028D4                     
  7430                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  7431  0028D4  0E00               	movlw	0
  7432  0028D6  0101               	movlb	1	; () banked
  7433  0028D8  6F79               	movwf	(_nout+1)& (0+255),b
  7434  0028DA  0E00               	movlw	0
  7435  0028DC  6F78               	movwf	_nout& (0+255),b
  7436                           
  7437                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  7438  0028DE  EF84  F014         	goto	l3566
  7439  0028E2                     l3564:
  7440                           
  7441                           ; BSR set to: 1
  7442                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  7443  0028E2  C057  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  7444  0028E6  C058  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  7445  0028EA  0E5D               	movlw	low vfprintf@cfmt
  7446  0028EC  6E42               	movwf	vfpfcnvrt@fmt^0,c
  7447  0028EE  0E00               	movlw	high vfprintf@cfmt
  7448  0028F0  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  7449  0028F2  C05B  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  7450  0028F6  C05C  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  7451  0028FA  EC09  F000         	call	_vfpfcnvrt	;wreg free
  7452  0028FE  5040               	movf	?_vfpfcnvrt^0,w,c
  7453  002900  0101               	movlb	1	; () banked
  7454  002902  2778               	addwf	_nout& (0+255),f,b
  7455  002904  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  7456  002906  2379               	addwfc	(_nout+1)& (0+255),f,b
  7457  002908                     l3566:
  7458                           
  7459                           ; BSR set to: 1
  7460                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  7461  002908  C05D  FFF6         	movff	vfprintf@cfmt,tblptrl
  7462  00290C  C05E  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  7463  002910                     	if	0	;tblptru may be non-zero
  7464  002910                     	endif
  7465  002910                     	if	0	;tblptru may be non-zero
  7466  002910                     	endif
  7467  002910  0008               	tblrd		*
  7468  002912  50F5               	movf	tablat,w,c
  7469  002914  0900               	iorlw	0
  7470  002916  A4D8               	btfss	status,2,c
  7471  002918  EF90  F014         	goto	u2711
  7472  00291C  EF92  F014         	goto	u2710
  7473  002920                     u2711:
  7474  002920  EF71  F014         	goto	l3564
  7475  002924                     u2710:
  7476  002924                     
  7477                           ; BSR set to: 1
  7478                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  7479  002924  C178  F057         	movff	_nout,?_vfprintf
  7480  002928  C179  F058         	movff	_nout+1,?_vfprintf+1
  7481  00292C                     
  7482                           ; BSR set to: 1
  7483  00292C  0012               	return		;funcret
  7484  00292E                     __end_of_vfprintf:
  7485                           	opt callstack 0
  7486                           
  7487 ;; *************** function _vfpfcnvrt *****************
  7488 ;; Defined at:
  7489 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7490 ;; Parameters:    Size  Location     Type
  7491 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  7492 ;;		 -> sprintf@f(6), 
  7493 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  7494 ;;		 -> vfprintf@cfmt(2), 
  7495 ;;  ap              2   67[COMRAM] PTR PTR void 
  7496 ;;		 -> sprintf@ap(2), 
  7497 ;; Auto vars:     Size  Location     Type
  7498 ;;  ll              8   73[COMRAM] long long 
  7499 ;;  llu             8    0        unsigned long long 
  7500 ;;  f               4    0        unsigned long long 
  7501 ;;  vp              3    0        PTR void 
  7502 ;;  ct              3    0        unsigned char [3]
  7503 ;;  cp              2   81[COMRAM] PTR unsigned char 
  7504 ;;		 -> ?_sprintf(2), dameDatosSistema@diasRegar(50), 
  7505 ;;  i               2    0        int 
  7506 ;;  done            2    0        int 
  7507 ;;  c               1   85[COMRAM] unsigned char 
  7508 ;; Return value:  Size  Location     Type
  7509 ;;                  2   63[COMRAM] int 
  7510 ;; Registers used:
  7511 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7512 ;; Tracked objects:
  7513 ;;		On entry : 0/0
  7514 ;;		On exit  : 0/0
  7515 ;;		Unchanged: 0/0
  7516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7517 ;;      Params:         6       0       0       0       0       0       0       0       0
  7518 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7519 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7520 ;;      Totals:        23       0       0       0       0       0       0       0       0
  7521 ;;Total ram usage:       23 bytes
  7522 ;; Hardware stack levels used:    1
  7523 ;; Hardware stack levels required when called:    6
  7524 ;; This function calls:
  7525 ;;		_atoi
  7526 ;;		_ctoa
  7527 ;;		_dtoa
  7528 ;;		_fputc
  7529 ;;		_isdigit
  7530 ;;		_stoa
  7531 ;; This function is called by:
  7532 ;;		_vfprintf
  7533 ;; This function uses a non-reentrant model
  7534 ;;
  7535                           
  7536                           	psect	text36
  7537  000012                     __ptext36:
  7538                           	opt callstack 0
  7539  000012                     _vfpfcnvrt:
  7540                           	opt callstack 20
  7541  000012                     
  7542                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  7543  000012  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7544  000016  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7545  00001A  CFDE FFF6          	movff	postinc2,tblptrl
  7546  00001E  CFDD FFF7          	movff	postdec2,tblptrh
  7547  000022                     	if	0	;tblptru may be non-zero
  7548  000022                     	endif
  7549  000022                     	if	0	;tblptru may be non-zero
  7550  000022                     	endif
  7551  000022  0008               	tblrd		*
  7552  000024  50F5               	movf	tablat,w,c
  7553  000026  0A25               	xorlw	37
  7554  000028  A4D8               	btfss	status,2,c
  7555  00002A  EF19  F000         	goto	u2481
  7556  00002E  EF1B  F000         	goto	u2480
  7557  000032                     u2481:
  7558  000032  EFBB  F001         	goto	l3466
  7559  000036                     u2480:
  7560  000036                     
  7561                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  7562  000036  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7563  00003A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7564  00003E  2ADE               	incf	postinc2,f,c
  7565  000040  0E00               	movlw	0
  7566  000042  22DD               	addwfc	postdec2,f,c
  7567  000044                     
  7568                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  7569  000044  0E00               	movlw	0
  7570  000046  0100               	movlb	0	; () banked
  7571  000048  6FEC               	movwf	(_width+1)& (0+255),b
  7572  00004A  0E00               	movlw	0
  7573  00004C  6FEB               	movwf	_width& (0+255),b
  7574  00004E  C0EB  F0EF         	movff	_width,_flags
  7575  000052  C0EC  F0F0         	movff	_width+1,_flags+1
  7576  000056                     
  7577                           ; BSR set to: 0
  7578                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  7579  000056  69ED               	setf	_prec& (0+255),b
  7580  000058  69EE               	setf	(_prec+1)& (0+255),b
  7581  00005A                     
  7582                           ; BSR set to: 0
  7583                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  7584  00005A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7585  00005E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7586  000062  CFDE FFF6          	movff	postinc2,tblptrl
  7587  000066  CFDD FFF7          	movff	postdec2,tblptrh
  7588  00006A                     	if	0	;tblptru may be non-zero
  7589  00006A                     	endif
  7590  00006A                     	if	0	;tblptru may be non-zero
  7591  00006A                     	endif
  7592  00006A  0008               	tblrd		*
  7593  00006C  50F5               	movf	tablat,w,c
  7594  00006E  0A2A               	xorlw	42
  7595  000070  A4D8               	btfss	status,2,c
  7596  000072  EF3D  F000         	goto	u2491
  7597  000076  EF3F  F000         	goto	u2490
  7598  00007A                     u2491:
  7599  00007A  EF68  F000         	goto	l3414
  7600  00007E                     u2490:
  7601  00007E                     
  7602                           ; BSR set to: 0
  7603                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  7604  00007E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7605  000082  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7606  000086  2ADE               	incf	postinc2,f,c
  7607  000088  0E00               	movlw	0
  7608  00008A  22DD               	addwfc	postdec2,f,c
  7609                           
  7610                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  7611  00008C  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7612  000090  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7613  000094  CFDF F046          	movff	indf2,??_vfpfcnvrt
  7614  000098  0E02               	movlw	2
  7615  00009A  26DE               	addwf	postinc2,f,c
  7616  00009C  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  7617  0000A0  0E00               	movlw	0
  7618  0000A2  22DD               	addwfc	postdec2,f,c
  7619  0000A4  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7620  0000A8  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7621  0000AC  CFDE F0EB          	movff	postinc2,_width
  7622  0000B0  CFDD F0EC          	movff	postdec2,_width+1
  7623  0000B4                     
  7624                           ; BSR set to: 0
  7625                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  7626  0000B4  BFEC               	btfsc	(_width+1)& (0+255),7,b
  7627  0000B6  EF61  F000         	goto	u2500
  7628  0000BA  EF5F  F000         	goto	u2501
  7629  0000BE                     u2501:
  7630  0000BE  EFAB  F000         	goto	l3424
  7631  0000C2                     u2500:
  7632  0000C2                     
  7633                           ; BSR set to: 0
  7634                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  7635  0000C2  81EF               	bsf	_flags& (0+255),0,b
  7636                           
  7637                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  7638  0000C4  6DEB               	negf	_width& (0+255),b
  7639  0000C6  1FEC               	comf	(_width+1)& (0+255),f,b
  7640  0000C8  B0D8               	btfsc	status,0,c
  7641  0000CA  2BEC               	incf	(_width+1)& (0+255),f,b
  7642  0000CC  EFAB  F000         	goto	l3424
  7643  0000D0                     l3414:
  7644                           
  7645                           ; BSR set to: 0
  7646                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  7647  0000D0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7648  0000D4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7649  0000D8  CFDE F008          	movff	postinc2,atoi@s
  7650  0000DC  CFDD F009          	movff	postdec2,atoi@s+1
  7651  0000E0  EC91  F006         	call	_atoi	;wreg free
  7652  0000E4  C008  F0EB         	movff	?_atoi,_width
  7653  0000E8  C009  F0EC         	movff	?_atoi+1,_width+1
  7654                           
  7655                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7656  0000EC  EF7F  F000         	goto	l3418
  7657  0000F0                     l3416:
  7658                           
  7659                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  7660  0000F0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7661  0000F4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7662  0000F8  2ADE               	incf	postinc2,f,c
  7663  0000FA  0E00               	movlw	0
  7664  0000FC  22DD               	addwfc	postdec2,f,c
  7665  0000FE                     l3418:
  7666  0000FE  0ED0               	movlw	208
  7667  000100  6E46               	movwf	??_vfpfcnvrt^0,c
  7668  000102  0EFF               	movlw	255
  7669  000104  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  7670  000106  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7671  00010A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7672  00010E  CFDE FFF6          	movff	postinc2,tblptrl
  7673  000112  CFDD FFF7          	movff	postdec2,tblptrh
  7674  000116                     	if	0	;tblptru may be non-zero
  7675  000116                     	endif
  7676  000116                     	if	0	;tblptru may be non-zero
  7677  000116                     	endif
  7678  000116  0008               	tblrd		*
  7679  000118  50F5               	movf	tablat,w,c
  7680  00011A  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  7681  00011C  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  7682  00011E  5046               	movf	??_vfpfcnvrt^0,w,c
  7683  000120  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  7684  000122  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  7685  000124  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  7686  000126  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  7687  000128  E10A               	bnz	u2510
  7688  00012A  0E0A               	movlw	10
  7689  00012C  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  7690  00012E  A0D8               	btfss	status,0,c
  7691  000130  EF9C  F000         	goto	u2511
  7692  000134  EF9F  F000         	goto	u2510
  7693  000138                     u2511:
  7694  000138  0E01               	movlw	1
  7695  00013A  EFA0  F000         	goto	u2520
  7696  00013E                     u2510:
  7697  00013E  0E00               	movlw	0
  7698  000140                     u2520:
  7699  000140  6E54               	movwf	_vfpfcnvrt$1105^0,c
  7700  000142  6A55               	clrf	(_vfpfcnvrt$1105+1)^0,c
  7701  000144  5054               	movf	_vfpfcnvrt$1105^0,w,c
  7702  000146  1055               	iorwf	(_vfpfcnvrt$1105+1)^0,w,c
  7703  000148  A4D8               	btfss	status,2,c
  7704  00014A  EFA9  F000         	goto	u2531
  7705  00014E  EFAB  F000         	goto	u2530
  7706  000152                     u2531:
  7707  000152  EF78  F000         	goto	l3416
  7708  000156                     u2530:
  7709  000156                     l3424:
  7710                           
  7711                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  7712  000156  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7713  00015A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7714  00015E  CFDE FFF6          	movff	postinc2,tblptrl
  7715  000162  CFDD FFF7          	movff	postdec2,tblptrh
  7716  000166                     	if	0	;tblptru may be non-zero
  7717  000166                     	endif
  7718  000166                     	if	0	;tblptru may be non-zero
  7719  000166                     	endif
  7720  000166  0008               	tblrd		*
  7721  000168  50F5               	movf	tablat,w,c
  7722  00016A  0A63               	xorlw	99
  7723  00016C  A4D8               	btfss	status,2,c
  7724  00016E  EFBB  F000         	goto	u2541
  7725  000172  EFBD  F000         	goto	u2540
  7726  000176                     u2541:
  7727  000176  EFE4  F000         	goto	l3432
  7728  00017A                     u2540:
  7729  00017A                     
  7730                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  7731  00017A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7732  00017E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7733  000182  2ADE               	incf	postinc2,f,c
  7734  000184  0E00               	movlw	0
  7735  000186  22DD               	addwfc	postdec2,f,c
  7736                           
  7737                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7738  000188  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7739  00018C  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7740  000190  CFDF F046          	movff	indf2,??_vfpfcnvrt
  7741  000194  0E02               	movlw	2
  7742  000196  26DE               	addwf	postinc2,f,c
  7743  000198  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  7744  00019C  0E00               	movlw	0
  7745  00019E  22DD               	addwfc	postdec2,f,c
  7746  0001A0  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7747  0001A4  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7748  0001A8  50DF               	movf	indf2,w,c
  7749  0001AA  6E56               	movwf	vfpfcnvrt@c^0,c
  7750  0001AC                     
  7751                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  7752  0001AC  C040  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  7753  0001B0  C041  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  7754  0001B4  C056  F01E         	movff	vfpfcnvrt@c,ctoa@c
  7755  0001B8  ECF4  F014         	call	_ctoa	;wreg free
  7756  0001BC  C01C  F040         	movff	?_ctoa,?_vfpfcnvrt
  7757  0001C0  C01D  F041         	movff	?_ctoa+1,?_vfpfcnvrt+1
  7758  0001C4  EFD6  F001         	goto	l577
  7759  0001C8                     l3432:
  7760                           
  7761                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  7762  0001C8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7763  0001CC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7764  0001D0  CFDE FFF6          	movff	postinc2,tblptrl
  7765  0001D4  CFDD FFF7          	movff	postdec2,tblptrh
  7766  0001D8                     	if	0	;tblptru may be non-zero
  7767  0001D8                     	endif
  7768  0001D8                     	if	0	;tblptru may be non-zero
  7769  0001D8                     	endif
  7770  0001D8  0008               	tblrd		*
  7771  0001DA  50F5               	movf	tablat,w,c
  7772  0001DC  0A64               	xorlw	100
  7773  0001DE  B4D8               	btfsc	status,2,c
  7774  0001E0  EFF4  F000         	goto	u2551
  7775  0001E4  EFF6  F000         	goto	u2550
  7776  0001E8                     u2551:
  7777  0001E8  EF08  F001         	goto	l3436
  7778  0001EC                     u2550:
  7779  0001EC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7780  0001F0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7781  0001F4  CFDE FFF6          	movff	postinc2,tblptrl
  7782  0001F8  CFDD FFF7          	movff	postdec2,tblptrh
  7783  0001FC                     	if	0	;tblptru may be non-zero
  7784  0001FC                     	endif
  7785  0001FC                     	if	0	;tblptru may be non-zero
  7786  0001FC                     	endif
  7787  0001FC  0008               	tblrd		*
  7788  0001FE  50F5               	movf	tablat,w,c
  7789  000200  0A69               	xorlw	105
  7790  000202  A4D8               	btfss	status,2,c
  7791  000204  EF06  F001         	goto	u2561
  7792  000208  EF08  F001         	goto	u2560
  7793  00020C                     u2561:
  7794  00020C  EF48  F001         	goto	l3442
  7795  000210                     u2560:
  7796  000210                     l3436:
  7797                           
  7798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  7799  000210  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7800  000214  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7801  000218  2ADE               	incf	postinc2,f,c
  7802  00021A  0E00               	movlw	0
  7803  00021C  22DD               	addwfc	postdec2,f,c
  7804                           
  7805                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  7806  00021E  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7807  000222  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7808  000226  CFDF F046          	movff	indf2,??_vfpfcnvrt
  7809  00022A  0E02               	movlw	2
  7810  00022C  26DE               	addwf	postinc2,f,c
  7811  00022E  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  7812  000232  0E00               	movlw	0
  7813  000234  22DD               	addwfc	postdec2,f,c
  7814  000236  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7815  00023A  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7816  00023E  CFDE F04A          	movff	postinc2,vfpfcnvrt@ll
  7817  000242  CFDD F04B          	movff	postdec2,vfpfcnvrt@ll+1
  7818  000246  0E00               	movlw	0
  7819  000248  BE4B               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  7820  00024A  0EFF               	movlw	-1
  7821  00024C  6E4C               	movwf	(vfpfcnvrt@ll+2)^0,c
  7822  00024E  6E4D               	movwf	(vfpfcnvrt@ll+3)^0,c
  7823  000250  6E4E               	movwf	(vfpfcnvrt@ll+4)^0,c
  7824  000252  6E4F               	movwf	(vfpfcnvrt@ll+5)^0,c
  7825  000254  6E50               	movwf	(vfpfcnvrt@ll+6)^0,c
  7826  000256  6E51               	movwf	(vfpfcnvrt@ll+7)^0,c
  7827  000258                     
  7828                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  7829  000258  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  7830  00025C  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  7831  000260  C04A  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  7832  000264  C04B  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  7833  000268  C04C  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  7834  00026C  C04D  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  7835  000270  C04E  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  7836  000274  C04F  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  7837  000278  C050  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  7838  00027C  C051  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  7839  000280  ECD7  F001         	call	_dtoa	;wreg free
  7840  000284  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  7841  000288  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  7842  00028C  EFD6  F001         	goto	l577
  7843  000290                     l3442:
  7844                           
  7845                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  7846  000290  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7847  000294  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7848  000298  CFDE FFF6          	movff	postinc2,tblptrl
  7849  00029C  CFDD FFF7          	movff	postdec2,tblptrh
  7850  0002A0                     	if	0	;tblptru may be non-zero
  7851  0002A0                     	endif
  7852  0002A0                     	if	0	;tblptru may be non-zero
  7853  0002A0                     	endif
  7854  0002A0  0008               	tblrd		*
  7855  0002A2  50F5               	movf	tablat,w,c
  7856  0002A4  0A73               	xorlw	115
  7857  0002A6  A4D8               	btfss	status,2,c
  7858  0002A8  EF58  F001         	goto	u2571
  7859  0002AC  EF5A  F001         	goto	u2570
  7860  0002B0                     u2571:
  7861  0002B0  EF85  F001         	goto	l3450
  7862  0002B4                     u2570:
  7863  0002B4                     
  7864                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  7865  0002B4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7866  0002B8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7867  0002BC  2ADE               	incf	postinc2,f,c
  7868  0002BE  0E00               	movlw	0
  7869  0002C0  22DD               	addwfc	postdec2,f,c
  7870                           
  7871                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  7872  0002C2  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7873  0002C6  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7874  0002CA  CFDF F046          	movff	indf2,??_vfpfcnvrt
  7875  0002CE  0E02               	movlw	2
  7876  0002D0  26DE               	addwf	postinc2,f,c
  7877  0002D2  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  7878  0002D6  0E00               	movlw	0
  7879  0002D8  22DD               	addwfc	postdec2,f,c
  7880  0002DA  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7881  0002DE  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7882  0002E2  CFDE F052          	movff	postinc2,vfpfcnvrt@cp
  7883  0002E6  CFDD F053          	movff	postdec2,vfpfcnvrt@cp+1
  7884  0002EA                     
  7885                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  7886  0002EA  C040  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  7887  0002EE  C041  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  7888  0002F2  C052  F00C         	movff	vfpfcnvrt@cp,stoa@s
  7889  0002F6  C053  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  7890  0002FA  EC1D  F008         	call	_stoa	;wreg free
  7891  0002FE  C00A  F040         	movff	?_stoa,?_vfpfcnvrt
  7892  000302  C00B  F041         	movff	?_stoa+1,?_vfpfcnvrt+1
  7893  000306  EFD6  F001         	goto	l577
  7894  00030A                     l3450:
  7895                           
  7896                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  7897  00030A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7898  00030E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7899  000312  CFDE FFF6          	movff	postinc2,tblptrl
  7900  000316  CFDD FFF7          	movff	postdec2,tblptrh
  7901  00031A                     	if	0	;tblptru may be non-zero
  7902  00031A                     	endif
  7903  00031A                     	if	0	;tblptru may be non-zero
  7904  00031A                     	endif
  7905  00031A  0008               	tblrd		*
  7906  00031C  50F5               	movf	tablat,w,c
  7907  00031E  0A25               	xorlw	37
  7908  000320  A4D8               	btfss	status,2,c
  7909  000322  EF95  F001         	goto	u2581
  7910  000326  EF97  F001         	goto	u2580
  7911  00032A                     u2581:
  7912  00032A  EFAE  F001         	goto	l3460
  7913  00032E                     u2580:
  7914  00032E                     
  7915                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  7916  00032E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7917  000332  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7918  000336  2ADE               	incf	postinc2,f,c
  7919  000338  0E00               	movlw	0
  7920  00033A  22DD               	addwfc	postdec2,f,c
  7921  00033C                     
  7922                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  7923  00033C  0E00               	movlw	0
  7924  00033E  6E02               	movwf	(fputc@c+1)^0,c
  7925  000340  0E25               	movlw	37
  7926  000342  6E01               	movwf	fputc@c^0,c
  7927  000344  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7928  000348  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7929  00034C  EC73  F00F         	call	_fputc	;wreg free
  7930  000350                     l3456:
  7931                           
  7932                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  7933  000350  0E00               	movlw	0
  7934  000352  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  7935  000354  0E01               	movlw	1
  7936  000356  6E40               	movwf	?_vfpfcnvrt^0,c
  7937  000358  EFD6  F001         	goto	l577
  7938  00035C                     l3460:
  7939                           
  7940                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  7941  00035C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7942  000360  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7943  000364  2ADE               	incf	postinc2,f,c
  7944  000366  0E00               	movlw	0
  7945  000368  22DD               	addwfc	postdec2,f,c
  7946  00036A                     
  7947                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  7948  00036A  0E00               	movlw	0
  7949  00036C  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  7950  00036E  0E00               	movlw	0
  7951  000370  6E40               	movwf	?_vfpfcnvrt^0,c
  7952  000372  EFD6  F001         	goto	l577
  7953  000376                     l3466:
  7954                           
  7955                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  7956  000376  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7957  00037A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7958  00037E  CFDE FFF6          	movff	postinc2,tblptrl
  7959  000382  CFDD FFF7          	movff	postdec2,tblptrh
  7960  000386                     	if	0	;tblptru may be non-zero
  7961  000386                     	endif
  7962  000386                     	if	0	;tblptru may be non-zero
  7963  000386                     	endif
  7964  000386  0008               	tblrd		*
  7965  000388  50F5               	movf	tablat,w,c
  7966  00038A  6E01               	movwf	fputc@c^0,c
  7967  00038C  6A02               	clrf	(fputc@c+1)^0,c
  7968  00038E  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7969  000392  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7970  000396  EC73  F00F         	call	_fputc	;wreg free
  7971  00039A                     
  7972                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  7973  00039A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7974  00039E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7975  0003A2  2ADE               	incf	postinc2,f,c
  7976  0003A4  0E00               	movlw	0
  7977  0003A6  22DD               	addwfc	postdec2,f,c
  7978  0003A8  EFA8  F001         	goto	l3456
  7979  0003AC                     l577:
  7980  0003AC  0012               	return		;funcret
  7981  0003AE                     __end_of_vfpfcnvrt:
  7982                           	opt callstack 0
  7983                           
  7984 ;; *************** function _stoa *****************
  7985 ;; Defined at:
  7986 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7987 ;; Parameters:    Size  Location     Type
  7988 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  7989 ;;		 -> sprintf@f(6), 
  7990 ;;  s               2   11[COMRAM] PTR unsigned char 
  7991 ;;		 -> ?_sprintf(2), dameDatosSistema@diasRegar(50), 
  7992 ;; Auto vars:     Size  Location     Type
  7993 ;;  nuls            7   14[COMRAM] unsigned char [7]
  7994 ;;  l               2   29[COMRAM] int 
  7995 ;;  p               2   27[COMRAM] int 
  7996 ;;  cp              2   25[COMRAM] PTR unsigned char 
  7997 ;;		 -> ?_sprintf(2), stoa@nuls(7), dameDatosSistema@diasRegar(50), 
  7998 ;;  w               2   23[COMRAM] int 
  7999 ;;  i               2   21[COMRAM] int 
  8000 ;; Return value:  Size  Location     Type
  8001 ;;                  2    9[COMRAM] int 
  8002 ;; Registers used:
  8003 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8004 ;; Tracked objects:
  8005 ;;		On entry : 0/0
  8006 ;;		On exit  : 0/0
  8007 ;;		Unchanged: 0/0
  8008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8009 ;;      Params:         4       0       0       0       0       0       0       0       0
  8010 ;;      Locals:        17       0       0       0       0       0       0       0       0
  8011 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8012 ;;      Totals:        22       0       0       0       0       0       0       0       0
  8013 ;;Total ram usage:       22 bytes
  8014 ;; Hardware stack levels used:    1
  8015 ;; Hardware stack levels required when called:    3
  8016 ;; This function calls:
  8017 ;;		_fputc
  8018 ;;		_strlen
  8019 ;; This function is called by:
  8020 ;;		_vfpfcnvrt
  8021 ;; This function uses a non-reentrant model
  8022 ;;
  8023                           
  8024                           	psect	text37
  8025  00103A                     __ptext37:
  8026                           	opt callstack 0
  8027  00103A                     _stoa:
  8028                           	opt callstack 22
  8029  00103A                     
  8030                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8031  00103A  EE21  F09F         	lfsr	2,stoa@F1144
  8032  00103E  EE10  F00F         	lfsr	1,stoa@nuls
  8033  001042  0E06               	movlw	6
  8034  001044                     u2291:
  8035  001044  CFDB FFE3          	movff	plusw2,plusw1
  8036  001048  06E8               	decf	wreg,f,c
  8037  00104A  E2FC               	bc	u2291
  8038  00104C                     
  8039                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  8040  00104C  C00C  F01A         	movff	stoa@s,stoa@cp
  8041  001050  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  8042  001054                     
  8043                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  8044  001054  501A               	movf	stoa@cp^0,w,c
  8045  001056  101B               	iorwf	(stoa@cp+1)^0,w,c
  8046  001058  A4D8               	btfss	status,2,c
  8047  00105A  EF31  F008         	goto	u2301
  8048  00105E  EF33  F008         	goto	u2300
  8049  001062                     u2301:
  8050  001062  EF37  F008         	goto	l3314
  8051  001066                     u2300:
  8052  001066                     
  8053                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  8054  001066  0E0F               	movlw	low stoa@nuls
  8055  001068  6E1A               	movwf	stoa@cp^0,c
  8056  00106A  0E00               	movlw	high stoa@nuls
  8057  00106C  6E1B               	movwf	(stoa@cp+1)^0,c
  8058  00106E                     l3314:
  8059                           
  8060                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  8061  00106E  C01A  F001         	movff	stoa@cp,strlen@s
  8062  001072  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  8063  001076  ECD8  F016         	call	_strlen	;wreg free
  8064  00107A  C001  F01E         	movff	?_strlen,stoa@l
  8065  00107E  C002  F01F         	movff	?_strlen+1,stoa@l+1
  8066  001082                     
  8067                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  8068  001082  C0ED  F01C         	movff	_prec,stoa@p
  8069  001086  C0EE  F01D         	movff	_prec+1,stoa@p+1
  8070  00108A                     
  8071                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  8072  00108A  BE1D               	btfsc	(stoa@p+1)^0,7,c
  8073  00108C  EF4A  F008         	goto	u2311
  8074  001090  EF4C  F008         	goto	u2310
  8075  001094                     u2311:
  8076  001094  EF61  F008         	goto	l548
  8077  001098                     u2310:
  8078  001098  501E               	movf	stoa@l^0,w,c
  8079  00109A  5C1C               	subwf	stoa@p^0,w,c
  8080  00109C  501D               	movf	(stoa@p+1)^0,w,c
  8081  00109E  0A80               	xorlw	128
  8082  0010A0  6E0E               	movwf	??_stoa^0,c
  8083  0010A2  501F               	movf	(stoa@l+1)^0,w,c
  8084  0010A4  0A80               	xorlw	128
  8085  0010A6  580E               	subwfb	??_stoa^0,w,c
  8086  0010A8  A0D8               	btfss	status,0,c
  8087  0010AA  EF59  F008         	goto	u2321
  8088  0010AE  EF5B  F008         	goto	u2320
  8089  0010B2                     u2321:
  8090  0010B2  EF5D  F008         	goto	l546
  8091  0010B6                     u2320:
  8092  0010B6  EF61  F008         	goto	l548
  8093  0010BA                     l546:
  8094  0010BA  C01C  F01E         	movff	stoa@p,stoa@l
  8095  0010BE  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  8096  0010C2                     l548:
  8097                           
  8098                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  8099  0010C2  C01E  F01C         	movff	stoa@l,stoa@p
  8100  0010C6  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  8101                           
  8102                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  8103  0010CA  C0EB  F018         	movff	_width,stoa@w
  8104  0010CE  C0EC  F019         	movff	_width+1,stoa@w+1
  8105                           
  8106                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  8107  0010D2  0100               	movlb	0	; () banked
  8108  0010D4  B1EF               	btfsc	_flags& (0+255),0,b
  8109  0010D6  EF6F  F008         	goto	u2331
  8110  0010DA  EF71  F008         	goto	u2330
  8111  0010DE                     u2331:
  8112  0010DE  EF8E  F008         	goto	l3330
  8113  0010E2                     u2330:
  8114  0010E2  EF7F  F008         	goto	l3328
  8115  0010E6                     l3324:
  8116                           
  8117                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  8118  0010E6  0E00               	movlw	0
  8119  0010E8  6E02               	movwf	(fputc@c+1)^0,c
  8120  0010EA  0E20               	movlw	32
  8121  0010EC  6E01               	movwf	fputc@c^0,c
  8122  0010EE  C00A  F003         	movff	stoa@fp,fputc@fp
  8123  0010F2  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  8124  0010F6  EC73  F00F         	call	_fputc	;wreg free
  8125  0010FA                     
  8126                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  8127  0010FA  4A1E               	infsnz	stoa@l^0,f,c
  8128  0010FC  2A1F               	incf	(stoa@l+1)^0,f,c
  8129  0010FE                     l3328:
  8130                           
  8131                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  8132  0010FE  5018               	movf	stoa@w^0,w,c
  8133  001100  5C1E               	subwf	stoa@l^0,w,c
  8134  001102  501F               	movf	(stoa@l+1)^0,w,c
  8135  001104  0A80               	xorlw	128
  8136  001106  6E0E               	movwf	??_stoa^0,c
  8137  001108  5019               	movf	(stoa@w+1)^0,w,c
  8138  00110A  0A80               	xorlw	128
  8139  00110C  580E               	subwfb	??_stoa^0,w,c
  8140  00110E  A0D8               	btfss	status,0,c
  8141  001110  EF8C  F008         	goto	u2341
  8142  001114  EF8E  F008         	goto	u2340
  8143  001118                     u2341:
  8144  001118  EF73  F008         	goto	l3324
  8145  00111C                     u2340:
  8146  00111C                     l3330:
  8147                           
  8148                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  8149  00111C  0E00               	movlw	0
  8150  00111E  6E17               	movwf	(stoa@i+1)^0,c
  8151  001120  0E00               	movlw	0
  8152  001122  6E16               	movwf	stoa@i^0,c
  8153                           
  8154                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8155  001124  EFA7  F008         	goto	l3338
  8156  001128                     l3332:
  8157                           
  8158                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  8159  001128  C01A  FFD9         	movff	stoa@cp,fsr2l
  8160  00112C  C01B  FFDA         	movff	stoa@cp+1,fsr2h
  8161  001130  50DF               	movf	indf2,w,c
  8162  001132  6E0E               	movwf	??_stoa^0,c
  8163  001134  500E               	movf	??_stoa^0,w,c
  8164  001136  6E01               	movwf	fputc@c^0,c
  8165  001138  6A02               	clrf	(fputc@c+1)^0,c
  8166  00113A  C00A  F003         	movff	stoa@fp,fputc@fp
  8167  00113E  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  8168  001142  EC73  F00F         	call	_fputc	;wreg free
  8169  001146                     
  8170                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  8171  001146  4A1A               	infsnz	stoa@cp^0,f,c
  8172  001148  2A1B               	incf	(stoa@cp+1)^0,f,c
  8173  00114A                     
  8174                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  8175  00114A  4A16               	infsnz	stoa@i^0,f,c
  8176  00114C  2A17               	incf	(stoa@i+1)^0,f,c
  8177  00114E                     l3338:
  8178                           
  8179                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8180  00114E  501C               	movf	stoa@p^0,w,c
  8181  001150  5C16               	subwf	stoa@i^0,w,c
  8182  001152  5017               	movf	(stoa@i+1)^0,w,c
  8183  001154  0A80               	xorlw	128
  8184  001156  6E0E               	movwf	??_stoa^0,c
  8185  001158  501D               	movf	(stoa@p+1)^0,w,c
  8186  00115A  0A80               	xorlw	128
  8187  00115C  580E               	subwfb	??_stoa^0,w,c
  8188  00115E  A0D8               	btfss	status,0,c
  8189  001160  EFB4  F008         	goto	u2351
  8190  001164  EFB6  F008         	goto	u2350
  8191  001168                     u2351:
  8192  001168  EF94  F008         	goto	l3332
  8193  00116C                     u2350:
  8194  00116C                     
  8195                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  8196  00116C  0100               	movlb	0	; () banked
  8197  00116E  A1EF               	btfss	_flags& (0+255),0,b
  8198  001170  EFBC  F008         	goto	u2361
  8199  001174  EFBE  F008         	goto	u2360
  8200  001178                     u2361:
  8201  001178  EFDB  F008         	goto	l558
  8202  00117C                     u2360:
  8203  00117C  EFCC  F008         	goto	l3346
  8204  001180                     l3342:
  8205                           
  8206                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  8207  001180  0E00               	movlw	0
  8208  001182  6E02               	movwf	(fputc@c+1)^0,c
  8209  001184  0E20               	movlw	32
  8210  001186  6E01               	movwf	fputc@c^0,c
  8211  001188  C00A  F003         	movff	stoa@fp,fputc@fp
  8212  00118C  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  8213  001190  EC73  F00F         	call	_fputc	;wreg free
  8214  001194                     
  8215                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  8216  001194  4A1E               	infsnz	stoa@l^0,f,c
  8217  001196  2A1F               	incf	(stoa@l+1)^0,f,c
  8218  001198                     l3346:
  8219                           
  8220                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  8221  001198  5018               	movf	stoa@w^0,w,c
  8222  00119A  5C1E               	subwf	stoa@l^0,w,c
  8223  00119C  501F               	movf	(stoa@l+1)^0,w,c
  8224  00119E  0A80               	xorlw	128
  8225  0011A0  6E0E               	movwf	??_stoa^0,c
  8226  0011A2  5019               	movf	(stoa@w+1)^0,w,c
  8227  0011A4  0A80               	xorlw	128
  8228  0011A6  580E               	subwfb	??_stoa^0,w,c
  8229  0011A8  A0D8               	btfss	status,0,c
  8230  0011AA  EFD9  F008         	goto	u2371
  8231  0011AE  EFDB  F008         	goto	u2370
  8232  0011B2                     u2371:
  8233  0011B2  EFC0  F008         	goto	l3342
  8234  0011B6                     u2370:
  8235  0011B6                     l558:
  8236                           
  8237                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  8238  0011B6  C01E  F00A         	movff	stoa@l,?_stoa
  8239  0011BA  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  8240  0011BE  0012               	return		;funcret
  8241  0011C0                     __end_of_stoa:
  8242                           	opt callstack 0
  8243                           
  8244 ;; *************** function _dtoa *****************
  8245 ;; Defined at:
  8246 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8247 ;; Parameters:    Size  Location     Type
  8248 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8249 ;;		 -> sprintf@f(6), 
  8250 ;;  d               8   29[COMRAM] long long 
  8251 ;; Auto vars:     Size  Location     Type
  8252 ;;  n               8   53[COMRAM] long long 
  8253 ;;  i               2   61[COMRAM] int 
  8254 ;;  s               2   51[COMRAM] int 
  8255 ;;  w               2   49[COMRAM] int 
  8256 ;;  p               2   47[COMRAM] int 
  8257 ;; Return value:  Size  Location     Type
  8258 ;;                  2   27[COMRAM] int 
  8259 ;; Registers used:
  8260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8261 ;; Tracked objects:
  8262 ;;		On entry : 0/0
  8263 ;;		On exit  : 0/0
  8264 ;;		Unchanged: 0/0
  8265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8266 ;;      Params:        10       0       0       0       0       0       0       0       0
  8267 ;;      Locals:        18       0       0       0       0       0       0       0       0
  8268 ;;      Temps:          8       0       0       0       0       0       0       0       0
  8269 ;;      Totals:        36       0       0       0       0       0       0       0       0
  8270 ;;Total ram usage:       36 bytes
  8271 ;; Hardware stack levels used:    1
  8272 ;; Hardware stack levels required when called:    5
  8273 ;; This function calls:
  8274 ;;		___aodiv
  8275 ;;		___aomod
  8276 ;;		_abs
  8277 ;;		_pad
  8278 ;; This function is called by:
  8279 ;;		_vfpfcnvrt
  8280 ;; This function uses a non-reentrant model
  8281 ;;
  8282                           
  8283                           	psect	text38
  8284  0003AE                     __ptext38:
  8285                           	opt callstack 0
  8286  0003AE                     _dtoa:
  8287                           	opt callstack 20
  8288  0003AE                     
  8289                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  8290  0003AE  C01E  F036         	movff	dtoa@d,dtoa@n
  8291  0003B2  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  8292  0003B6  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  8293  0003BA  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  8294  0003BE  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  8295  0003C2  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  8296  0003C6  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  8297  0003CA  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  8298  0003CE                     
  8299                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  8300  0003CE  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  8301  0003D0  EFEC  F001         	goto	u2141
  8302  0003D4  EFEF  F001         	goto	u2140
  8303  0003D8                     u2141:
  8304  0003D8  0E01               	movlw	1
  8305  0003DA  EFF0  F001         	goto	u2150
  8306  0003DE                     u2140:
  8307  0003DE  0E00               	movlw	0
  8308  0003E0                     u2150:
  8309  0003E0  6E34               	movwf	dtoa@s^0,c
  8310  0003E2  6A35               	clrf	(dtoa@s+1)^0,c
  8311                           
  8312                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  8313  0003E4  5034               	movf	dtoa@s^0,w,c
  8314  0003E6  1035               	iorwf	(dtoa@s+1)^0,w,c
  8315  0003E8  B4D8               	btfsc	status,2,c
  8316  0003EA  EFF9  F001         	goto	u2161
  8317  0003EE  EFFB  F001         	goto	u2160
  8318  0003F2                     u2161:
  8319  0003F2  EF0B  F002         	goto	l3250
  8320  0003F6                     u2160:
  8321  0003F6                     
  8322                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  8323  0003F6  1E3D               	comf	(dtoa@n+7)^0,f,c
  8324  0003F8  1E3C               	comf	(dtoa@n+6)^0,f,c
  8325  0003FA  1E3B               	comf	(dtoa@n+5)^0,f,c
  8326  0003FC  1E3A               	comf	(dtoa@n+4)^0,f,c
  8327  0003FE  1E39               	comf	(dtoa@n+3)^0,f,c
  8328  000400  1E38               	comf	(dtoa@n+2)^0,f,c
  8329  000402  1E37               	comf	(dtoa@n+1)^0,f,c
  8330  000404  6C36               	negf	dtoa@n^0,c
  8331  000406  0E00               	movlw	0
  8332  000408  2237               	addwfc	(dtoa@n+1)^0,f,c
  8333  00040A  2238               	addwfc	(dtoa@n+2)^0,f,c
  8334  00040C  2239               	addwfc	(dtoa@n+3)^0,f,c
  8335  00040E  223A               	addwfc	(dtoa@n+4)^0,f,c
  8336  000410  223B               	addwfc	(dtoa@n+5)^0,f,c
  8337  000412  223C               	addwfc	(dtoa@n+6)^0,f,c
  8338  000414  223D               	addwfc	(dtoa@n+7)^0,f,c
  8339  000416                     l3250:
  8340                           
  8341                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  8342  000416  0100               	movlb	0	; () banked
  8343  000418  BFEE               	btfsc	(_prec+1)& (0+255),7,b
  8344  00041A  EF11  F002         	goto	u2171
  8345  00041E  EF13  F002         	goto	u2170
  8346  000422                     u2171:
  8347  000422  EF14  F002         	goto	l3254
  8348  000426                     u2170:
  8349  000426                     
  8350                           ; BSR set to: 0
  8351                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  8352  000426  93EF               	bcf	_flags& (0+255),1,b
  8353  000428                     l3254:
  8354                           
  8355                           ; BSR set to: 0
  8356                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  8357  000428  BFEE               	btfsc	(_prec+1)& (0+255),7,b
  8358  00042A  EF21  F002         	goto	u2180
  8359  00042E  51EE               	movf	(_prec+1)& (0+255),w,b
  8360  000430  E106               	bnz	u2181
  8361  000432  05ED               	decf	_prec& (0+255),w,b
  8362  000434  B0D8               	btfsc	status,0,c
  8363  000436  EF1F  F002         	goto	u2181
  8364  00043A  EF21  F002         	goto	u2180
  8365  00043E                     u2181:
  8366  00043E  EF27  F002         	goto	l519
  8367  000442                     u2180:
  8368  000442                     
  8369                           ; BSR set to: 0
  8370  000442  0E00               	movlw	0
  8371  000444  6E31               	movwf	(dtoa@p+1)^0,c
  8372  000446  0E01               	movlw	1
  8373  000448  6E30               	movwf	dtoa@p^0,c
  8374  00044A  EF2B  F002         	goto	l521
  8375  00044E                     l519:
  8376                           
  8377                           ; BSR set to: 0
  8378  00044E  C0ED  F030         	movff	_prec,dtoa@p
  8379  000452  C0EE  F031         	movff	_prec+1,dtoa@p+1
  8380  000456                     l521:
  8381                           
  8382                           ; BSR set to: 0
  8383                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  8384  000456  C0EB  F032         	movff	_width,dtoa@w
  8385  00045A  C0EC  F033         	movff	_width+1,dtoa@w+1
  8386  00045E                     
  8387                           ; BSR set to: 0
  8388                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  8389  00045E  5034               	movf	dtoa@s^0,w,c
  8390  000460  1035               	iorwf	(dtoa@s+1)^0,w,c
  8391  000462  A4D8               	btfss	status,2,c
  8392  000464  EF36  F002         	goto	u2191
  8393  000468  EF38  F002         	goto	u2190
  8394  00046C                     u2191:
  8395  00046C  EF3F  F002         	goto	l3262
  8396  000470                     u2190:
  8397  000470                     
  8398                           ; BSR set to: 0
  8399  000470  A5EF               	btfss	_flags& (0+255),2,b
  8400  000472  EF3D  F002         	goto	u2201
  8401  000476  EF3F  F002         	goto	u2200
  8402  00047A                     u2201:
  8403  00047A  EF42  F002         	goto	l3264
  8404  00047E                     u2200:
  8405  00047E                     l3262:
  8406                           
  8407                           ; BSR set to: 0
  8408                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  8409  00047E  0632               	decf	dtoa@w^0,f,c
  8410  000480  A0D8               	btfss	status,0,c
  8411  000482  0633               	decf	(dtoa@w+1)^0,f,c
  8412  000484                     l3264:
  8413                           
  8414                           ; BSR set to: 0
  8415                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  8416  000484  0E00               	movlw	0
  8417  000486  6E3F               	movwf	(dtoa@i+1)^0,c
  8418  000488  0E1F               	movlw	31
  8419  00048A  6E3E               	movwf	dtoa@i^0,c
  8420  00048C                     
  8421                           ; BSR set to: 0
  8422                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  8423  00048C  0E00               	movlw	0
  8424  00048E  0101               	movlb	1	; () banked
  8425  000490  6F9E               	movwf	(_dbuf+31)& (0+255),b
  8426                           
  8427                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8428  000492  EFC7  F002         	goto	l3278
  8429  000496                     l3268:
  8430                           
  8431                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  8432  000496  063E               	decf	dtoa@i^0,f,c
  8433  000498  A0D8               	btfss	status,0,c
  8434  00049A  063F               	decf	(dtoa@i+1)^0,f,c
  8435  00049C                     
  8436                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  8437  00049C  0E7F               	movlw	low _dbuf
  8438  00049E  243E               	addwf	dtoa@i^0,w,c
  8439  0004A0  6ED9               	movwf	fsr2l,c
  8440  0004A2  0E01               	movlw	high _dbuf
  8441  0004A4  203F               	addwfc	(dtoa@i+1)^0,w,c
  8442  0004A6  6EDA               	movwf	fsr2h,c
  8443  0004A8  C036  F001         	movff	dtoa@n,___aomod@dividend
  8444  0004AC  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  8445  0004B0  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  8446  0004B4  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  8447  0004B8  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  8448  0004BC  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  8449  0004C0  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  8450  0004C4  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  8451  0004C8  0E0A               	movlw	10
  8452  0004CA  6E09               	movwf	___aomod@divisor^0,c
  8453  0004CC  0E00               	movlw	0
  8454  0004CE  6E0A               	movwf	(___aomod@divisor+1)^0,c
  8455  0004D0  0E00               	movlw	0
  8456  0004D2  6E0B               	movwf	(___aomod@divisor+2)^0,c
  8457  0004D4  0E00               	movlw	0
  8458  0004D6  6E0C               	movwf	(___aomod@divisor+3)^0,c
  8459  0004D8  0E00               	movlw	0
  8460  0004DA  6E0D               	movwf	(___aomod@divisor+4)^0,c
  8461  0004DC  0E00               	movlw	0
  8462  0004DE  6E0E               	movwf	(___aomod@divisor+5)^0,c
  8463  0004E0  0E00               	movlw	0
  8464  0004E2  6E0F               	movwf	(___aomod@divisor+6)^0,c
  8465  0004E4  0E00               	movlw	0
  8466  0004E6  6E10               	movwf	(___aomod@divisor+7)^0,c
  8467  0004E8  EC4C  F00A         	call	___aomod	;wreg free
  8468  0004EC  C001  F026         	movff	?___aomod,??_dtoa
  8469  0004F0  C002  F027         	movff	?___aomod+1,??_dtoa+1
  8470  0004F4  C003  F028         	movff	?___aomod+2,??_dtoa+2
  8471  0004F8  C004  F029         	movff	?___aomod+3,??_dtoa+3
  8472  0004FC  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  8473  000500  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  8474  000504  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  8475  000508  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  8476  00050C  C026  F013         	movff	??_dtoa,abs@a
  8477  000510  C028  F014         	movff	??_dtoa+2,abs@a+1
  8478  000514  EC7E  F016         	call	_abs	;wreg free
  8479  000518  5013               	movf	?_abs^0,w,c
  8480  00051A  0F30               	addlw	48
  8481  00051C  6EDF               	movwf	indf2,c
  8482  00051E                     
  8483                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  8484  00051E  0630               	decf	dtoa@p^0,f,c
  8485  000520  A0D8               	btfss	status,0,c
  8486  000522  0631               	decf	(dtoa@p+1)^0,f,c
  8487  000524                     
  8488                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  8489  000524  0632               	decf	dtoa@w^0,f,c
  8490  000526  A0D8               	btfss	status,0,c
  8491  000528  0633               	decf	(dtoa@w+1)^0,f,c
  8492  00052A                     
  8493                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  8494  00052A  C036  F001         	movff	dtoa@n,___aodiv@dividend
  8495  00052E  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  8496  000532  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  8497  000536  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  8498  00053A  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  8499  00053E  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  8500  000542  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  8501  000546  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  8502  00054A  0E0A               	movlw	10
  8503  00054C  6E09               	movwf	___aodiv@divisor^0,c
  8504  00054E  0E00               	movlw	0
  8505  000550  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  8506  000552  0E00               	movlw	0
  8507  000554  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  8508  000556  0E00               	movlw	0
  8509  000558  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  8510  00055A  0E00               	movlw	0
  8511  00055C  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  8512  00055E  0E00               	movlw	0
  8513  000560  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  8514  000562  0E00               	movlw	0
  8515  000564  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  8516  000566  0E00               	movlw	0
  8517  000568  6E10               	movwf	(___aodiv@divisor+7)^0,c
  8518  00056A  EC59  F007         	call	___aodiv	;wreg free
  8519  00056E  C001  F036         	movff	?___aodiv,dtoa@n
  8520  000572  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  8521  000576  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  8522  00057A  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  8523  00057E  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  8524  000582  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  8525  000586  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  8526  00058A  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  8527  00058E                     l3278:
  8528                           
  8529                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8530  00058E  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  8531  000590  EFD2  F002         	goto	u2211
  8532  000594  503F               	movf	(dtoa@i+1)^0,w,c
  8533  000596  E108               	bnz	u2210
  8534  000598  043E               	decf	dtoa@i^0,w,c
  8535  00059A  A0D8               	btfss	status,0,c
  8536  00059C  EFD2  F002         	goto	u2211
  8537  0005A0  EFD4  F002         	goto	u2210
  8538  0005A4                     u2211:
  8539  0005A4  EF05  F003         	goto	l3288
  8540  0005A8                     u2210:
  8541  0005A8  5036               	movf	dtoa@n^0,w,c
  8542  0005AA  1037               	iorwf	(dtoa@n+1)^0,w,c
  8543  0005AC  1038               	iorwf	(dtoa@n+2)^0,w,c
  8544  0005AE  1039               	iorwf	(dtoa@n+3)^0,w,c
  8545  0005B0  103A               	iorwf	(dtoa@n+4)^0,w,c
  8546  0005B2  103B               	iorwf	(dtoa@n+5)^0,w,c
  8547  0005B4  103C               	iorwf	(dtoa@n+6)^0,w,c
  8548  0005B6  103D               	iorwf	(dtoa@n+7)^0,w,c
  8549  0005B8  A4D8               	btfss	status,2,c
  8550  0005BA  EFE1  F002         	goto	u2221
  8551  0005BE  EFE3  F002         	goto	u2220
  8552  0005C2                     u2221:
  8553  0005C2  EF4B  F002         	goto	l3268
  8554  0005C6                     u2220:
  8555  0005C6  BE31               	btfsc	(dtoa@p+1)^0,7,c
  8556  0005C8  EFF0  F002         	goto	u2230
  8557  0005CC  5031               	movf	(dtoa@p+1)^0,w,c
  8558  0005CE  E106               	bnz	u2231
  8559  0005D0  0430               	decf	dtoa@p^0,w,c
  8560  0005D2  B0D8               	btfsc	status,0,c
  8561  0005D4  EFEE  F002         	goto	u2231
  8562  0005D8  EFF0  F002         	goto	u2230
  8563  0005DC                     u2231:
  8564  0005DC  EF4B  F002         	goto	l3268
  8565  0005E0                     u2230:
  8566  0005E0  BE33               	btfsc	(dtoa@w+1)^0,7,c
  8567  0005E2  EFFB  F002         	goto	u2241
  8568  0005E6  5033               	movf	(dtoa@w+1)^0,w,c
  8569  0005E8  E108               	bnz	u2240
  8570  0005EA  0432               	decf	dtoa@w^0,w,c
  8571  0005EC  A0D8               	btfss	status,0,c
  8572  0005EE  EFFB  F002         	goto	u2241
  8573  0005F2  EFFD  F002         	goto	u2240
  8574  0005F6                     u2241:
  8575  0005F6  EF05  F003         	goto	l3288
  8576  0005FA                     u2240:
  8577  0005FA  0100               	movlb	0	; () banked
  8578  0005FC  B3EF               	btfsc	_flags& (0+255),1,b
  8579  0005FE  EF03  F003         	goto	u2251
  8580  000602  EF05  F003         	goto	u2250
  8581  000606                     u2251:
  8582  000606  EF4B  F002         	goto	l3268
  8583  00060A                     u2250:
  8584  00060A                     l3288:
  8585                           
  8586                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  8587  00060A  5034               	movf	dtoa@s^0,w,c
  8588  00060C  1035               	iorwf	(dtoa@s+1)^0,w,c
  8589  00060E  A4D8               	btfss	status,2,c
  8590  000610  EF0C  F003         	goto	u2261
  8591  000614  EF0E  F003         	goto	u2260
  8592  000618                     u2261:
  8593  000618  EF16  F003         	goto	l3292
  8594  00061C                     u2260:
  8595  00061C  0100               	movlb	0	; () banked
  8596  00061E  A5EF               	btfss	_flags& (0+255),2,b
  8597  000620  EF14  F003         	goto	u2271
  8598  000624  EF16  F003         	goto	u2270
  8599  000628                     u2271:
  8600  000628  EF34  F003         	goto	l3302
  8601  00062C                     u2270:
  8602  00062C                     l3292:
  8603                           
  8604                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  8605  00062C  063E               	decf	dtoa@i^0,f,c
  8606  00062E  A0D8               	btfss	status,0,c
  8607  000630  063F               	decf	(dtoa@i+1)^0,f,c
  8608  000632                     
  8609                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  8610  000632  5034               	movf	dtoa@s^0,w,c
  8611  000634  1035               	iorwf	(dtoa@s+1)^0,w,c
  8612  000636  A4D8               	btfss	status,2,c
  8613  000638  EF20  F003         	goto	u2281
  8614  00063C  EF22  F003         	goto	u2280
  8615  000640                     u2281:
  8616  000640  EF28  F003         	goto	l3298
  8617  000644                     u2280:
  8618  000644  0E00               	movlw	0
  8619  000646  6E2F               	movwf	(_dtoa$1081+1)^0,c
  8620  000648  0E2B               	movlw	43
  8621  00064A  6E2E               	movwf	_dtoa$1081^0,c
  8622  00064C  EF2C  F003         	goto	l3300
  8623  000650                     l3298:
  8624  000650  0E00               	movlw	0
  8625  000652  6E2F               	movwf	(_dtoa$1081+1)^0,c
  8626  000654  0E2D               	movlw	45
  8627  000656  6E2E               	movwf	_dtoa$1081^0,c
  8628  000658                     l3300:
  8629  000658  0E7F               	movlw	low _dbuf
  8630  00065A  243E               	addwf	dtoa@i^0,w,c
  8631  00065C  6ED9               	movwf	fsr2l,c
  8632  00065E  0E01               	movlw	high _dbuf
  8633  000660  203F               	addwfc	(dtoa@i+1)^0,w,c
  8634  000662  6EDA               	movwf	fsr2h,c
  8635  000664  C02E  FFDF         	movff	_dtoa$1081,indf2
  8636  000668                     l3302:
  8637                           
  8638                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  8639  000668  C01C  F011         	movff	dtoa@fp,pad@fp
  8640  00066C  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  8641  000670  0E7F               	movlw	low _dbuf
  8642  000672  243E               	addwf	dtoa@i^0,w,c
  8643  000674  6E13               	movwf	pad@buf^0,c
  8644  000676  0E01               	movlw	high _dbuf
  8645  000678  203F               	addwfc	(dtoa@i+1)^0,w,c
  8646  00067A  6E14               	movwf	(pad@buf+1)^0,c
  8647  00067C  C032  F015         	movff	dtoa@w,pad@p
  8648  000680  C033  F016         	movff	dtoa@w+1,pad@p+1
  8649  000684  EC3C  F010         	call	_pad	;wreg free
  8650  000688  C011  F01C         	movff	?_pad,?_dtoa
  8651  00068C  C012  F01D         	movff	?_pad+1,?_dtoa+1
  8652  000690  0012               	return		;funcret
  8653  000692                     __end_of_dtoa:
  8654                           	opt callstack 0
  8655                           
  8656 ;; *************** function _abs *****************
  8657 ;; Defined at:
  8658 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  8659 ;; Parameters:    Size  Location     Type
  8660 ;;  a               2   18[COMRAM] int 
  8661 ;; Auto vars:     Size  Location     Type
  8662 ;;		None
  8663 ;; Return value:  Size  Location     Type
  8664 ;;                  2   18[COMRAM] int 
  8665 ;; Registers used:
  8666 ;;		wreg, status,2, status,0
  8667 ;; Tracked objects:
  8668 ;;		On entry : 0/0
  8669 ;;		On exit  : 0/0
  8670 ;;		Unchanged: 0/0
  8671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8672 ;;      Params:         2       0       0       0       0       0       0       0       0
  8673 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8674 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8675 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8676 ;;Total ram usage:        4 bytes
  8677 ;; Hardware stack levels used:    1
  8678 ;; Hardware stack levels required when called:    1
  8679 ;; This function calls:
  8680 ;;		Nothing
  8681 ;; This function is called by:
  8682 ;;		_dtoa
  8683 ;; This function uses a non-reentrant model
  8684 ;;
  8685                           
  8686                           	psect	text39
  8687  002CFC                     __ptext39:
  8688                           	opt callstack 0
  8689  002CFC                     _abs:
  8690                           	opt callstack 23
  8691  002CFC  BE14               	btfsc	(abs@a+1)^0,7,c
  8692  002CFE  EF8B  F016         	goto	u1950
  8693  002D02  5014               	movf	(abs@a+1)^0,w,c
  8694  002D04  E106               	bnz	u1951
  8695  002D06  0413               	decf	abs@a^0,w,c
  8696  002D08  B0D8               	btfsc	status,0,c
  8697  002D0A  EF89  F016         	goto	u1951
  8698  002D0E  EF8B  F016         	goto	u1950
  8699  002D12                     u1951:
  8700  002D12  EF99  F016         	goto	l1266
  8701  002D16                     u1950:
  8702  002D16  C013  F015         	movff	abs@a,??_abs
  8703  002D1A  C014  F016         	movff	abs@a+1,??_abs+1
  8704  002D1E  1E15               	comf	??_abs^0,f,c
  8705  002D20  1E16               	comf	(??_abs+1)^0,f,c
  8706  002D22  4A15               	infsnz	??_abs^0,f,c
  8707  002D24  2A16               	incf	(??_abs+1)^0,f,c
  8708  002D26  C015  F013         	movff	??_abs,?_abs
  8709  002D2A  C016  F014         	movff	??_abs+1,?_abs+1
  8710  002D2E  EF9D  F016         	goto	l1269
  8711  002D32                     l1266:
  8712  002D32  C013  F013         	movff	abs@a,?_abs
  8713  002D36  C014  F014         	movff	abs@a+1,?_abs+1
  8714  002D3A                     l1269:
  8715  002D3A  0012               	return		;funcret
  8716  002D3C                     __end_of_abs:
  8717                           	opt callstack 0
  8718                           
  8719 ;; *************** function ___aomod *****************
  8720 ;; Defined at:
  8721 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  8722 ;; Parameters:    Size  Location     Type
  8723 ;;  dividend        8    0[COMRAM] long long 
  8724 ;;  divisor         8    8[COMRAM] long long 
  8725 ;; Auto vars:     Size  Location     Type
  8726 ;;  sign            1   17[COMRAM] unsigned char 
  8727 ;;  counter         1   16[COMRAM] unsigned char 
  8728 ;; Return value:  Size  Location     Type
  8729 ;;                  8    0[COMRAM] long long 
  8730 ;; Registers used:
  8731 ;;		wreg, status,2, status,0
  8732 ;; Tracked objects:
  8733 ;;		On entry : 0/0
  8734 ;;		On exit  : 0/0
  8735 ;;		Unchanged: 0/0
  8736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8737 ;;      Params:        16       0       0       0       0       0       0       0       0
  8738 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8739 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8740 ;;      Totals:        18       0       0       0       0       0       0       0       0
  8741 ;;Total ram usage:       18 bytes
  8742 ;; Hardware stack levels used:    1
  8743 ;; Hardware stack levels required when called:    1
  8744 ;; This function calls:
  8745 ;;		Nothing
  8746 ;; This function is called by:
  8747 ;;		_dtoa
  8748 ;; This function uses a non-reentrant model
  8749 ;;
  8750                           
  8751                           	psect	text40
  8752  001498                     __ptext40:
  8753                           	opt callstack 0
  8754  001498                     ___aomod:
  8755                           	opt callstack 23
  8756  001498  0E00               	movlw	0
  8757  00149A  6E12               	movwf	___aomod@sign^0,c
  8758  00149C  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  8759  00149E  EF55  F00A         	goto	u2050
  8760  0014A2  EF53  F00A         	goto	u2051
  8761  0014A6                     u2051:
  8762  0014A6  EF67  F00A         	goto	l3190
  8763  0014AA                     u2050:
  8764  0014AA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8765  0014AC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8766  0014AE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8767  0014B0  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8768  0014B2  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8769  0014B4  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8770  0014B6  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8771  0014B8  6C01               	negf	___aomod@dividend^0,c
  8772  0014BA  0E00               	movlw	0
  8773  0014BC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8774  0014BE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8775  0014C0  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8776  0014C2  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8777  0014C4  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8778  0014C6  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8779  0014C8  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8780  0014CA  0E01               	movlw	1
  8781  0014CC  6E12               	movwf	___aomod@sign^0,c
  8782  0014CE                     l3190:
  8783  0014CE  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  8784  0014D0  EF6E  F00A         	goto	u2060
  8785  0014D4  EF6C  F00A         	goto	u2061
  8786  0014D8                     u2061:
  8787  0014D8  EF7E  F00A         	goto	l3194
  8788  0014DC                     u2060:
  8789  0014DC  1E10               	comf	(___aomod@divisor+7)^0,f,c
  8790  0014DE  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  8791  0014E0  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  8792  0014E2  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  8793  0014E4  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  8794  0014E6  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  8795  0014E8  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  8796  0014EA  6C09               	negf	___aomod@divisor^0,c
  8797  0014EC  0E00               	movlw	0
  8798  0014EE  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  8799  0014F0  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  8800  0014F2  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  8801  0014F4  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  8802  0014F6  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  8803  0014F8  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  8804  0014FA  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  8805  0014FC                     l3194:
  8806  0014FC  5009               	movf	___aomod@divisor^0,w,c
  8807  0014FE  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  8808  001500  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  8809  001502  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  8810  001504  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  8811  001506  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  8812  001508  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  8813  00150A  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  8814  00150C  B4D8               	btfsc	status,2,c
  8815  00150E  EF8B  F00A         	goto	u2071
  8816  001512  EF8D  F00A         	goto	u2070
  8817  001516                     u2071:
  8818  001516  EFD5  F00A         	goto	l3210
  8819  00151A                     u2070:
  8820  00151A  0E01               	movlw	1
  8821  00151C  6E11               	movwf	___aomod@counter^0,c
  8822  00151E  EF9B  F00A         	goto	l3200
  8823  001522                     l3198:
  8824  001522  90D8               	bcf	status,0,c
  8825  001524  3609               	rlcf	___aomod@divisor^0,f,c
  8826  001526  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  8827  001528  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  8828  00152A  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  8829  00152C  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  8830  00152E  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  8831  001530  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  8832  001532  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  8833  001534  2A11               	incf	___aomod@counter^0,f,c
  8834  001536                     l3200:
  8835  001536  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  8836  001538  EFA0  F00A         	goto	u2081
  8837  00153C  EFA2  F00A         	goto	u2080
  8838  001540                     u2081:
  8839  001540  EF91  F00A         	goto	l3198
  8840  001544                     u2080:
  8841  001544                     l3202:
  8842  001544  5009               	movf	___aomod@divisor^0,w,c
  8843  001546  5C01               	subwf	___aomod@dividend^0,w,c
  8844  001548  500A               	movf	(___aomod@divisor+1)^0,w,c
  8845  00154A  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  8846  00154C  500B               	movf	(___aomod@divisor+2)^0,w,c
  8847  00154E  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  8848  001550  500C               	movf	(___aomod@divisor+3)^0,w,c
  8849  001552  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  8850  001554  500D               	movf	(___aomod@divisor+4)^0,w,c
  8851  001556  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  8852  001558  500E               	movf	(___aomod@divisor+5)^0,w,c
  8853  00155A  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  8854  00155C  500F               	movf	(___aomod@divisor+6)^0,w,c
  8855  00155E  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  8856  001560  5010               	movf	(___aomod@divisor+7)^0,w,c
  8857  001562  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  8858  001564  A0D8               	btfss	status,0,c
  8859  001566  EFB7  F00A         	goto	u2091
  8860  00156A  EFB9  F00A         	goto	u2090
  8861  00156E                     u2091:
  8862  00156E  EFC9  F00A         	goto	l3206
  8863  001572                     u2090:
  8864  001572  5009               	movf	___aomod@divisor^0,w,c
  8865  001574  5E01               	subwf	___aomod@dividend^0,f,c
  8866  001576  500A               	movf	(___aomod@divisor+1)^0,w,c
  8867  001578  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  8868  00157A  500B               	movf	(___aomod@divisor+2)^0,w,c
  8869  00157C  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  8870  00157E  500C               	movf	(___aomod@divisor+3)^0,w,c
  8871  001580  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  8872  001582  500D               	movf	(___aomod@divisor+4)^0,w,c
  8873  001584  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  8874  001586  500E               	movf	(___aomod@divisor+5)^0,w,c
  8875  001588  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  8876  00158A  500F               	movf	(___aomod@divisor+6)^0,w,c
  8877  00158C  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  8878  00158E  5010               	movf	(___aomod@divisor+7)^0,w,c
  8879  001590  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  8880  001592                     l3206:
  8881  001592  90D8               	bcf	status,0,c
  8882  001594  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  8883  001596  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  8884  001598  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  8885  00159A  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  8886  00159C  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  8887  00159E  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  8888  0015A0  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  8889  0015A2  3209               	rrcf	___aomod@divisor^0,f,c
  8890  0015A4  2E11               	decfsz	___aomod@counter^0,f,c
  8891  0015A6  EFA2  F00A         	goto	l3202
  8892  0015AA                     l3210:
  8893  0015AA  5012               	movf	___aomod@sign^0,w,c
  8894  0015AC  B4D8               	btfsc	status,2,c
  8895  0015AE  EFDB  F00A         	goto	u2101
  8896  0015B2  EFDD  F00A         	goto	u2100
  8897  0015B6                     u2101:
  8898  0015B6  EFED  F00A         	goto	l3214
  8899  0015BA                     u2100:
  8900  0015BA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8901  0015BC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8902  0015BE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8903  0015C0  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8904  0015C2  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8905  0015C4  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8906  0015C6  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8907  0015C8  6C01               	negf	___aomod@dividend^0,c
  8908  0015CA  0E00               	movlw	0
  8909  0015CC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8910  0015CE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8911  0015D0  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8912  0015D2  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8913  0015D4  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8914  0015D6  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8915  0015D8  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8916  0015DA                     l3214:
  8917  0015DA  C001  F001         	movff	___aomod@dividend,?___aomod
  8918  0015DE  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8919  0015E2  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8920  0015E6  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8921  0015EA  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8922  0015EE  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8923  0015F2  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8924  0015F6  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8925  0015FA  0012               	return		;funcret
  8926  0015FC                     __end_of___aomod:
  8927                           	opt callstack 0
  8928                           
  8929 ;; *************** function ___aodiv *****************
  8930 ;; Defined at:
  8931 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  8932 ;; Parameters:    Size  Location     Type
  8933 ;;  dividend        8    0[COMRAM] long long 
  8934 ;;  divisor         8    8[COMRAM] long long 
  8935 ;; Auto vars:     Size  Location     Type
  8936 ;;  quotient        8   18[COMRAM] long long 
  8937 ;;  sign            1   17[COMRAM] unsigned char 
  8938 ;;  counter         1   16[COMRAM] unsigned char 
  8939 ;; Return value:  Size  Location     Type
  8940 ;;                  8    0[COMRAM] long long 
  8941 ;; Registers used:
  8942 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8943 ;; Tracked objects:
  8944 ;;		On entry : 0/0
  8945 ;;		On exit  : 0/0
  8946 ;;		Unchanged: 0/0
  8947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8948 ;;      Params:        16       0       0       0       0       0       0       0       0
  8949 ;;      Locals:        10       0       0       0       0       0       0       0       0
  8950 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8951 ;;      Totals:        26       0       0       0       0       0       0       0       0
  8952 ;;Total ram usage:       26 bytes
  8953 ;; Hardware stack levels used:    1
  8954 ;; Hardware stack levels required when called:    1
  8955 ;; This function calls:
  8956 ;;		Nothing
  8957 ;; This function is called by:
  8958 ;;		_dtoa
  8959 ;; This function uses a non-reentrant model
  8960 ;;
  8961                           
  8962                           	psect	text41
  8963  000EB2                     __ptext41:
  8964                           	opt callstack 0
  8965  000EB2                     ___aodiv:
  8966                           	opt callstack 23
  8967  000EB2  0E00               	movlw	0
  8968  000EB4  6E12               	movwf	___aodiv@sign^0,c
  8969  000EB6  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  8970  000EB8  EF62  F007         	goto	u1980
  8971  000EBC  EF60  F007         	goto	u1981
  8972  000EC0                     u1981:
  8973  000EC0  EF74  F007         	goto	l3146
  8974  000EC4                     u1980:
  8975  000EC4  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  8976  000EC6  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  8977  000EC8  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  8978  000ECA  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  8979  000ECC  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  8980  000ECE  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  8981  000ED0  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  8982  000ED2  6C09               	negf	___aodiv@divisor^0,c
  8983  000ED4  0E00               	movlw	0
  8984  000ED6  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  8985  000ED8  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  8986  000EDA  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  8987  000EDC  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  8988  000EDE  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  8989  000EE0  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  8990  000EE2  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  8991  000EE4  0E01               	movlw	1
  8992  000EE6  6E12               	movwf	___aodiv@sign^0,c
  8993  000EE8                     l3146:
  8994  000EE8  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  8995  000EEA  EF7B  F007         	goto	u1990
  8996  000EEE  EF79  F007         	goto	u1991
  8997  000EF2                     u1991:
  8998  000EF2  EF8D  F007         	goto	l3152
  8999  000EF6                     u1990:
  9000  000EF6  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  9001  000EF8  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  9002  000EFA  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  9003  000EFC  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  9004  000EFE  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  9005  000F00  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  9006  000F02  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  9007  000F04  6C01               	negf	___aodiv@dividend^0,c
  9008  000F06  0E00               	movlw	0
  9009  000F08  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  9010  000F0A  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  9011  000F0C  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  9012  000F0E  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  9013  000F10  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  9014  000F12  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  9015  000F14  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  9016  000F16  0E01               	movlw	1
  9017  000F18  1A12               	xorwf	___aodiv@sign^0,f,c
  9018  000F1A                     l3152:
  9019  000F1A  EE20  F013         	lfsr	2,___aodiv@quotient
  9020  000F1E  0E07               	movlw	7
  9021  000F20                     u2001:
  9022  000F20  6ADE               	clrf	postinc2,c
  9023  000F22  06E8               	decf	wreg,f,c
  9024  000F24  E2FD               	bc	u2001
  9025  000F26  5009               	movf	___aodiv@divisor^0,w,c
  9026  000F28  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  9027  000F2A  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  9028  000F2C  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  9029  000F2E  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  9030  000F30  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  9031  000F32  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  9032  000F34  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  9033  000F36  B4D8               	btfsc	status,2,c
  9034  000F38  EFA0  F007         	goto	u2011
  9035  000F3C  EFA2  F007         	goto	u2010
  9036  000F40                     u2011:
  9037  000F40  EFF4  F007         	goto	l3174
  9038  000F44                     u2010:
  9039  000F44  0E01               	movlw	1
  9040  000F46  6E11               	movwf	___aodiv@counter^0,c
  9041  000F48  EFB0  F007         	goto	l3160
  9042  000F4C                     l3158:
  9043  000F4C  90D8               	bcf	status,0,c
  9044  000F4E  3609               	rlcf	___aodiv@divisor^0,f,c
  9045  000F50  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  9046  000F52  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  9047  000F54  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  9048  000F56  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  9049  000F58  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  9050  000F5A  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  9051  000F5C  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  9052  000F5E  2A11               	incf	___aodiv@counter^0,f,c
  9053  000F60                     l3160:
  9054  000F60  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  9055  000F62  EFB5  F007         	goto	u2021
  9056  000F66  EFB7  F007         	goto	u2020
  9057  000F6A                     u2021:
  9058  000F6A  EFA6  F007         	goto	l3158
  9059  000F6E                     u2020:
  9060  000F6E                     l3162:
  9061  000F6E  90D8               	bcf	status,0,c
  9062  000F70  3613               	rlcf	___aodiv@quotient^0,f,c
  9063  000F72  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  9064  000F74  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  9065  000F76  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  9066  000F78  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  9067  000F7A  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  9068  000F7C  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  9069  000F7E  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  9070  000F80  5009               	movf	___aodiv@divisor^0,w,c
  9071  000F82  5C01               	subwf	___aodiv@dividend^0,w,c
  9072  000F84  500A               	movf	(___aodiv@divisor+1)^0,w,c
  9073  000F86  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  9074  000F88  500B               	movf	(___aodiv@divisor+2)^0,w,c
  9075  000F8A  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  9076  000F8C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  9077  000F8E  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  9078  000F90  500D               	movf	(___aodiv@divisor+4)^0,w,c
  9079  000F92  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  9080  000F94  500E               	movf	(___aodiv@divisor+5)^0,w,c
  9081  000F96  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  9082  000F98  500F               	movf	(___aodiv@divisor+6)^0,w,c
  9083  000F9A  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  9084  000F9C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  9085  000F9E  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  9086  000FA0  A0D8               	btfss	status,0,c
  9087  000FA2  EFD5  F007         	goto	u2031
  9088  000FA6  EFD7  F007         	goto	u2030
  9089  000FAA                     u2031:
  9090  000FAA  EFE8  F007         	goto	l3170
  9091  000FAE                     u2030:
  9092  000FAE  5009               	movf	___aodiv@divisor^0,w,c
  9093  000FB0  5E01               	subwf	___aodiv@dividend^0,f,c
  9094  000FB2  500A               	movf	(___aodiv@divisor+1)^0,w,c
  9095  000FB4  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  9096  000FB6  500B               	movf	(___aodiv@divisor+2)^0,w,c
  9097  000FB8  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  9098  000FBA  500C               	movf	(___aodiv@divisor+3)^0,w,c
  9099  000FBC  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  9100  000FBE  500D               	movf	(___aodiv@divisor+4)^0,w,c
  9101  000FC0  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  9102  000FC2  500E               	movf	(___aodiv@divisor+5)^0,w,c
  9103  000FC4  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  9104  000FC6  500F               	movf	(___aodiv@divisor+6)^0,w,c
  9105  000FC8  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  9106  000FCA  5010               	movf	(___aodiv@divisor+7)^0,w,c
  9107  000FCC  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  9108  000FCE  8013               	bsf	___aodiv@quotient^0,0,c
  9109  000FD0                     l3170:
  9110  000FD0  90D8               	bcf	status,0,c
  9111  000FD2  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  9112  000FD4  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  9113  000FD6  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  9114  000FD8  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  9115  000FDA  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  9116  000FDC  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  9117  000FDE  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  9118  000FE0  3209               	rrcf	___aodiv@divisor^0,f,c
  9119  000FE2  2E11               	decfsz	___aodiv@counter^0,f,c
  9120  000FE4  EFB7  F007         	goto	l3162
  9121  000FE8                     l3174:
  9122  000FE8  5012               	movf	___aodiv@sign^0,w,c
  9123  000FEA  B4D8               	btfsc	status,2,c
  9124  000FEC  EFFA  F007         	goto	u2041
  9125  000FF0  EFFC  F007         	goto	u2040
  9126  000FF4                     u2041:
  9127  000FF4  EF0C  F008         	goto	l3178
  9128  000FF8                     u2040:
  9129  000FF8  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  9130  000FFA  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  9131  000FFC  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  9132  000FFE  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  9133  001000  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  9134  001002  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  9135  001004  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  9136  001006  6C13               	negf	___aodiv@quotient^0,c
  9137  001008  0E00               	movlw	0
  9138  00100A  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  9139  00100C  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  9140  00100E  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  9141  001010  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  9142  001012  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  9143  001014  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  9144  001016  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  9145  001018                     l3178:
  9146  001018  C013  F001         	movff	___aodiv@quotient,?___aodiv
  9147  00101C  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  9148  001020  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  9149  001024  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  9150  001028  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  9151  00102C  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  9152  001030  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  9153  001034  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  9154  001038  0012               	return		;funcret
  9155  00103A                     __end_of___aodiv:
  9156                           	opt callstack 0
  9157                           
  9158 ;; *************** function _ctoa *****************
  9159 ;; Defined at:
  9160 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9161 ;; Parameters:    Size  Location     Type
  9162 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  9163 ;;		 -> sprintf@f(6), 
  9164 ;;  c               1   29[COMRAM] unsigned char 
  9165 ;; Auto vars:     Size  Location     Type
  9166 ;;  w               2   30[COMRAM] int 
  9167 ;;  l               2    0        int 
  9168 ;; Return value:  Size  Location     Type
  9169 ;;                  2   27[COMRAM] int 
  9170 ;; Registers used:
  9171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9172 ;; Tracked objects:
  9173 ;;		On entry : 0/0
  9174 ;;		On exit  : 0/0
  9175 ;;		Unchanged: 0/0
  9176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9177 ;;      Params:         3       0       0       0       0       0       0       0       0
  9178 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9179 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9180 ;;      Totals:         5       0       0       0       0       0       0       0       0
  9181 ;;Total ram usage:        5 bytes
  9182 ;; Hardware stack levels used:    1
  9183 ;; Hardware stack levels required when called:    5
  9184 ;; This function calls:
  9185 ;;		_pad
  9186 ;; This function is called by:
  9187 ;;		_vfpfcnvrt
  9188 ;; This function uses a non-reentrant model
  9189 ;;
  9190                           
  9191                           	psect	text42
  9192  0029E8                     __ptext42:
  9193                           	opt callstack 0
  9194  0029E8                     _ctoa:
  9195                           	opt callstack 20
  9196  0029E8                     
  9197                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  9198  0029E8  0100               	movlb	0	; () banked
  9199  0029EA  51EB               	movf	_width& (0+255),w,b
  9200  0029EC  11EC               	iorwf	(_width+1)& (0+255),w,b
  9201  0029EE  A4D8               	btfss	status,2,c
  9202  0029F0  EFFC  F014         	goto	u2131
  9203  0029F4  EFFE  F014         	goto	u2130
  9204  0029F8                     u2131:
  9205  0029F8  EF04  F015         	goto	l3234
  9206  0029FC                     u2130:
  9207  0029FC                     
  9208                           ; BSR set to: 0
  9209  0029FC  C0EB  F01F         	movff	_width,ctoa@w
  9210  002A00  C0EC  F020         	movff	_width+1,ctoa@w+1
  9211  002A04  EF0A  F015         	goto	l3236
  9212  002A08                     l3234:
  9213                           
  9214                           ; BSR set to: 0
  9215  002A08  0EFF               	movlw	255
  9216  002A0A  25EB               	addwf	_width& (0+255),w,b
  9217  002A0C  6E1F               	movwf	ctoa@w^0,c
  9218  002A0E  0EFF               	movlw	255
  9219  002A10  21EC               	addwfc	(_width+1)& (0+255),w,b
  9220  002A12  6E20               	movwf	(ctoa@w+1)^0,c
  9221  002A14                     l3236:
  9222                           
  9223                           ; BSR set to: 0
  9224                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  9225  002A14  C01E  F17F         	movff	ctoa@c,_dbuf
  9226  002A18                     
  9227                           ; BSR set to: 0
  9228                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  9229  002A18  0E00               	movlw	0
  9230  002A1A  0101               	movlb	1	; () banked
  9231  002A1C  6F80               	movwf	(_dbuf+1)& (0+255),b
  9232  002A1E                     
  9233                           ; BSR set to: 1
  9234                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  9235  002A1E  C01C  F011         	movff	ctoa@fp,pad@fp
  9236  002A22  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  9237  002A26  0E7F               	movlw	low _dbuf
  9238  002A28  6E13               	movwf	pad@buf^0,c
  9239  002A2A  0E01               	movlw	high _dbuf
  9240  002A2C  6E14               	movwf	(pad@buf+1)^0,c
  9241  002A2E  C01F  F015         	movff	ctoa@w,pad@p
  9242  002A32  C020  F016         	movff	ctoa@w+1,pad@p+1
  9243  002A36  EC3C  F010         	call	_pad	;wreg free
  9244  002A3A  C011  F01C         	movff	?_pad,?_ctoa
  9245  002A3E  C012  F01D         	movff	?_pad+1,?_ctoa+1
  9246  002A42  0012               	return		;funcret
  9247  002A44                     __end_of_ctoa:
  9248                           	opt callstack 0
  9249                           
  9250 ;; *************** function _pad *****************
  9251 ;; Defined at:
  9252 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9253 ;; Parameters:    Size  Location     Type
  9254 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  9255 ;;		 -> sprintf@f(6), 
  9256 ;;  buf             2   18[COMRAM] PTR unsigned char 
  9257 ;;		 -> dbuf(32), 
  9258 ;;  p               2   20[COMRAM] int 
  9259 ;; Auto vars:     Size  Location     Type
  9260 ;;  w               2   25[COMRAM] int 
  9261 ;;  i               2   23[COMRAM] int 
  9262 ;; Return value:  Size  Location     Type
  9263 ;;                  2   16[COMRAM] int 
  9264 ;; Registers used:
  9265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9266 ;; Tracked objects:
  9267 ;;		On entry : 0/0
  9268 ;;		On exit  : 0/0
  9269 ;;		Unchanged: 0/0
  9270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9271 ;;      Params:         6       0       0       0       0       0       0       0       0
  9272 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9273 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9274 ;;      Totals:        11       0       0       0       0       0       0       0       0
  9275 ;;Total ram usage:       11 bytes
  9276 ;; Hardware stack levels used:    1
  9277 ;; Hardware stack levels required when called:    4
  9278 ;; This function calls:
  9279 ;;		_fputc
  9280 ;;		_fputs
  9281 ;;		_strlen
  9282 ;; This function is called by:
  9283 ;;		_ctoa
  9284 ;;		_dtoa
  9285 ;; This function uses a non-reentrant model
  9286 ;;
  9287                           
  9288                           	psect	text43
  9289  002078                     __ptext43:
  9290                           	opt callstack 0
  9291  002078                     _pad:
  9292                           	opt callstack 20
  9293  002078                     
  9294                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  9295  002078  0100               	movlb	0	; () banked
  9296  00207A  A1EF               	btfss	_flags& (0+255),0,b
  9297  00207C  EF42  F010         	goto	u1911
  9298  002080  EF44  F010         	goto	u1910
  9299  002084                     u1911:
  9300  002084  EF4E  F010         	goto	l3106
  9301  002088                     u1910:
  9302  002088                     
  9303                           ; BSR set to: 0
  9304                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  9305  002088  C013  F00A         	movff	pad@buf,fputs@s
  9306  00208C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9307  002090  C011  F00C         	movff	pad@fp,fputs@fp
  9308  002094  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9309  002098  EC3C  F016         	call	_fputs	;wreg free
  9310  00209C                     l3106:
  9311                           
  9312                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  9313  00209C  BE16               	btfsc	(pad@p+1)^0,7,c
  9314  00209E  EF53  F010         	goto	u1921
  9315  0020A2  EF55  F010         	goto	u1920
  9316  0020A6                     u1921:
  9317  0020A6  EF5B  F010         	goto	l3110
  9318  0020AA                     u1920:
  9319  0020AA  C015  F01A         	movff	pad@p,pad@w
  9320  0020AE  C016  F01B         	movff	pad@p+1,pad@w+1
  9321  0020B2  EF5F  F010         	goto	l501
  9322  0020B6                     l3110:
  9323  0020B6  0E00               	movlw	0
  9324  0020B8  6E1B               	movwf	(pad@w+1)^0,c
  9325  0020BA  0E00               	movlw	0
  9326  0020BC  6E1A               	movwf	pad@w^0,c
  9327  0020BE                     l501:
  9328                           
  9329                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  9330  0020BE  0E00               	movlw	0
  9331  0020C0  6E19               	movwf	(pad@i+1)^0,c
  9332  0020C2  0E00               	movlw	0
  9333  0020C4  6E18               	movwf	pad@i^0,c
  9334                           
  9335                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9336  0020C6  EF71  F010         	goto	l3116
  9337  0020CA                     l3112:
  9338                           
  9339                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  9340  0020CA  0E00               	movlw	0
  9341  0020CC  6E02               	movwf	(fputc@c+1)^0,c
  9342  0020CE  0E20               	movlw	32
  9343  0020D0  6E01               	movwf	fputc@c^0,c
  9344  0020D2  C011  F003         	movff	pad@fp,fputc@fp
  9345  0020D6  C012  F004         	movff	pad@fp+1,fputc@fp+1
  9346  0020DA  EC73  F00F         	call	_fputc	;wreg free
  9347  0020DE                     
  9348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  9349  0020DE  4A18               	infsnz	pad@i^0,f,c
  9350  0020E0  2A19               	incf	(pad@i+1)^0,f,c
  9351  0020E2                     l3116:
  9352                           
  9353                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9354  0020E2  501A               	movf	pad@w^0,w,c
  9355  0020E4  5C18               	subwf	pad@i^0,w,c
  9356  0020E6  5019               	movf	(pad@i+1)^0,w,c
  9357  0020E8  0A80               	xorlw	128
  9358  0020EA  6E17               	movwf	??_pad^0,c
  9359  0020EC  501B               	movf	(pad@w+1)^0,w,c
  9360  0020EE  0A80               	xorlw	128
  9361  0020F0  5817               	subwfb	??_pad^0,w,c
  9362  0020F2  A0D8               	btfss	status,0,c
  9363  0020F4  EF7E  F010         	goto	u1931
  9364  0020F8  EF80  F010         	goto	u1930
  9365  0020FC                     u1931:
  9366  0020FC  EF65  F010         	goto	l3112
  9367  002100                     u1930:
  9368  002100                     
  9369                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  9370  002100  0100               	movlb	0	; () banked
  9371  002102  B1EF               	btfsc	_flags& (0+255),0,b
  9372  002104  EF86  F010         	goto	u1941
  9373  002108  EF88  F010         	goto	u1940
  9374  00210C                     u1941:
  9375  00210C  EF92  F010         	goto	l3120
  9376  002110                     u1940:
  9377  002110                     
  9378                           ; BSR set to: 0
  9379                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  9380  002110  C013  F00A         	movff	pad@buf,fputs@s
  9381  002114  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9382  002118  C011  F00C         	movff	pad@fp,fputs@fp
  9383  00211C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9384  002120  EC3C  F016         	call	_fputs	;wreg free
  9385  002124                     l3120:
  9386                           
  9387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  9388  002124  C013  F001         	movff	pad@buf,strlen@s
  9389  002128  C014  F002         	movff	pad@buf+1,strlen@s+1
  9390  00212C  ECD8  F016         	call	_strlen	;wreg free
  9391  002130  501A               	movf	pad@w^0,w,c
  9392  002132  2401               	addwf	?_strlen^0,w,c
  9393  002134  6E11               	movwf	?_pad^0,c
  9394  002136  501B               	movf	(pad@w+1)^0,w,c
  9395  002138  2002               	addwfc	(?_strlen+1)^0,w,c
  9396  00213A  6E12               	movwf	(?_pad+1)^0,c
  9397  00213C  0012               	return		;funcret
  9398  00213E                     __end_of_pad:
  9399                           	opt callstack 0
  9400                           
  9401 ;; *************** function _strlen *****************
  9402 ;; Defined at:
  9403 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  9404 ;; Parameters:    Size  Location     Type
  9405 ;;  s               2    0[COMRAM] PTR const unsigned char 
  9406 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(32), dameDatosSistema@diasRegar(50), 
  9407 ;; Auto vars:     Size  Location     Type
  9408 ;;  a               2    2[COMRAM] PTR const unsigned char 
  9409 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(32), dameDatosSistema@diasRegar(50), 
  9410 ;; Return value:  Size  Location     Type
  9411 ;;                  2    0[COMRAM] unsigned int 
  9412 ;; Registers used:
  9413 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9414 ;; Tracked objects:
  9415 ;;		On entry : 0/0
  9416 ;;		On exit  : 0/0
  9417 ;;		Unchanged: 0/0
  9418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9419 ;;      Params:         2       0       0       0       0       0       0       0       0
  9420 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9421 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9422 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9423 ;;Total ram usage:        4 bytes
  9424 ;; Hardware stack levels used:    1
  9425 ;; Hardware stack levels required when called:    1
  9426 ;; This function calls:
  9427 ;;		Nothing
  9428 ;; This function is called by:
  9429 ;;		_pad
  9430 ;;		_stoa
  9431 ;; This function uses a non-reentrant model
  9432 ;;
  9433                           
  9434                           	psect	text44
  9435  002DB0                     __ptext44:
  9436                           	opt callstack 0
  9437  002DB0                     _strlen:
  9438                           	opt callstack 23
  9439  002DB0  C001  F003         	movff	strlen@s,strlen@a
  9440  002DB4  C002  F004         	movff	strlen@s+1,strlen@a+1
  9441  002DB8  EFE0  F016         	goto	l3096
  9442  002DBC                     l3094:
  9443  002DBC  4A01               	infsnz	strlen@s^0,f,c
  9444  002DBE  2A02               	incf	(strlen@s+1)^0,f,c
  9445  002DC0                     l3096:
  9446  002DC0  C001  FFD9         	movff	strlen@s,fsr2l
  9447  002DC4  C002  FFDA         	movff	strlen@s+1,fsr2h
  9448  002DC8  50DF               	movf	indf2,w,c
  9449  002DCA  A4D8               	btfss	status,2,c
  9450  002DCC  EFEA  F016         	goto	u1901
  9451  002DD0  EFEC  F016         	goto	u1900
  9452  002DD4                     u1901:
  9453  002DD4  EFDE  F016         	goto	l3094
  9454  002DD8                     u1900:
  9455  002DD8  5003               	movf	strlen@a^0,w,c
  9456  002DDA  5C01               	subwf	strlen@s^0,w,c
  9457  002DDC  6E01               	movwf	?_strlen^0,c
  9458  002DDE  5004               	movf	(strlen@a+1)^0,w,c
  9459  002DE0  5802               	subwfb	(strlen@s+1)^0,w,c
  9460  002DE2  6E02               	movwf	(?_strlen+1)^0,c
  9461  002DE4  0012               	return		;funcret
  9462  002DE6                     __end_of_strlen:
  9463                           	opt callstack 0
  9464                           
  9465 ;; *************** function _fputs *****************
  9466 ;; Defined at:
  9467 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  9468 ;; Parameters:    Size  Location     Type
  9469 ;;  s               2    9[COMRAM] PTR const unsigned char 
  9470 ;;		 -> dbuf(32), 
  9471 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  9472 ;;		 -> sprintf@f(6), 
  9473 ;; Auto vars:     Size  Location     Type
  9474 ;;  i               2   14[COMRAM] int 
  9475 ;;  c               1   13[COMRAM] unsigned char 
  9476 ;; Return value:  Size  Location     Type
  9477 ;;                  2    9[COMRAM] int 
  9478 ;; Registers used:
  9479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9480 ;; Tracked objects:
  9481 ;;		On entry : 0/0
  9482 ;;		On exit  : 0/0
  9483 ;;		Unchanged: 0/0
  9484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9485 ;;      Params:         4       0       0       0       0       0       0       0       0
  9486 ;;      Locals:         3       0       0       0       0       0       0       0       0
  9487 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9488 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9489 ;;Total ram usage:        7 bytes
  9490 ;; Hardware stack levels used:    1
  9491 ;; Hardware stack levels required when called:    3
  9492 ;; This function calls:
  9493 ;;		_fputc
  9494 ;; This function is called by:
  9495 ;;		_pad
  9496 ;; This function uses a non-reentrant model
  9497 ;;
  9498                           
  9499                           	psect	text45
  9500  002C78                     __ptext45:
  9501                           	opt callstack 0
  9502  002C78                     _fputs:
  9503                           	opt callstack 20
  9504  002C78  0E00               	movlw	0
  9505  002C7A  6E10               	movwf	(fputs@i+1)^0,c
  9506  002C7C  0E00               	movlw	0
  9507  002C7E  6E0F               	movwf	fputs@i^0,c
  9508  002C80  EF4D  F016         	goto	l3090
  9509  002C84                     l3086:
  9510  002C84  C00E  F001         	movff	fputs@c,fputc@c
  9511  002C88  6A02               	clrf	(fputc@c+1)^0,c
  9512  002C8A  C00C  F003         	movff	fputs@fp,fputc@fp
  9513  002C8E  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  9514  002C92  EC73  F00F         	call	_fputc	;wreg free
  9515  002C96  4A0F               	infsnz	fputs@i^0,f,c
  9516  002C98  2A10               	incf	(fputs@i+1)^0,f,c
  9517  002C9A                     l3090:
  9518  002C9A  500F               	movf	fputs@i^0,w,c
  9519  002C9C  240A               	addwf	fputs@s^0,w,c
  9520  002C9E  6ED9               	movwf	fsr2l,c
  9521  002CA0  5010               	movf	(fputs@i+1)^0,w,c
  9522  002CA2  200B               	addwfc	(fputs@s+1)^0,w,c
  9523  002CA4  6EDA               	movwf	fsr2h,c
  9524  002CA6  50DF               	movf	indf2,w,c
  9525  002CA8  6E0E               	movwf	fputs@c^0,c
  9526  002CAA  500E               	movf	fputs@c^0,w,c
  9527  002CAC  A4D8               	btfss	status,2,c
  9528  002CAE  EF5B  F016         	goto	u1891
  9529  002CB2  EF5D  F016         	goto	u1890
  9530  002CB6                     u1891:
  9531  002CB6  EF42  F016         	goto	l3086
  9532  002CBA                     u1890:
  9533  002CBA  0012               	return		;funcret
  9534  002CBC                     __end_of_fputs:
  9535                           	opt callstack 0
  9536                           
  9537 ;; *************** function _fputc *****************
  9538 ;; Defined at:
  9539 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  9540 ;; Parameters:    Size  Location     Type
  9541 ;;  c               2    0[COMRAM] int 
  9542 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  9543 ;;		 -> sprintf@f(6), 
  9544 ;; Auto vars:     Size  Location     Type
  9545 ;;		None
  9546 ;; Return value:  Size  Location     Type
  9547 ;;                  2    0[COMRAM] int 
  9548 ;; Registers used:
  9549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9550 ;; Tracked objects:
  9551 ;;		On entry : 0/0
  9552 ;;		On exit  : 0/0
  9553 ;;		Unchanged: 0/0
  9554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9555 ;;      Params:         4       0       0       0       0       0       0       0       0
  9556 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9557 ;;      Temps:          5       0       0       0       0       0       0       0       0
  9558 ;;      Totals:         9       0       0       0       0       0       0       0       0
  9559 ;;Total ram usage:        9 bytes
  9560 ;; Hardware stack levels used:    1
  9561 ;; Hardware stack levels required when called:    2
  9562 ;; This function calls:
  9563 ;;		_putch
  9564 ;; This function is called by:
  9565 ;;		_pad
  9566 ;;		_stoa
  9567 ;;		_vfpfcnvrt
  9568 ;;		_fputs
  9569 ;; This function uses a non-reentrant model
  9570 ;;
  9571                           
  9572                           	psect	text46
  9573  001EE6                     __ptext46:
  9574                           	opt callstack 0
  9575  001EE6                     _fputc:
  9576                           	opt callstack 22
  9577  001EE6  5003               	movf	fputc@fp^0,w,c
  9578  001EE8  1004               	iorwf	(fputc@fp+1)^0,w,c
  9579  001EEA  B4D8               	btfsc	status,2,c
  9580  001EEC  EF7A  F00F         	goto	u1851
  9581  001EF0  EF7C  F00F         	goto	u1850
  9582  001EF4                     u1851:
  9583  001EF4  EF85  F00F         	goto	l3074
  9584  001EF8                     u1850:
  9585  001EF8  5003               	movf	fputc@fp^0,w,c
  9586  001EFA  1004               	iorwf	(fputc@fp+1)^0,w,c
  9587  001EFC  A4D8               	btfss	status,2,c
  9588  001EFE  EF83  F00F         	goto	u1861
  9589  001F02  EF85  F00F         	goto	u1860
  9590  001F06                     u1861:
  9591  001F06  EF8A  F00F         	goto	l3076
  9592  001F0A                     u1860:
  9593  001F0A                     l3074:
  9594  001F0A  5001               	movf	fputc@c^0,w,c
  9595  001F0C  ECF0  F017         	call	_putch
  9596  001F10  EFD7  F00F         	goto	l1326
  9597  001F14                     l3076:
  9598  001F14  EE20 F004          	lfsr	2,4
  9599  001F18  5003               	movf	fputc@fp^0,w,c
  9600  001F1A  26D9               	addwf	fsr2l,f,c
  9601  001F1C  5004               	movf	(fputc@fp+1)^0,w,c
  9602  001F1E  22DA               	addwfc	fsr2h,f,c
  9603  001F20  50DE               	movf	postinc2,w,c
  9604  001F22  10DE               	iorwf	postinc2,w,c
  9605  001F24  B4D8               	btfsc	status,2,c
  9606  001F26  EF97  F00F         	goto	u1871
  9607  001F2A  EF99  F00F         	goto	u1870
  9608  001F2E                     u1871:
  9609  001F2E  EFB4  F00F         	goto	l3080
  9610  001F32                     u1870:
  9611  001F32  EE20 F004          	lfsr	2,4
  9612  001F36  5003               	movf	fputc@fp^0,w,c
  9613  001F38  26D9               	addwf	fsr2l,f,c
  9614  001F3A  5004               	movf	(fputc@fp+1)^0,w,c
  9615  001F3C  22DA               	addwfc	fsr2h,f,c
  9616  001F3E  EE10 F002          	lfsr	1,2
  9617  001F42  5003               	movf	fputc@fp^0,w,c
  9618  001F44  26E1               	addwf	fsr1l,f,c
  9619  001F46  5004               	movf	(fputc@fp+1)^0,w,c
  9620  001F48  22E2               	addwfc	fsr1h,f,c
  9621  001F4A  50DE               	movf	postinc2,w,c
  9622  001F4C  5CE6               	subwf	postinc1,w,c
  9623  001F4E  50E6               	movf	postinc1,w,c
  9624  001F50  0A80               	xorlw	128
  9625  001F52  6E09               	movwf	(??_fputc+4)^0,c
  9626  001F54  50DE               	movf	postinc2,w,c
  9627  001F56  0A80               	xorlw	128
  9628  001F58  5809               	subwfb	(??_fputc+4)^0,w,c
  9629  001F5A  B0D8               	btfsc	status,0,c
  9630  001F5C  EFB2  F00F         	goto	u1881
  9631  001F60  EFB4  F00F         	goto	u1880
  9632  001F64                     u1881:
  9633  001F64  EFD7  F00F         	goto	l1326
  9634  001F68                     u1880:
  9635  001F68                     l3080:
  9636  001F68  EE20 F002          	lfsr	2,2
  9637  001F6C  5003               	movf	fputc@fp^0,w,c
  9638  001F6E  26D9               	addwf	fsr2l,f,c
  9639  001F70  5004               	movf	(fputc@fp+1)^0,w,c
  9640  001F72  22DA               	addwfc	fsr2h,f,c
  9641  001F74  CFDE F005          	movff	postinc2,??_fputc
  9642  001F78  CFDD F006          	movff	postdec2,??_fputc+1
  9643  001F7C  C003  FFD9         	movff	fputc@fp,fsr2l
  9644  001F80  C004  FFDA         	movff	fputc@fp+1,fsr2h
  9645  001F84  CFDE F007          	movff	postinc2,??_fputc+2
  9646  001F88  CFDD F008          	movff	postdec2,??_fputc+3
  9647  001F8C  5005               	movf	??_fputc^0,w,c
  9648  001F8E  2407               	addwf	(??_fputc+2)^0,w,c
  9649  001F90  6ED9               	movwf	fsr2l,c
  9650  001F92  5006               	movf	(??_fputc+1)^0,w,c
  9651  001F94  2008               	addwfc	(??_fputc+3)^0,w,c
  9652  001F96  6EDA               	movwf	fsr2h,c
  9653  001F98  C001  FFDF         	movff	fputc@c,indf2
  9654  001F9C  EE20 F002          	lfsr	2,2
  9655  001FA0  5003               	movf	fputc@fp^0,w,c
  9656  001FA2  26D9               	addwf	fsr2l,f,c
  9657  001FA4  5004               	movf	(fputc@fp+1)^0,w,c
  9658  001FA6  22DA               	addwfc	fsr2h,f,c
  9659  001FA8  2ADE               	incf	postinc2,f,c
  9660  001FAA  0E00               	movlw	0
  9661  001FAC  22DD               	addwfc	postdec2,f,c
  9662  001FAE                     l1326:
  9663  001FAE  0012               	return		;funcret
  9664  001FB0                     __end_of_fputc:
  9665                           	opt callstack 0
  9666                           
  9667 ;; *************** function _putch *****************
  9668 ;; Defined at:
  9669 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  9670 ;; Parameters:    Size  Location     Type
  9671 ;;  c               1    wreg     unsigned char 
  9672 ;; Auto vars:     Size  Location     Type
  9673 ;;  c               1    0[COMRAM] unsigned char 
  9674 ;; Return value:  Size  Location     Type
  9675 ;;                  1    wreg      void 
  9676 ;; Registers used:
  9677 ;;		wreg
  9678 ;; Tracked objects:
  9679 ;;		On entry : 0/0
  9680 ;;		On exit  : 0/0
  9681 ;;		Unchanged: 0/0
  9682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9683 ;;      Params:         0       0       0       0       0       0       0       0       0
  9684 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9685 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9686 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9687 ;;Total ram usage:        0 bytes
  9688 ;; Hardware stack levels used:    1
  9689 ;; Hardware stack levels required when called:    1
  9690 ;; This function calls:
  9691 ;;		Nothing
  9692 ;; This function is called by:
  9693 ;;		_fputc
  9694 ;; This function uses a non-reentrant model
  9695 ;;
  9696                           
  9697                           	psect	text47
  9698  002FE0                     __ptext47:
  9699                           	opt callstack 0
  9700  002FE0                     _putch:
  9701                           	opt callstack 22
  9702  002FE0  0012               	return		;funcret
  9703  002FE2                     __end_of_putch:
  9704                           	opt callstack 0
  9705                           
  9706 ;; *************** function _atoi *****************
  9707 ;; Defined at:
  9708 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  9709 ;; Parameters:    Size  Location     Type
  9710 ;;  s               2    7[COMRAM] PTR const unsigned char 
  9711 ;;		 -> STR_41(45), STR_40(29), STR_39(32), STR_38(45), 
  9712 ;;		 -> STR_37(29), STR_36(32), STR_34(53), STR_19(51), 
  9713 ;;		 -> STR_12(9), 
  9714 ;; Auto vars:     Size  Location     Type
  9715 ;;  n               2   20[COMRAM] int 
  9716 ;;  neg             2   13[COMRAM] int 
  9717 ;; Return value:  Size  Location     Type
  9718 ;;                  2    7[COMRAM] int 
  9719 ;; Registers used:
  9720 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9721 ;; Tracked objects:
  9722 ;;		On entry : 0/0
  9723 ;;		On exit  : 0/0
  9724 ;;		Unchanged: 0/0
  9725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9726 ;;      Params:         2       0       0       0       0       0       0       0       0
  9727 ;;      Locals:         9       0       0       0       0       0       0       0       0
  9728 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9729 ;;      Totals:        15       0       0       0       0       0       0       0       0
  9730 ;;Total ram usage:       15 bytes
  9731 ;; Hardware stack levels used:    1
  9732 ;; Hardware stack levels required when called:    2
  9733 ;; This function calls:
  9734 ;;		___wmul
  9735 ;;		_isdigit
  9736 ;;		_isspace
  9737 ;; This function is called by:
  9738 ;;		_vfpfcnvrt
  9739 ;; This function uses a non-reentrant model
  9740 ;;
  9741                           
  9742                           	psect	text48
  9743  000D22                     __ptext48:
  9744                           	opt callstack 0
  9745  000D22                     _atoi:
  9746                           	opt callstack 23
  9747  000D22  0E00               	movlw	0
  9748  000D24  6E16               	movwf	(atoi@n+1)^0,c
  9749  000D26  0E00               	movlw	0
  9750  000D28  6E15               	movwf	atoi@n^0,c
  9751  000D2A  0E00               	movlw	0
  9752  000D2C  6E0F               	movwf	(atoi@neg+1)^0,c
  9753  000D2E  0E00               	movlw	0
  9754  000D30  6E0E               	movwf	atoi@neg^0,c
  9755  000D32  EF9D  F006         	goto	l3352
  9756  000D36                     l3350:
  9757  000D36  4A08               	infsnz	atoi@s^0,f,c
  9758  000D38  2A09               	incf	(atoi@s+1)^0,f,c
  9759  000D3A                     l3352:
  9760  000D3A  0E01               	movlw	1
  9761  000D3C  6E14               	movwf	_atoi$1565^0,c
  9762  000D3E  C008  FFF6         	movff	atoi@s,tblptrl
  9763  000D42  C009  FFF7         	movff	atoi@s+1,tblptrh
  9764  000D46                     	if	0	;tblptru may be non-zero
  9765  000D46                     	endif
  9766  000D46                     	if	0	;tblptru may be non-zero
  9767  000D46                     	endif
  9768  000D46  0008               	tblrd		*
  9769  000D48  50F5               	movf	tablat,w,c
  9770  000D4A  0A20               	xorlw	32
  9771  000D4C  B4D8               	btfsc	status,2,c
  9772  000D4E  EFAB  F006         	goto	u2381
  9773  000D52  EFAD  F006         	goto	u2380
  9774  000D56                     u2381:
  9775  000D56  EFCA  F006         	goto	l3360
  9776  000D5A                     u2380:
  9777  000D5A  0EF7               	movlw	247
  9778  000D5C  6E0A               	movwf	??_atoi^0,c
  9779  000D5E  0EFF               	movlw	255
  9780  000D60  6E0B               	movwf	(??_atoi+1)^0,c
  9781  000D62  C008  FFF6         	movff	atoi@s,tblptrl
  9782  000D66  C009  FFF7         	movff	atoi@s+1,tblptrh
  9783  000D6A                     	if	0	;tblptru may be non-zero
  9784  000D6A                     	endif
  9785  000D6A                     	if	0	;tblptru may be non-zero
  9786  000D6A                     	endif
  9787  000D6A  0008               	tblrd		*
  9788  000D6C  50F5               	movf	tablat,w,c
  9789  000D6E  6E0C               	movwf	(??_atoi+2)^0,c
  9790  000D70  6A0D               	clrf	(??_atoi+3)^0,c
  9791  000D72  500A               	movf	??_atoi^0,w,c
  9792  000D74  260C               	addwf	(??_atoi+2)^0,f,c
  9793  000D76  500B               	movf	(??_atoi+1)^0,w,c
  9794  000D78  220D               	addwfc	(??_atoi+3)^0,f,c
  9795  000D7A  500D               	movf	(??_atoi+3)^0,w,c
  9796  000D7C  E109               	bnz	u2390
  9797  000D7E  0E05               	movlw	5
  9798  000D80  5C0C               	subwf	(??_atoi+2)^0,w,c
  9799  000D82  A0D8               	btfss	status,0,c
  9800  000D84  EFC6  F006         	goto	u2391
  9801  000D88  EFC8  F006         	goto	u2390
  9802  000D8C                     u2391:
  9803  000D8C  EFCA  F006         	goto	l3360
  9804  000D90                     u2390:
  9805  000D90  0E00               	movlw	0
  9806  000D92  6E14               	movwf	_atoi$1565^0,c
  9807  000D94                     l3360:
  9808  000D94  C014  F010         	movff	_atoi$1565,_atoi$1564
  9809  000D98  6A11               	clrf	(_atoi$1564+1)^0,c
  9810  000D9A  5010               	movf	_atoi$1564^0,w,c
  9811  000D9C  1011               	iorwf	(_atoi$1564+1)^0,w,c
  9812  000D9E  A4D8               	btfss	status,2,c
  9813  000DA0  EFD4  F006         	goto	u2401
  9814  000DA4  EFD6  F006         	goto	u2400
  9815  000DA8                     u2401:
  9816  000DA8  EF9B  F006         	goto	l3350
  9817  000DAC                     u2400:
  9818  000DAC  EFE0  F006         	goto	l3370
  9819  000DB0                     l3366:
  9820  000DB0  0E00               	movlw	0
  9821  000DB2  6E0F               	movwf	(atoi@neg+1)^0,c
  9822  000DB4  0E01               	movlw	1
  9823  000DB6  6E0E               	movwf	atoi@neg^0,c
  9824  000DB8                     l3368:
  9825  000DB8  4A08               	infsnz	atoi@s^0,f,c
  9826  000DBA  2A09               	incf	(atoi@s+1)^0,f,c
  9827  000DBC  EF15  F007         	goto	l3376
  9828  000DC0                     l3370:
  9829  000DC0  C008  FFF6         	movff	atoi@s,tblptrl
  9830  000DC4  C009  FFF7         	movff	atoi@s+1,tblptrh
  9831  000DC8                     	if	0	;tblptru may be non-zero
  9832  000DC8                     	endif
  9833  000DC8                     	if	0	;tblptru may be non-zero
  9834  000DC8                     	endif
  9835  000DC8  0008               	tblrd		*
  9836  000DCA  50F5               	movf	tablat,w,c
  9837  000DCC  6E0A               	movwf	??_atoi^0,c
  9838  000DCE  6A0B               	clrf	(??_atoi+1)^0,c
  9839                           
  9840                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9841                           ; Switch size 1, requested type "simple"
  9842                           ; Number of cases is 1, Range of values is 0 to 0
  9843                           ; switch strategies available:
  9844                           ; Name         Instructions Cycles
  9845                           ; simple_byte            4     3 (average)
  9846                           ;	Chosen strategy is simple_byte
  9847  000DD0  500B               	movf	(??_atoi+1)^0,w,c
  9848  000DD2  0A00               	xorlw	0	; case 0
  9849  000DD4  B4D8               	btfsc	status,2,c
  9850  000DD6  EFEF  F006         	goto	l4796
  9851  000DDA  EF15  F007         	goto	l3376
  9852  000DDE                     l4796:
  9853                           
  9854                           ; Switch size 1, requested type "simple"
  9855                           ; Number of cases is 2, Range of values is 43 to 45
  9856                           ; switch strategies available:
  9857                           ; Name         Instructions Cycles
  9858                           ; simple_byte            7     4 (average)
  9859                           ;	Chosen strategy is simple_byte
  9860  000DDE  500A               	movf	??_atoi^0,w,c
  9861  000DE0  0A2B               	xorlw	43	; case 43
  9862  000DE2  B4D8               	btfsc	status,2,c
  9863  000DE4  EFDC  F006         	goto	l3368
  9864  000DE8  0A06               	xorlw	6	; case 45
  9865  000DEA  B4D8               	btfsc	status,2,c
  9866  000DEC  EFD8  F006         	goto	l3366
  9867  000DF0  EF15  F007         	goto	l3376
  9868  000DF4                     l3372:
  9869  000DF4  C015  F001         	movff	atoi@n,___wmul@multiplier
  9870  000DF8  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  9871  000DFC  0E00               	movlw	0
  9872  000DFE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9873  000E00  0E0A               	movlw	10
  9874  000E02  6E03               	movwf	___wmul@multiplicand^0,c
  9875  000E04  EC61  F017         	call	___wmul	;wreg free
  9876  000E08  C008  FFF6         	movff	atoi@s,tblptrl
  9877  000E0C  C009  FFF7         	movff	atoi@s+1,tblptrh
  9878  000E10                     	if	0	;tblptru may be non-zero
  9879  000E10                     	endif
  9880  000E10                     	if	0	;tblptru may be non-zero
  9881  000E10                     	endif
  9882  000E10  0008               	tblrd		*
  9883  000E12  50F5               	movf	tablat,w,c
  9884  000E14  5E01               	subwf	?___wmul^0,f,c
  9885  000E16  0E00               	movlw	0
  9886  000E18  5A02               	subwfb	(?___wmul+1)^0,f,c
  9887  000E1A  0E30               	movlw	48
  9888  000E1C  2401               	addwf	?___wmul^0,w,c
  9889  000E1E  6E15               	movwf	atoi@n^0,c
  9890  000E20  0E00               	movlw	0
  9891  000E22  2002               	addwfc	(?___wmul+1)^0,w,c
  9892  000E24  6E16               	movwf	(atoi@n+1)^0,c
  9893  000E26  EFDC  F006         	goto	l3368
  9894  000E2A                     l3376:
  9895  000E2A  0ED0               	movlw	208
  9896  000E2C  6E0A               	movwf	??_atoi^0,c
  9897  000E2E  0EFF               	movlw	255
  9898  000E30  6E0B               	movwf	(??_atoi+1)^0,c
  9899  000E32  C008  FFF6         	movff	atoi@s,tblptrl
  9900  000E36  C009  FFF7         	movff	atoi@s+1,tblptrh
  9901  000E3A                     	if	0	;tblptru may be non-zero
  9902  000E3A                     	endif
  9903  000E3A                     	if	0	;tblptru may be non-zero
  9904  000E3A                     	endif
  9905  000E3A  0008               	tblrd		*
  9906  000E3C  50F5               	movf	tablat,w,c
  9907  000E3E  6E0C               	movwf	(??_atoi+2)^0,c
  9908  000E40  6A0D               	clrf	(??_atoi+3)^0,c
  9909  000E42  500A               	movf	??_atoi^0,w,c
  9910  000E44  260C               	addwf	(??_atoi+2)^0,f,c
  9911  000E46  500B               	movf	(??_atoi+1)^0,w,c
  9912  000E48  220D               	addwfc	(??_atoi+3)^0,f,c
  9913  000E4A  500D               	movf	(??_atoi+3)^0,w,c
  9914  000E4C  E10A               	bnz	u2410
  9915  000E4E  0E0A               	movlw	10
  9916  000E50  5C0C               	subwf	(??_atoi+2)^0,w,c
  9917  000E52  A0D8               	btfss	status,0,c
  9918  000E54  EF2E  F007         	goto	u2411
  9919  000E58  EF31  F007         	goto	u2410
  9920  000E5C                     u2411:
  9921  000E5C  0E01               	movlw	1
  9922  000E5E  EF32  F007         	goto	u2420
  9923  000E62                     u2410:
  9924  000E62  0E00               	movlw	0
  9925  000E64                     u2420:
  9926  000E64  6E12               	movwf	_atoi$1566^0,c
  9927  000E66  6A13               	clrf	(_atoi$1566+1)^0,c
  9928  000E68  5012               	movf	_atoi$1566^0,w,c
  9929  000E6A  1013               	iorwf	(_atoi$1566+1)^0,w,c
  9930  000E6C  A4D8               	btfss	status,2,c
  9931  000E6E  EF3B  F007         	goto	u2431
  9932  000E72  EF3D  F007         	goto	u2430
  9933  000E76                     u2431:
  9934  000E76  EFFA  F006         	goto	l3372
  9935  000E7A                     u2430:
  9936  000E7A  500E               	movf	atoi@neg^0,w,c
  9937  000E7C  100F               	iorwf	(atoi@neg+1)^0,w,c
  9938  000E7E  A4D8               	btfss	status,2,c
  9939  000E80  EF44  F007         	goto	u2441
  9940  000E84  EF46  F007         	goto	u2440
  9941  000E88                     u2441:
  9942  000E88  EF54  F007         	goto	l1297
  9943  000E8C                     u2440:
  9944  000E8C  C015  F00A         	movff	atoi@n,??_atoi
  9945  000E90  C016  F00B         	movff	atoi@n+1,??_atoi+1
  9946  000E94  1E0A               	comf	??_atoi^0,f,c
  9947  000E96  1E0B               	comf	(??_atoi+1)^0,f,c
  9948  000E98  4A0A               	infsnz	??_atoi^0,f,c
  9949  000E9A  2A0B               	incf	(??_atoi+1)^0,f,c
  9950  000E9C  C00A  F008         	movff	??_atoi,?_atoi
  9951  000EA0  C00B  F009         	movff	??_atoi+1,?_atoi+1
  9952  000EA4  EF58  F007         	goto	l1300
  9953  000EA8                     l1297:
  9954  000EA8  C015  F008         	movff	atoi@n,?_atoi
  9955  000EAC  C016  F009         	movff	atoi@n+1,?_atoi+1
  9956  000EB0                     l1300:
  9957  000EB0  0012               	return		;funcret
  9958  000EB2                     __end_of_atoi:
  9959                           	opt callstack 0
  9960                           
  9961 ;; *************** function _isspace *****************
  9962 ;; Defined at:
  9963 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  9964 ;; Parameters:    Size  Location     Type
  9965 ;;  c               2    0[COMRAM] int 
  9966 ;; Auto vars:     Size  Location     Type
  9967 ;;		None
  9968 ;; Return value:  Size  Location     Type
  9969 ;;                  2    0[COMRAM] int 
  9970 ;; Registers used:
  9971 ;;		wreg, status,2, status,0
  9972 ;; Tracked objects:
  9973 ;;		On entry : 0/0
  9974 ;;		On exit  : 0/0
  9975 ;;		Unchanged: 0/0
  9976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9977 ;;      Params:         2       0       0       0       0       0       0       0       0
  9978 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9979 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9980 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9981 ;;Total ram usage:        7 bytes
  9982 ;; Hardware stack levels used:    1
  9983 ;; Hardware stack levels required when called:    1
  9984 ;; This function calls:
  9985 ;;		Nothing
  9986 ;; This function is called by:
  9987 ;;		_atoi
  9988 ;; This function uses a non-reentrant model
  9989 ;;
  9990                           
  9991                           	psect	text49
  9992  002B4C                     __ptext49:
  9993                           	opt callstack 0
  9994  002B4C                     _isspace:
  9995                           	opt callstack 23
  9996  002B4C  0E01               	movlw	1
  9997  002B4E  6E07               	movwf	_isspace$1582^0,c
  9998  002B50  0E20               	movlw	32
  9999  002B52  1801               	xorwf	isspace@c^0,w,c
 10000  002B54  1002               	iorwf	(isspace@c+1)^0,w,c
 10001  002B56  B4D8               	btfsc	status,2,c
 10002  002B58  EFB0  F015         	goto	u2111
 10003  002B5C  EFB2  F015         	goto	u2110
 10004  002B60                     u2111:
 10005  002B60  EFCB  F015         	goto	l3226
 10006  002B64                     u2110:
 10007  002B64  0EF7               	movlw	247
 10008  002B66  6E03               	movwf	??_isspace^0,c
 10009  002B68  0EFF               	movlw	255
 10010  002B6A  6E04               	movwf	(??_isspace+1)^0,c
 10011  002B6C  C001  F005         	movff	isspace@c,??_isspace+2
 10012  002B70  C002  F006         	movff	isspace@c+1,??_isspace+3
 10013  002B74  5003               	movf	??_isspace^0,w,c
 10014  002B76  2605               	addwf	(??_isspace+2)^0,f,c
 10015  002B78  5004               	movf	(??_isspace+1)^0,w,c
 10016  002B7A  2206               	addwfc	(??_isspace+3)^0,f,c
 10017  002B7C  5006               	movf	(??_isspace+3)^0,w,c
 10018  002B7E  E109               	bnz	u2120
 10019  002B80  0E05               	movlw	5
 10020  002B82  5C05               	subwf	(??_isspace+2)^0,w,c
 10021  002B84  A0D8               	btfss	status,0,c
 10022  002B86  EFC7  F015         	goto	u2121
 10023  002B8A  EFC9  F015         	goto	u2120
 10024  002B8E                     u2121:
 10025  002B8E  EFCB  F015         	goto	l3226
 10026  002B92                     u2120:
 10027  002B92  0E00               	movlw	0
 10028  002B94  6E07               	movwf	_isspace$1582^0,c
 10029  002B96                     l3226:
 10030  002B96  C007  F001         	movff	_isspace$1582,?_isspace
 10031  002B9A  6A02               	clrf	(?_isspace+1)^0,c
 10032  002B9C  0012               	return		;funcret
 10033  002B9E                     __end_of_isspace:
 10034                           	opt callstack 0
 10035                           
 10036 ;; *************** function _isdigit *****************
 10037 ;; Defined at:
 10038 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 10039 ;; Parameters:    Size  Location     Type
 10040 ;;  c               2    0[COMRAM] int 
 10041 ;; Auto vars:     Size  Location     Type
 10042 ;;		None
 10043 ;; Return value:  Size  Location     Type
 10044 ;;                  2    0[COMRAM] int 
 10045 ;; Registers used:
 10046 ;;		wreg, status,2, status,0
 10047 ;; Tracked objects:
 10048 ;;		On entry : 0/0
 10049 ;;		On exit  : 0/0
 10050 ;;		Unchanged: 0/0
 10051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10052 ;;      Params:         2       0       0       0       0       0       0       0       0
 10053 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10054 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10055 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10056 ;;Total ram usage:        6 bytes
 10057 ;; Hardware stack levels used:    1
 10058 ;; Hardware stack levels required when called:    1
 10059 ;; This function calls:
 10060 ;;		Nothing
 10061 ;; This function is called by:
 10062 ;;		_vfpfcnvrt
 10063 ;;		_atoi
 10064 ;; This function uses a non-reentrant model
 10065 ;;
 10066                           
 10067                           	psect	text50
 10068  002D78                     __ptext50:
 10069                           	opt callstack 0
 10070  002D78                     _isdigit:
 10071                           	opt callstack 24
 10072  002D78  0ED0               	movlw	208
 10073  002D7A  6E03               	movwf	??_isdigit^0,c
 10074  002D7C  0EFF               	movlw	255
 10075  002D7E  6E04               	movwf	(??_isdigit+1)^0,c
 10076  002D80  C001  F005         	movff	isdigit@c,??_isdigit+2
 10077  002D84  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 10078  002D88  5003               	movf	??_isdigit^0,w,c
 10079  002D8A  2605               	addwf	(??_isdigit+2)^0,f,c
 10080  002D8C  5004               	movf	(??_isdigit+1)^0,w,c
 10081  002D8E  2206               	addwfc	(??_isdigit+3)^0,f,c
 10082  002D90  5006               	movf	(??_isdigit+3)^0,w,c
 10083  002D92  E10A               	bnz	u1960
 10084  002D94  0E0A               	movlw	10
 10085  002D96  5C05               	subwf	(??_isdigit+2)^0,w,c
 10086  002D98  A0D8               	btfss	status,0,c
 10087  002D9A  EFD1  F016         	goto	u1961
 10088  002D9E  EFD4  F016         	goto	u1960
 10089  002DA2                     u1961:
 10090  002DA2  0E01               	movlw	1
 10091  002DA4  EFD5  F016         	goto	u1970
 10092  002DA8                     u1960:
 10093  002DA8  0E00               	movlw	0
 10094  002DAA                     u1970:
 10095  002DAA  6E01               	movwf	?_isdigit^0,c
 10096  002DAC  6A02               	clrf	(?_isdigit+1)^0,c
 10097  002DAE  0012               	return		;funcret
 10098  002DB0                     __end_of_isdigit:
 10099                           	opt callstack 0
 10100                           
 10101 ;; *************** function _getValue *****************
 10102 ;; Defined at:
 10103 ;;		line 804 in file "main.c"
 10104 ;; Parameters:    Size  Location     Type
 10105 ;;  numCharacter    2    3[COMRAM] short 
 10106 ;; Auto vars:     Size  Location     Type
 10107 ;;  i               2   10[COMRAM] int 
 10108 ;;  i               2    8[COMRAM] int 
 10109 ;;  Rx              1   13[COMRAM] unsigned char 
 10110 ;;  dato            1   12[COMRAM] unsigned char 
 10111 ;;  datoIncorrec    1    7[COMRAM] unsigned char 
 10112 ;; Return value:  Size  Location     Type
 10113 ;;                  1    wreg      unsigned char 
 10114 ;; Registers used:
 10115 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10116 ;; Tracked objects:
 10117 ;;		On entry : 0/0
 10118 ;;		On exit  : 0/0
 10119 ;;		Unchanged: 0/0
 10120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10121 ;;      Params:         2       0       0       0       0       0       0       0       0
 10122 ;;      Locals:         7       0       0       0       0       0       0       0       0
 10123 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10124 ;;      Totals:        11       0       0       0       0       0       0       0       0
 10125 ;;Total ram usage:       11 bytes
 10126 ;; Hardware stack levels used:    1
 10127 ;; Hardware stack levels required when called:    3
 10128 ;; This function calls:
 10129 ;;		_UART_printf
 10130 ;;		_UART_read
 10131 ;;		_UART_write
 10132 ;; This function is called by:
 10133 ;;		_setRtc
 10134 ;;		_asignarHorarios
 10135 ;;		_setTiempoRegar
 10136 ;;		_lecturaWifi
 10137 ;;		_regadoRapido
 10138 ;; This function uses a non-reentrant model
 10139 ;;
 10140                           
 10141                           	psect	text51
 10142  0008FE                     __ptext51:
 10143                           	opt callstack 0
 10144  0008FE                     _getValue:
 10145                           	opt callstack 25
 10146  0008FE                     
 10147                           ;main.c: 807:     unsigned char datoIncorrecto = 0;
 10148  0008FE  0E00               	movlw	0
 10149  000900  6E08               	movwf	getValue@datoIncorrecto^0,c
 10150                           
 10151                           ;main.c: 808:     unsigned char dato = 0;
 10152  000902  0E00               	movlw	0
 10153  000904  6E0D               	movwf	getValue@dato^0,c
 10154                           
 10155                           ;main.c: 810:     switch (numCharacters) {
 10156  000906  EF5B  F005         	goto	l3748
 10157  00090A                     l3670:
 10158                           
 10159                           ;main.c: 813:             Rx = UART_read();
 10160  00090A  EC22  F015         	call	_UART_read	;wreg free
 10161  00090E  6E0E               	movwf	getValue@Rx^0,c
 10162  000910                     
 10163                           ;main.c: 815:             if (Rx >= 48 && Rx <= 57) {
 10164  000910  0E2F               	movlw	47
 10165  000912  640E               	cpfsgt	getValue@Rx^0,c
 10166  000914  EF8E  F004         	goto	u2821
 10167  000918  EF90  F004         	goto	u2820
 10168  00091C                     u2821:
 10169  00091C  EF9E  F004         	goto	l3680
 10170  000920                     u2820:
 10171  000920  0E3A               	movlw	58
 10172  000922  600E               	cpfslt	getValue@Rx^0,c
 10173  000924  EF96  F004         	goto	u2831
 10174  000928  EF98  F004         	goto	u2830
 10175  00092C                     u2831:
 10176  00092C  EF9E  F004         	goto	l3680
 10177  000930                     u2830:
 10178  000930                     
 10179                           ;main.c: 816:                 Rx -= 48;
 10180  000930  0E30               	movlw	48
 10181  000932  5E0E               	subwf	getValue@Rx^0,f,c
 10182  000934                     
 10183                           ;main.c: 817:                 dato = Rx;
 10184  000934  C00E  F00D         	movff	getValue@Rx,getValue@dato
 10185                           
 10186                           ;main.c: 818:             } else {
 10187  000938  EF75  F005         	goto	l3750
 10188  00093C                     l3680:
 10189                           
 10190                           ;main.c: 819:                 UART_write('F');
 10191  00093C  0E46               	movlw	70
 10192  00093E  ECB0  F017         	call	_UART_write
 10193  000942                     
 10194                           ;main.c: 820:                 datoIncorrecto = 1;
 10195  000942  0E01               	movlw	1
 10196  000944  6E08               	movwf	getValue@datoIncorrecto^0,c
 10197  000946  EF75  F005         	goto	l3750
 10198  00094A                     l3684:
 10199                           
 10200                           ;main.c: 826:             for (int i = 0; i < 2; i++) {
 10201  00094A  0E00               	movlw	0
 10202  00094C  6E0A               	movwf	(getValue@i+1)^0,c
 10203  00094E  0E00               	movlw	0
 10204  000950  6E09               	movwf	getValue@i^0,c
 10205  000952                     l3690:
 10206                           
 10207                           ;main.c: 828:                 Rx = UART_read();
 10208  000952  EC22  F015         	call	_UART_read	;wreg free
 10209  000956  6E0E               	movwf	getValue@Rx^0,c
 10210  000958                     
 10211                           ;main.c: 830:                 if (Rx >= 48 && Rx <= 57) {
 10212  000958  0E2F               	movlw	47
 10213  00095A  640E               	cpfsgt	getValue@Rx^0,c
 10214  00095C  EFB2  F004         	goto	u2841
 10215  000960  EFB4  F004         	goto	u2840
 10216  000964                     u2841:
 10217  000964  EFE2  F004         	goto	l3706
 10218  000968                     u2840:
 10219  000968  0E3A               	movlw	58
 10220  00096A  600E               	cpfslt	getValue@Rx^0,c
 10221  00096C  EFBA  F004         	goto	u2851
 10222  000970  EFBC  F004         	goto	u2850
 10223  000974                     u2851:
 10224  000974  EFE2  F004         	goto	l3706
 10225  000978                     u2850:
 10226  000978                     
 10227                           ;main.c: 832:                     Rx -= 48;
 10228  000978  0E30               	movlw	48
 10229  00097A  5E0E               	subwf	getValue@Rx^0,f,c
 10230                           
 10231                           ;main.c: 834:                     switch (i) {
 10232  00097C  EFCC  F004         	goto	l3704
 10233  000980                     l422:
 10234                           
 10235                           ;main.c: 836:                             dato = Rx;
 10236  000980  C00E  F00D         	movff	getValue@Rx,getValue@dato
 10237  000984                     
 10238                           ;main.c: 837:                             dato *= 10;
 10239  000984  0E0A               	movlw	10
 10240  000986  020D               	mulwf	getValue@dato^0,c
 10241  000988  50F3               	movf	prodl,w,c
 10242  00098A  6E0D               	movwf	getValue@dato^0,c
 10243                           
 10244                           ;main.c: 838:                             break;
 10245  00098C  EFE9  F004         	goto	l3710
 10246  000990                     l3700:
 10247                           
 10248                           ;main.c: 841:                             dato += Rx;
 10249  000990  500E               	movf	getValue@Rx^0,w,c
 10250  000992  260D               	addwf	getValue@dato^0,f,c
 10251                           
 10252                           ;main.c: 842:                             break;
 10253  000994  EFE9  F004         	goto	l3710
 10254  000998                     l3704:
 10255  000998  C009  F006         	movff	getValue@i,??_getValue
 10256  00099C  C00A  F007         	movff	getValue@i+1,??_getValue+1
 10257                           
 10258                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10259                           ; Switch size 1, requested type "simple"
 10260                           ; Number of cases is 1, Range of values is 0 to 0
 10261                           ; switch strategies available:
 10262                           ; Name         Instructions Cycles
 10263                           ; simple_byte            4     3 (average)
 10264                           ;	Chosen strategy is simple_byte
 10265  0009A0  5007               	movf	(??_getValue+1)^0,w,c
 10266  0009A2  0A00               	xorlw	0	; case 0
 10267  0009A4  B4D8               	btfsc	status,2,c
 10268  0009A6  EFD7  F004         	goto	l4798
 10269  0009AA  EFE9  F004         	goto	l3710
 10270  0009AE                     l4798:
 10271                           
 10272                           ; Switch size 1, requested type "simple"
 10273                           ; Number of cases is 2, Range of values is 0 to 1
 10274                           ; switch strategies available:
 10275                           ; Name         Instructions Cycles
 10276                           ; simple_byte            7     4 (average)
 10277                           ;	Chosen strategy is simple_byte
 10278  0009AE  5006               	movf	??_getValue^0,w,c
 10279  0009B0  0A00               	xorlw	0	; case 0
 10280  0009B2  B4D8               	btfsc	status,2,c
 10281  0009B4  EFC0  F004         	goto	l422
 10282  0009B8  0A01               	xorlw	1	; case 1
 10283  0009BA  B4D8               	btfsc	status,2,c
 10284  0009BC  EFC8  F004         	goto	l3700
 10285  0009C0  EFE9  F004         	goto	l3710
 10286  0009C4                     l3706:
 10287                           
 10288                           ;main.c: 850:                     datoIncorrecto = 1;
 10289  0009C4  0E01               	movlw	1
 10290  0009C6  6E08               	movwf	getValue@datoIncorrecto^0,c
 10291  0009C8                     
 10292                           ;main.c: 851:                     UART_write('F');
 10293  0009C8  0E46               	movlw	70
 10294  0009CA  ECB0  F017         	call	_UART_write
 10295                           
 10296                           ;main.c: 852:                     break;
 10297  0009CE  EF75  F005         	goto	l3750
 10298  0009D2                     l3710:
 10299                           
 10300                           ;main.c: 854:             }
 10301  0009D2  4A09               	infsnz	getValue@i^0,f,c
 10302  0009D4  2A0A               	incf	(getValue@i+1)^0,f,c
 10303  0009D6  BE0A               	btfsc	(getValue@i+1)^0,7,c
 10304  0009D8  EFF7  F004         	goto	u2861
 10305  0009DC  500A               	movf	(getValue@i+1)^0,w,c
 10306  0009DE  E109               	bnz	u2860
 10307  0009E0  0E02               	movlw	2
 10308  0009E2  5C09               	subwf	getValue@i^0,w,c
 10309  0009E4  A0D8               	btfss	status,0,c
 10310  0009E6  EFF7  F004         	goto	u2861
 10311  0009EA  EFF9  F004         	goto	u2860
 10312  0009EE                     u2861:
 10313  0009EE  EFA9  F004         	goto	l3690
 10314  0009F2                     u2860:
 10315  0009F2  EF75  F005         	goto	l3750
 10316  0009F6                     l3714:
 10317                           
 10318                           ;main.c: 858:             for (int i = 0; i < 3; i++) {
 10319  0009F6  0E00               	movlw	0
 10320  0009F8  6E0C               	movwf	(getValue@i_989+1)^0,c
 10321  0009FA  0E00               	movlw	0
 10322  0009FC  6E0B               	movwf	getValue@i_989^0,c
 10323  0009FE                     l3720:
 10324                           
 10325                           ;main.c: 860:                 Rx = UART_read();
 10326  0009FE  EC22  F015         	call	_UART_read	;wreg free
 10327  000A02  6E0E               	movwf	getValue@Rx^0,c
 10328  000A04                     
 10329                           ;main.c: 862:                 if (Rx >= 48 && Rx <= 57) {
 10330  000A04  0E2F               	movlw	47
 10331  000A06  640E               	cpfsgt	getValue@Rx^0,c
 10332  000A08  EF08  F005         	goto	u2871
 10333  000A0C  EF0A  F005         	goto	u2870
 10334  000A10                     u2871:
 10335  000A10  EF42  F005         	goto	l3738
 10336  000A14                     u2870:
 10337  000A14  0E3A               	movlw	58
 10338  000A16  600E               	cpfslt	getValue@Rx^0,c
 10339  000A18  EF10  F005         	goto	u2881
 10340  000A1C  EF12  F005         	goto	u2880
 10341  000A20                     u2881:
 10342  000A20  EF42  F005         	goto	l3738
 10343  000A24                     u2880:
 10344  000A24                     
 10345                           ;main.c: 864:                     Rx -= 48;
 10346  000A24  0E30               	movlw	48
 10347  000A26  5E0E               	subwf	getValue@Rx^0,f,c
 10348                           
 10349                           ;main.c: 866:                     switch (i) {
 10350  000A28  EF28  F005         	goto	l3736
 10351  000A2C                     l432:
 10352                           
 10353                           ;main.c: 868:                             dato = Rx;
 10354  000A2C  C00E  F00D         	movff	getValue@Rx,getValue@dato
 10355  000A30                     
 10356                           ;main.c: 869:                             dato *= 100;
 10357  000A30  0E64               	movlw	100
 10358  000A32  020D               	mulwf	getValue@dato^0,c
 10359  000A34  50F3               	movf	prodl,w,c
 10360  000A36  6E0D               	movwf	getValue@dato^0,c
 10361                           
 10362                           ;main.c: 870:                             break;
 10363  000A38  EF49  F005         	goto	l3742
 10364  000A3C                     l3730:
 10365                           
 10366                           ;main.c: 873:                             dato += (Rx * 10);
 10367  000A3C  500E               	movf	getValue@Rx^0,w,c
 10368  000A3E  0D0A               	mullw	10
 10369  000A40  50F3               	movf	243,w,c
 10370  000A42  260D               	addwf	getValue@dato^0,f,c
 10371                           
 10372                           ;main.c: 874:                             break;
 10373  000A44  EF49  F005         	goto	l3742
 10374  000A48                     l3732:
 10375                           
 10376                           ;main.c: 877:                             dato += Rx;
 10377  000A48  500E               	movf	getValue@Rx^0,w,c
 10378  000A4A  260D               	addwf	getValue@dato^0,f,c
 10379                           
 10380                           ;main.c: 878:                             break;
 10381  000A4C  EF49  F005         	goto	l3742
 10382  000A50                     l3736:
 10383  000A50  C00B  F006         	movff	getValue@i_989,??_getValue
 10384  000A54  C00C  F007         	movff	getValue@i_989+1,??_getValue+1
 10385                           
 10386                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10387                           ; Switch size 1, requested type "simple"
 10388                           ; Number of cases is 1, Range of values is 0 to 0
 10389                           ; switch strategies available:
 10390                           ; Name         Instructions Cycles
 10391                           ; simple_byte            4     3 (average)
 10392                           ;	Chosen strategy is simple_byte
 10393  000A58  5007               	movf	(??_getValue+1)^0,w,c
 10394  000A5A  0A00               	xorlw	0	; case 0
 10395  000A5C  B4D8               	btfsc	status,2,c
 10396  000A5E  EF33  F005         	goto	l4800
 10397  000A62  EF49  F005         	goto	l3742
 10398  000A66                     l4800:
 10399                           
 10400                           ; Switch size 1, requested type "simple"
 10401                           ; Number of cases is 3, Range of values is 0 to 2
 10402                           ; switch strategies available:
 10403                           ; Name         Instructions Cycles
 10404                           ; simple_byte           10     6 (average)
 10405                           ;	Chosen strategy is simple_byte
 10406  000A66  5006               	movf	??_getValue^0,w,c
 10407  000A68  0A00               	xorlw	0	; case 0
 10408  000A6A  B4D8               	btfsc	status,2,c
 10409  000A6C  EF16  F005         	goto	l432
 10410  000A70  0A01               	xorlw	1	; case 1
 10411  000A72  B4D8               	btfsc	status,2,c
 10412  000A74  EF1E  F005         	goto	l3730
 10413  000A78  0A03               	xorlw	3	; case 2
 10414  000A7A  B4D8               	btfsc	status,2,c
 10415  000A7C  EF24  F005         	goto	l3732
 10416  000A80  EF49  F005         	goto	l3742
 10417  000A84                     l3738:
 10418                           
 10419                           ;main.c: 886:                     datoIncorrecto = 1;
 10420  000A84  0E01               	movlw	1
 10421  000A86  6E08               	movwf	getValue@datoIncorrecto^0,c
 10422  000A88                     
 10423                           ;main.c: 887:                     UART_write('F');
 10424  000A88  0E46               	movlw	70
 10425  000A8A  ECB0  F017         	call	_UART_write
 10426                           
 10427                           ;main.c: 888:                     break;
 10428  000A8E  EF75  F005         	goto	l3750
 10429  000A92                     l3742:
 10430                           
 10431                           ;main.c: 890:             }
 10432  000A92  4A0B               	infsnz	getValue@i_989^0,f,c
 10433  000A94  2A0C               	incf	(getValue@i_989+1)^0,f,c
 10434  000A96  BE0C               	btfsc	(getValue@i_989+1)^0,7,c
 10435  000A98  EF57  F005         	goto	u2891
 10436  000A9C  500C               	movf	(getValue@i_989+1)^0,w,c
 10437  000A9E  E109               	bnz	u2890
 10438  000AA0  0E03               	movlw	3
 10439  000AA2  5C0B               	subwf	getValue@i_989^0,w,c
 10440  000AA4  A0D8               	btfss	status,0,c
 10441  000AA6  EF57  F005         	goto	u2891
 10442  000AAA  EF59  F005         	goto	u2890
 10443  000AAE                     u2891:
 10444  000AAE  EFFF  F004         	goto	l3720
 10445  000AB2                     u2890:
 10446  000AB2  EF75  F005         	goto	l3750
 10447  000AB6                     l3748:
 10448  000AB6  C004  F006         	movff	getValue@numCharacters,??_getValue
 10449  000ABA  C005  F007         	movff	getValue@numCharacters+1,??_getValue+1
 10450                           
 10451                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10452                           ; Switch size 1, requested type "simple"
 10453                           ; Number of cases is 1, Range of values is 0 to 0
 10454                           ; switch strategies available:
 10455                           ; Name         Instructions Cycles
 10456                           ; simple_byte            4     3 (average)
 10457                           ;	Chosen strategy is simple_byte
 10458  000ABE  5007               	movf	(??_getValue+1)^0,w,c
 10459  000AC0  0A00               	xorlw	0	; case 0
 10460  000AC2  B4D8               	btfsc	status,2,c
 10461  000AC4  EF66  F005         	goto	l4802
 10462  000AC8  EF75  F005         	goto	l3750
 10463  000ACC                     l4802:
 10464                           
 10465                           ; Switch size 1, requested type "simple"
 10466                           ; Number of cases is 3, Range of values is 1 to 3
 10467                           ; switch strategies available:
 10468                           ; Name         Instructions Cycles
 10469                           ; simple_byte           10     6 (average)
 10470                           ;	Chosen strategy is simple_byte
 10471  000ACC  5006               	movf	??_getValue^0,w,c
 10472  000ACE  0A01               	xorlw	1	; case 1
 10473  000AD0  B4D8               	btfsc	status,2,c
 10474  000AD2  EF85  F004         	goto	l3670
 10475  000AD6  0A03               	xorlw	3	; case 2
 10476  000AD8  B4D8               	btfsc	status,2,c
 10477  000ADA  EFA5  F004         	goto	l3684
 10478  000ADE  0A01               	xorlw	1	; case 3
 10479  000AE0  B4D8               	btfsc	status,2,c
 10480  000AE2  EFFB  F004         	goto	l3714
 10481  000AE6  EF75  F005         	goto	l3750
 10482  000AEA                     l3750:
 10483                           
 10484                           ;main.c: 899:     if (esperandoDatos || datoIncorrecto) {
 10485  000AEA  0101               	movlb	1	; () banked
 10486  000AEC  517D               	movf	_esperandoDatos& (0+255),w,b
 10487  000AEE  A4D8               	btfss	status,2,c
 10488  000AF0  EF7C  F005         	goto	u2901
 10489  000AF4  EF7E  F005         	goto	u2900
 10490  000AF8                     u2901:
 10491  000AF8  EF86  F005         	goto	l3754
 10492  000AFC                     u2900:
 10493  000AFC                     
 10494                           ; BSR set to: 1
 10495  000AFC  5008               	movf	getValue@datoIncorrecto^0,w,c
 10496  000AFE  B4D8               	btfsc	status,2,c
 10497  000B00  EF84  F005         	goto	u2911
 10498  000B04  EF86  F005         	goto	u2910
 10499  000B08                     u2911:
 10500  000B08  EF8F  F005         	goto	l3762
 10501  000B0C                     u2910:
 10502  000B0C                     l3754:
 10503                           
 10504                           ; BSR set to: 1
 10505                           ;main.c: 901:         UART_printf("\nFALLO EL SETEO\r\n");
 10506  000B0C  0EA0               	movlw	low STR_45
 10507  000B0E  6E02               	movwf	UART_printf@cadena^0,c
 10508  000B10  0E7F               	movlw	high STR_45
 10509  000B12  6E03               	movwf	(UART_printf@cadena+1)^0,c
 10510  000B14  EC97  F014         	call	_UART_printf	;wreg free
 10511  000B18                     
 10512                           ;main.c: 902:         return 'F';
 10513  000B18  0E46               	movlw	70
 10514  000B1A  EF90  F005         	goto	l442
 10515  000B1E                     l3762:
 10516                           
 10517                           ; BSR set to: 1
 10518                           ;main.c: 904:         return dato;
 10519  000B1E  500D               	movf	getValue@dato^0,w,c
 10520  000B20                     l442:
 10521  000B20  0012               	return		;funcret
 10522  000B22                     __end_of_getValue:
 10523                           	opt callstack 0
 10524                           
 10525 ;; *************** function _UART_read *****************
 10526 ;; Defined at:
 10527 ;;		line 34 in file "./UART.h"
 10528 ;; Parameters:    Size  Location     Type
 10529 ;;		None
 10530 ;; Auto vars:     Size  Location     Type
 10531 ;;		None
 10532 ;; Return value:  Size  Location     Type
 10533 ;;                  1    wreg      unsigned char 
 10534 ;; Registers used:
 10535 ;;		wreg, status,2
 10536 ;; Tracked objects:
 10537 ;;		On entry : 0/0
 10538 ;;		On exit  : 0/0
 10539 ;;		Unchanged: 0/0
 10540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10541 ;;      Params:         0       0       0       0       0       0       0       0       0
 10542 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10543 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10544 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10545 ;;Total ram usage:        0 bytes
 10546 ;; Hardware stack levels used:    1
 10547 ;; Hardware stack levels required when called:    1
 10548 ;; This function calls:
 10549 ;;		Nothing
 10550 ;; This function is called by:
 10551 ;;		_lecturaWifi
 10552 ;;		_getValue
 10553 ;; This function uses a non-reentrant model
 10554 ;;
 10555                           
 10556                           	psect	text52
 10557  002A44                     __ptext52:
 10558                           	opt callstack 0
 10559  002A44                     _UART_read:
 10560                           	opt callstack 26
 10561  002A44                     
 10562                           ;./UART.h: 36:     TMR0 = VALOR_TIMER0UART;
 10563  002A44  0E67               	movlw	103
 10564  002A46  6ED7               	movwf	215,c	;volatile
 10565  002A48  0E69               	movlw	105
 10566  002A4A  6ED6               	movwf	214,c	;volatile
 10567                           
 10568                           ;./UART.h: 37:     esperaDatoConcluida = 0;
 10569  002A4C  0E00               	movlw	0
 10570  002A4E  0100               	movlb	0	; () banked
 10571  002A50  6FFD               	movwf	_esperaDatoConcluida& (0+255),b
 10572                           
 10573                           ;./UART.h: 38:     esperandoDatos = 1;
 10574  002A52  0E01               	movlw	1
 10575  002A54  0101               	movlb	1	; () banked
 10576  002A56  6F7D               	movwf	_esperandoDatos& (0+255),b
 10577                           
 10578                           ;./UART.h: 39:     byteUart = 0;
 10579  002A58  0E00               	movlw	0
 10580  002A5A  6F7E               	movwf	_byteUart& (0+255),b
 10581                           
 10582                           ;./UART.h: 40:     tiempoInactividadTrans = 0;
 10583  002A5C  0E00               	movlw	0
 10584  002A5E  0100               	movlb	0	; () banked
 10585  002A60  6FFE               	movwf	_tiempoInactividadTrans& (0+255),b
 10586  002A62                     l127:
 10587                           
 10588                           ; BSR set to: 0
 10589  002A62  BA9E               	btfsc	158,5,c	;volatile
 10590  002A64  EF36  F015         	goto	u2591
 10591  002A68  EF38  F015         	goto	u2590
 10592  002A6C                     u2591:
 10593  002A6C  EF40  F015         	goto	l3494
 10594  002A70                     u2590:
 10595  002A70                     
 10596                           ; BSR set to: 0
 10597  002A70  51FD               	movf	_esperaDatoConcluida& (0+255),w,b
 10598  002A72  B4D8               	btfsc	status,2,c
 10599  002A74  EF3E  F015         	goto	u2601
 10600  002A78  EF40  F015         	goto	u2600
 10601  002A7C                     u2601:
 10602  002A7C  EF31  F015         	goto	l127
 10603  002A80                     u2600:
 10604  002A80                     l3494:
 10605                           
 10606                           ; BSR set to: 0
 10607                           ;./UART.h: 44:     if (!esperaDatoConcluida) {
 10608  002A80  51FD               	movf	_esperaDatoConcluida& (0+255),w,b
 10609  002A82  A4D8               	btfss	status,2,c
 10610  002A84  EF46  F015         	goto	u2611
 10611  002A88  EF48  F015         	goto	u2610
 10612  002A8C                     u2611:
 10613  002A8C  EF4D  F015         	goto	l132
 10614  002A90                     u2610:
 10615  002A90                     
 10616                           ; BSR set to: 0
 10617                           ;./UART.h: 45:         byteUart = RCREG;
 10618  002A90  CFAE F17E          	movff	4014,_byteUart	;volatile
 10619  002A94                     
 10620                           ; BSR set to: 0
 10621                           ;./UART.h: 46:         esperandoDatos = 0;
 10622  002A94  0E00               	movlw	0
 10623  002A96  0101               	movlb	1	; () banked
 10624  002A98  6F7D               	movwf	_esperandoDatos& (0+255),b
 10625  002A9A                     l132:
 10626                           
 10627                           ;./UART.h: 49:     return byteUart;
 10628  002A9A  0101               	movlb	1	; () banked
 10629  002A9C  517E               	movf	_byteUart& (0+255),w,b
 10630  002A9E                     
 10631                           ; BSR set to: 1
 10632  002A9E  0012               	return		;funcret
 10633  002AA0                     __end_of_UART_read:
 10634                           	opt callstack 0
 10635                           
 10636 ;; *************** function _UART_printf *****************
 10637 ;; Defined at:
 10638 ;;		line 57 in file "./UART.h"
 10639 ;; Parameters:    Size  Location     Type
 10640 ;;  cadena          2    1[COMRAM] PTR unsigned char 
 10641 ;;		 -> STR_49(58), STR_48(57), STR_47(57), STR_46(20), 
 10642 ;;		 -> STR_45(18), STR_44(11), STR_43(9), STR_42(17), 
 10643 ;;		 -> mostrarDatosSensoresWIFI@bufferSensor(50), mostrarDatosSensoresWIFI@buffer(50), mostrarDatosSensores@buffer(50),
      + STR_35(25), 
 10644 ;;		 -> dameDatosSistema@buffer(50), STR_33(55), STR_32(62), STR_31(42), 
 10645 ;;		 -> STR_30(3), STR_29(14), STR_28(26), STR_27(23), 
 10646 ;;		 -> STR_26(34), STR_25(32), STR_24(49), STR_23(37), 
 10647 ;;		 -> STR_22(27), STR_21(37), STR_20(32), lecturaWifi@buffer(50), 
 10648 ;;		 -> STR_18(38), STR_17(37), STR_16(72), STR_15(51), 
 10649 ;;		 -> STR_14(23), STR_13(26), asignarHorarios@buffer(50), STR_11(37), 
 10650 ;;		 -> STR_10(59), STR_9(59), STR_8(51), STR_7(25), 
 10651 ;;		 -> STR_6(37), STR_5(31), STR_4(43), STR_3(16), 
 10652 ;;		 -> STR_2(36), STR_1(65), 
 10653 ;; Auto vars:     Size  Location     Type
 10654 ;;		None
 10655 ;; Return value:  Size  Location     Type
 10656 ;;                  1    wreg      void 
 10657 ;; Registers used:
 10658 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10659 ;; Tracked objects:
 10660 ;;		On entry : 0/0
 10661 ;;		On exit  : 0/0
 10662 ;;		Unchanged: 0/0
 10663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10664 ;;      Params:         2       0       0       0       0       0       0       0       0
 10665 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10666 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10667 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10668 ;;Total ram usage:        2 bytes
 10669 ;; Hardware stack levels used:    1
 10670 ;; Hardware stack levels required when called:    2
 10671 ;; This function calls:
 10672 ;;		_UART_write
 10673 ;; This function is called by:
 10674 ;;		_fijaDiaRtc
 10675 ;;		_fijaHoraRtc
 10676 ;;		_asignarHorarios
 10677 ;;		_setTiempoRegar
 10678 ;;		_lecturaWifi
 10679 ;;		_mostrarMenu
 10680 ;;		_sistemaPrincipal
 10681 ;;		_dameDatosSistema
 10682 ;;		_dameTemperaturaHumedad
 10683 ;;		_mostrarDatosSensores
 10684 ;;		_mostrarDatosSensoresWIFI
 10685 ;;		_getValue
 10686 ;;		_regadoRapido
 10687 ;;		_configBluetoothHC_06
 10688 ;; This function uses a non-reentrant model
 10689 ;;
 10690                           
 10691                           	psect	text53
 10692  00292E                     __ptext53:
 10693                           	opt callstack 0
 10694  00292E                     _UART_printf:
 10695                           	opt callstack 26
 10696  00292E                     
 10697                           ;./UART.h: 58:     while (*cadena) {
 10698  00292E  EFAD  F014         	goto	l3508
 10699  002932                     l3504:
 10700                           
 10701                           ;./UART.h: 59:         UART_write(*cadena++);
 10702  002932  C002  FFF6         	movff	UART_printf@cadena,tblptrl
 10703  002936  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
 10704  00293A  6AF8               	clrf	tblptru,c
 10705  00293C  0E07               	movlw	(high __ramtop+-1)
 10706  00293E  64F7               	cpfsgt	tblptrh,c
 10707  002940  D003               	bra	u2627
 10708  002942  0008               	tblrd		*
 10709  002944  50F5               	movf	tablat,w,c
 10710  002946  D005               	bra	u2620
 10711  002948                     u2627:
 10712  002948  CFF6 FFE1          	movff	tblptrl,fsr1l
 10713  00294C  CFF7 FFE2          	movff	tblptrh,fsr1h
 10714  002950  50E7               	movf	indf1,w,c
 10715  002952                     u2620:
 10716  002952  ECB0  F017         	call	_UART_write
 10717  002956  4A02               	infsnz	UART_printf@cadena^0,f,c
 10718  002958  2A03               	incf	(UART_printf@cadena+1)^0,f,c
 10719  00295A                     l3508:
 10720                           
 10721                           ;./UART.h: 58:     while (*cadena) {
 10722  00295A  C002  FFF6         	movff	UART_printf@cadena,tblptrl
 10723  00295E  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
 10724  002962  6AF8               	clrf	tblptru,c
 10725  002964  0E07               	movlw	(high __ramtop+-1)
 10726  002966  64F7               	cpfsgt	tblptrh,c
 10727  002968  D003               	bra	u2637
 10728  00296A  0008               	tblrd		*
 10729  00296C  50F5               	movf	tablat,w,c
 10730  00296E  D005               	bra	u2630
 10731  002970                     u2637:
 10732  002970  CFF6 FFE1          	movff	tblptrl,fsr1l
 10733  002974  CFF7 FFE2          	movff	tblptrh,fsr1h
 10734  002978  50E7               	movf	indf1,w,c
 10735  00297A                     u2630:
 10736  00297A  0900               	iorlw	0
 10737  00297C  A4D8               	btfss	status,2,c
 10738  00297E  EFC3  F014         	goto	u2641
 10739  002982  EFC5  F014         	goto	u2640
 10740  002986                     u2641:
 10741  002986  EF99  F014         	goto	l3504
 10742  00298A                     u2640:
 10743  00298A  0012               	return		;funcret
 10744  00298C                     __end_of_UART_printf:
 10745                           	opt callstack 0
 10746                           
 10747 ;; *************** function _UART_write *****************
 10748 ;; Defined at:
 10749 ;;		line 52 in file "./UART.h"
 10750 ;; Parameters:    Size  Location     Type
 10751 ;;  dato            1    wreg     unsigned char 
 10752 ;; Auto vars:     Size  Location     Type
 10753 ;;  dato            1    0[COMRAM] unsigned char 
 10754 ;; Return value:  Size  Location     Type
 10755 ;;                  1    wreg      void 
 10756 ;; Registers used:
 10757 ;;		wreg
 10758 ;; Tracked objects:
 10759 ;;		On entry : 0/0
 10760 ;;		On exit  : 0/0
 10761 ;;		Unchanged: 0/0
 10762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10763 ;;      Params:         0       0       0       0       0       0       0       0       0
 10764 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10765 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10766 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10767 ;;Total ram usage:        1 bytes
 10768 ;; Hardware stack levels used:    1
 10769 ;; Hardware stack levels required when called:    1
 10770 ;; This function calls:
 10771 ;;		Nothing
 10772 ;; This function is called by:
 10773 ;;		_UART_printf
 10774 ;;		_lecturaWifi
 10775 ;;		_dameDatosSistema
 10776 ;;		_mostrarDatosSensores
 10777 ;;		_mostrarDatosSensoresWIFI
 10778 ;;		_getValue
 10779 ;; This function uses a non-reentrant model
 10780 ;;
 10781                           
 10782                           	psect	text54
 10783  002F60                     __ptext54:
 10784                           	opt callstack 0
 10785  002F60                     _UART_write:
 10786                           	opt callstack 26
 10787                           
 10788                           ;incstack = 0
 10789                           ;UART_write@dato stored from wreg
 10790  002F60  6E01               	movwf	UART_write@dato^0,c
 10791  002F62                     
 10792                           ;./UART.h: 53:     TXREG = dato;
 10793  002F62  C001  FFAD         	movff	UART_write@dato,4013	;volatile
 10794  002F66                     l136:
 10795  002F66  A2AC               	btfss	172,1,c	;volatile
 10796  002F68  EFB8  F017         	goto	u2471
 10797  002F6C  EFBA  F017         	goto	u2470
 10798  002F70                     u2471:
 10799  002F70  EFB3  F017         	goto	l136
 10800  002F74                     u2470:
 10801  002F74  0012               	return		;funcret
 10802  002F76                     __end_of_UART_write:
 10803                           	opt callstack 0
 10804                           
 10805 ;; *************** function _escribeHorariosMemoria *****************
 10806 ;; Defined at:
 10807 ;;		line 247 in file "main.c"
 10808 ;; Parameters:    Size  Location     Type
 10809 ;;		None
 10810 ;; Auto vars:     Size  Location     Type
 10811 ;;  j               2   12[COMRAM] int 
 10812 ;;  i               2   16[COMRAM] int 
 10813 ;;  contMemoria     2   14[COMRAM] int 
 10814 ;; Return value:  Size  Location     Type
 10815 ;;                  1    wreg      void 
 10816 ;; Registers used:
 10817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10818 ;; Tracked objects:
 10819 ;;		On entry : 0/0
 10820 ;;		On exit  : 0/0
 10821 ;;		Unchanged: 0/0
 10822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10823 ;;      Params:         0       0       0       0       0       0       0       0       0
 10824 ;;      Locals:         6       0       0       0       0       0       0       0       0
 10825 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10826 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10827 ;;Total ram usage:        8 bytes
 10828 ;; Hardware stack levels used:    1
 10829 ;; Hardware stack levels required when called:    4
 10830 ;; This function calls:
 10831 ;;		___wmul
 10832 ;;		_escribe_eeprom
 10833 ;; This function is called by:
 10834 ;;		_asignarHorarios
 10835 ;;		_setTiempoRegar
 10836 ;; This function uses a non-reentrant model
 10837 ;;
 10838                           
 10839                           	psect	text55
 10840  001744                     __ptext55:
 10841                           	opt callstack 0
 10842  001744                     _escribeHorariosMemoria:
 10843                           	opt callstack 24
 10844  001744                     
 10845                           ;main.c: 249:     int contMemoria = 0;
 10846  001744  0E00               	movlw	0
 10847  001746  6E10               	movwf	(escribeHorariosMemoria@contMemoria+1)^0,c
 10848  001748  0E00               	movlw	0
 10849  00174A  6E0F               	movwf	escribeHorariosMemoria@contMemoria^0,c
 10850                           
 10851                           ;main.c: 250:     for (int i = 0; i < 24; i++) {
 10852  00174C  0E00               	movlw	0
 10853  00174E  6E12               	movwf	(escribeHorariosMemoria@i+1)^0,c
 10854  001750  0E00               	movlw	0
 10855  001752  6E11               	movwf	escribeHorariosMemoria@i^0,c
 10856  001754                     l3950:
 10857                           
 10858                           ;main.c: 251:         escribe_eeprom(contMemoria++, horarios[i].hora);
 10859  001754  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
 10860  001758  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
 10861  00175C  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
 10862  001760  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
 10863  001764  0E00               	movlw	0
 10864  001766  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10865  001768  0E0C               	movlw	12
 10866  00176A  6E03               	movwf	___wmul@multiplicand^0,c
 10867  00176C  EC61  F017         	call	___wmul	;wreg free
 10868  001770  0EAA               	movlw	low _horarios
 10869  001772  2401               	addwf	?___wmul^0,w,c
 10870  001774  6ED9               	movwf	fsr2l,c
 10871  001776  0E01               	movlw	high _horarios
 10872  001778  2002               	addwfc	(?___wmul+1)^0,w,c
 10873  00177A  6EDA               	movwf	fsr2h,c
 10874  00177C  50DF               	movf	indf2,w,c
 10875  00177E  6E09               	movwf	escribe_eeprom@dato^0,c
 10876  001780  EC0B  F017         	call	_escribe_eeprom	;wreg free
 10877  001784  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 10878  001786  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 10879  001788                     
 10880                           ;main.c: 253:         for (int j = 0; j < 7; j++) {
 10881  001788  0E00               	movlw	0
 10882  00178A  6E0E               	movwf	(escribeHorariosMemoria@j+1)^0,c
 10883  00178C  0E00               	movlw	0
 10884  00178E  6E0D               	movwf	escribeHorariosMemoria@j^0,c
 10885  001790                     l3960:
 10886                           
 10887                           ;main.c: 254:             escribe_eeprom(contMemoria++, horarios[i].dias[j]);
 10888  001790  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
 10889  001794  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
 10890  001798  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
 10891  00179C  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
 10892  0017A0  0E00               	movlw	0
 10893  0017A2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10894  0017A4  0E0C               	movlw	12
 10895  0017A6  6E03               	movwf	___wmul@multiplicand^0,c
 10896  0017A8  EC61  F017         	call	___wmul	;wreg free
 10897  0017AC  0EAA               	movlw	low _horarios
 10898  0017AE  6E0B               	movwf	??_escribeHorariosMemoria^0,c
 10899  0017B0  0E01               	movlw	high _horarios
 10900  0017B2  6E0C               	movwf	(??_escribeHorariosMemoria+1)^0,c
 10901  0017B4  0E01               	movlw	1
 10902  0017B6  260B               	addwf	??_escribeHorariosMemoria^0,f,c
 10903  0017B8  0E00               	movlw	0
 10904  0017BA  220C               	addwfc	(??_escribeHorariosMemoria+1)^0,f,c
 10905  0017BC  5001               	movf	?___wmul^0,w,c
 10906  0017BE  260B               	addwf	??_escribeHorariosMemoria^0,f,c
 10907  0017C0  5002               	movf	(?___wmul+1)^0,w,c
 10908  0017C2  220C               	addwfc	(??_escribeHorariosMemoria+1)^0,f,c
 10909  0017C4  500D               	movf	escribeHorariosMemoria@j^0,w,c
 10910  0017C6  240B               	addwf	??_escribeHorariosMemoria^0,w,c
 10911  0017C8  6ED9               	movwf	fsr2l,c
 10912  0017CA  500E               	movf	(escribeHorariosMemoria@j+1)^0,w,c
 10913  0017CC  200C               	addwfc	(??_escribeHorariosMemoria+1)^0,w,c
 10914  0017CE  6EDA               	movwf	fsr2h,c
 10915  0017D0  50DF               	movf	indf2,w,c
 10916  0017D2  6E09               	movwf	escribe_eeprom@dato^0,c
 10917  0017D4  EC0B  F017         	call	_escribe_eeprom	;wreg free
 10918  0017D8  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 10919  0017DA  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 10920  0017DC                     
 10921                           ;main.c: 255:         }
 10922  0017DC  4A0D               	infsnz	escribeHorariosMemoria@j^0,f,c
 10923  0017DE  2A0E               	incf	(escribeHorariosMemoria@j+1)^0,f,c
 10924  0017E0  BE0E               	btfsc	(escribeHorariosMemoria@j+1)^0,7,c
 10925  0017E2  EFFC  F00B         	goto	u3091
 10926  0017E6  500E               	movf	(escribeHorariosMemoria@j+1)^0,w,c
 10927  0017E8  E109               	bnz	u3090
 10928  0017EA  0E07               	movlw	7
 10929  0017EC  5C0D               	subwf	escribeHorariosMemoria@j^0,w,c
 10930  0017EE  A0D8               	btfss	status,0,c
 10931  0017F0  EFFC  F00B         	goto	u3091
 10932  0017F4  EFFE  F00B         	goto	u3090
 10933  0017F8                     u3091:
 10934  0017F8  EFC8  F00B         	goto	l3960
 10935  0017FC                     u3090:
 10936  0017FC                     
 10937                           ;main.c: 257:         escribe_eeprom(contMemoria++, horarios[i].regar);
 10938  0017FC  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
 10939  001800  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
 10940  001804  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
 10941  001808  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
 10942  00180C  0E00               	movlw	0
 10943  00180E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10944  001810  0E0C               	movlw	12
 10945  001812  6E03               	movwf	___wmul@multiplicand^0,c
 10946  001814  EC61  F017         	call	___wmul	;wreg free
 10947  001818  0EB3               	movlw	low (_horarios+9)
 10948  00181A  2401               	addwf	?___wmul^0,w,c
 10949  00181C  6ED9               	movwf	fsr2l,c
 10950  00181E  0E01               	movlw	high (_horarios+9)
 10951  001820  2002               	addwfc	(?___wmul+1)^0,w,c
 10952  001822  6EDA               	movwf	fsr2h,c
 10953  001824  50DF               	movf	indf2,w,c
 10954  001826  6E09               	movwf	escribe_eeprom@dato^0,c
 10955  001828  EC0B  F017         	call	_escribe_eeprom	;wreg free
 10956  00182C  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 10957  00182E  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 10958  001830                     
 10959                           ;main.c: 258:         escribe_eeprom(contMemoria++, horarios[i].tiempoRegar);
 10960  001830  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
 10961  001834  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
 10962  001838  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
 10963  00183C  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
 10964  001840  0E00               	movlw	0
 10965  001842  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10966  001844  0E0C               	movlw	12
 10967  001846  6E03               	movwf	___wmul@multiplicand^0,c
 10968  001848  EC61  F017         	call	___wmul	;wreg free
 10969  00184C  0EB5               	movlw	low (_horarios+11)
 10970  00184E  2401               	addwf	?___wmul^0,w,c
 10971  001850  6ED9               	movwf	fsr2l,c
 10972  001852  0E01               	movlw	high (_horarios+11)
 10973  001854  2002               	addwfc	(?___wmul+1)^0,w,c
 10974  001856  6EDA               	movwf	fsr2h,c
 10975  001858  50DF               	movf	indf2,w,c
 10976  00185A  6E09               	movwf	escribe_eeprom@dato^0,c
 10977  00185C  EC0B  F017         	call	_escribe_eeprom	;wreg free
 10978  001860  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 10979  001862  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 10980                           
 10981                           ;main.c: 259:     }
 10982  001864  4A11               	infsnz	escribeHorariosMemoria@i^0,f,c
 10983  001866  2A12               	incf	(escribeHorariosMemoria@i+1)^0,f,c
 10984  001868  BE12               	btfsc	(escribeHorariosMemoria@i+1)^0,7,c
 10985  00186A  EF40  F00C         	goto	u3101
 10986  00186E  5012               	movf	(escribeHorariosMemoria@i+1)^0,w,c
 10987  001870  E109               	bnz	u3100
 10988  001872  0E18               	movlw	24
 10989  001874  5C11               	subwf	escribeHorariosMemoria@i^0,w,c
 10990  001876  A0D8               	btfss	status,0,c
 10991  001878  EF40  F00C         	goto	u3101
 10992  00187C  EF42  F00C         	goto	u3100
 10993  001880                     u3101:
 10994  001880  EFAA  F00B         	goto	l3950
 10995  001884                     u3100:
 10996  001884  0012               	return		;funcret
 10997  001886                     __end_of_escribeHorariosMemoria:
 10998                           	opt callstack 0
 10999                           
 11000 ;; *************** function _escribe_eeprom *****************
 11001 ;; Defined at:
 11002 ;;		line 218 in file "main.c"
 11003 ;; Parameters:    Size  Location     Type
 11004 ;;  direccion       2    6[COMRAM] unsigned short 
 11005 ;;  dato            1    8[COMRAM] unsigned char 
 11006 ;; Auto vars:     Size  Location     Type
 11007 ;;		None
 11008 ;; Return value:  Size  Location     Type
 11009 ;;                  1    wreg      void 
 11010 ;; Registers used:
 11011 ;;		wreg, status,2, status,0, cstack
 11012 ;; Tracked objects:
 11013 ;;		On entry : 0/0
 11014 ;;		On exit  : 0/0
 11015 ;;		Unchanged: 0/0
 11016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11017 ;;      Params:         3       0       0       0       0       0       0       0       0
 11018 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11019 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11020 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11021 ;;Total ram usage:        4 bytes
 11022 ;; Hardware stack levels used:    1
 11023 ;; Hardware stack levels required when called:    3
 11024 ;; This function calls:
 11025 ;;		_i2c_detener
 11026 ;;		_i2c_envia_dato
 11027 ;;		_i2c_inicia_com
 11028 ;; This function is called by:
 11029 ;;		_escribeHorariosMemoria
 11030 ;; This function uses a non-reentrant model
 11031 ;;
 11032                           
 11033                           	psect	text56
 11034  002E16                     __ptext56:
 11035                           	opt callstack 0
 11036  002E16                     _escribe_eeprom:
 11037                           	opt callstack 24
 11038  002E16                     
 11039                           ;main.c: 219:     i2c_inicia_com();
 11040  002E16  ECE8  F017         	call	_i2c_inicia_com	;wreg free
 11041                           
 11042                           ;main.c: 220:     i2c_envia_dato(0xAE);
 11043  002E1A  0EAE               	movlw	174
 11044  002E1C  ECCE  F017         	call	_i2c_envia_dato
 11045                           
 11046                           ;main.c: 221:     i2c_envia_dato(direccion >> 8);
 11047  002E20  5008               	movf	(escribe_eeprom@direccion+1)^0,w,c
 11048  002E22  ECCE  F017         	call	_i2c_envia_dato
 11049                           
 11050                           ;main.c: 223:     i2c_envia_dato(direccion);
 11051  002E26  5007               	movf	escribe_eeprom@direccion^0,w,c
 11052  002E28  ECCE  F017         	call	_i2c_envia_dato
 11053                           
 11054                           ;main.c: 225:     i2c_envia_dato(dato);
 11055  002E2C  5009               	movf	escribe_eeprom@dato^0,w,c
 11056  002E2E  ECCE  F017         	call	_i2c_envia_dato
 11057                           
 11058                           ;main.c: 226:     i2c_detener();
 11059  002E32  ECEC  F017         	call	_i2c_detener	;wreg free
 11060  002E36                     
 11061                           ;main.c: 227:     _delay((unsigned long)((10)*(4000000/4000.0)));
 11062  002E36  0E0D               	movlw	13
 11063  002E38  6E0A               	movwf	??_escribe_eeprom^0,c
 11064  002E3A  0EFC               	movlw	252
 11065  002E3C                     u3777:
 11066  002E3C  2EE8               	decfsz	wreg,f,c
 11067  002E3E  D7FE               	bra	u3777
 11068  002E40  2E0A               	decfsz	??_escribe_eeprom^0,f,c
 11069  002E42  D7FC               	bra	u3777
 11070  002E44  0012               	return		;funcret
 11071  002E46                     __end_of_escribe_eeprom:
 11072                           	opt callstack 0
 11073                           
 11074 ;; *************** function _leeHorariosMemoria *****************
 11075 ;; Defined at:
 11076 ;;		line 262 in file "main.c"
 11077 ;; Parameters:    Size  Location     Type
 11078 ;;		None
 11079 ;; Auto vars:     Size  Location     Type
 11080 ;;  j               2    8[COMRAM] int 
 11081 ;;  i               2   12[COMRAM] int 
 11082 ;;  contMemoria     2   10[COMRAM] int 
 11083 ;; Return value:  Size  Location     Type
 11084 ;;                  1    wreg      void 
 11085 ;; Registers used:
 11086 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11087 ;; Tracked objects:
 11088 ;;		On entry : 0/0
 11089 ;;		On exit  : 0/0
 11090 ;;		Unchanged: 0/0
 11091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11092 ;;      Params:         0       0       0       0       0       0       0       0       0
 11093 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11094 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11095 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11096 ;;Total ram usage:        8 bytes
 11097 ;; Hardware stack levels used:    1
 11098 ;; Hardware stack levels required when called:    4
 11099 ;; This function calls:
 11100 ;;		___wmul
 11101 ;;		_leer_eeprom
 11102 ;; This function is called by:
 11103 ;;		_main
 11104 ;; This function uses a non-reentrant model
 11105 ;;
 11106                           
 11107                           	psect	text57
 11108  001886                     __ptext57:
 11109                           	opt callstack 0
 11110  001886                     _leeHorariosMemoria:
 11111                           	opt callstack 26
 11112  001886                     
 11113                           ;main.c: 264:     int contMemoria = 0;
 11114  001886  0E00               	movlw	0
 11115  001888  6E0C               	movwf	(leeHorariosMemoria@contMemoria+1)^0,c
 11116  00188A  0E00               	movlw	0
 11117  00188C  6E0B               	movwf	leeHorariosMemoria@contMemoria^0,c
 11118                           
 11119                           ;main.c: 266:     for (int i = 0; i < 24; i++) {
 11120  00188E  0E00               	movlw	0
 11121  001890  6E0E               	movwf	(leeHorariosMemoria@i+1)^0,c
 11122  001892  0E00               	movlw	0
 11123  001894  6E0D               	movwf	leeHorariosMemoria@i^0,c
 11124  001896                     l4426:
 11125                           
 11126                           ;main.c: 267:         horarios[i].hora = leer_eeprom(contMemoria++);
 11127  001896  C00D  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
 11128  00189A  C00E  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
 11129  00189E  0E00               	movlw	0
 11130  0018A0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11131  0018A2  0E0C               	movlw	12
 11132  0018A4  6E03               	movwf	___wmul@multiplicand^0,c
 11133  0018A6  EC61  F017         	call	___wmul	;wreg free
 11134  0018AA  0EAA               	movlw	low _horarios
 11135  0018AC  2401               	addwf	?___wmul^0,w,c
 11136  0018AE  6ED9               	movwf	fsr2l,c
 11137  0018B0  0E01               	movlw	high _horarios
 11138  0018B2  2002               	addwfc	(?___wmul+1)^0,w,c
 11139  0018B4  6EDA               	movwf	fsr2h,c
 11140  0018B6  C00B  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
 11141  0018BA  C00C  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
 11142  0018BE  EC9E  F016         	call	_leer_eeprom	;wreg free
 11143  0018C2  6EDF               	movwf	indf2,c
 11144  0018C4  4A0B               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
 11145  0018C6  2A0C               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
 11146  0018C8                     
 11147                           ;main.c: 269:         for (int j = 0; j < 7; j++) {
 11148  0018C8  0E00               	movlw	0
 11149  0018CA  6E0A               	movwf	(leeHorariosMemoria@j+1)^0,c
 11150  0018CC  0E00               	movlw	0
 11151  0018CE  6E09               	movwf	leeHorariosMemoria@j^0,c
 11152  0018D0                     l4436:
 11153                           
 11154                           ;main.c: 270:             horarios[i].dias[j] = leer_eeprom(contMemoria++);
 11155  0018D0  C00D  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
 11156  0018D4  C00E  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
 11157  0018D8  0E00               	movlw	0
 11158  0018DA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11159  0018DC  0E0C               	movlw	12
 11160  0018DE  6E03               	movwf	___wmul@multiplicand^0,c
 11161  0018E0  EC61  F017         	call	___wmul	;wreg free
 11162  0018E4  0EAA               	movlw	low _horarios
 11163  0018E6  6E07               	movwf	??_leeHorariosMemoria^0,c
 11164  0018E8  0E01               	movlw	high _horarios
 11165  0018EA  6E08               	movwf	(??_leeHorariosMemoria+1)^0,c
 11166  0018EC  0E01               	movlw	1
 11167  0018EE  2607               	addwf	??_leeHorariosMemoria^0,f,c
 11168  0018F0  0E00               	movlw	0
 11169  0018F2  2208               	addwfc	(??_leeHorariosMemoria+1)^0,f,c
 11170  0018F4  5001               	movf	?___wmul^0,w,c
 11171  0018F6  2607               	addwf	??_leeHorariosMemoria^0,f,c
 11172  0018F8  5002               	movf	(?___wmul+1)^0,w,c
 11173  0018FA  2208               	addwfc	(??_leeHorariosMemoria+1)^0,f,c
 11174  0018FC  5009               	movf	leeHorariosMemoria@j^0,w,c
 11175  0018FE  2407               	addwf	??_leeHorariosMemoria^0,w,c
 11176  001900  6ED9               	movwf	fsr2l,c
 11177  001902  500A               	movf	(leeHorariosMemoria@j+1)^0,w,c
 11178  001904  2008               	addwfc	(??_leeHorariosMemoria+1)^0,w,c
 11179  001906  6EDA               	movwf	fsr2h,c
 11180  001908  C00B  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
 11181  00190C  C00C  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
 11182  001910  EC9E  F016         	call	_leer_eeprom	;wreg free
 11183  001914  6EDF               	movwf	indf2,c
 11184  001916  4A0B               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
 11185  001918  2A0C               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
 11186  00191A                     
 11187                           ;main.c: 271:         }
 11188  00191A  4A09               	infsnz	leeHorariosMemoria@j^0,f,c
 11189  00191C  2A0A               	incf	(leeHorariosMemoria@j+1)^0,f,c
 11190  00191E  BE0A               	btfsc	(leeHorariosMemoria@j+1)^0,7,c
 11191  001920  EF9B  F00C         	goto	u3491
 11192  001924  500A               	movf	(leeHorariosMemoria@j+1)^0,w,c
 11193  001926  E109               	bnz	u3490
 11194  001928  0E07               	movlw	7
 11195  00192A  5C09               	subwf	leeHorariosMemoria@j^0,w,c
 11196  00192C  A0D8               	btfss	status,0,c
 11197  00192E  EF9B  F00C         	goto	u3491
 11198  001932  EF9D  F00C         	goto	u3490
 11199  001936                     u3491:
 11200  001936  EF68  F00C         	goto	l4436
 11201  00193A                     u3490:
 11202  00193A                     
 11203                           ;main.c: 273:         horarios[i].regar = leer_eeprom(contMemoria++);
 11204  00193A  C00D  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
 11205  00193E  C00E  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
 11206  001942  0E00               	movlw	0
 11207  001944  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11208  001946  0E0C               	movlw	12
 11209  001948  6E03               	movwf	___wmul@multiplicand^0,c
 11210  00194A  EC61  F017         	call	___wmul	;wreg free
 11211  00194E  0EB3               	movlw	low (_horarios+9)
 11212  001950  2401               	addwf	?___wmul^0,w,c
 11213  001952  6ED9               	movwf	fsr2l,c
 11214  001954  0E01               	movlw	high (_horarios+9)
 11215  001956  2002               	addwfc	(?___wmul+1)^0,w,c
 11216  001958  6EDA               	movwf	fsr2h,c
 11217  00195A  C00B  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
 11218  00195E  C00C  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
 11219  001962  EC9E  F016         	call	_leer_eeprom	;wreg free
 11220  001966  6EDF               	movwf	indf2,c
 11221  001968  4A0B               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
 11222  00196A  2A0C               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
 11223  00196C                     
 11224                           ;main.c: 274:         horarios[i].tiempoRegar = leer_eeprom(contMemoria++);
 11225  00196C  C00D  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
 11226  001970  C00E  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
 11227  001974  0E00               	movlw	0
 11228  001976  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11229  001978  0E0C               	movlw	12
 11230  00197A  6E03               	movwf	___wmul@multiplicand^0,c
 11231  00197C  EC61  F017         	call	___wmul	;wreg free
 11232  001980  0EB5               	movlw	low (_horarios+11)
 11233  001982  2401               	addwf	?___wmul^0,w,c
 11234  001984  6ED9               	movwf	fsr2l,c
 11235  001986  0E01               	movlw	high (_horarios+11)
 11236  001988  2002               	addwfc	(?___wmul+1)^0,w,c
 11237  00198A  6EDA               	movwf	fsr2h,c
 11238  00198C  C00B  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
 11239  001990  C00C  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
 11240  001994  EC9E  F016         	call	_leer_eeprom	;wreg free
 11241  001998  6EDF               	movwf	indf2,c
 11242  00199A  4A0B               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
 11243  00199C  2A0C               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
 11244                           
 11245                           ;main.c: 275:     }
 11246  00199E  4A0D               	infsnz	leeHorariosMemoria@i^0,f,c
 11247  0019A0  2A0E               	incf	(leeHorariosMemoria@i+1)^0,f,c
 11248  0019A2  BE0E               	btfsc	(leeHorariosMemoria@i+1)^0,7,c
 11249  0019A4  EFDD  F00C         	goto	u3501
 11250  0019A8  500E               	movf	(leeHorariosMemoria@i+1)^0,w,c
 11251  0019AA  E109               	bnz	u3500
 11252  0019AC  0E18               	movlw	24
 11253  0019AE  5C0D               	subwf	leeHorariosMemoria@i^0,w,c
 11254  0019B0  A0D8               	btfss	status,0,c
 11255  0019B2  EFDD  F00C         	goto	u3501
 11256  0019B6  EFDF  F00C         	goto	u3500
 11257  0019BA                     u3501:
 11258  0019BA  EF4B  F00C         	goto	l4426
 11259  0019BE                     u3500:
 11260  0019BE  0012               	return		;funcret
 11261  0019C0                     __end_of_leeHorariosMemoria:
 11262                           	opt callstack 0
 11263                           
 11264 ;; *************** function _leer_eeprom *****************
 11265 ;; Defined at:
 11266 ;;		line 230 in file "main.c"
 11267 ;; Parameters:    Size  Location     Type
 11268 ;;  direccion       2    2[COMRAM] unsigned short 
 11269 ;; Auto vars:     Size  Location     Type
 11270 ;;  dato            1    5[COMRAM] unsigned char 
 11271 ;; Return value:  Size  Location     Type
 11272 ;;                  1    wreg      unsigned char 
 11273 ;; Registers used:
 11274 ;;		wreg, status,2, status,0, cstack
 11275 ;; Tracked objects:
 11276 ;;		On entry : 0/0
 11277 ;;		On exit  : 0/0
 11278 ;;		Unchanged: 0/0
 11279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11280 ;;      Params:         2       0       0       0       0       0       0       0       0
 11281 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11282 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11283 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11284 ;;Total ram usage:        4 bytes
 11285 ;; Hardware stack levels used:    1
 11286 ;; Hardware stack levels required when called:    3
 11287 ;; This function calls:
 11288 ;;		_i2c_detener
 11289 ;;		_i2c_envia_dato
 11290 ;;		_i2c_inicia_com
 11291 ;;		_i2c_recibe_dato
 11292 ;;		_i2c_reinicia_com
 11293 ;; This function is called by:
 11294 ;;		_leeHorariosMemoria
 11295 ;; This function uses a non-reentrant model
 11296 ;;
 11297                           
 11298                           	psect	text58
 11299  002D3C                     __ptext58:
 11300                           	opt callstack 0
 11301  002D3C                     _leer_eeprom:
 11302                           	opt callstack 26
 11303  002D3C                     
 11304                           ;main.c: 232:     unsigned char dato;;main.c: 234:     i2c_inicia_com();
 11305  002D3C  ECE8  F017         	call	_i2c_inicia_com	;wreg free
 11306                           
 11307                           ;main.c: 235:     i2c_envia_dato(0xAE);
 11308  002D40  0EAE               	movlw	174
 11309  002D42  ECCE  F017         	call	_i2c_envia_dato
 11310                           
 11311                           ;main.c: 236:     i2c_envia_dato(direccion >> 8);
 11312  002D46  5004               	movf	(leer_eeprom@direccion+1)^0,w,c
 11313  002D48  ECCE  F017         	call	_i2c_envia_dato
 11314                           
 11315                           ;main.c: 237:     i2c_envia_dato(direccion);
 11316  002D4C  5003               	movf	leer_eeprom@direccion^0,w,c
 11317  002D4E  ECCE  F017         	call	_i2c_envia_dato
 11318                           
 11319                           ;main.c: 238:     i2c_reinicia_com();
 11320  002D52  ECE4  F017         	call	_i2c_reinicia_com	;wreg free
 11321                           
 11322                           ;main.c: 239:     i2c_envia_dato(0xAF);
 11323  002D56  0EAF               	movlw	175
 11324  002D58  ECCE  F017         	call	_i2c_envia_dato
 11325                           
 11326                           ;main.c: 240:     dato = i2c_recibe_dato();
 11327  002D5C  ECA3  F017         	call	_i2c_recibe_dato	;wreg free
 11328  002D60  6E06               	movwf	leer_eeprom@dato^0,c
 11329                           
 11330                           ;main.c: 241:     i2c_detener();
 11331  002D62  ECEC  F017         	call	_i2c_detener	;wreg free
 11332  002D66                     
 11333                           ;main.c: 242:     _delay((unsigned long)((10)*(4000000/4000.0)));
 11334  002D66  0E0D               	movlw	13
 11335  002D68  6E05               	movwf	??_leer_eeprom^0,c
 11336  002D6A  0EFC               	movlw	252
 11337  002D6C                     u3787:
 11338  002D6C  2EE8               	decfsz	wreg,f,c
 11339  002D6E  D7FE               	bra	u3787
 11340  002D70  2E05               	decfsz	??_leer_eeprom^0,f,c
 11341  002D72  D7FC               	bra	u3787
 11342  002D74                     
 11343                           ;main.c: 244:     return dato;
 11344  002D74  5006               	movf	leer_eeprom@dato^0,w,c
 11345  002D76  0012               	return		;funcret
 11346  002D78                     __end_of_leer_eeprom:
 11347                           	opt callstack 0
 11348                           
 11349 ;; *************** function _i2c_reinicia_com *****************
 11350 ;; Defined at:
 11351 ;;		line 37 in file "./I2C.h"
 11352 ;; Parameters:    Size  Location     Type
 11353 ;;		None
 11354 ;; Auto vars:     Size  Location     Type
 11355 ;;		None
 11356 ;; Return value:  Size  Location     Type
 11357 ;;                  1    wreg      void 
 11358 ;; Registers used:
 11359 ;;		wreg, status,2, status,0, cstack
 11360 ;; Tracked objects:
 11361 ;;		On entry : 0/0
 11362 ;;		On exit  : 0/0
 11363 ;;		Unchanged: 0/0
 11364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11365 ;;      Params:         0       0       0       0       0       0       0       0       0
 11366 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11367 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11368 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11369 ;;Total ram usage:        0 bytes
 11370 ;; Hardware stack levels used:    1
 11371 ;; Hardware stack levels required when called:    2
 11372 ;; This function calls:
 11373 ;;		_i2c_espera
 11374 ;; This function is called by:
 11375 ;;		_leer_rtc
 11376 ;;		_leer_eeprom
 11377 ;; This function uses a non-reentrant model
 11378 ;;
 11379                           
 11380                           	psect	text59
 11381  002FC8                     __ptext59:
 11382                           	opt callstack 0
 11383  002FC8                     _i2c_reinicia_com:
 11384                           	opt callstack 25
 11385  002FC8                     
 11386                           ;./I2C.h: 38:     i2c_espera();
 11387  002FC8  EC4E  F017         	call	_i2c_espera	;wreg free
 11388  002FCC                     
 11389                           ;./I2C.h: 39:     SSPCON2bits.RSEN = 1;
 11390  002FCC  82C5               	bsf	197,1,c	;volatile
 11391  002FCE  0012               	return		;funcret
 11392  002FD0                     __end_of_i2c_reinicia_com:
 11393                           	opt callstack 0
 11394                           
 11395 ;; *************** function _i2c_recibe_dato *****************
 11396 ;; Defined at:
 11397 ;;		line 68 in file "./I2C.h"
 11398 ;; Parameters:    Size  Location     Type
 11399 ;;		None
 11400 ;; Auto vars:     Size  Location     Type
 11401 ;;  datoleido       1    1[COMRAM] unsigned char 
 11402 ;; Return value:  Size  Location     Type
 11403 ;;                  1    wreg      unsigned char 
 11404 ;; Registers used:
 11405 ;;		wreg, status,2, status,0, cstack
 11406 ;; Tracked objects:
 11407 ;;		On entry : 0/0
 11408 ;;		On exit  : 0/0
 11409 ;;		Unchanged: 0/0
 11410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11411 ;;      Params:         0       0       0       0       0       0       0       0       0
 11412 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11413 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11414 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11415 ;;Total ram usage:        1 bytes
 11416 ;; Hardware stack levels used:    1
 11417 ;; Hardware stack levels required when called:    2
 11418 ;; This function calls:
 11419 ;;		_i2c_espera
 11420 ;; This function is called by:
 11421 ;;		_leer_rtc
 11422 ;;		_leer_eeprom
 11423 ;; This function uses a non-reentrant model
 11424 ;;
 11425                           
 11426                           	psect	text60
 11427  002F46                     __ptext60:
 11428                           	opt callstack 0
 11429  002F46                     _i2c_recibe_dato:
 11430                           	opt callstack 25
 11431  002F46                     
 11432                           ;./I2C.h: 70:     unsigned char datoleido;;./I2C.h: 73:     i2c_espera();
 11433  002F46  EC4E  F017         	call	_i2c_espera	;wreg free
 11434  002F4A                     
 11435                           ;./I2C.h: 74:     SSPCON2bits.RCEN = 1;
 11436  002F4A  86C5               	bsf	197,3,c	;volatile
 11437                           
 11438                           ;./I2C.h: 76:     i2c_espera();
 11439  002F4C  EC4E  F017         	call	_i2c_espera	;wreg free
 11440  002F50                     
 11441                           ;./I2C.h: 77:     datoleido = SSPBUF;
 11442  002F50  CFC9 F002          	movff	4041,i2c_recibe_dato@datoleido	;volatile
 11443                           
 11444                           ;./I2C.h: 80:     i2c_espera();
 11445  002F54  EC4E  F017         	call	_i2c_espera	;wreg free
 11446  002F58                     
 11447                           ;./I2C.h: 82:     SSPCON2bits.ACKDT = 1;
 11448  002F58  8AC5               	bsf	197,5,c	;volatile
 11449  002F5A                     
 11450                           ;./I2C.h: 87:     SSPCON2bits.ACKEN = 1;
 11451  002F5A  88C5               	bsf	197,4,c	;volatile
 11452  002F5C                     
 11453                           ;./I2C.h: 91:     return datoleido;
 11454  002F5C  5002               	movf	i2c_recibe_dato@datoleido^0,w,c
 11455  002F5E  0012               	return		;funcret
 11456  002F60                     __end_of_i2c_recibe_dato:
 11457                           	opt callstack 0
 11458                           
 11459 ;; *************** function _i2c_inicia_com *****************
 11460 ;; Defined at:
 11461 ;;		line 28 in file "./I2C.h"
 11462 ;; Parameters:    Size  Location     Type
 11463 ;;		None
 11464 ;; Auto vars:     Size  Location     Type
 11465 ;;		None
 11466 ;; Return value:  Size  Location     Type
 11467 ;;                  1    wreg      void 
 11468 ;; Registers used:
 11469 ;;		wreg, status,2, status,0, cstack
 11470 ;; Tracked objects:
 11471 ;;		On entry : 0/0
 11472 ;;		On exit  : 0/0
 11473 ;;		Unchanged: 0/0
 11474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11475 ;;      Params:         0       0       0       0       0       0       0       0       0
 11476 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11477 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11478 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11479 ;;Total ram usage:        0 bytes
 11480 ;; Hardware stack levels used:    1
 11481 ;; Hardware stack levels required when called:    2
 11482 ;; This function calls:
 11483 ;;		_i2c_espera
 11484 ;; This function is called by:
 11485 ;;		_escribe_rtc
 11486 ;;		_leer_rtc
 11487 ;;		_escribe_eeprom
 11488 ;;		_leer_eeprom
 11489 ;; This function uses a non-reentrant model
 11490 ;;
 11491                           
 11492                           	psect	text61
 11493  002FD0                     __ptext61:
 11494                           	opt callstack 0
 11495  002FD0                     _i2c_inicia_com:
 11496                           	opt callstack 25
 11497  002FD0                     
 11498                           ;./I2C.h: 29:     i2c_espera();
 11499  002FD0  EC4E  F017         	call	_i2c_espera	;wreg free
 11500  002FD4                     
 11501                           ;./I2C.h: 30:     SSPCON2bits.SEN = 1;
 11502  002FD4  80C5               	bsf	197,0,c	;volatile
 11503  002FD6  0012               	return		;funcret
 11504  002FD8                     __end_of_i2c_inicia_com:
 11505                           	opt callstack 0
 11506                           
 11507 ;; *************** function _i2c_envia_dato *****************
 11508 ;; Defined at:
 11509 ;;		line 57 in file "./I2C.h"
 11510 ;; Parameters:    Size  Location     Type
 11511 ;;  dato            1    wreg     unsigned char 
 11512 ;; Auto vars:     Size  Location     Type
 11513 ;;  dato            1    1[COMRAM] unsigned char 
 11514 ;; Return value:  Size  Location     Type
 11515 ;;                  1    wreg      unsigned char 
 11516 ;; Registers used:
 11517 ;;		wreg, status,2, status,0, cstack
 11518 ;; Tracked objects:
 11519 ;;		On entry : 0/0
 11520 ;;		On exit  : 0/0
 11521 ;;		Unchanged: 0/0
 11522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11523 ;;      Params:         0       0       0       0       0       0       0       0       0
 11524 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11525 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11526 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11527 ;;Total ram usage:        1 bytes
 11528 ;; Hardware stack levels used:    1
 11529 ;; Hardware stack levels required when called:    2
 11530 ;; This function calls:
 11531 ;;		_i2c_espera
 11532 ;; This function is called by:
 11533 ;;		_escribe_rtc
 11534 ;;		_leer_rtc
 11535 ;;		_escribe_eeprom
 11536 ;;		_leer_eeprom
 11537 ;; This function uses a non-reentrant model
 11538 ;;
 11539                           
 11540                           	psect	text62
 11541  002F9C                     __ptext62:
 11542                           	opt callstack 0
 11543  002F9C                     _i2c_envia_dato:
 11544                           	opt callstack 25
 11545                           
 11546                           ;incstack = 0
 11547                           ;i2c_envia_dato@dato stored from wreg
 11548  002F9C  6E02               	movwf	i2c_envia_dato@dato^0,c
 11549  002F9E                     
 11550                           ;./I2C.h: 58:     i2c_espera();
 11551  002F9E  EC4E  F017         	call	_i2c_espera	;wreg free
 11552  002FA2                     
 11553                           ;./I2C.h: 59:     SSPBUF = dato;
 11554  002FA2  C002  FFC9         	movff	i2c_envia_dato@dato,4041	;volatile
 11555  002FA6  0012               	return		;funcret
 11556  002FA8                     __end_of_i2c_envia_dato:
 11557                           	opt callstack 0
 11558                           
 11559 ;; *************** function _i2c_detener *****************
 11560 ;; Defined at:
 11561 ;;		line 46 in file "./I2C.h"
 11562 ;; Parameters:    Size  Location     Type
 11563 ;;		None
 11564 ;; Auto vars:     Size  Location     Type
 11565 ;;		None
 11566 ;; Return value:  Size  Location     Type
 11567 ;;                  1    wreg      void 
 11568 ;; Registers used:
 11569 ;;		wreg, status,2, status,0, cstack
 11570 ;; Tracked objects:
 11571 ;;		On entry : 0/0
 11572 ;;		On exit  : 0/0
 11573 ;;		Unchanged: 0/0
 11574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11575 ;;      Params:         0       0       0       0       0       0       0       0       0
 11576 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11577 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11578 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11579 ;;Total ram usage:        0 bytes
 11580 ;; Hardware stack levels used:    1
 11581 ;; Hardware stack levels required when called:    2
 11582 ;; This function calls:
 11583 ;;		_i2c_espera
 11584 ;; This function is called by:
 11585 ;;		_escribe_rtc
 11586 ;;		_leer_rtc
 11587 ;;		_escribe_eeprom
 11588 ;;		_leer_eeprom
 11589 ;; This function uses a non-reentrant model
 11590 ;;
 11591                           
 11592                           	psect	text63
 11593  002FD8                     __ptext63:
 11594                           	opt callstack 0
 11595  002FD8                     _i2c_detener:
 11596                           	opt callstack 25
 11597  002FD8                     
 11598                           ;./I2C.h: 47:     i2c_espera();
 11599  002FD8  EC4E  F017         	call	_i2c_espera	;wreg free
 11600  002FDC                     
 11601                           ;./I2C.h: 48:     SSPCON2bits.PEN = 1;
 11602  002FDC  84C5               	bsf	197,2,c	;volatile
 11603  002FDE  0012               	return		;funcret
 11604  002FE0                     __end_of_i2c_detener:
 11605                           	opt callstack 0
 11606                           
 11607 ;; *************** function _i2c_espera *****************
 11608 ;; Defined at:
 11609 ;;		line 20 in file "./I2C.h"
 11610 ;; Parameters:    Size  Location     Type
 11611 ;;		None
 11612 ;; Auto vars:     Size  Location     Type
 11613 ;;		None
 11614 ;; Return value:  Size  Location     Type
 11615 ;;                  1    wreg      void 
 11616 ;; Registers used:
 11617 ;;		wreg, status,2, status,0
 11618 ;; Tracked objects:
 11619 ;;		On entry : 0/0
 11620 ;;		On exit  : 0/0
 11621 ;;		Unchanged: 0/0
 11622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11623 ;;      Params:         0       0       0       0       0       0       0       0       0
 11624 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11625 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11626 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11627 ;;Total ram usage:        1 bytes
 11628 ;; Hardware stack levels used:    1
 11629 ;; Hardware stack levels required when called:    1
 11630 ;; This function calls:
 11631 ;;		Nothing
 11632 ;; This function is called by:
 11633 ;;		_i2c_inicia_com
 11634 ;;		_i2c_reinicia_com
 11635 ;;		_i2c_detener
 11636 ;;		_i2c_envia_dato
 11637 ;;		_i2c_recibe_dato
 11638 ;; This function uses a non-reentrant model
 11639 ;;
 11640                           
 11641                           	psect	text64
 11642  002E9C                     __ptext64:
 11643                           	opt callstack 0
 11644  002E9C                     _i2c_espera:
 11645                           	opt callstack 25
 11646  002E9C                     l3392:
 11647  002E9C  CFC5 F001          	movff	4037,??_i2c_espera	;volatile
 11648  002EA0  0E1F               	movlw	31
 11649  002EA2  1601               	andwf	??_i2c_espera^0,f,c
 11650  002EA4  A4D8               	btfss	status,2,c
 11651  002EA6  EF57  F017         	goto	u2451
 11652  002EAA  EF59  F017         	goto	u2450
 11653  002EAE                     u2451:
 11654  002EAE  EF4E  F017         	goto	l3392
 11655  002EB2                     u2450:
 11656  002EB2  B4C7               	btfsc	199,2,c	;volatile
 11657  002EB4  EF5E  F017         	goto	u2461
 11658  002EB8  EF60  F017         	goto	u2460
 11659  002EBC                     u2461:
 11660  002EBC  EF4E  F017         	goto	l3392
 11661  002EC0                     u2460:
 11662  002EC0  0012               	return		;funcret
 11663  002EC2                     __end_of_i2c_espera:
 11664                           	opt callstack 0
 11665                           
 11666 ;; *************** function _inicializarObjetos *****************
 11667 ;; Defined at:
 11668 ;;		line 158 in file "main.c"
 11669 ;; Parameters:    Size  Location     Type
 11670 ;;		None
 11671 ;; Auto vars:     Size  Location     Type
 11672 ;;  j               2    8[COMRAM] int 
 11673 ;;  i               2   10[COMRAM] int 
 11674 ;;  i               2   12[COMRAM] int 
 11675 ;; Return value:  Size  Location     Type
 11676 ;;                  1    wreg      void 
 11677 ;; Registers used:
 11678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11679 ;; Tracked objects:
 11680 ;;		On entry : 0/0
 11681 ;;		On exit  : 0/0
 11682 ;;		Unchanged: 0/0
 11683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11684 ;;      Params:         0       0       0       0       0       0       0       0       0
 11685 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11686 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11687 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11688 ;;Total ram usage:        8 bytes
 11689 ;; Hardware stack levels used:    1
 11690 ;; Hardware stack levels required when called:    2
 11691 ;; This function calls:
 11692 ;;		___wmul
 11693 ;; This function is called by:
 11694 ;;		_main
 11695 ;; This function uses a non-reentrant model
 11696 ;;
 11697                           
 11698                           	psect	text65
 11699  00132E                     __ptext65:
 11700                           	opt callstack 0
 11701  00132E                     _inicializarObjetos:
 11702                           	opt callstack 28
 11703  00132E                     
 11704                           ;main.c: 160:     for (int i = 0; i < 24; i++) {
 11705  00132E  0E00               	movlw	0
 11706  001330  6E0E               	movwf	(inicializarObjetos@i+1)^0,c
 11707  001332  0E00               	movlw	0
 11708  001334  6E0D               	movwf	inicializarObjetos@i^0,c
 11709  001336                     l4390:
 11710                           
 11711                           ;main.c: 161:         horarios[i].hora = i;
 11712  001336  C00D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
 11713  00133A  C00E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
 11714  00133E  0E00               	movlw	0
 11715  001340  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11716  001342  0E0C               	movlw	12
 11717  001344  6E03               	movwf	___wmul@multiplicand^0,c
 11718  001346  EC61  F017         	call	___wmul	;wreg free
 11719  00134A  0EAA               	movlw	low _horarios
 11720  00134C  2401               	addwf	?___wmul^0,w,c
 11721  00134E  6ED9               	movwf	fsr2l,c
 11722  001350  0E01               	movlw	high _horarios
 11723  001352  2002               	addwfc	(?___wmul+1)^0,w,c
 11724  001354  6EDA               	movwf	fsr2h,c
 11725  001356  C00D  FFDF         	movff	inicializarObjetos@i,indf2
 11726                           
 11727                           ;main.c: 162:         horarios[i].regar = 0;
 11728  00135A  C00D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
 11729  00135E  C00E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
 11730  001362  0E00               	movlw	0
 11731  001364  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11732  001366  0E0C               	movlw	12
 11733  001368  6E03               	movwf	___wmul@multiplicand^0,c
 11734  00136A  EC61  F017         	call	___wmul	;wreg free
 11735  00136E  0EB3               	movlw	low (_horarios+9)
 11736  001370  2401               	addwf	?___wmul^0,w,c
 11737  001372  6ED9               	movwf	fsr2l,c
 11738  001374  0E01               	movlw	high (_horarios+9)
 11739  001376  2002               	addwfc	(?___wmul+1)^0,w,c
 11740  001378  6EDA               	movwf	fsr2h,c
 11741  00137A  0E00               	movlw	0
 11742  00137C  6EDF               	movwf	indf2,c
 11743                           
 11744                           ;main.c: 163:         horarios[i].regado = 0;
 11745  00137E  C00D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
 11746  001382  C00E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
 11747  001386  0E00               	movlw	0
 11748  001388  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11749  00138A  0E0C               	movlw	12
 11750  00138C  6E03               	movwf	___wmul@multiplicand^0,c
 11751  00138E  EC61  F017         	call	___wmul	;wreg free
 11752  001392  0EB4               	movlw	low (_horarios+10)
 11753  001394  2401               	addwf	?___wmul^0,w,c
 11754  001396  6ED9               	movwf	fsr2l,c
 11755  001398  0E01               	movlw	high (_horarios+10)
 11756  00139A  2002               	addwfc	(?___wmul+1)^0,w,c
 11757  00139C  6EDA               	movwf	fsr2h,c
 11758  00139E  0E00               	movlw	0
 11759  0013A0  6EDF               	movwf	indf2,c
 11760                           
 11761                           ;main.c: 164:         horarios[i].tiempoRegar = 15;
 11762  0013A2  C00D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
 11763  0013A6  C00E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
 11764  0013AA  0E00               	movlw	0
 11765  0013AC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11766  0013AE  0E0C               	movlw	12
 11767  0013B0  6E03               	movwf	___wmul@multiplicand^0,c
 11768  0013B2  EC61  F017         	call	___wmul	;wreg free
 11769  0013B6  0EB5               	movlw	low (_horarios+11)
 11770  0013B8  2401               	addwf	?___wmul^0,w,c
 11771  0013BA  6ED9               	movwf	fsr2l,c
 11772  0013BC  0E01               	movlw	high (_horarios+11)
 11773  0013BE  2002               	addwfc	(?___wmul+1)^0,w,c
 11774  0013C0  6EDA               	movwf	fsr2h,c
 11775  0013C2  0E0F               	movlw	15
 11776  0013C4  6EDF               	movwf	indf2,c
 11777  0013C6                     
 11778                           ;main.c: 165:     }
 11779  0013C6  4A0D               	infsnz	inicializarObjetos@i^0,f,c
 11780  0013C8  2A0E               	incf	(inicializarObjetos@i+1)^0,f,c
 11781  0013CA  BE0E               	btfsc	(inicializarObjetos@i+1)^0,7,c
 11782  0013CC  EFF1  F009         	goto	u3461
 11783  0013D0  500E               	movf	(inicializarObjetos@i+1)^0,w,c
 11784  0013D2  E109               	bnz	u3460
 11785  0013D4  0E18               	movlw	24
 11786  0013D6  5C0D               	subwf	inicializarObjetos@i^0,w,c
 11787  0013D8  A0D8               	btfss	status,0,c
 11788  0013DA  EFF1  F009         	goto	u3461
 11789  0013DE  EFF3  F009         	goto	u3460
 11790  0013E2                     u3461:
 11791  0013E2  EF9B  F009         	goto	l4390
 11792  0013E6                     u3460:
 11793  0013E6                     
 11794                           ;main.c: 167:     for (int i = 0; i < 24; i++) {
 11795  0013E6  0E00               	movlw	0
 11796  0013E8  6E0C               	movwf	(inicializarObjetos@i_806+1)^0,c
 11797  0013EA  0E00               	movlw	0
 11798  0013EC  6E0B               	movwf	inicializarObjetos@i_806^0,c
 11799  0013EE                     l4402:
 11800                           
 11801                           ;main.c: 169:         for (int j = 0; j < 7; j++)
 11802  0013EE  0E00               	movlw	0
 11803  0013F0  6E0A               	movwf	(inicializarObjetos@j+1)^0,c
 11804  0013F2  0E00               	movlw	0
 11805  0013F4  6E09               	movwf	inicializarObjetos@j^0,c
 11806  0013F6                     l4408:
 11807                           
 11808                           ;main.c: 170:             horarios[i].dias[j] = 0;
 11809  0013F6  C00B  F001         	movff	inicializarObjetos@i_806,___wmul@multiplier
 11810  0013FA  C00C  F002         	movff	inicializarObjetos@i_806+1,___wmul@multiplier+1
 11811  0013FE  0E00               	movlw	0
 11812  001400  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11813  001402  0E0C               	movlw	12
 11814  001404  6E03               	movwf	___wmul@multiplicand^0,c
 11815  001406  EC61  F017         	call	___wmul	;wreg free
 11816  00140A  0EAA               	movlw	low _horarios
 11817  00140C  6E07               	movwf	??_inicializarObjetos^0,c
 11818  00140E  0E01               	movlw	high _horarios
 11819  001410  6E08               	movwf	(??_inicializarObjetos+1)^0,c
 11820  001412  0E01               	movlw	1
 11821  001414  2607               	addwf	??_inicializarObjetos^0,f,c
 11822  001416  0E00               	movlw	0
 11823  001418  2208               	addwfc	(??_inicializarObjetos+1)^0,f,c
 11824  00141A  5001               	movf	?___wmul^0,w,c
 11825  00141C  2607               	addwf	??_inicializarObjetos^0,f,c
 11826  00141E  5002               	movf	(?___wmul+1)^0,w,c
 11827  001420  2208               	addwfc	(??_inicializarObjetos+1)^0,f,c
 11828  001422  5009               	movf	inicializarObjetos@j^0,w,c
 11829  001424  2407               	addwf	??_inicializarObjetos^0,w,c
 11830  001426  6ED9               	movwf	fsr2l,c
 11831  001428  500A               	movf	(inicializarObjetos@j+1)^0,w,c
 11832  00142A  2008               	addwfc	(??_inicializarObjetos+1)^0,w,c
 11833  00142C  6EDA               	movwf	fsr2h,c
 11834  00142E  0E00               	movlw	0
 11835  001430  6EDF               	movwf	indf2,c
 11836  001432  4A09               	infsnz	inicializarObjetos@j^0,f,c
 11837  001434  2A0A               	incf	(inicializarObjetos@j+1)^0,f,c
 11838  001436  BE0A               	btfsc	(inicializarObjetos@j+1)^0,7,c
 11839  001438  EF27  F00A         	goto	u3471
 11840  00143C  500A               	movf	(inicializarObjetos@j+1)^0,w,c
 11841  00143E  E109               	bnz	u3470
 11842  001440  0E07               	movlw	7
 11843  001442  5C09               	subwf	inicializarObjetos@j^0,w,c
 11844  001444  A0D8               	btfss	status,0,c
 11845  001446  EF27  F00A         	goto	u3471
 11846  00144A  EF29  F00A         	goto	u3470
 11847  00144E                     u3471:
 11848  00144E  EFFB  F009         	goto	l4408
 11849  001452                     u3470:
 11850  001452                     
 11851                           ;main.c: 172:         horarios[i].dias[7] = '\0';
 11852  001452  C00B  F001         	movff	inicializarObjetos@i_806,___wmul@multiplier
 11853  001456  C00C  F002         	movff	inicializarObjetos@i_806+1,___wmul@multiplier+1
 11854  00145A  0E00               	movlw	0
 11855  00145C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11856  00145E  0E0C               	movlw	12
 11857  001460  6E03               	movwf	___wmul@multiplicand^0,c
 11858  001462  EC61  F017         	call	___wmul	;wreg free
 11859  001466  0EB2               	movlw	low (_horarios+8)
 11860  001468  2401               	addwf	?___wmul^0,w,c
 11861  00146A  6ED9               	movwf	fsr2l,c
 11862  00146C  0E01               	movlw	high (_horarios+8)
 11863  00146E  2002               	addwfc	(?___wmul+1)^0,w,c
 11864  001470  6EDA               	movwf	fsr2h,c
 11865  001472  0E00               	movlw	0
 11866  001474  6EDF               	movwf	indf2,c
 11867  001476                     
 11868                           ;main.c: 173:     }
 11869  001476  4A0B               	infsnz	inicializarObjetos@i_806^0,f,c
 11870  001478  2A0C               	incf	(inicializarObjetos@i_806+1)^0,f,c
 11871  00147A  BE0C               	btfsc	(inicializarObjetos@i_806+1)^0,7,c
 11872  00147C  EF49  F00A         	goto	u3481
 11873  001480  500C               	movf	(inicializarObjetos@i_806+1)^0,w,c
 11874  001482  E109               	bnz	u3480
 11875  001484  0E18               	movlw	24
 11876  001486  5C0B               	subwf	inicializarObjetos@i_806^0,w,c
 11877  001488  A0D8               	btfss	status,0,c
 11878  00148A  EF49  F00A         	goto	u3481
 11879  00148E  EF4B  F00A         	goto	u3480
 11880  001492                     u3481:
 11881  001492  EFF7  F009         	goto	l4402
 11882  001496                     u3480:
 11883  001496  0012               	return		;funcret
 11884  001498                     __end_of_inicializarObjetos:
 11885                           	opt callstack 0
 11886                           
 11887 ;; *************** function ___wmul *****************
 11888 ;; Defined at:
 11889 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 11890 ;; Parameters:    Size  Location     Type
 11891 ;;  multiplier      2    0[COMRAM] unsigned int 
 11892 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11893 ;; Auto vars:     Size  Location     Type
 11894 ;;  product         2    4[COMRAM] unsigned int 
 11895 ;; Return value:  Size  Location     Type
 11896 ;;                  2    0[COMRAM] unsigned int 
 11897 ;; Registers used:
 11898 ;;		wreg, status,2, status,0, prodl, prodh
 11899 ;; Tracked objects:
 11900 ;;		On entry : 0/0
 11901 ;;		On exit  : 0/0
 11902 ;;		Unchanged: 0/0
 11903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11904 ;;      Params:         4       0       0       0       0       0       0       0       0
 11905 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11906 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11907 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11908 ;;Total ram usage:        6 bytes
 11909 ;; Hardware stack levels used:    1
 11910 ;; Hardware stack levels required when called:    1
 11911 ;; This function calls:
 11912 ;;		Nothing
 11913 ;; This function is called by:
 11914 ;;		_inicializarObjetos
 11915 ;;		_escribeHorariosMemoria
 11916 ;;		_leeHorariosMemoria
 11917 ;;		_dameDatosSistema
 11918 ;;		_atoi
 11919 ;; This function uses a non-reentrant model
 11920 ;;
 11921                           
 11922                           	psect	text66
 11923  002EC2                     __ptext66:
 11924                           	opt callstack 0
 11925  002EC2                     ___wmul:
 11926                           	opt callstack 23
 11927  002EC2  5001               	movf	___wmul@multiplier^0,w,c
 11928  002EC4  0203               	mulwf	___wmul@multiplicand^0,c
 11929  002EC6  CFF3 F005          	movff	prodl,___wmul@product
 11930  002ECA  CFF4 F006          	movff	prodh,___wmul@product+1
 11931  002ECE  5001               	movf	___wmul@multiplier^0,w,c
 11932  002ED0  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11933  002ED2  50F3               	movf	243,w,c
 11934  002ED4  2606               	addwf	(___wmul@product+1)^0,f,c
 11935  002ED6  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11936  002ED8  0203               	mulwf	___wmul@multiplicand^0,c
 11937  002EDA  50F3               	movf	243,w,c
 11938  002EDC  2606               	addwf	(___wmul@product+1)^0,f,c
 11939  002EDE  C005  F001         	movff	___wmul@product,?___wmul
 11940  002EE2  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11941  002EE6  0012               	return		;funcret
 11942  002EE8                     __end_of___wmul:
 11943                           	opt callstack 0
 11944                           
 11945 ;; *************** function _i2c_iniciar *****************
 11946 ;; Defined at:
 11947 ;;		line 4 in file "./I2C.h"
 11948 ;; Parameters:    Size  Location     Type
 11949 ;;		None
 11950 ;; Auto vars:     Size  Location     Type
 11951 ;;		None
 11952 ;; Return value:  Size  Location     Type
 11953 ;;                  1    wreg      void 
 11954 ;; Registers used:
 11955 ;;		wreg, status,2
 11956 ;; Tracked objects:
 11957 ;;		On entry : 0/0
 11958 ;;		On exit  : 0/0
 11959 ;;		Unchanged: 0/0
 11960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11961 ;;      Params:         0       0       0       0       0       0       0       0       0
 11962 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11963 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11964 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11965 ;;Total ram usage:        0 bytes
 11966 ;; Hardware stack levels used:    1
 11967 ;; Hardware stack levels required when called:    1
 11968 ;; This function calls:
 11969 ;;		Nothing
 11970 ;; This function is called by:
 11971 ;;		_main
 11972 ;; This function uses a non-reentrant model
 11973 ;;
 11974                           
 11975                           	psect	text67
 11976  002F76                     __ptext67:
 11977                           	opt callstack 0
 11978  002F76                     _i2c_iniciar:
 11979                           	opt callstack 29
 11980  002F76                     
 11981                           ;./I2C.h: 5:     TRISBbits.RB0 = 1;
 11982  002F76  8093               	bsf	147,0,c	;volatile
 11983                           
 11984                           ;./I2C.h: 6:     TRISBbits.RB1 = 1;
 11985  002F78  8293               	bsf	147,1,c	;volatile
 11986  002F7A                     
 11987                           ;./I2C.h: 7:     SSPSTAT = 0b10000000;
 11988  002F7A  0E80               	movlw	128
 11989  002F7C  6EC7               	movwf	199,c	;volatile
 11990                           
 11991                           ;./I2C.h: 8:     SSPCON1 = 0b00101000;
 11992  002F7E  0E28               	movlw	40
 11993  002F80  6EC6               	movwf	198,c	;volatile
 11994                           
 11995                           ;./I2C.h: 9:     SSPCON2 = 0b00000000;
 11996  002F82  0E00               	movlw	0
 11997  002F84  6EC5               	movwf	197,c	;volatile
 11998                           
 11999                           ;./I2C.h: 10:     SSPADD = 9;
 12000  002F86  0E09               	movlw	9
 12001  002F88  6EC8               	movwf	200,c	;volatile
 12002  002F8A  0012               	return		;funcret
 12003  002F8C                     __end_of_i2c_iniciar:
 12004                           	opt callstack 0
 12005                           
 12006 ;; *************** function _configurarAdc *****************
 12007 ;; Defined at:
 12008 ;;		line 138 in file "main.c"
 12009 ;; Parameters:    Size  Location     Type
 12010 ;;		None
 12011 ;; Auto vars:     Size  Location     Type
 12012 ;;		None
 12013 ;; Return value:  Size  Location     Type
 12014 ;;                  1    wreg      void 
 12015 ;; Registers used:
 12016 ;;		wreg, status,2
 12017 ;; Tracked objects:
 12018 ;;		On entry : 0/0
 12019 ;;		On exit  : 0/0
 12020 ;;		Unchanged: 0/0
 12021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12022 ;;      Params:         0       0       0       0       0       0       0       0       0
 12023 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12024 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12025 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12026 ;;Total ram usage:        0 bytes
 12027 ;; Hardware stack levels used:    1
 12028 ;; Hardware stack levels required when called:    1
 12029 ;; This function calls:
 12030 ;;		Nothing
 12031 ;; This function is called by:
 12032 ;;		_main
 12033 ;; This function uses a non-reentrant model
 12034 ;;
 12035                           
 12036                           	psect	text68
 12037  002FBE                     __ptext68:
 12038                           	opt callstack 0
 12039  002FBE                     _configurarAdc:
 12040                           	opt callstack 29
 12041  002FBE                     
 12042                           ;main.c: 139:     ADCON1 = 0b00000000;
 12043  002FBE  0E00               	movlw	0
 12044  002FC0  6EC1               	movwf	193,c	;volatile
 12045                           
 12046                           ;main.c: 140:     ADCON2 = 0b10100101;
 12047  002FC2  0EA5               	movlw	165
 12048  002FC4  6EC0               	movwf	192,c	;volatile
 12049  002FC6  0012               	return		;funcret
 12050  002FC8                     __end_of_configurarAdc:
 12051                           	opt callstack 0
 12052                           
 12053 ;; *************** function _UART_init *****************
 12054 ;; Defined at:
 12055 ;;		line 12 in file "./UART.h"
 12056 ;; Parameters:    Size  Location     Type
 12057 ;;  BAUD            4   26[COMRAM] long 
 12058 ;; Auto vars:     Size  Location     Type
 12059 ;;  frecuenciaCr    4    0        long 
 12060 ;; Return value:  Size  Location     Type
 12061 ;;                  1    wreg      void 
 12062 ;; Registers used:
 12063 ;;		wreg, status,2, status,0, cstack
 12064 ;; Tracked objects:
 12065 ;;		On entry : 0/0
 12066 ;;		On exit  : 0/0
 12067 ;;		Unchanged: 0/0
 12068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12069 ;;      Params:         4       0       0       0       0       0       0       0       0
 12070 ;;      Locals:         8       0       0       0       0       0       0       0       0
 12071 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12072 ;;      Totals:        12       0       0       0       0       0       0       0       0
 12073 ;;Total ram usage:       12 bytes
 12074 ;; Hardware stack levels used:    1
 12075 ;; Hardware stack levels required when called:    2
 12076 ;; This function calls:
 12077 ;;		___aldiv
 12078 ;; This function is called by:
 12079 ;;		_main
 12080 ;; This function uses a non-reentrant model
 12081 ;;
 12082                           
 12083                           	psect	text69
 12084  002724                     __ptext69:
 12085                           	opt callstack 0
 12086  002724                     _UART_init:
 12087                           	opt callstack 28
 12088  002724                     
 12089                           ;./UART.h: 14:     TRISCbits.TRISC6 = 0;
 12090  002724  9C94               	bcf	148,6,c	;volatile
 12091  002726                     
 12092                           ;./UART.h: 15:     TRISCbits.TRISC7 = 1;
 12093  002726  8E94               	bsf	148,7,c	;volatile
 12094  002728                     
 12095                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 12096  002728  0E10               	movlw	16
 12097  00272A  6E11               	movwf	___aldiv@divisor^0,c
 12098  00272C  0E00               	movlw	0
 12099  00272E  6E12               	movwf	(___aldiv@divisor+1)^0,c
 12100  002730  0E00               	movlw	0
 12101  002732  6E13               	movwf	(___aldiv@divisor+2)^0,c
 12102  002734  0E00               	movlw	0
 12103  002736  6E14               	movwf	(___aldiv@divisor+3)^0,c
 12104  002738  0E00               	movlw	0
 12105  00273A  6E0D               	movwf	___aldiv@dividend^0,c
 12106  00273C  0E09               	movlw	9
 12107  00273E  6E0E               	movwf	(___aldiv@dividend+1)^0,c
 12108  002740  0E3D               	movlw	61
 12109  002742  6E0F               	movwf	(___aldiv@dividend+2)^0,c
 12110  002744  0E00               	movlw	0
 12111  002746  6E10               	movwf	(___aldiv@dividend+3)^0,c
 12112  002748  EC7B  F00D         	call	___aldiv	;wreg free
 12113  00274C  C00D  F023         	movff	?___aldiv,_UART_init$1915
 12114  002750  C00E  F024         	movff	?___aldiv+1,_UART_init$1915+1
 12115  002754  C00F  F025         	movff	?___aldiv+2,_UART_init$1915+2
 12116  002758  C010  F026         	movff	?___aldiv+3,_UART_init$1915+3
 12117  00275C                     
 12118                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 12119  00275C  C023  F00D         	movff	_UART_init$1915,___aldiv@dividend
 12120  002760  C024  F00E         	movff	_UART_init$1915+1,___aldiv@dividend+1
 12121  002764  C025  F00F         	movff	_UART_init$1915+2,___aldiv@dividend+2
 12122  002768  C026  F010         	movff	_UART_init$1915+3,___aldiv@dividend+3
 12123  00276C  C01B  F011         	movff	UART_init@BAUD,___aldiv@divisor
 12124  002770  C01C  F012         	movff	UART_init@BAUD+1,___aldiv@divisor+1
 12125  002774  C01D  F013         	movff	UART_init@BAUD+2,___aldiv@divisor+2
 12126  002778  C01E  F014         	movff	UART_init@BAUD+3,___aldiv@divisor+3
 12127  00277C  EC7B  F00D         	call	___aldiv	;wreg free
 12128  002780  040D               	decf	?___aldiv^0,w,c
 12129  002782  6EAF               	movwf	175,c	;volatile
 12130  002784                     
 12131                           ;./UART.h: 21:     TXSTAbits.BRGH = 1;
 12132  002784  84AC               	bsf	172,2,c	;volatile
 12133  002786                     
 12134                           ;./UART.h: 22:     TXSTAbits.SYNC = 0;
 12135  002786  98AC               	bcf	172,4,c	;volatile
 12136  002788                     
 12137                           ;./UART.h: 23:     RCSTAbits.SPEN = 1;
 12138  002788  8EAB               	bsf	171,7,c	;volatile
 12139  00278A                     
 12140                           ;./UART.h: 26:     TXSTAbits.TX9 = 0;
 12141  00278A  9CAC               	bcf	172,6,c	;volatile
 12142  00278C                     
 12143                           ;./UART.h: 27:     TXSTAbits.TXEN = 1;
 12144  00278C  8AAC               	bsf	172,5,c	;volatile
 12145  00278E                     
 12146                           ;./UART.h: 30:     RCSTAbits.RC9 = 0;
 12147  00278E  9CAB               	bcf	171,6,c	;volatile
 12148  002790                     
 12149                           ;./UART.h: 31:     RCSTAbits.CREN = 1;
 12150  002790  88AB               	bsf	171,4,c	;volatile
 12151  002792  0012               	return		;funcret
 12152  002794                     __end_of_UART_init:
 12153                           	opt callstack 0
 12154                           
 12155 ;; *************** function ___aldiv *****************
 12156 ;; Defined at:
 12157 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 12158 ;; Parameters:    Size  Location     Type
 12159 ;;  dividend        4   12[COMRAM] long 
 12160 ;;  divisor         4   16[COMRAM] long 
 12161 ;; Auto vars:     Size  Location     Type
 12162 ;;  quotient        4   22[COMRAM] long 
 12163 ;;  sign            1   21[COMRAM] unsigned char 
 12164 ;;  counter         1   20[COMRAM] unsigned char 
 12165 ;; Return value:  Size  Location     Type
 12166 ;;                  4   12[COMRAM] long 
 12167 ;; Registers used:
 12168 ;;		wreg, status,2, status,0
 12169 ;; Tracked objects:
 12170 ;;		On entry : 0/0
 12171 ;;		On exit  : 0/0
 12172 ;;		Unchanged: 0/0
 12173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12174 ;;      Params:         8       0       0       0       0       0       0       0       0
 12175 ;;      Locals:         6       0       0       0       0       0       0       0       0
 12176 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12177 ;;      Totals:        14       0       0       0       0       0       0       0       0
 12178 ;;Total ram usage:       14 bytes
 12179 ;; Hardware stack levels used:    1
 12180 ;; Hardware stack levels required when called:    1
 12181 ;; This function calls:
 12182 ;;		Nothing
 12183 ;; This function is called by:
 12184 ;;		_UART_init
 12185 ;;		_map
 12186 ;; This function uses a non-reentrant model
 12187 ;;
 12188                           
 12189                           	psect	text70
 12190  001AF6                     __ptext70:
 12191                           	opt callstack 0
 12192  001AF6                     ___aldiv:
 12193                           	opt callstack 26
 12194  001AF6  0E00               	movlw	0
 12195  001AF8  6E16               	movwf	___aldiv@sign^0,c
 12196  001AFA  BE14               	btfsc	(___aldiv@divisor+3)^0,7,c
 12197  001AFC  EF84  F00D         	goto	u2740
 12198  001B00  EF82  F00D         	goto	u2741
 12199  001B04                     u2741:
 12200  001B04  EF8E  F00D         	goto	l3586
 12201  001B08                     u2740:
 12202  001B08  1E14               	comf	(___aldiv@divisor+3)^0,f,c
 12203  001B0A  1E13               	comf	(___aldiv@divisor+2)^0,f,c
 12204  001B0C  1E12               	comf	(___aldiv@divisor+1)^0,f,c
 12205  001B0E  6C11               	negf	___aldiv@divisor^0,c
 12206  001B10  0E00               	movlw	0
 12207  001B12  2212               	addwfc	(___aldiv@divisor+1)^0,f,c
 12208  001B14  2213               	addwfc	(___aldiv@divisor+2)^0,f,c
 12209  001B16  2214               	addwfc	(___aldiv@divisor+3)^0,f,c
 12210  001B18  0E01               	movlw	1
 12211  001B1A  6E16               	movwf	___aldiv@sign^0,c
 12212  001B1C                     l3586:
 12213  001B1C  BE10               	btfsc	(___aldiv@dividend+3)^0,7,c
 12214  001B1E  EF95  F00D         	goto	u2750
 12215  001B22  EF93  F00D         	goto	u2751
 12216  001B26                     u2751:
 12217  001B26  EF9F  F00D         	goto	l3592
 12218  001B2A                     u2750:
 12219  001B2A  1E10               	comf	(___aldiv@dividend+3)^0,f,c
 12220  001B2C  1E0F               	comf	(___aldiv@dividend+2)^0,f,c
 12221  001B2E  1E0E               	comf	(___aldiv@dividend+1)^0,f,c
 12222  001B30  6C0D               	negf	___aldiv@dividend^0,c
 12223  001B32  0E00               	movlw	0
 12224  001B34  220E               	addwfc	(___aldiv@dividend+1)^0,f,c
 12225  001B36  220F               	addwfc	(___aldiv@dividend+2)^0,f,c
 12226  001B38  2210               	addwfc	(___aldiv@dividend+3)^0,f,c
 12227  001B3A  0E01               	movlw	1
 12228  001B3C  1A16               	xorwf	___aldiv@sign^0,f,c
 12229  001B3E                     l3592:
 12230  001B3E  0E00               	movlw	0
 12231  001B40  6E17               	movwf	___aldiv@quotient^0,c
 12232  001B42  0E00               	movlw	0
 12233  001B44  6E18               	movwf	(___aldiv@quotient+1)^0,c
 12234  001B46  0E00               	movlw	0
 12235  001B48  6E19               	movwf	(___aldiv@quotient+2)^0,c
 12236  001B4A  0E00               	movlw	0
 12237  001B4C  6E1A               	movwf	(___aldiv@quotient+3)^0,c
 12238  001B4E  5011               	movf	___aldiv@divisor^0,w,c
 12239  001B50  1012               	iorwf	(___aldiv@divisor+1)^0,w,c
 12240  001B52  1013               	iorwf	(___aldiv@divisor+2)^0,w,c
 12241  001B54  1014               	iorwf	(___aldiv@divisor+3)^0,w,c
 12242  001B56  B4D8               	btfsc	status,2,c
 12243  001B58  EFB0  F00D         	goto	u2761
 12244  001B5C  EFB2  F00D         	goto	u2760
 12245  001B60                     u2761:
 12246  001B60  EFE8  F00D         	goto	l3614
 12247  001B64                     u2760:
 12248  001B64  0E01               	movlw	1
 12249  001B66  6E15               	movwf	___aldiv@counter^0,c
 12250  001B68  EFBC  F00D         	goto	l3600
 12251  001B6C                     l3598:
 12252  001B6C  90D8               	bcf	status,0,c
 12253  001B6E  3611               	rlcf	___aldiv@divisor^0,f,c
 12254  001B70  3612               	rlcf	(___aldiv@divisor+1)^0,f,c
 12255  001B72  3613               	rlcf	(___aldiv@divisor+2)^0,f,c
 12256  001B74  3614               	rlcf	(___aldiv@divisor+3)^0,f,c
 12257  001B76  2A15               	incf	___aldiv@counter^0,f,c
 12258  001B78                     l3600:
 12259  001B78  AE14               	btfss	(___aldiv@divisor+3)^0,7,c
 12260  001B7A  EFC1  F00D         	goto	u2771
 12261  001B7E  EFC3  F00D         	goto	u2770
 12262  001B82                     u2771:
 12263  001B82  EFB6  F00D         	goto	l3598
 12264  001B86                     u2770:
 12265  001B86                     l3602:
 12266  001B86  90D8               	bcf	status,0,c
 12267  001B88  3617               	rlcf	___aldiv@quotient^0,f,c
 12268  001B8A  3618               	rlcf	(___aldiv@quotient+1)^0,f,c
 12269  001B8C  3619               	rlcf	(___aldiv@quotient+2)^0,f,c
 12270  001B8E  361A               	rlcf	(___aldiv@quotient+3)^0,f,c
 12271  001B90  5011               	movf	___aldiv@divisor^0,w,c
 12272  001B92  5C0D               	subwf	___aldiv@dividend^0,w,c
 12273  001B94  5012               	movf	(___aldiv@divisor+1)^0,w,c
 12274  001B96  580E               	subwfb	(___aldiv@dividend+1)^0,w,c
 12275  001B98  5013               	movf	(___aldiv@divisor+2)^0,w,c
 12276  001B9A  580F               	subwfb	(___aldiv@dividend+2)^0,w,c
 12277  001B9C  5014               	movf	(___aldiv@divisor+3)^0,w,c
 12278  001B9E  5810               	subwfb	(___aldiv@dividend+3)^0,w,c
 12279  001BA0  A0D8               	btfss	status,0,c
 12280  001BA2  EFD5  F00D         	goto	u2781
 12281  001BA6  EFD7  F00D         	goto	u2780
 12282  001BAA                     u2781:
 12283  001BAA  EFE0  F00D         	goto	l3610
 12284  001BAE                     u2780:
 12285  001BAE  5011               	movf	___aldiv@divisor^0,w,c
 12286  001BB0  5E0D               	subwf	___aldiv@dividend^0,f,c
 12287  001BB2  5012               	movf	(___aldiv@divisor+1)^0,w,c
 12288  001BB4  5A0E               	subwfb	(___aldiv@dividend+1)^0,f,c
 12289  001BB6  5013               	movf	(___aldiv@divisor+2)^0,w,c
 12290  001BB8  5A0F               	subwfb	(___aldiv@dividend+2)^0,f,c
 12291  001BBA  5014               	movf	(___aldiv@divisor+3)^0,w,c
 12292  001BBC  5A10               	subwfb	(___aldiv@dividend+3)^0,f,c
 12293  001BBE  8017               	bsf	___aldiv@quotient^0,0,c
 12294  001BC0                     l3610:
 12295  001BC0  90D8               	bcf	status,0,c
 12296  001BC2  3214               	rrcf	(___aldiv@divisor+3)^0,f,c
 12297  001BC4  3213               	rrcf	(___aldiv@divisor+2)^0,f,c
 12298  001BC6  3212               	rrcf	(___aldiv@divisor+1)^0,f,c
 12299  001BC8  3211               	rrcf	___aldiv@divisor^0,f,c
 12300  001BCA  2E15               	decfsz	___aldiv@counter^0,f,c
 12301  001BCC  EFC3  F00D         	goto	l3602
 12302  001BD0                     l3614:
 12303  001BD0  5016               	movf	___aldiv@sign^0,w,c
 12304  001BD2  B4D8               	btfsc	status,2,c
 12305  001BD4  EFEE  F00D         	goto	u2791
 12306  001BD8  EFF0  F00D         	goto	u2790
 12307  001BDC                     u2791:
 12308  001BDC  EFF8  F00D         	goto	l3618
 12309  001BE0                     u2790:
 12310  001BE0  1E1A               	comf	(___aldiv@quotient+3)^0,f,c
 12311  001BE2  1E19               	comf	(___aldiv@quotient+2)^0,f,c
 12312  001BE4  1E18               	comf	(___aldiv@quotient+1)^0,f,c
 12313  001BE6  6C17               	negf	___aldiv@quotient^0,c
 12314  001BE8  0E00               	movlw	0
 12315  001BEA  2218               	addwfc	(___aldiv@quotient+1)^0,f,c
 12316  001BEC  2219               	addwfc	(___aldiv@quotient+2)^0,f,c
 12317  001BEE  221A               	addwfc	(___aldiv@quotient+3)^0,f,c
 12318  001BF0                     l3618:
 12319  001BF0  C017  F00D         	movff	___aldiv@quotient,?___aldiv
 12320  001BF4  C018  F00E         	movff	___aldiv@quotient+1,?___aldiv+1
 12321  001BF8  C019  F00F         	movff	___aldiv@quotient+2,?___aldiv+2
 12322  001BFC  C01A  F010         	movff	___aldiv@quotient+3,?___aldiv+3
 12323  001C00  0012               	return		;funcret
 12324  001C02                     __end_of___aldiv:
 12325                           	opt callstack 0
 12326                           
 12327 ;; *************** function _desbordamiento *****************
 12328 ;; Defined at:
 12329 ;;		line 100 in file "main.c"
 12330 ;; Parameters:    Size  Location     Type
 12331 ;;		None
 12332 ;; Auto vars:     Size  Location     Type
 12333 ;;		None
 12334 ;; Return value:  Size  Location     Type
 12335 ;;                  1    wreg      void 
 12336 ;; Registers used:
 12337 ;;		wreg, status,2, status,0
 12338 ;; Tracked objects:
 12339 ;;		On entry : 0/0
 12340 ;;		On exit  : 0/0
 12341 ;;		Unchanged: 0/0
 12342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12343 ;;      Params:         0       0       0       0       0       0       0       0       0
 12344 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12345 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12346 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12347 ;;Total ram usage:        0 bytes
 12348 ;; Hardware stack levels used:    1
 12349 ;; This function calls:
 12350 ;;		Nothing
 12351 ;; This function is called by:
 12352 ;;		Interrupt level 2
 12353 ;; This function uses a non-reentrant model
 12354 ;;
 12355                           
 12356                           	psect	intcode
 12357  000008                     __pintcode:
 12358                           	opt callstack 0
 12359  000008                     _desbordamiento:
 12360                           	opt callstack 19
 12361                           
 12362                           ;incstack = 0
 12363  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12364  00000A  ED33  F014         	call	int_func,f	;refresh shadow registers
 12365                           
 12366                           	psect	intcode_body
 12367  002866                     __pintcode_body:
 12368                           	opt callstack 19
 12369  002866                     int_func:
 12370                           	opt callstack 19
 12371  002866  0006               	pop		; remove dummy address from shadow register refresh
 12372  002868                     
 12373                           ;main.c: 102:     if (INTCONbits.TMR0IF) {
 12374  002868  A4F2               	btfss	242,2,c	;volatile
 12375  00286A  EF39  F014         	goto	i2u363_41
 12376  00286E  EF3B  F014         	goto	i2u363_40
 12377  002872                     i2u363_41:
 12378  002872  EF58  F014         	goto	i2l4556
 12379  002876                     i2u363_40:
 12380  002876                     
 12381                           ;main.c: 104:         if (esperandoDatos) {
 12382  002876  0101               	movlb	1	; () banked
 12383  002878  517D               	movf	_esperandoDatos& (0+255),w,b
 12384  00287A  B4D8               	btfsc	status,2,c
 12385  00287C  EF42  F014         	goto	i2u364_41
 12386  002880  EF44  F014         	goto	i2u364_40
 12387  002884                     i2u364_41:
 12388  002884  EF50  F014         	goto	i2l4552
 12389  002888                     i2u364_40:
 12390  002888                     
 12391                           ; BSR set to: 1
 12392                           ;main.c: 106:             tiempoInactividadTrans++;
 12393  002888  0100               	movlb	0	; () banked
 12394  00288A  2BFE               	incf	_tiempoInactividadTrans& (0+255),f,b
 12395  00288C                     
 12396                           ; BSR set to: 0
 12397                           ;main.c: 108:             if (tiempoInactividadTrans == 1)
 12398  00288C  05FE               	decf	_tiempoInactividadTrans& (0+255),w,b
 12399  00288E  A4D8               	btfss	status,2,c
 12400  002890  EF4C  F014         	goto	i2u365_41
 12401  002894  EF4E  F014         	goto	i2u365_40
 12402  002898                     i2u365_41:
 12403  002898  EF50  F014         	goto	i2l4552
 12404  00289C                     i2u365_40:
 12405  00289C                     
 12406                           ; BSR set to: 0
 12407                           ;main.c: 109:                 esperaDatoConcluida = 1;
 12408  00289C  0E01               	movlw	1
 12409  00289E  6FFD               	movwf	_esperaDatoConcluida& (0+255),b
 12410  0028A0                     i2l4552:
 12411                           
 12412                           ;main.c: 114:         INTCONbits.TMR0IF = 0;
 12413  0028A0  94F2               	bcf	242,2,c	;volatile
 12414  0028A2                     
 12415                           ;main.c: 115:         TMR0 = VALOR_TIMER0;
 12416  0028A2  C1A6  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
 12417  0028A6  C1A7  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
 12418                           
 12419                           ;main.c: 116:         overflowTimer = 1;
 12420  0028AA  0E01               	movlw	1
 12421  0028AC  0101               	movlb	1	; () banked
 12422  0028AE  6F7A               	movwf	_overflowTimer& (0+255),b
 12423  0028B0                     i2l4556:
 12424                           
 12425                           ;main.c: 120:     if (PIR1bits.RCIF) {
 12426  0028B0  AA9E               	btfss	158,5,c	;volatile
 12427  0028B2  EF5D  F014         	goto	i2u366_41
 12428  0028B6  EF5F  F014         	goto	i2u366_40
 12429  0028BA                     i2u366_41:
 12430  0028BA  EF64  F014         	goto	i2l209
 12431  0028BE                     i2u366_40:
 12432  0028BE                     
 12433                           ;main.c: 122:         byteUart = RCREG;
 12434  0028BE  CFAE F17E          	movff	4014,_byteUart	;volatile
 12435  0028C2                     
 12436                           ;main.c: 123:         datoRecibido = 1;
 12437  0028C2  0E01               	movlw	1
 12438  0028C4  0101               	movlb	1	; () banked
 12439  0028C6  6F7B               	movwf	_datoRecibido& (0+255),b
 12440  0028C8                     i2l209:
 12441  0028C8  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12442  0028CA  0011               	retfie		f
 12443  0028CC                     __end_of_desbordamiento:
 12444                           	opt callstack 0
 12445                           
 12446                           	psect	rparam
 12447  0000                     
 12448                           	psect	temp
 12449  00005F                     btemp:
 12450                           	opt callstack 0
 12451  00005F                     	ds	1
 12452  0000                     int$flags	set	btemp
 12453  0000                     wtemp8	set	btemp+1
 12454  0000                     ttemp5	set	btemp+1
 12455  0000                     ttemp6	set	btemp+4
 12456  0000                     ttemp7	set	btemp+8
 12457                           tosu	equ	0xFFF
 12458                           tosh	equ	0xFFE
 12459                           tosl	equ	0xFFD
 12460                           stkptr	equ	0xFFC
 12461                           pclatu	equ	0xFFB
 12462                           pclath	equ	0xFFA
 12463                           pcl	equ	0xFF9
 12464                           tblptru	equ	0xFF8
 12465                           tblptrh	equ	0xFF7
 12466                           tblptrl	equ	0xFF6
 12467                           tablat	equ	0xFF5
 12468                           prodh	equ	0xFF4
 12469                           prodl	equ	0xFF3
 12470                           indf0	equ	0xFEF
 12471                           postinc0	equ	0xFEE
 12472                           postdec0	equ	0xFED
 12473                           preinc0	equ	0xFEC
 12474                           plusw0	equ	0xFEB
 12475                           fsr0h	equ	0xFEA
 12476                           fsr0l	equ	0xFE9
 12477                           wreg	equ	0xFE8
 12478                           indf1	equ	0xFE7
 12479                           postinc1	equ	0xFE6
 12480                           postdec1	equ	0xFE5
 12481                           preinc1	equ	0xFE4
 12482                           plusw1	equ	0xFE3
 12483                           fsr1h	equ	0xFE2
 12484                           fsr1l	equ	0xFE1
 12485                           bsr	equ	0xFE0
 12486                           indf2	equ	0xFDF
 12487                           postinc2	equ	0xFDE
 12488                           postdec2	equ	0xFDD
 12489                           preinc2	equ	0xFDC
 12490                           plusw2	equ	0xFDB
 12491                           fsr2h	equ	0xFDA
 12492                           fsr2l	equ	0xFD9
 12493                           status	equ	0xFD8


Data Sizes:
    Strings     1557
    Constant    0
    Data        11
    BSS         363
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    139     159
    BANK1           256    104     170
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), dameDatosSistema@diasRegar(BANK0[50]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), dameDatosSistema@diasRegar(BANK0[50]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 53
		 -> STR_41(CODE[45]), STR_40(CODE[29]), STR_39(CODE[32]), STR_38(CODE[45]), 
		 -> STR_37(CODE[29]), STR_36(CODE[32]), STR_34(CODE[53]), STR_19(CODE[51]), 
		 -> STR_12(CODE[9]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@bufferSensor(BANK1[50]), mostrarDatosSensoresWIFI@buffer(BANK1[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), 
		 -> lecturaWifi@buffer(BANK0[50]), asignarHorarios@buffer(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@bufferSensor(BANK1[50]), mostrarDatosSensoresWIFI@buffer(BANK1[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), 
		 -> lecturaWifi@buffer(BANK0[50]), asignarHorarios@buffer(BANK0[50]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1586_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@bufferSensor(BANK1[50]), mostrarDatosSensoresWIFI@buffer(BANK1[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), 
		 -> lecturaWifi@buffer(BANK0[50]), asignarHorarios@buffer(BANK0[50]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@bufferSensor(BANK1[50]), mostrarDatosSensoresWIFI@buffer(BANK1[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), 
		 -> lecturaWifi@buffer(BANK0[50]), asignarHorarios@buffer(BANK0[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 53
		 -> STR_41(CODE[45]), STR_40(CODE[29]), STR_39(CODE[32]), STR_38(CODE[45]), 
		 -> STR_37(CODE[29]), STR_36(CODE[32]), STR_34(CODE[53]), STR_19(CODE[51]), 
		 -> STR_12(CODE[9]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 53
		 -> STR_41(CODE[45]), STR_40(CODE[29]), STR_39(CODE[32]), STR_38(CODE[45]), 
		 -> STR_37(CODE[29]), STR_36(CODE[32]), STR_34(CODE[53]), STR_19(CODE[51]), 
		 -> STR_12(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 53
		 -> STR_41(CODE[45]), STR_40(CODE[29]), STR_39(CODE[32]), STR_38(CODE[45]), 
		 -> STR_37(CODE[29]), STR_36(CODE[32]), STR_34(CODE[53]), STR_19(CODE[51]), 
		 -> STR_12(CODE[9]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), dameDatosSistema@diasRegar(BANK0[50]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), dameDatosSistema@diasRegar(BANK0[50]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dameDatosSistema@diasRegar(BANK0[50]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    dameTemperaturaHumedad@Temperatura	PTR unsigned char  size(2) Largest target is 1
		 -> mostrarDatosSensoresWIFI@temperatura(BANK1[1]), mostrarDatosSensores@temperatura(BANK0[1]), estaSeco@temperatura(COMRAM[1]), 

    dameTemperaturaHumedad@Humedad	PTR unsigned char  size(2) Largest target is 1
		 -> mostrarDatosSensoresWIFI@humedad(BANK1[1]), mostrarDatosSensores@humedad(BANK0[1]), NULL(NULL[0]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 72
		 -> STR_49(CODE[58]), STR_48(CODE[57]), STR_47(CODE[57]), STR_46(CODE[20]), 
		 -> STR_45(CODE[18]), STR_44(CODE[11]), STR_43(CODE[9]), STR_42(CODE[17]), 
		 -> mostrarDatosSensoresWIFI@bufferSensor(BANK1[50]), mostrarDatosSensoresWIFI@buffer(BANK1[50]), mostrarDatosSensores@buffer(BANK0[50]), STR_35(CODE[25]), 
		 -> dameDatosSistema@buffer(BANK0[50]), STR_33(CODE[55]), STR_32(CODE[62]), STR_31(CODE[42]), 
		 -> STR_30(CODE[3]), STR_29(CODE[14]), STR_28(CODE[26]), STR_27(CODE[23]), 
		 -> STR_26(CODE[34]), STR_25(CODE[32]), STR_24(CODE[49]), STR_23(CODE[37]), 
		 -> STR_22(CODE[27]), STR_21(CODE[37]), STR_20(CODE[32]), lecturaWifi@buffer(BANK0[50]), 
		 -> STR_18(CODE[38]), STR_17(CODE[37]), STR_16(CODE[72]), STR_15(CODE[51]), 
		 -> STR_14(CODE[23]), STR_13(CODE[26]), asignarHorarios@buffer(BANK0[50]), STR_11(CODE[37]), 
		 -> STR_10(CODE[59]), STR_9(CODE[59]), STR_8(CODE[51]), STR_7(CODE[25]), 
		 -> STR_6(CODE[37]), STR_5(CODE[31]), STR_4(CODE[43]), STR_3(CODE[16]), 
		 -> STR_2(CODE[36]), STR_1(CODE[65]), 


Critical Paths under _main in COMRAM

    _encenderBombas->_estaSeco
    _estaSeco->_dameTemperaturaHumedad
    _dameHoraActual->_leer_rtc
    _dameDiaActual->_leer_rtc
    _leer_rtc->_i2c_envia_dato
    _leer_rtc->_i2c_recibe_dato
    _setTiempoRegar->_escribeHorariosMemoria
    _regadoRapido->_getValue
    _mostrarMenu->_UART_printf
    _restablecerDatosSensor->_constructorSensor
    _lecturaAnalogaSensores->_map
    _map->___aldiv
    _dameTemperaturaHumedad->_UART_printf
    _fijaHoraRtc->_setRtc
    _fijaDiaRtc->_setRtc
    _setRtc->_getValue
    _escribe_rtc->_i2c_envia_dato
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _getValue->_UART_printf
    _UART_printf->_UART_write
    _escribeHorariosMemoria->_escribe_eeprom
    _escribe_eeprom->___wmul
    _leeHorariosMemoria->___wmul
    _leeHorariosMemoria->_leer_eeprom
    _leer_eeprom->_i2c_envia_dato
    _leer_eeprom->_i2c_recibe_dato
    _i2c_reinicia_com->_i2c_espera
    _i2c_recibe_dato->_i2c_espera
    _i2c_inicia_com->_i2c_espera
    _i2c_envia_dato->_i2c_espera
    _i2c_detener->_i2c_espera
    _inicializarObjetos->___wmul
    _UART_init->___aldiv
    ___aldiv->___lmul

Critical Paths under _desbordamiento in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sistemaPrincipal
    _sistemaRegado->_lecturaWifi
    _sistemaPrincipal->_dameDatosSistema
    _mostrarDatosSensoresWIFI->_lecturaWifi
    _lecturaWifi->_sprintf
    _mostrarDatosSensores->_sprintf
    _dameDatosSistema->_sprintf
    _asignarHorarios->_sprintf

Critical Paths under _desbordamiento in BANK0

    None.

Critical Paths under _main in BANK1

    _sistemaPrincipal->_mostrarDatosSensoresWIFI

Critical Paths under _desbordamiento in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _desbordamiento in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _desbordamiento in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _desbordamiento in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _desbordamiento in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _desbordamiento in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _desbordamiento in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  257282
                          _UART_init
                      _configurarAdc
                        _i2c_iniciar
                 _inicializarObjetos
                 _leeHorariosMemoria
                        _mostrarMenu
             _restablecerDatosSensor
                   _sistemaPrincipal
                      _sistemaRegado
 ---------------------------------------------------------------------------------
 (1) _sistemaRegado                                        0     0      0   41437
                      _dameDiaActual
                     _dameHoraActual
                     _encenderBombas
                          _horaRegar
             _lecturaAnalogaSensores
                        _lecturaWifi
                        _mostrarMenu
 ---------------------------------------------------------------------------------
 (2) _horaRegar                                            5     3      2      24
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _encenderBombas                                       5     5      0    5565
                                             19 COMRAM     5     5      0
                           _estaSeco
 ---------------------------------------------------------------------------------
 (3) _estaSeco                                             4     2      2    5290
                                             15 COMRAM     4     2      2
             _dameTemperaturaHumedad
 ---------------------------------------------------------------------------------
 (2) _dameHoraActual                                       0     0      0     181
                      _convertirDato
                           _leer_rtc
 ---------------------------------------------------------------------------------
 (2) _dameDiaActual                                        0     0      0     181
                      _convertirDato
                           _leer_rtc
 ---------------------------------------------------------------------------------
 (3) _leer_rtc                                             2     2      0      90
                                              2 COMRAM     2     2      0
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (3) _convertirDato                                        3     3      0      91
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _sistemaPrincipal                                     3     3      0  202976
                                            136 BANK0      3     3      0
                        _UART_printf
                    _asignarHorarios
                   _dameDatosSistema
                         _fijaDiaRtc
                        _fijaHoraRtc
               _mostrarDatosSensores
           _mostrarDatosSensoresWIFI
                        _mostrarMenu
                       _regadoRapido
                     _setTiempoRegar
 ---------------------------------------------------------------------------------
 (2) _setTiempoRegar                                       2     2      0   13260
                                             18 COMRAM     2     2      0
                        _UART_printf
             _escribeHorariosMemoria
                           _getValue
 ---------------------------------------------------------------------------------
 (2) _regadoRapido                                         4     4      0    8865
                                             14 COMRAM     4     4      0
                        _UART_printf
                           _getValue
 ---------------------------------------------------------------------------------
 (2) _mostrarMenu                                          0     0      0    3791
                        _UART_printf
 ---------------------------------------------------------------------------------
 (2) _mostrarDatosSensoresWIFI                           105   105      0   59161
                                             76 BANK0      1     1      0
                                              0 BANK1    104   104      0
                        _UART_printf
                         _UART_write
             _dameTemperaturaHumedad
                        _lecturaWifi
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lecturaWifi                                         54    54      0   29923
                                             22 BANK0     54    54      0
                        _UART_printf
                          _UART_read
                         _UART_write
                           _getValue
             _restablecerDatosSensor
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _restablecerDatosSensor                               2     2      0     387
                                              4 COMRAM     2     2      0
                  _constructorSensor
 ---------------------------------------------------------------------------------
 (4) _constructorSensor                                    4     0      4     297
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _mostrarDatosSensores                                55    55      0   31004
                                             22 BANK0     55    55      0
                        _UART_printf
                         _UART_write
             _dameTemperaturaHumedad
             _lecturaAnalogaSensores
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lecturaAnalogaSensores                               3     3      0    1772
                                             46 COMRAM     3     3      0
                   _dameHumedadSuelo
                                _map
 ---------------------------------------------------------------------------------
 (3) _map                                                 20     0     20    1660
                                             26 COMRAM    20     0     20
                            ___aldiv
                             ___lmul
                   _dameHumedadSuelo (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _dameHumedadSuelo                                     5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _dameTemperaturaHumedad                              12     8      4    4590
                                              3 COMRAM    12     8      4
                     _DHT11_ReadData
                        _DHT11_Start
                        _UART_printf
                     _check_response
 ---------------------------------------------------------------------------------
 (5) _check_response                                       1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _DHT11_ReadData                                       2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fijaHoraRtc                                          0     0      0   10705
                        _UART_printf
                        _escribe_rtc
                             _setRtc
 ---------------------------------------------------------------------------------
 (2) _fijaDiaRtc                                           0     0      0   10259
                        _UART_printf
                             _setRtc
 ---------------------------------------------------------------------------------
 (3) _setRtc                                               4     4      0    6468
                                             14 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
                        _escribe_rtc
                           _getValue
 ---------------------------------------------------------------------------------
 (4) _escribe_rtc                                          2     1      1     446
                                              2 COMRAM     2     1      1
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _dameDatosSistema                                   114   114      0   28164
                                             22 BANK0    114   114      0
                        _UART_printf
                         _UART_write
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _asignarHorarios                                     57    57      0   33954
                                             22 BANK0     57    57      0
                        _UART_printf
             _escribeHorariosMemoria
                           _getValue
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             22    10     12   20509
                                              0 BANK0     22    10     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   18936
                                             86 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           45    39      6   18568
                                             63 COMRAM    23    17      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5574
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 7     4      3    4145
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3925
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    4224
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _getValue                                            11     9      2    4983
                                              3 COMRAM    11     9      2
                        _UART_printf
                          _UART_read
                         _UART_write
 ---------------------------------------------------------------------------------
 (4) _UART_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART_printf                                          2     0      2    3791
                                              1 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (4) _UART_write                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _escribeHorariosMemoria                               8     8      0    4374
                                             10 COMRAM     8     8      0
                             ___wmul
                     _escribe_eeprom
 ---------------------------------------------------------------------------------
 (4) _escribe_eeprom                                       4     1      3     696
                                              6 COMRAM     4     1      3
                             ___wmul (ARG)
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (1) _leeHorariosMemoria                                   8     8      0    4094
                                              6 COMRAM     8     8      0
                             ___wmul
                        _leer_eeprom
 ---------------------------------------------------------------------------------
 (2) _leer_eeprom                                          4     2      2     416
                                              2 COMRAM     4     2      2
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (4) _i2c_reinicia_com                                     0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_recibe_dato                                      1     1      0      23
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_inicia_com                                       0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_envia_dato                                       1     1      0      22
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_detener                                          0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (5) _i2c_espera                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _inicializarObjetos                                   8     8      0    3697
                                              6 COMRAM     8     8      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    3383
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _i2c_iniciar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4     900
                                             26 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     756
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _desbordamiento                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
       ___lmul (ARG)
   _configurarAdc
   _i2c_iniciar
   _inicializarObjetos
     ___wmul
   _leeHorariosMemoria
     ___wmul
     _leer_eeprom
       _i2c_detener
         _i2c_espera
       _i2c_envia_dato
         _i2c_espera
       _i2c_inicia_com
         _i2c_espera
       _i2c_recibe_dato
         _i2c_espera
       _i2c_reinicia_com
         _i2c_espera
   _mostrarMenu
     _UART_printf
       _UART_write
   _restablecerDatosSensor
     _constructorSensor
   _sistemaPrincipal
     _UART_printf
       _UART_write
     _asignarHorarios
       _UART_printf
         _UART_write
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
       _getValue
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _dameDatosSistema
       _UART_printf
         _UART_write
       _UART_write
       ___wmul
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _fijaDiaRtc
       _UART_printf
         _UART_write
       _setRtc
         ___awdiv
         ___awmod
         _escribe_rtc
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
         _getValue
           _UART_printf
             _UART_write
           _UART_read
           _UART_write
     _fijaHoraRtc
       _UART_printf
         _UART_write
       _escribe_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
       _setRtc
         ___awdiv
         ___awmod
         _escribe_rtc
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
         _getValue
           _UART_printf
             _UART_write
           _UART_read
           _UART_write
     _mostrarDatosSensores
       _UART_printf
         _UART_write
       _UART_write
       _dameTemperaturaHumedad
         _DHT11_ReadData
         _DHT11_Start
         _UART_printf
           _UART_write
         _check_response
       _lecturaAnalogaSensores
         _dameHumedadSuelo
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
           _dameHumedadSuelo (ARG)
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _mostrarDatosSensoresWIFI
       _UART_printf
         _UART_write
       _UART_write
       _dameTemperaturaHumedad
         _DHT11_ReadData
         _DHT11_Start
         _UART_printf
           _UART_write
         _check_response
       _lecturaWifi
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
         _getValue
           _UART_printf
             _UART_write
           _UART_read
           _UART_write
         _restablecerDatosSensor
           _constructorSensor
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
               _isdigit
               _stoa
                 _fputc
                   _putch
                 _strlen
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _mostrarMenu
       _UART_printf
         _UART_write
     _regadoRapido
       _UART_printf
         _UART_write
       _getValue
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
     _setTiempoRegar
       _UART_printf
         _UART_write
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
       _getValue
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
   _sistemaRegado
     _dameDiaActual
       _convertirDato
       _leer_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _dameHoraActual
       _convertirDato
       _leer_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _encenderBombas
       _estaSeco
         _dameTemperaturaHumedad
           _DHT11_ReadData
           _DHT11_Start
           _UART_printf
             _UART_write
           _check_response
     _horaRegar
     _lecturaAnalogaSensores
       _dameHumedadSuelo
       _map
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _dameHumedadSuelo (ARG)
     _lecturaWifi
       _UART_printf
         _UART_write
       _UART_read
       _UART_write
       _getValue
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
       _restablecerDatosSensor
         _constructorSensor
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _mostrarMenu
       _UART_printf
         _UART_write

 _desbordamiento (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     120      21       14.1%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     68      AA       7       66.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8B      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A7      20        0.0%
DATA                 0      0     2C7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Jun 17 19:45:04 2020

                 __size_of_escribe_eeprom 0030                                        l81 2F8A  
                                      l90 2FD6                                        l93 2FCE  
                                      l87 2EC0                                        l96 2FDE  
                                      l99 2FA6                              ___awdiv@sign 0006  
                          ?_configurarAdc 0001                       ___wmul@multiplicand 0003  
                             __CFG_BORV$3 000000            __end_of_dameTemperaturaHumedad 2402  
                            __CFG_CP0$OFF 000000                              __CFG_CP1$OFF 000000  
                            __CFG_CP2$OFF 000000                              __CFG_CP3$OFF 000000  
                 regadoRapido@tiempoRegar 0011                                       l102 2F5E  
                                     l111 2F06                                       l105 2F44  
                                     l124 2792                                       l132 2A9A  
                                     l212 26B2                                       l108 2E9A  
                                     l133 2A9E                                       l150 2994  
                                     l127 2A62                                       l311 1742  
                                     l303 2864                                       l215 2FBC  
                                     l223 2C76                                       l136 2F66  
                                     l400 1EE4                                       l240 2E70  
                                     l145 298A                                       l161 2F26  
                                     l321 2C1E                                       l218 2FC6  
                                     l322 2C32                                       l139 2F74  
                                     l251 2722                                       l155 29C4  
                                     l243 2F9A                                       l316 24A0  
                                     l228 25BE                                       l237 1496  
                                     l501 20BE                                       l341 235C  
                                     l254 2E44                                       l422 0980  
                                     l158 29E6                                       l166 2CFA  
                                     l406 1D06                                       l271 19BE  
                                     l247 2E14                                       l319 2C10  
                                     l327 2BEC                                       l264 1884  
                                     l432 0A2C                                       l504 2100  
                                     l336 1DF6                                       l344 2638  
                                     l257 2D76                                       l513 2A42  
                                     l521 0456                                       l442 0B20  
                                     l506 213C                                       l602 27EC  
                                     l450 1A3C                                       l603 27FC  
                                     l452 1A42                                       l460 1AF4  
                                     l453 1A48                                       l454 1A4E  
                                     l519 044E                                       l455 1A54  
                                     l359 2076                                       l375 132C  
                                     l456 1A5A                                       l705 1038  
                                     l457 1A60                                       l562 11BE  
                                     l546 10BA                                       l458 1A66  
                                     l298 08FC                                       l539 0690  
                                     l387 0D20                                       l395 2400  
                                     l548 10C2                                       l557 116C  
                                     l670 1C00                                       l718 15FA  
                                     l558 11B6                                       l822 2200  
                                     l591 2EE6                                       l577 03AC  
                                     l587 2924                                       l835 22B0  
                                     l588 292C                              __CFG_CPB$OFF 000000  
                            __CFG_CPD$OFF 000000                              __CFG_BOR$OFF 000000  
                                     _abs 2CFC                                       _pad 2078  
                                     _map 263A                              ___awmod@sign 0006  
                                     prod 000FF3                                       wreg 000FE8  
                __end_of_dameDatosSistema 0D22                              __CFG_LVP$OFF 000000  
                       ?_i2c_reinicia_com 0001                              ?_escribe_rtc 0003  
                            __CFG_WDT$OFF 000000                                      ?_abs 0013  
                                    l1300 0EB0                                      l1303 2DAE  
                                    l1311 2B9C                                      l1341 2B4A  
                                    l1326 1FAE                                      l1334 2CBA  
                                    l1350 2DE4                                      l3110 20B6  
                                    l3102 2078                                      l1344 2FE0  
                                    l3120 2124                                      l3112 20CA  
                                    l3104 2088                                      l3200 1536  
                                    l4000 1D6E                                      l3114 20DE  
                                    l3106 209C                                      l3202 1544  
                                    l3210 15AA                                      l1266 2D32  
                                    l4010 1DC4                                      l4002 1D7E  
                                    l3132 2EC2                                      l3220 2B50  
                                    l3116 20E2                                      l3108 20AA  
                                    l3140 0EB6                                      l3212 15BA  
                                    l3204 1572                                      l3124 2CFC  
                                    l3300 0658                                      l4012 1DE0  
                                    l4004 1D90                                      l4100 07B4  
                                    l1269 2D3A                                      l3134 2EDE  
                                    l3222 2B64                                      l3070 1EE6  
                                    l3118 2110                                      l3230 29E8  
                                    l3150 0F16                                      l3142 0EC4  
                                    l3214 15DA                                      l3206 1592  
                                    l3126 2D16                                      l3302 0668  
                                    l3310 1054                                      l4030 2340  
                                    l4006 1DAA                                      l4014 1DF0  
                                    l4102 07E4                                      l3128 2D78  
                                    l3224 2B92                                      l3080 1F68  
                                    l3072 1EF8                                      l3240 2A1E  
                                    l3232 29FC                                      l3160 0F60  
                                    l3152 0F1A                                      l3144 0EE4  
                                    l3208 15A4                                      l3320 1098  
                                    l3312 1066                                      l3400 0036  
                                    l4024 22BA                                      l4016 1DF4  
                                    l4008 1DC0                                      l4200 2466  
                                    l4112 0820                                      l4120 0856  
                                    l4040 25B4                                      l4032 253E  
                                    l1297 0EA8                                      l3226 2B96  
                                    l3218 2B4C                                      l3074 1F0A  
                                    l3090 2C9A                                      l3234 2A08  
                                    l3170 0FD0                                      l3162 0F6E  
                                    l3154 0F26                                      l3146 0EE8  
                                    l3138 0EB2                                      l3250 0416  
                                    l3330 111C                                      l3314 106E  
                                    l3306 103A                                      l3410 00B4  
                                    l3402 0044                                      l4210 0B22  
                                    l4050 2DE6                                      l4026 232C  
                                    l4018 22B2                                      l4202 2472  
                                    l4130 08E8                                      l4114 0850  
                                    l4106 07EA                                      l4122 08B2  
                                    l4042 25B8                                      l4034 2542  
                                    l4060 2D74                                      l3076 1F14  
                                    l3084 2C78                                      l3092 2DB0  
                                    l3236 2A14                                      l3172 0FE2  
                                    l3164 0F80                                      l3156 0F44  
                                    l3148 0EF6                                      l3260 0470  
                                    l3252 0426                                      l3244 03AE  
                                    l3332 1128                                      l3324 10E6  
                                    l3316 1082                                      l3308 104C  
                                    l3412 00C2                                      l3404 0056  
                                    l4212 0B28                                      l4052 2DF2  
                                    l4140 282C                                      l4028 233C  
                                    l4300 1E56                                      l4204 2486  
                                    l4124 08B6                                      l4108 081A  
                                    l4036 2564                                      l3502 292E  
                                    l3350 0D36                                      l3078 1F32  
                                    l3086 2C84                                      l3094 2DBC  
                                    l3238 2A18                                      l3166 0FAE  
                                    l3158 0F4C                                      l3174 0FE8  
                                    l3190 14CE                                      l3182 1498  
                                    l3270 049C                                      l3262 047E  
                                    l3254 0428                                      l3246 03CE  
                                    l3342 1180                                      l3334 1146  
                                    l3326 10FA                                      l3318 108A  
                                    l3422 0144                                      l3414 00D0  
                                    l3406 005A                                      l4150 1614  
                                    l4230 0B88                                      l4222 0B4A  
                                    l4214 0B34                                      l4054 2E08  
                                    l4142 2838                                      l3510 298C  
                                    l4310 1E70                                      l4302 1E62  
                                    l4206 249C                                      l4046 2E46  
                                    l4126 08D2                                      l4070 06A2  
                                    l4038 2584                                      l3600 1B78  
                                    l4056 2D3C                                      l3504 2932  
                                    l3360 0D94                                      l3352 0D3A  
                                    l3088 2C96                                      l3096 2DC0  
                                    l3176 0FF8                                      l3168 0FCE  
                                    l3192 14DC                                      l3184 149C  
                                    l3280 05A8                                      l3272 051E  
                                    l3264 0484                                      l3256 0442  
                                    l3248 03F6                                      l3344 1194  
                                    l3336 114A                                      l3328 10FE  
                                    l3432 01C8                                      l3416 00F0  
                                    l3424 0156                                      l3408 007E  
                                    l4160 1662                                      l4152 1624  
                                    l4240 0C18                                      l4232 0B9C  
                                    l4224 0B7A                                      l4216 0B40  
                                    l4144 284E                                      l4136 27FE  
                                    l3520 29B6                                      l4312 1EB0  
                                    l4304 1E66                                      l4208 25C0  
                                    l4320 19C0                                      l4048 2F8C  
                                    l4128 08E2                                      l4072 06D2  
                                    l4064 0692                                      l3610 1BC0  
                                    l3602 1B86                                      l4410 1432  
                                    l4402 13EE                                      l4058 2D66  
                                    l3506 2956                                      l3370 0DC0  
                                    l3354 0D3E                                      l3098 2DD8  
                                    l3178 1018                                      l3194 14FC  
                                    l3186 14AA                                      l3290 061C  
                                    l3282 05C6                                      l3274 0524  
                                    l3266 048C                                      l3258 045E  
                                    l3346 1198                                      l3338 114E  
                                    l3450 030A                                      l3442 0290  
                                    l3434 01EC                                      l3426 017A  
                                    l3418 00FE                                      l4170 16A4  
                                    l4162 167A                                      l4154 1636  
                                    l4250 0CFE                                      l4242 0C34  
                                    l4146 285A                                      l4138 2816  
                                    l3522 29BE                                      l4314 1EBC  
                                    l4330 1A0A                                      l4322 19CC  
                                    l4090 0778                                      l4082 0712  
                                    l4074 06D4                                      l3612 1BCA  
                                    l3604 1B90                                      l4412 1436  
                                    l4420 1886                                      l3508 295A  
                                    l3700 0990                                      l3380 0E68  
                                    l3372 0DF4                                      l3364 0D9A  
                                    l3356 0D5A                                      l3348 0D22  
                                    l3196 151A                                      l3188 14CA  
                                    l3292 062C                                      l3284 05E0  
                                    l3276 052A                                      l3268 0496  
                                    l3452 032E                                      l3460 035C  
                                    l3444 02B4                                      l3436 0210  
                                    l3428 01AC                                      l4180 1702  
                                    l4172 16B0                                      l4156 1642  
                                    l4148 15FC                                      l4252 0D1A  
                                    l4244 0CB8                                      l4236 0BB0  
                                    l3524 29D2                                      l3516 29A2  
                                    l3532 2F08                                      l3540 2CBC  
                                    l4316 1EC2                                      l4260 1C16  
                                    l4340 1A6C                                      l4332 1A16  
                                    l4324 19DE                                      l4084 0742  
                                    l4076 06DC                                      l4500 1212  
                                    l3606 1BAE                                      l3614 1BD0  
                                    l4414 1452                                      l3390 2E9C  
                                    l3630 2F50                                      l3622 2FC8  
                                    l4430 18C8                                      l3710 09D2  
                                    l3382 0E7A                                      l3366 0DB0  
                                    l3358 0D90                                      l3198 1522  
                                    l3294 0632                                      l3286 05FA  
                                    l3278 058E                                      l3462 036A  
                                    l3454 033C                                      l3446 02EA  
                                    l3438 0258                                      l4182 171E  
                                    l4174 16C0                                      l4158 1652  
                                    l4246 0CEC                                      l4238 0C14  
                                    l3526 29D4                                      l3518 29A8  
                                    l3534 2F0C                                      l3550 2CEC  
                                    l3542 2CC0                                      l4318 1EDE  
                                    l4270 1C6C                                      l4262 1C1C  
                                    l4342 1AC6                                      l4334 1A24  
                                    l4326 19EA                                      l4190 241A  
                                    l4094 077E                                      l4078 070C  
                                    l4510 124E                                      l4502 1226  
                                    l3616 1BE0                                      l3608 1BBE  
                                    l4360 2724                                      l4416 1476  
                                    l4408 13F6                                      l3392 2E9C  
                                    l3480 2FDC                                      l3632 2F58  
                                    l3624 2FCC                                      l4440 191A  
                                    l3720 09FE                                      l3712 09D6  
                                    l3704 0998                                      l3384 0E8C  
                                    l3376 0E2A                                      l3368 0DB8  
                                    l3296 0644                                      l3288 060A  
                                    l3456 0350                                      l3560 28CC  
                                    l4184 1732                                      l4176 16D2  
                                    l4168 1684                                      l4248 0CF8  
                                    l3640 2F2A                                      l3528 29E4  
                                    l3536 2F1C                                      l3552 2CF4  
                                    l3544 2CC8                                      l3800 2C0C  
                                    l4280 1C8C                                      l4272 1C70  
                                    l4264 1C38                                      l4344 1ACC  
                                    l4336 1A36                                      l4328 19F8  
                                    l4192 2428                                      l4096 07AE  
                                    l4088 0748                                      l4520 129E  
                                    l4512 125E                                      l4504 122A  
                                    l4600 24DA                                      l3618 1BF0  
                                    l4370 2786                                      l4362 2726  
                                    l4354 2F76                                      l4418 147A  
                                    l3394 2EB2                                      l3482 2F9E  
                                    l3474 2FD0                                      l3634 2F5A  
                                    l3626 2F46                                      l4450 19A2  
                                    l4442 191E                                      l4426 1896  
                                    l3490 2A44                                      l3730 0A3C  
                                    l3722 0A04                                      l3714 09F6  
                                    l3706 09C4                                      l3298 0650  
                                    l3466 0376                                      l3562 28D4  
                                    l4186 1736                                      l4178 16FE  
                                    l3538 2F24                                      l3546 2CD6  
                                    l3554 2CF8                                      l3650 2362  
                                    l3802 2C0E                                      l3570 27A4  
                                    l3642 263A                                      l4290 1DF8  
                                    l4282 1CD2                                      l4274 1C82  
                                    l4266 1C44                                      l4258 1C02  
                                    l4346 1AE0                                      l4194 243A  
                                    l4530 12EE                                      l4522 12B0  
                                    l4514 1272                                      l4506 1232  
                                    l4610 24EE                                      l4602 24DE  
                                    l3580 1AFA                                      l4380 2790  
                                    l4372 2788                                      l4364 2728  
                                    l4356 2F7A                                      l3484 2FA2  
                                    l3476 2FD4                                      l3636 2F5C  
                                    l3628 2F4A                                      l4444 193A  
                                    l4436 18D0                                      l4428 18C4  
                                    l3396 2F62                                      l3492 2A70  
                                    l3740 0A88                                      l3732 0A48  
                                    l3724 0A14                                      l3708 09C8  
                                    l3468 039A                                      l3564 28E2  
                                    l3820 213E                                      l3548 2CDE  
                                    l3660 23D4                                      l3804 2C20  
                                    l3572 27B2                                      l4292 1E0C  
                                    l4284 1CDE                                      l4268 1C60  
                                    l4348 1AE8                                      l4196 2446  
                                    l4188 2402                                      l4460 1FD2  
                                    l4452 1FB4                                      l3900 2E74  
                                    l4540 1328                                      l4532 1302  
                                    l4524 12C6                                      l4516 1276  
                                    l4508 123A                                      l4620 2512  
                                    l4612 24F2                                      l4604 24E2  
                                    l3590 1B3A                                      l3582 1B08  
                                    l4374 278A                                      l4366 275C  
                                    l4358 2724                                      l4382 2FBE  
                                    l4390 1336                                      l3478 2FD8  
                                    l3486 2FA6                                      l4446 1968  
                                    l4438 1916                                      l3494 2A80  
                                    l3742 0A92                                      l3726 0A24  
                                    l3750 0AEA                                      l3670 090A  
                                    l3398 0012                                      l3566 2908  
                                    l3830 216A                                      l3822 2142  
                                    l3662 23E4                                      l3654 2366  
                                    l3646 235E                                      l3574 27C2  
                                    l4294 1E12                                      l3558 2FB4  
                                    l3814 2BA6                                      l4286 1CE4  
                                    l4198 2454                                      l4470 2004  
                                    l4462 1FDA                                      l4454 1FBA  
                                    l3910 2EF2                                      l3902 2E98  
                                    l4534 1306                                      l4526 12D8  
                                    l4518 1288                                      l4622 2518  
                                    l4614 24F8                                      l4606 24EA  
                                    ?_map 001B                                      ?_pad 0011  
                                    l3592 1B3E                                      l3584 1B18  
                                    l4376 278C                                      l4368 2784  
                                    l4392 13C6                                      l4384 132E  
                                    l4448 196C                                      l3496 2A90  
                                    l3752 0AFC                                      l3744 0A96  
                                    l4800 0A66                                      l3728 0A30  
                                    l3736 0A50                                      l3680 093C  
                                    l3672 0910                                      l3840 2198  
                                    l3832 2172                                      l3824 2150  
                                    l3664 23FC                                      l3656 237A  
                                    l3648 2362                                      l3576 27CC  
                                    l3568 2794                                      l4296 1E2E  
                                    l3816 2BCC                                      l3808 2B9E  
                                    l4288 1D00                                      l4480 2074  
                                    l4472 200C                                      l4464 1FEC  
                                    l4456 1FC2                                      l3912 2F04  
                                    l3920 2C4C                                      l4528 12DC  
                                    l4536 130E                                      l4624 252A  
                                    l4616 250A                                      l4608 24EC  
                                    l3594 1B4E                                      l3586 1B1C  
                                    l3578 1AF6                                      l4378 278E  
                                    l4394 13CA                                      l3498 2A94  
                                    l3762 0B1E                                      l3754 0B0C  
                                    l4802 0ACC                                      l3738 0A84  
                                    l3690 0952                                      l3682 0942  
                                    l3674 0920                                      l3850 21D2  
                                    l3842 21A0                                      l3834 2176  
                                    l3826 2158                                      l3930 26B6  
                                    l3666 23FE                                      l3658 239E  
                                    l4298 1E3A                                      l3818 2BD0  
                                    l4466 1FF4                                      l4458 1FCA  
                                    l3906 2EEA                                      l3922 2C5C  
                                    l4538 1312                                      l4490 11D6  
                                    l4626 2532                                      l4618 250E  
                                    l3596 1B64                                      l3588 1B2A  
                                    l4396 13E6                                      l3780 2E36  
                                    l3756 0B18                                      l3692 0958  
                                    l3684 094A                                      l3676 0930  
                                    l3748 0AB6                                      l3668 08FE  
                                    l3860 21F8                                      l3852 21D4  
                                    l3844 21AE                                      l3836 217E  
                                    l3828 215C                                      l3940 2720  
                                    l3932 26BE                                      l4468 1FFC  
                                    l4476 201C                                      l3908 2EEA  
                                    l3924 2C6C                                      l3916 2C34  
                                    l4492 11EA                                      l3598 1B6C  
                                    l3950 1754                                      l3694 0968  
                                    l3678 0934                                      l3790 2B38  
                                    l3782 2AFA                                      l3854 21DA  
                                    l3846 21B4                                      l3838 2190  
                                    l3870 221C                                      l3934 26CC  
                                    l4478 2070                                      l3926 2C70  
                                    l3918 2C48                                      l4494 11F2  
                                    l4486 11C0                                      l4590 24B6  
                                    l4582 24A2                                      l3960 1790  
                                    l3952 1784                                      l3944 1744  
                                    l3696 0978                                      l3784 2B0C  
                                    l3848 21CA                                      l3856 21E0  
                                    l3880 2250                                      l3872 2220  
                                    l3864 2202                                      l3936 26DE  
                                    l4496 11F4                                      l4488 11D2  
                                    l4592 24CA                                      l4584 24AC  
                                    l3778 2E16                                      l3970 182C  
                                    l3962 17D8                                      l3954 1788  
                                    l3698 0984                                      l3786 2B14  
                                    l3858 21F0                                      l3890 228A  
                                    l3882 2258                                      l3874 222E  
                                    l3866 2206                                      l3938 271C  
                                    l3794 2BF0                                      l4498 1206  
                                    l4594 24CE                                      l4586 24B0  
                                    l3972 1830                                      l3964 17DC  
                                    l3788 2B1C                                      l3884 2266  
                                    l3892 2290                                      l3876 2236  
                                    l3868 2214                                      l3796 2BF8  
                                    l3980 1D0A                                      l4596 24D2  
                                    l4588 24B2                                      l3974 1868  
                                    l3966 17E0                                      l3894 22A0  
                                    l3886 227C                                      l3878 2248  
                                    l3798 2BFA                                      l3990 1D3A  
                                    l3982 1D0E                                      l4790 2032  
                                    l4598 24D6                                      l3968 17FC  
                                    l3896 22A8                                      l3888 2284  
                                    l3984 1D14                                      l3976 1D08  
                                    l4792 1A80                                      l4794 0BFE  
                                    l3986 1D20                                      l3978 1D0A  
                                    l4796 0DDE                                      l3996 1D46  
                                    l3988 1D28                                      l4788 086C  
                                    l4798 09AE                                      l3998 1D62  
                            ?_leer_eeprom 0003                                      STR_1 7A31  
                                    STR_2 7DFB                                      STR_3 7FC3  
                                    STR_4 7CC7                                      STR_5 7EA1  
                                    STR_6 7D8C                                      STR_7 7F2C  
                                    STR_8 7C03                                      STR_9 7AB0  
                                    u2001 0F20                                      u2010 0F44  
                                    u2011 0F40                                      u2020 0F6E  
                                    u2100 15BA                                      u2021 0F6A  
                                    u2101 15B6                                      u2110 2B64  
                                    u2030 0FAE                                      u2111 2B60  
                                    u2031 0FAA                                      u2120 2B92  
                                    u2040 0FF8                                      u2200 047E  
                                    u3000 2214                                      u2121 2B8E  
                                    u2041 0FF4                                      u2201 047A  
                                    u3001 2210                                      u2130 29FC  
                                    u2050 14AA                                      u2210 05A8  
                                    u3010 222E                                      u2131 29F8  
                                    u2051 14A6                                      u2211 05A4  
                                    u3011 222A                                      u3100 1884  
                                    u2060 14DC                                      u2220 05C6  
                                    u2140 03DE                                      u2300 1066  
                                    u3020 2248                                      u3101 1880  
                                    u2061 14D8                                      u2221 05C2  
                                    u2141 03D8                                      u2301 1062  
                                    u3021 2244                                      u2070 151A  
                                    u2230 05E0                                      u2150 03E0  
                                    u2310 1098                                      u3030 2266  
                                    u3110 1D3A                                      u2071 1516  
                                    u2231 05DC                                      u2311 1094  
                                    u3031 2262                                      u3111 1D36  
                                    u2400 0DAC                                      u2080 1544  
                                    u2240 05FA                                      u2160 03F6  
                                    u2320 10B6                                      u3040 227C  
                                    u3120 1D90                                      u3200 070C  
                                    _LATD 000F8C                                      u2401 0DA8  
                                    u2081 1540                                      u2241 05F6  
                                    u2161 03F2                                      u2321 10B2  
                                    u3041 2278                                      u3121 1D8C  
                                    u3201 0708                                      u2410 0E62  
                                    u2090 1572                                      u2250 060A  
                                    u2170 0426                                      u2330 10E2  
                                    u3050 22A0                                      u3130 1DE0  
                                    u3210 0742                                      u2411 0E5C  
                                    u2091 156E                                      u2251 0606  
                                    u2171 0422                                      u2331 10DE  
                                    u3051 229C                                      u3131 1DDC  
                                    u3211 073E                                      u2420 0E64  
                                    u2260 061C                                      u2180 0442  
                                    u2340 111C                                      u2500 00C2  
                                    u3300 284E                                      u3140 235C  
                                    u3060 2C5C                                      u3220 0778  
                                    u2261 0618                                      u2181 043E  
                                    u2341 1118                                      u2501 00BE  
                                    u3301 284A                                      u3141 2358  
                                    u3061 2C58                                      u3221 0774  
                                    u2430 0E7A                                      u2270 062C  
                                    u2190 0470                                      u2350 116C  
                                    u2510 013E                                      u3310 1636  
                                    u3070 2C6C                                      u3230 07AE  
                                    u3150 2564                                      u2431 0E76  
                                    u2271 0628                                      u2191 046C  
                                    u2351 1168                                      u2511 0138  
                                    u3311 1632                                      u3071 2C68  
                                    u3231 07AA                                      u3151 2560  
                                    u2600 2A80                                      u2440 0E8C  
                                    u2280 0644                                      u2360 117C  
                                    u2520 0140                                      u3320 1662  
                                    u3080 26DE                                      u3400 1C82  
                                    u3240 07E4                                      u3160 2584  
                                    u2601 2A7C                                      u2441 0E88  
                                    u2281 0640                                      u2361 1178  
                                    u3321 165E                                      u3081 26DA  
                                    u3401 1C7E                                      u3241 07E0  
                                    u3161 2580                                      u2450 2EB2  
                                    u3090 17FC                                      u2610 2A90  
                                    u2370 11B6                                      u2530 0156  
                                    u3330 16D2                                      u3410 1D00  
                                    u3250 081A                                      u3170 25B4  
                                    u2451 2EAE                                      u3091 17F8  
                                    u2611 2A8C                                      u2371 11B2  
                                    u2291 1044                                      u2531 0152  
                                    u3331 16CE                                      u3411 1CFC  
                                    u3251 0816                                      u3171 25B0  
                                    u2460 2EC0                                      u3500 19BE  
                                    u2620 2952                                      u2380 0D5A  
                                    u1900 2DD8                                      u2540 017A  
                                    u3340 171E                                      u3180 2E08  
                                    u2700 2CEC                                      u3420 1EDE  
                                    u3260 0850                                      u2461 2EBC  
                                    u3501 19BA                                      u2381 0D56  
                                    u1901 2DD4                                      u2541 0176  
                                    u3341 171A                                      u3181 2E04  
                                    u2701 2CE8                                      u3421 1EDA  
                                    u3261 084C                                      u2470 2F74  
                                    u2630 297A                                      u2390 0D90  
                                    u1910 2088                                      u2550 01EC  
                                    u2710 2924                                      u3430 19DE  
                                    u3350 243A                                      u3510 1FEC  
                                    u3270 08D2                                      u3190 06D2  
                                    u2471 2F70                                      u2391 0D8C  
                                    u1911 2084                                      u2551 01E8  
                                    u2711 2920                                      u3431 19DA  
                                    u3351 2436                                      u3511 1FE8  
                                    u3271 08CE                                      u3191 06CE  
                                    u2640 298A                                      u1920 20AA  
                                    u2560 0210                                      u2480 0036  
                                    u2800 237A                                      u2720 27B2  
                                    u3440 1A0A                                      u3360 2466  
                                    u3280 08E2                                      u3600 12C6  
                                    u3520 11D2                                      u2641 2986  
                                    u1921 20A6                                      u2561 020C  
                                    u2481 0032                                      u2801 2376  
                                    u2721 27AE                                      u3441 1A06  
                                    u3361 2462                                      u3281 08DE  
                                    u3601 12C2                                      u3521 11CE  
                                    u1850 1EF8                                      u1930 2100  
                                    u2570 02B4                                      u2490 007E  
                                    u3370 0B7A                                      u3290 282C  
                                    u2650 29A2                                      u2810 23D4  
                                    u2730 27EC                                      u3450 1A36  
                                    u3610 12D8                                      u3530 11EA  
                                    u2627 2948                                      u1851 1EF4  
                                    u1931 20FC                                      u2571 02B0  
                                    u2491 007A                                      u3371 0B76  
                                    u3291 2828                                      u2651 299E  
                                    u2811 23D0                                      u2731 27E8  
                                    u3451 1A32                                      u3611 12D4  
                                    u3531 11E6                                      u2740 1B08  
                                    u3460 13E6                                      u2900 0AFC  
                                    u2820 0920                                      u1860 1F0A  
                                    u1940 2110                                      u2580 032E  
                                    u3380 0C34                                      u2660 29B6  
                                    u3620 12EE                                      u3540 1206  
                                    u2741 1B04                                      u3461 13E2  
                                    u2637 2970                                      u2901 0AF8  
                                    u2821 091C                                      u1861 1F06  
                                    u1941 210C                                      u2581 032A  
                                    u3381 0C30                                      u2661 29B2  
                                    u3621 12EA                                      u3541 1202  
                                    u2750 1B2A                                      u3470 1452  
                                    u2590 2A70                                      u2910 0B0C  
                                    u2830 0930                                      u1870 1F32  
                                    u1950 2D16                                      u3390 0D1A  
                                    u2670 29D2                                      u3550 124E  
                                    u2751 1B26                                      u3471 144E  
                                    u2591 2A6C                                      u2911 0B08  
                                    u2831 092C                                      u1871 1F2E  
                                    u1951 2D12                                      u3391 0D16  
                                    u2671 29CE                                      u3551 124A  
                                    u2760 1B64                                      u3480 1496  
                                    u2840 0968                                      u1960 2DA8  
                                    u1880 1F68                                      u2680 29E4  
                                    u2920 2C1E                                      u3560 125E  
                                    u2761 1B60                                      u3481 1492  
                                    u2841 0964                                      u1961 2DA2  
                                    u1881 1F64                                      u2681 29E0  
                                    u2921 2C1A                                      u3561 125A  
                                    u2770 1B86                                      u3490 193A  
                                    u2850 0978                                      u1970 2DAA  
                                    u1890 2CBA                                      u2690 2CD6  
                                    u2930 2BEC                                      u3570 1288  
                                    u2771 1B82                                      u3491 1936  
                                    u2851 0974                                      u1891 2CB6  
                                    u2691 2CD2                                      u3707 2BF2  
                                    u2931 2BE8                                      u3571 1284  
                                    u2780 1BAE                                      u2860 09F2  
                                    u1980 0EC4                                      u2940 2150  
                                    u3580 129E                                      u2781 1BAA  
                                    u2861 09EE                                      u1981 0EC0  
                                    u2941 214C                                      u3717 2CC2  
                                    u3581 129A                                      u2790 1BE0  
                                    u2870 0A14                                      u1990 0EF6  
                                    u2950 216A                                      u3590 12B0  
                                    u3670 250A                                      u2791 1BDC  
                                    u2871 0A10                                      u1991 0EF2  
                                    u2951 2166                                      u3727 2CD8  
                                    u3591 12AC                                      u3671 2506  
                                    u2880 0A24                                      u2960 2190  
                                    u3680 252A                                      u2881 0A20  
                                    u2961 218C                                      u3737 2CEE  
                                    u3681 2526                                      u2890 0AB2  
                                    u2970 21AE                                      u2891 0AAE  
                                    u2971 21AA                                      u3747 2F12  
                                    u2980 21CA                                      u2981 21C6  
                                    u3757 2F20                                      u2990 21F0  
                                    u2991 21EC                                      u3767 29A4  
                                    u3777 2E3C                                      u3697 2332  
                                    u3787 2D6C                                      _TMR0 000FD6  
                    _minutosTranscurridos 00F5                        ??_i2c_reinicia_com 0002  
                          _check_response 2CBC                   escribeHorariosMemoria@i 0011  
                 escribeHorariosMemoria@j 000D                             ??_i2c_detener 0002  
                                    abs@a 0013                                      _dbuf 017F  
                                    _atoi 0D22                                      _ctoa 29E8  
                                    _main 24A2                                      _dtoa 03AE  
                                    _hora 00FC                                      _prec 00ED  
                                    _nout 0178                                      pad@i 0018  
                                    pad@p 0015                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      indf1 000FE7  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    pad@w 001A                                      map@x 001B  
                                    fsr2l 000FD9                                      _stoa 103A  
                                    btemp 005F                            ?_sistemaRegado 0001  
                __size_of_asignarHorarios 0148                             ??_i2c_iniciar 0001  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 000E                  ??_restablecerDatosSensor 0005  
                           __CFG_IESO$OFF 000000                          ??_DHT11_ReadData 0001  
                       _constructorSensor 2FB4                      __size_of_DHT11_Start 0020  
                            ?_lecturaWifi 0001                   __size_of_setTiempoRegar 00A0  
                            ___param_bank 000000                        ?_constructorSensor 0001  
                      setTiempoRegar@hora 0014                        _leeHorariosMemoria 1886  
                        ??_encenderBombas 0014                                     ??_abs 0015  
                                   ??_map 002F                                     ??_pad 0017  
                          _i2c_envia_dato 2F9C                             __CFG_PLLDIV$1 000000  
                          _i2c_inicia_com 2FD0                           __end_of___aldiv 1C02  
                         __end_of___aodiv 103A                                     ?_atoi 0008  
                                   ?_ctoa 001C                                     ?_main 0001  
                                   ?_dtoa 001C                           __end_of___aomod 15FC  
                           _convertirDato 2EE8                           __end_of___awdiv 2202  
                                   STR_10 7AB0                                     STR_11 7DB1  
                                   STR_12 7FEC                                     STR_20 7E41  
                                   STR_13 7EF8                                     STR_21 7D67  
                                   STR_30 7F0F                                     STR_14 7F5E  
                                   STR_22 7EDD                                     STR_15 7C03  
                                   STR_23 7DD6                                     STR_31 7CF2  
                                   STR_40 7EC0                                     STR_24 7C69  
                                   STR_32 7A72                                     STR_16 79E9  
                                   STR_41 7C9A                                     STR_25 7E61  
                                   STR_17 7D42                                     STR_33 7B97  
                                   STR_42 7FB2                                     STR_26 7E1F  
                                   STR_18 7D1C                                     STR_34 7BCE  
                                   STR_43 7FF5                                     STR_27 7F75  
                                   STR_35 7F45                                     STR_19 7C36  
                                   STR_44 7FE1                                     STR_28 7F12  
                                   STR_36 7E81                           __end_of___awmod 22B2  
                                   STR_29 7FD3                                     STR_45 7FA0  
                                   STR_37 7EC0                                     STR_46 7F8C  
                                   STR_38 7C9A                                     STR_39 7E81  
                                   STR_47 7B5E                                     STR_48 7B25  
                                   STR_49 7AEB                       ??_constructorSensor 0005  
                                   ?_stoa 000A                         convertirDato@dato 0002  
                                   _T0CON 000FD5                           ___awdiv@divisor 0003  
                                   i2l209 28C8                       ?_leeHorariosMemoria 0001  
                         ___awdiv@counter 0005                                     _RCREG 000FAE  
                            vfpfcnvrt@fmt 0042                                     _SPBRG 000FAF  
                           __CFG_USBDIV$1 000000                                     _TRISD 000F95  
                                   _TXREG 000FAD                             __CFG_PWRT$OFF 000000  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                       ___lmul@multiplicand 0005  
                           __CFG_WRT3$OFF 000000                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            __CFG_EBTRB$OFF 000000  
                      __size_of_UART_init 0070                        __size_of_UART_read 005C  
                                   _flags 00EF                                     _fputc 1EE6  
                                   _fputs 2C78                           __end_of_isdigit 2DB0  
                  __end_of_check_response 2CFC                               ?_UART_write 0001  
                                   atoi@n 0015                                     pad@fp 0011  
                                   atoi@s 0008                                     _width 00EB  
                                   ctoa@c 001E                                     _putch 2FE0  
                                   ctoa@w 001F                                     dtoa@d 001E  
                                   dtoa@i 003E                                     dtoa@n 0036  
                                   dtoa@p 0030                                     dtoa@s 0034  
                                   dtoa@w 0032                           __end_of_isspace 2B9E  
                                   tablat 000FF5                                     plusw1 000FE3  
                                   plusw2 000FDB                                     stoa@i 0016  
                                   stoa@l 001E                                     stoa@p 001C  
                                   stoa@s 000C         __size_of_mostrarDatosSensoresWIFI 0106  
                                   stoa@w 0018                                     ttemp5 0060  
                                   ttemp6 0063                                     ttemp7 0067  
                                   status 000FD8                 ?_mostrarDatosSensoresWIFI 0001  
                                   wtemp8 0060                           __end_of_sprintf 2B4C  
                      escribe_eeprom@dato 0009                 __end_of_constructorSensor 2FBE  
                    ??_leeHorariosMemoria 0007                            __CFG_ICPRT$OFF 000000  
                              _i2c_espera 2E9C                          ??_dameHoraActual 0005  
                          __CFG_MCLRE$OFF 000000                           __initialization 2AA0  
                     __end_of_i2c_detener 2FE0           __size_of_lecturaAnalogaSensores 00AC  
                  __end_of_i2c_envia_dato 2FA8                              __end_of_atoi 0EB2  
                            __end_of_ctoa 2A44                              __end_of_main 253E  
                            __end_of_dtoa 0692                  ??_escribeHorariosMemoria 000B  
                         ??_configurarAdc 0001                              __end_of_stoa 11C0  
                  __end_of_i2c_inicia_com 2FD8                        _inicializarObjetos 132E  
                     __end_of_i2c_iniciar 2F8C                    sistemaPrincipal@opcion 00EA  
                        _dameHumedadSuelo 2BEE                            ?_convertirDato 0001  
                    __size_of_fijaHoraRtc 0068                                    ??_atoi 000A  
                                  ??_ctoa 001F                                    ??_main 005F  
                                  ??_dtoa 0026                                    ??_stoa 000E  
               setTiempoRegar@tiempoRegar 0013                             __activetblptr 000002  
                     ?_inicializarObjetos 0001                        i2c_envia_dato@dato 0002  
                         __CFG_CCP2MX$OFF 000000                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                                    ?_fputc 0001  
                                  ?_fputs 000A                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                           ?_check_response 0001  
                        ___awdiv@dividend 0001                    encenderBombas@flagSeco 0016  
                                  ?_putch 0001                        convertirDato@datoR 0003  
                           _horaRegar$803 0005                                    i2l4550 289C  
                                  i2l4542 2868                                    i2l4560 28C2  
                                  i2l4552 28A0                                    i2l4544 2876  
                                  i2l4554 28A2                                    i2l4546 2888  
                                  i2l4548 288C                                    i2l4556 28B0  
                                  i2l4558 28BE                           ??_sistemaRegado 005F  
                                  _SSPADD 000FC8                                    _SSPBUF 000FC9  
                    ??_inicializarObjetos 0007           __size_of_restablecerDatosSensor 0050  
                          __CFG_XINST$OFF 000000                          __end_of_getValue 0B22  
                            vfprintf@cfmt 005D                  __end_of_sistemaPrincipal 2078  
                          _escribe_eeprom 2E16                                    ___lmul 2794  
                         ?_i2c_envia_dato 0001                                 ??___aldiv 0015  
                               ??___aodiv 0011                                 ??___aomod 0011  
                                  ___wmul 2EC2                         __end_of_UART_init 2794  
                       __end_of_UART_read 2AA0                                 ??___awdiv 0005  
                               ??___awmod 0005                         ??_asignarHorarios 0076  
                        __end_of_leer_rtc 2E9C                           ?_i2c_inicia_com 0001  
                        __end_of_estaSeco 2C78                       __size_of_UART_write 0016  
                            ?_UART_printf 0002                                    clear_0 2AC8  
                                  clear_1 2ADA                                    clear_2 2AE6  
                        ___awdiv@quotient 0007                           ___awmod@divisor 0003  
                                  _setRtc 26B4                           ___awmod@counter 0005  
                                  pad@buf 0013                                    ctoa@fp 001C  
     mostrarDatosSensoresWIFI@temperatura 0164                                    dtoa@fp 001C  
                                  _strlen 2DB0                           _i2c_recibe_dato 2F46  
                  __size_of_dameDiaActual 0010                              ?_mostrarMenu 0001  
                                  fputc@c 0001                                    fputs@c 000E  
                                  fputs@i 000F                                    fputs@s 000A  
                               ??_isdigit 0003                      escribe_rtc@direccion 0004  
                            __mediumconst 79E8                                 ??_isspace 0003  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                    _lecturaAnalogaSensores 22B2  
            __end_of_mostrarDatosSensores 1EE6                                    stoa@cp 001A  
                                  stoa@fp 000A                                    putch@c 0001  
                        __end_of_vfprintf 292E                                 ??_sprintf 005F  
                           ?_regadoRapido 0001                                __accesstop 0060  
                 __end_of__initialization 2AEC                      __size_of_escribe_rtc 001E  
                         __CFG_PBADEN$OFF 000000                      __size_of_leer_eeprom 003C  
                         __CFG_FOSC$XT_XT 000000                               _i2c_detener 2FD8  
              __size_of_constructorSensor 000A                             ___rparam_used 000001  
                             _i2c_iniciar 2F76                    __end_of_escribe_eeprom 2E46  
                             ?_i2c_espera 0001                            _setTiempoRegar 2402  
                          __pcstackCOMRAM 0001                              leer_rtc@dato 0004  
                            __pidataBANK1 2FA8                      __size_of_lecturaWifi 00F0  
         __size_of_escribeHorariosMemoria 0142                           ??_convertirDato 0001  
                           __end_of_fputc 1FB0                             __end_of_fputs 2CBC  
                     estaSeco@temperatura 0013                             __end_of_putch 2FE2  
                  _restablecerDatosSensor 2B9E                              _datoRecibido 017B  
                       ?_dameDatosSistema 0001                            ??_regadoRapido 000F  
                                 ??_fputc 0005                                   ??_fputs 000E  
                                 ??_putch 0001                                __pbssBANK0 00EB  
                              __pbssBANK1 0168                        ??_dameDatosSistema 0076  
                 __size_of_desbordamiento 28C4                        __size_of_horaRegar 0082  
                  __end_of_setTiempoRegar 24A2                             _dameDiaActual 2F8C  
       constructorSensor@porcientoHumedad 0003                              lecturaWifi@i 00AA  
                         ?_escribe_eeprom 0007             dameTemperaturaHumedad@Humedad 0004  
                              _fijaDiaRtc 2DE6                        _contInterrupciones 00F1  
               __size_of_i2c_reinicia_com 0008                                   ?___lmul 0001  
                                 ?___wmul 0001                                _flagRegado 00F7  
              mostrarDatosSensores@buffer 0077                   __end_of_i2c_recibe_dato 2F60  
                                 _ACKSTAT 007E2E                            ___lmul@product 0009  
                                 ?_setRtc 0001                                   ?_strlen 0001  
         mostrarDatosSensores@temperatura 00A9             dameTemperaturaHumedad@humedad 000E  
                      __size_of_vfpfcnvrt 039C                       __size_of_i2c_espera 0026  
                               ?_getValue 0004                    _escribeHorariosMemoria 1744  
                                 _SSPCON1 000FC6                                   _SSPCON2 000FC5  
                            ??_UART_write 0001                                   _SSPSTAT 000FC7  
                __end_of_dameHumedadSuelo 2C34                                 ?_leer_rtc 0001  
                               ?_estaSeco 0010                           __CFG_VREGEN$OFF 000000  
                          ?_dameDiaActual 0001                             ??_DHT11_Start 0001  
                         ?_setTiempoRegar 0001                                   __Hparam 0000  
                                 __Lparam 0000         dameTemperaturaHumedad@Temperatura 0006  
                                 ___aldiv 1AF6                                   ___aodiv 0EB2  
                                 ___aomod 1498                                   ___awdiv 213E  
                         __size_of___lmul 006A                      _mostrarDatosSensores 1DF8  
                                 ___awmod 2202                           __size_of___wmul 0026  
                               ?_vfprintf 0057                           __CFG_STVREN$OFF 000000  
                                 __pcinit 2AA0                                   __ramtop 0800  
                      __end_of_UART_write 2F76                           __size_of_setRtc 0070  
                                 __ptext0 24A2                                   __ptext1 11C0  
                                 __ptext2 253E                                   __ptext3 0692  
                                 __ptext4 2C34                                   __ptext5 2E46  
                                 __ptext6 2F8C                                   __ptext7 2E72  
                                 __ptext8 2EE8                                   __ptext9 1FB0  
                 check_response@respuesta 0001                         __end_of_horaRegar 25C0  
                               _T0CONbits 000FD5                           __size_of_strlen 0036  
                    __size_of_UART_printf 005E                              __size_of_abs 0040  
                            __size_of_pad 00C6                              __size_of_map 007A  
                        ??_check_response 0001                                   _isdigit 2D78  
                        ___awmod@dividend 0001                                   _regando 00F4  
                   regadoRapido@areaRegar 0012                          ___aldiv@dividend 000D  
                                 _isspace 2B4C                                   _minutos 00FB  
                    __size_of_mostrarMenu 007A                                   atoi@neg 000E  
                              ??_getValue 0006                                   _sprintf 2AFA  
                          __pintcode_body 2866                      end_of_initialization 2AEC  
          mostrarDatosSensoresWIFI@buffer 0132                                ??_leer_rtc 0003  
                              ??_estaSeco 0012                                   fputc@fp 0003  
                         _asignarHorarios 15FC                             __Lmediumconst 79E8  
                                 int_func 2866                                   fputs@fp 000C  
                        ??_i2c_envia_dato 0002               __size_of_leeHorariosMemoria 013A  
                        ??_i2c_inicia_com 0002                               ?_fijaDiaRtc 0001  
                        _VALOR_TIMER0UART 01A8                         __end_of_vfpfcnvrt 03AE  
                ??_dameTemperaturaHumedad 0008                                 _RCSTAbits 000FAB  
                        ___aldiv@quotient 0017                     ?_mostrarDatosSensores 0001  
                     __end_of_DHT11_Start 2F28                                   postdec1 000FE5  
                                 postdec2 000FDD                         ?_sistemaPrincipal 0001  
                 _peticionLecturaSensores 00F3                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                           ??_fijaHoraRtc 0013                      __end_of_regadoRapido 1AF6  
                        ?_i2c_recibe_dato 0001                                ??_vfprintf 005D  
                           setRtc@datoRtc 0011                     __end_of_configurarAdc 2FC8  
                      ??_sistemaPrincipal 00E8                                   strlen@a 0003  
                                 strlen@s 0001                                 _UART_init 2724  
                              getValue@Rx 000E                                 _UART_read 2A44  
                               _PORTDbits 000F83                   __size_of_DHT11_ReadData 005C  
                 ?_lecturaAnalogaSensores 0001                             setRtc@seteado 0010  
               dameHumedadSuelo@canalLeer 0005                   lecturaAnalogaSensores@i 0030  
                               _TRISBbits 000F93                                 _TRISCbits 000F94  
                               _TRISDbits 000F95                   __size_of_encenderBombas 026C  
                _mostrarDatosSensoresWIFI 1C02                         lecturaWifi@buffer 0076  
                         ??_dameDiaActual 0005                                map@out_max 002B  
                              map@out_min 0027                            _desbordamiento 0008  
                          _esperandoDatos 017D                            _UART_init$1915 0023  
                            ?_i2c_detener 0001                     __end_of_sistemaRegado 132E  
                               _TXSTAbits 000FAC                         dameDatosSistema@i 00E6  
                       dameDatosSistema@j 00E4               __size_of_inicializarObjetos 016A  
                            ?_i2c_iniciar 0001                              ??_i2c_espera 0001  
                       _MODO_COMUNICACION 017C                        DHT11_ReadData@data 0002  
                        _i2c_reinicia_com 2FC8                 dameDatosSistema@diasRegar 00AC  
                          __end_of___lmul 27FE                               vfpfcnvrt@ap 0044  
                             vfpfcnvrt@cp 0052                               vfpfcnvrt@fp 0040  
                             vfpfcnvrt@ll 004A                            __end_of___wmul 2EE8  
                 ?_restablecerDatosSensor 0001            __end_of_lecturaAnalogaSensores 235E  
                              ?_UART_init 001B                                ?_UART_read 0001  
                 __size_of_dameHoraActual 002C                            __end_of_setRtc 2724  
                     __end_of_fijaHoraRtc 2866                            __end_of_strlen 2DE6  
                     start_initialization 2AA0                              _estaSeco$796 0012  
                             __end_of_abs 2D3C                               __end_of_pad 213E  
                 __end_of_asignarHorarios 1744                               __end_of_map 26B4  
                     __size_of_fijaDiaRtc 0030         escribeHorariosMemoria@contMemoria 000F  
                  __end_of_desbordamiento 28CC                        __end_of_i2c_espera 2EC2  
                           ??_escribe_rtc 0004                             ??_leer_eeprom 0005  
                        ??_escribe_eeprom 000A                       leeHorariosMemoria@i 000D  
                     leeHorariosMemoria@j 0009                      constructorSensor@pin 0004  
                             _DHT11_Start 2F08                     _dameDatosSistema$1916 00DE  
                   _dameDatosSistema$1917 00E0                     _dameDatosSistema$1918 00E2  
                           ??_lecturaWifi 005F                    ??_mostrarDatosSensores 0076  
                             vfprintf@fmt 0059                 __size_of_dameDatosSistema 0200  
         __size_of_dameTemperaturaHumedad 00A4                                  ??___lmul 0009  
                                ??___wmul 0005            __end_of_restablecerDatosSensor 2BEE  
                             __pdataBANK1 019F                          __CFG_LPT1OSC$OFF 000000  
                       leer_rtc@direccion 0003                                  ??_setRtc 000F  
                   __end_of_convertirDato 2F08                                  ??_strlen 0003  
                             __pbssBIGRAM 01AA                   ?_escribeHorariosMemoria 0001  
                           __pcstackBANK0 0060                             __pcstackBANK1 0100  
                        ___aodiv@dividend 0001                           ?_desbordamiento 0001  
                        ??_setTiempoRegar 0013                                 _diaActual 00F9  
                 inicializarObjetos@i_806 000B                         __size_of_getValue 0224  
                       ?_dameHumedadSuelo 0001                    getValue@datoIncorrecto 0008  
                       UART_printf@cadena 0002                             lecturaWifi@Rx 00A8  
                               _atoi$1564 0010                                 _atoi$1565 0014  
                               _atoi$1566 0012                        ??_dameHumedadSuelo 0003  
                       __size_of_leer_rtc 002A                         __size_of_estaSeco 0044  
                     __end_of_escribe_rtc 2F46                       __end_of_leer_eeprom 2D78  
                   __size_of_regadoRapido 0136                                 _dtoa$1081 002E  
                               __pintcode 0008                             __pmediumconst 79E8  
                                ?___aldiv 000D                                  ?___aodiv 0001  
                                ?___aomod 0001                                  ?___awdiv 0001  
                        ___aodiv@quotient 0013                                  ?___awmod 0001  
                             _fijaHoraRtc 27FE                       __end_of_lecturaWifi 1DF8  
                          _DHT11_ReadData 298C                                setRtc@dato 0012  
                             ??_UART_init 001F                               ??_UART_read 0001  
                       __size_of_vfprintf 0062               mostrarDatosSensores@humedad 00AA  
          __end_of_escribeHorariosMemoria 1886                                  ?_isdigit 0001  
                          _encenderBombas 0692                                  ?_isspace 0001  
                               _horaRegar 253E            dameTemperaturaHumedad@checkSum 000A  
                  _dameTemperaturaHumedad 235E                          ?_asignarHorarios 0001  
                                ?_sprintf 0060                            __size_of_fputc 00CA  
                          __size_of_fputs 0044                              _regadoRapido 19C0  
                          __size_of_putch 0002                           ___aldiv@divisor 0011  
                         ___aldiv@counter 0015                            ___wmul@product 0005  
                                _LATDbits 000F8C                                  _PIE1bits 000F9D  
                    __size_of_i2c_detener 0008                              ??_fijaDiaRtc 0013  
                                _PIR1bits 000F9E                                  i2u363_40 2876  
                                i2u363_41 2872                                  i2u364_40 2888  
                                i2u364_41 2884                                  i2u365_40 289C  
                                i2u365_41 2898                                  i2u366_40 28BE  
                                i2u366_41 28BA                   restablecerDatosSensor@i 0005  
                    __size_of_i2c_iniciar 0016                          __CFG_WDTPS$32768 000000  
                  _tiempoInactividadTrans 00FE             leeHorariosMemoria@contMemoria 000B  
                     asignarHorarios@hora 00AC                    __end_of_DHT11_ReadData 29E8  
                               getValue@i 0009                             ??_UART_printf 0004  
                  dameDatosSistema@buffer 007A                                 _vfpfcnvrt 0012  
                               map@in_max 0023                                 map@in_min 001F  
                              _ADCON0bits 000FC2                            _dameHoraActual 2E46  
                       ___wmul@multiplier 0001                ??_mostrarDatosSensoresWIFI 00AC  
                  __end_of_encenderBombas 08FE                             ??_mostrarMenu 0004  
                          UART_write@dato 0001                                ?_horaRegar 0001  
                   mostrarDatosSensores@i 00AB                              _isspace$1582 0007  
               __size_of_sistemaPrincipal 00C8                  __end_of_i2c_reinicia_com 2FD0  
                              vfpfcnvrt@c 0056                        __end_of_fijaDiaRtc 2E16  
                       ___lmul@multiplier 0001                                 copy_data0 2AB4  
                             _escribe_rtc 2F28                               _leer_eeprom 2D3C  
                            _VALOR_TIMER0 01A6                __end_of_leeHorariosMemoria 19C0  
                               estaSeco@s 0010                   asignarHorarios@diaRegar 00AB  
                                __Hrparam 0000                     getValue@numCharacters 0004  
                            _minutosRegar 00F6                               _lecturaWifi 1D08  
                           UART_init@BAUD 001B                                vfprintf@ap 005B  
                                __Lrparam 0000                                vfprintf@fp 0057  
                        _dameDatosSistema 0B22  dameTemperaturaHumedad@temperaturaDecimal 000D  
                     _esperaDatoConcluida 00FD                          __size_of___aldiv 010C  
                         ?_DHT11_ReadData 0001                          __size_of___aodiv 0188  
                        __size_of___aomod 0164                          __size_of___awdiv 00C4  
                  __end_of_dameHoraActual 2E72                          __size_of___awmod 00B0  
                              ?_vfpfcnvrt 0040                           DHT11_ReadData@i 0001  
                         ___aodiv@divisor 0009                           ___aodiv@counter 0011  
                         ?_encenderBombas 0001                                sprintf@fmt 0062  
                __size_of_i2c_recibe_dato 001A                       __end_of_UART_printf 298C  
                        __size_of_isdigit 0038                          __size_of_isspace 0052  
                                __ptext10 2402                                  __ptext11 19C0  
                                __ptext20 2794                                  __ptext12 25C0  
                                __ptext21 2BEE                                  __ptext13 1C02  
                                __ptext30 2202                                  __ptext22 235E  
                                __ptext14 1D08                                  __ptext31 213E  
                                __ptext23 2CBC                                  __ptext15 2B9E  
                                __ptext40 1498                                  __ptext32 0B22  
                                __ptext24 2F08                                  __ptext16 2FB4  
                                __ptext41 0EB2                                  __ptext33 15FC  
                                __ptext25 298C                                  __ptext17 1DF8  
                                __ptext50 2D78                                  __ptext42 29E8  
                                __ptext34 2AFA                                  __ptext26 27FE  
                                __ptext18 22B2                                  __ptext51 08FE  
                                __ptext43 2078                                  __ptext35 28CC  
                                __ptext27 2DE6                                  __ptext19 263A  
                                __ptext60 2F46                                  __ptext52 2A44  
                                __ptext44 2DB0                                  __ptext36 0012  
                                __ptext28 26B4                                  __ptext61 2FD0  
                                __ptext53 292E                                  __ptext45 2C78  
                                __ptext37 103A                                  __ptext29 2F28  
                                __ptext70 1AF6                                  __ptext62 2F9C  
                                __ptext54 2F60                                  __ptext46 1EE6  
                                __ptext38 03AE                                  __ptext63 2FD8  
                                __ptext55 1744                                  __ptext47 2FE0  
                                __ptext39 2CFC                                  __ptext64 2E9C  
                                __ptext56 2E16                                  __ptext48 0D22  
                                __ptext65 132E                                  __ptext57 1886  
                                __ptext49 2B4C                                  __ptext66 2EC2  
                                __ptext58 2D3C                                  __ptext67 2F76  
                                __ptext59 2FC8                                  __ptext68 2FBE  
                                __ptext69 2724                                  _getValue 08FE  
                     __end_of_mostrarMenu 263A                          __size_of_sprintf 0052  
                                _leer_rtc 2E72                                  _estaSeco 2C34  
              __end_of_inicializarObjetos 1498                                  _byteUart 017E  
                  __size_of_configurarAdc 000A                  lecturaWifi@humedadMedida 00A9  
                 __size_of_check_response 0040                     __end_of_dameDiaActual 2F9C  
                     inicializarObjetos@i 000D                       inicializarObjetos@j 0009  
                           __size_of_atoi 0190                             __size_of_ctoa 005C  
                           __size_of_main 009C                             __size_of_dtoa 02E4  
                                _horarios 01AA                              ?_DHT11_Start 0001  
                           __size_of_stoa 0186      dameTemperaturaHumedad@humedadDecimal 000C  
                                _tempHora 00F8                                  _segundos 00FA  
                               stoa@F1144 019F                           encenderBombas@i 0017  
                                _sensores 0168                 mostrarDatosSensoresWIFI@i 0166  
                                int$flags 005F                                  _vfprintf 28CC  
                         ?_dameHoraActual 0001                   __size_of_i2c_envia_dato 000C  
                           getValue@i_989 000B                   __size_of_i2c_inicia_com 0008  
                i2c_recibe_dato@datoleido 0002                          ___aomod@dividend 0001  
                   __CFG_CPUDIV$OSC1_PLL2 000000                          ??_desbordamiento 0001  
                          _vfpfcnvrt$1105 0054                    __size_of_sistemaRegado 016E  
                              _INTCONbits 000FF2                        constructorSensor@s 0001  
                             ??_horaRegar 0003           mostrarDatosSensoresWIFI@humedad 0165  
                 escribe_eeprom@direccion 0007                                  isdigit@c 0001  
                                intlevel2 0000                                 sprintf@ap 006E  
                         escribe_rtc@dato 0003                                  isspace@c 0001  
                         setRtc@direccion 000F                         asignarHorarios@Rx 00AA  
           __size_of_mostrarDatosSensores 00EE                             _overflowTimer 017A  
                            ?_fijaHoraRtc 0001         dameTemperaturaHumedad@temperatura 000F  
                         ___aomod@divisor 0009                              getValue@dato 000D  
               __size_of_dameHumedadSuelo 0046                               ??_vfpfcnvrt 0046  
                                stoa@nuls 000F                           ___aomod@counter 0011  
                             _UART_printf 292E                             _configurarAdc 2FBE  
        __end_of_mostrarDatosSensoresWIFI 1D08                     asignarHorarios@buffer 0078  
                                sprintf@f 0070                                  sprintf@s 0060  
                 ?_dameTemperaturaHumedad 0004                               _mostrarMenu 25C0  
                            ___aldiv@sign 0016                          asignarHorarios@i 00AD  
                        _sistemaPrincipal 1FB0                           leer_eeprom@dato 0006  
                             _SSPCON2bits 000FC5                                _UART_write 2F60  
                            ___aodiv@sign 0012                         ??_i2c_recibe_dato 0002  
                  __size_of_convertirDato 0020                      leer_eeprom@direccion 0003  
    mostrarDatosSensoresWIFI@bufferSensor 0100                             _sistemaRegado 11C0  
                            ___aomod@sign 0012                  ??_lecturaAnalogaSensores 002F  
