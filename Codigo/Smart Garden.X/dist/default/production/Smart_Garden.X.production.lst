

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Apr 20 02:11:06 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55  0000                     
    56                           ; Version 2.10
    57                           ; Generated 31/07/2019 GMT
    58                           ; 
    59                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F4550 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     
    91                           	psect	idataCOMRAM
    92  000FA8                     __pidataCOMRAM:
    93                           	opt callstack 0
    94                           
    95                           ;initializer for _VALOR_TIMER0
    96  000FA8  6769               	dw	26473
    97  0000                     _TMR0	set	4054
    98  0000                     _T0CONbits	set	4053
    99  0000                     _TRISD	set	3989
   100  0000                     _T0CON	set	4053
   101  0000                     _LATD	set	3980
   102  0000                     _PIE1bits	set	3997
   103  0000                     _ADRESL	set	4035
   104  0000                     _ADCON0bits	set	4034
   105  0000                     _LATDbits	set	3980
   106  0000                     _PORTE	set	3972
   107  0000                     _PORTA	set	3968
   108  0000                     _TRISE	set	3990
   109  0000                     _TRISA	set	3986
   110  0000                     _ADCON2	set	4032
   111  0000                     _ADCON1	set	4033
   112  0000                     _INTCONbits	set	4082
   113  0000                     _TXREG	set	4013
   114  0000                     _RCREG	set	4014
   115  0000                     _PIR1bits	set	3998
   116  0000                     _RCSTAbits	set	4011
   117  0000                     _TXSTAbits	set	4012
   118  0000                     _SPBRG	set	4015
   119  0000                     _TRISCbits	set	3988
   120  0000                     _SSPBUF	set	4041
   121  0000                     _SSPCON2bits	set	4037
   122  0000                     _SSPADD	set	4040
   123  0000                     _SSPCON2	set	4037
   124  0000                     _SSPCON1	set	4038
   125  0000                     _SSPSTAT	set	4039
   126  0000                     _TRISBbits	set	3987
   127  0000                     _ACKSTAT	set	32302
   128                           
   129                           	psect	mediumconst
   130  007D50                     __pmediumconst:
   131                           	opt callstack 0
   132  007D50  00                 	db	0
   133  007D51                     STR_17:
   134  007D51  0D                 	db	13
   135  007D52  0A                 	db	10
   136  007D53  20                 	db	32
   137  007D54  49                 	db	73	;'I'
   138  007D55  6E                 	db	110	;'n'
   139  007D56  67                 	db	103	;'g'
   140  007D57  72                 	db	114	;'r'
   141  007D58  65                 	db	101	;'e'
   142  007D59  73                 	db	115	;'s'
   143  007D5A  65                 	db	101	;'e'
   144  007D5B  20                 	db	32
   145  007D5C  6C                 	db	108	;'l'
   146  007D5D  6F                 	db	111	;'o'
   147  007D5E  73                 	db	115	;'s'
   148  007D5F  20                 	db	32
   149  007D60  6D                 	db	109	;'m'
   150  007D61  69                 	db	105	;'i'
   151  007D62  6E                 	db	110	;'n'
   152  007D63  75                 	db	117	;'u'
   153  007D64  74                 	db	116	;'t'
   154  007D65  6F                 	db	111	;'o'
   155  007D66  73                 	db	115	;'s'
   156  007D67  20                 	db	32
   157  007D68  71                 	db	113	;'q'
   158  007D69  75                 	db	117	;'u'
   159  007D6A  65                 	db	101	;'e'
   160  007D6B  20                 	db	32
   161  007D6C  64                 	db	100	;'d'
   162  007D6D  65                 	db	101	;'e'
   163  007D6E  73                 	db	115	;'s'
   164  007D6F  65                 	db	101	;'e'
   165  007D70  65                 	db	101	;'e'
   166  007D71  20                 	db	32
   167  007D72  71                 	db	113	;'q'
   168  007D73  75                 	db	117	;'u'
   169  007D74  65                 	db	101	;'e'
   170  007D75  20                 	db	32
   171  007D76  73                 	db	115	;'s'
   172  007D77  65                 	db	101	;'e'
   173  007D78  20                 	db	32
   174  007D79  72                 	db	114	;'r'
   175  007D7A  69                 	db	105	;'i'
   176  007D7B  65                 	db	101	;'e'
   177  007D7C  67                 	db	103	;'g'
   178  007D7D  75                 	db	117	;'u'
   179  007D7E  65                 	db	101	;'e'
   180  007D7F  20                 	db	32
   181  007D80  65                 	db	101	;'e'
   182  007D81  6E                 	db	110	;'n'
   183  007D82  20                 	db	32
   184  007D83  65                 	db	101	;'e'
   185  007D84  73                 	db	115	;'s'
   186  007D85  65                 	db	101	;'e'
   187  007D86  20                 	db	32
   188  007D87  68                 	db	104	;'h'
   189  007D88  6F                 	db	111	;'o'
   190  007D89  72                 	db	114	;'r'
   191  007D8A  61                 	db	97	;'a'
   192  007D8B  72                 	db	114	;'r'
   193  007D8C  69                 	db	105	;'i'
   194  007D8D  6F                 	db	111	;'o'
   195  007D8E  20                 	db	32
   196  007D8F  65                 	db	101	;'e'
   197  007D90  6A                 	db	106	;'j'
   198  007D91  3A                 	db	58	;':'
   199  007D92  20                 	db	32
   200  007D93  31                 	db	49	;'1'
   201  007D94  35                 	db	53	;'5'
   202  007D95  20                 	db	32
   203  007D96  0D                 	db	13
   204  007D97  0A                 	db	10
   205  007D98  00                 	db	0
   206  007D99                     STR_11:
   207  007D99  0D                 	db	13
   208  007D9A  0A                 	db	10
   209  007D9B  20                 	db	32
   210  007D9C  49                 	db	73	;'I'
   211  007D9D  6E                 	db	110	;'n'
   212  007D9E  67                 	db	103	;'g'
   213  007D9F  72                 	db	114	;'r'
   214  007DA0  65                 	db	101	;'e'
   215  007DA1  73                 	db	115	;'s'
   216  007DA2  65                 	db	101	;'e'
   217  007DA3  20                 	db	32
   218  007DA4  31                 	db	49	;'1'
   219  007DA5  20                 	db	32
   220  007DA6  70                 	db	112	;'p'
   221  007DA7  61                 	db	97	;'a'
   222  007DA8  72                 	db	114	;'r'
   223  007DA9  61                 	db	97	;'a'
   224  007DAA  20                 	db	32
   225  007DAB  72                 	db	114	;'r'
   226  007DAC  65                 	db	101	;'e'
   227  007DAD  67                 	db	103	;'g'
   228  007DAE  61                 	db	97	;'a'
   229  007DAF  72                 	db	114	;'r'
   230  007DB0  20                 	db	32
   231  007DB1  7C                 	db	124
   232  007DB2  7C                 	db	124
   233  007DB3  20                 	db	32
   234  007DB4  69                 	db	105	;'i'
   235  007DB5  6E                 	db	110	;'n'
   236  007DB6  67                 	db	103	;'g'
   237  007DB7  72                 	db	114	;'r'
   238  007DB8  65                 	db	101	;'e'
   239  007DB9  73                 	db	115	;'s'
   240  007DBA  65                 	db	101	;'e'
   241  007DBB  20                 	db	32
   242  007DBC  30                 	db	48	;'0'
   243  007DBD  20                 	db	32
   244  007DBE  70                 	db	112	;'p'
   245  007DBF  61                 	db	97	;'a'
   246  007DC0  72                 	db	114	;'r'
   247  007DC1  61                 	db	97	;'a'
   248  007DC2  20                 	db	32
   249  007DC3  6E                 	db	110	;'n'
   250  007DC4  6F                 	db	111	;'o'
   251  007DC5  20                 	db	32
   252  007DC6  72                 	db	114	;'r'
   253  007DC7  65                 	db	101	;'e'
   254  007DC8  67                 	db	103	;'g'
   255  007DC9  61                 	db	97	;'a'
   256  007DCA  72                 	db	114	;'r'
   257  007DCB  3A                 	db	58	;':'
   258  007DCC  20                 	db	32
   259  007DCD  0D                 	db	13
   260  007DCE  0A                 	db	10
   261  007DCF  00                 	db	0
   262  007DD0                     STR_8:
   263  007DD0  0D                 	db	13
   264  007DD1  0A                 	db	10
   265  007DD2  20                 	db	32
   266  007DD3  49                 	db	73	;'I'
   267  007DD4  6E                 	db	110	;'n'
   268  007DD5  67                 	db	103	;'g'
   269  007DD6  72                 	db	114	;'r'
   270  007DD7  65                 	db	101	;'e'
   271  007DD8  73                 	db	115	;'s'
   272  007DD9  65                 	db	101	;'e'
   273  007DDA  20                 	db	32
   274  007DDB  75                 	db	117	;'u'
   275  007DDC  6E                 	db	110	;'n'
   276  007DDD  61                 	db	97	;'a'
   277  007DDE  20                 	db	32
   278  007DDF  68                 	db	104	;'h'
   279  007DE0  6F                 	db	111	;'o'
   280  007DE1  72                 	db	114	;'r'
   281  007DE2  61                 	db	97	;'a'
   282  007DE3  20                 	db	32
   283  007DE4  65                 	db	101	;'e'
   284  007DE5  6E                 	db	110	;'n'
   285  007DE6  20                 	db	32
   286  007DE7  66                 	db	102	;'f'
   287  007DE8  6F                 	db	111	;'o'
   288  007DE9  72                 	db	114	;'r'
   289  007DEA  6D                 	db	109	;'m'
   290  007DEB  61                 	db	97	;'a'
   291  007DEC  74                 	db	116	;'t'
   292  007DED  6F                 	db	111	;'o'
   293  007DEE  20                 	db	32
   294  007DEF  64                 	db	100	;'d'
   295  007DF0  65                 	db	101	;'e'
   296  007DF1  20                 	db	32
   297  007DF2  32                 	db	50	;'2'
   298  007DF3  34                 	db	52	;'4'
   299  007DF4  20                 	db	32
   300  007DF5  68                 	db	104	;'h'
   301  007DF6  72                 	db	114	;'r'
   302  007DF7  73                 	db	115	;'s'
   303  007DF8  20                 	db	32
   304  007DF9  65                 	db	101	;'e'
   305  007DFA  6A                 	db	106	;'j'
   306  007DFB  3A                 	db	58	;':'
   307  007DFC  20                 	db	32
   308  007DFD  31                 	db	49	;'1'
   309  007DFE  35                 	db	53	;'5'
   310  007DFF  20                 	db	32
   311  007E00  0D                 	db	13
   312  007E01  0A                 	db	10
   313  007E02  00                 	db	0
   314  007E03                     STR_24:
   315  007E03  0D                 	db	13
   316  007E04  0A                 	db	10
   317  007E05  20                 	db	32
   318  007E06  33                 	db	51	;'3'
   319  007E07  2E                 	db	46
   320  007E08  20                 	db	32
   321  007E09  50                 	db	80	;'P'
   322  007E0A  72                 	db	114	;'r'
   323  007E0B  6F                 	db	111	;'o'
   324  007E0C  67                 	db	103	;'g'
   325  007E0D  72                 	db	114	;'r'
   326  007E0E  61                 	db	97	;'a'
   327  007E0F  6D                 	db	109	;'m'
   328  007E10  61                 	db	97	;'a'
   329  007E11  72                 	db	114	;'r'
   330  007E12  20                 	db	32
   331  007E13  74                 	db	116	;'t'
   332  007E14  69                 	db	105	;'i'
   333  007E15  65                 	db	101	;'e'
   334  007E16  6D                 	db	109	;'m'
   335  007E17  70                 	db	112	;'p'
   336  007E18  6F                 	db	111	;'o'
   337  007E19  20                 	db	32
   338  007E1A  64                 	db	100	;'d'
   339  007E1B  65                 	db	101	;'e'
   340  007E1C  20                 	db	32
   341  007E1D  72                 	db	114	;'r'
   342  007E1E  69                 	db	105	;'i'
   343  007E1F  65                 	db	101	;'e'
   344  007E20  67                 	db	103	;'g'
   345  007E21  6F                 	db	111	;'o'
   346  007E22  20                 	db	32
   347  007E23  65                 	db	101	;'e'
   348  007E24  6E                 	db	110	;'n'
   349  007E25  20                 	db	32
   350  007E26  75                 	db	117	;'u'
   351  007E27  6E                 	db	110	;'n'
   352  007E28  20                 	db	32
   353  007E29  68                 	db	104	;'h'
   354  007E2A  6F                 	db	111	;'o'
   355  007E2B  72                 	db	114	;'r'
   356  007E2C  61                 	db	97	;'a'
   357  007E2D  72                 	db	114	;'r'
   358  007E2E  69                 	db	105	;'i'
   359  007E2F  6F                 	db	111	;'o'
   360  007E30  20                 	db	32
   361  007E31  0D                 	db	13
   362  007E32  0A                 	db	10
   363  007E33  00                 	db	0
   364  007E34                     STR_4:
   365  007E34  0D                 	db	13
   366  007E35  0A                 	db	10
   367  007E36  20                 	db	32
   368  007E37  45                 	db	69	;'E'
   369  007E38  6E                 	db	110	;'n'
   370  007E39  76                 	db	118	;'v'
   371  007E3A  69                 	db	105	;'i'
   372  007E3B  65                 	db	101	;'e'
   373  007E3C  20                 	db	32
   374  007E3D  6C                 	db	108	;'l'
   375  007E3E  61                 	db	97	;'a'
   376  007E3F  73                 	db	115	;'s'
   377  007E40  20                 	db	32
   378  007E41  48                 	db	72	;'H'
   379  007E42  6F                 	db	111	;'o'
   380  007E43  72                 	db	114	;'r'
   381  007E44  61                 	db	97	;'a'
   382  007E45  73                 	db	115	;'s'
   383  007E46  20                 	db	32
   384  007E47  65                 	db	101	;'e'
   385  007E48  6E                 	db	110	;'n'
   386  007E49  20                 	db	32
   387  007E4A  66                 	db	102	;'f'
   388  007E4B  6F                 	db	111	;'o'
   389  007E4C  72                 	db	114	;'r'
   390  007E4D  6D                 	db	109	;'m'
   391  007E4E  61                 	db	97	;'a'
   392  007E4F  74                 	db	116	;'t'
   393  007E50  6F                 	db	111	;'o'
   394  007E51  20                 	db	32
   395  007E52  32                 	db	50	;'2'
   396  007E53  34                 	db	52	;'4'
   397  007E54  20                 	db	32
   398  007E55  45                 	db	69	;'E'
   399  007E56  6A                 	db	106	;'j'
   400  007E57  3A                 	db	58	;':'
   401  007E58  20                 	db	32
   402  007E59  31                 	db	49	;'1'
   403  007E5A  35                 	db	53	;'5'
   404  007E5B  20                 	db	32
   405  007E5C  0D                 	db	13
   406  007E5D  0A                 	db	10
   407  007E5E  00                 	db	0
   408  007E5F                     STR_27:
   409  007E5F  0D                 	db	13
   410  007E60  0A                 	db	10
   411  007E61  20                 	db	32
   412  007E62  53                 	db	83	;'S'
   413  007E63  6F                 	db	111	;'o'
   414  007E64  6C                 	db	108	;'l'
   415  007E65  6F                 	db	111	;'o'
   416  007E66  20                 	db	32
   417  007E67  73                 	db	115	;'s'
   418  007E68  65                 	db	101	;'e'
   419  007E69  20                 	db	32
   420  007E6A  70                 	db	112	;'p'
   421  007E6B  65                 	db	101	;'e'
   422  007E6C  72                 	db	114	;'r'
   423  007E6D  6D                 	db	109	;'m'
   424  007E6E  69                 	db	105	;'i'
   425  007E6F  74                 	db	116	;'t'
   426  007E70  65                 	db	101	;'e'
   427  007E71  6E                 	db	110	;'n'
   428  007E72  20                 	db	32
   429  007E73  6E                 	db	110	;'n'
   430  007E74  75                 	db	117	;'u'
   431  007E75  6D                 	db	109	;'m'
   432  007E76  65                 	db	101	;'e'
   433  007E77  72                 	db	114	;'r'
   434  007E78  6F                 	db	111	;'o'
   435  007E79  73                 	db	115	;'s'
   436  007E7A  20                 	db	32
   437  007E7B  64                 	db	100	;'d'
   438  007E7C  65                 	db	101	;'e'
   439  007E7D  6C                 	db	108	;'l'
   440  007E7E  20                 	db	32
   441  007E7F  31                 	db	49	;'1'
   442  007E80  20                 	db	32
   443  007E81  61                 	db	97	;'a'
   444  007E82  6C                 	db	108	;'l'
   445  007E83  20                 	db	32
   446  007E84  33                 	db	51	;'3'
   447  007E85  20                 	db	32
   448  007E86  0D                 	db	13
   449  007E87  0A                 	db	10
   450  007E88  00                 	db	0
   451  007E89                     STR_20:
   452  007E89  0D                 	db	13
   453  007E8A  0A                 	db	10
   454  007E8B  20                 	db	32
   455  007E8C  4D                 	db	77	;'M'
   456  007E8D  69                 	db	105	;'i'
   457  007E8E  6E                 	db	110	;'n'
   458  007E8F  75                 	db	117	;'u'
   459  007E90  74                 	db	116	;'t'
   460  007E91  6F                 	db	111	;'o'
   461  007E92  73                 	db	115	;'s'
   462  007E93  20                 	db	32
   463  007E94  64                 	db	100	;'d'
   464  007E95  65                 	db	101	;'e'
   465  007E96  20                 	db	32
   466  007E97  72                 	db	114	;'r'
   467  007E98  69                 	db	105	;'i'
   468  007E99  65                 	db	101	;'e'
   469  007E9A  67                 	db	103	;'g'
   470  007E9B  6F                 	db	111	;'o'
   471  007E9C  20                 	db	32
   472  007E9D  65                 	db	101	;'e'
   473  007E9E  73                 	db	115	;'s'
   474  007E9F  74                 	db	116	;'t'
   475  007EA0  61                 	db	97	;'a'
   476  007EA1  62                 	db	98	;'b'
   477  007EA2  6C                 	db	108	;'l'
   478  007EA3  65                 	db	101	;'e'
   479  007EA4  63                 	db	99	;'c'
   480  007EA5  69                 	db	105	;'i'
   481  007EA6  64                 	db	100	;'d'
   482  007EA7  6F                 	db	111	;'o'
   483  007EA8  73                 	db	115	;'s'
   484  007EA9  21                 	db	33
   485  007EAA  20                 	db	32
   486  007EAB  0D                 	db	13
   487  007EAC  0A                 	db	10
   488  007EAD  00                 	db	0
   489  007EAE                     STR_21:
   490  007EAE  0D                 	db	13
   491  007EAF  0A                 	db	10
   492  007EB0  20                 	db	32
   493  007EB1  49                 	db	73	;'I'
   494  007EB2  6E                 	db	110	;'n'
   495  007EB3  67                 	db	103	;'g'
   496  007EB4  72                 	db	114	;'r'
   497  007EB5  65                 	db	101	;'e'
   498  007EB6  73                 	db	115	;'s'
   499  007EB7  61                 	db	97	;'a'
   500  007EB8  20                 	db	32
   501  007EB9  75                 	db	117	;'u'
   502  007EBA  6E                 	db	110	;'n'
   503  007EBB  61                 	db	97	;'a'
   504  007EBC  20                 	db	32
   505  007EBD  6F                 	db	111	;'o'
   506  007EBE  70                 	db	112	;'p'
   507  007EBF  63                 	db	99	;'c'
   508  007EC0  69                 	db	105	;'i'
   509  007EC1  6F                 	db	111	;'o'
   510  007EC2  6E                 	db	110	;'n'
   511  007EC3  20                 	db	32
   512  007EC4  61                 	db	97	;'a'
   513  007EC5  20                 	db	32
   514  007EC6  52                 	db	82	;'R'
   515  007EC7  65                 	db	101	;'e'
   516  007EC8  61                 	db	97	;'a'
   517  007EC9  6C                 	db	108	;'l'
   518  007ECA  69                 	db	105	;'i'
   519  007ECB  7A                 	db	122	;'z'
   520  007ECC  61                 	db	97	;'a'
   521  007ECD  72                 	db	114	;'r'
   522  007ECE  3A                 	db	58	;':'
   523  007ECF  20                 	db	32
   524  007ED0  0D                 	db	13
   525  007ED1  0A                 	db	10
   526  007ED2  00                 	db	0
   527  007ED3                     STR_6:
   528  007ED3  0D                 	db	13
   529  007ED4  0A                 	db	10
   530  007ED5  20                 	db	32
   531  007ED6  48                 	db	72	;'H'
   532  007ED7  4F                 	db	79	;'O'
   533  007ED8  52                 	db	82	;'R'
   534  007ED9  41                 	db	65	;'A'
   535  007EDA  20                 	db	32
   536  007EDB  45                 	db	69	;'E'
   537  007EDC  53                 	db	83	;'S'
   538  007EDD  54                 	db	84	;'T'
   539  007EDE  41                 	db	65	;'A'
   540  007EDF  42                 	db	66	;'B'
   541  007EE0  4C                 	db	76	;'L'
   542  007EE1  45                 	db	69	;'E'
   543  007EE2  43                 	db	67	;'C'
   544  007EE3  49                 	db	73	;'I'
   545  007EE4  44                 	db	68	;'D'
   546  007EE5  41                 	db	65	;'A'
   547  007EE6  20                 	db	32
   548  007EE7  43                 	db	67	;'C'
   549  007EE8  4F                 	db	79	;'O'
   550  007EE9  52                 	db	82	;'R'
   551  007EEA  52                 	db	82	;'R'
   552  007EEB  45                 	db	69	;'E'
   553  007EEC  43                 	db	67	;'C'
   554  007EED  54                 	db	84	;'T'
   555  007EEE  41                 	db	65	;'A'
   556  007EEF  4D                 	db	77	;'M'
   557  007EF0  45                 	db	69	;'E'
   558  007EF1  4E                 	db	78	;'N'
   559  007EF2  54                 	db	84	;'T'
   560  007EF3  45                 	db	69	;'E'
   561  007EF4  20                 	db	32
   562  007EF5  0D                 	db	13
   563  007EF6  0A                 	db	10
   564  007EF7  00                 	db	0
   565  007EF8                     STR_23:
   566  007EF8  0D                 	db	13
   567  007EF9  0A                 	db	10
   568  007EFA  20                 	db	32
   569  007EFB  32                 	db	50	;'2'
   570  007EFC  2E                 	db	46
   571  007EFD  20                 	db	32
   572  007EFE  41                 	db	65	;'A'
   573  007EFF  73                 	db	115	;'s'
   574  007F00  69                 	db	105	;'i'
   575  007F01  67                 	db	103	;'g'
   576  007F02  6E                 	db	110	;'n'
   577  007F03  61                 	db	97	;'a'
   578  007F04  72                 	db	114	;'r'
   579  007F05  20                 	db	32
   580  007F06  48                 	db	72	;'H'
   581  007F07  6F                 	db	111	;'o'
   582  007F08  72                 	db	114	;'r'
   583  007F09  61                 	db	97	;'a'
   584  007F0A  72                 	db	114	;'r'
   585  007F0B  69                 	db	105	;'i'
   586  007F0C  6F                 	db	111	;'o'
   587  007F0D  73                 	db	115	;'s'
   588  007F0E  20                 	db	32
   589  007F0F  70                 	db	112	;'p'
   590  007F10  61                 	db	97	;'a'
   591  007F11  72                 	db	114	;'r'
   592  007F12  61                 	db	97	;'a'
   593  007F13  20                 	db	32
   594  007F14  72                 	db	114	;'r'
   595  007F15  65                 	db	101	;'e'
   596  007F16  67                 	db	103	;'g'
   597  007F17  61                 	db	97	;'a'
   598  007F18  72                 	db	114	;'r'
   599  007F19  20                 	db	32
   600  007F1A  0D                 	db	13
   601  007F1B  0A                 	db	10
   602  007F1C  00                 	db	0
   603  007F1D                     STR_2:
   604  007F1D  0D                 	db	13
   605  007F1E  0A                 	db	10
   606  007F1F  20                 	db	32
   607  007F20  56                 	db	86	;'V'
   608  007F21  75                 	db	117	;'u'
   609  007F22  65                 	db	101	;'e'
   610  007F23  6C                 	db	108	;'l'
   611  007F24  76                 	db	118	;'v'
   612  007F25  61                 	db	97	;'a'
   613  007F26  20                 	db	32
   614  007F27  61                 	db	97	;'a'
   615  007F28  20                 	db	32
   616  007F29  67                 	db	103	;'g'
   617  007F2A  72                 	db	114	;'r'
   618  007F2B  61                 	db	97	;'a'
   619  007F2C  62                 	db	98	;'b'
   620  007F2D  61                 	db	97	;'a'
   621  007F2E  72                 	db	114	;'r'
   622  007F2F  20                 	db	32
   623  007F30  6C                 	db	108	;'l'
   624  007F31  6F                 	db	111	;'o'
   625  007F32  73                 	db	115	;'s'
   626  007F33  20                 	db	32
   627  007F34  64                 	db	100	;'d'
   628  007F35  61                 	db	97	;'a'
   629  007F36  74                 	db	116	;'t'
   630  007F37  6F                 	db	111	;'o'
   631  007F38  73                 	db	115	;'s'
   632  007F39  20                 	db	32
   633  007F3A  0D                 	db	13
   634  007F3B  0A                 	db	10
   635  007F3C  00                 	db	0
   636  007F3D                     STR_5:
   637  007F3D  0D                 	db	13
   638  007F3E  0A                 	db	10
   639  007F3F  20                 	db	32
   640  007F40  45                 	db	69	;'E'
   641  007F41  6E                 	db	110	;'n'
   642  007F42  76                 	db	118	;'v'
   643  007F43  69                 	db	105	;'i'
   644  007F44  65                 	db	101	;'e'
   645  007F45  20                 	db	32
   646  007F46  6C                 	db	108	;'l'
   647  007F47  6F                 	db	111	;'o'
   648  007F48  73                 	db	115	;'s'
   649  007F49  20                 	db	32
   650  007F4A  4D                 	db	77	;'M'
   651  007F4B  69                 	db	105	;'i'
   652  007F4C  6E                 	db	110	;'n'
   653  007F4D  75                 	db	117	;'u'
   654  007F4E  74                 	db	116	;'t'
   655  007F4F  6F                 	db	111	;'o'
   656  007F50  73                 	db	115	;'s'
   657  007F51  20                 	db	32
   658  007F52  45                 	db	69	;'E'
   659  007F53  6A                 	db	106	;'j'
   660  007F54  3A                 	db	58	;':'
   661  007F55  20                 	db	32
   662  007F56  32                 	db	50	;'2'
   663  007F57  35                 	db	53	;'5'
   664  007F58  20                 	db	32
   665  007F59  0D                 	db	13
   666  007F5A  0A                 	db	10
   667  007F5B  00                 	db	0
   668  007F5C                     STR_1:
   669  007F5C  0D                 	db	13
   670  007F5D  0A                 	db	10
   671  007F5E  20                 	db	32
   672  007F5F  53                 	db	83	;'S'
   673  007F60  6F                 	db	111	;'o'
   674  007F61  6C                 	db	108	;'l'
   675  007F62  6F                 	db	111	;'o'
   676  007F63  20                 	db	32
   677  007F64  73                 	db	115	;'s'
   678  007F65  65                 	db	101	;'e'
   679  007F66  20                 	db	32
   680  007F67  70                 	db	112	;'p'
   681  007F68  65                 	db	101	;'e'
   682  007F69  72                 	db	114	;'r'
   683  007F6A  6D                 	db	109	;'m'
   684  007F6B  69                 	db	105	;'i'
   685  007F6C  74                 	db	116	;'t'
   686  007F6D  65                 	db	101	;'e'
   687  007F6E  6E                 	db	110	;'n'
   688  007F6F  20                 	db	32
   689  007F70  6E                 	db	110	;'n'
   690  007F71  75                 	db	117	;'u'
   691  007F72  6D                 	db	109	;'m'
   692  007F73  65                 	db	101	;'e'
   693  007F74  72                 	db	114	;'r'
   694  007F75  6F                 	db	111	;'o'
   695  007F76  73                 	db	115	;'s'
   696  007F77  20                 	db	32
   697  007F78  0D                 	db	13
   698  007F79  0A                 	db	10
   699  007F7A  00                 	db	0
   700  007F7B                     STR_22:
   701  007F7B  0D                 	db	13
   702  007F7C  0A                 	db	10
   703  007F7D  20                 	db	32
   704  007F7E  31                 	db	49	;'1'
   705  007F7F  2E                 	db	46
   706  007F80  20                 	db	32
   707  007F81  46                 	db	70	;'F'
   708  007F82  69                 	db	105	;'i'
   709  007F83  6A                 	db	106	;'j'
   710  007F84  61                 	db	97	;'a'
   711  007F85  72                 	db	114	;'r'
   712  007F86  20                 	db	32
   713  007F87  48                 	db	72	;'H'
   714  007F88  6F                 	db	111	;'o'
   715  007F89  72                 	db	114	;'r'
   716  007F8A  61                 	db	97	;'a'
   717  007F8B  20                 	db	32
   718  007F8C  41                 	db	65	;'A'
   719  007F8D  63                 	db	99	;'c'
   720  007F8E  74                 	db	116	;'t'
   721  007F8F  75                 	db	117	;'u'
   722  007F90  61                 	db	97	;'a'
   723  007F91  6C                 	db	108	;'l'
   724  007F92  20                 	db	32
   725  007F93  0D                 	db	13
   726  007F94  0A                 	db	10
   727  007F95  00                 	db	0
   728  007F96                     STR_12:
   729  007F96  0D                 	db	13
   730  007F97  0A                 	db	10
   731  007F98  20                 	db	32
   732  007F99  48                 	db	72	;'H'
   733  007F9A  6F                 	db	111	;'o'
   734  007F9B  72                 	db	114	;'r'
   735  007F9C  61                 	db	97	;'a'
   736  007F9D  72                 	db	114	;'r'
   737  007F9E  69                 	db	105	;'i'
   738  007F9F  6F                 	db	111	;'o'
   739  007FA0  20                 	db	32
   740  007FA1  4D                 	db	77	;'M'
   741  007FA2  6F                 	db	111	;'o'
   742  007FA3  64                 	db	100	;'d'
   743  007FA4  69                 	db	105	;'i'
   744  007FA5  66                 	db	102	;'f'
   745  007FA6  69                 	db	105	;'i'
   746  007FA7  63                 	db	99	;'c'
   747  007FA8  61                 	db	97	;'a'
   748  007FA9  64                 	db	100	;'d'
   749  007FAA  6F                 	db	111	;'o'
   750  007FAB  21                 	db	33
   751  007FAC  20                 	db	32
   752  007FAD  0D                 	db	13
   753  007FAE  0A                 	db	10
   754  007FAF  00                 	db	0
   755  007FB0                     STR_7:
   756  007FB0  0D                 	db	13
   757  007FB1  0A                 	db	10
   758  007FB2  20                 	db	32
   759  007FB3  4F                 	db	79	;'O'
   760  007FB4  50                 	db	80	;'P'
   761  007FB5  43                 	db	67	;'C'
   762  007FB6  49                 	db	73	;'I'
   763  007FB7  4F                 	db	79	;'O'
   764  007FB8  4E                 	db	78	;'N'
   765  007FB9  45                 	db	69	;'E'
   766  007FBA  53                 	db	83	;'S'
   767  007FBB  20                 	db	32
   768  007FBC  44                 	db	68	;'D'
   769  007FBD  45                 	db	69	;'E'
   770  007FBE  20                 	db	32
   771  007FBF  52                 	db	82	;'R'
   772  007FC0  45                 	db	69	;'E'
   773  007FC1  47                 	db	71	;'G'
   774  007FC2  41                 	db	65	;'A'
   775  007FC3  44                 	db	68	;'D'
   776  007FC4  4F                 	db	79	;'O'
   777  007FC5  20                 	db	32
   778  007FC6  0D                 	db	13
   779  007FC7  0A                 	db	10
   780  007FC8  00                 	db	0
   781  007FC9                     STR_13:
   782  007FC9  0D                 	db	13
   783  007FCA  0A                 	db	10
   784  007FCB  20                 	db	32
   785  007FCC  54                 	db	84	;'T'
   786  007FCD  49                 	db	73	;'I'
   787  007FCE  45                 	db	69	;'E'
   788  007FCF  4D                 	db	77	;'M'
   789  007FD0  50                 	db	80	;'P'
   790  007FD1  4F                 	db	79	;'O'
   791  007FD2  20                 	db	32
   792  007FD3  44                 	db	68	;'D'
   793  007FD4  45                 	db	69	;'E'
   794  007FD5  20                 	db	32
   795  007FD6  52                 	db	82	;'R'
   796  007FD7  45                 	db	69	;'E'
   797  007FD8  47                 	db	71	;'G'
   798  007FD9  41                 	db	65	;'A'
   799  007FDA  44                 	db	68	;'D'
   800  007FDB  4F                 	db	79	;'O'
   801  007FDC  20                 	db	32
   802  007FDD  0D                 	db	13
   803  007FDE  0A                 	db	10
   804  007FDF  00                 	db	0
   805  007FE0                     STR_3:
   806  007FE0  0D                 	db	13
   807  007FE1  0A                 	db	10
   808  007FE2  20                 	db	32
   809  007FE3  46                 	db	70	;'F'
   810  007FE4  49                 	db	73	;'I'
   811  007FE5  4A                 	db	74	;'J'
   812  007FE6  41                 	db	65	;'A'
   813  007FE7  20                 	db	32
   814  007FE8  48                 	db	72	;'H'
   815  007FE9  4F                 	db	79	;'O'
   816  007FEA  52                 	db	82	;'R'
   817  007FEB  41                 	db	65	;'A'
   818  007FEC  20                 	db	32
   819  007FED  0D                 	db	13
   820  007FEE  0A                 	db	10
   821  007FEF  00                 	db	0
   822  007FF0                     STR_25:
   823  007FF0  0D                 	db	13
   824  007FF1  0A                 	db	10
   825  007FF2  20                 	db	32
   826  007FF3  4F                 	db	79	;'O'
   827  007FF4  70                 	db	112	;'p'
   828  007FF5  63                 	db	99	;'c'
   829  007FF6  69                 	db	105	;'i'
   830  007FF7  6F                 	db	111	;'o'
   831  007FF8  6E                 	db	110	;'n'
   832  007FF9  3A                 	db	58	;':'
   833  007FFA  20                 	db	32
   834  007FFB  20                 	db	32
   835  007FFC  0D                 	db	13
   836  007FFD  00                 	db	0
   837  0000                     
   838                           ; #config settings
   839  007FFE  00                 	db	0	; dummy byte at the end
   840  0000                     
   841                           	psect	cinit
   842  000C9C                     __pcinit:
   843                           	opt callstack 0
   844  000C9C                     start_initialization:
   845                           	opt callstack 0
   846  000C9C                     __initialization:
   847                           	opt callstack 0
   848                           
   849                           ; Initialize objects allocated to COMRAM (2 bytes)
   850                           ; load TBLPTR registers with __pidataCOMRAM
   851  000C9C  0EA8               	movlw	low __pidataCOMRAM
   852  000C9E  6EF6               	movwf	tblptrl,c
   853  000CA0  0E0F               	movlw	high __pidataCOMRAM
   854  000CA2  6EF7               	movwf	tblptrh,c
   855  000CA4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   856  000CA6  6EF8               	movwf	tblptru,c
   857  000CA8  0009               	tblrd		*+	;fetch initializer
   858  000CAA  CFF5 F036          	movff	tablat,__pdataCOMRAM
   859  000CAE  0009               	tblrd		*+	;fetch initializer
   860  000CB0  CFF5 F037          	movff	tablat,__pdataCOMRAM+1
   861                           
   862                           ; Clear objects allocated to BANK0 (72 bytes)
   863  000CB4  EE00  F060         	lfsr	0,__pbssBANK0
   864  000CB8  0E48               	movlw	72
   865  000CBA                     clear_0:
   866  000CBA  6AEE               	clrf	postinc0,c
   867  000CBC  06E8               	decf	wreg,f,c
   868  000CBE  E1FD               	bnz	clear_0
   869                           
   870                           ; Clear objects allocated to COMRAM (27 bytes)
   871  000CC0  EE00  F001         	lfsr	0,__pbssCOMRAM
   872  000CC4  0E1B               	movlw	27
   873  000CC6                     clear_1:
   874  000CC6  6AEE               	clrf	postinc0,c
   875  000CC8  06E8               	decf	wreg,f,c
   876  000CCA  E1FD               	bnz	clear_1
   877  000CCC                     end_of_initialization:
   878                           	opt callstack 0
   879  000CCC                     __end_of__initialization:
   880                           	opt callstack 0
   881  000CCC  9038               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   882  000CCE  9238               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   883  000CD0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   884  000CD2  6EF8               	movwf	tblptru,c
   885  000CD4  0100               	movlb	0
   886  000CD6  EFFF  F004         	goto	_main	;jump to C main() function
   887                           
   888                           	psect	bssCOMRAM
   889  000001                     __pbssCOMRAM:
   890                           	opt callstack 0
   891  000001                     _sensores:
   892                           	opt callstack 0
   893  000001                     	ds	16
   894  000011                     _contInterrupciones:
   895                           	opt callstack 0
   896  000011                     	ds	2
   897  000013                     _regando:
   898                           	opt callstack 0
   899  000013                     	ds	1
   900  000014                     _minutosTranscurridos:
   901                           	opt callstack 0
   902  000014                     	ds	1
   903  000015                     _minutosRegar:
   904                           	opt callstack 0
   905  000015                     	ds	1
   906  000016                     _byteUart:
   907                           	opt callstack 0
   908  000016                     	ds	1
   909  000017                     _overflowTimer:
   910                           	opt callstack 0
   911  000017                     	ds	1
   912  000018                     _datoRecibido:
   913                           	opt callstack 0
   914  000018                     	ds	1
   915  000019                     _segundos:
   916                           	opt callstack 0
   917  000019                     	ds	1
   918  00001A                     _minutos:
   919                           	opt callstack 0
   920  00001A                     	ds	1
   921  00001B                     _hora:
   922                           	opt callstack 0
   923  00001B                     	ds	1
   924                           
   925                           	psect	dataCOMRAM
   926  000036                     __pdataCOMRAM:
   927                           	opt callstack 0
   928  000036                     _VALOR_TIMER0:
   929                           	opt callstack 0
   930  000036                     	ds	2
   931                           
   932                           	psect	bssBANK0
   933  000060                     __pbssBANK0:
   934                           	opt callstack 0
   935  000060                     _horarios:
   936                           	opt callstack 0
   937  000060                     	ds	72
   938                           
   939                           	psect	cstackCOMRAM
   940  00001C                     __pcstackCOMRAM:
   941                           	opt callstack 0
   942  00001C                     ??_i2c_espera:
   943  00001C                     ??_convertirDato:
   944  00001C                     ??_dameHumedadSuelo:
   945  00001C                     ?_estaSeco:
   946                           	opt callstack 0
   947  00001C                     ?_horaRegar:
   948                           	opt callstack 0
   949  00001C                     ?___wmul:
   950                           	opt callstack 0
   951  00001C                     ?___aldiv:
   952                           	opt callstack 0
   953  00001C                     UART_write@dato:
   954                           	opt callstack 0
   955  00001C                     constructorSensor@s:
   956                           	opt callstack 0
   957  00001C                     estaSeco@s:
   958                           	opt callstack 0
   959  00001C                     ___wmul@multiplier:
   960                           	opt callstack 0
   961  00001C                     ___aldiv@dividend:
   962                           	opt callstack 0
   963                           
   964                           ; 4 bytes @ 0x0
   965  00001C                     	ds	1
   966  00001D                     i2c_envia_dato@dato:
   967                           	opt callstack 0
   968  00001D                     i2c_recibe_dato@datoleido:
   969                           	opt callstack 0
   970  00001D                     convertirDato@dato:
   971                           	opt callstack 0
   972  00001D                     dameHumedadSuelo@canalLeer:
   973                           	opt callstack 0
   974  00001D                     UART_printf@cadena:
   975                           	opt callstack 0
   976                           
   977                           ; 2 bytes @ 0x1
   978  00001D                     	ds	1
   979  00001E                     ??_encenderBombas:
   980  00001E                     ??_lecturaAnalogaSensores:
   981  00001E                     escribe_rtc@dato:
   982                           	opt callstack 0
   983  00001E                     leer_rtc@direccion:
   984                           	opt callstack 0
   985  00001E                     convertirDato@datoR:
   986                           	opt callstack 0
   987  00001E                     constructorSensor@humedad:
   988                           	opt callstack 0
   989  00001E                     leer_eeprom@direccion:
   990                           	opt callstack 0
   991  00001E                     ___wmul@multiplicand:
   992                           	opt callstack 0
   993                           
   994                           ; 2 bytes @ 0x2
   995  00001E                     	ds	1
   996  00001F                     escribe_rtc@direccion:
   997                           	opt callstack 0
   998  00001F                     leer_rtc@dato:
   999                           	opt callstack 0
  1000  00001F                     constructorSensor@pin:
  1001                           	opt callstack 0
  1002  00001F                     lecturaAnalogaSensores@i:
  1003                           	opt callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x3
  1006  00001F                     	ds	1
  1007  000020                     ??_setRtc:
  1008  000020                     ??_leer_eeprom:
  1009  000020                     encenderBombas@flagSeco:
  1010                           	opt callstack 0
  1011  000020                     restablecerDatosSensor@i:
  1012                           	opt callstack 0
  1013  000020                     ___wmul@product:
  1014                           	opt callstack 0
  1015  000020                     ___aldiv@divisor:
  1016                           	opt callstack 0
  1017                           
  1018                           ; 4 bytes @ 0x4
  1019  000020                     	ds	1
  1020  000021                     setRtc@direccion:
  1021                           	opt callstack 0
  1022  000021                     leer_eeprom@dato:
  1023                           	opt callstack 0
  1024  000021                     encenderBombas@i:
  1025                           	opt callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x5
  1028  000021                     	ds	1
  1029  000022                     setRtc@dato:
  1030                           	opt callstack 0
  1031  000022                     inicializarObjetos@i:
  1032                           	opt callstack 0
  1033  000022                     escribe_eeprom@direccion:
  1034                           	opt callstack 0
  1035  000022                     leeHorariosMemoria@contMemoria:
  1036                           	opt callstack 0
  1037                           
  1038                           ; 2 bytes @ 0x6
  1039  000022                     	ds	1
  1040  000023                     setRtc@datoCapturado:
  1041                           	opt callstack 0
  1042                           
  1043                           ; 1 bytes @ 0x7
  1044  000023                     	ds	1
  1045  000024                     escribe_eeprom@dato:
  1046                           	opt callstack 0
  1047  000024                     ___aldiv@counter:
  1048                           	opt callstack 0
  1049  000024                     setRtc@i:
  1050                           	opt callstack 0
  1051  000024                     leeHorariosMemoria@i:
  1052                           	opt callstack 0
  1053                           
  1054                           ; 2 bytes @ 0x8
  1055  000024                     	ds	1
  1056  000025                     ??_escribe_eeprom:
  1057  000025                     ___aldiv@sign:
  1058                           	opt callstack 0
  1059                           
  1060                           ; 1 bytes @ 0x9
  1061  000025                     	ds	1
  1062  000026                     setRtc@Rx:
  1063                           	opt callstack 0
  1064  000026                     escribeHorariosMemoria@contMemoria:
  1065                           	opt callstack 0
  1066  000026                     ___aldiv@quotient:
  1067                           	opt callstack 0
  1068                           
  1069                           ; 4 bytes @ 0xA
  1070  000026                     	ds	1
  1071  000027                     
  1072                           ; 1 bytes @ 0xB
  1073  000027                     	ds	1
  1074  000028                     escribeHorariosMemoria@i:
  1075                           	opt callstack 0
  1076                           
  1077                           ; 2 bytes @ 0xC
  1078  000028                     	ds	2
  1079  00002A                     asignarHorarios@hora:
  1080                           	opt callstack 0
  1081  00002A                     setTiempoRegar@tiempoRegar:
  1082                           	opt callstack 0
  1083  00002A                     UART_init@BAUD:
  1084                           	opt callstack 0
  1085                           
  1086                           ; 4 bytes @ 0xE
  1087  00002A                     	ds	1
  1088  00002B                     asignarHorarios@datoCapturado:
  1089                           	opt callstack 0
  1090  00002B                     setTiempoRegar@hora:
  1091                           	opt callstack 0
  1092                           
  1093                           ; 1 bytes @ 0xF
  1094  00002B                     	ds	1
  1095  00002C                     asignarHorarios@i:
  1096                           	opt callstack 0
  1097  00002C                     setTiempoRegar@i:
  1098                           	opt callstack 0
  1099                           
  1100                           ; 2 bytes @ 0x10
  1101  00002C                     	ds	2
  1102  00002E                     asignarHorarios@Rx:
  1103                           	opt callstack 0
  1104  00002E                     setTiempoRegar@i_704:
  1105                           	opt callstack 0
  1106                           
  1107                           ; 2 bytes @ 0x12
  1108  00002E                     	ds	2
  1109  000030                     setTiempoRegar@datoCapturado:
  1110                           	opt callstack 0
  1111                           
  1112                           ; 1 bytes @ 0x14
  1113  000030                     	ds	1
  1114  000031                     setTiempoRegar@Rx:
  1115                           	opt callstack 0
  1116                           
  1117                           ; 1 bytes @ 0x15
  1118  000031                     	ds	1
  1119  000032                     ??_sistemaPrincipal:
  1120  000032                     _UART_init$1471:
  1121                           	opt callstack 0
  1122                           
  1123                           ; 4 bytes @ 0x16
  1124  000032                     	ds	2
  1125  000034                     sistemaPrincipal@opcion:
  1126                           	opt callstack 0
  1127                           
  1128                           ; 1 bytes @ 0x18
  1129  000034                     	ds	2
  1130  000036                     
  1131                           ; 1 bytes @ 0x1A
  1132 ;;
  1133 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1134 ;;
  1135 ;; *************** function _main *****************
  1136 ;; Defined at:
  1137 ;;		line 553 in file "main.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;		None
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;		None
  1142 ;; Return value:  Size  Location     Type
  1143 ;;                  1    wreg      void 
  1144 ;; Registers used:
  1145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1151 ;;      Params:         0       0       0       0       0       0       0       0       0
  1152 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1153 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1154 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1155 ;;Total ram usage:        0 bytes
  1156 ;; Hardware stack levels required when called:    7
  1157 ;; This function calls:
  1158 ;;		_UART_init
  1159 ;;		_configurarAdc
  1160 ;;		_i2c_iniciar
  1161 ;;		_inicializarObjetos
  1162 ;;		_leeHorariosMemoria
  1163 ;;		_mostrarMenu
  1164 ;;		_restablecerDatosSensor
  1165 ;;		_sistemaPrincipal
  1166 ;;		_sistemaRegado
  1167 ;; This function is called by:
  1168 ;;		Startup code after reset
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172                           	psect	text0
  1173  0009FE                     __ptext0:
  1174                           	opt callstack 0
  1175  0009FE                     _main:
  1176                           	opt callstack 24
  1177  0009FE                     
  1178                           ;main.c: 555:     INTCONbits.GIE = 1;
  1179  0009FE  8EF2               	bsf	242,7,c	;volatile
  1180                           
  1181                           ;main.c: 556:     INTCONbits.PEIE = 1;
  1182  000A00  8CF2               	bsf	242,6,c	;volatile
  1183                           
  1184                           ;main.c: 557:     INTCONbits.TMR0IE = 0;
  1185  000A02  9AF2               	bcf	242,5,c	;volatile
  1186                           
  1187                           ;main.c: 558:     INTCONbits.TMR0IF = 0;
  1188  000A04  94F2               	bcf	242,2,c	;volatile
  1189                           
  1190                           ;main.c: 559:     PIE1bits.RCIE = 1;
  1191  000A06  8A9D               	bsf	157,5,c	;volatile
  1192  000A08                     
  1193                           ;main.c: 561:     T0CON = 0b00000111;
  1194  000A08  0E07               	movlw	7
  1195  000A0A  6ED5               	movwf	213,c	;volatile
  1196  000A0C                     
  1197                           ;main.c: 563:     INTCONbits.TMR0IE = 1;
  1198  000A0C  8AF2               	bsf	242,5,c	;volatile
  1199  000A0E                     
  1200                           ;main.c: 568:     restablecerDatosSensor();
  1201  000A0E  ECDD  F005         	call	_restablecerDatosSensor	;wreg free
  1202  000A12                     
  1203                           ;main.c: 570:     UART_init(9600);
  1204  000A12  0E80               	movlw	128
  1205  000A14  6E2A               	movwf	UART_init@BAUD^0,c
  1206  000A16  0E25               	movlw	37
  1207  000A18  6E2B               	movwf	(UART_init@BAUD+1)^0,c
  1208  000A1A  0E00               	movlw	0
  1209  000A1C  6E2C               	movwf	(UART_init@BAUD+2)^0,c
  1210  000A1E  0E00               	movlw	0
  1211  000A20  6E2D               	movwf	(UART_init@BAUD+3)^0,c
  1212  000A22  EC46  F005         	call	_UART_init	;wreg free
  1213  000A26                     
  1214                           ;main.c: 571:     i2c_iniciar();
  1215  000A26  ECA9  F007         	call	_i2c_iniciar	;wreg free
  1216  000A2A                     
  1217                           ;main.c: 572:     configurarAdc();
  1218  000A2A  EC91  F007         	call	_configurarAdc	;wreg free
  1219  000A2E                     
  1220                           ;main.c: 573:     inicializarObjetos();
  1221  000A2E  ECB4  F004         	call	_inicializarObjetos	;wreg free
  1222  000A32                     
  1223                           ;main.c: 575:     leeHorariosMemoria();
  1224  000A32  EC02  F004         	call	_leeHorariosMemoria	;wreg free
  1225  000A36                     
  1226                           ;main.c: 578:     TRISD = 0;
  1227  000A36  0E00               	movlw	0
  1228  000A38  6E95               	movwf	149,c	;volatile
  1229  000A3A                     
  1230                           ;main.c: 579:     LATD = 0;
  1231  000A3A  0E00               	movlw	0
  1232  000A3C  6E8C               	movwf	140,c	;volatile
  1233  000A3E                     
  1234                           ;main.c: 581:     TMR0 = VALOR_TIMER0;
  1235  000A3E  C036  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
  1236  000A42  C037  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
  1237  000A46                     
  1238                           ;main.c: 583:     INTCONbits.TMR0IF = 1;
  1239  000A46  84F2               	bsf	242,2,c	;volatile
  1240  000A48                     
  1241                           ;main.c: 585:     T0CONbits.TMR0ON = 1;
  1242  000A48  8ED5               	bsf	213,7,c	;volatile
  1243  000A4A                     
  1244                           ;main.c: 587:     mostrarMenu();
  1245  000A4A  EC05  F006         	call	_mostrarMenu	;wreg free
  1246  000A4E                     l2318:
  1247                           
  1248                           ;main.c: 591:         if (datoRecibido) {
  1249  000A4E  5018               	movf	_datoRecibido^0,w,c
  1250  000A50  B4D8               	btfsc	status,2,c
  1251  000A52  EF2D  F005         	goto	u1251
  1252  000A56  EF2F  F005         	goto	u1250
  1253  000A5A                     u1251:
  1254  000A5A  EF36  F005         	goto	l2326
  1255  000A5E                     u1250:
  1256  000A5E                     
  1257                           ;main.c: 593:             datoRecibido = 0;
  1258  000A5E  0E00               	movlw	0
  1259  000A60  6E18               	movwf	_datoRecibido^0,c
  1260  000A62                     
  1261                           ;main.c: 595:             byteUart -= 48;
  1262  000A62  0E30               	movlw	48
  1263  000A64  5E16               	subwf	_byteUart^0,f,c
  1264  000A66                     
  1265                           ;main.c: 597:             sistemaPrincipal(byteUart);
  1266  000A66  5016               	movf	_byteUart^0,w,c
  1267  000A68  EC7E  F005         	call	_sistemaPrincipal
  1268  000A6C                     l2326:
  1269                           
  1270                           ;main.c: 601:         if (overflowTimer) {
  1271  000A6C  5017               	movf	_overflowTimer^0,w,c
  1272  000A6E  B4D8               	btfsc	status,2,c
  1273  000A70  EF3C  F005         	goto	u1261
  1274  000A74  EF3E  F005         	goto	u1260
  1275  000A78                     u1261:
  1276  000A78  EF27  F005         	goto	l2318
  1277  000A7C                     u1260:
  1278  000A7C                     
  1279                           ;main.c: 603:             overflowTimer = 0;
  1280  000A7C  0E00               	movlw	0
  1281  000A7E  6E17               	movwf	_overflowTimer^0,c
  1282  000A80                     
  1283                           ;main.c: 604:             sistemaRegado();
  1284  000A80  EC66  F004         	call	_sistemaRegado	;wreg free
  1285  000A84  EF27  F005         	goto	l2318
  1286  000A88  EF07  F000         	goto	start
  1287  000A8C                     __end_of_main:
  1288                           	opt callstack 0
  1289                           
  1290 ;; *************** function _sistemaRegado *****************
  1291 ;; Defined at:
  1292 ;;		line 515 in file "main.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;		None
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;		None
  1297 ;; Return value:  Size  Location     Type
  1298 ;;                  1    wreg      void 
  1299 ;; Registers used:
  1300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1306 ;;      Params:         0       0       0       0       0       0       0       0       0
  1307 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1308 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1309 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1310 ;;Total ram usage:        0 bytes
  1311 ;; Hardware stack levels used:    1
  1312 ;; Hardware stack levels required when called:    5
  1313 ;; This function calls:
  1314 ;;		_dameHoraActual
  1315 ;;		_encenderBombas
  1316 ;;		_horaRegar
  1317 ;;		_lecturaAnalogaSensores
  1318 ;; This function is called by:
  1319 ;;		_main
  1320 ;; This function uses a non-reentrant model
  1321 ;;
  1322                           
  1323                           	psect	text1
  1324  0008CC                     __ptext1:
  1325                           	opt callstack 0
  1326  0008CC                     _sistemaRegado:
  1327                           	opt callstack 25
  1328  0008CC                     
  1329                           ;main.c: 519:     if (regando) {
  1330  0008CC  5013               	movf	_regando^0,w,c
  1331  0008CE  B4D8               	btfsc	status,2,c
  1332  0008D0  EF6C  F004         	goto	u1181
  1333  0008D4  EF6E  F004         	goto	u1180
  1334  0008D8                     u1181:
  1335  0008D8  EF90  F004         	goto	l2244
  1336  0008DC                     u1180:
  1337  0008DC                     
  1338                           ;main.c: 520:         contInterrupciones++;
  1339  0008DC  4A11               	infsnz	_contInterrupciones^0,f,c
  1340  0008DE  2A12               	incf	(_contInterrupciones+1)^0,f,c
  1341  0008E0                     
  1342                           ;main.c: 522:         if (contInterrupciones == 6) {
  1343  0008E0  0E06               	movlw	6
  1344  0008E2  1811               	xorwf	_contInterrupciones^0,w,c
  1345  0008E4  1012               	iorwf	(_contInterrupciones+1)^0,w,c
  1346  0008E6  A4D8               	btfss	status,2,c
  1347  0008E8  EF78  F004         	goto	u1191
  1348  0008EC  EF7A  F004         	goto	u1190
  1349  0008F0                     u1191:
  1350  0008F0  EFB3  F004         	goto	l300
  1351  0008F4                     u1190:
  1352  0008F4                     
  1353                           ;main.c: 523:             contInterrupciones = 0;
  1354  0008F4  0E00               	movlw	0
  1355  0008F6  6E12               	movwf	(_contInterrupciones+1)^0,c
  1356  0008F8  0E00               	movlw	0
  1357  0008FA  6E11               	movwf	_contInterrupciones^0,c
  1358  0008FC                     
  1359                           ;main.c: 524:             minutosTranscurridos++;
  1360  0008FC  2A14               	incf	_minutosTranscurridos^0,f,c
  1361  0008FE                     
  1362                           ;main.c: 527:             if (minutosTranscurridos >= minutosRegar) {
  1363  0008FE  5015               	movf	_minutosRegar^0,w,c
  1364  000900  5C14               	subwf	_minutosTranscurridos^0,w,c
  1365  000902  A0D8               	btfss	status,0,c
  1366  000904  EF86  F004         	goto	u1201
  1367  000908  EF88  F004         	goto	u1200
  1368  00090C                     u1201:
  1369  00090C  EFB3  F004         	goto	l300
  1370  000910                     u1200:
  1371  000910                     
  1372                           ;main.c: 529:                 LATD = 0;
  1373  000910  0E00               	movlw	0
  1374  000912  6E8C               	movwf	140,c	;volatile
  1375                           
  1376                           ;main.c: 530:                 minutosTranscurridos = 0;
  1377  000914  0E00               	movlw	0
  1378  000916  6E14               	movwf	_minutosTranscurridos^0,c
  1379                           
  1380                           ;main.c: 531:                 regando = 0;
  1381  000918  0E00               	movlw	0
  1382  00091A  6E13               	movwf	_regando^0,c
  1383  00091C  EFB3  F004         	goto	l300
  1384  000920                     l2244:
  1385                           
  1386                           ;main.c: 537:         dameHoraActual();
  1387  000920  EC1F  F007         	call	_dameHoraActual	;wreg free
  1388  000924                     
  1389                           ;main.c: 539:         if (horaRegar() && !minutos) {
  1390  000924  ECF5  F006         	call	_horaRegar	;wreg free
  1391  000928  501C               	movf	?_horaRegar^0,w,c
  1392  00092A  101D               	iorwf	(?_horaRegar+1)^0,w,c
  1393  00092C  B4D8               	btfsc	status,2,c
  1394  00092E  EF9B  F004         	goto	u1211
  1395  000932  EF9D  F004         	goto	u1210
  1396  000936                     u1211:
  1397  000936  EFB3  F004         	goto	l300
  1398  00093A                     u1210:
  1399  00093A  501A               	movf	_minutos^0,w,c
  1400  00093C  A4D8               	btfss	status,2,c
  1401  00093E  EFA3  F004         	goto	u1221
  1402  000942  EFA5  F004         	goto	u1220
  1403  000946                     u1221:
  1404  000946  EFB3  F004         	goto	l300
  1405  00094A                     u1220:
  1406  00094A                     
  1407                           ;main.c: 544:             lecturaAnalogaSensores();
  1408  00094A  ECB3  F005         	call	_lecturaAnalogaSensores	;wreg free
  1409  00094E                     
  1410                           ;main.c: 546:             minutosRegar = horarios[hora].tiempoRegar;
  1411  00094E  501B               	movf	_hora^0,w,c
  1412  000950  0D03               	mullw	3
  1413  000952  0E62               	movlw	low (_horarios+2)
  1414  000954  24F3               	addwf	243,w,c
  1415  000956  6ED9               	movwf	fsr2l,c
  1416  000958  0E00               	movlw	high (_horarios+2)
  1417  00095A  20F4               	addwfc	prodh,w,c
  1418  00095C  6EDA               	movwf	fsr2h,c
  1419  00095E  50DF               	movf	indf2,w,c
  1420  000960  6E15               	movwf	_minutosRegar^0,c
  1421  000962                     
  1422                           ;main.c: 547:             encenderBombas();
  1423  000962  EC09  F000         	call	_encenderBombas	;wreg free
  1424  000966                     l300:
  1425  000966  0012               	return		;funcret
  1426  000968                     __end_of_sistemaRegado:
  1427                           	opt callstack 0
  1428                           
  1429 ;; *************** function _lecturaAnalogaSensores *****************
  1430 ;; Defined at:
  1431 ;;		line 467 in file "main.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;		None
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;  i               2    3[COMRAM] int 
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  1    wreg      void 
  1438 ;; Registers used:
  1439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1440 ;; Tracked objects:
  1441 ;;		On entry : 0/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1445 ;;      Params:         0       0       0       0       0       0       0       0       0
  1446 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1447 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1448 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1449 ;;Total ram usage:        3 bytes
  1450 ;; Hardware stack levels used:    1
  1451 ;; Hardware stack levels required when called:    2
  1452 ;; This function calls:
  1453 ;;		_dameHumedadSuelo
  1454 ;; This function is called by:
  1455 ;;		_sistemaRegado
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459                           	psect	text2
  1460  000B66                     __ptext2:
  1461                           	opt callstack 0
  1462  000B66                     _lecturaAnalogaSensores:
  1463                           	opt callstack 27
  1464  000B66                     
  1465                           ;main.c: 469:     for (int i = 0; i < 3; i++) {
  1466  000B66  0E00               	movlw	0
  1467  000B68  6E20               	movwf	(lecturaAnalogaSensores@i+1)^0,c
  1468  000B6A  0E00               	movlw	0
  1469  000B6C  6E1F               	movwf	lecturaAnalogaSensores@i^0,c
  1470  000B6E                     l2086:
  1471                           
  1472                           ;main.c: 470:         sensores[i].humedadMedida = dameHumedadSuelo(i);
  1473  000B6E  90D8               	bcf	status,0,c
  1474  000B70  341F               	rlcf	lecturaAnalogaSensores@i^0,w,c
  1475  000B72  6ED9               	movwf	fsr2l,c
  1476  000B74  3420               	rlcf	(lecturaAnalogaSensores@i+1)^0,w,c
  1477  000B76  6EDA               	movwf	fsr2h,c
  1478  000B78  0E01               	movlw	low _sensores
  1479  000B7A  26D9               	addwf	fsr2l,f,c
  1480  000B7C  0E00               	movlw	high _sensores
  1481  000B7E  22DA               	addwfc	fsr2h,f,c
  1482  000B80  501F               	movf	lecturaAnalogaSensores@i^0,w,c
  1483  000B82  ECA7  F006         	call	_dameHumedadSuelo
  1484  000B86  6EDF               	movwf	indf2,c
  1485  000B88                     
  1486                           ;main.c: 471:         _delay((unsigned long)((5)*(4000000/4000.0)));
  1487  000B88  0E07               	movlw	7
  1488  000B8A  6E1E               	movwf	??_lecturaAnalogaSensores^0,c
  1489  000B8C  0E7D               	movlw	125
  1490  000B8E                     u1277:
  1491  000B8E  2EE8               	decfsz	wreg,f,c
  1492  000B90  D7FE               	bra	u1277
  1493  000B92  2E1E               	decfsz	??_lecturaAnalogaSensores^0,f,c
  1494  000B94  D7FC               	bra	u1277
  1495  000B96  F000               	nop	
  1496  000B98                     
  1497                           ;main.c: 472:     }
  1498  000B98  4A1F               	infsnz	lecturaAnalogaSensores@i^0,f,c
  1499  000B9A  2A20               	incf	(lecturaAnalogaSensores@i+1)^0,f,c
  1500  000B9C  BE20               	btfsc	(lecturaAnalogaSensores@i+1)^0,7,c
  1501  000B9E  EFDA  F005         	goto	u1081
  1502  000BA2  5020               	movf	(lecturaAnalogaSensores@i+1)^0,w,c
  1503  000BA4  E109               	bnz	u1080
  1504  000BA6  0E03               	movlw	3
  1505  000BA8  5C1F               	subwf	lecturaAnalogaSensores@i^0,w,c
  1506  000BAA  A0D8               	btfss	status,0,c
  1507  000BAC  EFDA  F005         	goto	u1081
  1508  000BB0  EFDC  F005         	goto	u1080
  1509  000BB4                     u1081:
  1510  000BB4  EFB7  F005         	goto	l2086
  1511  000BB8                     u1080:
  1512  000BB8  0012               	return		;funcret
  1513  000BBA                     __end_of_lecturaAnalogaSensores:
  1514                           	opt callstack 0
  1515                           
  1516 ;; *************** function _dameHumedadSuelo *****************
  1517 ;; Defined at:
  1518 ;;		line 426 in file "main.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;  canalLeer       1    wreg     unsigned char 
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;  canalLeer       1    1[COMRAM] unsigned char 
  1523 ;; Return value:  Size  Location     Type
  1524 ;;                  1    wreg      unsigned char 
  1525 ;; Registers used:
  1526 ;;		wreg, status,2, status,0
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1532 ;;      Params:         0       0       0       0       0       0       0       0       0
  1533 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1534 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1535 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1536 ;;Total ram usage:        2 bytes
  1537 ;; Hardware stack levels used:    1
  1538 ;; Hardware stack levels required when called:    1
  1539 ;; This function calls:
  1540 ;;		Nothing
  1541 ;; This function is called by:
  1542 ;;		_lecturaAnalogaSensores
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           	psect	text3
  1547  000D4E                     __ptext3:
  1548                           	opt callstack 0
  1549  000D4E                     _dameHumedadSuelo:
  1550                           	opt callstack 27
  1551                           
  1552                           ;incstack = 0
  1553                           ;dameHumedadSuelo@canalLeer stored from wreg
  1554  000D4E  6E1D               	movwf	dameHumedadSuelo@canalLeer^0,c
  1555  000D50                     
  1556                           ;main.c: 428:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  1557  000D50  0E06               	movlw	6
  1558  000D52                     u1287:
  1559  000D52  2EE8               	decfsz	wreg,f,c
  1560  000D54  D7FE               	bra	u1287
  1561  000D56  D000               	nop2	
  1562  000D58                     
  1563                           ;main.c: 430:     ADCON0bits.ADON = 1;
  1564  000D58  80C2               	bsf	194,0,c	;volatile
  1565  000D5A                     
  1566                           ;main.c: 431:     ADCON0bits.CHS = canalLeer;
  1567  000D5A  C01D  F01C         	movff	dameHumedadSuelo@canalLeer,??_dameHumedadSuelo
  1568  000D5E  461C               	rlncf	??_dameHumedadSuelo^0,f,c
  1569  000D60  461C               	rlncf	??_dameHumedadSuelo^0,f,c
  1570  000D62  50C2               	movf	194,w,c	;volatile
  1571  000D64  181C               	xorwf	??_dameHumedadSuelo^0,w,c
  1572  000D66  0BC3               	andlw	-61
  1573  000D68  181C               	xorwf	??_dameHumedadSuelo^0,w,c
  1574  000D6A  6EC2               	movwf	194,c	;volatile
  1575  000D6C                     
  1576                           ;main.c: 432:     ADCON0bits.GO = 1;
  1577  000D6C  82C2               	bsf	194,1,c	;volatile
  1578  000D6E                     
  1579                           ;main.c: 433:     ADCON0bits.GO_DONE = 1;
  1580  000D6E  82C2               	bsf	194,1,c	;volatile
  1581  000D70                     l260:
  1582  000D70  B2C2               	btfsc	194,1,c	;volatile
  1583  000D72  EFBD  F006         	goto	u781
  1584  000D76  EFBF  F006         	goto	u780
  1585  000D7A                     u781:
  1586  000D7A  EFB8  F006         	goto	l260
  1587  000D7E                     u780:
  1588  000D7E                     
  1589                           ;main.c: 437:     ADCON0bits.ADON = 0;
  1590  000D7E  90C2               	bcf	194,0,c	;volatile
  1591  000D80                     
  1592                           ;main.c: 439:     return (ADRESH << 8) +ADRESL;
  1593  000D80  50C3               	movf	195,w,c	;volatile
  1594  000D82  0012               	return		;funcret
  1595  000D84                     __end_of_dameHumedadSuelo:
  1596                           	opt callstack 0
  1597                           
  1598 ;; *************** function _horaRegar *****************
  1599 ;; Defined at:
  1600 ;;		line 107 in file "main.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;		None
  1603 ;; Auto vars:     Size  Location     Type
  1604 ;;		None
  1605 ;; Return value:  Size  Location     Type
  1606 ;;                  2    0[COMRAM] int 
  1607 ;; Registers used:
  1608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1614 ;;      Params:         2       0       0       0       0       0       0       0       0
  1615 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1616 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1617 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1618 ;;Total ram usage:        3 bytes
  1619 ;; Hardware stack levels used:    1
  1620 ;; Hardware stack levels required when called:    1
  1621 ;; This function calls:
  1622 ;;		Nothing
  1623 ;; This function is called by:
  1624 ;;		_sistemaRegado
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           	psect	text4
  1629  000DEA                     __ptext4:
  1630                           	opt callstack 0
  1631  000DEA                     _horaRegar:
  1632                           	opt callstack 28
  1633  000DEA                     
  1634                           ;main.c: 109:     return horarios[hora].regar == 1;
  1635  000DEA  501B               	movf	_hora^0,w,c
  1636  000DEC  0D03               	mullw	3
  1637  000DEE  0E61               	movlw	low (_horarios+1)
  1638  000DF0  24F3               	addwf	243,w,c
  1639  000DF2  6ED9               	movwf	fsr2l,c
  1640  000DF4  0E00               	movlw	high (_horarios+1)
  1641  000DF6  20F4               	addwfc	prodh,w,c
  1642  000DF8  6EDA               	movwf	fsr2h,c
  1643  000DFA  04DE               	decf	postinc2,w,c
  1644  000DFC  B4D8               	btfsc	status,2,c
  1645  000DFE  EF03  F007         	goto	u791
  1646  000E02  EF06  F007         	goto	u790
  1647  000E06                     u791:
  1648  000E06  0E01               	movlw	1
  1649  000E08  EF07  F007         	goto	u800
  1650  000E0C                     u790:
  1651  000E0C  0E00               	movlw	0
  1652  000E0E                     u800:
  1653  000E0E  6E1C               	movwf	?_horaRegar^0,c
  1654  000E10  6A1D               	clrf	(?_horaRegar+1)^0,c
  1655  000E12  0012               	return		;funcret
  1656  000E14                     __end_of_horaRegar:
  1657                           	opt callstack 0
  1658                           
  1659 ;; *************** function _encenderBombas *****************
  1660 ;; Defined at:
  1661 ;;		line 218 in file "main.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;		None
  1664 ;; Auto vars:     Size  Location     Type
  1665 ;;  i               2    5[COMRAM] int 
  1666 ;;  flagSeco        1    4[COMRAM] unsigned char 
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  1    wreg      void 
  1669 ;; Registers used:
  1670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1676 ;;      Params:         0       0       0       0       0       0       0       0       0
  1677 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1678 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1679 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1680 ;;Total ram usage:        5 bytes
  1681 ;; Hardware stack levels used:    1
  1682 ;; Hardware stack levels required when called:    2
  1683 ;; This function calls:
  1684 ;;		_estaSeco
  1685 ;; This function is called by:
  1686 ;;		_sistemaRegado
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690                           	psect	text5
  1691  000012                     __ptext5:
  1692                           	opt callstack 0
  1693  000012                     _encenderBombas:
  1694                           	opt callstack 27
  1695  000012                     
  1696                           ;main.c: 220:     char flagSeco = 0;
  1697  000012  0E00               	movlw	0
  1698  000014  6E20               	movwf	encenderBombas@flagSeco^0,c
  1699                           
  1700                           ;main.c: 222:     for (int i = 0; i < 3; i++) {
  1701  000016  0E00               	movlw	0
  1702  000018  6E22               	movwf	(encenderBombas@i+1)^0,c
  1703  00001A  0E00               	movlw	0
  1704  00001C  6E21               	movwf	encenderBombas@i^0,c
  1705  00001E  EFEB  F000         	goto	l1900
  1706  000022                     l1850:
  1707                           
  1708                           ;main.c: 227:                 if (estaSeco(sensores[i])) {
  1709  000022  90D8               	bcf	status,0,c
  1710  000024  3421               	rlcf	encenderBombas@i^0,w,c
  1711  000026  6ED9               	movwf	fsr2l,c
  1712  000028  3422               	rlcf	(encenderBombas@i+1)^0,w,c
  1713  00002A  6EDA               	movwf	fsr2h,c
  1714  00002C  0E01               	movlw	low _sensores
  1715  00002E  26D9               	addwf	fsr2l,f,c
  1716  000030  0E00               	movlw	high _sensores
  1717  000032  22DA               	addwfc	fsr2h,f,c
  1718  000034  CFDE F01C          	movff	postinc2,estaSeco@s
  1719  000038  CFDD F01D          	movff	postdec2,estaSeco@s+1
  1720  00003C  EC77  F007         	call	_estaSeco	;wreg free
  1721  000040  501C               	movf	?_estaSeco^0,w,c
  1722  000042  101D               	iorwf	(?_estaSeco+1)^0,w,c
  1723  000044  B4D8               	btfsc	status,2,c
  1724  000046  EF27  F000         	goto	u811
  1725  00004A  EF29  F000         	goto	u810
  1726  00004E                     u811:
  1727  00004E  EF19  F001         	goto	l1902
  1728  000052                     u810:
  1729  000052                     
  1730                           ;main.c: 228:                     LATDbits.LATD0 = 1;
  1731  000052  808C               	bsf	140,0,c	;volatile
  1732  000054                     l1854:
  1733                           
  1734                           ;main.c: 229:                     flagSeco = 1;
  1735  000054  0E01               	movlw	1
  1736  000056  6E20               	movwf	encenderBombas@flagSeco^0,c
  1737  000058  EF19  F001         	goto	l1902
  1738  00005C                     l1856:
  1739                           
  1740                           ;main.c: 234:                 if (estaSeco(sensores[i])) {
  1741  00005C  90D8               	bcf	status,0,c
  1742  00005E  3421               	rlcf	encenderBombas@i^0,w,c
  1743  000060  6ED9               	movwf	fsr2l,c
  1744  000062  3422               	rlcf	(encenderBombas@i+1)^0,w,c
  1745  000064  6EDA               	movwf	fsr2h,c
  1746  000066  0E01               	movlw	low _sensores
  1747  000068  26D9               	addwf	fsr2l,f,c
  1748  00006A  0E00               	movlw	high _sensores
  1749  00006C  22DA               	addwfc	fsr2h,f,c
  1750  00006E  CFDE F01C          	movff	postinc2,estaSeco@s
  1751  000072  CFDD F01D          	movff	postdec2,estaSeco@s+1
  1752  000076  EC77  F007         	call	_estaSeco	;wreg free
  1753  00007A  501C               	movf	?_estaSeco^0,w,c
  1754  00007C  101D               	iorwf	(?_estaSeco+1)^0,w,c
  1755  00007E  B4D8               	btfsc	status,2,c
  1756  000080  EF44  F000         	goto	u821
  1757  000084  EF46  F000         	goto	u820
  1758  000088                     u821:
  1759  000088  EF19  F001         	goto	l1902
  1760  00008C                     u820:
  1761  00008C                     
  1762                           ;main.c: 235:                     LATDbits.LATD1 = 1;
  1763  00008C  828C               	bsf	140,1,c	;volatile
  1764  00008E  EF2A  F000         	goto	l1854
  1765  000092                     l1862:
  1766                           
  1767                           ;main.c: 241:                 if (estaSeco(sensores[i])) {
  1768  000092  90D8               	bcf	status,0,c
  1769  000094  3421               	rlcf	encenderBombas@i^0,w,c
  1770  000096  6ED9               	movwf	fsr2l,c
  1771  000098  3422               	rlcf	(encenderBombas@i+1)^0,w,c
  1772  00009A  6EDA               	movwf	fsr2h,c
  1773  00009C  0E01               	movlw	low _sensores
  1774  00009E  26D9               	addwf	fsr2l,f,c
  1775  0000A0  0E00               	movlw	high _sensores
  1776  0000A2  22DA               	addwfc	fsr2h,f,c
  1777  0000A4  CFDE F01C          	movff	postinc2,estaSeco@s
  1778  0000A8  CFDD F01D          	movff	postdec2,estaSeco@s+1
  1779  0000AC  EC77  F007         	call	_estaSeco	;wreg free
  1780  0000B0  501C               	movf	?_estaSeco^0,w,c
  1781  0000B2  101D               	iorwf	(?_estaSeco+1)^0,w,c
  1782  0000B4  B4D8               	btfsc	status,2,c
  1783  0000B6  EF5F  F000         	goto	u831
  1784  0000BA  EF61  F000         	goto	u830
  1785  0000BE                     u831:
  1786  0000BE  EF19  F001         	goto	l1902
  1787  0000C2                     u830:
  1788  0000C2                     
  1789                           ;main.c: 242:                     LATDbits.LATD2 = 1;
  1790  0000C2  848C               	bsf	140,2,c	;volatile
  1791  0000C4  EF2A  F000         	goto	l1854
  1792  0000C8                     l1868:
  1793                           
  1794                           ;main.c: 248:                 if (estaSeco(sensores[i])) {
  1795  0000C8  90D8               	bcf	status,0,c
  1796  0000CA  3421               	rlcf	encenderBombas@i^0,w,c
  1797  0000CC  6ED9               	movwf	fsr2l,c
  1798  0000CE  3422               	rlcf	(encenderBombas@i+1)^0,w,c
  1799  0000D0  6EDA               	movwf	fsr2h,c
  1800  0000D2  0E01               	movlw	low _sensores
  1801  0000D4  26D9               	addwf	fsr2l,f,c
  1802  0000D6  0E00               	movlw	high _sensores
  1803  0000D8  22DA               	addwfc	fsr2h,f,c
  1804  0000DA  CFDE F01C          	movff	postinc2,estaSeco@s
  1805  0000DE  CFDD F01D          	movff	postdec2,estaSeco@s+1
  1806  0000E2  EC77  F007         	call	_estaSeco	;wreg free
  1807  0000E6  501C               	movf	?_estaSeco^0,w,c
  1808  0000E8  101D               	iorwf	(?_estaSeco+1)^0,w,c
  1809  0000EA  B4D8               	btfsc	status,2,c
  1810  0000EC  EF7A  F000         	goto	u841
  1811  0000F0  EF7C  F000         	goto	u840
  1812  0000F4                     u841:
  1813  0000F4  EF19  F001         	goto	l1902
  1814  0000F8                     u840:
  1815  0000F8                     
  1816                           ;main.c: 249:                     LATDbits.LATD3 = 1;
  1817  0000F8  868C               	bsf	140,3,c	;volatile
  1818  0000FA  EF2A  F000         	goto	l1854
  1819  0000FE                     l1874:
  1820                           
  1821                           ;main.c: 255:                 if (estaSeco(sensores[i])) {
  1822  0000FE  90D8               	bcf	status,0,c
  1823  000100  3421               	rlcf	encenderBombas@i^0,w,c
  1824  000102  6ED9               	movwf	fsr2l,c
  1825  000104  3422               	rlcf	(encenderBombas@i+1)^0,w,c
  1826  000106  6EDA               	movwf	fsr2h,c
  1827  000108  0E01               	movlw	low _sensores
  1828  00010A  26D9               	addwf	fsr2l,f,c
  1829  00010C  0E00               	movlw	high _sensores
  1830  00010E  22DA               	addwfc	fsr2h,f,c
  1831  000110  CFDE F01C          	movff	postinc2,estaSeco@s
  1832  000114  CFDD F01D          	movff	postdec2,estaSeco@s+1
  1833  000118  EC77  F007         	call	_estaSeco	;wreg free
  1834  00011C  501C               	movf	?_estaSeco^0,w,c
  1835  00011E  101D               	iorwf	(?_estaSeco+1)^0,w,c
  1836  000120  B4D8               	btfsc	status,2,c
  1837  000122  EF95  F000         	goto	u851
  1838  000126  EF97  F000         	goto	u850
  1839  00012A                     u851:
  1840  00012A  EF19  F001         	goto	l1902
  1841  00012E                     u850:
  1842  00012E                     
  1843                           ;main.c: 256:                     LATDbits.LATD4 = 1;
  1844  00012E  888C               	bsf	140,4,c	;volatile
  1845  000130  EF2A  F000         	goto	l1854
  1846  000134                     l1880:
  1847                           
  1848                           ;main.c: 262:                 if (estaSeco(sensores[i])) {
  1849  000134  90D8               	bcf	status,0,c
  1850  000136  3421               	rlcf	encenderBombas@i^0,w,c
  1851  000138  6ED9               	movwf	fsr2l,c
  1852  00013A  3422               	rlcf	(encenderBombas@i+1)^0,w,c
  1853  00013C  6EDA               	movwf	fsr2h,c
  1854  00013E  0E01               	movlw	low _sensores
  1855  000140  26D9               	addwf	fsr2l,f,c
  1856  000142  0E00               	movlw	high _sensores
  1857  000144  22DA               	addwfc	fsr2h,f,c
  1858  000146  CFDE F01C          	movff	postinc2,estaSeco@s
  1859  00014A  CFDD F01D          	movff	postdec2,estaSeco@s+1
  1860  00014E  EC77  F007         	call	_estaSeco	;wreg free
  1861  000152  501C               	movf	?_estaSeco^0,w,c
  1862  000154  101D               	iorwf	(?_estaSeco+1)^0,w,c
  1863  000156  B4D8               	btfsc	status,2,c
  1864  000158  EFB0  F000         	goto	u861
  1865  00015C  EFB2  F000         	goto	u860
  1866  000160                     u861:
  1867  000160  EF19  F001         	goto	l1902
  1868  000164                     u860:
  1869  000164                     
  1870                           ;main.c: 263:                     LATDbits.LATD5 = 1;
  1871  000164  8A8C               	bsf	140,5,c	;volatile
  1872  000166  EF2A  F000         	goto	l1854
  1873  00016A                     l1886:
  1874                           
  1875                           ;main.c: 269:                 if (estaSeco(sensores[i])) {
  1876  00016A  90D8               	bcf	status,0,c
  1877  00016C  3421               	rlcf	encenderBombas@i^0,w,c
  1878  00016E  6ED9               	movwf	fsr2l,c
  1879  000170  3422               	rlcf	(encenderBombas@i+1)^0,w,c
  1880  000172  6EDA               	movwf	fsr2h,c
  1881  000174  0E01               	movlw	low _sensores
  1882  000176  26D9               	addwf	fsr2l,f,c
  1883  000178  0E00               	movlw	high _sensores
  1884  00017A  22DA               	addwfc	fsr2h,f,c
  1885  00017C  CFDE F01C          	movff	postinc2,estaSeco@s
  1886  000180  CFDD F01D          	movff	postdec2,estaSeco@s+1
  1887  000184  EC77  F007         	call	_estaSeco	;wreg free
  1888  000188  501C               	movf	?_estaSeco^0,w,c
  1889  00018A  101D               	iorwf	(?_estaSeco+1)^0,w,c
  1890  00018C  B4D8               	btfsc	status,2,c
  1891  00018E  EFCB  F000         	goto	u871
  1892  000192  EFCD  F000         	goto	u870
  1893  000196                     u871:
  1894  000196  EF19  F001         	goto	l1902
  1895  00019A                     u870:
  1896  00019A                     
  1897                           ;main.c: 270:                     LATDbits.LATD6 = 1;
  1898  00019A  8C8C               	bsf	140,6,c	;volatile
  1899  00019C  EF2A  F000         	goto	l1854
  1900  0001A0                     l1892:
  1901                           
  1902                           ;main.c: 276:                 if (estaSeco(sensores[i])) {
  1903  0001A0  90D8               	bcf	status,0,c
  1904  0001A2  3421               	rlcf	encenderBombas@i^0,w,c
  1905  0001A4  6ED9               	movwf	fsr2l,c
  1906  0001A6  3422               	rlcf	(encenderBombas@i+1)^0,w,c
  1907  0001A8  6EDA               	movwf	fsr2h,c
  1908  0001AA  0E01               	movlw	low _sensores
  1909  0001AC  26D9               	addwf	fsr2l,f,c
  1910  0001AE  0E00               	movlw	high _sensores
  1911  0001B0  22DA               	addwfc	fsr2h,f,c
  1912  0001B2  CFDE F01C          	movff	postinc2,estaSeco@s
  1913  0001B6  CFDD F01D          	movff	postdec2,estaSeco@s+1
  1914  0001BA  EC77  F007         	call	_estaSeco	;wreg free
  1915  0001BE  501C               	movf	?_estaSeco^0,w,c
  1916  0001C0  101D               	iorwf	(?_estaSeco+1)^0,w,c
  1917  0001C2  B4D8               	btfsc	status,2,c
  1918  0001C4  EFE6  F000         	goto	u881
  1919  0001C8  EFE8  F000         	goto	u880
  1920  0001CC                     u881:
  1921  0001CC  EF19  F001         	goto	l1902
  1922  0001D0                     u880:
  1923  0001D0                     
  1924                           ;main.c: 277:                     LATDbits.LATD7 = 1;
  1925  0001D0  8E8C               	bsf	140,7,c	;volatile
  1926  0001D2  EF2A  F000         	goto	l1854
  1927  0001D6                     l1900:
  1928  0001D6  C021  F01E         	movff	encenderBombas@i,??_encenderBombas
  1929  0001DA  C022  F01F         	movff	encenderBombas@i+1,??_encenderBombas+1
  1930                           
  1931                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1932                           ; Switch size 1, requested type "simple"
  1933                           ; Number of cases is 1, Range of values is 0 to 0
  1934                           ; switch strategies available:
  1935                           ; Name         Instructions Cycles
  1936                           ; simple_byte            4     3 (average)
  1937                           ;	Chosen strategy is simple_byte
  1938  0001DE  501F               	movf	(??_encenderBombas+1)^0,w,c
  1939  0001E0  0A00               	xorlw	0	; case 0
  1940  0001E2  B4D8               	btfsc	status,2,c
  1941  0001E4  EFF6  F000         	goto	l2340
  1942  0001E8  EF19  F001         	goto	l1902
  1943  0001EC                     l2340:
  1944                           
  1945                           ; Switch size 1, requested type "simple"
  1946                           ; Number of cases is 8, Range of values is 0 to 7
  1947                           ; switch strategies available:
  1948                           ; Name         Instructions Cycles
  1949                           ; simple_byte           25    13 (average)
  1950                           ;	Chosen strategy is simple_byte
  1951  0001EC  501E               	movf	??_encenderBombas^0,w,c
  1952  0001EE  0A00               	xorlw	0	; case 0
  1953  0001F0  B4D8               	btfsc	status,2,c
  1954  0001F2  EF11  F000         	goto	l1850
  1955  0001F6  0A01               	xorlw	1	; case 1
  1956  0001F8  B4D8               	btfsc	status,2,c
  1957  0001FA  EF2E  F000         	goto	l1856
  1958  0001FE  0A03               	xorlw	3	; case 2
  1959  000200  B4D8               	btfsc	status,2,c
  1960  000202  EF49  F000         	goto	l1862
  1961  000206  0A01               	xorlw	1	; case 3
  1962  000208  B4D8               	btfsc	status,2,c
  1963  00020A  EF64  F000         	goto	l1868
  1964  00020E  0A07               	xorlw	7	; case 4
  1965  000210  B4D8               	btfsc	status,2,c
  1966  000212  EF7F  F000         	goto	l1874
  1967  000216  0A01               	xorlw	1	; case 5
  1968  000218  B4D8               	btfsc	status,2,c
  1969  00021A  EF9A  F000         	goto	l1880
  1970  00021E  0A03               	xorlw	3	; case 6
  1971  000220  B4D8               	btfsc	status,2,c
  1972  000222  EFB5  F000         	goto	l1886
  1973  000226  0A01               	xorlw	1	; case 7
  1974  000228  B4D8               	btfsc	status,2,c
  1975  00022A  EFD0  F000         	goto	l1892
  1976  00022E  EF19  F001         	goto	l1902
  1977  000232                     l1902:
  1978                           
  1979                           ;main.c: 283:     }
  1980  000232  4A21               	infsnz	encenderBombas@i^0,f,c
  1981  000234  2A22               	incf	(encenderBombas@i+1)^0,f,c
  1982  000236  BE22               	btfsc	(encenderBombas@i+1)^0,7,c
  1983  000238  EF27  F001         	goto	u891
  1984  00023C  5022               	movf	(encenderBombas@i+1)^0,w,c
  1985  00023E  E109               	bnz	u890
  1986  000240  0E03               	movlw	3
  1987  000242  5C21               	subwf	encenderBombas@i^0,w,c
  1988  000244  A0D8               	btfss	status,0,c
  1989  000246  EF27  F001         	goto	u891
  1990  00024A  EF29  F001         	goto	u890
  1991  00024E                     u891:
  1992  00024E  EFEB  F000         	goto	l1900
  1993  000252                     u890:
  1994  000252                     
  1995                           ;main.c: 285:     if (flagSeco)
  1996  000252  5020               	movf	encenderBombas@flagSeco^0,w,c
  1997  000254  B4D8               	btfsc	status,2,c
  1998  000256  EF2F  F001         	goto	u901
  1999  00025A  EF31  F001         	goto	u900
  2000  00025E                     u901:
  2001  00025E  EF33  F001         	goto	l226
  2002  000262                     u900:
  2003  000262                     
  2004                           ;main.c: 286:         regando = 1;
  2005  000262  0E01               	movlw	1
  2006  000264  6E13               	movwf	_regando^0,c
  2007  000266                     l226:
  2008  000266  0012               	return		;funcret
  2009  000268                     __end_of_encenderBombas:
  2010                           	opt callstack 0
  2011                           
  2012 ;; *************** function _estaSeco *****************
  2013 ;; Defined at:
  2014 ;;		line 103 in file "main.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;  s               2    0[COMRAM] struct .
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;		None
  2019 ;; Return value:  Size  Location     Type
  2020 ;;                  2    0[COMRAM] int 
  2021 ;; Registers used:
  2022 ;;		wreg, status,2, status,0
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2028 ;;      Params:         2       0       0       0       0       0       0       0       0
  2029 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2030 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2031 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2032 ;;Total ram usage:        2 bytes
  2033 ;; Hardware stack levels used:    1
  2034 ;; Hardware stack levels required when called:    1
  2035 ;; This function calls:
  2036 ;;		Nothing
  2037 ;; This function is called by:
  2038 ;;		_encenderBombas
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           
  2042                           	psect	text6
  2043  000EEE                     __ptext6:
  2044                           	opt callstack 0
  2045  000EEE                     _estaSeco:
  2046                           	opt callstack 27
  2047  000EEE                     
  2048                           ;main.c: 104:     return s.humedadMedida >= 60;
  2049  000EEE  0E3C               	movlw	60
  2050  000EF0  601C               	cpfslt	estaSeco@s^0,c
  2051  000EF2  EF7D  F007         	goto	u701
  2052  000EF6  EF80  F007         	goto	u700
  2053  000EFA                     u701:
  2054  000EFA  0E01               	movlw	1
  2055  000EFC  EF81  F007         	goto	u710
  2056  000F00                     u700:
  2057  000F00  0E00               	movlw	0
  2058  000F02                     u710:
  2059  000F02  6E1C               	movwf	?_estaSeco^0,c
  2060  000F04  6A1D               	clrf	(?_estaSeco+1)^0,c
  2061  000F06  0012               	return		;funcret
  2062  000F08                     __end_of_estaSeco:
  2063                           	opt callstack 0
  2064                           
  2065 ;; *************** function _dameHoraActual *****************
  2066 ;; Defined at:
  2067 ;;		line 122 in file "main.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;		None
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;		None
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  1    wreg      void 
  2074 ;; Registers used:
  2075 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2081 ;;      Params:         0       0       0       0       0       0       0       0       0
  2082 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2083 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2084 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2085 ;;Total ram usage:        0 bytes
  2086 ;; Hardware stack levels used:    1
  2087 ;; Hardware stack levels required when called:    4
  2088 ;; This function calls:
  2089 ;;		_convertirDato
  2090 ;;		_leer_rtc
  2091 ;; This function is called by:
  2092 ;;		_sistemaRegado
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096                           	psect	text7
  2097  000E3E                     __ptext7:
  2098                           	opt callstack 0
  2099  000E3E                     _dameHoraActual:
  2100                           	opt callstack 25
  2101  000E3E                     
  2102                           ;main.c: 124:     segundos = convertirDato(leer_rtc(0x00));
  2103  000E3E  0E00               	movlw	0
  2104  000E40  EC0A  F007         	call	_leer_rtc
  2105  000E44  EC58  F007         	call	_convertirDato
  2106  000E48  6E19               	movwf	_segundos^0,c
  2107                           
  2108                           ;main.c: 125:     minutos = convertirDato(leer_rtc(0x01));
  2109  000E4A  0E01               	movlw	1
  2110  000E4C  EC0A  F007         	call	_leer_rtc
  2111  000E50  EC58  F007         	call	_convertirDato
  2112  000E54  6E1A               	movwf	_minutos^0,c
  2113                           
  2114                           ;main.c: 126:     hora = convertirDato(leer_rtc(0x02));
  2115  000E56  0E02               	movlw	2
  2116  000E58  EC0A  F007         	call	_leer_rtc
  2117  000E5C  EC58  F007         	call	_convertirDato
  2118  000E60  6E1B               	movwf	_hora^0,c
  2119  000E62  0012               	return		;funcret
  2120  000E64                     __end_of_dameHoraActual:
  2121                           	opt callstack 0
  2122                           
  2123 ;; *************** function _leer_rtc *****************
  2124 ;; Defined at:
  2125 ;;		line 13 in file "./RTC.h"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;  direccion       1    wreg     unsigned char 
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;  direccion       1    2[COMRAM] unsigned char 
  2130 ;;  dato            1    3[COMRAM] unsigned char 
  2131 ;; Return value:  Size  Location     Type
  2132 ;;                  1    wreg      unsigned char 
  2133 ;; Registers used:
  2134 ;;		wreg, status,2, status,0, cstack
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2140 ;;      Params:         0       0       0       0       0       0       0       0       0
  2141 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2142 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2143 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2144 ;;Total ram usage:        2 bytes
  2145 ;; Hardware stack levels used:    1
  2146 ;; Hardware stack levels required when called:    3
  2147 ;; This function calls:
  2148 ;;		_i2c_detener
  2149 ;;		_i2c_envia_dato
  2150 ;;		_i2c_inicia_com
  2151 ;;		_i2c_recibe_dato
  2152 ;;		_i2c_reinicia_com
  2153 ;; This function is called by:
  2154 ;;		_dameHoraActual
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158                           	psect	text8
  2159  000E14                     __ptext8:
  2160                           	opt callstack 0
  2161  000E14                     _leer_rtc:
  2162                           	opt callstack 25
  2163                           
  2164                           ;incstack = 0
  2165                           ;leer_rtc@direccion stored from wreg
  2166  000E14  6E1E               	movwf	leer_rtc@direccion^0,c
  2167  000E16                     
  2168                           ;./RTC.h: 14:     unsigned char dato;;./RTC.h: 15:     i2c_inicia_com();
  2169  000E16  ECCC  F007         	call	_i2c_inicia_com	;wreg free
  2170                           
  2171                           ;./RTC.h: 16:     i2c_envia_dato(0xD0);
  2172  000E1A  0ED0               	movlw	208
  2173  000E1C  ECBD  F007         	call	_i2c_envia_dato
  2174                           
  2175                           ;./RTC.h: 17:     i2c_envia_dato(direccion);
  2176  000E20  501E               	movf	leer_rtc@direccion^0,w,c
  2177  000E22  ECBD  F007         	call	_i2c_envia_dato
  2178                           
  2179                           ;./RTC.h: 18:     i2c_reinicia_com();
  2180  000E26  ECC8  F007         	call	_i2c_reinicia_com	;wreg free
  2181                           
  2182                           ;./RTC.h: 19:     i2c_envia_dato(0xD1);
  2183  000E2A  0ED1               	movlw	209
  2184  000E2C  ECBD  F007         	call	_i2c_envia_dato
  2185                           
  2186                           ;./RTC.h: 20:     dato = i2c_recibe_dato();
  2187  000E30  EC84  F007         	call	_i2c_recibe_dato	;wreg free
  2188  000E34  6E1F               	movwf	leer_rtc@dato^0,c
  2189                           
  2190                           ;./RTC.h: 21:     i2c_detener();
  2191  000E36  ECD0  F007         	call	_i2c_detener	;wreg free
  2192  000E3A                     
  2193                           ;./RTC.h: 22:     return dato;
  2194  000E3A  501F               	movf	leer_rtc@dato^0,w,c
  2195  000E3C  0012               	return		;funcret
  2196  000E3E                     __end_of_leer_rtc:
  2197                           	opt callstack 0
  2198                           
  2199 ;; *************** function _convertirDato *****************
  2200 ;; Defined at:
  2201 ;;		line 28 in file "./RTC.h"
  2202 ;; Parameters:    Size  Location     Type
  2203 ;;  dato            1    wreg     unsigned char 
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;  dato            1    1[COMRAM] unsigned char 
  2206 ;;  datoR           1    2[COMRAM] unsigned char 
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  1    wreg      unsigned char 
  2209 ;; Registers used:
  2210 ;;		wreg, status,2, status,0, prodl, prodh
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2216 ;;      Params:         0       0       0       0       0       0       0       0       0
  2217 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2218 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2219 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2220 ;;Total ram usage:        3 bytes
  2221 ;; Hardware stack levels used:    1
  2222 ;; Hardware stack levels required when called:    1
  2223 ;; This function calls:
  2224 ;;		Nothing
  2225 ;; This function is called by:
  2226 ;;		_dameHoraActual
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           	psect	text9
  2231  000EB0                     __ptext9:
  2232                           	opt callstack 0
  2233  000EB0                     _convertirDato:
  2234                           	opt callstack 27
  2235                           
  2236                           ;incstack = 0
  2237                           ;convertirDato@dato stored from wreg
  2238  000EB0  6E1D               	movwf	convertirDato@dato^0,c
  2239  000EB2                     
  2240                           ;./RTC.h: 30:     datoR = (dato & 0xF0) >> 4;
  2241  000EB2  381D               	swapf	convertirDato@dato^0,w,c
  2242  000EB4  0B0F               	andlw	15
  2243  000EB6  0B0F               	andlw	15
  2244  000EB8  6E1E               	movwf	convertirDato@datoR^0,c
  2245  000EBA                     
  2246                           ;./RTC.h: 31:     datoR = (datoR * 10) + (dato & 0x0F);
  2247  000EBA  C01D  F01C         	movff	convertirDato@dato,??_convertirDato
  2248  000EBE  0E0F               	movlw	15
  2249  000EC0  161C               	andwf	??_convertirDato^0,f,c
  2250  000EC2  501E               	movf	convertirDato@datoR^0,w,c
  2251  000EC4  0D0A               	mullw	10
  2252  000EC6  50F3               	movf	243,w,c
  2253  000EC8  241C               	addwf	??_convertirDato^0,w,c
  2254  000ECA  6E1E               	movwf	convertirDato@datoR^0,c
  2255  000ECC                     
  2256                           ;./RTC.h: 32:     return datoR;
  2257  000ECC  501E               	movf	convertirDato@datoR^0,w,c
  2258  000ECE  0012               	return		;funcret
  2259  000ED0                     __end_of_convertirDato:
  2260                           	opt callstack 0
  2261                           
  2262 ;; *************** function _sistemaPrincipal *****************
  2263 ;; Defined at:
  2264 ;;		line 486 in file "main.c"
  2265 ;; Parameters:    Size  Location     Type
  2266 ;;  opcion          1    wreg     unsigned char 
  2267 ;; Auto vars:     Size  Location     Type
  2268 ;;  opcion          1   24[COMRAM] unsigned char 
  2269 ;; Return value:  Size  Location     Type
  2270 ;;                  1    wreg      void 
  2271 ;; Registers used:
  2272 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2278 ;;      Params:         0       0       0       0       0       0       0       0       0
  2279 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2280 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2281 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2282 ;;Total ram usage:        3 bytes
  2283 ;; Hardware stack levels used:    1
  2284 ;; Hardware stack levels required when called:    6
  2285 ;; This function calls:
  2286 ;;		_UART_printf
  2287 ;;		_asignarHorarios
  2288 ;;		_fijaHoraRtc
  2289 ;;		_mostrarMenu
  2290 ;;		_setTiempoRegar
  2291 ;; This function is called by:
  2292 ;;		_main
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           
  2296                           	psect	text10
  2297  000AFC                     __ptext10:
  2298                           	opt callstack 0
  2299  000AFC                     _sistemaPrincipal:
  2300                           	opt callstack 24
  2301                           
  2302                           ;incstack = 0
  2303                           ;sistemaPrincipal@opcion stored from wreg
  2304  000AFC  6E34               	movwf	sistemaPrincipal@opcion^0,c
  2305  000AFE                     
  2306                           ;main.c: 488:     PIE1bits.RCIE = 0;
  2307  000AFE  9A9D               	bcf	157,5,c	;volatile
  2308                           
  2309                           ;main.c: 490:     switch (opcion) {
  2310  000B00  EF96  F005         	goto	l2220
  2311  000B04                     l2210:
  2312                           
  2313                           ;main.c: 493:             fijaHoraRtc();
  2314  000B04  EC2A  F006         	call	_fijaHoraRtc	;wreg free
  2315                           
  2316                           ;main.c: 494:             break;
  2317  000B08  EFAF  F005         	goto	l2222
  2318  000B0C                     l2212:
  2319                           
  2320                           ;main.c: 497:             asignarHorarios();
  2321  000B0C  EC19  F002         	call	_asignarHorarios	;wreg free
  2322                           
  2323                           ;main.c: 498:             break;
  2324  000B10  EFAF  F005         	goto	l2222
  2325  000B14                     l2214:
  2326                           
  2327                           ;main.c: 501:             setTiempoRegar();
  2328  000B14  EC34  F001         	call	_setTiempoRegar	;wreg free
  2329                           
  2330                           ;main.c: 502:             break;
  2331  000B18  EFAF  F005         	goto	l2222
  2332  000B1C                     l2216:
  2333                           
  2334                           ;main.c: 506:             UART_printf("\r\n Solo se permiten numeros del 1 al 3 \r\n");
  2335  000B1C  0E5F               	movlw	low STR_27
  2336  000B1E  6E1D               	movwf	UART_printf@cadena^0,c
  2337  000B20  0E7E               	movlw	high STR_27
  2338  000B22  6E1E               	movwf	(UART_printf@cadena+1)^0,c
  2339  000B24  ECC2  F006         	call	_UART_printf	;wreg free
  2340                           
  2341                           ;main.c: 507:             break;
  2342  000B28  EFAF  F005         	goto	l2222
  2343  000B2C                     l2220:
  2344  000B2C  5034               	movf	sistemaPrincipal@opcion^0,w,c
  2345  000B2E  6E32               	movwf	??_sistemaPrincipal^0,c
  2346  000B30  6A33               	clrf	(??_sistemaPrincipal+1)^0,c
  2347                           
  2348                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2349                           ; Switch size 1, requested type "simple"
  2350                           ; Number of cases is 1, Range of values is 0 to 0
  2351                           ; switch strategies available:
  2352                           ; Name         Instructions Cycles
  2353                           ; simple_byte            4     3 (average)
  2354                           ;	Chosen strategy is simple_byte
  2355  000B32  5033               	movf	(??_sistemaPrincipal+1)^0,w,c
  2356  000B34  0A00               	xorlw	0	; case 0
  2357  000B36  B4D8               	btfsc	status,2,c
  2358  000B38  EFA0  F005         	goto	l2342
  2359  000B3C  EF8E  F005         	goto	l2216
  2360  000B40                     l2342:
  2361                           
  2362                           ; Switch size 1, requested type "simple"
  2363                           ; Number of cases is 3, Range of values is 1 to 3
  2364                           ; switch strategies available:
  2365                           ; Name         Instructions Cycles
  2366                           ; simple_byte           10     6 (average)
  2367                           ;	Chosen strategy is simple_byte
  2368  000B40  5032               	movf	??_sistemaPrincipal^0,w,c
  2369  000B42  0A01               	xorlw	1	; case 1
  2370  000B44  B4D8               	btfsc	status,2,c
  2371  000B46  EF82  F005         	goto	l2210
  2372  000B4A  0A03               	xorlw	3	; case 2
  2373  000B4C  B4D8               	btfsc	status,2,c
  2374  000B4E  EF86  F005         	goto	l2212
  2375  000B52  0A01               	xorlw	1	; case 3
  2376  000B54  B4D8               	btfsc	status,2,c
  2377  000B56  EF8A  F005         	goto	l2214
  2378  000B5A  EF8E  F005         	goto	l2216
  2379  000B5E                     l2222:
  2380                           
  2381                           ;main.c: 510:     mostrarMenu();
  2382  000B5E  EC05  F006         	call	_mostrarMenu	;wreg free
  2383  000B62                     
  2384                           ;main.c: 511:     PIE1bits.RCIE = 1;
  2385  000B62  8A9D               	bsf	157,5,c	;volatile
  2386  000B64  0012               	return		;funcret
  2387  000B66                     __end_of_sistemaPrincipal:
  2388                           	opt callstack 0
  2389                           
  2390 ;; *************** function _setTiempoRegar *****************
  2391 ;; Defined at:
  2392 ;;		line 357 in file "main.c"
  2393 ;; Parameters:    Size  Location     Type
  2394 ;;		None
  2395 ;; Auto vars:     Size  Location     Type
  2396 ;;  i               2   18[COMRAM] int 
  2397 ;;  i               2   16[COMRAM] int 
  2398 ;;  Rx              1   21[COMRAM] unsigned char 
  2399 ;;  datoCapturad    1   20[COMRAM] unsigned char 
  2400 ;;  hora            1   15[COMRAM] unsigned char 
  2401 ;;  tiempoRegar     1   14[COMRAM] unsigned char 
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  1    wreg      void 
  2404 ;; Registers used:
  2405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2411 ;;      Params:         0       0       0       0       0       0       0       0       0
  2412 ;;      Locals:         8       0       0       0       0       0       0       0       0
  2413 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2414 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2415 ;;Total ram usage:        8 bytes
  2416 ;; Hardware stack levels used:    1
  2417 ;; Hardware stack levels required when called:    5
  2418 ;; This function calls:
  2419 ;;		_UART_printf
  2420 ;;		_UART_read
  2421 ;;		_escribeHorariosMemoria
  2422 ;; This function is called by:
  2423 ;;		_sistemaPrincipal
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           	psect	text11
  2428  000268                     __ptext11:
  2429                           	opt callstack 0
  2430  000268                     _setTiempoRegar:
  2431                           	opt callstack 24
  2432  000268                     
  2433                           ;main.c: 359:     unsigned char hora;;main.c: 360:     unsigned char tiempoRegar;;main.c
      +                          : 361:     unsigned char Rx;;main.c: 362:     char datoCapturado = 0;
  2434  000268  0E00               	movlw	0
  2435  00026A  6E30               	movwf	setTiempoRegar@datoCapturado^0,c
  2436  00026C                     
  2437                           ;main.c: 364:     UART_printf("\r\n TIEMPO DE REGADO \r\n");
  2438  00026C  0EC9               	movlw	low STR_13
  2439  00026E  6E1D               	movwf	UART_printf@cadena^0,c
  2440  000270  0E7F               	movlw	high STR_13
  2441  000272  6E1E               	movwf	(UART_printf@cadena+1)^0,c
  2442  000274  ECC2  F006         	call	_UART_printf	;wreg free
  2443  000278                     
  2444                           ;main.c: 365:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  2445  000278  0ED0               	movlw	low STR_8
  2446  00027A  6E1D               	movwf	UART_printf@cadena^0,c
  2447  00027C  0E7D               	movlw	high STR_8
  2448  00027E  6E1E               	movwf	(UART_printf@cadena+1)^0,c
  2449  000280  ECC2  F006         	call	_UART_printf	;wreg free
  2450                           
  2451                           ;main.c: 367:     for (int i = 0; i < 2; i++) {
  2452  000284  0E00               	movlw	0
  2453  000286  6E2D               	movwf	(setTiempoRegar@i+1)^0,c
  2454  000288  0E00               	movlw	0
  2455  00028A  6E2C               	movwf	setTiempoRegar@i^0,c
  2456  00028C                     l2000:
  2457                           
  2458                           ;main.c: 368:         Rx = UART_read();
  2459  00028C  ECB4  F007         	call	_UART_read	;wreg free
  2460  000290  6E31               	movwf	setTiempoRegar@Rx^0,c
  2461  000292                     
  2462                           ;main.c: 369:         if (Rx >= 48 && Rx <= 57) {
  2463  000292  0E2F               	movlw	47
  2464  000294  6431               	cpfsgt	setTiempoRegar@Rx^0,c
  2465  000296  EF4F  F001         	goto	u981
  2466  00029A  EF51  F001         	goto	u980
  2467  00029E                     u981:
  2468  00029E  EF74  F001         	goto	l2020
  2469  0002A2                     u980:
  2470  0002A2  0E3A               	movlw	58
  2471  0002A4  6031               	cpfslt	setTiempoRegar@Rx^0,c
  2472  0002A6  EF57  F001         	goto	u991
  2473  0002AA  EF59  F001         	goto	u990
  2474  0002AE                     u991:
  2475  0002AE  EF74  F001         	goto	l2020
  2476  0002B2                     u990:
  2477  0002B2                     
  2478                           ;main.c: 370:             if (!i) {
  2479  0002B2  502C               	movf	setTiempoRegar@i^0,w,c
  2480  0002B4  102D               	iorwf	(setTiempoRegar@i+1)^0,w,c
  2481  0002B6  A4D8               	btfss	status,2,c
  2482  0002B8  EF60  F001         	goto	u1001
  2483  0002BC  EF62  F001         	goto	u1000
  2484  0002C0                     u1001:
  2485  0002C0  EF6C  F001         	goto	l2014
  2486  0002C4                     u1000:
  2487  0002C4                     
  2488                           ;main.c: 371:                 Rx -= 48;
  2489  0002C4  0E30               	movlw	48
  2490  0002C6  5E31               	subwf	setTiempoRegar@Rx^0,f,c
  2491  0002C8                     
  2492                           ;main.c: 372:                 hora = Rx;
  2493  0002C8  C031  F02B         	movff	setTiempoRegar@Rx,setTiempoRegar@hora
  2494  0002CC                     
  2495                           ;main.c: 373:                 hora *= 10;
  2496  0002CC  0E0A               	movlw	10
  2497  0002CE  022B               	mulwf	setTiempoRegar@hora^0,c
  2498  0002D0  50F3               	movf	prodl,w,c
  2499  0002D2  6E2B               	movwf	setTiempoRegar@hora^0,c
  2500                           
  2501                           ;main.c: 374:             } else {
  2502  0002D4  EF84  F001         	goto	l2026
  2503  0002D8                     l2014:
  2504                           
  2505                           ;main.c: 375:                 datoCapturado = 1;
  2506  0002D8  0E01               	movlw	1
  2507  0002DA  6E30               	movwf	setTiempoRegar@datoCapturado^0,c
  2508  0002DC                     
  2509                           ;main.c: 376:                 Rx -= 48;
  2510  0002DC  0E30               	movlw	48
  2511  0002DE  5E31               	subwf	setTiempoRegar@Rx^0,f,c
  2512  0002E0                     
  2513                           ;main.c: 377:                 hora += Rx;
  2514  0002E0  5031               	movf	setTiempoRegar@Rx^0,w,c
  2515  0002E2  262B               	addwf	setTiempoRegar@hora^0,f,c
  2516  0002E4  EF84  F001         	goto	l2026
  2517  0002E8                     l2020:
  2518                           
  2519                           ;main.c: 380:             datoCapturado = 0;
  2520  0002E8  0E00               	movlw	0
  2521  0002EA  6E30               	movwf	setTiempoRegar@datoCapturado^0,c
  2522  0002EC                     
  2523                           ;main.c: 381:             UART_printf("\r\n Solo se permiten numeros \r\n");
  2524  0002EC  0E5C               	movlw	low STR_1
  2525  0002EE  6E1D               	movwf	UART_printf@cadena^0,c
  2526  0002F0  0E7F               	movlw	high STR_1
  2527  0002F2  6E1E               	movwf	(UART_printf@cadena+1)^0,c
  2528  0002F4  ECC2  F006         	call	_UART_printf	;wreg free
  2529  0002F8                     
  2530                           ;main.c: 382:             UART_printf("\r\n Vuelva a grabar los datos \r\n");
  2531  0002F8  0E1D               	movlw	low STR_2
  2532  0002FA  6E1D               	movwf	UART_printf@cadena^0,c
  2533  0002FC  0E7F               	movlw	high STR_2
  2534  0002FE  6E1E               	movwf	(UART_printf@cadena+1)^0,c
  2535  000300  ECC2  F006         	call	_UART_printf	;wreg free
  2536                           
  2537                           ;main.c: 383:             break;
  2538  000304  EF94  F001         	goto	l2030
  2539  000308                     l2026:
  2540                           
  2541                           ;main.c: 385:     }
  2542  000308  4A2C               	infsnz	setTiempoRegar@i^0,f,c
  2543  00030A  2A2D               	incf	(setTiempoRegar@i+1)^0,f,c
  2544  00030C  BE2D               	btfsc	(setTiempoRegar@i+1)^0,7,c
  2545  00030E  EF92  F001         	goto	u1011
  2546  000312  502D               	movf	(setTiempoRegar@i+1)^0,w,c
  2547  000314  E109               	bnz	u1010
  2548  000316  0E02               	movlw	2
  2549  000318  5C2C               	subwf	setTiempoRegar@i^0,w,c
  2550  00031A  A0D8               	btfss	status,0,c
  2551  00031C  EF92  F001         	goto	u1011
  2552  000320  EF94  F001         	goto	u1010
  2553  000324                     u1011:
  2554  000324  EF46  F001         	goto	l2000
  2555  000328                     u1010:
  2556  000328                     l2030:
  2557                           
  2558                           ;main.c: 387:     if (datoCapturado) {
  2559  000328  5030               	movf	setTiempoRegar@datoCapturado^0,w,c
  2560  00032A  B4D8               	btfsc	status,2,c
  2561  00032C  EF9A  F001         	goto	u1021
  2562  000330  EF9C  F001         	goto	u1020
  2563  000334                     u1021:
  2564  000334  EF18  F002         	goto	l257
  2565  000338                     u1020:
  2566  000338                     
  2567                           ;main.c: 389:         UART_printf("\r\n Ingrese los minutos que desee que se riegue en e
      +                          se horario ej: 15 \r\n");
  2568  000338  0E51               	movlw	low STR_17
  2569  00033A  6E1D               	movwf	UART_printf@cadena^0,c
  2570  00033C  0E7D               	movlw	high STR_17
  2571  00033E  6E1E               	movwf	(UART_printf@cadena+1)^0,c
  2572  000340  ECC2  F006         	call	_UART_printf	;wreg free
  2573  000344                     
  2574                           ;main.c: 391:         for (int i = 0; i < 2; i++) {
  2575  000344  0E00               	movlw	0
  2576  000346  6E2F               	movwf	(setTiempoRegar@i_704+1)^0,c
  2577  000348  0E00               	movlw	0
  2578  00034A  6E2E               	movwf	setTiempoRegar@i_704^0,c
  2579  00034C                     l2040:
  2580                           
  2581                           ;main.c: 392:             Rx = UART_read();
  2582  00034C  ECB4  F007         	call	_UART_read	;wreg free
  2583  000350  6E31               	movwf	setTiempoRegar@Rx^0,c
  2584  000352                     
  2585                           ;main.c: 393:             if (Rx >= 48 && Rx <= 57) {
  2586  000352  0E2F               	movlw	47
  2587  000354  6431               	cpfsgt	setTiempoRegar@Rx^0,c
  2588  000356  EFAF  F001         	goto	u1031
  2589  00035A  EFB1  F001         	goto	u1030
  2590  00035E                     u1031:
  2591  00035E  EFD4  F001         	goto	l2060
  2592  000362                     u1030:
  2593  000362  0E3A               	movlw	58
  2594  000364  6031               	cpfslt	setTiempoRegar@Rx^0,c
  2595  000366  EFB7  F001         	goto	u1041
  2596  00036A  EFB9  F001         	goto	u1040
  2597  00036E                     u1041:
  2598  00036E  EFD4  F001         	goto	l2060
  2599  000372                     u1040:
  2600  000372                     
  2601                           ;main.c: 394:                 if (!i) {
  2602  000372  502E               	movf	setTiempoRegar@i_704^0,w,c
  2603  000374  102F               	iorwf	(setTiempoRegar@i_704+1)^0,w,c
  2604  000376  A4D8               	btfss	status,2,c
  2605  000378  EFC0  F001         	goto	u1051
  2606  00037C  EFC2  F001         	goto	u1050
  2607  000380                     u1051:
  2608  000380  EFCC  F001         	goto	l2054
  2609  000384                     u1050:
  2610  000384                     
  2611                           ;main.c: 395:                     Rx -= 48;
  2612  000384  0E30               	movlw	48
  2613  000386  5E31               	subwf	setTiempoRegar@Rx^0,f,c
  2614  000388                     
  2615                           ;main.c: 396:                     tiempoRegar = Rx;
  2616  000388  C031  F02A         	movff	setTiempoRegar@Rx,setTiempoRegar@tiempoRegar
  2617  00038C                     
  2618                           ;main.c: 397:                     tiempoRegar *= 10;
  2619  00038C  0E0A               	movlw	10
  2620  00038E  022A               	mulwf	setTiempoRegar@tiempoRegar^0,c
  2621  000390  50F3               	movf	prodl,w,c
  2622  000392  6E2A               	movwf	setTiempoRegar@tiempoRegar^0,c
  2623                           
  2624                           ;main.c: 398:                 } else {
  2625  000394  EFE4  F001         	goto	l2066
  2626  000398                     l2054:
  2627                           
  2628                           ;main.c: 399:                     datoCapturado = 1;
  2629  000398  0E01               	movlw	1
  2630  00039A  6E30               	movwf	setTiempoRegar@datoCapturado^0,c
  2631  00039C                     
  2632                           ;main.c: 400:                     Rx -= 48;
  2633  00039C  0E30               	movlw	48
  2634  00039E  5E31               	subwf	setTiempoRegar@Rx^0,f,c
  2635  0003A0                     
  2636                           ;main.c: 401:                     tiempoRegar += Rx;
  2637  0003A0  5031               	movf	setTiempoRegar@Rx^0,w,c
  2638  0003A2  262A               	addwf	setTiempoRegar@tiempoRegar^0,f,c
  2639  0003A4  EFE4  F001         	goto	l2066
  2640  0003A8                     l2060:
  2641                           
  2642                           ;main.c: 404:                 datoCapturado = 0;
  2643  0003A8  0E00               	movlw	0
  2644  0003AA  6E30               	movwf	setTiempoRegar@datoCapturado^0,c
  2645  0003AC                     
  2646                           ;main.c: 405:                 UART_printf("\r\n Solo se permiten numeros \r\n");
  2647  0003AC  0E5C               	movlw	low STR_1
  2648  0003AE  6E1D               	movwf	UART_printf@cadena^0,c
  2649  0003B0  0E7F               	movlw	high STR_1
  2650  0003B2  6E1E               	movwf	(UART_printf@cadena+1)^0,c
  2651  0003B4  ECC2  F006         	call	_UART_printf	;wreg free
  2652  0003B8                     
  2653                           ;main.c: 406:                 UART_printf("\r\n Vuelva a grabar los datos \r\n");
  2654  0003B8  0E1D               	movlw	low STR_2
  2655  0003BA  6E1D               	movwf	UART_printf@cadena^0,c
  2656  0003BC  0E7F               	movlw	high STR_2
  2657  0003BE  6E1E               	movwf	(UART_printf@cadena+1)^0,c
  2658  0003C0  ECC2  F006         	call	_UART_printf	;wreg free
  2659                           
  2660                           ;main.c: 407:                 break;
  2661  0003C4  EFF4  F001         	goto	l2070
  2662  0003C8                     l2066:
  2663                           
  2664                           ;main.c: 409:         }
  2665  0003C8  4A2E               	infsnz	setTiempoRegar@i_704^0,f,c
  2666  0003CA  2A2F               	incf	(setTiempoRegar@i_704+1)^0,f,c
  2667  0003CC  BE2F               	btfsc	(setTiempoRegar@i_704+1)^0,7,c
  2668  0003CE  EFF2  F001         	goto	u1061
  2669  0003D2  502F               	movf	(setTiempoRegar@i_704+1)^0,w,c
  2670  0003D4  E109               	bnz	u1060
  2671  0003D6  0E02               	movlw	2
  2672  0003D8  5C2E               	subwf	setTiempoRegar@i_704^0,w,c
  2673  0003DA  A0D8               	btfss	status,0,c
  2674  0003DC  EFF2  F001         	goto	u1061
  2675  0003E0  EFF4  F001         	goto	u1060
  2676  0003E4                     u1061:
  2677  0003E4  EFA6  F001         	goto	l2040
  2678  0003E8                     u1060:
  2679  0003E8                     l2070:
  2680                           
  2681                           ;main.c: 411:         if (datoCapturado) {
  2682  0003E8  5030               	movf	setTiempoRegar@datoCapturado^0,w,c
  2683  0003EA  B4D8               	btfsc	status,2,c
  2684  0003EC  EFFA  F001         	goto	u1071
  2685  0003F0  EFFC  F001         	goto	u1070
  2686  0003F4                     u1071:
  2687  0003F4  EF18  F002         	goto	l257
  2688  0003F8                     u1070:
  2689  0003F8                     
  2690                           ;main.c: 413:             UART_printf("\r\n Minutos de riego establecidos! \r\n");
  2691  0003F8  0E89               	movlw	low STR_20
  2692  0003FA  6E1D               	movwf	UART_printf@cadena^0,c
  2693  0003FC  0E7E               	movlw	high STR_20
  2694  0003FE  6E1E               	movwf	(UART_printf@cadena+1)^0,c
  2695  000400  ECC2  F006         	call	_UART_printf	;wreg free
  2696  000404                     
  2697                           ;main.c: 415:             horarios[hora].tiempoRegar = tiempoRegar;
  2698  000404  502B               	movf	setTiempoRegar@hora^0,w,c
  2699  000406  0D03               	mullw	3
  2700  000408  0E62               	movlw	low (_horarios+2)
  2701  00040A  24F3               	addwf	243,w,c
  2702  00040C  6ED9               	movwf	fsr2l,c
  2703  00040E  0E00               	movlw	high (_horarios+2)
  2704  000410  20F4               	addwfc	prodh,w,c
  2705  000412  6EDA               	movwf	fsr2h,c
  2706  000414  C02A  FFDF         	movff	setTiempoRegar@tiempoRegar,indf2
  2707  000418                     
  2708                           ;main.c: 416:             minutosRegar = horarios[hora].tiempoRegar;
  2709  000418  502B               	movf	setTiempoRegar@hora^0,w,c
  2710  00041A  0D03               	mullw	3
  2711  00041C  0E62               	movlw	low (_horarios+2)
  2712  00041E  24F3               	addwf	243,w,c
  2713  000420  6ED9               	movwf	fsr2l,c
  2714  000422  0E00               	movlw	high (_horarios+2)
  2715  000424  20F4               	addwfc	prodh,w,c
  2716  000426  6EDA               	movwf	fsr2h,c
  2717  000428  50DF               	movf	indf2,w,c
  2718  00042A  6E15               	movwf	_minutosRegar^0,c
  2719  00042C                     
  2720                           ;main.c: 418:             escribeHorariosMemoria();
  2721  00042C  EC37  F003         	call	_escribeHorariosMemoria	;wreg free
  2722  000430                     l257:
  2723  000430  0012               	return		;funcret
  2724  000432                     __end_of_setTiempoRegar:
  2725                           	opt callstack 0
  2726                           
  2727 ;; *************** function _mostrarMenu *****************
  2728 ;; Defined at:
  2729 ;;		line 476 in file "main.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;		None
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;		None
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  1    wreg      void 
  2736 ;; Registers used:
  2737 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2743 ;;      Params:         0       0       0       0       0       0       0       0       0
  2744 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2745 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2746 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2747 ;;Total ram usage:        0 bytes
  2748 ;; Hardware stack levels used:    1
  2749 ;; Hardware stack levels required when called:    3
  2750 ;; This function calls:
  2751 ;;		_UART_printf
  2752 ;; This function is called by:
  2753 ;;		_sistemaPrincipal
  2754 ;;		_main
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           	psect	text12
  2759  000C0A                     __ptext12:
  2760                           	opt callstack 0
  2761  000C0A                     _mostrarMenu:
  2762                           	opt callstack 26
  2763  000C0A                     
  2764                           ;main.c: 478:     UART_printf("\r\n Ingresa una opcion a Realizar: \r\n");
  2765  000C0A  0EAE               	movlw	low STR_21
  2766  000C0C  6E1D               	movwf	UART_printf@cadena^0,c
  2767  000C0E  0E7E               	movlw	high STR_21
  2768  000C10  6E1E               	movwf	(UART_printf@cadena+1)^0,c
  2769  000C12  ECC2  F006         	call	_UART_printf	;wreg free
  2770                           
  2771                           ;main.c: 479:     UART_printf("\r\n 1. Fijar Hora Actual \r\n");
  2772  000C16  0E7B               	movlw	low STR_22
  2773  000C18  6E1D               	movwf	UART_printf@cadena^0,c
  2774  000C1A  0E7F               	movlw	high STR_22
  2775  000C1C  6E1E               	movwf	(UART_printf@cadena+1)^0,c
  2776  000C1E  ECC2  F006         	call	_UART_printf	;wreg free
  2777                           
  2778                           ;main.c: 480:     UART_printf("\r\n 2. Asignar Horarios para regar \r\n");
  2779  000C22  0EF8               	movlw	low STR_23
  2780  000C24  6E1D               	movwf	UART_printf@cadena^0,c
  2781  000C26  0E7E               	movlw	high STR_23
  2782  000C28  6E1E               	movwf	(UART_printf@cadena+1)^0,c
  2783  000C2A  ECC2  F006         	call	_UART_printf	;wreg free
  2784                           
  2785                           ;main.c: 481:     UART_printf("\r\n 3. Programar tiempo de riego en un horario \r\n");
  2786  000C2E  0E03               	movlw	low STR_24
  2787  000C30  6E1D               	movwf	UART_printf@cadena^0,c
  2788  000C32  0E7E               	movlw	high STR_24
  2789  000C34  6E1E               	movwf	(UART_printf@cadena+1)^0,c
  2790  000C36  ECC2  F006         	call	_UART_printf	;wreg free
  2791                           
  2792                           ;main.c: 482:     UART_printf("\r\n Opcion:  \r");
  2793  000C3A  0EF0               	movlw	low STR_25
  2794  000C3C  6E1D               	movwf	UART_printf@cadena^0,c
  2795  000C3E  0E7F               	movlw	high STR_25
  2796  000C40  6E1E               	movwf	(UART_printf@cadena+1)^0,c
  2797  000C42  ECC2  F006         	call	_UART_printf	;wreg free
  2798                           
  2799                           ;main.c: 483:     UART_printf("\r\n");
  2800  000C46  0EAD               	movlw	low (STR_12+23)
  2801  000C48  6E1D               	movwf	UART_printf@cadena^0,c
  2802  000C4A  0E7F               	movlw	high (STR_12+23)
  2803  000C4C  6E1E               	movwf	(UART_printf@cadena+1)^0,c
  2804  000C4E  ECC2  F006         	call	_UART_printf	;wreg free
  2805  000C52  0012               	return		;funcret
  2806  000C54                     __end_of_mostrarMenu:
  2807                           	opt callstack 0
  2808                           
  2809 ;; *************** function _fijaHoraRtc *****************
  2810 ;; Defined at:
  2811 ;;		line 290 in file "main.c"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;		None
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;  dato            1    0        unsigned char 
  2816 ;; Return value:  Size  Location     Type
  2817 ;;                  1    wreg      void 
  2818 ;; Registers used:
  2819 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2820 ;; Tracked objects:
  2821 ;;		On entry : 0/0
  2822 ;;		On exit  : 0/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2825 ;;      Params:         0       0       0       0       0       0       0       0       0
  2826 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2827 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2828 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2829 ;;Total ram usage:        1 bytes
  2830 ;; Hardware stack levels used:    1
  2831 ;; Hardware stack levels required when called:    5
  2832 ;; This function calls:
  2833 ;;		_UART_printf
  2834 ;;		_escribe_rtc
  2835 ;;		_setRtc
  2836 ;; This function is called by:
  2837 ;;		_sistemaPrincipal
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           
  2841                           	psect	text13
  2842  000C54                     __ptext13:
  2843                           	opt callstack 0
  2844  000C54                     _fijaHoraRtc:
  2845                           	opt callstack 24
  2846  000C54                     
  2847                           ;main.c: 294:     UART_printf("\r\n FIJA HORA \r\n");
  2848  000C54  0EE0               	movlw	low STR_3
  2849  000C56  6E1D               	movwf	UART_printf@cadena^0,c
  2850  000C58  0E7F               	movlw	high STR_3
  2851  000C5A  6E1E               	movwf	(UART_printf@cadena+1)^0,c
  2852  000C5C  ECC2  F006         	call	_UART_printf	;wreg free
  2853  000C60                     
  2854                           ;main.c: 297:     UART_printf("\r\n Envie las Horas en formato 24 Ej: 15 \r\n");
  2855  000C60  0E34               	movlw	low STR_4
  2856  000C62  6E1D               	movwf	UART_printf@cadena^0,c
  2857  000C64  0E7E               	movlw	high STR_4
  2858  000C66  6E1E               	movwf	(UART_printf@cadena+1)^0,c
  2859  000C68  ECC2  F006         	call	_UART_printf	;wreg free
  2860  000C6C                     
  2861                           ;main.c: 298:     setRtc(0x02);
  2862  000C6C  0E02               	movlw	2
  2863  000C6E  EC9E  F003         	call	_setRtc
  2864  000C72                     
  2865                           ;main.c: 300:     UART_printf("\r\n Envie los Minutos Ej: 25 \r\n");
  2866  000C72  0E3D               	movlw	low STR_5
  2867  000C74  6E1D               	movwf	UART_printf@cadena^0,c
  2868  000C76  0E7F               	movlw	high STR_5
  2869  000C78  6E1E               	movwf	(UART_printf@cadena+1)^0,c
  2870  000C7A  ECC2  F006         	call	_UART_printf	;wreg free
  2871  000C7E                     
  2872                           ;main.c: 301:     setRtc(0x01);
  2873  000C7E  0E01               	movlw	1
  2874  000C80  EC9E  F003         	call	_setRtc
  2875  000C84                     
  2876                           ;main.c: 303:     UART_printf("\r\n HORA ESTABLECIDA CORRECTAMENTE \r\n");
  2877  000C84  0ED3               	movlw	low STR_6
  2878  000C86  6E1D               	movwf	UART_printf@cadena^0,c
  2879  000C88  0E7E               	movlw	high STR_6
  2880  000C8A  6E1E               	movwf	(UART_printf@cadena+1)^0,c
  2881  000C8C  ECC2  F006         	call	_UART_printf	;wreg free
  2882  000C90                     
  2883                           ;main.c: 304:     escribe_rtc(0x00, 0);
  2884  000C90  0E00               	movlw	0
  2885  000C92  6E1E               	movwf	escribe_rtc@dato^0,c
  2886  000C94  0E00               	movlw	0
  2887  000C96  EC68  F007         	call	_escribe_rtc
  2888  000C9A  0012               	return		;funcret
  2889  000C9C                     __end_of_fijaHoraRtc:
  2890                           	opt callstack 0
  2891                           
  2892 ;; *************** function _setRtc *****************
  2893 ;; Defined at:
  2894 ;;		line 129 in file "main.c"
  2895 ;; Parameters:    Size  Location     Type
  2896 ;;  direccion       1    wreg     unsigned char 
  2897 ;; Auto vars:     Size  Location     Type
  2898 ;;  direccion       1    5[COMRAM] unsigned char 
  2899 ;;  Rx              1   10[COMRAM] unsigned char 
  2900 ;;  i               2    8[COMRAM] int 
  2901 ;;  datoCapturad    1    7[COMRAM] unsigned char 
  2902 ;;  dato            1    6[COMRAM] unsigned char 
  2903 ;; Return value:  Size  Location     Type
  2904 ;;                  1    wreg      void 
  2905 ;; Registers used:
  2906 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2912 ;;      Params:         0       0       0       0       0       0       0       0       0
  2913 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2914 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2915 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2916 ;;Total ram usage:        7 bytes
  2917 ;; Hardware stack levels used:    1
  2918 ;; Hardware stack levels required when called:    4
  2919 ;; This function calls:
  2920 ;;		_UART_printf
  2921 ;;		_UART_read
  2922 ;;		_escribe_rtc
  2923 ;; This function is called by:
  2924 ;;		_fijaHoraRtc
  2925 ;; This function uses a non-reentrant model
  2926 ;;
  2927                           
  2928                           	psect	text14
  2929  00073C                     __ptext14:
  2930                           	opt callstack 0
  2931  00073C                     _setRtc:
  2932                           	opt callstack 24
  2933                           
  2934                           ;incstack = 0
  2935                           ;setRtc@direccion stored from wreg
  2936  00073C  6E21               	movwf	setRtc@direccion^0,c
  2937  00073E                     
  2938                           ;main.c: 130:     unsigned char dato;;main.c: 131:     char datoCapturado = 0;
  2939  00073E  0E00               	movlw	0
  2940  000740  6E23               	movwf	setRtc@datoCapturado^0,c
  2941                           
  2942                           ;main.c: 133:     for (int i = 0; i < 2; i++) {
  2943  000742  0E00               	movlw	0
  2944  000744  6E25               	movwf	(setRtc@i+1)^0,c
  2945  000746  0E00               	movlw	0
  2946  000748  6E24               	movwf	setRtc@i^0,c
  2947  00074A                     l1766:
  2948                           
  2949                           ;main.c: 134:         char Rx = UART_read();
  2950  00074A  ECB4  F007         	call	_UART_read	;wreg free
  2951  00074E  6E26               	movwf	setRtc@Rx^0,c
  2952  000750                     
  2953                           ;main.c: 135:         if (Rx >= 48 && Rx <= 57) {
  2954  000750  0E2F               	movlw	47
  2955  000752  6426               	cpfsgt	setRtc@Rx^0,c
  2956  000754  EFAE  F003         	goto	u721
  2957  000758  EFB0  F003         	goto	u720
  2958  00075C                     u721:
  2959  00075C  EFD4  F003         	goto	l1780
  2960  000760                     u720:
  2961  000760  0E3A               	movlw	58
  2962  000762  6026               	cpfslt	setRtc@Rx^0,c
  2963  000764  EFB6  F003         	goto	u731
  2964  000768  EFB8  F003         	goto	u730
  2965  00076C                     u731:
  2966  00076C  EFD4  F003         	goto	l1780
  2967  000770                     u730:
  2968  000770                     
  2969                           ;main.c: 136:             if (!i) {
  2970  000770  5024               	movf	setRtc@i^0,w,c
  2971  000772  1025               	iorwf	(setRtc@i+1)^0,w,c
  2972  000774  A4D8               	btfss	status,2,c
  2973  000776  EFBF  F003         	goto	u741
  2974  00077A  EFC1  F003         	goto	u740
  2975  00077E                     u741:
  2976  00077E  EFCC  F003         	goto	l1776
  2977  000782                     u740:
  2978  000782                     
  2979                           ;main.c: 137:                 dato = ((Rx - 48) & 0x0F) << 4;
  2980  000782  C026  F020         	movff	setRtc@Rx,??_setRtc
  2981  000786  0ED0               	movlw	208
  2982  000788  2620               	addwf	??_setRtc^0,f,c
  2983  00078A  0E0F               	movlw	15
  2984  00078C  1620               	andwf	??_setRtc^0,f,c
  2985  00078E  3820               	swapf	??_setRtc^0,w,c
  2986  000790  0BF0               	andlw	240
  2987  000792  6E22               	movwf	setRtc@dato^0,c
  2988                           
  2989                           ;main.c: 138:             } else {
  2990  000794  EFE4  F003         	goto	l1786
  2991  000798                     l1776:
  2992                           
  2993                           ;main.c: 139:                 dato |= (Rx - 48) & 0x0F;
  2994  000798  5026               	movf	setRtc@Rx^0,w,c
  2995  00079A  0FD0               	addlw	208
  2996  00079C  0B0F               	andlw	15
  2997  00079E  1222               	iorwf	setRtc@dato^0,f,c
  2998  0007A0                     
  2999                           ;main.c: 140:                 datoCapturado = 1;
  3000  0007A0  0E01               	movlw	1
  3001  0007A2  6E23               	movwf	setRtc@datoCapturado^0,c
  3002  0007A4  EFE4  F003         	goto	l1786
  3003  0007A8                     l1780:
  3004                           
  3005                           ;main.c: 143:             datoCapturado = 0;
  3006  0007A8  0E00               	movlw	0
  3007  0007AA  6E23               	movwf	setRtc@datoCapturado^0,c
  3008  0007AC                     
  3009                           ;main.c: 144:             UART_printf("\r\n Solo se permiten numeros \r\n");
  3010  0007AC  0E5C               	movlw	low STR_1
  3011  0007AE  6E1D               	movwf	UART_printf@cadena^0,c
  3012  0007B0  0E7F               	movlw	high STR_1
  3013  0007B2  6E1E               	movwf	(UART_printf@cadena+1)^0,c
  3014  0007B4  ECC2  F006         	call	_UART_printf	;wreg free
  3015  0007B8                     
  3016                           ;main.c: 145:             UART_printf("\r\n Vuelva a grabar los datos \r\n");
  3017  0007B8  0E1D               	movlw	low STR_2
  3018  0007BA  6E1D               	movwf	UART_printf@cadena^0,c
  3019  0007BC  0E7F               	movlw	high STR_2
  3020  0007BE  6E1E               	movwf	(UART_printf@cadena+1)^0,c
  3021  0007C0  ECC2  F006         	call	_UART_printf	;wreg free
  3022                           
  3023                           ;main.c: 146:             break;
  3024  0007C4  EFF4  F003         	goto	l1790
  3025  0007C8                     l1786:
  3026                           
  3027                           ;main.c: 148:     }
  3028  0007C8  4A24               	infsnz	setRtc@i^0,f,c
  3029  0007CA  2A25               	incf	(setRtc@i+1)^0,f,c
  3030  0007CC  BE25               	btfsc	(setRtc@i+1)^0,7,c
  3031  0007CE  EFF2  F003         	goto	u751
  3032  0007D2  5025               	movf	(setRtc@i+1)^0,w,c
  3033  0007D4  E109               	bnz	u750
  3034  0007D6  0E02               	movlw	2
  3035  0007D8  5C24               	subwf	setRtc@i^0,w,c
  3036  0007DA  A0D8               	btfss	status,0,c
  3037  0007DC  EFF2  F003         	goto	u751
  3038  0007E0  EFF4  F003         	goto	u750
  3039  0007E4                     u751:
  3040  0007E4  EFA5  F003         	goto	l1766
  3041  0007E8                     u750:
  3042  0007E8                     l1790:
  3043                           
  3044                           ;main.c: 150:     if (datoCapturado)
  3045  0007E8  5023               	movf	setRtc@datoCapturado^0,w,c
  3046  0007EA  B4D8               	btfsc	status,2,c
  3047  0007EC  EFFA  F003         	goto	u761
  3048  0007F0  EFFC  F003         	goto	u760
  3049  0007F4                     u761:
  3050  0007F4  EF01  F004         	goto	l183
  3051  0007F8                     u760:
  3052  0007F8                     
  3053                           ;main.c: 151:         escribe_rtc(direccion, dato);
  3054  0007F8  C022  F01E         	movff	setRtc@dato,escribe_rtc@dato
  3055  0007FC  5021               	movf	setRtc@direccion^0,w,c
  3056  0007FE  EC68  F007         	call	_escribe_rtc
  3057  000802                     l183:
  3058  000802  0012               	return		;funcret
  3059  000804                     __end_of_setRtc:
  3060                           	opt callstack 0
  3061                           
  3062 ;; *************** function _escribe_rtc *****************
  3063 ;; Defined at:
  3064 ;;		line 2 in file "./RTC.h"
  3065 ;; Parameters:    Size  Location     Type
  3066 ;;  direccion       1    wreg     unsigned char 
  3067 ;;  dato            1    2[COMRAM] unsigned char 
  3068 ;; Auto vars:     Size  Location     Type
  3069 ;;  direccion       1    3[COMRAM] unsigned char 
  3070 ;; Return value:  Size  Location     Type
  3071 ;;                  1    wreg      void 
  3072 ;; Registers used:
  3073 ;;		wreg, status,2, status,0, cstack
  3074 ;; Tracked objects:
  3075 ;;		On entry : 0/0
  3076 ;;		On exit  : 0/0
  3077 ;;		Unchanged: 0/0
  3078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3079 ;;      Params:         1       0       0       0       0       0       0       0       0
  3080 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3081 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3082 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3083 ;;Total ram usage:        2 bytes
  3084 ;; Hardware stack levels used:    1
  3085 ;; Hardware stack levels required when called:    3
  3086 ;; This function calls:
  3087 ;;		_i2c_detener
  3088 ;;		_i2c_envia_dato
  3089 ;;		_i2c_inicia_com
  3090 ;; This function is called by:
  3091 ;;		_setRtc
  3092 ;;		_fijaHoraRtc
  3093 ;;		_setRtcDefault
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           	psect	text15
  3098  000ED0                     __ptext15:
  3099                           	opt callstack 0
  3100  000ED0                     _escribe_rtc:
  3101                           	opt callstack 24
  3102                           
  3103                           ;incstack = 0
  3104                           ;escribe_rtc@direccion stored from wreg
  3105  000ED0  6E1F               	movwf	escribe_rtc@direccion^0,c
  3106  000ED2                     
  3107                           ;./RTC.h: 3:     i2c_inicia_com();
  3108  000ED2  ECCC  F007         	call	_i2c_inicia_com	;wreg free
  3109                           
  3110                           ;./RTC.h: 4:     i2c_envia_dato(0xD0);
  3111  000ED6  0ED0               	movlw	208
  3112  000ED8  ECBD  F007         	call	_i2c_envia_dato
  3113                           
  3114                           ;./RTC.h: 5:     i2c_envia_dato(direccion);
  3115  000EDC  501F               	movf	escribe_rtc@direccion^0,w,c
  3116  000EDE  ECBD  F007         	call	_i2c_envia_dato
  3117                           
  3118                           ;./RTC.h: 6:     i2c_envia_dato(dato);
  3119  000EE2  501E               	movf	escribe_rtc@dato^0,w,c
  3120  000EE4  ECBD  F007         	call	_i2c_envia_dato
  3121                           
  3122                           ;./RTC.h: 7:     i2c_detener();
  3123  000EE8  ECD0  F007         	call	_i2c_detener	;wreg free
  3124  000EEC  0012               	return		;funcret
  3125  000EEE                     __end_of_escribe_rtc:
  3126                           	opt callstack 0
  3127                           
  3128 ;; *************** function _asignarHorarios *****************
  3129 ;; Defined at:
  3130 ;;		line 307 in file "main.c"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;		None
  3133 ;; Auto vars:     Size  Location     Type
  3134 ;;  i               2   16[COMRAM] int 
  3135 ;;  Rx              1   18[COMRAM] unsigned char 
  3136 ;;  datoCapturad    1   15[COMRAM] unsigned char 
  3137 ;;  hora            1   14[COMRAM] unsigned char 
  3138 ;; Return value:  Size  Location     Type
  3139 ;;                  1    wreg      void 
  3140 ;; Registers used:
  3141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3142 ;; Tracked objects:
  3143 ;;		On entry : 0/0
  3144 ;;		On exit  : 0/0
  3145 ;;		Unchanged: 0/0
  3146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3147 ;;      Params:         0       0       0       0       0       0       0       0       0
  3148 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3149 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3150 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3151 ;;Total ram usage:        5 bytes
  3152 ;; Hardware stack levels used:    1
  3153 ;; Hardware stack levels required when called:    5
  3154 ;; This function calls:
  3155 ;;		_UART_printf
  3156 ;;		_UART_read
  3157 ;;		_escribeHorariosMemoria
  3158 ;; This function is called by:
  3159 ;;		_sistemaPrincipal
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163                           	psect	text16
  3164  000432                     __ptext16:
  3165                           	opt callstack 0
  3166  000432                     _asignarHorarios:
  3167                           	opt callstack 24
  3168  000432                     
  3169                           ;main.c: 309:     unsigned char hora;;main.c: 310:     unsigned char Rx;;main.c: 311:   
      +                            char datoCapturado = 0;
  3170  000432  0E00               	movlw	0
  3171  000434  6E2B               	movwf	asignarHorarios@datoCapturado^0,c
  3172  000436                     
  3173                           ;main.c: 313:     UART_printf("\r\n OPCIONES DE REGADO \r\n");
  3174  000436  0EB0               	movlw	low STR_7
  3175  000438  6E1D               	movwf	UART_printf@cadena^0,c
  3176  00043A  0E7F               	movlw	high STR_7
  3177  00043C  6E1E               	movwf	(UART_printf@cadena+1)^0,c
  3178  00043E  ECC2  F006         	call	_UART_printf	;wreg free
  3179  000442                     
  3180                           ;main.c: 314:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  3181  000442  0ED0               	movlw	low STR_8
  3182  000444  6E1D               	movwf	UART_printf@cadena^0,c
  3183  000446  0E7D               	movlw	high STR_8
  3184  000448  6E1E               	movwf	(UART_printf@cadena+1)^0,c
  3185  00044A  ECC2  F006         	call	_UART_printf	;wreg free
  3186                           
  3187                           ;main.c: 316:     for (int i = 0; i < 2; i++) {
  3188  00044E  0E00               	movlw	0
  3189  000450  6E2D               	movwf	(asignarHorarios@i+1)^0,c
  3190  000452  0E00               	movlw	0
  3191  000454  6E2C               	movwf	asignarHorarios@i^0,c
  3192  000456                     l1940:
  3193                           
  3194                           ;main.c: 317:         Rx = UART_read();
  3195  000456  ECB4  F007         	call	_UART_read	;wreg free
  3196  00045A  6E2E               	movwf	asignarHorarios@Rx^0,c
  3197  00045C                     
  3198                           ;main.c: 318:         if (Rx >= 48 && Rx <= 57) {
  3199  00045C  0E2F               	movlw	47
  3200  00045E  642E               	cpfsgt	asignarHorarios@Rx^0,c
  3201  000460  EF34  F002         	goto	u911
  3202  000464  EF36  F002         	goto	u910
  3203  000468                     u911:
  3204  000468  EF59  F002         	goto	l1960
  3205  00046C                     u910:
  3206  00046C  0E3A               	movlw	58
  3207  00046E  602E               	cpfslt	asignarHorarios@Rx^0,c
  3208  000470  EF3C  F002         	goto	u921
  3209  000474  EF3E  F002         	goto	u920
  3210  000478                     u921:
  3211  000478  EF59  F002         	goto	l1960
  3212  00047C                     u920:
  3213  00047C                     
  3214                           ;main.c: 319:             if (!i) {
  3215  00047C  502C               	movf	asignarHorarios@i^0,w,c
  3216  00047E  102D               	iorwf	(asignarHorarios@i+1)^0,w,c
  3217  000480  A4D8               	btfss	status,2,c
  3218  000482  EF45  F002         	goto	u931
  3219  000486  EF47  F002         	goto	u930
  3220  00048A                     u931:
  3221  00048A  EF51  F002         	goto	l1954
  3222  00048E                     u930:
  3223  00048E                     
  3224                           ;main.c: 320:                 Rx -= 48;
  3225  00048E  0E30               	movlw	48
  3226  000490  5E2E               	subwf	asignarHorarios@Rx^0,f,c
  3227  000492                     
  3228                           ;main.c: 321:                 hora = Rx;
  3229  000492  C02E  F02A         	movff	asignarHorarios@Rx,asignarHorarios@hora
  3230  000496                     
  3231                           ;main.c: 322:                 hora *= 10;
  3232  000496  0E0A               	movlw	10
  3233  000498  022A               	mulwf	asignarHorarios@hora^0,c
  3234  00049A  50F3               	movf	prodl,w,c
  3235  00049C  6E2A               	movwf	asignarHorarios@hora^0,c
  3236                           
  3237                           ;main.c: 323:             } else {
  3238  00049E  EF69  F002         	goto	l1966
  3239  0004A2                     l1954:
  3240                           
  3241                           ;main.c: 324:                 datoCapturado = 1;
  3242  0004A2  0E01               	movlw	1
  3243  0004A4  6E2B               	movwf	asignarHorarios@datoCapturado^0,c
  3244  0004A6                     
  3245                           ;main.c: 325:                 Rx -= 48;
  3246  0004A6  0E30               	movlw	48
  3247  0004A8  5E2E               	subwf	asignarHorarios@Rx^0,f,c
  3248  0004AA                     
  3249                           ;main.c: 326:                 hora += Rx;
  3250  0004AA  502E               	movf	asignarHorarios@Rx^0,w,c
  3251  0004AC  262A               	addwf	asignarHorarios@hora^0,f,c
  3252  0004AE  EF69  F002         	goto	l1966
  3253  0004B2                     l1960:
  3254                           
  3255                           ;main.c: 329:             datoCapturado = 0;
  3256  0004B2  0E00               	movlw	0
  3257  0004B4  6E2B               	movwf	asignarHorarios@datoCapturado^0,c
  3258  0004B6                     
  3259                           ;main.c: 330:             UART_printf("\r\n Solo se permiten numeros \r\n");
  3260  0004B6  0E5C               	movlw	low STR_1
  3261  0004B8  6E1D               	movwf	UART_printf@cadena^0,c
  3262  0004BA  0E7F               	movlw	high STR_1
  3263  0004BC  6E1E               	movwf	(UART_printf@cadena+1)^0,c
  3264  0004BE  ECC2  F006         	call	_UART_printf	;wreg free
  3265  0004C2                     
  3266                           ;main.c: 331:             UART_printf("\r\n Vuelva a grabar los datos \r\n");
  3267  0004C2  0E1D               	movlw	low STR_2
  3268  0004C4  6E1D               	movwf	UART_printf@cadena^0,c
  3269  0004C6  0E7F               	movlw	high STR_2
  3270  0004C8  6E1E               	movwf	(UART_printf@cadena+1)^0,c
  3271  0004CA  ECC2  F006         	call	_UART_printf	;wreg free
  3272                           
  3273                           ;main.c: 332:             break;
  3274  0004CE  EF79  F002         	goto	l1970
  3275  0004D2                     l1966:
  3276                           
  3277                           ;main.c: 334:     }
  3278  0004D2  4A2C               	infsnz	asignarHorarios@i^0,f,c
  3279  0004D4  2A2D               	incf	(asignarHorarios@i+1)^0,f,c
  3280  0004D6  BE2D               	btfsc	(asignarHorarios@i+1)^0,7,c
  3281  0004D8  EF77  F002         	goto	u941
  3282  0004DC  502D               	movf	(asignarHorarios@i+1)^0,w,c
  3283  0004DE  E109               	bnz	u940
  3284  0004E0  0E02               	movlw	2
  3285  0004E2  5C2C               	subwf	asignarHorarios@i^0,w,c
  3286  0004E4  A0D8               	btfss	status,0,c
  3287  0004E6  EF77  F002         	goto	u941
  3288  0004EA  EF79  F002         	goto	u940
  3289  0004EE                     u941:
  3290  0004EE  EF2B  F002         	goto	l1940
  3291  0004F2                     u940:
  3292  0004F2                     l1970:
  3293                           
  3294                           ;main.c: 336:     if (datoCapturado) {
  3295  0004F2  502B               	movf	asignarHorarios@datoCapturado^0,w,c
  3296  0004F4  B4D8               	btfsc	status,2,c
  3297  0004F6  EF7F  F002         	goto	u951
  3298  0004FA  EF81  F002         	goto	u950
  3299  0004FE                     u951:
  3300  0004FE  EFB0  F002         	goto	l240
  3301  000502                     u950:
  3302  000502                     
  3303                           ;main.c: 338:         UART_printf("\r\n Ingrese 1 para regar || ingrese 0 para no regar:
      +                           \r\n");
  3304  000502  0E99               	movlw	low STR_11
  3305  000504  6E1D               	movwf	UART_printf@cadena^0,c
  3306  000506  0E7D               	movlw	high STR_11
  3307  000508  6E1E               	movwf	(UART_printf@cadena+1)^0,c
  3308  00050A  ECC2  F006         	call	_UART_printf	;wreg free
  3309  00050E                     
  3310                           ;main.c: 340:         Rx = UART_read();
  3311  00050E  ECB4  F007         	call	_UART_read	;wreg free
  3312  000512  6E2E               	movwf	asignarHorarios@Rx^0,c
  3313  000514                     
  3314                           ;main.c: 341:         Rx -= 48;
  3315  000514  0E30               	movlw	48
  3316  000516  5E2E               	subwf	asignarHorarios@Rx^0,f,c
  3317  000518                     
  3318                           ;main.c: 343:         if (Rx != 1 && Rx != 0)
  3319  000518  042E               	decf	asignarHorarios@Rx^0,w,c
  3320  00051A  B4D8               	btfsc	status,2,c
  3321  00051C  EF92  F002         	goto	u961
  3322  000520  EF94  F002         	goto	u960
  3323  000524                     u961:
  3324  000524  EF9E  F002         	goto	l1984
  3325  000528                     u960:
  3326  000528  502E               	movf	asignarHorarios@Rx^0,w,c
  3327  00052A  B4D8               	btfsc	status,2,c
  3328  00052C  EF9A  F002         	goto	u971
  3329  000530  EF9C  F002         	goto	u970
  3330  000534                     u971:
  3331  000534  EF9E  F002         	goto	l1984
  3332  000538                     u970:
  3333  000538                     
  3334                           ;main.c: 344:             Rx = 0;
  3335  000538  0E00               	movlw	0
  3336  00053A  6E2E               	movwf	asignarHorarios@Rx^0,c
  3337  00053C                     l1984:
  3338                           
  3339                           ;main.c: 346:         UART_printf("\r\n Horario Modificado! \r\n");
  3340  00053C  0E96               	movlw	low STR_12
  3341  00053E  6E1D               	movwf	UART_printf@cadena^0,c
  3342  000540  0E7F               	movlw	high STR_12
  3343  000542  6E1E               	movwf	(UART_printf@cadena+1)^0,c
  3344  000544  ECC2  F006         	call	_UART_printf	;wreg free
  3345  000548                     
  3346                           ;main.c: 348:         horarios[hora].regar = Rx;
  3347  000548  502A               	movf	asignarHorarios@hora^0,w,c
  3348  00054A  0D03               	mullw	3
  3349  00054C  0E61               	movlw	low (_horarios+1)
  3350  00054E  24F3               	addwf	243,w,c
  3351  000550  6ED9               	movwf	fsr2l,c
  3352  000552  0E00               	movlw	high (_horarios+1)
  3353  000554  20F4               	addwfc	prodh,w,c
  3354  000556  6EDA               	movwf	fsr2h,c
  3355  000558  C02E  FFDF         	movff	asignarHorarios@Rx,indf2
  3356  00055C                     
  3357                           ;main.c: 350:         escribeHorariosMemoria();
  3358  00055C  EC37  F003         	call	_escribeHorariosMemoria	;wreg free
  3359  000560                     l240:
  3360  000560  0012               	return		;funcret
  3361  000562                     __end_of_asignarHorarios:
  3362                           	opt callstack 0
  3363                           
  3364 ;; *************** function _escribeHorariosMemoria *****************
  3365 ;; Defined at:
  3366 ;;		line 183 in file "main.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;		None
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;  i               2   12[COMRAM] int 
  3371 ;;  contMemoria     2   10[COMRAM] int 
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  1    wreg      void 
  3374 ;; Registers used:
  3375 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3381 ;;      Params:         0       0       0       0       0       0       0       0       0
  3382 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3383 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3384 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3385 ;;Total ram usage:        4 bytes
  3386 ;; Hardware stack levels used:    1
  3387 ;; Hardware stack levels required when called:    4
  3388 ;; This function calls:
  3389 ;;		___wmul
  3390 ;;		_escribe_eeprom
  3391 ;; This function is called by:
  3392 ;;		_asignarHorarios
  3393 ;;		_setTiempoRegar
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397                           	psect	text17
  3398  00066E                     __ptext17:
  3399                           	opt callstack 0
  3400  00066E                     _escribeHorariosMemoria:
  3401                           	opt callstack 24
  3402  00066E                     
  3403                           ;main.c: 185:     int contMemoria = 0;
  3404  00066E  0E00               	movlw	0
  3405  000670  6E27               	movwf	(escribeHorariosMemoria@contMemoria+1)^0,c
  3406  000672  0E00               	movlw	0
  3407  000674  6E26               	movwf	escribeHorariosMemoria@contMemoria^0,c
  3408                           
  3409                           ;main.c: 186:     for (int i = 0; i < 24; i++) {
  3410  000676  0E00               	movlw	0
  3411  000678  6E29               	movwf	(escribeHorariosMemoria@i+1)^0,c
  3412  00067A  0E00               	movlw	0
  3413  00067C  6E28               	movwf	escribeHorariosMemoria@i^0,c
  3414  00067E                     l1800:
  3415                           
  3416                           ;main.c: 187:         escribe_eeprom(contMemoria++, horarios[i].hora);
  3417  00067E  C026  F022         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  3418  000682  C027  F023         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  3419  000686  C028  F01C         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  3420  00068A  C029  F01D         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  3421  00068E  0E00               	movlw	0
  3422  000690  6E1F               	movwf	(___wmul@multiplicand+1)^0,c
  3423  000692  0E03               	movlw	3
  3424  000694  6E1E               	movwf	___wmul@multiplicand^0,c
  3425  000696  EC45  F007         	call	___wmul	;wreg free
  3426  00069A  0E60               	movlw	low _horarios
  3427  00069C  241C               	addwf	?___wmul^0,w,c
  3428  00069E  6ED9               	movwf	fsr2l,c
  3429  0006A0  0E00               	movlw	high _horarios
  3430  0006A2  201D               	addwfc	(?___wmul+1)^0,w,c
  3431  0006A4  6EDA               	movwf	fsr2h,c
  3432  0006A6  50DF               	movf	indf2,w,c
  3433  0006A8  6E24               	movwf	escribe_eeprom@dato^0,c
  3434  0006AA  ECDD  F006         	call	_escribe_eeprom	;wreg free
  3435  0006AE  4A26               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  3436  0006B0  2A27               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  3437  0006B2                     
  3438                           ;main.c: 188:         escribe_eeprom(contMemoria++, horarios[i].regar);
  3439  0006B2  C026  F022         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  3440  0006B6  C027  F023         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  3441  0006BA  C028  F01C         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  3442  0006BE  C029  F01D         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  3443  0006C2  0E00               	movlw	0
  3444  0006C4  6E1F               	movwf	(___wmul@multiplicand+1)^0,c
  3445  0006C6  0E03               	movlw	3
  3446  0006C8  6E1E               	movwf	___wmul@multiplicand^0,c
  3447  0006CA  EC45  F007         	call	___wmul	;wreg free
  3448  0006CE  0E61               	movlw	low (_horarios+1)
  3449  0006D0  241C               	addwf	?___wmul^0,w,c
  3450  0006D2  6ED9               	movwf	fsr2l,c
  3451  0006D4  0E00               	movlw	high (_horarios+1)
  3452  0006D6  201D               	addwfc	(?___wmul+1)^0,w,c
  3453  0006D8  6EDA               	movwf	fsr2h,c
  3454  0006DA  50DF               	movf	indf2,w,c
  3455  0006DC  6E24               	movwf	escribe_eeprom@dato^0,c
  3456  0006DE  ECDD  F006         	call	_escribe_eeprom	;wreg free
  3457  0006E2  4A26               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  3458  0006E4  2A27               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  3459  0006E6                     
  3460                           ;main.c: 189:         escribe_eeprom(contMemoria++, horarios[i].tiempoRegar);
  3461  0006E6  C026  F022         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  3462  0006EA  C027  F023         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  3463  0006EE  C028  F01C         	movff	escribeHorariosMemoria@i,___wmul@multiplier
  3464  0006F2  C029  F01D         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
  3465  0006F6  0E00               	movlw	0
  3466  0006F8  6E1F               	movwf	(___wmul@multiplicand+1)^0,c
  3467  0006FA  0E03               	movlw	3
  3468  0006FC  6E1E               	movwf	___wmul@multiplicand^0,c
  3469  0006FE  EC45  F007         	call	___wmul	;wreg free
  3470  000702  0E62               	movlw	low (_horarios+2)
  3471  000704  241C               	addwf	?___wmul^0,w,c
  3472  000706  6ED9               	movwf	fsr2l,c
  3473  000708  0E00               	movlw	high (_horarios+2)
  3474  00070A  201D               	addwfc	(?___wmul+1)^0,w,c
  3475  00070C  6EDA               	movwf	fsr2h,c
  3476  00070E  50DF               	movf	indf2,w,c
  3477  000710  6E24               	movwf	escribe_eeprom@dato^0,c
  3478  000712  ECDD  F006         	call	_escribe_eeprom	;wreg free
  3479  000716  4A26               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  3480  000718  2A27               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  3481  00071A                     
  3482                           ;main.c: 190:     }
  3483  00071A  4A28               	infsnz	escribeHorariosMemoria@i^0,f,c
  3484  00071C  2A29               	incf	(escribeHorariosMemoria@i+1)^0,f,c
  3485  00071E  BE29               	btfsc	(escribeHorariosMemoria@i+1)^0,7,c
  3486  000720  EF9B  F003         	goto	u771
  3487  000724  5029               	movf	(escribeHorariosMemoria@i+1)^0,w,c
  3488  000726  E109               	bnz	u770
  3489  000728  0E18               	movlw	24
  3490  00072A  5C28               	subwf	escribeHorariosMemoria@i^0,w,c
  3491  00072C  A0D8               	btfss	status,0,c
  3492  00072E  EF9B  F003         	goto	u771
  3493  000732  EF9D  F003         	goto	u770
  3494  000736                     u771:
  3495  000736  EF3F  F003         	goto	l1800
  3496  00073A                     u770:
  3497  00073A  0012               	return		;funcret
  3498  00073C                     __end_of_escribeHorariosMemoria:
  3499                           	opt callstack 0
  3500                           
  3501 ;; *************** function _escribe_eeprom *****************
  3502 ;; Defined at:
  3503 ;;		line 154 in file "main.c"
  3504 ;; Parameters:    Size  Location     Type
  3505 ;;  direccion       2    6[COMRAM] unsigned short 
  3506 ;;  dato            1    8[COMRAM] unsigned char 
  3507 ;; Auto vars:     Size  Location     Type
  3508 ;;		None
  3509 ;; Return value:  Size  Location     Type
  3510 ;;                  1    wreg      void 
  3511 ;; Registers used:
  3512 ;;		wreg, status,2, status,0, cstack
  3513 ;; Tracked objects:
  3514 ;;		On entry : 0/0
  3515 ;;		On exit  : 0/0
  3516 ;;		Unchanged: 0/0
  3517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3518 ;;      Params:         3       0       0       0       0       0       0       0       0
  3519 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3520 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3521 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3522 ;;Total ram usage:        4 bytes
  3523 ;; Hardware stack levels used:    1
  3524 ;; Hardware stack levels required when called:    3
  3525 ;; This function calls:
  3526 ;;		_i2c_detener
  3527 ;;		_i2c_envia_dato
  3528 ;;		_i2c_inicia_com
  3529 ;; This function is called by:
  3530 ;;		_escribeHorariosMemoria
  3531 ;; This function uses a non-reentrant model
  3532 ;;
  3533                           
  3534                           	psect	text18
  3535  000DBA                     __ptext18:
  3536                           	opt callstack 0
  3537  000DBA                     _escribe_eeprom:
  3538                           	opt callstack 24
  3539  000DBA                     
  3540                           ;main.c: 155:     i2c_inicia_com();
  3541  000DBA  ECCC  F007         	call	_i2c_inicia_com	;wreg free
  3542                           
  3543                           ;main.c: 156:     i2c_envia_dato(0xAE);
  3544  000DBE  0EAE               	movlw	174
  3545  000DC0  ECBD  F007         	call	_i2c_envia_dato
  3546                           
  3547                           ;main.c: 157:     i2c_envia_dato(direccion >> 8);
  3548  000DC4  5023               	movf	(escribe_eeprom@direccion+1)^0,w,c
  3549  000DC6  ECBD  F007         	call	_i2c_envia_dato
  3550                           
  3551                           ;main.c: 159:     i2c_envia_dato(direccion);
  3552  000DCA  5022               	movf	escribe_eeprom@direccion^0,w,c
  3553  000DCC  ECBD  F007         	call	_i2c_envia_dato
  3554                           
  3555                           ;main.c: 161:     i2c_envia_dato(dato);
  3556  000DD0  5024               	movf	escribe_eeprom@dato^0,w,c
  3557  000DD2  ECBD  F007         	call	_i2c_envia_dato
  3558                           
  3559                           ;main.c: 162:     i2c_detener();
  3560  000DD6  ECD0  F007         	call	_i2c_detener	;wreg free
  3561  000DDA                     
  3562                           ;main.c: 163:     _delay((unsigned long)((10)*(4000000/4000.0)));
  3563  000DDA  0E0D               	movlw	13
  3564  000DDC  6E25               	movwf	??_escribe_eeprom^0,c
  3565  000DDE  0EFC               	movlw	252
  3566  000DE0                     u1297:
  3567  000DE0  2EE8               	decfsz	wreg,f,c
  3568  000DE2  D7FE               	bra	u1297
  3569  000DE4  2E25               	decfsz	??_escribe_eeprom^0,f,c
  3570  000DE6  D7FC               	bra	u1297
  3571  000DE8  0012               	return		;funcret
  3572  000DEA                     __end_of_escribe_eeprom:
  3573                           	opt callstack 0
  3574                           
  3575 ;; *************** function _UART_read *****************
  3576 ;; Defined at:
  3577 ;;		line 28 in file "./UART.h"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;		None
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;		None
  3582 ;; Return value:  Size  Location     Type
  3583 ;;                  1    wreg      unsigned char 
  3584 ;; Registers used:
  3585 ;;		wreg, status,2
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3591 ;;      Params:         0       0       0       0       0       0       0       0       0
  3592 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3593 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3594 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3595 ;;Total ram usage:        0 bytes
  3596 ;; Hardware stack levels used:    1
  3597 ;; Hardware stack levels required when called:    1
  3598 ;; This function calls:
  3599 ;;		Nothing
  3600 ;; This function is called by:
  3601 ;;		_setRtc
  3602 ;;		_asignarHorarios
  3603 ;;		_setTiempoRegar
  3604 ;;		_lecturaWifi
  3605 ;; This function uses a non-reentrant model
  3606 ;;
  3607                           
  3608                           	psect	text19
  3609  000F68                     __ptext19:
  3610                           	opt callstack 0
  3611  000F68                     _UART_read:
  3612                           	opt callstack 27
  3613  000F68                     l105:
  3614  000F68  AA9E               	btfss	158,5,c	;volatile
  3615  000F6A  EFB9  F007         	goto	u681
  3616  000F6E  EFBB  F007         	goto	u680
  3617  000F72                     u681:
  3618  000F72  EFB4  F007         	goto	l105
  3619  000F76                     u680:
  3620  000F76                     
  3621                           ;./UART.h: 32:     return RCREG;
  3622  000F76  50AE               	movf	174,w,c	;volatile
  3623  000F78  0012               	return		;funcret
  3624  000F7A                     __end_of_UART_read:
  3625                           	opt callstack 0
  3626                           
  3627 ;; *************** function _UART_printf *****************
  3628 ;; Defined at:
  3629 ;;		line 40 in file "./UART.h"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;  cadena          2    1[COMRAM] PTR unsigned char 
  3632 ;;		 -> STR_27(42), STR_26(3), STR_25(14), STR_24(49), 
  3633 ;;		 -> STR_23(37), STR_22(27), STR_21(37), STR_20(37), 
  3634 ;;		 -> STR_19(32), STR_18(31), STR_17(72), STR_16(32), 
  3635 ;;		 -> STR_15(31), STR_14(51), STR_13(23), STR_12(26), 
  3636 ;;		 -> STR_11(55), STR_10(32), STR_9(31), STR_8(51), 
  3637 ;;		 -> STR_7(25), STR_6(37), STR_5(31), STR_4(43), 
  3638 ;;		 -> STR_3(16), STR_2(32), STR_1(31), 
  3639 ;; Auto vars:     Size  Location     Type
  3640 ;;		None
  3641 ;; Return value:  Size  Location     Type
  3642 ;;                  1    wreg      void 
  3643 ;; Registers used:
  3644 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3645 ;; Tracked objects:
  3646 ;;		On entry : 0/0
  3647 ;;		On exit  : 0/0
  3648 ;;		Unchanged: 0/0
  3649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3650 ;;      Params:         2       0       0       0       0       0       0       0       0
  3651 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3652 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3653 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3654 ;;Total ram usage:        2 bytes
  3655 ;; Hardware stack levels used:    1
  3656 ;; Hardware stack levels required when called:    2
  3657 ;; This function calls:
  3658 ;;		_UART_write
  3659 ;; This function is called by:
  3660 ;;		_setRtc
  3661 ;;		_fijaHoraRtc
  3662 ;;		_asignarHorarios
  3663 ;;		_setTiempoRegar
  3664 ;;		_mostrarMenu
  3665 ;;		_sistemaPrincipal
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           
  3669                           	psect	text20
  3670  000D84                     __ptext20:
  3671                           	opt callstack 0
  3672  000D84                     _UART_printf:
  3673                           	opt callstack 26
  3674  000D84                     
  3675                           ;./UART.h: 41:     while (*cadena) {
  3676  000D84  EFCE  F006         	goto	l1728
  3677  000D88                     l1724:
  3678                           
  3679                           ;./UART.h: 42:         UART_write(*cadena++);
  3680  000D88  C01D  FFF6         	movff	UART_printf@cadena,tblptrl
  3681  000D8C  C01E  FFF7         	movff	UART_printf@cadena+1,tblptrh
  3682  000D90                     	if	0	;tblptru may be non-zero
  3683  000D90                     	endif
  3684  000D90                     	if	0	;tblptru may be non-zero
  3685  000D90                     	endif
  3686  000D90  0008               	tblrd		*
  3687  000D92  50F5               	movf	tablat,w,c
  3688  000D94  EC9E  F007         	call	_UART_write
  3689  000D98  4A1D               	infsnz	UART_printf@cadena^0,f,c
  3690  000D9A  2A1E               	incf	(UART_printf@cadena+1)^0,f,c
  3691  000D9C                     l1728:
  3692                           
  3693                           ;./UART.h: 41:     while (*cadena) {
  3694  000D9C  C01D  FFF6         	movff	UART_printf@cadena,tblptrl
  3695  000DA0  C01E  FFF7         	movff	UART_printf@cadena+1,tblptrh
  3696  000DA4                     	if	0	;tblptru may be non-zero
  3697  000DA4                     	endif
  3698  000DA4                     	if	0	;tblptru may be non-zero
  3699  000DA4                     	endif
  3700  000DA4  0008               	tblrd		*
  3701  000DA6  50F5               	movf	tablat,w,c
  3702  000DA8  0900               	iorlw	0
  3703  000DAA  A4D8               	btfss	status,2,c
  3704  000DAC  EFDA  F006         	goto	u691
  3705  000DB0  EFDC  F006         	goto	u690
  3706  000DB4                     u691:
  3707  000DB4  EFC4  F006         	goto	l1724
  3708  000DB8                     u690:
  3709  000DB8  0012               	return		;funcret
  3710  000DBA                     __end_of_UART_printf:
  3711                           	opt callstack 0
  3712                           
  3713 ;; *************** function _UART_write *****************
  3714 ;; Defined at:
  3715 ;;		line 35 in file "./UART.h"
  3716 ;; Parameters:    Size  Location     Type
  3717 ;;  dato            1    wreg     unsigned char 
  3718 ;; Auto vars:     Size  Location     Type
  3719 ;;  dato            1    0[COMRAM] unsigned char 
  3720 ;; Return value:  Size  Location     Type
  3721 ;;                  1    wreg      void 
  3722 ;; Registers used:
  3723 ;;		wreg
  3724 ;; Tracked objects:
  3725 ;;		On entry : 0/0
  3726 ;;		On exit  : 0/0
  3727 ;;		Unchanged: 0/0
  3728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3729 ;;      Params:         0       0       0       0       0       0       0       0       0
  3730 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3731 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3732 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3733 ;;Total ram usage:        1 bytes
  3734 ;; Hardware stack levels used:    1
  3735 ;; Hardware stack levels required when called:    1
  3736 ;; This function calls:
  3737 ;;		Nothing
  3738 ;; This function is called by:
  3739 ;;		_UART_printf
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742                           
  3743                           	psect	text21
  3744  000F3C                     __ptext21:
  3745                           	opt callstack 0
  3746  000F3C                     _UART_write:
  3747                           	opt callstack 26
  3748                           
  3749                           ;incstack = 0
  3750                           ;UART_write@dato stored from wreg
  3751  000F3C  6E1C               	movwf	UART_write@dato^0,c
  3752  000F3E                     
  3753                           ;./UART.h: 36:     TXREG = dato;
  3754  000F3E  C01C  FFAD         	movff	UART_write@dato,4013	;volatile
  3755  000F42                     l111:
  3756  000F42  A2AC               	btfss	172,1,c	;volatile
  3757  000F44  EFA6  F007         	goto	u671
  3758  000F48  EFA8  F007         	goto	u670
  3759  000F4C                     u671:
  3760  000F4C  EFA1  F007         	goto	l111
  3761  000F50                     u670:
  3762  000F50  0012               	return		;funcret
  3763  000F52                     __end_of_UART_write:
  3764                           	opt callstack 0
  3765                           
  3766 ;; *************** function _restablecerDatosSensor *****************
  3767 ;; Defined at:
  3768 ;;		line 443 in file "main.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;		None
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;  i               2    4[COMRAM] int 
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  1    wreg      void 
  3775 ;; Registers used:
  3776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3782 ;;      Params:         0       0       0       0       0       0       0       0       0
  3783 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3784 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3785 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3786 ;;Total ram usage:        2 bytes
  3787 ;; Hardware stack levels used:    1
  3788 ;; Hardware stack levels required when called:    2
  3789 ;; This function calls:
  3790 ;;		_constructorSensor
  3791 ;; This function is called by:
  3792 ;;		_main
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796                           	psect	text22
  3797  000BBA                     __ptext22:
  3798                           	opt callstack 0
  3799  000BBA                     _restablecerDatosSensor:
  3800                           	opt callstack 28
  3801  000BBA                     
  3802                           ;main.c: 444:     for (int i = 0; i < 3; i++)
  3803  000BBA  0E00               	movlw	0
  3804  000BBC  6E21               	movwf	(restablecerDatosSensor@i+1)^0,c
  3805  000BBE  0E00               	movlw	0
  3806  000BC0  6E20               	movwf	restablecerDatosSensor@i^0,c
  3807  000BC2                     l2202:
  3808                           
  3809                           ;main.c: 445:         constructorSensor(sensores[i], 0, i);
  3810  000BC2  90D8               	bcf	status,0,c
  3811  000BC4  3420               	rlcf	restablecerDatosSensor@i^0,w,c
  3812  000BC6  6ED9               	movwf	fsr2l,c
  3813  000BC8  3421               	rlcf	(restablecerDatosSensor@i+1)^0,w,c
  3814  000BCA  6EDA               	movwf	fsr2h,c
  3815  000BCC  0E01               	movlw	low _sensores
  3816  000BCE  26D9               	addwf	fsr2l,f,c
  3817  000BD0  0E00               	movlw	high _sensores
  3818  000BD2  22DA               	addwfc	fsr2h,f,c
  3819  000BD4  CFDE F01C          	movff	postinc2,constructorSensor@s
  3820  000BD8  CFDD F01D          	movff	postdec2,constructorSensor@s+1
  3821  000BDC  0E00               	movlw	0
  3822  000BDE  6E1E               	movwf	constructorSensor@humedad^0,c
  3823  000BE0  C020  F01F         	movff	restablecerDatosSensor@i,constructorSensor@pin
  3824  000BE4  ECC3  F007         	call	_constructorSensor	;wreg free
  3825  000BE8  4A20               	infsnz	restablecerDatosSensor@i^0,f,c
  3826  000BEA  2A21               	incf	(restablecerDatosSensor@i+1)^0,f,c
  3827  000BEC  BE21               	btfsc	(restablecerDatosSensor@i+1)^0,7,c
  3828  000BEE  EF02  F006         	goto	u1171
  3829  000BF2  5021               	movf	(restablecerDatosSensor@i+1)^0,w,c
  3830  000BF4  E109               	bnz	u1170
  3831  000BF6  0E03               	movlw	3
  3832  000BF8  5C20               	subwf	restablecerDatosSensor@i^0,w,c
  3833  000BFA  A0D8               	btfss	status,0,c
  3834  000BFC  EF02  F006         	goto	u1171
  3835  000C00  EF04  F006         	goto	u1170
  3836  000C04                     u1171:
  3837  000C04  EFE1  F005         	goto	l2202
  3838  000C08                     u1170:
  3839  000C08  0012               	return		;funcret
  3840  000C0A                     __end_of_restablecerDatosSensor:
  3841                           	opt callstack 0
  3842                           
  3843 ;; *************** function _constructorSensor *****************
  3844 ;; Defined at:
  3845 ;;		line 87 in file "main.c"
  3846 ;; Parameters:    Size  Location     Type
  3847 ;;  s               2    0[COMRAM] struct .
  3848 ;;  humedad         1    2[COMRAM] unsigned char 
  3849 ;;  pin             1    3[COMRAM] unsigned char 
  3850 ;; Auto vars:     Size  Location     Type
  3851 ;;		None
  3852 ;; Return value:  Size  Location     Type
  3853 ;;                  1    wreg      void 
  3854 ;; Registers used:
  3855 ;;		None
  3856 ;; Tracked objects:
  3857 ;;		On entry : 0/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3861 ;;      Params:         4       0       0       0       0       0       0       0       0
  3862 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3863 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3864 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3865 ;;Total ram usage:        4 bytes
  3866 ;; Hardware stack levels used:    1
  3867 ;; Hardware stack levels required when called:    1
  3868 ;; This function calls:
  3869 ;;		Nothing
  3870 ;; This function is called by:
  3871 ;;		_restablecerDatosSensor
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874                           
  3875                           	psect	text23
  3876  000F86                     __ptext23:
  3877                           	opt callstack 0
  3878  000F86                     _constructorSensor:
  3879                           	opt callstack 28
  3880  000F86                     
  3881                           ;main.c: 89:     s.humedadMedida = humedad;
  3882  000F86  C01E  F01C         	movff	constructorSensor@humedad,constructorSensor@s
  3883                           
  3884                           ;main.c: 90:     s.pinSensor = pin;
  3885  000F8A  C01F  F01D         	movff	constructorSensor@pin,constructorSensor@s+1
  3886  000F8E  0012               	return		;funcret
  3887  000F90                     __end_of_constructorSensor:
  3888                           	opt callstack 0
  3889                           
  3890 ;; *************** function _leeHorariosMemoria *****************
  3891 ;; Defined at:
  3892 ;;		line 193 in file "main.c"
  3893 ;; Parameters:    Size  Location     Type
  3894 ;;		None
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;  i               2    8[COMRAM] int 
  3897 ;;  contMemoria     2    6[COMRAM] int 
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  1    wreg      void 
  3900 ;; Registers used:
  3901 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3907 ;;      Params:         0       0       0       0       0       0       0       0       0
  3908 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3909 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3910 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3911 ;;Total ram usage:        4 bytes
  3912 ;; Hardware stack levels used:    1
  3913 ;; Hardware stack levels required when called:    4
  3914 ;; This function calls:
  3915 ;;		___wmul
  3916 ;;		_leer_eeprom
  3917 ;; This function is called by:
  3918 ;;		_main
  3919 ;; This function uses a non-reentrant model
  3920 ;;
  3921                           
  3922                           	psect	text24
  3923  000804                     __ptext24:
  3924                           	opt callstack 0
  3925  000804                     _leeHorariosMemoria:
  3926                           	opt callstack 26
  3927  000804                     
  3928                           ;main.c: 195:     int contMemoria = 0;
  3929  000804  0E00               	movlw	0
  3930  000806  6E23               	movwf	(leeHorariosMemoria@contMemoria+1)^0,c
  3931  000808  0E00               	movlw	0
  3932  00080A  6E22               	movwf	leeHorariosMemoria@contMemoria^0,c
  3933                           
  3934                           ;main.c: 197:     for (int i = 0; i < 24; i++) {
  3935  00080C  0E00               	movlw	0
  3936  00080E  6E25               	movwf	(leeHorariosMemoria@i+1)^0,c
  3937  000810  0E00               	movlw	0
  3938  000812  6E24               	movwf	leeHorariosMemoria@i^0,c
  3939  000814                     l2182:
  3940                           
  3941                           ;main.c: 198:         horarios[i].hora = leer_eeprom(contMemoria++);
  3942  000814  C024  F01C         	movff	leeHorariosMemoria@i,___wmul@multiplier
  3943  000818  C025  F01D         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  3944  00081C  0E00               	movlw	0
  3945  00081E  6E1F               	movwf	(___wmul@multiplicand+1)^0,c
  3946  000820  0E03               	movlw	3
  3947  000822  6E1E               	movwf	___wmul@multiplicand^0,c
  3948  000824  EC45  F007         	call	___wmul	;wreg free
  3949  000828  0E60               	movlw	low _horarios
  3950  00082A  241C               	addwf	?___wmul^0,w,c
  3951  00082C  6ED9               	movwf	fsr2l,c
  3952  00082E  0E00               	movlw	high _horarios
  3953  000830  201D               	addwfc	(?___wmul+1)^0,w,c
  3954  000832  6EDA               	movwf	fsr2h,c
  3955  000834  C022  F01E         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  3956  000838  C023  F01F         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  3957  00083C  EC6D  F006         	call	_leer_eeprom	;wreg free
  3958  000840  6EDF               	movwf	indf2,c
  3959  000842  4A22               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  3960  000844  2A23               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  3961  000846                     
  3962                           ;main.c: 199:         horarios[i].regar = leer_eeprom(contMemoria++);
  3963  000846  C024  F01C         	movff	leeHorariosMemoria@i,___wmul@multiplier
  3964  00084A  C025  F01D         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  3965  00084E  0E00               	movlw	0
  3966  000850  6E1F               	movwf	(___wmul@multiplicand+1)^0,c
  3967  000852  0E03               	movlw	3
  3968  000854  6E1E               	movwf	___wmul@multiplicand^0,c
  3969  000856  EC45  F007         	call	___wmul	;wreg free
  3970  00085A  0E61               	movlw	low (_horarios+1)
  3971  00085C  241C               	addwf	?___wmul^0,w,c
  3972  00085E  6ED9               	movwf	fsr2l,c
  3973  000860  0E00               	movlw	high (_horarios+1)
  3974  000862  201D               	addwfc	(?___wmul+1)^0,w,c
  3975  000864  6EDA               	movwf	fsr2h,c
  3976  000866  C022  F01E         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  3977  00086A  C023  F01F         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  3978  00086E  EC6D  F006         	call	_leer_eeprom	;wreg free
  3979  000872  6EDF               	movwf	indf2,c
  3980  000874  4A22               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  3981  000876  2A23               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  3982  000878                     
  3983                           ;main.c: 200:         horarios[i].tiempoRegar = leer_eeprom(contMemoria++);
  3984  000878  C024  F01C         	movff	leeHorariosMemoria@i,___wmul@multiplier
  3985  00087C  C025  F01D         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
  3986  000880  0E00               	movlw	0
  3987  000882  6E1F               	movwf	(___wmul@multiplicand+1)^0,c
  3988  000884  0E03               	movlw	3
  3989  000886  6E1E               	movwf	___wmul@multiplicand^0,c
  3990  000888  EC45  F007         	call	___wmul	;wreg free
  3991  00088C  0E62               	movlw	low (_horarios+2)
  3992  00088E  241C               	addwf	?___wmul^0,w,c
  3993  000890  6ED9               	movwf	fsr2l,c
  3994  000892  0E00               	movlw	high (_horarios+2)
  3995  000894  201D               	addwfc	(?___wmul+1)^0,w,c
  3996  000896  6EDA               	movwf	fsr2h,c
  3997  000898  C022  F01E         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  3998  00089C  C023  F01F         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  3999  0008A0  EC6D  F006         	call	_leer_eeprom	;wreg free
  4000  0008A4  6EDF               	movwf	indf2,c
  4001  0008A6  4A22               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  4002  0008A8  2A23               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  4003  0008AA                     
  4004                           ;main.c: 201:     }
  4005  0008AA  4A24               	infsnz	leeHorariosMemoria@i^0,f,c
  4006  0008AC  2A25               	incf	(leeHorariosMemoria@i+1)^0,f,c
  4007  0008AE  BE25               	btfsc	(leeHorariosMemoria@i+1)^0,7,c
  4008  0008B0  EF63  F004         	goto	u1161
  4009  0008B4  5025               	movf	(leeHorariosMemoria@i+1)^0,w,c
  4010  0008B6  E109               	bnz	u1160
  4011  0008B8  0E18               	movlw	24
  4012  0008BA  5C24               	subwf	leeHorariosMemoria@i^0,w,c
  4013  0008BC  A0D8               	btfss	status,0,c
  4014  0008BE  EF63  F004         	goto	u1161
  4015  0008C2  EF65  F004         	goto	u1160
  4016  0008C6                     u1161:
  4017  0008C6  EF0A  F004         	goto	l2182
  4018  0008CA                     u1160:
  4019  0008CA  0012               	return		;funcret
  4020  0008CC                     __end_of_leeHorariosMemoria:
  4021                           	opt callstack 0
  4022                           
  4023 ;; *************** function _leer_eeprom *****************
  4024 ;; Defined at:
  4025 ;;		line 166 in file "main.c"
  4026 ;; Parameters:    Size  Location     Type
  4027 ;;  direccion       2    2[COMRAM] unsigned short 
  4028 ;; Auto vars:     Size  Location     Type
  4029 ;;  dato            1    5[COMRAM] unsigned char 
  4030 ;; Return value:  Size  Location     Type
  4031 ;;                  1    wreg      unsigned char 
  4032 ;; Registers used:
  4033 ;;		wreg, status,2, status,0, cstack
  4034 ;; Tracked objects:
  4035 ;;		On entry : 0/0
  4036 ;;		On exit  : 0/0
  4037 ;;		Unchanged: 0/0
  4038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4039 ;;      Params:         2       0       0       0       0       0       0       0       0
  4040 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4041 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4042 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4043 ;;Total ram usage:        4 bytes
  4044 ;; Hardware stack levels used:    1
  4045 ;; Hardware stack levels required when called:    3
  4046 ;; This function calls:
  4047 ;;		_i2c_detener
  4048 ;;		_i2c_envia_dato
  4049 ;;		_i2c_inicia_com
  4050 ;;		_i2c_recibe_dato
  4051 ;;		_i2c_reinicia_com
  4052 ;; This function is called by:
  4053 ;;		_leeHorariosMemoria
  4054 ;; This function uses a non-reentrant model
  4055 ;;
  4056                           
  4057                           	psect	text25
  4058  000CDA                     __ptext25:
  4059                           	opt callstack 0
  4060  000CDA                     _leer_eeprom:
  4061                           	opt callstack 26
  4062  000CDA                     
  4063                           ;main.c: 168:     unsigned char dato;;main.c: 170:     i2c_inicia_com();
  4064  000CDA  ECCC  F007         	call	_i2c_inicia_com	;wreg free
  4065                           
  4066                           ;main.c: 171:     i2c_envia_dato(0xAE);
  4067  000CDE  0EAE               	movlw	174
  4068  000CE0  ECBD  F007         	call	_i2c_envia_dato
  4069                           
  4070                           ;main.c: 172:     i2c_envia_dato(direccion >> 8);
  4071  000CE4  501F               	movf	(leer_eeprom@direccion+1)^0,w,c
  4072  000CE6  ECBD  F007         	call	_i2c_envia_dato
  4073                           
  4074                           ;main.c: 173:     i2c_envia_dato(direccion);
  4075  000CEA  501E               	movf	leer_eeprom@direccion^0,w,c
  4076  000CEC  ECBD  F007         	call	_i2c_envia_dato
  4077                           
  4078                           ;main.c: 174:     i2c_reinicia_com();
  4079  000CF0  ECC8  F007         	call	_i2c_reinicia_com	;wreg free
  4080                           
  4081                           ;main.c: 175:     i2c_envia_dato(0xAF);
  4082  000CF4  0EAF               	movlw	175
  4083  000CF6  ECBD  F007         	call	_i2c_envia_dato
  4084                           
  4085                           ;main.c: 176:     dato = i2c_recibe_dato();
  4086  000CFA  EC84  F007         	call	_i2c_recibe_dato	;wreg free
  4087  000CFE  6E21               	movwf	leer_eeprom@dato^0,c
  4088                           
  4089                           ;main.c: 177:     i2c_detener();
  4090  000D00  ECD0  F007         	call	_i2c_detener	;wreg free
  4091  000D04                     
  4092                           ;main.c: 178:     _delay((unsigned long)((10)*(4000000/4000.0)));
  4093  000D04  0E0D               	movlw	13
  4094  000D06  6E20               	movwf	??_leer_eeprom^0,c
  4095  000D08  0EFC               	movlw	252
  4096  000D0A                     u1307:
  4097  000D0A  2EE8               	decfsz	wreg,f,c
  4098  000D0C  D7FE               	bra	u1307
  4099  000D0E  2E20               	decfsz	??_leer_eeprom^0,f,c
  4100  000D10  D7FC               	bra	u1307
  4101  000D12                     
  4102                           ;main.c: 180:     return dato;
  4103  000D12  5021               	movf	leer_eeprom@dato^0,w,c
  4104  000D14  0012               	return		;funcret
  4105  000D16                     __end_of_leer_eeprom:
  4106                           	opt callstack 0
  4107                           
  4108 ;; *************** function _i2c_reinicia_com *****************
  4109 ;; Defined at:
  4110 ;;		line 37 in file "./I2C.h"
  4111 ;; Parameters:    Size  Location     Type
  4112 ;;		None
  4113 ;; Auto vars:     Size  Location     Type
  4114 ;;		None
  4115 ;; Return value:  Size  Location     Type
  4116 ;;                  1    wreg      void 
  4117 ;; Registers used:
  4118 ;;		wreg, status,2, status,0, cstack
  4119 ;; Tracked objects:
  4120 ;;		On entry : 0/0
  4121 ;;		On exit  : 0/0
  4122 ;;		Unchanged: 0/0
  4123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4124 ;;      Params:         0       0       0       0       0       0       0       0       0
  4125 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4126 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4127 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4128 ;;Total ram usage:        0 bytes
  4129 ;; Hardware stack levels used:    1
  4130 ;; Hardware stack levels required when called:    2
  4131 ;; This function calls:
  4132 ;;		_i2c_espera
  4133 ;; This function is called by:
  4134 ;;		_leer_rtc
  4135 ;;		_leer_eeprom
  4136 ;; This function uses a non-reentrant model
  4137 ;;
  4138                           
  4139                           	psect	text26
  4140  000F90                     __ptext26:
  4141                           	opt callstack 0
  4142  000F90                     _i2c_reinicia_com:
  4143                           	opt callstack 25
  4144  000F90                     
  4145                           ;./I2C.h: 38:     i2c_espera();
  4146  000F90  EC32  F007         	call	_i2c_espera	;wreg free
  4147  000F94                     
  4148                           ;./I2C.h: 39:     SSPCON2bits.RSEN = 1;
  4149  000F94  82C5               	bsf	197,1,c	;volatile
  4150  000F96  0012               	return		;funcret
  4151  000F98                     __end_of_i2c_reinicia_com:
  4152                           	opt callstack 0
  4153                           
  4154 ;; *************** function _i2c_recibe_dato *****************
  4155 ;; Defined at:
  4156 ;;		line 68 in file "./I2C.h"
  4157 ;; Parameters:    Size  Location     Type
  4158 ;;		None
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;  datoleido       1    1[COMRAM] unsigned char 
  4161 ;; Return value:  Size  Location     Type
  4162 ;;                  1    wreg      unsigned char 
  4163 ;; Registers used:
  4164 ;;		wreg, status,2, status,0, cstack
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/0
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4170 ;;      Params:         0       0       0       0       0       0       0       0       0
  4171 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4172 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4173 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4174 ;;Total ram usage:        1 bytes
  4175 ;; Hardware stack levels used:    1
  4176 ;; Hardware stack levels required when called:    2
  4177 ;; This function calls:
  4178 ;;		_i2c_espera
  4179 ;; This function is called by:
  4180 ;;		_leer_rtc
  4181 ;;		_leer_eeprom
  4182 ;; This function uses a non-reentrant model
  4183 ;;
  4184                           
  4185                           	psect	text27
  4186  000F08                     __ptext27:
  4187                           	opt callstack 0
  4188  000F08                     _i2c_recibe_dato:
  4189                           	opt callstack 25
  4190  000F08                     
  4191                           ;./I2C.h: 70:     unsigned char datoleido;;./I2C.h: 73:     i2c_espera();
  4192  000F08  EC32  F007         	call	_i2c_espera	;wreg free
  4193  000F0C                     
  4194                           ;./I2C.h: 74:     SSPCON2bits.RCEN = 1;
  4195  000F0C  86C5               	bsf	197,3,c	;volatile
  4196                           
  4197                           ;./I2C.h: 76:     i2c_espera();
  4198  000F0E  EC32  F007         	call	_i2c_espera	;wreg free
  4199  000F12                     
  4200                           ;./I2C.h: 77:     datoleido = SSPBUF;
  4201  000F12  CFC9 F01D          	movff	4041,i2c_recibe_dato@datoleido	;volatile
  4202                           
  4203                           ;./I2C.h: 80:     i2c_espera();
  4204  000F16  EC32  F007         	call	_i2c_espera	;wreg free
  4205  000F1A                     
  4206                           ;./I2C.h: 82:     SSPCON2bits.ACKDT = 1;
  4207  000F1A  8AC5               	bsf	197,5,c	;volatile
  4208  000F1C                     
  4209                           ;./I2C.h: 87:     SSPCON2bits.ACKEN = 1;
  4210  000F1C  88C5               	bsf	197,4,c	;volatile
  4211  000F1E                     
  4212                           ;./I2C.h: 91:     return datoleido;
  4213  000F1E  501D               	movf	i2c_recibe_dato@datoleido^0,w,c
  4214  000F20  0012               	return		;funcret
  4215  000F22                     __end_of_i2c_recibe_dato:
  4216                           	opt callstack 0
  4217                           
  4218 ;; *************** function _i2c_inicia_com *****************
  4219 ;; Defined at:
  4220 ;;		line 28 in file "./I2C.h"
  4221 ;; Parameters:    Size  Location     Type
  4222 ;;		None
  4223 ;; Auto vars:     Size  Location     Type
  4224 ;;		None
  4225 ;; Return value:  Size  Location     Type
  4226 ;;                  1    wreg      void 
  4227 ;; Registers used:
  4228 ;;		wreg, status,2, status,0, cstack
  4229 ;; Tracked objects:
  4230 ;;		On entry : 0/0
  4231 ;;		On exit  : 0/0
  4232 ;;		Unchanged: 0/0
  4233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4234 ;;      Params:         0       0       0       0       0       0       0       0       0
  4235 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4236 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4237 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4238 ;;Total ram usage:        0 bytes
  4239 ;; Hardware stack levels used:    1
  4240 ;; Hardware stack levels required when called:    2
  4241 ;; This function calls:
  4242 ;;		_i2c_espera
  4243 ;; This function is called by:
  4244 ;;		_escribe_rtc
  4245 ;;		_leer_rtc
  4246 ;;		_escribe_eeprom
  4247 ;;		_leer_eeprom
  4248 ;; This function uses a non-reentrant model
  4249 ;;
  4250                           
  4251                           	psect	text28
  4252  000F98                     __ptext28:
  4253                           	opt callstack 0
  4254  000F98                     _i2c_inicia_com:
  4255                           	opt callstack 25
  4256  000F98                     
  4257                           ;./I2C.h: 29:     i2c_espera();
  4258  000F98  EC32  F007         	call	_i2c_espera	;wreg free
  4259  000F9C                     
  4260                           ;./I2C.h: 30:     SSPCON2bits.SEN = 1;
  4261  000F9C  80C5               	bsf	197,0,c	;volatile
  4262  000F9E  0012               	return		;funcret
  4263  000FA0                     __end_of_i2c_inicia_com:
  4264                           	opt callstack 0
  4265                           
  4266 ;; *************** function _i2c_envia_dato *****************
  4267 ;; Defined at:
  4268 ;;		line 57 in file "./I2C.h"
  4269 ;; Parameters:    Size  Location     Type
  4270 ;;  dato            1    wreg     unsigned char 
  4271 ;; Auto vars:     Size  Location     Type
  4272 ;;  dato            1    1[COMRAM] unsigned char 
  4273 ;; Return value:  Size  Location     Type
  4274 ;;                  1    wreg      unsigned char 
  4275 ;; Registers used:
  4276 ;;		wreg, status,2, status,0, cstack
  4277 ;; Tracked objects:
  4278 ;;		On entry : 0/0
  4279 ;;		On exit  : 0/0
  4280 ;;		Unchanged: 0/0
  4281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4282 ;;      Params:         0       0       0       0       0       0       0       0       0
  4283 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4284 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4285 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4286 ;;Total ram usage:        1 bytes
  4287 ;; Hardware stack levels used:    1
  4288 ;; Hardware stack levels required when called:    2
  4289 ;; This function calls:
  4290 ;;		_i2c_espera
  4291 ;; This function is called by:
  4292 ;;		_escribe_rtc
  4293 ;;		_leer_rtc
  4294 ;;		_escribe_eeprom
  4295 ;;		_leer_eeprom
  4296 ;; This function uses a non-reentrant model
  4297 ;;
  4298                           
  4299                           	psect	text29
  4300  000F7A                     __ptext29:
  4301                           	opt callstack 0
  4302  000F7A                     _i2c_envia_dato:
  4303                           	opt callstack 25
  4304                           
  4305                           ;incstack = 0
  4306                           ;i2c_envia_dato@dato stored from wreg
  4307  000F7A  6E1D               	movwf	i2c_envia_dato@dato^0,c
  4308  000F7C                     
  4309                           ;./I2C.h: 58:     i2c_espera();
  4310  000F7C  EC32  F007         	call	_i2c_espera	;wreg free
  4311  000F80                     
  4312                           ;./I2C.h: 59:     SSPBUF = dato;
  4313  000F80  C01D  FFC9         	movff	i2c_envia_dato@dato,4041	;volatile
  4314  000F84  0012               	return		;funcret
  4315  000F86                     __end_of_i2c_envia_dato:
  4316                           	opt callstack 0
  4317                           
  4318 ;; *************** function _i2c_detener *****************
  4319 ;; Defined at:
  4320 ;;		line 46 in file "./I2C.h"
  4321 ;; Parameters:    Size  Location     Type
  4322 ;;		None
  4323 ;; Auto vars:     Size  Location     Type
  4324 ;;		None
  4325 ;; Return value:  Size  Location     Type
  4326 ;;                  1    wreg      void 
  4327 ;; Registers used:
  4328 ;;		wreg, status,2, status,0, cstack
  4329 ;; Tracked objects:
  4330 ;;		On entry : 0/0
  4331 ;;		On exit  : 0/0
  4332 ;;		Unchanged: 0/0
  4333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4334 ;;      Params:         0       0       0       0       0       0       0       0       0
  4335 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4336 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4337 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4338 ;;Total ram usage:        0 bytes
  4339 ;; Hardware stack levels used:    1
  4340 ;; Hardware stack levels required when called:    2
  4341 ;; This function calls:
  4342 ;;		_i2c_espera
  4343 ;; This function is called by:
  4344 ;;		_escribe_rtc
  4345 ;;		_leer_rtc
  4346 ;;		_escribe_eeprom
  4347 ;;		_leer_eeprom
  4348 ;; This function uses a non-reentrant model
  4349 ;;
  4350                           
  4351                           	psect	text30
  4352  000FA0                     __ptext30:
  4353                           	opt callstack 0
  4354  000FA0                     _i2c_detener:
  4355                           	opt callstack 25
  4356  000FA0                     
  4357                           ;./I2C.h: 47:     i2c_espera();
  4358  000FA0  EC32  F007         	call	_i2c_espera	;wreg free
  4359  000FA4                     
  4360                           ;./I2C.h: 48:     SSPCON2bits.PEN = 1;
  4361  000FA4  84C5               	bsf	197,2,c	;volatile
  4362  000FA6  0012               	return		;funcret
  4363  000FA8                     __end_of_i2c_detener:
  4364                           	opt callstack 0
  4365                           
  4366 ;; *************** function _i2c_espera *****************
  4367 ;; Defined at:
  4368 ;;		line 20 in file "./I2C.h"
  4369 ;; Parameters:    Size  Location     Type
  4370 ;;		None
  4371 ;; Auto vars:     Size  Location     Type
  4372 ;;		None
  4373 ;; Return value:  Size  Location     Type
  4374 ;;                  1    wreg      void 
  4375 ;; Registers used:
  4376 ;;		wreg, status,2, status,0
  4377 ;; Tracked objects:
  4378 ;;		On entry : 0/0
  4379 ;;		On exit  : 0/0
  4380 ;;		Unchanged: 0/0
  4381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4382 ;;      Params:         0       0       0       0       0       0       0       0       0
  4383 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4384 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4385 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4386 ;;Total ram usage:        1 bytes
  4387 ;; Hardware stack levels used:    1
  4388 ;; Hardware stack levels required when called:    1
  4389 ;; This function calls:
  4390 ;;		Nothing
  4391 ;; This function is called by:
  4392 ;;		_i2c_inicia_com
  4393 ;;		_i2c_reinicia_com
  4394 ;;		_i2c_detener
  4395 ;;		_i2c_envia_dato
  4396 ;;		_i2c_recibe_dato
  4397 ;; This function uses a non-reentrant model
  4398 ;;
  4399                           
  4400                           	psect	text31
  4401  000E64                     __ptext31:
  4402                           	opt callstack 0
  4403  000E64                     _i2c_espera:
  4404                           	opt callstack 25
  4405  000E64                     l1674:
  4406  000E64  CFC5 F01C          	movff	4037,??_i2c_espera	;volatile
  4407  000E68  0E1F               	movlw	31
  4408  000E6A  161C               	andwf	??_i2c_espera^0,f,c
  4409  000E6C  A4D8               	btfss	status,2,c
  4410  000E6E  EF3B  F007         	goto	u651
  4411  000E72  EF3D  F007         	goto	u650
  4412  000E76                     u651:
  4413  000E76  EF32  F007         	goto	l1674
  4414  000E7A                     u650:
  4415  000E7A  B4C7               	btfsc	199,2,c	;volatile
  4416  000E7C  EF42  F007         	goto	u661
  4417  000E80  EF44  F007         	goto	u660
  4418  000E84                     u661:
  4419  000E84  EF32  F007         	goto	l1674
  4420  000E88                     u660:
  4421  000E88  0012               	return		;funcret
  4422  000E8A                     __end_of_i2c_espera:
  4423                           	opt callstack 0
  4424                           
  4425 ;; *************** function _inicializarObjetos *****************
  4426 ;; Defined at:
  4427 ;;		line 112 in file "main.c"
  4428 ;; Parameters:    Size  Location     Type
  4429 ;;		None
  4430 ;; Auto vars:     Size  Location     Type
  4431 ;;  i               2    6[COMRAM] int 
  4432 ;; Return value:  Size  Location     Type
  4433 ;;                  1    wreg      void 
  4434 ;; Registers used:
  4435 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4436 ;; Tracked objects:
  4437 ;;		On entry : 0/0
  4438 ;;		On exit  : 0/0
  4439 ;;		Unchanged: 0/0
  4440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4441 ;;      Params:         0       0       0       0       0       0       0       0       0
  4442 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4443 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4444 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4445 ;;Total ram usage:        2 bytes
  4446 ;; Hardware stack levels used:    1
  4447 ;; Hardware stack levels required when called:    2
  4448 ;; This function calls:
  4449 ;;		___wmul
  4450 ;; This function is called by:
  4451 ;;		_main
  4452 ;; This function uses a non-reentrant model
  4453 ;;
  4454                           
  4455                           	psect	text32
  4456  000968                     __ptext32:
  4457                           	opt callstack 0
  4458  000968                     _inicializarObjetos:
  4459                           	opt callstack 28
  4460  000968                     
  4461                           ;main.c: 114:     for (int i = 0; i < 24; i++) {
  4462  000968  0E00               	movlw	0
  4463  00096A  6E23               	movwf	(inicializarObjetos@i+1)^0,c
  4464  00096C  0E00               	movlw	0
  4465  00096E  6E22               	movwf	inicializarObjetos@i^0,c
  4466  000970                     l2170:
  4467                           
  4468                           ;main.c: 115:         horarios[i].hora = i;
  4469  000970  C022  F01C         	movff	inicializarObjetos@i,___wmul@multiplier
  4470  000974  C023  F01D         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  4471  000978  0E00               	movlw	0
  4472  00097A  6E1F               	movwf	(___wmul@multiplicand+1)^0,c
  4473  00097C  0E03               	movlw	3
  4474  00097E  6E1E               	movwf	___wmul@multiplicand^0,c
  4475  000980  EC45  F007         	call	___wmul	;wreg free
  4476  000984  0E60               	movlw	low _horarios
  4477  000986  241C               	addwf	?___wmul^0,w,c
  4478  000988  6ED9               	movwf	fsr2l,c
  4479  00098A  0E00               	movlw	high _horarios
  4480  00098C  201D               	addwfc	(?___wmul+1)^0,w,c
  4481  00098E  6EDA               	movwf	fsr2h,c
  4482  000990  C022  FFDF         	movff	inicializarObjetos@i,indf2
  4483                           
  4484                           ;main.c: 116:         horarios[i].regar = 0;
  4485  000994  C022  F01C         	movff	inicializarObjetos@i,___wmul@multiplier
  4486  000998  C023  F01D         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  4487  00099C  0E00               	movlw	0
  4488  00099E  6E1F               	movwf	(___wmul@multiplicand+1)^0,c
  4489  0009A0  0E03               	movlw	3
  4490  0009A2  6E1E               	movwf	___wmul@multiplicand^0,c
  4491  0009A4  EC45  F007         	call	___wmul	;wreg free
  4492  0009A8  0E61               	movlw	low (_horarios+1)
  4493  0009AA  241C               	addwf	?___wmul^0,w,c
  4494  0009AC  6ED9               	movwf	fsr2l,c
  4495  0009AE  0E00               	movlw	high (_horarios+1)
  4496  0009B0  201D               	addwfc	(?___wmul+1)^0,w,c
  4497  0009B2  6EDA               	movwf	fsr2h,c
  4498  0009B4  0E00               	movlw	0
  4499  0009B6  6EDF               	movwf	indf2,c
  4500                           
  4501                           ;main.c: 117:         horarios[i].tiempoRegar = 15;
  4502  0009B8  C022  F01C         	movff	inicializarObjetos@i,___wmul@multiplier
  4503  0009BC  C023  F01D         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
  4504  0009C0  0E00               	movlw	0
  4505  0009C2  6E1F               	movwf	(___wmul@multiplicand+1)^0,c
  4506  0009C4  0E03               	movlw	3
  4507  0009C6  6E1E               	movwf	___wmul@multiplicand^0,c
  4508  0009C8  EC45  F007         	call	___wmul	;wreg free
  4509  0009CC  0E62               	movlw	low (_horarios+2)
  4510  0009CE  241C               	addwf	?___wmul^0,w,c
  4511  0009D0  6ED9               	movwf	fsr2l,c
  4512  0009D2  0E00               	movlw	high (_horarios+2)
  4513  0009D4  201D               	addwfc	(?___wmul+1)^0,w,c
  4514  0009D6  6EDA               	movwf	fsr2h,c
  4515  0009D8  0E0F               	movlw	15
  4516  0009DA  6EDF               	movwf	indf2,c
  4517  0009DC                     
  4518                           ;main.c: 118:     }
  4519  0009DC  4A22               	infsnz	inicializarObjetos@i^0,f,c
  4520  0009DE  2A23               	incf	(inicializarObjetos@i+1)^0,f,c
  4521  0009E0  BE23               	btfsc	(inicializarObjetos@i+1)^0,7,c
  4522  0009E2  EFFC  F004         	goto	u1151
  4523  0009E6  5023               	movf	(inicializarObjetos@i+1)^0,w,c
  4524  0009E8  E109               	bnz	u1150
  4525  0009EA  0E18               	movlw	24
  4526  0009EC  5C22               	subwf	inicializarObjetos@i^0,w,c
  4527  0009EE  A0D8               	btfss	status,0,c
  4528  0009F0  EFFC  F004         	goto	u1151
  4529  0009F4  EFFE  F004         	goto	u1150
  4530  0009F8                     u1151:
  4531  0009F8  EFB8  F004         	goto	l2170
  4532  0009FC                     u1150:
  4533  0009FC  0012               	return		;funcret
  4534  0009FE                     __end_of_inicializarObjetos:
  4535                           	opt callstack 0
  4536                           
  4537 ;; *************** function ___wmul *****************
  4538 ;; Defined at:
  4539 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;  multiplier      2    0[COMRAM] unsigned int 
  4542 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4543 ;; Auto vars:     Size  Location     Type
  4544 ;;  product         2    4[COMRAM] unsigned int 
  4545 ;; Return value:  Size  Location     Type
  4546 ;;                  2    0[COMRAM] unsigned int 
  4547 ;; Registers used:
  4548 ;;		wreg, status,2, status,0, prodl, prodh
  4549 ;; Tracked objects:
  4550 ;;		On entry : 0/0
  4551 ;;		On exit  : 0/0
  4552 ;;		Unchanged: 0/0
  4553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4554 ;;      Params:         4       0       0       0       0       0       0       0       0
  4555 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4556 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4557 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4558 ;;Total ram usage:        6 bytes
  4559 ;; Hardware stack levels used:    1
  4560 ;; Hardware stack levels required when called:    1
  4561 ;; This function calls:
  4562 ;;		Nothing
  4563 ;; This function is called by:
  4564 ;;		_inicializarObjetos
  4565 ;;		_escribeHorariosMemoria
  4566 ;;		_leeHorariosMemoria
  4567 ;; This function uses a non-reentrant model
  4568 ;;
  4569                           
  4570                           	psect	text33
  4571  000E8A                     __ptext33:
  4572                           	opt callstack 0
  4573  000E8A                     ___wmul:
  4574                           	opt callstack 26
  4575  000E8A  501C               	movf	___wmul@multiplier^0,w,c
  4576  000E8C  021E               	mulwf	___wmul@multiplicand^0,c
  4577  000E8E  CFF3 F020          	movff	prodl,___wmul@product
  4578  000E92  CFF4 F021          	movff	prodh,___wmul@product+1
  4579  000E96  501C               	movf	___wmul@multiplier^0,w,c
  4580  000E98  021F               	mulwf	(___wmul@multiplicand+1)^0,c
  4581  000E9A  50F3               	movf	243,w,c
  4582  000E9C  2621               	addwf	(___wmul@product+1)^0,f,c
  4583  000E9E  501D               	movf	(___wmul@multiplier+1)^0,w,c
  4584  000EA0  021E               	mulwf	___wmul@multiplicand^0,c
  4585  000EA2  50F3               	movf	243,w,c
  4586  000EA4  2621               	addwf	(___wmul@product+1)^0,f,c
  4587  000EA6  C020  F01C         	movff	___wmul@product,?___wmul
  4588  000EAA  C021  F01D         	movff	___wmul@product+1,?___wmul+1
  4589  000EAE  0012               	return		;funcret
  4590  000EB0                     __end_of___wmul:
  4591                           	opt callstack 0
  4592                           
  4593 ;; *************** function _i2c_iniciar *****************
  4594 ;; Defined at:
  4595 ;;		line 4 in file "./I2C.h"
  4596 ;; Parameters:    Size  Location     Type
  4597 ;;		None
  4598 ;; Auto vars:     Size  Location     Type
  4599 ;;		None
  4600 ;; Return value:  Size  Location     Type
  4601 ;;                  1    wreg      void 
  4602 ;; Registers used:
  4603 ;;		wreg, status,2
  4604 ;; Tracked objects:
  4605 ;;		On entry : 0/0
  4606 ;;		On exit  : 0/0
  4607 ;;		Unchanged: 0/0
  4608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4609 ;;      Params:         0       0       0       0       0       0       0       0       0
  4610 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4611 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4612 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4613 ;;Total ram usage:        0 bytes
  4614 ;; Hardware stack levels used:    1
  4615 ;; Hardware stack levels required when called:    1
  4616 ;; This function calls:
  4617 ;;		Nothing
  4618 ;; This function is called by:
  4619 ;;		_main
  4620 ;; This function uses a non-reentrant model
  4621 ;;
  4622                           
  4623                           	psect	text34
  4624  000F52                     __ptext34:
  4625                           	opt callstack 0
  4626  000F52                     _i2c_iniciar:
  4627                           	opt callstack 29
  4628  000F52                     
  4629                           ;./I2C.h: 5:     TRISBbits.RB0 = 1;
  4630  000F52  8093               	bsf	147,0,c	;volatile
  4631                           
  4632                           ;./I2C.h: 6:     TRISBbits.RB1 = 1;
  4633  000F54  8293               	bsf	147,1,c	;volatile
  4634  000F56                     
  4635                           ;./I2C.h: 7:     SSPSTAT = 0b10000000;
  4636  000F56  0E80               	movlw	128
  4637  000F58  6EC7               	movwf	199,c	;volatile
  4638                           
  4639                           ;./I2C.h: 8:     SSPCON1 = 0b00101000;
  4640  000F5A  0E28               	movlw	40
  4641  000F5C  6EC6               	movwf	198,c	;volatile
  4642                           
  4643                           ;./I2C.h: 9:     SSPCON2 = 0b00000000;
  4644  000F5E  0E00               	movlw	0
  4645  000F60  6EC5               	movwf	197,c	;volatile
  4646                           
  4647                           ;./I2C.h: 10:     SSPADD = 9;
  4648  000F62  0E09               	movlw	9
  4649  000F64  6EC8               	movwf	200,c	;volatile
  4650  000F66  0012               	return		;funcret
  4651  000F68                     __end_of_i2c_iniciar:
  4652                           	opt callstack 0
  4653                           
  4654 ;; *************** function _configurarAdc *****************
  4655 ;; Defined at:
  4656 ;;		line 93 in file "main.c"
  4657 ;; Parameters:    Size  Location     Type
  4658 ;;		None
  4659 ;; Auto vars:     Size  Location     Type
  4660 ;;		None
  4661 ;; Return value:  Size  Location     Type
  4662 ;;                  1    wreg      void 
  4663 ;; Registers used:
  4664 ;;		wreg, status,2
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4670 ;;      Params:         0       0       0       0       0       0       0       0       0
  4671 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4672 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4673 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4674 ;;Total ram usage:        0 bytes
  4675 ;; Hardware stack levels used:    1
  4676 ;; Hardware stack levels required when called:    1
  4677 ;; This function calls:
  4678 ;;		Nothing
  4679 ;; This function is called by:
  4680 ;;		_main
  4681 ;; This function uses a non-reentrant model
  4682 ;;
  4683                           
  4684                           	psect	text35
  4685  000F22                     __ptext35:
  4686                           	opt callstack 0
  4687  000F22                     _configurarAdc:
  4688                           	opt callstack 29
  4689  000F22                     
  4690                           ;main.c: 94:     ADCON1 = 0b00000001;
  4691  000F22  0E01               	movlw	1
  4692  000F24  6EC1               	movwf	193,c	;volatile
  4693                           
  4694                           ;main.c: 95:     ADCON2 = 0b10100101;
  4695  000F26  0EA5               	movlw	165
  4696  000F28  6EC0               	movwf	192,c	;volatile
  4697                           
  4698                           ;main.c: 96:     TRISA = 1;
  4699  000F2A  0E01               	movlw	1
  4700  000F2C  6E92               	movwf	146,c	;volatile
  4701                           
  4702                           ;main.c: 97:     TRISE = 1;
  4703  000F2E  0E01               	movlw	1
  4704  000F30  6E96               	movwf	150,c	;volatile
  4705                           
  4706                           ;main.c: 99:     PORTA = 0;
  4707  000F32  0E00               	movlw	0
  4708  000F34  6E80               	movwf	128,c	;volatile
  4709                           
  4710                           ;main.c: 100:     PORTE = 0;
  4711  000F36  0E00               	movlw	0
  4712  000F38  6E84               	movwf	132,c	;volatile
  4713  000F3A  0012               	return		;funcret
  4714  000F3C                     __end_of_configurarAdc:
  4715                           	opt callstack 0
  4716                           
  4717 ;; *************** function _UART_init *****************
  4718 ;; Defined at:
  4719 ;;		line 6 in file "./UART.h"
  4720 ;; Parameters:    Size  Location     Type
  4721 ;;  BAUD            4   14[COMRAM] long 
  4722 ;; Auto vars:     Size  Location     Type
  4723 ;;  frecuenciaCr    4    0        long 
  4724 ;; Return value:  Size  Location     Type
  4725 ;;                  1    wreg      void 
  4726 ;; Registers used:
  4727 ;;		wreg, status,2, status,0, cstack
  4728 ;; Tracked objects:
  4729 ;;		On entry : 0/0
  4730 ;;		On exit  : 0/0
  4731 ;;		Unchanged: 0/0
  4732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4733 ;;      Params:         4       0       0       0       0       0       0       0       0
  4734 ;;      Locals:         8       0       0       0       0       0       0       0       0
  4735 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4736 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4737 ;;Total ram usage:       12 bytes
  4738 ;; Hardware stack levels used:    1
  4739 ;; Hardware stack levels required when called:    2
  4740 ;; This function calls:
  4741 ;;		___aldiv
  4742 ;; This function is called by:
  4743 ;;		_main
  4744 ;; This function uses a non-reentrant model
  4745 ;;
  4746                           
  4747                           	psect	text36
  4748  000A8C                     __ptext36:
  4749                           	opt callstack 0
  4750  000A8C                     _UART_init:
  4751                           	opt callstack 28
  4752  000A8C                     
  4753                           ;./UART.h: 8:     TRISCbits.TRISC6 = 0;
  4754  000A8C  9C94               	bcf	148,6,c	;volatile
  4755  000A8E                     
  4756                           ;./UART.h: 9:     TRISCbits.TRISC7 = 1;
  4757  000A8E  8E94               	bsf	148,7,c	;volatile
  4758  000A90                     
  4759                           ;./UART.h: 12:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
  4760  000A90  0E10               	movlw	16
  4761  000A92  6E20               	movwf	___aldiv@divisor^0,c
  4762  000A94  0E00               	movlw	0
  4763  000A96  6E21               	movwf	(___aldiv@divisor+1)^0,c
  4764  000A98  0E00               	movlw	0
  4765  000A9A  6E22               	movwf	(___aldiv@divisor+2)^0,c
  4766  000A9C  0E00               	movlw	0
  4767  000A9E  6E23               	movwf	(___aldiv@divisor+3)^0,c
  4768  000AA0  0E00               	movlw	0
  4769  000AA2  6E1C               	movwf	___aldiv@dividend^0,c
  4770  000AA4  0E09               	movlw	9
  4771  000AA6  6E1D               	movwf	(___aldiv@dividend+1)^0,c
  4772  000AA8  0E3D               	movlw	61
  4773  000AAA  6E1E               	movwf	(___aldiv@dividend+2)^0,c
  4774  000AAC  0E00               	movlw	0
  4775  000AAE  6E1F               	movwf	(___aldiv@dividend+3)^0,c
  4776  000AB0  ECB1  F002         	call	___aldiv	;wreg free
  4777  000AB4  C01C  F032         	movff	?___aldiv,_UART_init$1471
  4778  000AB8  C01D  F033         	movff	?___aldiv+1,_UART_init$1471+1
  4779  000ABC  C01E  F034         	movff	?___aldiv+2,_UART_init$1471+2
  4780  000AC0  C01F  F035         	movff	?___aldiv+3,_UART_init$1471+3
  4781  000AC4                     
  4782                           ;./UART.h: 12:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
  4783  000AC4  C032  F01C         	movff	_UART_init$1471,___aldiv@dividend
  4784  000AC8  C033  F01D         	movff	_UART_init$1471+1,___aldiv@dividend+1
  4785  000ACC  C034  F01E         	movff	_UART_init$1471+2,___aldiv@dividend+2
  4786  000AD0  C035  F01F         	movff	_UART_init$1471+3,___aldiv@dividend+3
  4787  000AD4  C02A  F020         	movff	UART_init@BAUD,___aldiv@divisor
  4788  000AD8  C02B  F021         	movff	UART_init@BAUD+1,___aldiv@divisor+1
  4789  000ADC  C02C  F022         	movff	UART_init@BAUD+2,___aldiv@divisor+2
  4790  000AE0  C02D  F023         	movff	UART_init@BAUD+3,___aldiv@divisor+3
  4791  000AE4  ECB1  F002         	call	___aldiv	;wreg free
  4792  000AE8  041C               	decf	?___aldiv^0,w,c
  4793  000AEA  6EAF               	movwf	175,c	;volatile
  4794  000AEC                     
  4795                           ;./UART.h: 15:     TXSTAbits.BRGH = 1;
  4796  000AEC  84AC               	bsf	172,2,c	;volatile
  4797  000AEE                     
  4798                           ;./UART.h: 16:     TXSTAbits.SYNC = 0;
  4799  000AEE  98AC               	bcf	172,4,c	;volatile
  4800  000AF0                     
  4801                           ;./UART.h: 17:     RCSTAbits.SPEN = 1;
  4802  000AF0  8EAB               	bsf	171,7,c	;volatile
  4803  000AF2                     
  4804                           ;./UART.h: 20:     TXSTAbits.TX9 = 0;
  4805  000AF2  9CAC               	bcf	172,6,c	;volatile
  4806  000AF4                     
  4807                           ;./UART.h: 21:     TXSTAbits.TXEN = 1;
  4808  000AF4  8AAC               	bsf	172,5,c	;volatile
  4809  000AF6                     
  4810                           ;./UART.h: 24:     RCSTAbits.RC9 = 0;
  4811  000AF6  9CAB               	bcf	171,6,c	;volatile
  4812  000AF8                     
  4813                           ;./UART.h: 25:     RCSTAbits.CREN = 1;
  4814  000AF8  88AB               	bsf	171,4,c	;volatile
  4815  000AFA  0012               	return		;funcret
  4816  000AFC                     __end_of_UART_init:
  4817                           	opt callstack 0
  4818                           
  4819 ;; *************** function ___aldiv *****************
  4820 ;; Defined at:
  4821 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  4822 ;; Parameters:    Size  Location     Type
  4823 ;;  dividend        4    0[COMRAM] long 
  4824 ;;  divisor         4    4[COMRAM] long 
  4825 ;; Auto vars:     Size  Location     Type
  4826 ;;  quotient        4   10[COMRAM] long 
  4827 ;;  sign            1    9[COMRAM] unsigned char 
  4828 ;;  counter         1    8[COMRAM] unsigned char 
  4829 ;; Return value:  Size  Location     Type
  4830 ;;                  4    0[COMRAM] long 
  4831 ;; Registers used:
  4832 ;;		wreg, status,2, status,0
  4833 ;; Tracked objects:
  4834 ;;		On entry : 0/0
  4835 ;;		On exit  : 0/0
  4836 ;;		Unchanged: 0/0
  4837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4838 ;;      Params:         8       0       0       0       0       0       0       0       0
  4839 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4840 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4841 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4842 ;;Total ram usage:       14 bytes
  4843 ;; Hardware stack levels used:    1
  4844 ;; Hardware stack levels required when called:    1
  4845 ;; This function calls:
  4846 ;;		Nothing
  4847 ;; This function is called by:
  4848 ;;		_UART_init
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           
  4852                           	psect	text37
  4853  000562                     __ptext37:
  4854                           	opt callstack 0
  4855  000562                     ___aldiv:
  4856                           	opt callstack 28
  4857  000562  0E00               	movlw	0
  4858  000564  6E25               	movwf	___aldiv@sign^0,c
  4859  000566  BE23               	btfsc	(___aldiv@divisor+3)^0,7,c
  4860  000568  EFBA  F002         	goto	u1090
  4861  00056C  EFB8  F002         	goto	u1091
  4862  000570                     u1091:
  4863  000570  EFC4  F002         	goto	l2104
  4864  000574                     u1090:
  4865  000574  1E23               	comf	(___aldiv@divisor+3)^0,f,c
  4866  000576  1E22               	comf	(___aldiv@divisor+2)^0,f,c
  4867  000578  1E21               	comf	(___aldiv@divisor+1)^0,f,c
  4868  00057A  6C20               	negf	___aldiv@divisor^0,c
  4869  00057C  0E00               	movlw	0
  4870  00057E  2221               	addwfc	(___aldiv@divisor+1)^0,f,c
  4871  000580  2222               	addwfc	(___aldiv@divisor+2)^0,f,c
  4872  000582  2223               	addwfc	(___aldiv@divisor+3)^0,f,c
  4873  000584  0E01               	movlw	1
  4874  000586  6E25               	movwf	___aldiv@sign^0,c
  4875  000588                     l2104:
  4876  000588  BE1F               	btfsc	(___aldiv@dividend+3)^0,7,c
  4877  00058A  EFCB  F002         	goto	u1100
  4878  00058E  EFC9  F002         	goto	u1101
  4879  000592                     u1101:
  4880  000592  EFD5  F002         	goto	l2110
  4881  000596                     u1100:
  4882  000596  1E1F               	comf	(___aldiv@dividend+3)^0,f,c
  4883  000598  1E1E               	comf	(___aldiv@dividend+2)^0,f,c
  4884  00059A  1E1D               	comf	(___aldiv@dividend+1)^0,f,c
  4885  00059C  6C1C               	negf	___aldiv@dividend^0,c
  4886  00059E  0E00               	movlw	0
  4887  0005A0  221D               	addwfc	(___aldiv@dividend+1)^0,f,c
  4888  0005A2  221E               	addwfc	(___aldiv@dividend+2)^0,f,c
  4889  0005A4  221F               	addwfc	(___aldiv@dividend+3)^0,f,c
  4890  0005A6  0E01               	movlw	1
  4891  0005A8  1A25               	xorwf	___aldiv@sign^0,f,c
  4892  0005AA                     l2110:
  4893  0005AA  0E00               	movlw	0
  4894  0005AC  6E26               	movwf	___aldiv@quotient^0,c
  4895  0005AE  0E00               	movlw	0
  4896  0005B0  6E27               	movwf	(___aldiv@quotient+1)^0,c
  4897  0005B2  0E00               	movlw	0
  4898  0005B4  6E28               	movwf	(___aldiv@quotient+2)^0,c
  4899  0005B6  0E00               	movlw	0
  4900  0005B8  6E29               	movwf	(___aldiv@quotient+3)^0,c
  4901  0005BA  5020               	movf	___aldiv@divisor^0,w,c
  4902  0005BC  1021               	iorwf	(___aldiv@divisor+1)^0,w,c
  4903  0005BE  1022               	iorwf	(___aldiv@divisor+2)^0,w,c
  4904  0005C0  1023               	iorwf	(___aldiv@divisor+3)^0,w,c
  4905  0005C2  B4D8               	btfsc	status,2,c
  4906  0005C4  EFE6  F002         	goto	u1111
  4907  0005C8  EFE8  F002         	goto	u1110
  4908  0005CC                     u1111:
  4909  0005CC  EF1E  F003         	goto	l2132
  4910  0005D0                     u1110:
  4911  0005D0  0E01               	movlw	1
  4912  0005D2  6E24               	movwf	___aldiv@counter^0,c
  4913  0005D4  EFF2  F002         	goto	l2118
  4914  0005D8                     l2116:
  4915  0005D8  90D8               	bcf	status,0,c
  4916  0005DA  3620               	rlcf	___aldiv@divisor^0,f,c
  4917  0005DC  3621               	rlcf	(___aldiv@divisor+1)^0,f,c
  4918  0005DE  3622               	rlcf	(___aldiv@divisor+2)^0,f,c
  4919  0005E0  3623               	rlcf	(___aldiv@divisor+3)^0,f,c
  4920  0005E2  2A24               	incf	___aldiv@counter^0,f,c
  4921  0005E4                     l2118:
  4922  0005E4  AE23               	btfss	(___aldiv@divisor+3)^0,7,c
  4923  0005E6  EFF7  F002         	goto	u1121
  4924  0005EA  EFF9  F002         	goto	u1120
  4925  0005EE                     u1121:
  4926  0005EE  EFEC  F002         	goto	l2116
  4927  0005F2                     u1120:
  4928  0005F2                     l2120:
  4929  0005F2  90D8               	bcf	status,0,c
  4930  0005F4  3626               	rlcf	___aldiv@quotient^0,f,c
  4931  0005F6  3627               	rlcf	(___aldiv@quotient+1)^0,f,c
  4932  0005F8  3628               	rlcf	(___aldiv@quotient+2)^0,f,c
  4933  0005FA  3629               	rlcf	(___aldiv@quotient+3)^0,f,c
  4934  0005FC  5020               	movf	___aldiv@divisor^0,w,c
  4935  0005FE  5C1C               	subwf	___aldiv@dividend^0,w,c
  4936  000600  5021               	movf	(___aldiv@divisor+1)^0,w,c
  4937  000602  581D               	subwfb	(___aldiv@dividend+1)^0,w,c
  4938  000604  5022               	movf	(___aldiv@divisor+2)^0,w,c
  4939  000606  581E               	subwfb	(___aldiv@dividend+2)^0,w,c
  4940  000608  5023               	movf	(___aldiv@divisor+3)^0,w,c
  4941  00060A  581F               	subwfb	(___aldiv@dividend+3)^0,w,c
  4942  00060C  A0D8               	btfss	status,0,c
  4943  00060E  EF0B  F003         	goto	u1131
  4944  000612  EF0D  F003         	goto	u1130
  4945  000616                     u1131:
  4946  000616  EF16  F003         	goto	l2128
  4947  00061A                     u1130:
  4948  00061A  5020               	movf	___aldiv@divisor^0,w,c
  4949  00061C  5E1C               	subwf	___aldiv@dividend^0,f,c
  4950  00061E  5021               	movf	(___aldiv@divisor+1)^0,w,c
  4951  000620  5A1D               	subwfb	(___aldiv@dividend+1)^0,f,c
  4952  000622  5022               	movf	(___aldiv@divisor+2)^0,w,c
  4953  000624  5A1E               	subwfb	(___aldiv@dividend+2)^0,f,c
  4954  000626  5023               	movf	(___aldiv@divisor+3)^0,w,c
  4955  000628  5A1F               	subwfb	(___aldiv@dividend+3)^0,f,c
  4956  00062A  8026               	bsf	___aldiv@quotient^0,0,c
  4957  00062C                     l2128:
  4958  00062C  90D8               	bcf	status,0,c
  4959  00062E  3223               	rrcf	(___aldiv@divisor+3)^0,f,c
  4960  000630  3222               	rrcf	(___aldiv@divisor+2)^0,f,c
  4961  000632  3221               	rrcf	(___aldiv@divisor+1)^0,f,c
  4962  000634  3220               	rrcf	___aldiv@divisor^0,f,c
  4963  000636  2E24               	decfsz	___aldiv@counter^0,f,c
  4964  000638  EFF9  F002         	goto	l2120
  4965  00063C                     l2132:
  4966  00063C  5025               	movf	___aldiv@sign^0,w,c
  4967  00063E  B4D8               	btfsc	status,2,c
  4968  000640  EF24  F003         	goto	u1141
  4969  000644  EF26  F003         	goto	u1140
  4970  000648                     u1141:
  4971  000648  EF2E  F003         	goto	l2136
  4972  00064C                     u1140:
  4973  00064C  1E29               	comf	(___aldiv@quotient+3)^0,f,c
  4974  00064E  1E28               	comf	(___aldiv@quotient+2)^0,f,c
  4975  000650  1E27               	comf	(___aldiv@quotient+1)^0,f,c
  4976  000652  6C26               	negf	___aldiv@quotient^0,c
  4977  000654  0E00               	movlw	0
  4978  000656  2227               	addwfc	(___aldiv@quotient+1)^0,f,c
  4979  000658  2228               	addwfc	(___aldiv@quotient+2)^0,f,c
  4980  00065A  2229               	addwfc	(___aldiv@quotient+3)^0,f,c
  4981  00065C                     l2136:
  4982  00065C  C026  F01C         	movff	___aldiv@quotient,?___aldiv
  4983  000660  C027  F01D         	movff	___aldiv@quotient+1,?___aldiv+1
  4984  000664  C028  F01E         	movff	___aldiv@quotient+2,?___aldiv+2
  4985  000668  C029  F01F         	movff	___aldiv@quotient+3,?___aldiv+3
  4986  00066C  0012               	return		;funcret
  4987  00066E                     __end_of___aldiv:
  4988                           	opt callstack 0
  4989                           
  4990 ;; *************** function _desbordamiento *****************
  4991 ;; Defined at:
  4992 ;;		line 66 in file "main.c"
  4993 ;; Parameters:    Size  Location     Type
  4994 ;;		None
  4995 ;; Auto vars:     Size  Location     Type
  4996 ;;		None
  4997 ;; Return value:  Size  Location     Type
  4998 ;;                  1    wreg      void 
  4999 ;; Registers used:
  5000 ;;		wreg, status,2
  5001 ;; Tracked objects:
  5002 ;;		On entry : 0/0
  5003 ;;		On exit  : 0/0
  5004 ;;		Unchanged: 0/0
  5005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5006 ;;      Params:         0       0       0       0       0       0       0       0       0
  5007 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5008 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5009 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5010 ;;Total ram usage:        0 bytes
  5011 ;; Hardware stack levels used:    1
  5012 ;; This function calls:
  5013 ;;		Nothing
  5014 ;; This function is called by:
  5015 ;;		Interrupt level 2
  5016 ;; This function uses a non-reentrant model
  5017 ;;
  5018                           
  5019                           	psect	intcode
  5020  000008                     __pintcode:
  5021                           	opt callstack 0
  5022  000008                     _desbordamiento:
  5023                           	opt callstack 24
  5024                           
  5025                           ;incstack = 0
  5026  000008  8238               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5027  00000A  ED8B  F006         	call	int_func,f	;refresh shadow registers
  5028                           
  5029                           	psect	intcode_body
  5030  000D16                     __pintcode_body:
  5031                           	opt callstack 24
  5032  000D16                     int_func:
  5033                           	opt callstack 24
  5034  000D16  0006               	pop		; remove dummy address from shadow register refresh
  5035  000D18                     
  5036                           ;main.c: 68:     if (INTCONbits.TMR0IF) {
  5037  000D18  A4F2               	btfss	242,2,c	;volatile
  5038  000D1A  EF91  F006         	goto	i2u59_41
  5039  000D1E  EF93  F006         	goto	i2u59_40
  5040  000D22                     i2u59_41:
  5041  000D22  EF9A  F006         	goto	i2l1582
  5042  000D26                     i2u59_40:
  5043  000D26                     
  5044                           ;main.c: 70:         INTCONbits.TMR0IF = 0;
  5045  000D26  94F2               	bcf	242,2,c	;volatile
  5046                           
  5047                           ;main.c: 72:         TMR0 = VALOR_TIMER0;
  5048  000D28  C036  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
  5049  000D2C  C037  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
  5050  000D30                     
  5051                           ;main.c: 74:         overflowTimer = 1;
  5052  000D30  0E01               	movlw	1
  5053  000D32  6E17               	movwf	_overflowTimer^0,c
  5054  000D34                     i2l1582:
  5055                           
  5056                           ;main.c: 78:     if (PIR1bits.RCIF) {
  5057  000D34  AA9E               	btfss	158,5,c	;volatile
  5058  000D36  EF9F  F006         	goto	i2u60_41
  5059  000D3A  EFA1  F006         	goto	i2u60_40
  5060  000D3E                     i2u60_41:
  5061  000D3E  EFA5  F006         	goto	i2l153
  5062  000D42                     i2u60_40:
  5063  000D42                     
  5064                           ;main.c: 80:         byteUart = RCREG;
  5065  000D42  CFAE F016          	movff	4014,_byteUart	;volatile
  5066  000D46                     
  5067                           ;main.c: 81:         datoRecibido = 1;
  5068  000D46  0E01               	movlw	1
  5069  000D48  6E18               	movwf	_datoRecibido^0,c
  5070  000D4A                     i2l153:
  5071  000D4A  9238               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5072  000D4C  0011               	retfie		f
  5073  000D4E                     __end_of_desbordamiento:
  5074                           	opt callstack 0
  5075                           
  5076                           	psect	rparam
  5077  0000                     
  5078                           	psect	temp
  5079  000038                     btemp:
  5080                           	opt callstack 0
  5081  000038                     	ds	1
  5082  0000                     int$flags	set	btemp
  5083  0000                     wtemp8	set	btemp+1
  5084  0000                     ttemp5	set	btemp+1
  5085  0000                     ttemp6	set	btemp+4
  5086  0000                     ttemp7	set	btemp+8
  5087                           tosu	equ	0xFFF
  5088                           tosh	equ	0xFFE
  5089                           tosl	equ	0xFFD
  5090                           stkptr	equ	0xFFC
  5091                           pclatu	equ	0xFFB
  5092                           pclath	equ	0xFFA
  5093                           pcl	equ	0xFF9
  5094                           tblptru	equ	0xFF8
  5095                           tblptrh	equ	0xFF7
  5096                           tblptrl	equ	0xFF6
  5097                           tablat	equ	0xFF5
  5098                           prodh	equ	0xFF4
  5099                           prodl	equ	0xFF3
  5100                           indf0	equ	0xFEF
  5101                           postinc0	equ	0xFEE
  5102                           postdec0	equ	0xFED
  5103                           preinc0	equ	0xFEC
  5104                           plusw0	equ	0xFEB
  5105                           fsr0h	equ	0xFEA
  5106                           fsr0l	equ	0xFE9
  5107                           wreg	equ	0xFE8
  5108                           indf1	equ	0xFE7
  5109                           postinc1	equ	0xFE6
  5110                           postdec1	equ	0xFE5
  5111                           preinc1	equ	0xFE4
  5112                           plusw1	equ	0xFE3
  5113                           fsr1h	equ	0xFE2
  5114                           fsr1l	equ	0xFE1
  5115                           bsr	equ	0xFE0
  5116                           indf2	equ	0xFDF
  5117                           postinc2	equ	0xFDE
  5118                           postdec2	equ	0xFDD
  5119                           preinc2	equ	0xFDC
  5120                           plusw2	equ	0xFDB
  5121                           fsr2h	equ	0xFDA
  5122                           fsr2l	equ	0xFD9
  5123                           status	equ	0xFD8


Data Sizes:
    Strings     685
    Constant    0
    Data        2
    BSS         99
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     26      55
    BANK0           160      0      72
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 72
		 -> STR_27(CODE[42]), STR_26(CODE[3]), STR_25(CODE[14]), STR_24(CODE[49]), 
		 -> STR_23(CODE[37]), STR_22(CODE[27]), STR_21(CODE[37]), STR_20(CODE[37]), 
		 -> STR_19(CODE[32]), STR_18(CODE[31]), STR_17(CODE[72]), STR_16(CODE[32]), 
		 -> STR_15(CODE[31]), STR_14(CODE[51]), STR_13(CODE[23]), STR_12(CODE[26]), 
		 -> STR_11(CODE[55]), STR_10(CODE[32]), STR_9(CODE[31]), STR_8(CODE[51]), 
		 -> STR_7(CODE[25]), STR_6(CODE[37]), STR_5(CODE[31]), STR_4(CODE[43]), 
		 -> STR_3(CODE[16]), STR_2(CODE[32]), STR_1(CODE[31]), 


Critical Paths under _main in COMRAM

    _main->_UART_init
    _sistemaRegado->_encenderBombas
    _lecturaAnalogaSensores->_dameHumedadSuelo
    _encenderBombas->_estaSeco
    _dameHoraActual->_leer_rtc
    _leer_rtc->_i2c_envia_dato
    _leer_rtc->_i2c_recibe_dato
    _sistemaPrincipal->_setTiempoRegar
    _setTiempoRegar->_escribeHorariosMemoria
    _mostrarMenu->_UART_printf
    _fijaHoraRtc->_setRtc
    _setRtc->_escribe_rtc
    _escribe_rtc->_i2c_envia_dato
    _asignarHorarios->_escribeHorariosMemoria
    _escribeHorariosMemoria->_escribe_eeprom
    _escribe_eeprom->___wmul
    _UART_printf->_UART_write
    _restablecerDatosSensor->_constructorSensor
    _leeHorariosMemoria->___wmul
    _leeHorariosMemoria->_leer_eeprom
    _leer_eeprom->_i2c_envia_dato
    _leer_eeprom->_i2c_recibe_dato
    _i2c_reinicia_com->_i2c_espera
    _i2c_recibe_dato->_i2c_espera
    _i2c_inicia_com->_i2c_espera
    _i2c_envia_dato->_i2c_espera
    _i2c_detener->_i2c_espera
    _inicializarObjetos->___wmul
    _UART_init->___aldiv

Critical Paths under _desbordamiento in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _desbordamiento in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _desbordamiento in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _desbordamiento in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _desbordamiento in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _desbordamiento in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _desbordamiento in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _desbordamiento in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _desbordamiento in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   27242
                          _UART_init
                      _configurarAdc
                        _i2c_iniciar
                 _inicializarObjetos
                 _leeHorariosMemoria
                        _mostrarMenu
             _restablecerDatosSensor
                   _sistemaPrincipal
                      _sistemaRegado
 ---------------------------------------------------------------------------------
 (1) _sistemaRegado                                        0     0      0    1198
                     _dameHoraActual
                     _encenderBombas
                          _horaRegar
             _lecturaAnalogaSensores
 ---------------------------------------------------------------------------------
 (2) _lecturaAnalogaSensores                               3     3      0     112
                                              2 COMRAM     3     3      0
                   _dameHumedadSuelo
 ---------------------------------------------------------------------------------
 (3) _dameHumedadSuelo                                     2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _horaRegar                                            3     1      2       0
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _encenderBombas                                       5     5      0     905
                                              2 COMRAM     5     5      0
                           _estaSeco
 ---------------------------------------------------------------------------------
 (3) _estaSeco                                             2     0      2     630
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _dameHoraActual                                       0     0      0     181
                      _convertirDato
                           _leer_rtc
 ---------------------------------------------------------------------------------
 (3) _leer_rtc                                             2     2      0      90
                                              2 COMRAM     2     2      0
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (3) _convertirDato                                        3     3      0      91
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _sistemaPrincipal                                     3     3      0   19080
                                             22 COMRAM     3     3      0
                        _UART_printf
                    _asignarHorarios
                        _fijaHoraRtc
                        _mostrarMenu
                     _setTiempoRegar
 ---------------------------------------------------------------------------------
 (2) _setTiempoRegar                                       8     8      0    4811
                                             14 COMRAM     8     8      0
                        _UART_printf
                          _UART_read
             _escribeHorariosMemoria
 ---------------------------------------------------------------------------------
 (2) _mostrarMenu                                          0     0      0    2119
                        _UART_printf
 ---------------------------------------------------------------------------------
 (2) _fijaHoraRtc                                          1     1      0    5359
                                             11 COMRAM     1     1      0
                        _UART_printf
                        _escribe_rtc
                             _setRtc
 ---------------------------------------------------------------------------------
 (3) _setRtc                                               7     7      0    2793
                                              4 COMRAM     7     7      0
                        _UART_printf
                          _UART_read
                        _escribe_rtc
 ---------------------------------------------------------------------------------
 (4) _escribe_rtc                                          2     1      1     446
                                              2 COMRAM     2     1      1
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (2) _asignarHorarios                                      5     5      0    4650
                                             14 COMRAM     5     5      0
                        _UART_printf
                          _UART_read
             _escribeHorariosMemoria
 ---------------------------------------------------------------------------------
 (3) _escribeHorariosMemoria                               4     4      0    2253
                                             10 COMRAM     4     4      0
                             ___wmul
                     _escribe_eeprom
 ---------------------------------------------------------------------------------
 (4) _escribe_eeprom                                       4     1      3     544
                                              6 COMRAM     4     1      3
                             ___wmul (ARG)
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (3) _UART_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART_printf                                          2     0      2    2119
                                              1 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (4) _UART_write                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _restablecerDatosSensor                               2     2      0     387
                                              4 COMRAM     2     2      0
                  _constructorSensor
 ---------------------------------------------------------------------------------
 (2) _constructorSensor                                    4     0      4     297
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _leeHorariosMemoria                                   4     4      0    2049
                                              6 COMRAM     4     4      0
                             ___wmul
                        _leer_eeprom
 ---------------------------------------------------------------------------------
 (2) _leer_eeprom                                          4     2      2     340
                                              2 COMRAM     4     2      2
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (4) _i2c_reinicia_com                                     0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_recibe_dato                                      1     1      0      23
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_inicia_com                                       0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_envia_dato                                       1     1      0      22
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_detener                                          0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (5) _i2c_espera                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _inicializarObjetos                                   2     2      0    1661
                                              6 COMRAM     2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1527
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _i2c_iniciar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4     748
                                             14 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _desbordamiento                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
   _configurarAdc
   _i2c_iniciar
   _inicializarObjetos
     ___wmul
   _leeHorariosMemoria
     ___wmul
     _leer_eeprom
       _i2c_detener
         _i2c_espera
       _i2c_envia_dato
         _i2c_espera
       _i2c_inicia_com
         _i2c_espera
       _i2c_recibe_dato
         _i2c_espera
       _i2c_reinicia_com
         _i2c_espera
   _mostrarMenu
     _UART_printf
       _UART_write
   _restablecerDatosSensor
     _constructorSensor
   _sistemaPrincipal
     _UART_printf
       _UART_write
     _asignarHorarios
       _UART_printf
         _UART_write
       _UART_read
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
     _fijaHoraRtc
       _UART_printf
         _UART_write
       _escribe_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
       _setRtc
         _UART_printf
           _UART_write
         _UART_read
         _escribe_rtc
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
     _mostrarMenu
       _UART_printf
         _UART_write
     _setTiempoRegar
       _UART_printf
         _UART_write
       _UART_read
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
   _sistemaRegado
     _dameHoraActual
       _convertirDato
       _leer_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _encenderBombas
       _estaSeco
     _horaRegar
     _lecturaAnalogaSensores
       _dameHumedadSuelo

 _desbordamiento (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      48       5       45.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1A      37       1       58.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7F      20        0.0%
DATA                 0      0      7F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Apr 20 02:11:06 2020

          __size_of_escribe_eeprom 0030                                 l81 0F96  
                               l90 0F20                                 l75 0E88  
                               l84 0FA6                                 l69 0F66  
                               l93 0EEC                                 l78 0F9E  
                               l87 0F84                                 l96 0E3C  
                               l99 0ECE                     ?_configurarAdc 001C  
              ___wmul@multiplicand 001E                        __CFG_BORV$3 000000  
                     __CFG_CP0$OFF 000000                       __CFG_CP1$OFF 000000  
                     __CFG_CP2$OFF 000000                       __CFG_CP3$OFF 000000  
                              l102 0AFA                                l111 0F42  
                              l120 0DB8                                l105 0F68  
                              l114 0F50                                l108 0F78  
                              l300 0966                                l240 0560  
                              l313 0EAE                                l170 09FC  
                              l162 0F06                                l226 0266  
                              l156 0F8E                                l260 0D70  
                              l229 0C9A                                l173 0E62  
                              l165 0E12                                l262 0D7E  
                              l159 0F3A                                l183 0802  
                              l263 0D82                                l280 0BB8  
                              l257 0430                                l186 0DE8  
                              l194 073A                                l283 0C52  
                              l268 0C08                                l292 0B64  
                              l189 0D14                                l199 08CA  
                              l392 066C                       __CFG_CPB$OFF 000000  
                     __CFG_CPD$OFF 000000                                u700 0F00  
                              u701 0EFA                                u710 0F02  
                              u720 0760                                u800 0E0E  
                              u721 075C                                u650 0E7A  
                              u730 0770                                u810 0052  
                              u651 0E76                                u731 076C  
                              u811 004E                                u660 0E88  
                              u740 0782                                u900 0262  
                              u820 008C                                u661 0E84  
                              u741 077E                                u901 025E  
                              u821 0088                                u670 0F50  
                              u910 046C                                u750 07E8  
                              u830 00C2                                u671 0F4C  
                              u911 0468                                u751 07E4  
                              u831 00BE                                u680 0F76  
                              u920 047C                                u760 07F8  
                              u840 00F8                                u681 0F72  
                              u921 0478                                u761 07F4  
                              u841 00F4                                u690 0DB8  
                              u770 073A                                u930 048E  
                              u850 012E                                u691 0DB4  
                              u771 0736                                u931 048A  
                              u851 012A                                u940 04F2  
                              u860 0164                                u780 0D7E  
                              u941 04EE                                u861 0160  
                              u781 0D7A                                u950 0502  
                              u870 019A                                u790 0E0C  
                              u951 04FE                                u871 0196  
                              u791 0E06                                u960 0528  
                              u880 01D0                                u961 0524  
                              u881 01CC                                u970 0538  
                              u890 0252                                u971 0534  
                              u891 024E                                u980 02A2  
                              u981 029E                                u990 02B2  
                              u991 02AE                       __CFG_BOR$OFF 000000  
                              prod 000FF3                                wreg 000FE8  
                     __CFG_LVP$OFF 000000                  ?_i2c_reinicia_com 001C  
                     ?_escribe_rtc 001E                       __CFG_WDT$OFF 000000  
                             l2000 028C                               l2010 02C8  
                             l2002 0292                               l2100 0574  
                             l2012 02CC                               l2004 02A2  
                             l2020 02E8                               l2110 05AA  
                             l2102 0584                               l2030 0328  
                             l2022 02EC                               l2014 02D8  
                             l2006 02B2                               l2120 05F2  
                             l2112 05BA                               l2104 0588  
                             l2040 034C                               l2032 0338  
                             l2024 02F8                               l2016 02DC  
                             l2008 02C4                               l2130 0636  
                             l2122 05FC                               l2114 05D0  
                             l2106 0596                               l2202 0BC2  
                             l2050 0388                               l2042 0352  
                             l2034 0344                               l2018 02E0  
                             l2026 0308                               l2210 0B04  
                             l2124 061A                               l2116 05D8  
                             l2132 063C                               l2108 05A6  
                             l2140 0A8C                               l2204 0BE8  
                             l2052 038C                               l2044 0362  
                             l2060 03A8                               l2028 030C  
                             l2212 0B0C                               l2220 0B2C  
                             l2300 0A2A                               l2134 064C  
                             l2126 062A                               l2118 05E4  
                             l2150 0AEC                               l2142 0A8C  
                             l2206 0BEC                               l2070 03E8  
                             l2062 03AC                               l2054 0398  
                             l2046 0372                               l2214 0B14  
                             l2222 0B5E                               l2230 08CC  
                             l2310 0A3E                               l2302 0A2E  
                             l2136 065C                               l2128 062C  
                             l2160 0AF6                               l2152 0AEE  
                             l2144 0A8E                               l2072 03F8  
                             l2064 03B8                               l2056 039C  
                             l2048 0384                               l2224 0B62  
                             l2216 0B1C                               l2208 0AFE  
                             l2080 0B66                               l2240 08FE  
                             l2232 08DC                               l2320 0A5E  
                             l2312 0A46                               l2304 0A32  
                             l2162 0AF8                               l2154 0AF0  
                             l2146 0A90                               l2170 0970  
                             l2074 0404                               l2058 03A0  
                             l2066 03C8                               l2090 0B98  
                             l2250 094A                               l2242 0910  
                             l2234 08E0                               l2330 0A80  
                             l2322 0A62                               l2314 0A48  
                             l2306 0A36                               l2156 0AF2  
                             l2148 0AC4                               l2172 09DC  
                             l2164 0968                               l1700 0F08  
                             l2076 0418                               l2068 03CC  
                             l2340 01EC                               l2092 0B9C  
                             l2252 094E                               l2236 08F4  
                             l2244 0920                               l2324 0A66  
                             l2316 0A4A                               l2308 0A3A  
                             l2158 0AF4                               l1454 0F52  
                             l2174 09E0                               l1710 0F1E  
                             l1702 0F0C                               l2190 08A6  
                             l2182 0814                               l2094 0C0A  
                             l2078 042C                               l2342 0B40  
                             l2086 0B6E                               l2254 0962  
                             l2246 0924                               l2238 08FC  
                             l2326 0A6C                               l2318 0A4E  
                             l2096 0562                               l1456 0F56  
                             l1704 0F12                               l2192 08AA  
                             l2184 0842                               l2176 0804  
                             l1800 067E                               l2088 0B88  
                             l2248 093A                               l2328 0A7C  
                             l2098 0566                               l1482 0F22  
                             l1706 0F1A                               l2194 08AE  
                             l2186 0846                               l1722 0D84  
                             l1730 0DBA                               l1810 071A  
                             l1802 06AE                               l1714 0ED2  
                             l2290 0A08                               l1708 0F1C  
                             l2188 0878                               l2196 0BBA  
                             l1724 0D88                               l1716 0F68  
                             l1732 0DDA                               l1812 071E  
                             l1804 06B2                               l1740 0E16  
                             l1900 01D6                               l1820 0D6C  
                             l2292 0A0C                               l1734 0E8A  
                             l1726 0D98                               l1718 0F76  
                             l1806 06E6                               l1750 0EBA  
                             l1742 0E3A                               l1902 0232  
                             l1830 0DEA                               l1822 0D6E  
                             l1814 0D50                               l2294 0A0E  
                             l1736 0EA6                               l1672 0E64  
                             l1680 0F9C                               l1840 0D12  
                             l1728 0D9C                               l1808 0716  
                             l1760 073E                               l1920 0C6C  
                             l1752 0ECC                               l1904 0236  
                             l1824 0D80                               l1816 0D58  
                             l2296 0A12                               l2288 09FE  
                             l1674 0E64                               l1682 0FA0  
                             l1690 0F84                               l1930 0432  
                             l1770 0760                               l1922 0C72  
                             l1914 0C54                               l1746 0EB2  
                             l1834 0E3E                               l1906 0252  
                             l1850 0022                               l1818 0D5A  
                             l2298 0A26                               l1676 0E7A  
                             l1684 0FA4                               l1836 0CDA  
                             l1828 0F86                               l1940 0456  
                             l1932 0436                               l1772 0770  
                             l1780 07A8                               l1924 0C7E  
                             l1916 0C54                               l1748 0EB2  
                             l1756 0EEE                               l1908 0262  
                             l1852 0052                               l1844 0012  
                             l1686 0F7C                               l1678 0F98  
                             l1838 0D04                               l1694 0F3E  
                             l1950 0492                               l1942 045C  
                             l1934 0442                               l1790 07E8  
                             l1782 07AC                               l1774 0782  
                             l1766 074A                               l1926 0C84  
                             l1918 0C60                               l1870 00F8  
                             l1862 0092                               l1854 0054  
                             l1688 0F80                               l1696 0F90  
                             l1952 0496                               l1944 046C  
                             l1960 04B2                               l1792 07F8  
                             l1784 07B8                               l1776 0798  
                             l1768 0750                               l1928 0C90  
                             l1880 0134                               l1864 00C2  
                             l1856 005C                               l1698 0F94  
                             l1794 066E                               l1970 04F2  
                             l1962 04B6                               l1954 04A2  
                             l1946 047C                               l1778 07A0  
                             l1786 07C8                               l1882 0164  
                             l1874 00FE                               l1858 008C  
                             l1980 0528                               l1972 0502  
                             l1964 04C2                               l1956 04A6  
                             l1948 048E                               l1788 07CC  
                             l1892 01A0                               l1876 012E  
                             l1868 00C8                               l1982 0538  
                             l1974 050E                               l1958 04AA  
                             l1966 04D2                               l1990 0268  
                             l1894 01D0                               l1886 016A  
                             l1984 053C                               l1976 0514  
                             l1968 04D6                               l1992 026C  
                             l1888 019A                               l1986 0548  
                             l1978 0518                               l1994 0278  
                             l1988 055C                       ?_leer_eeprom 001E  
                             STR_1 7F5C                               STR_2 7F1D  
                             STR_3 7FE0                               STR_4 7E34  
                             STR_5 7F3D                               STR_6 7ED3  
                             STR_7 7FB0                               STR_8 7DD0  
                             STR_9 7F5C                               u1000 02C4  
                             u1001 02C0                               u1010 0328  
                             u1011 0324                               u1100 0596  
                             u1020 0338                               u1101 0592  
                             u1021 0334                               u1110 05D0  
                             u1030 0362                               u1111 05CC  
                             u1031 035E                               u1120 05F2  
                             u1040 0372                               u1200 0910  
                             u1121 05EE                               u1041 036E  
                             u1201 090C                               u1130 061A  
                             u1050 0384                               u1210 093A  
                             u1131 0616                               u1051 0380  
                             u1211 0936                               u1140 064C  
                             u1060 03E8                               u1220 094A  
                             u1141 0648                               u1061 03E4  
                             u1221 0946                               u1150 09FC  
                             u1070 03F8                               u1151 09F8  
                             u1071 03F4                               u1160 08CA  
                             u1080 0BB8                               u1161 08C6  
                             u1081 0BB4                               u1090 0574  
                             u1170 0C08                               u1250 0A5E  
                             u1091 0570                               u1307 0D0A  
                             u1171 0C04                               u1251 0A5A  
                             u1180 08DC                               u1260 0A7C  
                             u1181 08D8                               u1261 0A78  
                             u1190 08F4                               u1191 08F0  
                             _LATD 000F8C                               u1277 0B8E  
                             u1287 0D52                               u1297 0DE0  
                             _TMR0 000FD6               _minutosTranscurridos 0014  
               ??_i2c_reinicia_com 001D            escribeHorariosMemoria@i 0028  
                    ??_i2c_detener 001D                               _main 09FE  
                             _hora 001B                               fsr2h 000FDA  
                             indf2 000FDF                               fsr2l 000FD9  
                             btemp 0038                     ?_sistemaRegado 001C  
         __size_of_asignarHorarios 0130                      ??_i2c_iniciar 001C  
                             prodh 000FF4                               prodl 000FF3  
                             start 000E           ??_restablecerDatosSensor 0020  
                    __CFG_IESO$OFF 000000                  _constructorSensor 0F86  
          __size_of_setTiempoRegar 01CA                       ___param_bank 000000  
               ?_constructorSensor 001C                 setTiempoRegar@hora 002B  
               _leeHorariosMemoria 0804                   ??_encenderBombas 001E  
                   _i2c_envia_dato 0F7A                      __CFG_PLLDIV$1 000000  
                   _i2c_inicia_com 0F98                    __end_of___aldiv 066E  
                            ?_main 001C                      _convertirDato 0EB0  
                            STR_10 7F1D                              STR_11 7D99  
                            STR_12 7F96                              STR_20 7E89  
                            STR_13 7FC9                              STR_21 7EAE  
                            STR_14 7DD0                              STR_22 7F7B  
                            STR_15 7F5C                              STR_23 7EF8  
                            STR_16 7F1D                              STR_24 7E03  
                            STR_25 7FF0                              STR_17 7D51  
                            STR_26 7FAD                              STR_18 7F5C  
                            STR_19 7F1D                              STR_27 7E5F  
              ??_constructorSensor 0020                  convertirDato@dato 001D  
                            _T0CON 000FD5                              i2l153 0D4A  
              ?_leeHorariosMemoria 001C                              _RCREG 000FAE  
                            _SPBRG 000FAF                              _PORTA 000F80  
                            _PORTE 000F84                      __CFG_USBDIV$1 000000  
                            _TRISA 000F92                              _TRISD 000F95  
                            _TRISE 000F96                              _TXREG 000FAD  
                    __CFG_PWRT$OFF 000000                      __CFG_WRT0$OFF 000000  
                    __CFG_WRT1$OFF 000000                      __CFG_WRT2$OFF 000000  
                    __CFG_WRT3$OFF 000000                     __CFG_EBTR0$OFF 000000  
                   __CFG_FCMEN$OFF 000000                     __CFG_EBTR1$OFF 000000  
                   __CFG_EBTR2$OFF 000000                     __CFG_EBTR3$OFF 000000  
                    __CFG_WRTB$OFF 000000                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                     __CFG_EBTRB$OFF 000000  
               __size_of_UART_init 0070                 __size_of_UART_read 0012  
                      ?_UART_write 001C                              tablat 000FF5  
                            ttemp5 0039                              ttemp6 003C  
                            ttemp7 0040                              status 000FD8  
                            wtemp8 0039                 escribe_eeprom@dato 0024  
        __end_of_constructorSensor 0F90               ??_leeHorariosMemoria 0022  
                   __CFG_ICPRT$OFF 000000                         _i2c_espera 0E64  
                 ??_dameHoraActual 0020                     __CFG_MCLRE$OFF 000000  
                  __initialization 0C9C                    setTiempoRegar@i 002C  
              __end_of_i2c_detener 0FA8    __size_of_lecturaAnalogaSensores 0054  
           __end_of_i2c_envia_dato 0F86                       __end_of_main 0A8C  
         ??_escribeHorariosMemoria 0026                    ??_configurarAdc 001C  
              setTiempoRegar@i_704 002E             __end_of_i2c_inicia_com 0FA0  
               _inicializarObjetos 0968                __end_of_i2c_iniciar 0F68  
           sistemaPrincipal@opcion 0034                   _dameHumedadSuelo 0D4E  
                   ?_convertirDato 001C               __size_of_fijaHoraRtc 0048  
                           ??_main 0036          setTiempoRegar@tiempoRegar 002A  
                    __activetblptr 000002                ?_inicializarObjetos 001C  
               i2c_envia_dato@dato 001D                    __CFG_CCP2MX$OFF 000000  
                           _ADCON1 000FC1                             _ADCON2 000FC0  
                           _ADRESL 000FC3             encenderBombas@flagSeco 0020  
               convertirDato@datoR 001E                             i2l1580 0D30  
                           i2l1582 0D34                             i2l1584 0D42  
                           i2l1576 0D18                             i2l1586 0D46  
                           i2l1578 0D26                    ??_sistemaRegado 0023  
                           _SSPADD 000FC8                             _SSPBUF 000FC9  
             ??_inicializarObjetos 0022    __size_of_restablecerDatosSensor 0050  
                   __CFG_XINST$OFF 000000           __end_of_sistemaPrincipal 0B66  
                   _escribe_eeprom 0DBA                    ?_i2c_envia_dato 001C  
                        ??___aldiv 0024                             ___wmul 0E8A  
                __end_of_UART_init 0AFC                  __end_of_UART_read 0F7A  
                ??_asignarHorarios 002A                   __end_of_leer_rtc 0E3E  
                  ?_i2c_inicia_com 001C                   __end_of_estaSeco 0F08  
              __size_of_UART_write 0016                       ?_UART_printf 001D  
                           clear_0 0CBA                             clear_1 0CC6  
                           _setRtc 073C                    _i2c_recibe_dato 0F08  
                     ?_mostrarMenu 001C                       __pdataCOMRAM 0036  
             escribe_rtc@direccion 001F                       __mediumconst 7D50  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8             _lecturaAnalogaSensores 0B66  
                       __accesstop 0060            __end_of__initialization 0CCC  
             __size_of_escribe_rtc 001E                    __CFG_PBADEN$OFF 000000  
             __size_of_leer_eeprom 003C                    __CFG_FOSC$XT_XT 000000  
                      _i2c_detener 0FA0         __size_of_constructorSensor 000A  
                    ___rparam_used 000001                        _i2c_iniciar 0F52  
           __end_of_escribe_eeprom 0DEA                        ?_i2c_espera 001C  
                   _setTiempoRegar 0268                   setTiempoRegar@Rx 0031  
                   __pcstackCOMRAM 001C                       leer_rtc@dato 001F  
  __size_of_escribeHorariosMemoria 00CE                    ??_convertirDato 001C  
           _restablecerDatosSensor 0BBA                       _datoRecibido 0018  
                       __pbssBANK0 0060            __size_of_desbordamiento 0D46  
               __size_of_horaRegar 002A             __end_of_setTiempoRegar 0432  
                  ?_escribe_eeprom 0022                 _contInterrupciones 0011  
        __size_of_i2c_reinicia_com 0008                            ?___wmul 001C  
          __end_of_i2c_recibe_dato 0F22                            _ACKSTAT 007E2E  
                          ?_setRtc 001C                            i2u60_40 0D42  
                          i2u60_41 0D3E                __size_of_i2c_espera 0026  
                          i2u59_40 0D26                            i2u59_41 0D22  
           _escribeHorariosMemoria 066E                            _SSPCON1 000FC6  
                          _SSPCON2 000FC5                       ??_UART_write 001C  
                          _SSPSTAT 000FC7           __end_of_dameHumedadSuelo 0D84  
                        ?_leer_rtc 001C                          ?_estaSeco 001C  
                  __CFG_VREGEN$OFF 000000                    ?_setTiempoRegar 001C  
                          __Hparam 0000                            __Lparam 0000  
                          ___aldiv 0562                    __size_of___wmul 0026  
         constructorSensor@humedad 001E                    __CFG_STVREN$OFF 000000  
                          __pcinit 0C9C                            __ramtop 0800  
               __end_of_UART_write 0F52                    __size_of_setRtc 00C8  
                          __ptext0 09FE                            __ptext1 08CC  
                          __ptext2 0B66                            __ptext3 0D4E  
                          __ptext4 0DEA                            __ptext5 0012  
                          __ptext6 0EEE                            __ptext7 0E3E  
                          __ptext8 0E14                            __ptext9 0EB0  
                __end_of_horaRegar 0E14                          _T0CONbits 000FD5  
             __size_of_UART_printf 0036                            _regando 0013  
                 ___aldiv@dividend 001C                            _minutos 001A  
             __size_of_mostrarMenu 004A                     __pintcode_body 0D16  
             end_of_initialization 0CCC                         ??_leer_rtc 001E  
                       ??_estaSeco 001E                    _asignarHorarios 0432  
                    __Lmediumconst 7D50                            int_func 0D16  
                 ??_i2c_envia_dato 001D        __size_of_leeHorariosMemoria 00C8  
                          setRtc@i 0024                   ??_i2c_inicia_com 001D  
                        _RCSTAbits 000FAB                   ___aldiv@quotient 0026  
                          postdec2 000FDD                  ?_sistemaPrincipal 001C  
                          postinc0 000FEE                            postinc2 000FDE  
                    ??_fijaHoraRtc 0027                   ?_i2c_recibe_dato 001C  
            __end_of_configurarAdc 0F3C                 ??_sistemaPrincipal 0032  
                        _UART_init 0A8C                          _UART_read 0F68  
          ?_lecturaAnalogaSensores 001C          dameHumedadSuelo@canalLeer 001D  
          lecturaAnalogaSensores@i 001F                          _TRISBbits 000F93  
                        _TRISCbits 000F94            __size_of_encenderBombas 0256  
                   _desbordamiento 0008                     _UART_init$1471 0032  
                     ?_i2c_detener 001C              __end_of_sistemaRegado 0968  
                        _TXSTAbits 000FAC        __size_of_inicializarObjetos 0096  
                     ?_i2c_iniciar 001C                       ??_i2c_espera 001C  
                 _i2c_reinicia_com 0F90        setTiempoRegar@datoCapturado 0030  
                   __end_of___wmul 0EB0                      __pidataCOMRAM 0FA8  
          ?_restablecerDatosSensor 001C     __end_of_lecturaAnalogaSensores 0BBA  
                       ?_UART_init 002A                         ?_UART_read 001C  
              setRtc@datoCapturado 0023            __size_of_dameHoraActual 0026  
                   __end_of_setRtc 0804                __end_of_fijaHoraRtc 0C9C  
              start_initialization 0C9C            __end_of_asignarHorarios 0562  
escribeHorariosMemoria@contMemoria 0026             __end_of_desbordamiento 0D4E  
               __end_of_i2c_espera 0E8A                      ??_escribe_rtc 001F  
                    ??_leer_eeprom 0020                   ??_escribe_eeprom 0025  
              leeHorariosMemoria@i 0024               constructorSensor@pin 001F  
                         ??___wmul 0020     __end_of_restablecerDatosSensor 0C0A  
                 __CFG_LPT1OSC$OFF 000000                  leer_rtc@direccion 001E  
                         ??_setRtc 0020              __end_of_convertirDato 0ED0  
     asignarHorarios@datoCapturado 002B            ?_escribeHorariosMemoria 001C  
                      __pbssCOMRAM 0001                    ?_desbordamiento 001C  
                 ??_setTiempoRegar 002A                  ?_dameHumedadSuelo 001C  
                UART_printf@cadena 001D                 ??_dameHumedadSuelo 001C  
                __size_of_leer_rtc 002A                  __size_of_estaSeco 001A  
              __end_of_escribe_rtc 0EEE                __end_of_leer_eeprom 0D16  
                        __pintcode 0008                      __pmediumconst 7D50  
                         ?___aldiv 001C                        _fijaHoraRtc 0C54  
                       setRtc@dato 0022                        ??_UART_init 002E  
                      ??_UART_read 001C     __end_of_escribeHorariosMemoria 073C  
                   _encenderBombas 0012                          _horaRegar 0DEA  
                 ?_asignarHorarios 001C                    ___aldiv@divisor 0020  
                  ___aldiv@counter 0024                     ___wmul@product 0020  
                         _LATDbits 000F8C                           _PIE1bits 000F9D  
             __size_of_i2c_detener 0008                           _PIR1bits 000F9E  
          restablecerDatosSensor@i 0020               __size_of_i2c_iniciar 0016  
                 __CFG_WDTPS$32768 000000      leeHorariosMemoria@contMemoria 0022  
              asignarHorarios@hora 002A                      ??_UART_printf 001F  
                       _ADCON0bits 000FC2                     _dameHoraActual 0E3E  
                ___wmul@multiplier 001C             __end_of_encenderBombas 0268  
                    ??_mostrarMenu 001F                     UART_write@dato 001C  
                       ?_horaRegar 001C          __size_of_sistemaPrincipal 006A  
         __end_of_i2c_reinicia_com 0F98                        _escribe_rtc 0ED0  
                      _leer_eeprom 0CDA                       _VALOR_TIMER0 0036  
       __end_of_leeHorariosMemoria 08CC                          estaSeco@s 001C  
                         __Hrparam 0000                       _minutosRegar 0015  
                    UART_init@BAUD 002A                           __Lrparam 0000  
                 __size_of___aldiv 010C             __end_of_dameHoraActual 0E64  
                  ?_encenderBombas 001C           __size_of_i2c_recibe_dato 001A  
              __end_of_UART_printf 0DBA                           __ptext10 0AFC  
                         __ptext11 0268                           __ptext20 0D84  
                         __ptext12 0C0A                           __ptext21 0F3C  
                         __ptext13 0C54                           __ptext30 0FA0  
                         __ptext22 0BBA                           __ptext14 073C  
                         __ptext31 0E64                           __ptext23 0F86  
                         __ptext15 0ED0                           __ptext32 0968  
                         __ptext24 0804                           __ptext16 0432  
                         __ptext33 0E8A                           __ptext25 0CDA  
                         __ptext17 066E                           __ptext34 0F52  
                         __ptext26 0F90                           __ptext18 0DBA  
                         __ptext35 0F22                           __ptext27 0F08  
                         __ptext19 0F68                           __ptext36 0A8C  
                         __ptext28 0F98                           __ptext37 0562  
                         __ptext29 0F7A                __end_of_mostrarMenu 0C54  
                         _leer_rtc 0E14                           _estaSeco 0EEE  
       __end_of_inicializarObjetos 09FE                           _byteUart 0016  
           __size_of_configurarAdc 001A                inicializarObjetos@i 0022  
                    __size_of_main 008E                           _horarios 0060  
                         _segundos 0019                    encenderBombas@i 0021  
                         _sensores 0001                           int$flags 0038  
                  ?_dameHoraActual 001C            __size_of_i2c_envia_dato 000C  
          __size_of_i2c_inicia_com 0008           i2c_recibe_dato@datoleido 001D  
            __CFG_CPUDIV$OSC1_PLL2 000000                   ??_desbordamiento 001C  
           __size_of_sistemaRegado 009C                         _INTCONbits 000FF2  
               constructorSensor@s 001C                        ??_horaRegar 001E  
          escribe_eeprom@direccion 0022                           intlevel2 0000  
                  escribe_rtc@dato 001E                           setRtc@Rx 0026  
                  setRtc@direccion 0021                  asignarHorarios@Rx 002E  
                    _overflowTimer 0017                       ?_fijaHoraRtc 001C  
        __size_of_dameHumedadSuelo 0036                        _UART_printf 0D84  
                    _configurarAdc 0F22                        _mostrarMenu 0C0A  
                     ___aldiv@sign 0025                   asignarHorarios@i 002C  
                 _sistemaPrincipal 0AFC                    leer_eeprom@dato 0021  
                      _SSPCON2bits 000FC5                         _UART_write 0F3C  
                ??_i2c_recibe_dato 001D             __size_of_convertirDato 0020  
             leer_eeprom@direccion 001E                      _sistemaRegado 08CC  
         ??_lecturaAnalogaSensores 001E  
