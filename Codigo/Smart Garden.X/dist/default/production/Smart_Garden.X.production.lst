

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Jun 18 15:02:07 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    87                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    88                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    89                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    90                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    91  0000                     
    92                           ; Version 2.10
    93                           ; Generated 31/07/2019 GMT
    94                           ; 
    95                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    96                           ; All rights reserved.
    97                           ; 
    98                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    99                           ; 
   100                           ; Redistribution and use in source and binary forms, with or without modification, are
   101                           ; permitted provided that the following conditions are met:
   102                           ; 
   103                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   104                           ;        conditions and the following disclaimer.
   105                           ; 
   106                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   107                           ;        of conditions and the following disclaimer in the documentation and/or other
   108                           ;        materials provided with the distribution.
   109                           ; 
   110                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   111                           ;        software without specific prior written permission.
   112                           ; 
   113                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   114                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   115                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   116                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   117                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   118                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   119                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   120                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   121                           ; 
   122                           ; 
   123                           ; Code-generator required, PIC18F4550 Definitions
   124                           ; 
   125                           ; SFR Addresses
   126  0000                     
   127                           	psect	idataBANK1
   128  002FA4                     __pidataBANK1:
   129                           	opt callstack 0
   130                           
   131                           ;initializer for stoa@F1144
   132  002FA4  28                 	db	40
   133  002FA5  6E                 	db	110
   134  002FA6  75                 	db	117
   135  002FA7  6C                 	db	108
   136  002FA8  6C                 	db	108
   137  002FA9  29                 	db	41
   138  002FAA  00                 	db	0
   139                           
   140                           ;initializer for _VALOR_TIMER0
   141  002FAB  6769               	dw	26473
   142                           
   143                           ;initializer for _VALOR_TIMER0UART
   144  002FAD  6769               	dw	26473
   145  0000                     _TMR0	set	4054
   146  0000                     _TRISD	set	3989
   147  0000                     _T0CON	set	4053
   148  0000                     _T0CONbits	set	4053
   149  0000                     _LATD	set	3980
   150  0000                     _PIE1bits	set	3997
   151  0000                     _ADRESL	set	4035
   152  0000                     _ADRESH	set	4036
   153  0000                     _ADCON0bits	set	4034
   154  0000                     _ADCON2	set	4032
   155  0000                     _ADCON1	set	4033
   156  0000                     _INTCONbits	set	4082
   157  0000                     _LATDbits	set	3980
   158  0000                     _TRISDbits	set	3989
   159  0000                     _PORTDbits	set	3971
   160  0000                     _TXREG	set	4013
   161  0000                     _RCREG	set	4014
   162  0000                     _PIR1bits	set	3998
   163  0000                     _RCSTAbits	set	4011
   164  0000                     _TXSTAbits	set	4012
   165  0000                     _SPBRG	set	4015
   166  0000                     _TRISCbits	set	3988
   167  0000                     _SSPBUF	set	4041
   168  0000                     _SSPCON2bits	set	4037
   169  0000                     _SSPADD	set	4040
   170  0000                     _SSPCON2	set	4037
   171  0000                     _SSPCON1	set	4038
   172  0000                     _SSPSTAT	set	4039
   173  0000                     _TRISBbits	set	3987
   174  0000                     _ACKSTAT	set	32302
   175                           
   176                           	psect	mediumconst
   177  0079E8                     __pmediumconst:
   178                           	opt callstack 0
   179  0079E8  00                 	db	0
   180  0079E9                     STR_16:
   181  0079E9  0D                 	db	13
   182  0079EA  0A                 	db	10
   183  0079EB  20                 	db	32
   184  0079EC  49                 	db	73	;'I'
   185  0079ED  6E                 	db	110	;'n'
   186  0079EE  67                 	db	103	;'g'
   187  0079EF  72                 	db	114	;'r'
   188  0079F0  65                 	db	101	;'e'
   189  0079F1  73                 	db	115	;'s'
   190  0079F2  65                 	db	101	;'e'
   191  0079F3  20                 	db	32
   192  0079F4  6C                 	db	108	;'l'
   193  0079F5  6F                 	db	111	;'o'
   194  0079F6  73                 	db	115	;'s'
   195  0079F7  20                 	db	32
   196  0079F8  6D                 	db	109	;'m'
   197  0079F9  69                 	db	105	;'i'
   198  0079FA  6E                 	db	110	;'n'
   199  0079FB  75                 	db	117	;'u'
   200  0079FC  74                 	db	116	;'t'
   201  0079FD  6F                 	db	111	;'o'
   202  0079FE  73                 	db	115	;'s'
   203  0079FF  20                 	db	32
   204  007A00  71                 	db	113	;'q'
   205  007A01  75                 	db	117	;'u'
   206  007A02  65                 	db	101	;'e'
   207  007A03  20                 	db	32
   208  007A04  64                 	db	100	;'d'
   209  007A05  65                 	db	101	;'e'
   210  007A06  73                 	db	115	;'s'
   211  007A07  65                 	db	101	;'e'
   212  007A08  65                 	db	101	;'e'
   213  007A09  20                 	db	32
   214  007A0A  71                 	db	113	;'q'
   215  007A0B  75                 	db	117	;'u'
   216  007A0C  65                 	db	101	;'e'
   217  007A0D  20                 	db	32
   218  007A0E  73                 	db	115	;'s'
   219  007A0F  65                 	db	101	;'e'
   220  007A10  20                 	db	32
   221  007A11  72                 	db	114	;'r'
   222  007A12  69                 	db	105	;'i'
   223  007A13  65                 	db	101	;'e'
   224  007A14  67                 	db	103	;'g'
   225  007A15  75                 	db	117	;'u'
   226  007A16  65                 	db	101	;'e'
   227  007A17  20                 	db	32
   228  007A18  65                 	db	101	;'e'
   229  007A19  6E                 	db	110	;'n'
   230  007A1A  20                 	db	32
   231  007A1B  65                 	db	101	;'e'
   232  007A1C  73                 	db	115	;'s'
   233  007A1D  65                 	db	101	;'e'
   234  007A1E  20                 	db	32
   235  007A1F  68                 	db	104	;'h'
   236  007A20  6F                 	db	111	;'o'
   237  007A21  72                 	db	114	;'r'
   238  007A22  61                 	db	97	;'a'
   239  007A23  72                 	db	114	;'r'
   240  007A24  69                 	db	105	;'i'
   241  007A25  6F                 	db	111	;'o'
   242  007A26  20                 	db	32
   243  007A27  65                 	db	101	;'e'
   244  007A28  6A                 	db	106	;'j'
   245  007A29  3A                 	db	58	;':'
   246  007A2A  20                 	db	32
   247  007A2B  31                 	db	49	;'1'
   248  007A2C  35                 	db	53	;'5'
   249  007A2D  20                 	db	32
   250  007A2E  0D                 	db	13
   251  007A2F  0A                 	db	10
   252  007A30  00                 	db	0
   253  007A31                     STR_1:
   254  007A31  0D                 	db	13
   255  007A32  0A                 	db	10
   256  007A33  20                 	db	32
   257  007A34  45                 	db	69	;'E'
   258  007A35  6E                 	db	110	;'n'
   259  007A36  76                 	db	118	;'v'
   260  007A37  69                 	db	105	;'i'
   261  007A38  65                 	db	101	;'e'
   262  007A39  20                 	db	32
   263  007A3A  65                 	db	101	;'e'
   264  007A3B  6C                 	db	108	;'l'
   265  007A3C  20                 	db	32
   266  007A3D  64                 	db	100	;'d'
   267  007A3E  69                 	db	105	;'i'
   268  007A3F  61                 	db	97	;'a'
   269  007A40  20                 	db	32
   270  007A41  64                 	db	100	;'d'
   271  007A42  65                 	db	101	;'e'
   272  007A43  20                 	db	32
   273  007A44  6C                 	db	108	;'l'
   274  007A45  61                 	db	97	;'a'
   275  007A46  20                 	db	32
   276  007A47  73                 	db	115	;'s'
   277  007A48  65                 	db	101	;'e'
   278  007A49  6D                 	db	109	;'m'
   279  007A4A  61                 	db	97	;'a'
   280  007A4B  6E                 	db	110	;'n'
   281  007A4C  61                 	db	97	;'a'
   282  007A4D  20                 	db	32
   283  007A4E  45                 	db	69	;'E'
   284  007A4F  6A                 	db	106	;'j'
   285  007A50  3A                 	db	58	;':'
   286  007A51  20                 	db	32
   287  007A52  30                 	db	48	;'0'
   288  007A53  31                 	db	49	;'1'
   289  007A54  20                 	db	32
   290  007A55  3D                 	db	61	;'='
   291  007A56  20                 	db	32
   292  007A57  44                 	db	68	;'D'
   293  007A58  4F                 	db	79	;'O'
   294  007A59  4D                 	db	77	;'M'
   295  007A5A  49                 	db	73	;'I'
   296  007A5B  4E                 	db	78	;'N'
   297  007A5C  47                 	db	71	;'G'
   298  007A5D  4F                 	db	79	;'O'
   299  007A5E  20                 	db	32
   300  007A5F  2E                 	db	46
   301  007A60  2E                 	db	46
   302  007A61  2E                 	db	46
   303  007A62  20                 	db	32
   304  007A63  30                 	db	48	;'0'
   305  007A64  37                 	db	55	;'7'
   306  007A65  20                 	db	32
   307  007A66  3D                 	db	61	;'='
   308  007A67  20                 	db	32
   309  007A68  53                 	db	83	;'S'
   310  007A69  41                 	db	65	;'A'
   311  007A6A  42                 	db	66	;'B'
   312  007A6B  41                 	db	65	;'A'
   313  007A6C  44                 	db	68	;'D'
   314  007A6D  4F                 	db	79	;'O'
   315  007A6E  20                 	db	32
   316  007A6F  0D                 	db	13
   317  007A70  0A                 	db	10
   318  007A71  00                 	db	0
   319  007A72                     STR_32:
   320  007A72  0D                 	db	13
   321  007A73  0A                 	db	10
   322  007A74  0A                 	db	10
   323  007A75  48                 	db	72	;'H'
   324  007A76  6F                 	db	111	;'o'
   325  007A77  72                 	db	114	;'r'
   326  007A78  61                 	db	97	;'a'
   327  007A79  20                 	db	32
   328  007A7A  7C                 	db	124
   329  007A7B  20                 	db	32
   330  007A7C  52                 	db	82	;'R'
   331  007A7D  65                 	db	101	;'e'
   332  007A7E  67                 	db	103	;'g'
   333  007A7F  61                 	db	97	;'a'
   334  007A80  72                 	db	114	;'r'
   335  007A81  28                 	db	40
   336  007A82  31                 	db	49	;'1'
   337  007A83  20                 	db	32
   338  007A84  73                 	db	115	;'s'
   339  007A85  69                 	db	105	;'i'
   340  007A86  20                 	db	32
   341  007A87  30                 	db	48	;'0'
   342  007A88  20                 	db	32
   343  007A89  6E                 	db	110	;'n'
   344  007A8A  6F                 	db	111	;'o'
   345  007A8B  29                 	db	41
   346  007A8C  20                 	db	32
   347  007A8D  7C                 	db	124
   348  007A8E  20                 	db	32
   349  007A8F  4D                 	db	77	;'M'
   350  007A90  69                 	db	105	;'i'
   351  007A91  6E                 	db	110	;'n'
   352  007A92  75                 	db	117	;'u'
   353  007A93  74                 	db	116	;'t'
   354  007A94  6F                 	db	111	;'o'
   355  007A95  73                 	db	115	;'s'
   356  007A96  20                 	db	32
   357  007A97  64                 	db	100	;'d'
   358  007A98  65                 	db	101	;'e'
   359  007A99  20                 	db	32
   360  007A9A  72                 	db	114	;'r'
   361  007A9B  69                 	db	105	;'i'
   362  007A9C  65                 	db	101	;'e'
   363  007A9D  67                 	db	103	;'g'
   364  007A9E  6F                 	db	111	;'o'
   365  007A9F  20                 	db	32
   366  007AA0  7C                 	db	124
   367  007AA1  20                 	db	32
   368  007AA2  44                 	db	68	;'D'
   369  007AA3  49                 	db	73	;'I'
   370  007AA4  41                 	db	65	;'A'
   371  007AA5  53                 	db	83	;'S'
   372  007AA6  20                 	db	32
   373  007AA7  52                 	db	82	;'R'
   374  007AA8  45                 	db	69	;'E'
   375  007AA9  47                 	db	71	;'G'
   376  007AAA  41                 	db	65	;'A'
   377  007AAB  52                 	db	82	;'R'
   378  007AAC  0D                 	db	13
   379  007AAD  0A                 	db	10
   380  007AAE  0A                 	db	10
   381  007AAF  00                 	db	0
   382  007AB0                     STR_9:
   383  007AB0  0D                 	db	13
   384  007AB1  0A                 	db	10
   385  007AB2  20                 	db	32
   386  007AB3  49                 	db	73	;'I'
   387  007AB4  6E                 	db	110	;'n'
   388  007AB5  67                 	db	103	;'g'
   389  007AB6  72                 	db	114	;'r'
   390  007AB7  65                 	db	101	;'e'
   391  007AB8  73                 	db	115	;'s'
   392  007AB9  65                 	db	101	;'e'
   393  007ABA  20                 	db	32
   394  007ABB  31                 	db	49	;'1'
   395  007ABC  20                 	db	32
   396  007ABD  70                 	db	112	;'p'
   397  007ABE  61                 	db	97	;'a'
   398  007ABF  72                 	db	114	;'r'
   399  007AC0  61                 	db	97	;'a'
   400  007AC1  20                 	db	32
   401  007AC2  61                 	db	97	;'a'
   402  007AC3  63                 	db	99	;'c'
   403  007AC4  74                 	db	116	;'t'
   404  007AC5  69                 	db	105	;'i'
   405  007AC6  76                 	db	118	;'v'
   406  007AC7  61                 	db	97	;'a'
   407  007AC8  72                 	db	114	;'r'
   408  007AC9  20                 	db	32
   409  007ACA  7C                 	db	124
   410  007ACB  7C                 	db	124
   411  007ACC  20                 	db	32
   412  007ACD  69                 	db	105	;'i'
   413  007ACE  6E                 	db	110	;'n'
   414  007ACF  67                 	db	103	;'g'
   415  007AD0  72                 	db	114	;'r'
   416  007AD1  65                 	db	101	;'e'
   417  007AD2  73                 	db	115	;'s'
   418  007AD3  65                 	db	101	;'e'
   419  007AD4  20                 	db	32
   420  007AD5  30                 	db	48	;'0'
   421  007AD6  20                 	db	32
   422  007AD7  70                 	db	112	;'p'
   423  007AD8  61                 	db	97	;'a'
   424  007AD9  72                 	db	114	;'r'
   425  007ADA  61                 	db	97	;'a'
   426  007ADB  20                 	db	32
   427  007ADC  64                 	db	100	;'d'
   428  007ADD  65                 	db	101	;'e'
   429  007ADE  73                 	db	115	;'s'
   430  007ADF  61                 	db	97	;'a'
   431  007AE0  63                 	db	99	;'c'
   432  007AE1  74                 	db	116	;'t'
   433  007AE2  69                 	db	105	;'i'
   434  007AE3  76                 	db	118	;'v'
   435  007AE4  61                 	db	97	;'a'
   436  007AE5  72                 	db	114	;'r'
   437  007AE6  3A                 	db	58	;':'
   438  007AE7  20                 	db	32
   439  007AE8  0D                 	db	13
   440  007AE9  0A                 	db	10
   441  007AEA  00                 	db	0
   442  007AEB                     STR_49:
   443  007AEB  0D                 	db	13
   444  007AEC  0A                 	db	10
   445  007AED  20                 	db	32
   446  007AEE  59                 	db	89	;'Y'
   447  007AEF  61                 	db	97	;'a'
   448  007AF0  20                 	db	32
   449  007AF1  73                 	db	115	;'s'
   450  007AF2  65                 	db	101	;'e'
   451  007AF3  20                 	db	32
   452  007AF4  65                 	db	101	;'e'
   453  007AF5  73                 	db	115	;'s'
   454  007AF6  74                 	db	116	;'t'
   455  007AF7  61                 	db	97	;'a'
   456  007AF8  20                 	db	32
   457  007AF9  65                 	db	101	;'e'
   458  007AFA  66                 	db	102	;'f'
   459  007AFB  65                 	db	101	;'e'
   460  007AFC  63                 	db	99	;'c'
   461  007AFD  74                 	db	116	;'t'
   462  007AFE  75                 	db	117	;'u'
   463  007AFF  61                 	db	97	;'a'
   464  007B00  6E                 	db	110	;'n'
   465  007B01  64                 	db	100	;'d'
   466  007B02  6F                 	db	111	;'o'
   467  007B03  20                 	db	32
   468  007B04  75                 	db	117	;'u'
   469  007B05  6E                 	db	110	;'n'
   470  007B06  20                 	db	32
   471  007B07  72                 	db	114	;'r'
   472  007B08  69                 	db	105	;'i'
   473  007B09  65                 	db	101	;'e'
   474  007B0A  67                 	db	103	;'g'
   475  007B0B  6F                 	db	111	;'o'
   476  007B0C  2C                 	db	44
   477  007B0D  20                 	db	32
   478  007B0E  69                 	db	105	;'i'
   479  007B0F  6E                 	db	110	;'n'
   480  007B10  74                 	db	116	;'t'
   481  007B11  65                 	db	101	;'e'
   482  007B12  6E                 	db	110	;'n'
   483  007B13  74                 	db	116	;'t'
   484  007B14  65                 	db	101	;'e'
   485  007B15  6C                 	db	108	;'l'
   486  007B16  6F                 	db	111	;'o'
   487  007B17  20                 	db	32
   488  007B18  6D                 	db	109	;'m'
   489  007B19  61                 	db	97	;'a'
   490  007B1A  73                 	db	115	;'s'
   491  007B1B  20                 	db	32
   492  007B1C  74                 	db	116	;'t'
   493  007B1D  61                 	db	97	;'a'
   494  007B1E  72                 	db	114	;'r'
   495  007B1F  64                 	db	100	;'d'
   496  007B20  65                 	db	101	;'e'
   497  007B21  20                 	db	32
   498  007B22  0D                 	db	13
   499  007B23  0A                 	db	10
   500  007B24  00                 	db	0
   501  007B25                     STR_48:
   502  007B25  0D                 	db	13
   503  007B26  0A                 	db	10
   504  007B27  20                 	db	32
   505  007B28  49                 	db	73	;'I'
   506  007B29  6E                 	db	110	;'n'
   507  007B2A  67                 	db	103	;'g'
   508  007B2B  72                 	db	114	;'r'
   509  007B2C  65                 	db	101	;'e'
   510  007B2D  73                 	db	115	;'s'
   511  007B2E  65                 	db	101	;'e'
   512  007B2F  20                 	db	32
   513  007B30  65                 	db	101	;'e'
   514  007B31  6C                 	db	108	;'l'
   515  007B32  20                 	db	32
   516  007B33  6E                 	db	110	;'n'
   517  007B34  75                 	db	117	;'u'
   518  007B35  6D                 	db	109	;'m'
   519  007B36  65                 	db	101	;'e'
   520  007B37  72                 	db	114	;'r'
   521  007B38  6F                 	db	111	;'o'
   522  007B39  20                 	db	32
   523  007B3A  64                 	db	100	;'d'
   524  007B3B  65                 	db	101	;'e'
   525  007B3C  20                 	db	32
   526  007B3D  73                 	db	115	;'s'
   527  007B3E  65                 	db	101	;'e'
   528  007B3F  6E                 	db	110	;'n'
   529  007B40  73                 	db	115	;'s'
   530  007B41  6F                 	db	111	;'o'
   531  007B42  72                 	db	114	;'r'
   532  007B43  20                 	db	32
   533  007B44  64                 	db	100	;'d'
   534  007B45  65                 	db	101	;'e'
   535  007B46  6C                 	db	108	;'l'
   536  007B47  20                 	db	32
   537  007B48  61                 	db	97	;'a'
   538  007B49  72                 	db	114	;'r'
   539  007B4A  65                 	db	101	;'e'
   540  007B4B  61                 	db	97	;'a'
   541  007B4C  20                 	db	32
   542  007B4D  61                 	db	97	;'a'
   543  007B4E  20                 	db	32
   544  007B4F  72                 	db	114	;'r'
   545  007B50  65                 	db	101	;'e'
   546  007B51  67                 	db	103	;'g'
   547  007B52  61                 	db	97	;'a'
   548  007B53  72                 	db	114	;'r'
   549  007B54  20                 	db	32
   550  007B55  65                 	db	101	;'e'
   551  007B56  6A                 	db	106	;'j'
   552  007B57  3A                 	db	58	;':'
   553  007B58  20                 	db	32
   554  007B59  35                 	db	53	;'5'
   555  007B5A  20                 	db	32
   556  007B5B  0D                 	db	13
   557  007B5C  0A                 	db	10
   558  007B5D  00                 	db	0
   559  007B5E                     STR_47:
   560  007B5E  0D                 	db	13
   561  007B5F  0A                 	db	10
   562  007B60  20                 	db	32
   563  007B61  49                 	db	73	;'I'
   564  007B62  6E                 	db	110	;'n'
   565  007B63  67                 	db	103	;'g'
   566  007B64  72                 	db	114	;'r'
   567  007B65  65                 	db	101	;'e'
   568  007B66  73                 	db	115	;'s'
   569  007B67  65                 	db	101	;'e'
   570  007B68  20                 	db	32
   571  007B69  6C                 	db	108	;'l'
   572  007B6A  6F                 	db	111	;'o'
   573  007B6B  73                 	db	115	;'s'
   574  007B6C  20                 	db	32
   575  007B6D  6D                 	db	109	;'m'
   576  007B6E  69                 	db	105	;'i'
   577  007B6F  6E                 	db	110	;'n'
   578  007B70  75                 	db	117	;'u'
   579  007B71  74                 	db	116	;'t'
   580  007B72  6F                 	db	111	;'o'
   581  007B73  73                 	db	115	;'s'
   582  007B74  20                 	db	32
   583  007B75  71                 	db	113	;'q'
   584  007B76  75                 	db	117	;'u'
   585  007B77  65                 	db	101	;'e'
   586  007B78  20                 	db	32
   587  007B79  64                 	db	100	;'d'
   588  007B7A  65                 	db	101	;'e'
   589  007B7B  73                 	db	115	;'s'
   590  007B7C  65                 	db	101	;'e'
   591  007B7D  65                 	db	101	;'e'
   592  007B7E  20                 	db	32
   593  007B7F  71                 	db	113	;'q'
   594  007B80  75                 	db	117	;'u'
   595  007B81  65                 	db	101	;'e'
   596  007B82  20                 	db	32
   597  007B83  73                 	db	115	;'s'
   598  007B84  65                 	db	101	;'e'
   599  007B85  20                 	db	32
   600  007B86  72                 	db	114	;'r'
   601  007B87  69                 	db	105	;'i'
   602  007B88  65                 	db	101	;'e'
   603  007B89  67                 	db	103	;'g'
   604  007B8A  75                 	db	117	;'u'
   605  007B8B  65                 	db	101	;'e'
   606  007B8C  20                 	db	32
   607  007B8D  65                 	db	101	;'e'
   608  007B8E  6A                 	db	106	;'j'
   609  007B8F  3A                 	db	58	;':'
   610  007B90  20                 	db	32
   611  007B91  31                 	db	49	;'1'
   612  007B92  35                 	db	53	;'5'
   613  007B93  20                 	db	32
   614  007B94  0D                 	db	13
   615  007B95  0A                 	db	10
   616  007B96  00                 	db	0
   617  007B97                     STR_33:
   618  007B97  20                 	db	32
   619  007B98  20                 	db	32
   620  007B99  20                 	db	32
   621  007B9A  20                 	db	32
   622  007B9B  20                 	db	32
   623  007B9C  20                 	db	32
   624  007B9D  20                 	db	32
   625  007B9E  20                 	db	32
   626  007B9F  20                 	db	32
   627  007BA0  20                 	db	32
   628  007BA1  20                 	db	32
   629  007BA2  20                 	db	32
   630  007BA3  20                 	db	32
   631  007BA4  20                 	db	32
   632  007BA5  20                 	db	32
   633  007BA6  20                 	db	32
   634  007BA7  20                 	db	32
   635  007BA8  20                 	db	32
   636  007BA9  20                 	db	32
   637  007BAA  20                 	db	32
   638  007BAB  20                 	db	32
   639  007BAC  20                 	db	32
   640  007BAD  20                 	db	32
   641  007BAE  20                 	db	32
   642  007BAF  20                 	db	32
   643  007BB0  20                 	db	32
   644  007BB1  20                 	db	32
   645  007BB2  20                 	db	32
   646  007BB3  20                 	db	32
   647  007BB4  20                 	db	32
   648  007BB5  20                 	db	32
   649  007BB6  20                 	db	32
   650  007BB7  20                 	db	32
   651  007BB8  20                 	db	32
   652  007BB9  20                 	db	32
   653  007BBA  20                 	db	32
   654  007BBB  20                 	db	32
   655  007BBC  20                 	db	32
   656  007BBD  20                 	db	32
   657  007BBE  20                 	db	32
   658  007BBF  20                 	db	32
   659  007BC0  20                 	db	32
   660  007BC1  20                 	db	32
   661  007BC2  20                 	db	32
   662  007BC3  20                 	db	32
   663  007BC4  44                 	db	68	;'D'
   664  007BC5  4C                 	db	76	;'L'
   665  007BC6  4D                 	db	77	;'M'
   666  007BC7  49                 	db	73	;'I'
   667  007BC8  4A                 	db	74	;'J'
   668  007BC9  56                 	db	86	;'V'
   669  007BCA  53                 	db	83	;'S'
   670  007BCB  0D                 	db	13
   671  007BCC  0A                 	db	10
   672  007BCD  00                 	db	0
   673  007BCE                     STR_34:
   674  007BCE  20                 	db	32
   675  007BCF  25                 	db	37
   676  007BD0  32                 	db	50	;'2'
   677  007BD1  64                 	db	100	;'d'
   678  007BD2  20                 	db	32
   679  007BD3  20                 	db	32
   680  007BD4  7C                 	db	124
   681  007BD5  20                 	db	32
   682  007BD6  20                 	db	32
   683  007BD7  20                 	db	32
   684  007BD8  20                 	db	32
   685  007BD9  20                 	db	32
   686  007BDA  20                 	db	32
   687  007BDB  20                 	db	32
   688  007BDC  20                 	db	32
   689  007BDD  20                 	db	32
   690  007BDE  20                 	db	32
   691  007BDF  25                 	db	37
   692  007BE0  64                 	db	100	;'d'
   693  007BE1  20                 	db	32
   694  007BE2  20                 	db	32
   695  007BE3  20                 	db	32
   696  007BE4  20                 	db	32
   697  007BE5  20                 	db	32
   698  007BE6  20                 	db	32
   699  007BE7  20                 	db	32
   700  007BE8  7C                 	db	124
   701  007BE9  20                 	db	32
   702  007BEA  20                 	db	32
   703  007BEB  20                 	db	32
   704  007BEC  20                 	db	32
   705  007BED  20                 	db	32
   706  007BEE  20                 	db	32
   707  007BEF  20                 	db	32
   708  007BF0  20                 	db	32
   709  007BF1  20                 	db	32
   710  007BF2  25                 	db	37
   711  007BF3  32                 	db	50	;'2'
   712  007BF4  64                 	db	100	;'d'
   713  007BF5  20                 	db	32
   714  007BF6  20                 	db	32
   715  007BF7  20                 	db	32
   716  007BF8  20                 	db	32
   717  007BF9  20                 	db	32
   718  007BFA  20                 	db	32
   719  007BFB  20                 	db	32
   720  007BFC  7C                 	db	124
   721  007BFD  20                 	db	32
   722  007BFE  25                 	db	37
   723  007BFF  73                 	db	115	;'s'
   724  007C00  0D                 	db	13
   725  007C01  0A                 	db	10
   726  007C02  00                 	db	0
   727  007C03                     STR_8:
   728  007C03  0D                 	db	13
   729  007C04  0A                 	db	10
   730  007C05  20                 	db	32
   731  007C06  49                 	db	73	;'I'
   732  007C07  6E                 	db	110	;'n'
   733  007C08  67                 	db	103	;'g'
   734  007C09  72                 	db	114	;'r'
   735  007C0A  65                 	db	101	;'e'
   736  007C0B  73                 	db	115	;'s'
   737  007C0C  65                 	db	101	;'e'
   738  007C0D  20                 	db	32
   739  007C0E  75                 	db	117	;'u'
   740  007C0F  6E                 	db	110	;'n'
   741  007C10  61                 	db	97	;'a'
   742  007C11  20                 	db	32
   743  007C12  68                 	db	104	;'h'
   744  007C13  6F                 	db	111	;'o'
   745  007C14  72                 	db	114	;'r'
   746  007C15  61                 	db	97	;'a'
   747  007C16  20                 	db	32
   748  007C17  65                 	db	101	;'e'
   749  007C18  6E                 	db	110	;'n'
   750  007C19  20                 	db	32
   751  007C1A  66                 	db	102	;'f'
   752  007C1B  6F                 	db	111	;'o'
   753  007C1C  72                 	db	114	;'r'
   754  007C1D  6D                 	db	109	;'m'
   755  007C1E  61                 	db	97	;'a'
   756  007C1F  74                 	db	116	;'t'
   757  007C20  6F                 	db	111	;'o'
   758  007C21  20                 	db	32
   759  007C22  64                 	db	100	;'d'
   760  007C23  65                 	db	101	;'e'
   761  007C24  20                 	db	32
   762  007C25  32                 	db	50	;'2'
   763  007C26  34                 	db	52	;'4'
   764  007C27  20                 	db	32
   765  007C28  68                 	db	104	;'h'
   766  007C29  72                 	db	114	;'r'
   767  007C2A  73                 	db	115	;'s'
   768  007C2B  20                 	db	32
   769  007C2C  65                 	db	101	;'e'
   770  007C2D  6A                 	db	106	;'j'
   771  007C2E  3A                 	db	58	;':'
   772  007C2F  20                 	db	32
   773  007C30  31                 	db	49	;'1'
   774  007C31  35                 	db	53	;'5'
   775  007C32  20                 	db	32
   776  007C33  0D                 	db	13
   777  007C34  0A                 	db	10
   778  007C35  00                 	db	0
   779  007C36                     STR_19:
   780  007C36  0D                 	db	13
   781  007C37  0A                 	db	10
   782  007C38  49                 	db	73	;'I'
   783  007C39  6E                 	db	110	;'n'
   784  007C3A  67                 	db	103	;'g'
   785  007C3B  72                 	db	114	;'r'
   786  007C3C  65                 	db	101	;'e'
   787  007C3D  73                 	db	115	;'s'
   788  007C3E  65                 	db	101	;'e'
   789  007C3F  20                 	db	32
   790  007C40  65                 	db	101	;'e'
   791  007C41  6C                 	db	108	;'l'
   792  007C42  20                 	db	32
   793  007C43  70                 	db	112	;'p'
   794  007C44  6F                 	db	111	;'o'
   795  007C45  72                 	db	114	;'r'
   796  007C46  63                 	db	99	;'c'
   797  007C47  65                 	db	101	;'e'
   798  007C48  6E                 	db	110	;'n'
   799  007C49  74                 	db	116	;'t'
   800  007C4A  61                 	db	97	;'a'
   801  007C4B  6A                 	db	106	;'j'
   802  007C4C  65                 	db	101	;'e'
   803  007C4D  20                 	db	32
   804  007C4E  64                 	db	100	;'d'
   805  007C4F  65                 	db	101	;'e'
   806  007C50  20                 	db	32
   807  007C51  68                 	db	104	;'h'
   808  007C52  75                 	db	117	;'u'
   809  007C53  6D                 	db	109	;'m'
   810  007C54  65                 	db	101	;'e'
   811  007C55  64                 	db	100	;'d'
   812  007C56  61                 	db	97	;'a'
   813  007C57  64                 	db	100	;'d'
   814  007C58  20                 	db	32
   815  007C59  64                 	db	100	;'d'
   816  007C5A  65                 	db	101	;'e'
   817  007C5B  6C                 	db	108	;'l'
   818  007C5C  20                 	db	32
   819  007C5D  73                 	db	115	;'s'
   820  007C5E  65                 	db	101	;'e'
   821  007C5F  6E                 	db	110	;'n'
   822  007C60  73                 	db	115	;'s'
   823  007C61  6F                 	db	111	;'o'
   824  007C62  72                 	db	114	;'r'
   825  007C63  20                 	db	32
   826  007C64  25                 	db	37
   827  007C65  64                 	db	100	;'d'
   828  007C66  0D                 	db	13
   829  007C67  0A                 	db	10
   830  007C68  00                 	db	0
   831  007C69                     STR_24:
   832  007C69  0D                 	db	13
   833  007C6A  0A                 	db	10
   834  007C6B  20                 	db	32
   835  007C6C  33                 	db	51	;'3'
   836  007C6D  2E                 	db	46
   837  007C6E  20                 	db	32
   838  007C6F  50                 	db	80	;'P'
   839  007C70  72                 	db	114	;'r'
   840  007C71  6F                 	db	111	;'o'
   841  007C72  67                 	db	103	;'g'
   842  007C73  72                 	db	114	;'r'
   843  007C74  61                 	db	97	;'a'
   844  007C75  6D                 	db	109	;'m'
   845  007C76  61                 	db	97	;'a'
   846  007C77  72                 	db	114	;'r'
   847  007C78  20                 	db	32
   848  007C79  74                 	db	116	;'t'
   849  007C7A  69                 	db	105	;'i'
   850  007C7B  65                 	db	101	;'e'
   851  007C7C  6D                 	db	109	;'m'
   852  007C7D  70                 	db	112	;'p'
   853  007C7E  6F                 	db	111	;'o'
   854  007C7F  20                 	db	32
   855  007C80  64                 	db	100	;'d'
   856  007C81  65                 	db	101	;'e'
   857  007C82  20                 	db	32
   858  007C83  72                 	db	114	;'r'
   859  007C84  69                 	db	105	;'i'
   860  007C85  65                 	db	101	;'e'
   861  007C86  67                 	db	103	;'g'
   862  007C87  6F                 	db	111	;'o'
   863  007C88  20                 	db	32
   864  007C89  65                 	db	101	;'e'
   865  007C8A  6E                 	db	110	;'n'
   866  007C8B  20                 	db	32
   867  007C8C  75                 	db	117	;'u'
   868  007C8D  6E                 	db	110	;'n'
   869  007C8E  20                 	db	32
   870  007C8F  68                 	db	104	;'h'
   871  007C90  6F                 	db	111	;'o'
   872  007C91  72                 	db	114	;'r'
   873  007C92  61                 	db	97	;'a'
   874  007C93  72                 	db	114	;'r'
   875  007C94  69                 	db	105	;'i'
   876  007C95  6F                 	db	111	;'o'
   877  007C96  20                 	db	32
   878  007C97  0D                 	db	13
   879  007C98  0A                 	db	10
   880  007C99  00                 	db	0
   881  007C9A                     STR_38:
   882  007C9A  0D                 	db	13
   883  007C9B  0A                 	db	10
   884  007C9C  0A                 	db	10
   885  007C9D  50                 	db	80	;'P'
   886  007C9E  6F                 	db	111	;'o'
   887  007C9F  72                 	db	114	;'r'
   888  007CA0  63                 	db	99	;'c'
   889  007CA1  65                 	db	101	;'e'
   890  007CA2  6E                 	db	110	;'n'
   891  007CA3  74                 	db	116	;'t'
   892  007CA4  61                 	db	97	;'a'
   893  007CA5  6A                 	db	106	;'j'
   894  007CA6  65                 	db	101	;'e'
   895  007CA7  20                 	db	32
   896  007CA8  48                 	db	72	;'H'
   897  007CA9  75                 	db	117	;'u'
   898  007CAA  6D                 	db	109	;'m'
   899  007CAB  65                 	db	101	;'e'
   900  007CAC  64                 	db	100	;'d'
   901  007CAD  61                 	db	97	;'a'
   902  007CAE  64                 	db	100	;'d'
   903  007CAF  20                 	db	32
   904  007CB0  64                 	db	100	;'d'
   905  007CB1  65                 	db	101	;'e'
   906  007CB2  6C                 	db	108	;'l'
   907  007CB3  20                 	db	32
   908  007CB4  73                 	db	115	;'s'
   909  007CB5  65                 	db	101	;'e'
   910  007CB6  6E                 	db	110	;'n'
   911  007CB7  73                 	db	115	;'s'
   912  007CB8  6F                 	db	111	;'o'
   913  007CB9  72                 	db	114	;'r'
   914  007CBA  20                 	db	32
   915  007CBB  25                 	db	37
   916  007CBC  64                 	db	100	;'d'
   917  007CBD  3A                 	db	58	;':'
   918  007CBE  20                 	db	32
   919  007CBF  25                 	db	37
   920  007CC0  64                 	db	100	;'d'
   921  007CC1  20                 	db	32
   922  007CC2  25                 	db	37
   923  007CC3  63                 	db	99	;'c'
   924  007CC4  0D                 	db	13
   925  007CC5  0A                 	db	10
   926  007CC6  00                 	db	0
   927  007CC7                     STR_4:
   928  007CC7  0D                 	db	13
   929  007CC8  0A                 	db	10
   930  007CC9  20                 	db	32
   931  007CCA  45                 	db	69	;'E'
   932  007CCB  6E                 	db	110	;'n'
   933  007CCC  76                 	db	118	;'v'
   934  007CCD  69                 	db	105	;'i'
   935  007CCE  65                 	db	101	;'e'
   936  007CCF  20                 	db	32
   937  007CD0  6C                 	db	108	;'l'
   938  007CD1  61                 	db	97	;'a'
   939  007CD2  73                 	db	115	;'s'
   940  007CD3  20                 	db	32
   941  007CD4  48                 	db	72	;'H'
   942  007CD5  6F                 	db	111	;'o'
   943  007CD6  72                 	db	114	;'r'
   944  007CD7  61                 	db	97	;'a'
   945  007CD8  73                 	db	115	;'s'
   946  007CD9  20                 	db	32
   947  007CDA  65                 	db	101	;'e'
   948  007CDB  6E                 	db	110	;'n'
   949  007CDC  20                 	db	32
   950  007CDD  66                 	db	102	;'f'
   951  007CDE  6F                 	db	111	;'o'
   952  007CDF  72                 	db	114	;'r'
   953  007CE0  6D                 	db	109	;'m'
   954  007CE1  61                 	db	97	;'a'
   955  007CE2  74                 	db	116	;'t'
   956  007CE3  6F                 	db	111	;'o'
   957  007CE4  20                 	db	32
   958  007CE5  32                 	db	50	;'2'
   959  007CE6  34                 	db	52	;'4'
   960  007CE7  20                 	db	32
   961  007CE8  45                 	db	69	;'E'
   962  007CE9  6A                 	db	106	;'j'
   963  007CEA  3A                 	db	58	;':'
   964  007CEB  20                 	db	32
   965  007CEC  31                 	db	49	;'1'
   966  007CED  35                 	db	53	;'5'
   967  007CEE  20                 	db	32
   968  007CEF  0D                 	db	13
   969  007CF0  0A                 	db	10
   970  007CF1  00                 	db	0
   971  007CF2                     STR_31:
   972  007CF2  0D                 	db	13
   973  007CF3  0A                 	db	10
   974  007CF4  20                 	db	32
   975  007CF5  53                 	db	83	;'S'
   976  007CF6  6F                 	db	111	;'o'
   977  007CF7  6C                 	db	108	;'l'
   978  007CF8  6F                 	db	111	;'o'
   979  007CF9  20                 	db	32
   980  007CFA  73                 	db	115	;'s'
   981  007CFB  65                 	db	101	;'e'
   982  007CFC  20                 	db	32
   983  007CFD  70                 	db	112	;'p'
   984  007CFE  65                 	db	101	;'e'
   985  007CFF  72                 	db	114	;'r'
   986  007D00  6D                 	db	109	;'m'
   987  007D01  69                 	db	105	;'i'
   988  007D02  74                 	db	116	;'t'
   989  007D03  65                 	db	101	;'e'
   990  007D04  6E                 	db	110	;'n'
   991  007D05  20                 	db	32
   992  007D06  6E                 	db	110	;'n'
   993  007D07  75                 	db	117	;'u'
   994  007D08  6D                 	db	109	;'m'
   995  007D09  65                 	db	101	;'e'
   996  007D0A  72                 	db	114	;'r'
   997  007D0B  6F                 	db	111	;'o'
   998  007D0C  73                 	db	115	;'s'
   999  007D0D  20                 	db	32
  1000  007D0E  64                 	db	100	;'d'
  1001  007D0F  65                 	db	101	;'e'
  1002  007D10  6C                 	db	108	;'l'
  1003  007D11  20                 	db	32
  1004  007D12  31                 	db	49	;'1'
  1005  007D13  20                 	db	32
  1006  007D14  61                 	db	97	;'a'
  1007  007D15  6C                 	db	108	;'l'
  1008  007D16  20                 	db	32
  1009  007D17  37                 	db	55	;'7'
  1010  007D18  20                 	db	32
  1011  007D19  0D                 	db	13
  1012  007D1A  0A                 	db	10
  1013  007D1B  00                 	db	0
  1014  007D1C                     STR_18:
  1015  007D1C  0D                 	db	13
  1016  007D1D  0A                 	db	10
  1017  007D1E  53                 	db	83	;'S'
  1018  007D1F  6F                 	db	111	;'o'
  1019  007D20  6C                 	db	108	;'l'
  1020  007D21  69                 	db	105	;'i'
  1021  007D22  63                 	db	99	;'c'
  1022  007D23  69                 	db	105	;'i'
  1023  007D24  74                 	db	116	;'t'
  1024  007D25  61                 	db	97	;'a'
  1025  007D26  6E                 	db	110	;'n'
  1026  007D27  64                 	db	100	;'d'
  1027  007D28  6F                 	db	111	;'o'
  1028  007D29  20                 	db	32
  1029  007D2A  4D                 	db	77	;'M'
  1030  007D2B  75                 	db	117	;'u'
  1031  007D2C  65                 	db	101	;'e'
  1032  007D2D  73                 	db	115	;'s'
  1033  007D2E  74                 	db	116	;'t'
  1034  007D2F  72                 	db	114	;'r'
  1035  007D30  65                 	db	101	;'e'
  1036  007D31  6F                 	db	111	;'o'
  1037  007D32  20                 	db	32
  1038  007D33  64                 	db	100	;'d'
  1039  007D34  65                 	db	101	;'e'
  1040  007D35  20                 	db	32
  1041  007D36  73                 	db	115	;'s'
  1042  007D37  65                 	db	101	;'e'
  1043  007D38  6E                 	db	110	;'n'
  1044  007D39  73                 	db	115	;'s'
  1045  007D3A  6F                 	db	111	;'o'
  1046  007D3B  72                 	db	114	;'r'
  1047  007D3C  65                 	db	101	;'e'
  1048  007D3D  73                 	db	115	;'s'
  1049  007D3E  0D                 	db	13
  1050  007D3F  0A                 	db	10
  1051  007D40  0A                 	db	10
  1052  007D41  00                 	db	0
  1053  007D42                     STR_17:
  1054  007D42  0D                 	db	13
  1055  007D43  0A                 	db	10
  1056  007D44  20                 	db	32
  1057  007D45  4D                 	db	77	;'M'
  1058  007D46  69                 	db	105	;'i'
  1059  007D47  6E                 	db	110	;'n'
  1060  007D48  75                 	db	117	;'u'
  1061  007D49  74                 	db	116	;'t'
  1062  007D4A  6F                 	db	111	;'o'
  1063  007D4B  73                 	db	115	;'s'
  1064  007D4C  20                 	db	32
  1065  007D4D  64                 	db	100	;'d'
  1066  007D4E  65                 	db	101	;'e'
  1067  007D4F  20                 	db	32
  1068  007D50  72                 	db	114	;'r'
  1069  007D51  69                 	db	105	;'i'
  1070  007D52  65                 	db	101	;'e'
  1071  007D53  67                 	db	103	;'g'
  1072  007D54  6F                 	db	111	;'o'
  1073  007D55  20                 	db	32
  1074  007D56  65                 	db	101	;'e'
  1075  007D57  73                 	db	115	;'s'
  1076  007D58  74                 	db	116	;'t'
  1077  007D59  61                 	db	97	;'a'
  1078  007D5A  62                 	db	98	;'b'
  1079  007D5B  6C                 	db	108	;'l'
  1080  007D5C  65                 	db	101	;'e'
  1081  007D5D  63                 	db	99	;'c'
  1082  007D5E  69                 	db	105	;'i'
  1083  007D5F  64                 	db	100	;'d'
  1084  007D60  6F                 	db	111	;'o'
  1085  007D61  73                 	db	115	;'s'
  1086  007D62  21                 	db	33
  1087  007D63  20                 	db	32
  1088  007D64  0D                 	db	13
  1089  007D65  0A                 	db	10
  1090  007D66  00                 	db	0
  1091  007D67                     STR_21:
  1092  007D67  0D                 	db	13
  1093  007D68  0A                 	db	10
  1094  007D69  20                 	db	32
  1095  007D6A  49                 	db	73	;'I'
  1096  007D6B  6E                 	db	110	;'n'
  1097  007D6C  67                 	db	103	;'g'
  1098  007D6D  72                 	db	114	;'r'
  1099  007D6E  65                 	db	101	;'e'
  1100  007D6F  73                 	db	115	;'s'
  1101  007D70  61                 	db	97	;'a'
  1102  007D71  20                 	db	32
  1103  007D72  75                 	db	117	;'u'
  1104  007D73  6E                 	db	110	;'n'
  1105  007D74  61                 	db	97	;'a'
  1106  007D75  20                 	db	32
  1107  007D76  6F                 	db	111	;'o'
  1108  007D77  70                 	db	112	;'p'
  1109  007D78  63                 	db	99	;'c'
  1110  007D79  69                 	db	105	;'i'
  1111  007D7A  6F                 	db	111	;'o'
  1112  007D7B  6E                 	db	110	;'n'
  1113  007D7C  20                 	db	32
  1114  007D7D  61                 	db	97	;'a'
  1115  007D7E  20                 	db	32
  1116  007D7F  52                 	db	82	;'R'
  1117  007D80  65                 	db	101	;'e'
  1118  007D81  61                 	db	97	;'a'
  1119  007D82  6C                 	db	108	;'l'
  1120  007D83  69                 	db	105	;'i'
  1121  007D84  7A                 	db	122	;'z'
  1122  007D85  61                 	db	97	;'a'
  1123  007D86  72                 	db	114	;'r'
  1124  007D87  3A                 	db	58	;':'
  1125  007D88  20                 	db	32
  1126  007D89  0D                 	db	13
  1127  007D8A  0A                 	db	10
  1128  007D8B  00                 	db	0
  1129  007D8C                     STR_6:
  1130  007D8C  0D                 	db	13
  1131  007D8D  0A                 	db	10
  1132  007D8E  20                 	db	32
  1133  007D8F  48                 	db	72	;'H'
  1134  007D90  4F                 	db	79	;'O'
  1135  007D91  52                 	db	82	;'R'
  1136  007D92  41                 	db	65	;'A'
  1137  007D93  20                 	db	32
  1138  007D94  45                 	db	69	;'E'
  1139  007D95  53                 	db	83	;'S'
  1140  007D96  54                 	db	84	;'T'
  1141  007D97  41                 	db	65	;'A'
  1142  007D98  42                 	db	66	;'B'
  1143  007D99  4C                 	db	76	;'L'
  1144  007D9A  45                 	db	69	;'E'
  1145  007D9B  43                 	db	67	;'C'
  1146  007D9C  49                 	db	73	;'I'
  1147  007D9D  44                 	db	68	;'D'
  1148  007D9E  41                 	db	65	;'A'
  1149  007D9F  20                 	db	32
  1150  007DA0  43                 	db	67	;'C'
  1151  007DA1  4F                 	db	79	;'O'
  1152  007DA2  52                 	db	82	;'R'
  1153  007DA3  52                 	db	82	;'R'
  1154  007DA4  45                 	db	69	;'E'
  1155  007DA5  43                 	db	67	;'C'
  1156  007DA6  54                 	db	84	;'T'
  1157  007DA7  41                 	db	65	;'A'
  1158  007DA8  4D                 	db	77	;'M'
  1159  007DA9  45                 	db	69	;'E'
  1160  007DAA  4E                 	db	78	;'N'
  1161  007DAB  54                 	db	84	;'T'
  1162  007DAC  45                 	db	69	;'E'
  1163  007DAD  20                 	db	32
  1164  007DAE  0D                 	db	13
  1165  007DAF  0A                 	db	10
  1166  007DB0  00                 	db	0
  1167  007DB1                     STR_11:
  1168  007DB1  0D                 	db	13
  1169  007DB2  0A                 	db	10
  1170  007DB3  20                 	db	32
  1171  007DB4  44                 	db	68	;'D'
  1172  007DB5  4F                 	db	79	;'O'
  1173  007DB6  4D                 	db	77	;'M'
  1174  007DB7  49                 	db	73	;'I'
  1175  007DB8  4E                 	db	78	;'N'
  1176  007DB9  47                 	db	71	;'G'
  1177  007DBA  4F                 	db	79	;'O'
  1178  007DBB  20                 	db	32
  1179  007DBC  3D                 	db	61	;'='
  1180  007DBD  20                 	db	32
  1181  007DBE  5B                 	db	91	;'['
  1182  007DBF  31                 	db	49	;'1'
  1183  007DC0  5D                 	db	93	;']'
  1184  007DC1  20                 	db	32
  1185  007DC2  2E                 	db	46
  1186  007DC3  2E                 	db	46
  1187  007DC4  2E                 	db	46
  1188  007DC5  20                 	db	32
  1189  007DC6  53                 	db	83	;'S'
  1190  007DC7  41                 	db	65	;'A'
  1191  007DC8  42                 	db	66	;'B'
  1192  007DC9  41                 	db	65	;'A'
  1193  007DCA  44                 	db	68	;'D'
  1194  007DCB  4F                 	db	79	;'O'
  1195  007DCC  20                 	db	32
  1196  007DCD  3D                 	db	61	;'='
  1197  007DCE  20                 	db	32
  1198  007DCF  5B                 	db	91	;'['
  1199  007DD0  37                 	db	55	;'7'
  1200  007DD1  5D                 	db	93	;']'
  1201  007DD2  20                 	db	32
  1202  007DD3  0D                 	db	13
  1203  007DD4  0A                 	db	10
  1204  007DD5  00                 	db	0
  1205  007DD6                     STR_23:
  1206  007DD6  0D                 	db	13
  1207  007DD7  0A                 	db	10
  1208  007DD8  20                 	db	32
  1209  007DD9  32                 	db	50	;'2'
  1210  007DDA  2E                 	db	46
  1211  007DDB  20                 	db	32
  1212  007DDC  41                 	db	65	;'A'
  1213  007DDD  73                 	db	115	;'s'
  1214  007DDE  69                 	db	105	;'i'
  1215  007DDF  67                 	db	103	;'g'
  1216  007DE0  6E                 	db	110	;'n'
  1217  007DE1  61                 	db	97	;'a'
  1218  007DE2  72                 	db	114	;'r'
  1219  007DE3  20                 	db	32
  1220  007DE4  48                 	db	72	;'H'
  1221  007DE5  6F                 	db	111	;'o'
  1222  007DE6  72                 	db	114	;'r'
  1223  007DE7  61                 	db	97	;'a'
  1224  007DE8  72                 	db	114	;'r'
  1225  007DE9  69                 	db	105	;'i'
  1226  007DEA  6F                 	db	111	;'o'
  1227  007DEB  73                 	db	115	;'s'
  1228  007DEC  20                 	db	32
  1229  007DED  70                 	db	112	;'p'
  1230  007DEE  61                 	db	97	;'a'
  1231  007DEF  72                 	db	114	;'r'
  1232  007DF0  61                 	db	97	;'a'
  1233  007DF1  20                 	db	32
  1234  007DF2  72                 	db	114	;'r'
  1235  007DF3  65                 	db	101	;'e'
  1236  007DF4  67                 	db	103	;'g'
  1237  007DF5  61                 	db	97	;'a'
  1238  007DF6  72                 	db	114	;'r'
  1239  007DF7  20                 	db	32
  1240  007DF8  0D                 	db	13
  1241  007DF9  0A                 	db	10
  1242  007DFA  00                 	db	0
  1243  007DFB                     STR_2:
  1244  007DFB  0D                 	db	13
  1245  007DFC  0A                 	db	10
  1246  007DFD  20                 	db	32
  1247  007DFE  44                 	db	68	;'D'
  1248  007DFF  49                 	db	73	;'I'
  1249  007E00  41                 	db	65	;'A'
  1250  007E01  20                 	db	32
  1251  007E02  45                 	db	69	;'E'
  1252  007E03  53                 	db	83	;'S'
  1253  007E04  54                 	db	84	;'T'
  1254  007E05  41                 	db	65	;'A'
  1255  007E06  42                 	db	66	;'B'
  1256  007E07  4C                 	db	76	;'L'
  1257  007E08  45                 	db	69	;'E'
  1258  007E09  43                 	db	67	;'C'
  1259  007E0A  49                 	db	73	;'I'
  1260  007E0B  44                 	db	68	;'D'
  1261  007E0C  4F                 	db	79	;'O'
  1262  007E0D  20                 	db	32
  1263  007E0E  43                 	db	67	;'C'
  1264  007E0F  4F                 	db	79	;'O'
  1265  007E10  52                 	db	82	;'R'
  1266  007E11  52                 	db	82	;'R'
  1267  007E12  45                 	db	69	;'E'
  1268  007E13  43                 	db	67	;'C'
  1269  007E14  54                 	db	84	;'T'
  1270  007E15  41                 	db	65	;'A'
  1271  007E16  4D                 	db	77	;'M'
  1272  007E17  45                 	db	69	;'E'
  1273  007E18  4E                 	db	78	;'N'
  1274  007E19  54                 	db	84	;'T'
  1275  007E1A  45                 	db	69	;'E'
  1276  007E1B  20                 	db	32
  1277  007E1C  0D                 	db	13
  1278  007E1D  0A                 	db	10
  1279  007E1E  00                 	db	0
  1280  007E1F                     STR_26:
  1281  007E1F  0D                 	db	13
  1282  007E20  0A                 	db	10
  1283  007E21  20                 	db	32
  1284  007E22  35                 	db	53	;'5'
  1285  007E23  2E                 	db	46
  1286  007E24  20                 	db	32
  1287  007E25  4D                 	db	77	;'M'
  1288  007E26  6F                 	db	111	;'o'
  1289  007E27  73                 	db	115	;'s'
  1290  007E28  74                 	db	116	;'t'
  1291  007E29  72                 	db	114	;'r'
  1292  007E2A  61                 	db	97	;'a'
  1293  007E2B  72                 	db	114	;'r'
  1294  007E2C  20                 	db	32
  1295  007E2D  76                 	db	118	;'v'
  1296  007E2E  61                 	db	97	;'a'
  1297  007E2F  6C                 	db	108	;'l'
  1298  007E30  6F                 	db	111	;'o'
  1299  007E31  72                 	db	114	;'r'
  1300  007E32  65                 	db	101	;'e'
  1301  007E33  73                 	db	115	;'s'
  1302  007E34  20                 	db	32
  1303  007E35  73                 	db	115	;'s'
  1304  007E36  65                 	db	101	;'e'
  1305  007E37  6E                 	db	110	;'n'
  1306  007E38  73                 	db	115	;'s'
  1307  007E39  6F                 	db	111	;'o'
  1308  007E3A  72                 	db	114	;'r'
  1309  007E3B  65                 	db	101	;'e'
  1310  007E3C  73                 	db	115	;'s'
  1311  007E3D  20                 	db	32
  1312  007E3E  0D                 	db	13
  1313  007E3F  0A                 	db	10
  1314  007E40  00                 	db	0
  1315  007E41                     STR_20:
  1316  007E41  0D                 	db	13
  1317  007E42  0A                 	db	10
  1318  007E43  53                 	db	83	;'S'
  1319  007E44  65                 	db	101	;'e'
  1320  007E45  6E                 	db	110	;'n'
  1321  007E46  73                 	db	115	;'s'
  1322  007E47  6F                 	db	111	;'o'
  1323  007E48  72                 	db	114	;'r'
  1324  007E49  65                 	db	101	;'e'
  1325  007E4A  73                 	db	115	;'s'
  1326  007E4B  20                 	db	32
  1327  007E4C  4C                 	db	76	;'L'
  1328  007E4D  65                 	db	101	;'e'
  1329  007E4E  69                 	db	105	;'i'
  1330  007E4F  64                 	db	100	;'d'
  1331  007E50  6F                 	db	111	;'o'
  1332  007E51  73                 	db	115	;'s'
  1333  007E52  20                 	db	32
  1334  007E53  63                 	db	99	;'c'
  1335  007E54  6F                 	db	111	;'o'
  1336  007E55  6E                 	db	110	;'n'
  1337  007E56  20                 	db	32
  1338  007E57  45                 	db	69	;'E'
  1339  007E58  78                 	db	120	;'x'
  1340  007E59  69                 	db	105	;'i'
  1341  007E5A  74                 	db	116	;'t'
  1342  007E5B  6F                 	db	111	;'o'
  1343  007E5C  21                 	db	33
  1344  007E5D  0D                 	db	13
  1345  007E5E  0A                 	db	10
  1346  007E5F  0A                 	db	10
  1347  007E60  00                 	db	0
  1348  007E61                     STR_25:
  1349  007E61  0D                 	db	13
  1350  007E62  0A                 	db	10
  1351  007E63  20                 	db	32
  1352  007E64  34                 	db	52	;'4'
  1353  007E65  2E                 	db	46
  1354  007E66  20                 	db	32
  1355  007E67  44                 	db	68	;'D'
  1356  007E68  61                 	db	97	;'a'
  1357  007E69  6D                 	db	109	;'m'
  1358  007E6A  65                 	db	101	;'e'
  1359  007E6B  20                 	db	32
  1360  007E6C  64                 	db	100	;'d'
  1361  007E6D  61                 	db	97	;'a'
  1362  007E6E  74                 	db	116	;'t'
  1363  007E6F  6F                 	db	111	;'o'
  1364  007E70  73                 	db	115	;'s'
  1365  007E71  20                 	db	32
  1366  007E72  64                 	db	100	;'d'
  1367  007E73  65                 	db	101	;'e'
  1368  007E74  6C                 	db	108	;'l'
  1369  007E75  20                 	db	32
  1370  007E76  73                 	db	115	;'s'
  1371  007E77  69                 	db	105	;'i'
  1372  007E78  73                 	db	115	;'s'
  1373  007E79  74                 	db	116	;'t'
  1374  007E7A  65                 	db	101	;'e'
  1375  007E7B  6D                 	db	109	;'m'
  1376  007E7C  61                 	db	97	;'a'
  1377  007E7D  20                 	db	32
  1378  007E7E  0D                 	db	13
  1379  007E7F  0A                 	db	10
  1380  007E80  00                 	db	0
  1381  007E81                     STR_36:
  1382  007E81  0D                 	db	13
  1383  007E82  0A                 	db	10
  1384  007E83  0A                 	db	10
  1385  007E84  4C                 	db	76	;'L'
  1386  007E85  61                 	db	97	;'a'
  1387  007E86  20                 	db	32
  1388  007E87  48                 	db	72	;'H'
  1389  007E88  75                 	db	117	;'u'
  1390  007E89  6D                 	db	109	;'m'
  1391  007E8A  65                 	db	101	;'e'
  1392  007E8B  64                 	db	100	;'d'
  1393  007E8C  61                 	db	97	;'a'
  1394  007E8D  64                 	db	100	;'d'
  1395  007E8E  20                 	db	32
  1396  007E8F  41                 	db	65	;'A'
  1397  007E90  6D                 	db	109	;'m'
  1398  007E91  62                 	db	98	;'b'
  1399  007E92  69                 	db	105	;'i'
  1400  007E93  65                 	db	101	;'e'
  1401  007E94  6E                 	db	110	;'n'
  1402  007E95  74                 	db	116	;'t'
  1403  007E96  65                 	db	101	;'e'
  1404  007E97  20                 	db	32
  1405  007E98  65                 	db	101	;'e'
  1406  007E99  73                 	db	115	;'s'
  1407  007E9A  3A                 	db	58	;':'
  1408  007E9B  20                 	db	32
  1409  007E9C  25                 	db	37
  1410  007E9D  64                 	db	100	;'d'
  1411  007E9E  0D                 	db	13
  1412  007E9F  0A                 	db	10
  1413  007EA0  00                 	db	0
  1414  007EA1                     STR_5:
  1415  007EA1  0D                 	db	13
  1416  007EA2  0A                 	db	10
  1417  007EA3  20                 	db	32
  1418  007EA4  45                 	db	69	;'E'
  1419  007EA5  6E                 	db	110	;'n'
  1420  007EA6  76                 	db	118	;'v'
  1421  007EA7  69                 	db	105	;'i'
  1422  007EA8  65                 	db	101	;'e'
  1423  007EA9  20                 	db	32
  1424  007EAA  6C                 	db	108	;'l'
  1425  007EAB  6F                 	db	111	;'o'
  1426  007EAC  73                 	db	115	;'s'
  1427  007EAD  20                 	db	32
  1428  007EAE  4D                 	db	77	;'M'
  1429  007EAF  69                 	db	105	;'i'
  1430  007EB0  6E                 	db	110	;'n'
  1431  007EB1  75                 	db	117	;'u'
  1432  007EB2  74                 	db	116	;'t'
  1433  007EB3  6F                 	db	111	;'o'
  1434  007EB4  73                 	db	115	;'s'
  1435  007EB5  20                 	db	32
  1436  007EB6  45                 	db	69	;'E'
  1437  007EB7  6A                 	db	106	;'j'
  1438  007EB8  3A                 	db	58	;':'
  1439  007EB9  20                 	db	32
  1440  007EBA  32                 	db	50	;'2'
  1441  007EBB  35                 	db	53	;'5'
  1442  007EBC  20                 	db	32
  1443  007EBD  0D                 	db	13
  1444  007EBE  0A                 	db	10
  1445  007EBF  00                 	db	0
  1446  007EC0                     STR_37:
  1447  007EC0  0D                 	db	13
  1448  007EC1  0A                 	db	10
  1449  007EC2  0A                 	db	10
  1450  007EC3  4C                 	db	76	;'L'
  1451  007EC4  61                 	db	97	;'a'
  1452  007EC5  20                 	db	32
  1453  007EC6  54                 	db	84	;'T'
  1454  007EC7  65                 	db	101	;'e'
  1455  007EC8  6D                 	db	109	;'m'
  1456  007EC9  70                 	db	112	;'p'
  1457  007ECA  65                 	db	101	;'e'
  1458  007ECB  72                 	db	114	;'r'
  1459  007ECC  61                 	db	97	;'a'
  1460  007ECD  74                 	db	116	;'t'
  1461  007ECE  75                 	db	117	;'u'
  1462  007ECF  72                 	db	114	;'r'
  1463  007ED0  61                 	db	97	;'a'
  1464  007ED1  20                 	db	32
  1465  007ED2  65                 	db	101	;'e'
  1466  007ED3  73                 	db	115	;'s'
  1467  007ED4  3A                 	db	58	;':'
  1468  007ED5  20                 	db	32
  1469  007ED6  25                 	db	37
  1470  007ED7  64                 	db	100	;'d'
  1471  007ED8  20                 	db	32
  1472  007ED9  43                 	db	67	;'C'
  1473  007EDA  0D                 	db	13
  1474  007EDB  0A                 	db	10
  1475  007EDC  00                 	db	0
  1476  007EDD                     STR_22:
  1477  007EDD  0D                 	db	13
  1478  007EDE  0A                 	db	10
  1479  007EDF  20                 	db	32
  1480  007EE0  31                 	db	49	;'1'
  1481  007EE1  2E                 	db	46
  1482  007EE2  20                 	db	32
  1483  007EE3  46                 	db	70	;'F'
  1484  007EE4  69                 	db	105	;'i'
  1485  007EE5  6A                 	db	106	;'j'
  1486  007EE6  61                 	db	97	;'a'
  1487  007EE7  72                 	db	114	;'r'
  1488  007EE8  20                 	db	32
  1489  007EE9  48                 	db	72	;'H'
  1490  007EEA  6F                 	db	111	;'o'
  1491  007EEB  72                 	db	114	;'r'
  1492  007EEC  61                 	db	97	;'a'
  1493  007EED  20                 	db	32
  1494  007EEE  41                 	db	65	;'A'
  1495  007EEF  63                 	db	99	;'c'
  1496  007EF0  74                 	db	116	;'t'
  1497  007EF1  75                 	db	117	;'u'
  1498  007EF2  61                 	db	97	;'a'
  1499  007EF3  6C                 	db	108	;'l'
  1500  007EF4  20                 	db	32
  1501  007EF5  0D                 	db	13
  1502  007EF6  0A                 	db	10
  1503  007EF7  00                 	db	0
  1504  007EF8                     STR_13:
  1505  007EF8  0D                 	db	13
  1506  007EF9  0A                 	db	10
  1507  007EFA  20                 	db	32
  1508  007EFB  48                 	db	72	;'H'
  1509  007EFC  6F                 	db	111	;'o'
  1510  007EFD  72                 	db	114	;'r'
  1511  007EFE  61                 	db	97	;'a'
  1512  007EFF  72                 	db	114	;'r'
  1513  007F00  69                 	db	105	;'i'
  1514  007F01  6F                 	db	111	;'o'
  1515  007F02  20                 	db	32
  1516  007F03  4D                 	db	77	;'M'
  1517  007F04  6F                 	db	111	;'o'
  1518  007F05  64                 	db	100	;'d'
  1519  007F06  69                 	db	105	;'i'
  1520  007F07  66                 	db	102	;'f'
  1521  007F08  69                 	db	105	;'i'
  1522  007F09  63                 	db	99	;'c'
  1523  007F0A  61                 	db	97	;'a'
  1524  007F0B  64                 	db	100	;'d'
  1525  007F0C  6F                 	db	111	;'o'
  1526  007F0D  21                 	db	33
  1527  007F0E  20                 	db	32
  1528  007F0F  0D                 	db	13
  1529  007F10  0A                 	db	10
  1530  007F11  00                 	db	0
  1531  007F12                     STR_28:
  1532  007F12  0D                 	db	13
  1533  007F13  0A                 	db	10
  1534  007F14  20                 	db	32
  1535  007F15  37                 	db	55	;'7'
  1536  007F16  2E                 	db	46
  1537  007F17  20                 	db	32
  1538  007F18  46                 	db	70	;'F'
  1539  007F19  69                 	db	105	;'i'
  1540  007F1A  6A                 	db	106	;'j'
  1541  007F1B  61                 	db	97	;'a'
  1542  007F1C  72                 	db	114	;'r'
  1543  007F1D  20                 	db	32
  1544  007F1E  44                 	db	68	;'D'
  1545  007F1F  69                 	db	105	;'i'
  1546  007F20  61                 	db	97	;'a'
  1547  007F21  20                 	db	32
  1548  007F22  41                 	db	65	;'A'
  1549  007F23  63                 	db	99	;'c'
  1550  007F24  74                 	db	116	;'t'
  1551  007F25  75                 	db	117	;'u'
  1552  007F26  61                 	db	97	;'a'
  1553  007F27  6C                 	db	108	;'l'
  1554  007F28  20                 	db	32
  1555  007F29  0D                 	db	13
  1556  007F2A  0A                 	db	10
  1557  007F2B  00                 	db	0
  1558  007F2C                     STR_7:
  1559  007F2C  0D                 	db	13
  1560  007F2D  0A                 	db	10
  1561  007F2E  20                 	db	32
  1562  007F2F  4F                 	db	79	;'O'
  1563  007F30  50                 	db	80	;'P'
  1564  007F31  43                 	db	67	;'C'
  1565  007F32  49                 	db	73	;'I'
  1566  007F33  4F                 	db	79	;'O'
  1567  007F34  4E                 	db	78	;'N'
  1568  007F35  45                 	db	69	;'E'
  1569  007F36  53                 	db	83	;'S'
  1570  007F37  20                 	db	32
  1571  007F38  44                 	db	68	;'D'
  1572  007F39  45                 	db	69	;'E'
  1573  007F3A  20                 	db	32
  1574  007F3B  52                 	db	82	;'R'
  1575  007F3C  45                 	db	69	;'E'
  1576  007F3D  47                 	db	71	;'G'
  1577  007F3E  41                 	db	65	;'A'
  1578  007F3F  44                 	db	68	;'D'
  1579  007F40  4F                 	db	79	;'O'
  1580  007F41  20                 	db	32
  1581  007F42  0D                 	db	13
  1582  007F43  0A                 	db	10
  1583  007F44  00                 	db	0
  1584  007F45                     STR_35:
  1585  007F45  45                 	db	69	;'E'
  1586  007F46  72                 	db	114	;'r'
  1587  007F47  72                 	db	114	;'r'
  1588  007F48  6F                 	db	111	;'o'
  1589  007F49  72                 	db	114	;'r'
  1590  007F4A  20                 	db	32
  1591  007F4B  64                 	db	100	;'d'
  1592  007F4C  65                 	db	101	;'e'
  1593  007F4D  20                 	db	32
  1594  007F4E  6C                 	db	108	;'l'
  1595  007F4F  65                 	db	101	;'e'
  1596  007F50  63                 	db	99	;'c'
  1597  007F51  74                 	db	116	;'t'
  1598  007F52  75                 	db	117	;'u'
  1599  007F53  72                 	db	114	;'r'
  1600  007F54  61                 	db	97	;'a'
  1601  007F55  20                 	db	32
  1602  007F56  44                 	db	68	;'D'
  1603  007F57  48                 	db	72	;'H'
  1604  007F58  54                 	db	84	;'T'
  1605  007F59  31                 	db	49	;'1'
  1606  007F5A  31                 	db	49	;'1'
  1607  007F5B  0D                 	db	13
  1608  007F5C  0A                 	db	10
  1609  007F5D  00                 	db	0
  1610  007F5E                     STR_14:
  1611  007F5E  0D                 	db	13
  1612  007F5F  0A                 	db	10
  1613  007F60  20                 	db	32
  1614  007F61  54                 	db	84	;'T'
  1615  007F62  49                 	db	73	;'I'
  1616  007F63  45                 	db	69	;'E'
  1617  007F64  4D                 	db	77	;'M'
  1618  007F65  50                 	db	80	;'P'
  1619  007F66  4F                 	db	79	;'O'
  1620  007F67  20                 	db	32
  1621  007F68  44                 	db	68	;'D'
  1622  007F69  45                 	db	69	;'E'
  1623  007F6A  20                 	db	32
  1624  007F6B  52                 	db	82	;'R'
  1625  007F6C  45                 	db	69	;'E'
  1626  007F6D  47                 	db	71	;'G'
  1627  007F6E  41                 	db	65	;'A'
  1628  007F6F  44                 	db	68	;'D'
  1629  007F70  4F                 	db	79	;'O'
  1630  007F71  20                 	db	32
  1631  007F72  0D                 	db	13
  1632  007F73  0A                 	db	10
  1633  007F74  00                 	db	0
  1634  007F75                     STR_27:
  1635  007F75  0D                 	db	13
  1636  007F76  0A                 	db	10
  1637  007F77  20                 	db	32
  1638  007F78  36                 	db	54	;'6'
  1639  007F79  2E                 	db	46
  1640  007F7A  20                 	db	32
  1641  007F7B  52                 	db	82	;'R'
  1642  007F7C  65                 	db	101	;'e'
  1643  007F7D  67                 	db	103	;'g'
  1644  007F7E  61                 	db	97	;'a'
  1645  007F7F  64                 	db	100	;'d'
  1646  007F80  6F                 	db	111	;'o'
  1647  007F81  20                 	db	32
  1648  007F82  72                 	db	114	;'r'
  1649  007F83  61                 	db	97	;'a'
  1650  007F84  70                 	db	112	;'p'
  1651  007F85  69                 	db	105	;'i'
  1652  007F86  64                 	db	100	;'d'
  1653  007F87  6F                 	db	111	;'o'
  1654  007F88  20                 	db	32
  1655  007F89  0D                 	db	13
  1656  007F8A  0A                 	db	10
  1657  007F8B  00                 	db	0
  1658  007F8C                     STR_46:
  1659  007F8C  0D                 	db	13
  1660  007F8D  0A                 	db	10
  1661  007F8E  20                 	db	32
  1662  007F8F  52                 	db	82	;'R'
  1663  007F90  45                 	db	69	;'E'
  1664  007F91  47                 	db	71	;'G'
  1665  007F92  41                 	db	65	;'A'
  1666  007F93  44                 	db	68	;'D'
  1667  007F94  4F                 	db	79	;'O'
  1668  007F95  20                 	db	32
  1669  007F96  52                 	db	82	;'R'
  1670  007F97  41                 	db	65	;'A'
  1671  007F98  50                 	db	80	;'P'
  1672  007F99  49                 	db	73	;'I'
  1673  007F9A  44                 	db	68	;'D'
  1674  007F9B  4F                 	db	79	;'O'
  1675  007F9C  20                 	db	32
  1676  007F9D  0D                 	db	13
  1677  007F9E  0A                 	db	10
  1678  007F9F  00                 	db	0
  1679  007FA0                     STR_45:
  1680  007FA0  0A                 	db	10
  1681  007FA1  46                 	db	70	;'F'
  1682  007FA2  41                 	db	65	;'A'
  1683  007FA3  4C                 	db	76	;'L'
  1684  007FA4  4C                 	db	76	;'L'
  1685  007FA5  4F                 	db	79	;'O'
  1686  007FA6  20                 	db	32
  1687  007FA7  45                 	db	69	;'E'
  1688  007FA8  4C                 	db	76	;'L'
  1689  007FA9  20                 	db	32
  1690  007FAA  53                 	db	83	;'S'
  1691  007FAB  45                 	db	69	;'E'
  1692  007FAC  54                 	db	84	;'T'
  1693  007FAD  45                 	db	69	;'E'
  1694  007FAE  4F                 	db	79	;'O'
  1695  007FAF  0D                 	db	13
  1696  007FB0  0A                 	db	10
  1697  007FB1  00                 	db	0
  1698  007FB2  41                 	db	65	;'A'
  1699  007FB3  54                 	db	84	;'T'
  1700  007FB4  2B                 	db	43
  1701  007FB5  4E                 	db	78	;'N'
  1702  007FB6  41                 	db	65	;'A'
  1703  007FB7  4D                 	db	77	;'M'
  1704  007FB8  45                 	db	69	;'E'
  1705  007FB9  53                 	db	83	;'S'
  1706  007FBA  4D                 	db	77	;'M'
  1707  007FBB  41                 	db	65	;'A'
  1708  007FBC  52                 	db	82	;'R'
  1709  007FBD  54                 	db	84	;'T'
  1710  007FBE  48                 	db	72	;'H'
  1711  007FBF  4F                 	db	79	;'O'
  1712  007FC0  4D                 	db	77	;'M'
  1713  007FC1  45                 	db	69	;'E'
  1714  007FC2  00                 	db	0
  1715  007FC3                     STR_3:
  1716  007FC3  0D                 	db	13
  1717  007FC4  0A                 	db	10
  1718  007FC5  20                 	db	32
  1719  007FC6  46                 	db	70	;'F'
  1720  007FC7  49                 	db	73	;'I'
  1721  007FC8  4A                 	db	74	;'J'
  1722  007FC9  41                 	db	65	;'A'
  1723  007FCA  20                 	db	32
  1724  007FCB  48                 	db	72	;'H'
  1725  007FCC  4F                 	db	79	;'O'
  1726  007FCD  52                 	db	82	;'R'
  1727  007FCE  41                 	db	65	;'A'
  1728  007FCF  20                 	db	32
  1729  007FD0  0D                 	db	13
  1730  007FD1  0A                 	db	10
  1731  007FD2  00                 	db	0
  1732  007FD3                     STR_29:
  1733  007FD3  0D                 	db	13
  1734  007FD4  0A                 	db	10
  1735  007FD5  20                 	db	32
  1736  007FD6  4F                 	db	79	;'O'
  1737  007FD7  70                 	db	112	;'p'
  1738  007FD8  63                 	db	99	;'c'
  1739  007FD9  69                 	db	105	;'i'
  1740  007FDA  6F                 	db	111	;'o'
  1741  007FDB  6E                 	db	110	;'n'
  1742  007FDC  3A                 	db	58	;':'
  1743  007FDD  20                 	db	32
  1744  007FDE  20                 	db	32
  1745  007FDF  0D                 	db	13
  1746  007FE0  00                 	db	0
  1747  007FE1  41                 	db	65	;'A'
  1748  007FE2  54                 	db	84	;'T'
  1749  007FE3  2B                 	db	43
  1750  007FE4  50                 	db	80	;'P'
  1751  007FE5  49                 	db	73	;'I'
  1752  007FE6  4E                 	db	78	;'N'
  1753  007FE7  32                 	db	50	;'2'
  1754  007FE8  35                 	db	53	;'5'
  1755  007FE9  30                 	db	48	;'0'
  1756  007FEA  31                 	db	49	;'1'
  1757  007FEB  00                 	db	0
  1758  007FEC                     STR_12:
  1759  007FEC  0D                 	db	13
  1760  007FED  0A                 	db	10
  1761  007FEE  5B                 	db	91	;'['
  1762  007FEF  25                 	db	37
  1763  007FF0  64                 	db	100	;'d'
  1764  007FF1  5D                 	db	93	;']'
  1765  007FF2  3A                 	db	58	;':'
  1766  007FF3  20                 	db	32
  1767  007FF4  00                 	db	0
  1768  007FF5  41                 	db	65	;'A'
  1769  007FF6  54                 	db	84	;'T'
  1770  007FF7  2B                 	db	43
  1771  007FF8  42                 	db	66	;'B'
  1772  007FF9  41                 	db	65	;'A'
  1773  007FFA  55                 	db	85	;'U'
  1774  007FFB  44                 	db	68	;'D'
  1775  007FFC  34                 	db	52	;'4'
  1776  007FFD  00                 	db	0
  1777  0000                     
  1778                           ; #config settings
  1779  007FFE  00                 	db	0	; dummy byte at the end
  1780  0000                     
  1781                           	psect	cinit
  1782  002A9C                     __pcinit:
  1783                           	opt callstack 0
  1784  002A9C                     start_initialization:
  1785                           	opt callstack 0
  1786  002A9C                     __initialization:
  1787                           	opt callstack 0
  1788                           
  1789                           ; Initialize objects allocated to BANK1 (11 bytes)
  1790                           ; load TBLPTR registers with __pidataBANK1
  1791  002A9C  0EA4               	movlw	low __pidataBANK1
  1792  002A9E  6EF6               	movwf	tblptrl,c
  1793  002AA0  0E2F               	movlw	high __pidataBANK1
  1794  002AA2  6EF7               	movwf	tblptrh,c
  1795  002AA4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1796  002AA6  6EF8               	movwf	tblptru,c
  1797  002AA8  EE01  F09F         	lfsr	0,__pdataBANK1
  1798  002AAC  EE10 F00B          	lfsr	1,11
  1799  002AB0                     copy_data0:
  1800  002AB0  0009               	tblrd		*+
  1801  002AB2  CFF5 FFEE          	movff	tablat,postinc0
  1802  002AB6  50E5               	movf	postdec1,w,c
  1803  002AB8  50E1               	movf	fsr1l,w,c
  1804  002ABA  E1FA               	bnz	copy_data0
  1805                           
  1806                           ; Clear objects allocated to BIGRAM (288 bytes)
  1807  002ABC  EE01  F0AA         	lfsr	0,__pbssBIGRAM
  1808  002AC0  EE11 F020          	lfsr	1,288
  1809  002AC4                     clear_0:
  1810  002AC4  6AEE               	clrf	postinc0,c
  1811  002AC6  50E5               	movf	postdec1,w,c
  1812  002AC8  50E1               	movf	fsr1l,w,c
  1813  002ACA  E1FC               	bnz	clear_0
  1814  002ACC  50E2               	movf	fsr1h,w,c
  1815  002ACE  E1FA               	bnz	clear_0
  1816                           
  1817                           ; Clear objects allocated to BANK1 (55 bytes)
  1818  002AD0  EE01  F068         	lfsr	0,__pbssBANK1
  1819  002AD4  0E37               	movlw	55
  1820  002AD6                     clear_1:
  1821  002AD6  6AEE               	clrf	postinc0,c
  1822  002AD8  06E8               	decf	wreg,f,c
  1823  002ADA  E1FD               	bnz	clear_1
  1824                           
  1825                           ; Clear objects allocated to BANK0 (20 bytes)
  1826  002ADC  EE00  F0EB         	lfsr	0,__pbssBANK0
  1827  002AE0  0E14               	movlw	20
  1828  002AE2                     clear_2:
  1829  002AE2  6AEE               	clrf	postinc0,c
  1830  002AE4  06E8               	decf	wreg,f,c
  1831  002AE6  E1FD               	bnz	clear_2
  1832  002AE8                     end_of_initialization:
  1833                           	opt callstack 0
  1834  002AE8                     __end_of__initialization:
  1835                           	opt callstack 0
  1836  002AE8  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1837  002AEA  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1838  002AEC  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1839  002AEE  6EF8               	movwf	tblptru,c
  1840  002AF0  0100               	movlb	0
  1841  002AF2  EF51  F012         	goto	_main	;jump to C main() function
  1842                           
  1843                           	psect	bssBANK0
  1844  0000EB                     __pbssBANK0:
  1845                           	opt callstack 0
  1846  0000EB                     _width:
  1847                           	opt callstack 0
  1848  0000EB                     	ds	2
  1849  0000ED                     _prec:
  1850                           	opt callstack 0
  1851  0000ED                     	ds	2
  1852  0000EF                     _flags:
  1853                           	opt callstack 0
  1854  0000EF                     	ds	2
  1855  0000F1                     _contInterrupciones:
  1856                           	opt callstack 0
  1857  0000F1                     	ds	2
  1858  0000F3                     _peticionLecturaSensores:
  1859                           	opt callstack 0
  1860  0000F3                     	ds	1
  1861  0000F4                     _regando:
  1862                           	opt callstack 0
  1863  0000F4                     	ds	1
  1864  0000F5                     _minutosTranscurridos:
  1865                           	opt callstack 0
  1866  0000F5                     	ds	1
  1867  0000F6                     _minutosRegar:
  1868                           	opt callstack 0
  1869  0000F6                     	ds	1
  1870  0000F7                     _flagRegado:
  1871                           	opt callstack 0
  1872  0000F7                     	ds	1
  1873  0000F8                     _tempHora:
  1874                           	opt callstack 0
  1875  0000F8                     	ds	1
  1876  0000F9                     _diaActual:
  1877                           	opt callstack 0
  1878  0000F9                     	ds	1
  1879  0000FA                     _segundos:
  1880                           	opt callstack 0
  1881  0000FA                     	ds	1
  1882  0000FB                     _minutos:
  1883                           	opt callstack 0
  1884  0000FB                     	ds	1
  1885  0000FC                     _hora:
  1886                           	opt callstack 0
  1887  0000FC                     	ds	1
  1888  0000FD                     _esperaDatoConcluida:
  1889                           	opt callstack 0
  1890  0000FD                     	ds	1
  1891  0000FE                     _tiempoInactividadTrans:
  1892                           	opt callstack 0
  1893  0000FE                     	ds	1
  1894                           
  1895                           	psect	bssBANK1
  1896  000168                     __pbssBANK1:
  1897                           	opt callstack 0
  1898  000168                     _sensores:
  1899                           	opt callstack 0
  1900  000168                     	ds	16
  1901  000178                     _nout:
  1902                           	opt callstack 0
  1903  000178                     	ds	2
  1904  00017A                     _overflowTimer:
  1905                           	opt callstack 0
  1906  00017A                     	ds	1
  1907  00017B                     _datoRecibido:
  1908                           	opt callstack 0
  1909  00017B                     	ds	1
  1910  00017C                     _MODO_COMUNICACION:
  1911                           	opt callstack 0
  1912  00017C                     	ds	1
  1913  00017D                     _esperandoDatos:
  1914                           	opt callstack 0
  1915  00017D                     	ds	1
  1916  00017E                     _byteUart:
  1917                           	opt callstack 0
  1918  00017E                     	ds	1
  1919  00017F                     _dbuf:
  1920                           	opt callstack 0
  1921  00017F                     	ds	32
  1922                           
  1923                           	psect	dataBANK1
  1924  00019F                     __pdataBANK1:
  1925                           	opt callstack 0
  1926  00019F                     stoa@F1144:
  1927                           	opt callstack 0
  1928  00019F                     	ds	7
  1929  0001A6                     _VALOR_TIMER0:
  1930                           	opt callstack 0
  1931  0001A6                     	ds	2
  1932  0001A8                     _VALOR_TIMER0UART:
  1933                           	opt callstack 0
  1934  0001A8                     	ds	2
  1935                           
  1936                           	psect	bssBIGRAM
  1937  0001AA                     __pbssBIGRAM:
  1938                           	opt callstack 0
  1939  0001AA                     _horarios:
  1940                           	opt callstack 0
  1941  0001AA                     	ds	288
  1942                           
  1943                           	psect	cstackBANK1
  1944  000100                     __pcstackBANK1:
  1945                           	opt callstack 0
  1946  000100                     mostrarDatosSensoresWIFI@bufferSensor:
  1947                           	opt callstack 0
  1948                           
  1949                           ; 50 bytes @ 0x0
  1950  000100                     	ds	50
  1951  000132                     mostrarDatosSensoresWIFI@buffer:
  1952                           	opt callstack 0
  1953                           
  1954                           ; 50 bytes @ 0x32
  1955  000132                     	ds	50
  1956  000164                     mostrarDatosSensoresWIFI@temperatura:
  1957                           	opt callstack 0
  1958                           
  1959                           ; 1 bytes @ 0x64
  1960  000164                     	ds	1
  1961  000165                     mostrarDatosSensoresWIFI@humedad:
  1962                           	opt callstack 0
  1963                           
  1964                           ; 1 bytes @ 0x65
  1965  000165                     	ds	1
  1966  000166                     mostrarDatosSensoresWIFI@i:
  1967                           	opt callstack 0
  1968                           
  1969                           ; 2 bytes @ 0x66
  1970  000166                     	ds	2
  1971                           
  1972                           	psect	cstackBANK0
  1973  000060                     __pcstackBANK0:
  1974                           	opt callstack 0
  1975  000060                     ?_sprintf:
  1976                           	opt callstack 0
  1977  000060                     sprintf@s:
  1978                           	opt callstack 0
  1979                           
  1980                           ; 2 bytes @ 0x0
  1981  000060                     	ds	2
  1982  000062                     sprintf@fmt:
  1983                           	opt callstack 0
  1984                           
  1985                           ; 2 bytes @ 0x2
  1986  000062                     	ds	12
  1987  00006E                     sprintf@ap:
  1988                           	opt callstack 0
  1989                           
  1990                           ; 2 bytes @ 0xE
  1991  00006E                     	ds	2
  1992  000070                     sprintf@f:
  1993                           	opt callstack 0
  1994                           
  1995                           ; 6 bytes @ 0x10
  1996  000070                     	ds	6
  1997  000076                     ??_dameDatosSistema:
  1998  000076                     ??_mostrarDatosSensores:
  1999  000076                     ??_asignarHorarios:
  2000  000076                     lecturaWifi@buffer:
  2001                           	opt callstack 0
  2002                           
  2003                           ; 50 bytes @ 0x16
  2004  000076                     	ds	1
  2005  000077                     mostrarDatosSensores@buffer:
  2006                           	opt callstack 0
  2007                           
  2008                           ; 50 bytes @ 0x17
  2009  000077                     	ds	1
  2010  000078                     asignarHorarios@buffer:
  2011                           	opt callstack 0
  2012                           
  2013                           ; 50 bytes @ 0x18
  2014  000078                     	ds	2
  2015  00007A                     dameDatosSistema@buffer:
  2016                           	opt callstack 0
  2017                           
  2018                           ; 50 bytes @ 0x1A
  2019  00007A                     	ds	46
  2020  0000A8                     lecturaWifi@Rx:
  2021                           	opt callstack 0
  2022                           
  2023                           ; 1 bytes @ 0x48
  2024  0000A8                     	ds	1
  2025  0000A9                     lecturaWifi@humedadMedida:
  2026                           	opt callstack 0
  2027  0000A9                     mostrarDatosSensores@temperatura:
  2028                           	opt callstack 0
  2029                           
  2030                           ; 1 bytes @ 0x49
  2031  0000A9                     	ds	1
  2032  0000AA                     asignarHorarios@Rx:
  2033                           	opt callstack 0
  2034  0000AA                     mostrarDatosSensores@humedad:
  2035                           	opt callstack 0
  2036  0000AA                     lecturaWifi@i:
  2037                           	opt callstack 0
  2038                           
  2039                           ; 2 bytes @ 0x4A
  2040  0000AA                     	ds	1
  2041  0000AB                     asignarHorarios@diaRegar:
  2042                           	opt callstack 0
  2043  0000AB                     mostrarDatosSensores@i:
  2044                           	opt callstack 0
  2045                           
  2046                           ; 2 bytes @ 0x4B
  2047  0000AB                     	ds	1
  2048  0000AC                     ??_mostrarDatosSensoresWIFI:
  2049  0000AC                     asignarHorarios@hora:
  2050                           	opt callstack 0
  2051  0000AC                     dameDatosSistema@diasRegar:
  2052                           	opt callstack 0
  2053                           
  2054                           ; 50 bytes @ 0x4C
  2055  0000AC                     	ds	1
  2056  0000AD                     asignarHorarios@i:
  2057                           	opt callstack 0
  2058                           
  2059                           ; 2 bytes @ 0x4D
  2060  0000AD                     	ds	49
  2061  0000DE                     _dameDatosSistema$1916:
  2062                           	opt callstack 0
  2063                           
  2064                           ; 2 bytes @ 0x7E
  2065  0000DE                     	ds	2
  2066  0000E0                     _dameDatosSistema$1917:
  2067                           	opt callstack 0
  2068                           
  2069                           ; 2 bytes @ 0x80
  2070  0000E0                     	ds	2
  2071  0000E2                     _dameDatosSistema$1918:
  2072                           	opt callstack 0
  2073                           
  2074                           ; 2 bytes @ 0x82
  2075  0000E2                     	ds	2
  2076  0000E4                     dameDatosSistema@j:
  2077                           	opt callstack 0
  2078                           
  2079                           ; 2 bytes @ 0x84
  2080  0000E4                     	ds	2
  2081  0000E6                     dameDatosSistema@i:
  2082                           	opt callstack 0
  2083                           
  2084                           ; 2 bytes @ 0x86
  2085  0000E6                     	ds	2
  2086  0000E8                     ??_sistemaPrincipal:
  2087                           
  2088                           ; 1 bytes @ 0x88
  2089  0000E8                     	ds	2
  2090  0000EA                     sistemaPrincipal@opcion:
  2091                           	opt callstack 0
  2092                           
  2093                           ; 1 bytes @ 0x8A
  2094  0000EA                     	ds	1
  2095                           
  2096                           	psect	cstackCOMRAM
  2097  000001                     __pcstackCOMRAM:
  2098                           	opt callstack 0
  2099  000001                     ??_i2c_espera:
  2100  000001                     ??_convertirDato:
  2101  000001                     ??_DHT11_Start:
  2102  000001                     ?_strlen:
  2103                           	opt callstack 0
  2104  000001                     ?_isdigit:
  2105                           	opt callstack 0
  2106  000001                     ?_isspace:
  2107                           	opt callstack 0
  2108  000001                     ?_horaRegar:
  2109                           	opt callstack 0
  2110  000001                     ?_dameHumedadSuelo:
  2111                           	opt callstack 0
  2112  000001                     ?___wmul:
  2113                           	opt callstack 0
  2114  000001                     ?___awdiv:
  2115                           	opt callstack 0
  2116  000001                     ?___awmod:
  2117                           	opt callstack 0
  2118  000001                     ?___lmul:
  2119                           	opt callstack 0
  2120  000001                     ?___aodiv:
  2121                           	opt callstack 0
  2122  000001                     ?___aomod:
  2123                           	opt callstack 0
  2124  000001                     UART_write@dato:
  2125                           	opt callstack 0
  2126  000001                     DHT11_ReadData@i:
  2127                           	opt callstack 0
  2128  000001                     check_response@respuesta:
  2129                           	opt callstack 0
  2130  000001                     constructorSensor@s:
  2131                           	opt callstack 0
  2132  000001                     ___wmul@multiplier:
  2133                           	opt callstack 0
  2134  000001                     ___awdiv@dividend:
  2135                           	opt callstack 0
  2136  000001                     ___awmod@dividend:
  2137                           	opt callstack 0
  2138  000001                     isdigit@c:
  2139                           	opt callstack 0
  2140  000001                     isspace@c:
  2141                           	opt callstack 0
  2142  000001                     fputc@c:
  2143                           	opt callstack 0
  2144  000001                     strlen@s:
  2145                           	opt callstack 0
  2146  000001                     ___lmul@multiplier:
  2147                           	opt callstack 0
  2148  000001                     ___aodiv@dividend:
  2149                           	opt callstack 0
  2150  000001                     ___aomod@dividend:
  2151                           	opt callstack 0
  2152                           
  2153                           ; 8 bytes @ 0x0
  2154  000001                     	ds	1
  2155  000002                     i2c_envia_dato@dato:
  2156                           	opt callstack 0
  2157  000002                     i2c_recibe_dato@datoleido:
  2158                           	opt callstack 0
  2159  000002                     convertirDato@dato:
  2160                           	opt callstack 0
  2161  000002                     DHT11_ReadData@data:
  2162                           	opt callstack 0
  2163  000002                     UART_printf@cadena:
  2164                           	opt callstack 0
  2165                           
  2166                           ; 2 bytes @ 0x1
  2167  000002                     	ds	1
  2168  000003                     ??_isdigit:
  2169  000003                     ??_isspace:
  2170  000003                     ??_horaRegar:
  2171  000003                     ??_dameHumedadSuelo:
  2172  000003                     escribe_rtc@dato:
  2173                           	opt callstack 0
  2174  000003                     leer_rtc@direccion:
  2175                           	opt callstack 0
  2176  000003                     convertirDato@datoR:
  2177                           	opt callstack 0
  2178  000003                     constructorSensor@porcientoHumedad:
  2179                           	opt callstack 0
  2180  000003                     leer_eeprom@direccion:
  2181                           	opt callstack 0
  2182  000003                     ___wmul@multiplicand:
  2183                           	opt callstack 0
  2184  000003                     ___awdiv@divisor:
  2185                           	opt callstack 0
  2186  000003                     ___awmod@divisor:
  2187                           	opt callstack 0
  2188  000003                     fputc@fp:
  2189                           	opt callstack 0
  2190  000003                     strlen@a:
  2191                           	opt callstack 0
  2192                           
  2193                           ; 2 bytes @ 0x2
  2194  000003                     	ds	1
  2195  000004                     escribe_rtc@direccion:
  2196                           	opt callstack 0
  2197  000004                     leer_rtc@dato:
  2198                           	opt callstack 0
  2199  000004                     constructorSensor@pin:
  2200                           	opt callstack 0
  2201  000004                     dameTemperaturaHumedad@Humedad:
  2202                           	opt callstack 0
  2203  000004                     getValue@numCharacters:
  2204                           	opt callstack 0
  2205                           
  2206                           ; 2 bytes @ 0x3
  2207  000004                     	ds	1
  2208  000005                     ??_fputc:
  2209  000005                     ??_leer_eeprom:
  2210  000005                     _horaRegar$803:
  2211                           	opt callstack 0
  2212  000005                     dameHumedadSuelo@canalLeer:
  2213                           	opt callstack 0
  2214  000005                     ___awdiv@counter:
  2215                           	opt callstack 0
  2216  000005                     ___awmod@counter:
  2217                           	opt callstack 0
  2218  000005                     restablecerDatosSensor@i:
  2219                           	opt callstack 0
  2220  000005                     ___wmul@product:
  2221                           	opt callstack 0
  2222  000005                     ___lmul@multiplicand:
  2223                           	opt callstack 0
  2224                           
  2225                           ; 4 bytes @ 0x4
  2226  000005                     	ds	1
  2227  000006                     ??_getValue:
  2228  000006                     leer_eeprom@dato:
  2229                           	opt callstack 0
  2230  000006                     ___awdiv@sign:
  2231                           	opt callstack 0
  2232  000006                     ___awmod@sign:
  2233                           	opt callstack 0
  2234  000006                     dameTemperaturaHumedad@Temperatura:
  2235                           	opt callstack 0
  2236                           
  2237                           ; 2 bytes @ 0x5
  2238  000006                     	ds	1
  2239  000007                     ??_inicializarObjetos:
  2240  000007                     ??_leeHorariosMemoria:
  2241  000007                     _isspace$1582:
  2242                           	opt callstack 0
  2243  000007                     escribe_eeprom@direccion:
  2244                           	opt callstack 0
  2245  000007                     ___awdiv@quotient:
  2246                           	opt callstack 0
  2247                           
  2248                           ; 2 bytes @ 0x6
  2249  000007                     	ds	1
  2250  000008                     ??_dameTemperaturaHumedad:
  2251  000008                     ?_atoi:
  2252                           	opt callstack 0
  2253  000008                     getValue@datoIncorrecto:
  2254                           	opt callstack 0
  2255  000008                     atoi@s:
  2256                           	opt callstack 0
  2257                           
  2258                           ; 2 bytes @ 0x7
  2259  000008                     	ds	1
  2260  000009                     escribe_eeprom@dato:
  2261                           	opt callstack 0
  2262  000009                     inicializarObjetos@j:
  2263                           	opt callstack 0
  2264  000009                     leeHorariosMemoria@j:
  2265                           	opt callstack 0
  2266  000009                     getValue@i:
  2267                           	opt callstack 0
  2268  000009                     ___lmul@product:
  2269                           	opt callstack 0
  2270  000009                     ___aodiv@divisor:
  2271                           	opt callstack 0
  2272  000009                     ___aomod@divisor:
  2273                           	opt callstack 0
  2274                           
  2275                           ; 8 bytes @ 0x8
  2276  000009                     	ds	1
  2277  00000A                     ??_atoi:
  2278  00000A                     ??_escribe_eeprom:
  2279  00000A                     ?_stoa:
  2280                           	opt callstack 0
  2281  00000A                     dameTemperaturaHumedad@checkSum:
  2282                           	opt callstack 0
  2283  00000A                     stoa@fp:
  2284                           	opt callstack 0
  2285  00000A                     fputs@s:
  2286                           	opt callstack 0
  2287                           
  2288                           ; 2 bytes @ 0x9
  2289  00000A                     	ds	1
  2290  00000B                     ??_escribeHorariosMemoria:
  2291  00000B                     inicializarObjetos@i_806:
  2292                           	opt callstack 0
  2293  00000B                     leeHorariosMemoria@contMemoria:
  2294                           	opt callstack 0
  2295  00000B                     getValue@i_989:
  2296                           	opt callstack 0
  2297                           
  2298                           ; 2 bytes @ 0xA
  2299  00000B                     	ds	1
  2300  00000C                     dameTemperaturaHumedad@humedadDecimal:
  2301                           	opt callstack 0
  2302  00000C                     stoa@s:
  2303                           	opt callstack 0
  2304  00000C                     fputs@fp:
  2305                           	opt callstack 0
  2306                           
  2307                           ; 2 bytes @ 0xB
  2308  00000C                     	ds	1
  2309  00000D                     ?___aldiv:
  2310                           	opt callstack 0
  2311  00000D                     dameTemperaturaHumedad@temperaturaDecimal:
  2312                           	opt callstack 0
  2313  00000D                     getValue@dato:
  2314                           	opt callstack 0
  2315  00000D                     inicializarObjetos@i:
  2316                           	opt callstack 0
  2317  00000D                     escribeHorariosMemoria@j:
  2318                           	opt callstack 0
  2319  00000D                     leeHorariosMemoria@i:
  2320                           	opt callstack 0
  2321  00000D                     ___aldiv@dividend:
  2322                           	opt callstack 0
  2323                           
  2324                           ; 4 bytes @ 0xC
  2325  00000D                     	ds	1
  2326  00000E                     ??_stoa:
  2327  00000E                     dameTemperaturaHumedad@humedad:
  2328                           	opt callstack 0
  2329  00000E                     getValue@Rx:
  2330                           	opt callstack 0
  2331  00000E                     fputs@c:
  2332                           	opt callstack 0
  2333  00000E                     atoi@neg:
  2334                           	opt callstack 0
  2335                           
  2336                           ; 2 bytes @ 0xD
  2337  00000E                     	ds	1
  2338  00000F                     ??_regadoRapido:
  2339  00000F                     setRtc@direccion:
  2340                           	opt callstack 0
  2341  00000F                     dameTemperaturaHumedad@temperatura:
  2342                           	opt callstack 0
  2343  00000F                     escribeHorariosMemoria@contMemoria:
  2344                           	opt callstack 0
  2345  00000F                     fputs@i:
  2346                           	opt callstack 0
  2347  00000F                     stoa@nuls:
  2348                           	opt callstack 0
  2349                           
  2350                           ; 7 bytes @ 0xE
  2351  00000F                     	ds	1
  2352  000010                     ?_estaSeco:
  2353                           	opt callstack 0
  2354  000010                     setRtc@seteado:
  2355                           	opt callstack 0
  2356  000010                     estaSeco@s:
  2357                           	opt callstack 0
  2358  000010                     _atoi$1564:
  2359                           	opt callstack 0
  2360                           
  2361                           ; 2 bytes @ 0xF
  2362  000010                     	ds	1
  2363  000011                     ?_pad:
  2364                           	opt callstack 0
  2365  000011                     setRtc@datoRtc:
  2366                           	opt callstack 0
  2367  000011                     regadoRapido@tiempoRegar:
  2368                           	opt callstack 0
  2369  000011                     ___aodiv@counter:
  2370                           	opt callstack 0
  2371  000011                     ___aomod@counter:
  2372                           	opt callstack 0
  2373  000011                     escribeHorariosMemoria@i:
  2374                           	opt callstack 0
  2375  000011                     pad@fp:
  2376                           	opt callstack 0
  2377  000011                     ___aldiv@divisor:
  2378                           	opt callstack 0
  2379                           
  2380                           ; 4 bytes @ 0x10
  2381  000011                     	ds	1
  2382  000012                     _estaSeco$796:
  2383                           	opt callstack 0
  2384  000012                     setRtc@dato:
  2385                           	opt callstack 0
  2386  000012                     regadoRapido@areaRegar:
  2387                           	opt callstack 0
  2388  000012                     ___aodiv@sign:
  2389                           	opt callstack 0
  2390  000012                     ___aomod@sign:
  2391                           	opt callstack 0
  2392  000012                     _atoi$1566:
  2393                           	opt callstack 0
  2394                           
  2395                           ; 2 bytes @ 0x11
  2396  000012                     	ds	1
  2397  000013                     ?_abs:
  2398                           	opt callstack 0
  2399  000013                     estaSeco@temperatura:
  2400                           	opt callstack 0
  2401  000013                     setTiempoRegar@tiempoRegar:
  2402                           	opt callstack 0
  2403  000013                     pad@buf:
  2404                           	opt callstack 0
  2405  000013                     abs@a:
  2406                           	opt callstack 0
  2407  000013                     ___aodiv@quotient:
  2408                           	opt callstack 0
  2409                           
  2410                           ; 8 bytes @ 0x12
  2411  000013                     	ds	1
  2412  000014                     ??_encenderBombas:
  2413  000014                     setTiempoRegar@hora:
  2414                           	opt callstack 0
  2415  000014                     _atoi$1565:
  2416                           	opt callstack 0
  2417                           
  2418                           ; 1 bytes @ 0x13
  2419  000014                     	ds	1
  2420  000015                     ??_abs:
  2421  000015                     ___aldiv@counter:
  2422                           	opt callstack 0
  2423  000015                     pad@p:
  2424                           	opt callstack 0
  2425  000015                     atoi@n:
  2426                           	opt callstack 0
  2427                           
  2428                           ; 2 bytes @ 0x14
  2429  000015                     	ds	1
  2430  000016                     encenderBombas@flagSeco:
  2431                           	opt callstack 0
  2432  000016                     ___aldiv@sign:
  2433                           	opt callstack 0
  2434  000016                     stoa@i:
  2435                           	opt callstack 0
  2436                           
  2437                           ; 2 bytes @ 0x15
  2438  000016                     	ds	1
  2439  000017                     ??_pad:
  2440  000017                     encenderBombas@i:
  2441                           	opt callstack 0
  2442  000017                     ___aldiv@quotient:
  2443                           	opt callstack 0
  2444                           
  2445                           ; 4 bytes @ 0x16
  2446  000017                     	ds	1
  2447  000018                     pad@i:
  2448                           	opt callstack 0
  2449  000018                     stoa@w:
  2450                           	opt callstack 0
  2451                           
  2452                           ; 2 bytes @ 0x17
  2453  000018                     	ds	2
  2454  00001A                     pad@w:
  2455                           	opt callstack 0
  2456  00001A                     stoa@cp:
  2457                           	opt callstack 0
  2458                           
  2459                           ; 2 bytes @ 0x19
  2460  00001A                     	ds	1
  2461  00001B                     ?_map:
  2462                           	opt callstack 0
  2463  00001B                     UART_init@BAUD:
  2464                           	opt callstack 0
  2465  00001B                     map@x:
  2466                           	opt callstack 0
  2467                           
  2468                           ; 4 bytes @ 0x1A
  2469  00001B                     	ds	1
  2470  00001C                     ?_ctoa:
  2471                           	opt callstack 0
  2472  00001C                     ?_dtoa:
  2473                           	opt callstack 0
  2474  00001C                     ctoa@fp:
  2475                           	opt callstack 0
  2476  00001C                     dtoa@fp:
  2477                           	opt callstack 0
  2478  00001C                     stoa@p:
  2479                           	opt callstack 0
  2480                           
  2481                           ; 2 bytes @ 0x1B
  2482  00001C                     	ds	2
  2483  00001E                     ctoa@c:
  2484                           	opt callstack 0
  2485  00001E                     stoa@l:
  2486                           	opt callstack 0
  2487  00001E                     dtoa@d:
  2488                           	opt callstack 0
  2489                           
  2490                           ; 8 bytes @ 0x1D
  2491  00001E                     	ds	1
  2492  00001F                     ctoa@w:
  2493                           	opt callstack 0
  2494  00001F                     map@in_min:
  2495                           	opt callstack 0
  2496                           
  2497                           ; 4 bytes @ 0x1E
  2498  00001F                     	ds	4
  2499  000023                     map@in_max:
  2500                           	opt callstack 0
  2501  000023                     _UART_init$1915:
  2502                           	opt callstack 0
  2503                           
  2504                           ; 4 bytes @ 0x22
  2505  000023                     	ds	3
  2506  000026                     ??_dtoa:
  2507                           
  2508                           ; 1 bytes @ 0x25
  2509  000026                     	ds	1
  2510  000027                     map@out_min:
  2511                           	opt callstack 0
  2512                           
  2513                           ; 4 bytes @ 0x26
  2514  000027                     	ds	4
  2515  00002B                     map@out_max:
  2516                           	opt callstack 0
  2517                           
  2518                           ; 4 bytes @ 0x2A
  2519  00002B                     	ds	3
  2520  00002E                     _dtoa$1081:
  2521                           	opt callstack 0
  2522                           
  2523                           ; 2 bytes @ 0x2D
  2524  00002E                     	ds	1
  2525  00002F                     ??_lecturaAnalogaSensores:
  2526                           
  2527                           ; 1 bytes @ 0x2E
  2528  00002F                     	ds	1
  2529  000030                     lecturaAnalogaSensores@i:
  2530                           	opt callstack 0
  2531  000030                     dtoa@p:
  2532                           	opt callstack 0
  2533                           
  2534                           ; 2 bytes @ 0x2F
  2535  000030                     	ds	2
  2536  000032                     dtoa@w:
  2537                           	opt callstack 0
  2538                           
  2539                           ; 2 bytes @ 0x31
  2540  000032                     	ds	2
  2541  000034                     dtoa@s:
  2542                           	opt callstack 0
  2543                           
  2544                           ; 2 bytes @ 0x33
  2545  000034                     	ds	2
  2546  000036                     dtoa@n:
  2547                           	opt callstack 0
  2548                           
  2549                           ; 8 bytes @ 0x35
  2550  000036                     	ds	8
  2551  00003E                     dtoa@i:
  2552                           	opt callstack 0
  2553                           
  2554                           ; 2 bytes @ 0x3D
  2555  00003E                     	ds	2
  2556  000040                     ?_vfpfcnvrt:
  2557                           	opt callstack 0
  2558  000040                     vfpfcnvrt@fp:
  2559                           	opt callstack 0
  2560                           
  2561                           ; 2 bytes @ 0x3F
  2562  000040                     	ds	2
  2563  000042                     vfpfcnvrt@fmt:
  2564                           	opt callstack 0
  2565                           
  2566                           ; 2 bytes @ 0x41
  2567  000042                     	ds	2
  2568  000044                     vfpfcnvrt@ap:
  2569                           	opt callstack 0
  2570                           
  2571                           ; 2 bytes @ 0x43
  2572  000044                     	ds	2
  2573  000046                     ??_vfpfcnvrt:
  2574                           
  2575                           ; 1 bytes @ 0x45
  2576  000046                     	ds	4
  2577  00004A                     vfpfcnvrt@ll:
  2578                           	opt callstack 0
  2579                           
  2580                           ; 8 bytes @ 0x49
  2581  00004A                     	ds	8
  2582  000052                     vfpfcnvrt@cp:
  2583                           	opt callstack 0
  2584                           
  2585                           ; 2 bytes @ 0x51
  2586  000052                     	ds	2
  2587  000054                     _vfpfcnvrt$1105:
  2588                           	opt callstack 0
  2589                           
  2590                           ; 2 bytes @ 0x53
  2591  000054                     	ds	2
  2592  000056                     vfpfcnvrt@c:
  2593                           	opt callstack 0
  2594                           
  2595                           ; 1 bytes @ 0x55
  2596  000056                     	ds	1
  2597  000057                     ?_vfprintf:
  2598                           	opt callstack 0
  2599  000057                     vfprintf@fp:
  2600                           	opt callstack 0
  2601                           
  2602                           ; 2 bytes @ 0x56
  2603  000057                     	ds	2
  2604  000059                     vfprintf@fmt:
  2605                           	opt callstack 0
  2606                           
  2607                           ; 2 bytes @ 0x58
  2608  000059                     	ds	2
  2609  00005B                     vfprintf@ap:
  2610                           	opt callstack 0
  2611                           
  2612                           ; 2 bytes @ 0x5A
  2613  00005B                     	ds	2
  2614  00005D                     vfprintf@cfmt:
  2615                           	opt callstack 0
  2616                           
  2617                           ; 2 bytes @ 0x5C
  2618  00005D                     	ds	2
  2619  00005F                     
  2620                           ; 1 bytes @ 0x5E
  2621 ;;
  2622 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2623 ;;
  2624 ;; *************** function _main *****************
  2625 ;; Defined at:
  2626 ;;		line 978 in file "main.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;		None
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;		None
  2631 ;; Return value:  Size  Location     Type
  2632 ;;                  1    wreg      void 
  2633 ;; Registers used:
  2634 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 0/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2640 ;;      Params:         0       0       0       0       0       0       0       0       0
  2641 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2642 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2643 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2644 ;;Total ram usage:        0 bytes
  2645 ;; Hardware stack levels required when called:   12
  2646 ;; This function calls:
  2647 ;;		_UART_init
  2648 ;;		_configurarAdc
  2649 ;;		_i2c_iniciar
  2650 ;;		_inicializarObjetos
  2651 ;;		_leeHorariosMemoria
  2652 ;;		_mostrarMenu
  2653 ;;		_restablecerDatosSensor
  2654 ;;		_sistemaPrincipal
  2655 ;;		_sistemaRegado
  2656 ;; This function is called by:
  2657 ;;		Startup code after reset
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661                           	psect	text0
  2662  0024A2                     __ptext0:
  2663                           	opt callstack 0
  2664  0024A2                     _main:
  2665                           	opt callstack 19
  2666  0024A2                     
  2667                           ;main.c: 980:     INTCONbits.GIE = 1;
  2668  0024A2  8EF2               	bsf	242,7,c	;volatile
  2669                           
  2670                           ;main.c: 981:     INTCONbits.PEIE = 1;
  2671  0024A4  8CF2               	bsf	242,6,c	;volatile
  2672                           
  2673                           ;main.c: 982:     INTCONbits.TMR0IE = 1;
  2674  0024A6  8AF2               	bsf	242,5,c	;volatile
  2675                           
  2676                           ;main.c: 984:     PIE1bits.RCIE = 1;
  2677  0024A8  8A9D               	bsf	157,5,c	;volatile
  2678  0024AA                     
  2679                           ;main.c: 986:     T0CON = 0b00000111;
  2680  0024AA  0E07               	movlw	7
  2681  0024AC  6ED5               	movwf	213,c	;volatile
  2682  0024AE                     
  2683                           ;main.c: 991:     restablecerDatosSensor();
  2684  0024AE  ECCD  F015         	call	_restablecerDatosSensor	;wreg free
  2685  0024B2                     
  2686                           ;main.c: 992:     i2c_iniciar();
  2687  0024B2  ECB9  F017         	call	_i2c_iniciar	;wreg free
  2688  0024B6                     
  2689                           ;main.c: 993:     configurarAdc();
  2690  0024B6  ECDD  F017         	call	_configurarAdc	;wreg free
  2691  0024BA                     
  2692                           ;main.c: 994:     UART_init(9600);
  2693  0024BA  0E80               	movlw	128
  2694  0024BC  6E1B               	movwf	UART_init@BAUD^0,c
  2695  0024BE  0E25               	movlw	37
  2696  0024C0  6E1C               	movwf	(UART_init@BAUD+1)^0,c
  2697  0024C2  0E00               	movlw	0
  2698  0024C4  6E1D               	movwf	(UART_init@BAUD+2)^0,c
  2699  0024C6  0E00               	movlw	0
  2700  0024C8  6E1E               	movwf	(UART_init@BAUD+3)^0,c
  2701  0024CA  EC90  F013         	call	_UART_init	;wreg free
  2702  0024CE                     
  2703                           ;main.c: 995:     inicializarObjetos();
  2704  0024CE  EC97  F009         	call	_inicializarObjetos	;wreg free
  2705  0024D2                     
  2706                           ;main.c: 998:     leeHorariosMemoria();
  2707  0024D2  EC43  F00C         	call	_leeHorariosMemoria	;wreg free
  2708  0024D6                     
  2709                           ;main.c: 1002:     TRISD = 0;
  2710  0024D6  0E00               	movlw	0
  2711  0024D8  6E95               	movwf	149,c	;volatile
  2712  0024DA                     
  2713                           ;main.c: 1003:     LATD = 0;
  2714  0024DA  0E00               	movlw	0
  2715  0024DC  6E8C               	movwf	140,c	;volatile
  2716  0024DE                     
  2717                           ;main.c: 1005:     TMR0 = VALOR_TIMER0;
  2718  0024DE  C1A6  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
  2719  0024E2  C1A7  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
  2720  0024E6                     
  2721                           ;main.c: 1007:     INTCONbits.TMR0IF = 1;
  2722  0024E6  84F2               	bsf	242,2,c	;volatile
  2723  0024E8                     
  2724                           ;main.c: 1010:     T0CONbits.TMR0ON = 1;
  2725  0024E8  8ED5               	bsf	213,7,c	;volatile
  2726  0024EA                     
  2727                           ;main.c: 1012:     mostrarMenu();
  2728  0024EA  ECDE  F012         	call	_mostrarMenu	;wreg free
  2729  0024EE                     
  2730                           ;main.c: 1014:     MODO_COMUNICACION = 0;
  2731  0024EE  0E00               	movlw	0
  2732  0024F0  0101               	movlb	1	; () banked
  2733  0024F2  6F7C               	movwf	_MODO_COMUNICACION& (0+255),b
  2734  0024F4                     l4610:
  2735                           
  2736                           ;main.c: 1019:         if (datoRecibido) {
  2737  0024F4  0101               	movlb	1	; () banked
  2738  0024F6  517B               	movf	_datoRecibido& (0+255),w,b
  2739  0024F8  B4D8               	btfsc	status,2,c
  2740  0024FA  EF81  F012         	goto	u3671
  2741  0024FE  EF83  F012         	goto	u3670
  2742  002502                     u3671:
  2743  002502  EF8A  F012         	goto	l4618
  2744  002506                     u3670:
  2745  002506                     
  2746                           ; BSR set to: 1
  2747                           ;main.c: 1021:             datoRecibido = 0;
  2748  002506  0E00               	movlw	0
  2749  002508  6F7B               	movwf	_datoRecibido& (0+255),b
  2750  00250A                     
  2751                           ; BSR set to: 1
  2752                           ;main.c: 1022:             byteUart -= 48;
  2753  00250A  0E30               	movlw	48
  2754  00250C  5F7E               	subwf	_byteUart& (0+255),f,b
  2755  00250E                     
  2756                           ; BSR set to: 1
  2757                           ;main.c: 1023:             sistemaPrincipal(byteUart);
  2758  00250E  517E               	movf	_byteUart& (0+255),w,b
  2759  002510  ECD8  F00F         	call	_sistemaPrincipal
  2760  002514                     l4618:
  2761                           
  2762                           ;main.c: 1027:         if (overflowTimer) {
  2763  002514  0101               	movlb	1	; () banked
  2764  002516  517A               	movf	_overflowTimer& (0+255),w,b
  2765  002518  B4D8               	btfsc	status,2,c
  2766  00251A  EF91  F012         	goto	u3681
  2767  00251E  EF93  F012         	goto	u3680
  2768  002522                     u3681:
  2769  002522  EF7A  F012         	goto	l4610
  2770  002526                     u3680:
  2771  002526                     
  2772                           ; BSR set to: 1
  2773                           ;main.c: 1029:             esperandoDatos = 0;
  2774  002526  0E00               	movlw	0
  2775  002528  6F7D               	movwf	_esperandoDatos& (0+255),b
  2776                           
  2777                           ;main.c: 1030:             overflowTimer = 0;
  2778  00252A  0E00               	movlw	0
  2779  00252C  6F7A               	movwf	_overflowTimer& (0+255),b
  2780  00252E                     
  2781                           ; BSR set to: 1
  2782                           ;main.c: 1031:             sistemaRegado();
  2783  00252E  ECE0  F008         	call	_sistemaRegado	;wreg free
  2784  002532  EF7A  F012         	goto	l4610
  2785  002536  EF07  F000         	goto	start
  2786  00253A                     __end_of_main:
  2787                           	opt callstack 0
  2788                           
  2789 ;; *************** function _sistemaRegado *****************
  2790 ;; Defined at:
  2791 ;;		line 600 in file "main.c"
  2792 ;; Parameters:    Size  Location     Type
  2793 ;;		None
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;		None
  2796 ;; Return value:  Size  Location     Type
  2797 ;;                  1    wreg      void 
  2798 ;; Registers used:
  2799 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2800 ;; Tracked objects:
  2801 ;;		On entry : 0/0
  2802 ;;		On exit  : 0/0
  2803 ;;		Unchanged: 0/0
  2804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2805 ;;      Params:         0       0       0       0       0       0       0       0       0
  2806 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2807 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2808 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2809 ;;Total ram usage:        0 bytes
  2810 ;; Hardware stack levels used:    1
  2811 ;; Hardware stack levels required when called:   10
  2812 ;; This function calls:
  2813 ;;		_dameDiaActual
  2814 ;;		_dameHoraActual
  2815 ;;		_encenderBombas
  2816 ;;		_horaRegar
  2817 ;;		_lecturaAnalogaSensores
  2818 ;;		_lecturaWifi
  2819 ;;		_mostrarMenu
  2820 ;; This function is called by:
  2821 ;;		_main
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           	psect	text1
  2826  0011C0                     __ptext1:
  2827                           	opt callstack 0
  2828  0011C0                     _sistemaRegado:
  2829                           	opt callstack 20
  2830  0011C0                     
  2831                           ;main.c: 604:     if (regando) {
  2832  0011C0  0100               	movlb	0	; () banked
  2833  0011C2  51F4               	movf	_regando& (0+255),w,b
  2834  0011C4  B4D8               	btfsc	status,2,c
  2835  0011C6  EFE7  F008         	goto	u3521
  2836  0011CA  EFE9  F008         	goto	u3520
  2837  0011CE                     u3521:
  2838  0011CE  EF19  F009         	goto	l4504
  2839  0011D2                     u3520:
  2840  0011D2                     
  2841                           ; BSR set to: 0
  2842                           ;main.c: 606:         contInterrupciones++;
  2843  0011D2  4BF1               	infsnz	_contInterrupciones& (0+255),f,b
  2844  0011D4  2BF2               	incf	(_contInterrupciones+1)& (0+255),f,b
  2845  0011D6                     
  2846                           ; BSR set to: 0
  2847                           ;main.c: 608:         if (contInterrupciones == 6) {
  2848  0011D6  0E06               	movlw	6
  2849  0011D8  19F1               	xorwf	_contInterrupciones& (0+255),w,b
  2850  0011DA  11F2               	iorwf	(_contInterrupciones+1)& (0+255),w,b
  2851  0011DC  A4D8               	btfss	status,2,c
  2852  0011DE  EFF3  F008         	goto	u3531
  2853  0011E2  EFF5  F008         	goto	u3530
  2854  0011E6                     u3531:
  2855  0011E6  EF96  F009         	goto	l375
  2856  0011EA                     u3530:
  2857  0011EA                     
  2858                           ; BSR set to: 0
  2859                           ;main.c: 609:             contInterrupciones = 0;
  2860  0011EA  0E00               	movlw	0
  2861  0011EC  6FF2               	movwf	(_contInterrupciones+1)& (0+255),b
  2862  0011EE  0E00               	movlw	0
  2863  0011F0  6FF1               	movwf	_contInterrupciones& (0+255),b
  2864  0011F2                     
  2865                           ; BSR set to: 0
  2866                           ;main.c: 610:             minutosTranscurridos++;
  2867  0011F2  2BF5               	incf	_minutosTranscurridos& (0+255),f,b
  2868  0011F4                     
  2869                           ; BSR set to: 0
  2870                           ;main.c: 613:             if (minutosTranscurridos >= minutosRegar) {
  2871  0011F4  51F6               	movf	_minutosRegar& (0+255),w,b
  2872  0011F6  5DF5               	subwf	_minutosTranscurridos& (0+255),w,b
  2873  0011F8  A0D8               	btfss	status,0,c
  2874  0011FA  EF01  F009         	goto	u3541
  2875  0011FE  EF03  F009         	goto	u3540
  2876  001202                     u3541:
  2877  001202  EF96  F009         	goto	l375
  2878  001206                     u3540:
  2879  001206                     
  2880                           ; BSR set to: 0
  2881                           ;main.c: 615:                 LATD = 0;
  2882  001206  0E00               	movlw	0
  2883  001208  6E8C               	movwf	140,c	;volatile
  2884                           
  2885                           ;main.c: 616:                 minutosTranscurridos = 0;
  2886  00120A  0E00               	movlw	0
  2887  00120C  6FF5               	movwf	_minutosTranscurridos& (0+255),b
  2888                           
  2889                           ;main.c: 617:                 regando = 0;
  2890  00120E  0E00               	movlw	0
  2891  001210  6FF4               	movwf	_regando& (0+255),b
  2892  001212                     
  2893                           ; BSR set to: 0
  2894                           ;main.c: 618:                 horarios[hora].regado = 1;
  2895  001212  51FC               	movf	_hora& (0+255),w,b
  2896  001214  0D0C               	mullw	12
  2897  001216  0EB4               	movlw	low (_horarios+10)
  2898  001218  24F3               	addwf	243,w,c
  2899  00121A  6ED9               	movwf	fsr2l,c
  2900  00121C  0E01               	movlw	high (_horarios+10)
  2901  00121E  20F4               	addwfc	prodh,w,c
  2902  001220  6EDA               	movwf	fsr2h,c
  2903  001222  0E01               	movlw	1
  2904  001224  6EDF               	movwf	indf2,c
  2905  001226                     
  2906                           ; BSR set to: 0
  2907                           ;main.c: 619:                 tempHora = hora;
  2908  001226  C0FC  F0F8         	movff	_hora,_tempHora
  2909  00122A                     
  2910                           ; BSR set to: 0
  2911                           ;main.c: 620:                 flagRegado = 0;
  2912  00122A  0E00               	movlw	0
  2913  00122C  6FF7               	movwf	_flagRegado& (0+255),b
  2914  00122E  EF96  F009         	goto	l375
  2915  001232                     l4504:
  2916                           
  2917                           ; BSR set to: 0
  2918                           ;main.c: 626:         dameHoraActual();
  2919  001232  EC21  F017         	call	_dameHoraActual	;wreg free
  2920                           
  2921                           ;main.c: 627:         dameDiaActual();
  2922  001236  ECC4  F017         	call	_dameDiaActual	;wreg free
  2923  00123A                     
  2924                           ;main.c: 629:         if (hora != tempHora && !flagRegado) {
  2925  00123A  0100               	movlb	0	; () banked
  2926  00123C  51F8               	movf	_tempHora& (0+255),w,b
  2927  00123E  19FC               	xorwf	_hora& (0+255),w,b
  2928  001240  B4D8               	btfsc	status,2,c
  2929  001242  EF25  F009         	goto	u3551
  2930  001246  EF27  F009         	goto	u3550
  2931  00124A                     u3551:
  2932  00124A  EF3B  F009         	goto	l4514
  2933  00124E                     u3550:
  2934  00124E                     
  2935                           ; BSR set to: 0
  2936  00124E  51F7               	movf	_flagRegado& (0+255),w,b
  2937  001250  A4D8               	btfss	status,2,c
  2938  001252  EF2D  F009         	goto	u3561
  2939  001256  EF2F  F009         	goto	u3560
  2940  00125A                     u3561:
  2941  00125A  EF3B  F009         	goto	l4514
  2942  00125E                     u3560:
  2943  00125E                     
  2944                           ; BSR set to: 0
  2945                           ;main.c: 630:             horarios[tempHora].regado = 0;
  2946  00125E  51F8               	movf	_tempHora& (0+255),w,b
  2947  001260  0D0C               	mullw	12
  2948  001262  0EB4               	movlw	low (_horarios+10)
  2949  001264  24F3               	addwf	243,w,c
  2950  001266  6ED9               	movwf	fsr2l,c
  2951  001268  0E01               	movlw	high (_horarios+10)
  2952  00126A  20F4               	addwfc	prodh,w,c
  2953  00126C  6EDA               	movwf	fsr2h,c
  2954  00126E  0E00               	movlw	0
  2955  001270  6EDF               	movwf	indf2,c
  2956  001272                     
  2957                           ; BSR set to: 0
  2958                           ;main.c: 631:             flagRegado = 1;
  2959  001272  0E01               	movlw	1
  2960  001274  6FF7               	movwf	_flagRegado& (0+255),b
  2961  001276                     l4514:
  2962                           
  2963                           ; BSR set to: 0
  2964                           ;main.c: 634:         if ((!MODO_COMUNICACION && horaRegar()) || (MODO_COMUNICACION
  2965  001276  0101               	movlb	1	; () banked
  2966  001278  517C               	movf	_MODO_COMUNICACION& (0+255),w,b
  2967  00127A  A4D8               	btfss	status,2,c
  2968  00127C  EF42  F009         	goto	u3571
  2969  001280  EF44  F009         	goto	u3570
  2970  001284                     u3571:
  2971  001284  EF4F  F009         	goto	l4518
  2972  001288                     u3570:
  2973  001288                     
  2974                           ; BSR set to: 1
  2975  001288  EC9D  F012         	call	_horaRegar	;wreg free
  2976  00128C  5001               	movf	?_horaRegar^0,w,c
  2977  00128E  1002               	iorwf	(?_horaRegar+1)^0,w,c
  2978  001290  A4D8               	btfss	status,2,c
  2979  001292  EF4D  F009         	goto	u3581
  2980  001296  EF4F  F009         	goto	u3580
  2981  00129A                     u3581:
  2982  00129A  EF63  F009         	goto	l4522
  2983  00129E                     u3580:
  2984  00129E                     l4518:
  2985  00129E  0101               	movlb	1	; () banked
  2986  0012A0  517C               	movf	_MODO_COMUNICACION& (0+255),w,b
  2987  0012A2  B4D8               	btfsc	status,2,c
  2988  0012A4  EF56  F009         	goto	u3591
  2989  0012A8  EF58  F009         	goto	u3590
  2990  0012AC                     u3591:
  2991  0012AC  EF96  F009         	goto	l375
  2992  0012B0                     u3590:
  2993  0012B0                     
  2994                           ; BSR set to: 1
  2995  0012B0  EC9D  F012         	call	_horaRegar	;wreg free
  2996  0012B4  5001               	movf	?_horaRegar^0,w,c
  2997  0012B6  1002               	iorwf	(?_horaRegar+1)^0,w,c
  2998  0012B8  B4D8               	btfsc	status,2,c
  2999  0012BA  EF61  F009         	goto	u3601
  3000  0012BE  EF63  F009         	goto	u3600
  3001  0012C2                     u3601:
  3002  0012C2  EF96  F009         	goto	l375
  3003  0012C6                     u3600:
  3004  0012C6                     l4522:
  3005                           
  3006                           ;main.c: 635:                 && horaRegar())) {;main.c: 639:             if (MODO_COMUN
      +                          ICACION) {
  3007  0012C6  0101               	movlb	1	; () banked
  3008  0012C8  517C               	movf	_MODO_COMUNICACION& (0+255),w,b
  3009  0012CA  B4D8               	btfsc	status,2,c
  3010  0012CC  EF6A  F009         	goto	u3611
  3011  0012D0  EF6C  F009         	goto	u3610
  3012  0012D4                     u3611:
  3013  0012D4  EF87  F009         	goto	l4534
  3014  0012D8                     u3610:
  3015  0012D8                     
  3016                           ; BSR set to: 1
  3017                           ;main.c: 640:                 lecturaWifi();
  3018  0012D8  EC84  F00E         	call	_lecturaWifi	;wreg free
  3019  0012DC                     
  3020                           ;main.c: 641:                 if (peticionLecturaSensores) {
  3021  0012DC  0100               	movlb	0	; () banked
  3022  0012DE  51F3               	movf	_peticionLecturaSensores& (0+255),w,b
  3023  0012E0  B4D8               	btfsc	status,2,c
  3024  0012E2  EF75  F009         	goto	u3621
  3025  0012E6  EF77  F009         	goto	u3620
  3026  0012EA                     u3621:
  3027  0012EA  EF83  F009         	goto	l4532
  3028  0012EE                     u3620:
  3029  0012EE                     
  3030                           ; BSR set to: 0
  3031                           ;main.c: 642:                     minutosRegar = horarios[hora].tiempoRegar;
  3032  0012EE  51FC               	movf	_hora& (0+255),w,b
  3033  0012F0  0D0C               	mullw	12
  3034  0012F2  0EB5               	movlw	low (_horarios+11)
  3035  0012F4  24F3               	addwf	243,w,c
  3036  0012F6  6ED9               	movwf	fsr2l,c
  3037  0012F8  0E01               	movlw	high (_horarios+11)
  3038  0012FA  20F4               	addwfc	prodh,w,c
  3039  0012FC  6EDA               	movwf	fsr2h,c
  3040  0012FE  50DF               	movf	indf2,w,c
  3041  001300  6FF6               	movwf	_minutosRegar& (0+255),b
  3042  001302                     
  3043                           ; BSR set to: 0
  3044                           ;main.c: 643:                     encenderBombas();
  3045  001302  EC49  F003         	call	_encenderBombas	;wreg free
  3046  001306                     l4532:
  3047                           
  3048                           ;main.c: 645:                 mostrarMenu();
  3049  001306  ECDE  F012         	call	_mostrarMenu	;wreg free
  3050                           
  3051                           ;main.c: 646:             } else {
  3052  00130A  EF96  F009         	goto	l375
  3053  00130E                     l4534:
  3054                           
  3055                           ; BSR set to: 1
  3056                           ;main.c: 647:                 lecturaAnalogaSensores();
  3057  00130E  EC59  F011         	call	_lecturaAnalogaSensores	;wreg free
  3058  001312                     
  3059                           ;main.c: 648:                 minutosRegar = horarios[hora].tiempoRegar;
  3060  001312  0100               	movlb	0	; () banked
  3061  001314  51FC               	movf	_hora& (0+255),w,b
  3062  001316  0D0C               	mullw	12
  3063  001318  0EB5               	movlw	low (_horarios+11)
  3064  00131A  24F3               	addwf	243,w,c
  3065  00131C  6ED9               	movwf	fsr2l,c
  3066  00131E  0E01               	movlw	high (_horarios+11)
  3067  001320  20F4               	addwfc	prodh,w,c
  3068  001322  6EDA               	movwf	fsr2h,c
  3069  001324  50DF               	movf	indf2,w,c
  3070  001326  6FF6               	movwf	_minutosRegar& (0+255),b
  3071  001328                     
  3072                           ; BSR set to: 0
  3073                           ;main.c: 649:                 encenderBombas();
  3074  001328  EC49  F003         	call	_encenderBombas	;wreg free
  3075  00132C                     l375:
  3076  00132C  0012               	return		;funcret
  3077  00132E                     __end_of_sistemaRegado:
  3078                           	opt callstack 0
  3079                           
  3080 ;; *************** function _horaRegar *****************
  3081 ;; Defined at:
  3082 ;;		line 152 in file "main.c"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;		None
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;		None
  3087 ;; Return value:  Size  Location     Type
  3088 ;;                  2    0[COMRAM] int 
  3089 ;; Registers used:
  3090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3091 ;; Tracked objects:
  3092 ;;		On entry : 0/0
  3093 ;;		On exit  : 0/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3096 ;;      Params:         2       0       0       0       0       0       0       0       0
  3097 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3098 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3099 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3100 ;;Total ram usage:        5 bytes
  3101 ;; Hardware stack levels used:    1
  3102 ;; Hardware stack levels required when called:    1
  3103 ;; This function calls:
  3104 ;;		Nothing
  3105 ;; This function is called by:
  3106 ;;		_sistemaRegado
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           	psect	text2
  3111  00253A                     __ptext2:
  3112                           	opt callstack 0
  3113  00253A                     _horaRegar:
  3114                           	opt callstack 28
  3115  00253A                     
  3116                           ;main.c: 154:     return (horarios[hora].regar) && (!horarios[hora].regado) &&
  3117  00253A  0E00               	movlw	0
  3118  00253C  6E05               	movwf	_horaRegar$803^0,c
  3119  00253E  0100               	movlb	0	; () banked
  3120  002540  51FC               	movf	_hora& (0+255),w,b
  3121  002542  0D0C               	mullw	12
  3122  002544  0EB3               	movlw	low (_horarios+9)
  3123  002546  24F3               	addwf	243,w,c
  3124  002548  6ED9               	movwf	fsr2l,c
  3125  00254A  0E01               	movlw	high (_horarios+9)
  3126  00254C  20F4               	addwfc	prodh,w,c
  3127  00254E  6EDA               	movwf	fsr2h,c
  3128  002550  50DF               	movf	indf2,w,c
  3129  002552  B4D8               	btfsc	status,2,c
  3130  002554  EFAE  F012         	goto	u3151
  3131  002558  EFB0  F012         	goto	u3150
  3132  00255C                     u3151:
  3133  00255C  EFDA  F012         	goto	l4040
  3134  002560                     u3150:
  3135  002560                     
  3136                           ; BSR set to: 0
  3137  002560  51FC               	movf	_hora& (0+255),w,b
  3138  002562  0D0C               	mullw	12
  3139  002564  0EB4               	movlw	low (_horarios+10)
  3140  002566  24F3               	addwf	243,w,c
  3141  002568  6ED9               	movwf	fsr2l,c
  3142  00256A  0E01               	movlw	high (_horarios+10)
  3143  00256C  20F4               	addwfc	prodh,w,c
  3144  00256E  6EDA               	movwf	fsr2h,c
  3145  002570  50DF               	movf	indf2,w,c
  3146  002572  A4D8               	btfss	status,2,c
  3147  002574  EFBE  F012         	goto	u3161
  3148  002578  EFC0  F012         	goto	u3160
  3149  00257C                     u3161:
  3150  00257C  EFDA  F012         	goto	l4040
  3151  002580                     u3160:
  3152  002580                     
  3153                           ; BSR set to: 0
  3154  002580  51FC               	movf	_hora& (0+255),w,b
  3155  002582  0D0C               	mullw	12
  3156  002584  0EAA               	movlw	low _horarios
  3157  002586  6E03               	movwf	??_horaRegar^0,c
  3158  002588  0E01               	movlw	high _horarios
  3159  00258A  6E04               	movwf	(??_horaRegar+1)^0,c
  3160  00258C  50F3               	movf	243,w,c
  3161  00258E  2603               	addwf	??_horaRegar^0,f,c
  3162  002590  50F4               	movf	244,w,c
  3163  002592  2204               	addwfc	(??_horaRegar+1)^0,f,c
  3164  002594  51F9               	movf	_diaActual& (0+255),w,b
  3165  002596  2403               	addwf	??_horaRegar^0,w,c
  3166  002598  6ED9               	movwf	fsr2l,c
  3167  00259A  0E00               	movlw	0
  3168  00259C  2004               	addwfc	(??_horaRegar+1)^0,w,c
  3169  00259E  6EDA               	movwf	fsr2h,c
  3170  0025A0  50DF               	movf	indf2,w,c
  3171  0025A2  B4D8               	btfsc	status,2,c
  3172  0025A4  EFD6  F012         	goto	u3171
  3173  0025A8  EFD8  F012         	goto	u3170
  3174  0025AC                     u3171:
  3175  0025AC  EFDA  F012         	goto	l4040
  3176  0025B0                     u3170:
  3177  0025B0                     
  3178                           ; BSR set to: 0
  3179  0025B0  0E01               	movlw	1
  3180  0025B2  6E05               	movwf	_horaRegar$803^0,c
  3181  0025B4                     l4040:
  3182                           
  3183                           ; BSR set to: 0
  3184  0025B4  C005  F001         	movff	_horaRegar$803,?_horaRegar
  3185  0025B8  6A02               	clrf	(?_horaRegar+1)^0,c
  3186  0025BA                     
  3187                           ; BSR set to: 0
  3188  0025BA  0012               	return		;funcret
  3189  0025BC                     __end_of_horaRegar:
  3190                           	opt callstack 0
  3191                           
  3192 ;; *************** function _encenderBombas *****************
  3193 ;; Defined at:
  3194 ;;		line 292 in file "main.c"
  3195 ;; Parameters:    Size  Location     Type
  3196 ;;		None
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;  i               2   22[COMRAM] int 
  3199 ;;  flagSeco        1   21[COMRAM] unsigned char 
  3200 ;; Return value:  Size  Location     Type
  3201 ;;                  1    wreg      void 
  3202 ;; Registers used:
  3203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3204 ;; Tracked objects:
  3205 ;;		On entry : 0/0
  3206 ;;		On exit  : 0/0
  3207 ;;		Unchanged: 0/0
  3208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3209 ;;      Params:         0       0       0       0       0       0       0       0       0
  3210 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3211 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3212 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3213 ;;Total ram usage:        5 bytes
  3214 ;; Hardware stack levels used:    1
  3215 ;; Hardware stack levels required when called:    5
  3216 ;; This function calls:
  3217 ;;		_estaSeco
  3218 ;; This function is called by:
  3219 ;;		_sistemaRegado
  3220 ;; This function uses a non-reentrant model
  3221 ;;
  3222                           
  3223                           	psect	text3
  3224  000692                     __ptext3:
  3225                           	opt callstack 0
  3226  000692                     _encenderBombas:
  3227                           	opt callstack 24
  3228  000692                     
  3229                           ;main.c: 294:     char flagSeco = 0;
  3230  000692  0E00               	movlw	0
  3231  000694  6E16               	movwf	encenderBombas@flagSeco^0,c
  3232                           
  3233                           ;main.c: 296:     for (int i = 0; i < 3; i++) {
  3234  000696  0E00               	movlw	0
  3235  000698  6E18               	movwf	(encenderBombas@i+1)^0,c
  3236  00069A  0E00               	movlw	0
  3237  00069C  6E17               	movwf	encenderBombas@i^0,c
  3238  00069E  EF2B  F004         	goto	l4118
  3239  0006A2                     l4068:
  3240                           
  3241                           ;main.c: 301:                 if (estaSeco(sensores[i])) {
  3242  0006A2  90D8               	bcf	status,0,c
  3243  0006A4  3417               	rlcf	encenderBombas@i^0,w,c
  3244  0006A6  6ED9               	movwf	fsr2l,c
  3245  0006A8  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  3246  0006AA  6EDA               	movwf	fsr2h,c
  3247  0006AC  0E68               	movlw	low _sensores
  3248  0006AE  26D9               	addwf	fsr2l,f,c
  3249  0006B0  0E01               	movlw	high _sensores
  3250  0006B2  22DA               	addwfc	fsr2h,f,c
  3251  0006B4  CFDE F010          	movff	postinc2,estaSeco@s
  3252  0006B8  CFDD F011          	movff	postdec2,estaSeco@s+1
  3253  0006BC  EC18  F016         	call	_estaSeco	;wreg free
  3254  0006C0  5010               	movf	?_estaSeco^0,w,c
  3255  0006C2  1011               	iorwf	(?_estaSeco+1)^0,w,c
  3256  0006C4  B4D8               	btfsc	status,2,c
  3257  0006C6  EF67  F003         	goto	u3191
  3258  0006CA  EF69  F003         	goto	u3190
  3259  0006CE                     u3191:
  3260  0006CE  EF59  F004         	goto	l4120
  3261  0006D2                     u3190:
  3262  0006D2                     
  3263                           ;main.c: 302:                     LATDbits.LATD0 = 1;
  3264  0006D2  808C               	bsf	140,0,c	;volatile
  3265  0006D4                     l4072:
  3266                           
  3267                           ;main.c: 303:                     flagSeco = 1;
  3268  0006D4  0E01               	movlw	1
  3269  0006D6  6E16               	movwf	encenderBombas@flagSeco^0,c
  3270  0006D8  EF59  F004         	goto	l4120
  3271  0006DC                     l4074:
  3272                           
  3273                           ;main.c: 308:                 if (estaSeco(sensores[i])) {
  3274  0006DC  90D8               	bcf	status,0,c
  3275  0006DE  3417               	rlcf	encenderBombas@i^0,w,c
  3276  0006E0  6ED9               	movwf	fsr2l,c
  3277  0006E2  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  3278  0006E4  6EDA               	movwf	fsr2h,c
  3279  0006E6  0E68               	movlw	low _sensores
  3280  0006E8  26D9               	addwf	fsr2l,f,c
  3281  0006EA  0E01               	movlw	high _sensores
  3282  0006EC  22DA               	addwfc	fsr2h,f,c
  3283  0006EE  CFDE F010          	movff	postinc2,estaSeco@s
  3284  0006F2  CFDD F011          	movff	postdec2,estaSeco@s+1
  3285  0006F6  EC18  F016         	call	_estaSeco	;wreg free
  3286  0006FA  5010               	movf	?_estaSeco^0,w,c
  3287  0006FC  1011               	iorwf	(?_estaSeco+1)^0,w,c
  3288  0006FE  B4D8               	btfsc	status,2,c
  3289  000700  EF84  F003         	goto	u3201
  3290  000704  EF86  F003         	goto	u3200
  3291  000708                     u3201:
  3292  000708  EF59  F004         	goto	l4120
  3293  00070C                     u3200:
  3294  00070C                     
  3295                           ;main.c: 309:                     LATDbits.LATD1 = 1;
  3296  00070C  828C               	bsf	140,1,c	;volatile
  3297  00070E  EF6A  F003         	goto	l4072
  3298  000712                     l4080:
  3299                           
  3300                           ;main.c: 315:                 if (estaSeco(sensores[i])) {
  3301  000712  90D8               	bcf	status,0,c
  3302  000714  3417               	rlcf	encenderBombas@i^0,w,c
  3303  000716  6ED9               	movwf	fsr2l,c
  3304  000718  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  3305  00071A  6EDA               	movwf	fsr2h,c
  3306  00071C  0E68               	movlw	low _sensores
  3307  00071E  26D9               	addwf	fsr2l,f,c
  3308  000720  0E01               	movlw	high _sensores
  3309  000722  22DA               	addwfc	fsr2h,f,c
  3310  000724  CFDE F010          	movff	postinc2,estaSeco@s
  3311  000728  CFDD F011          	movff	postdec2,estaSeco@s+1
  3312  00072C  EC18  F016         	call	_estaSeco	;wreg free
  3313  000730  5010               	movf	?_estaSeco^0,w,c
  3314  000732  1011               	iorwf	(?_estaSeco+1)^0,w,c
  3315  000734  B4D8               	btfsc	status,2,c
  3316  000736  EF9F  F003         	goto	u3211
  3317  00073A  EFA1  F003         	goto	u3210
  3318  00073E                     u3211:
  3319  00073E  EF59  F004         	goto	l4120
  3320  000742                     u3210:
  3321  000742                     
  3322                           ;main.c: 316:                     LATDbits.LATD2 = 1;
  3323  000742  848C               	bsf	140,2,c	;volatile
  3324  000744  EF6A  F003         	goto	l4072
  3325  000748                     l4086:
  3326                           
  3327                           ;main.c: 322:                 if (estaSeco(sensores[i])) {
  3328  000748  90D8               	bcf	status,0,c
  3329  00074A  3417               	rlcf	encenderBombas@i^0,w,c
  3330  00074C  6ED9               	movwf	fsr2l,c
  3331  00074E  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  3332  000750  6EDA               	movwf	fsr2h,c
  3333  000752  0E68               	movlw	low _sensores
  3334  000754  26D9               	addwf	fsr2l,f,c
  3335  000756  0E01               	movlw	high _sensores
  3336  000758  22DA               	addwfc	fsr2h,f,c
  3337  00075A  CFDE F010          	movff	postinc2,estaSeco@s
  3338  00075E  CFDD F011          	movff	postdec2,estaSeco@s+1
  3339  000762  EC18  F016         	call	_estaSeco	;wreg free
  3340  000766  5010               	movf	?_estaSeco^0,w,c
  3341  000768  1011               	iorwf	(?_estaSeco+1)^0,w,c
  3342  00076A  B4D8               	btfsc	status,2,c
  3343  00076C  EFBA  F003         	goto	u3221
  3344  000770  EFBC  F003         	goto	u3220
  3345  000774                     u3221:
  3346  000774  EF59  F004         	goto	l4120
  3347  000778                     u3220:
  3348  000778                     
  3349                           ;main.c: 323:                     LATDbits.LATD3 = 1;
  3350  000778  868C               	bsf	140,3,c	;volatile
  3351  00077A  EF6A  F003         	goto	l4072
  3352  00077E                     l4092:
  3353                           
  3354                           ;main.c: 329:                 if (estaSeco(sensores[i])) {
  3355  00077E  90D8               	bcf	status,0,c
  3356  000780  3417               	rlcf	encenderBombas@i^0,w,c
  3357  000782  6ED9               	movwf	fsr2l,c
  3358  000784  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  3359  000786  6EDA               	movwf	fsr2h,c
  3360  000788  0E68               	movlw	low _sensores
  3361  00078A  26D9               	addwf	fsr2l,f,c
  3362  00078C  0E01               	movlw	high _sensores
  3363  00078E  22DA               	addwfc	fsr2h,f,c
  3364  000790  CFDE F010          	movff	postinc2,estaSeco@s
  3365  000794  CFDD F011          	movff	postdec2,estaSeco@s+1
  3366  000798  EC18  F016         	call	_estaSeco	;wreg free
  3367  00079C  5010               	movf	?_estaSeco^0,w,c
  3368  00079E  1011               	iorwf	(?_estaSeco+1)^0,w,c
  3369  0007A0  B4D8               	btfsc	status,2,c
  3370  0007A2  EFD5  F003         	goto	u3231
  3371  0007A6  EFD7  F003         	goto	u3230
  3372  0007AA                     u3231:
  3373  0007AA  EF59  F004         	goto	l4120
  3374  0007AE                     u3230:
  3375  0007AE                     
  3376                           ;main.c: 330:                     LATDbits.LATD4 = 1;
  3377  0007AE  888C               	bsf	140,4,c	;volatile
  3378  0007B0  EF6A  F003         	goto	l4072
  3379  0007B4                     l4098:
  3380                           
  3381                           ;main.c: 336:                 if (estaSeco(sensores[i])) {
  3382  0007B4  90D8               	bcf	status,0,c
  3383  0007B6  3417               	rlcf	encenderBombas@i^0,w,c
  3384  0007B8  6ED9               	movwf	fsr2l,c
  3385  0007BA  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  3386  0007BC  6EDA               	movwf	fsr2h,c
  3387  0007BE  0E68               	movlw	low _sensores
  3388  0007C0  26D9               	addwf	fsr2l,f,c
  3389  0007C2  0E01               	movlw	high _sensores
  3390  0007C4  22DA               	addwfc	fsr2h,f,c
  3391  0007C6  CFDE F010          	movff	postinc2,estaSeco@s
  3392  0007CA  CFDD F011          	movff	postdec2,estaSeco@s+1
  3393  0007CE  EC18  F016         	call	_estaSeco	;wreg free
  3394  0007D2  5010               	movf	?_estaSeco^0,w,c
  3395  0007D4  1011               	iorwf	(?_estaSeco+1)^0,w,c
  3396  0007D6  B4D8               	btfsc	status,2,c
  3397  0007D8  EFF0  F003         	goto	u3241
  3398  0007DC  EFF2  F003         	goto	u3240
  3399  0007E0                     u3241:
  3400  0007E0  EF59  F004         	goto	l4120
  3401  0007E4                     u3240:
  3402  0007E4                     
  3403                           ;main.c: 337:                     LATDbits.LATD5 = 1;
  3404  0007E4  8A8C               	bsf	140,5,c	;volatile
  3405  0007E6  EF6A  F003         	goto	l4072
  3406  0007EA                     l4104:
  3407                           
  3408                           ;main.c: 343:                 if (estaSeco(sensores[i])) {
  3409  0007EA  90D8               	bcf	status,0,c
  3410  0007EC  3417               	rlcf	encenderBombas@i^0,w,c
  3411  0007EE  6ED9               	movwf	fsr2l,c
  3412  0007F0  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  3413  0007F2  6EDA               	movwf	fsr2h,c
  3414  0007F4  0E68               	movlw	low _sensores
  3415  0007F6  26D9               	addwf	fsr2l,f,c
  3416  0007F8  0E01               	movlw	high _sensores
  3417  0007FA  22DA               	addwfc	fsr2h,f,c
  3418  0007FC  CFDE F010          	movff	postinc2,estaSeco@s
  3419  000800  CFDD F011          	movff	postdec2,estaSeco@s+1
  3420  000804  EC18  F016         	call	_estaSeco	;wreg free
  3421  000808  5010               	movf	?_estaSeco^0,w,c
  3422  00080A  1011               	iorwf	(?_estaSeco+1)^0,w,c
  3423  00080C  B4D8               	btfsc	status,2,c
  3424  00080E  EF0B  F004         	goto	u3251
  3425  000812  EF0D  F004         	goto	u3250
  3426  000816                     u3251:
  3427  000816  EF59  F004         	goto	l4120
  3428  00081A                     u3250:
  3429  00081A                     
  3430                           ;main.c: 344:                     LATDbits.LATD6 = 1;
  3431  00081A  8C8C               	bsf	140,6,c	;volatile
  3432  00081C  EF6A  F003         	goto	l4072
  3433  000820                     l4110:
  3434                           
  3435                           ;main.c: 350:                 if (estaSeco(sensores[i])) {
  3436  000820  90D8               	bcf	status,0,c
  3437  000822  3417               	rlcf	encenderBombas@i^0,w,c
  3438  000824  6ED9               	movwf	fsr2l,c
  3439  000826  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  3440  000828  6EDA               	movwf	fsr2h,c
  3441  00082A  0E68               	movlw	low _sensores
  3442  00082C  26D9               	addwf	fsr2l,f,c
  3443  00082E  0E01               	movlw	high _sensores
  3444  000830  22DA               	addwfc	fsr2h,f,c
  3445  000832  CFDE F010          	movff	postinc2,estaSeco@s
  3446  000836  CFDD F011          	movff	postdec2,estaSeco@s+1
  3447  00083A  EC18  F016         	call	_estaSeco	;wreg free
  3448  00083E  5010               	movf	?_estaSeco^0,w,c
  3449  000840  1011               	iorwf	(?_estaSeco+1)^0,w,c
  3450  000842  B4D8               	btfsc	status,2,c
  3451  000844  EF26  F004         	goto	u3261
  3452  000848  EF28  F004         	goto	u3260
  3453  00084C                     u3261:
  3454  00084C  EF59  F004         	goto	l4120
  3455  000850                     u3260:
  3456  000850                     
  3457                           ;main.c: 351:                     LATDbits.LATD7 = 1;
  3458  000850  8E8C               	bsf	140,7,c	;volatile
  3459  000852  EF6A  F003         	goto	l4072
  3460  000856                     l4118:
  3461  000856  C017  F014         	movff	encenderBombas@i,??_encenderBombas
  3462  00085A  C018  F015         	movff	encenderBombas@i+1,??_encenderBombas+1
  3463                           
  3464                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3465                           ; Switch size 1, requested type "simple"
  3466                           ; Number of cases is 1, Range of values is 0 to 0
  3467                           ; switch strategies available:
  3468                           ; Name         Instructions Cycles
  3469                           ; simple_byte            4     3 (average)
  3470                           ;	Chosen strategy is simple_byte
  3471  00085E  5015               	movf	(??_encenderBombas+1)^0,w,c
  3472  000860  0A00               	xorlw	0	; case 0
  3473  000862  B4D8               	btfsc	status,2,c
  3474  000864  EF36  F004         	goto	l4784
  3475  000868  EF59  F004         	goto	l4120
  3476  00086C                     l4784:
  3477                           
  3478                           ; Switch size 1, requested type "simple"
  3479                           ; Number of cases is 8, Range of values is 0 to 7
  3480                           ; switch strategies available:
  3481                           ; Name         Instructions Cycles
  3482                           ; simple_byte           25    13 (average)
  3483                           ;	Chosen strategy is simple_byte
  3484  00086C  5014               	movf	??_encenderBombas^0,w,c
  3485  00086E  0A00               	xorlw	0	; case 0
  3486  000870  B4D8               	btfsc	status,2,c
  3487  000872  EF51  F003         	goto	l4068
  3488  000876  0A01               	xorlw	1	; case 1
  3489  000878  B4D8               	btfsc	status,2,c
  3490  00087A  EF6E  F003         	goto	l4074
  3491  00087E  0A03               	xorlw	3	; case 2
  3492  000880  B4D8               	btfsc	status,2,c
  3493  000882  EF89  F003         	goto	l4080
  3494  000886  0A01               	xorlw	1	; case 3
  3495  000888  B4D8               	btfsc	status,2,c
  3496  00088A  EFA4  F003         	goto	l4086
  3497  00088E  0A07               	xorlw	7	; case 4
  3498  000890  B4D8               	btfsc	status,2,c
  3499  000892  EFBF  F003         	goto	l4092
  3500  000896  0A01               	xorlw	1	; case 5
  3501  000898  B4D8               	btfsc	status,2,c
  3502  00089A  EFDA  F003         	goto	l4098
  3503  00089E  0A03               	xorlw	3	; case 6
  3504  0008A0  B4D8               	btfsc	status,2,c
  3505  0008A2  EFF5  F003         	goto	l4104
  3506  0008A6  0A01               	xorlw	1	; case 7
  3507  0008A8  B4D8               	btfsc	status,2,c
  3508  0008AA  EF10  F004         	goto	l4110
  3509  0008AE  EF59  F004         	goto	l4120
  3510  0008B2                     l4120:
  3511                           
  3512                           ;main.c: 357:     }
  3513  0008B2  4A17               	infsnz	encenderBombas@i^0,f,c
  3514  0008B4  2A18               	incf	(encenderBombas@i+1)^0,f,c
  3515  0008B6  BE18               	btfsc	(encenderBombas@i+1)^0,7,c
  3516  0008B8  EF67  F004         	goto	u3271
  3517  0008BC  5018               	movf	(encenderBombas@i+1)^0,w,c
  3518  0008BE  E109               	bnz	u3270
  3519  0008C0  0E03               	movlw	3
  3520  0008C2  5C17               	subwf	encenderBombas@i^0,w,c
  3521  0008C4  A0D8               	btfss	status,0,c
  3522  0008C6  EF67  F004         	goto	u3271
  3523  0008CA  EF69  F004         	goto	u3270
  3524  0008CE                     u3271:
  3525  0008CE  EF2B  F004         	goto	l4118
  3526  0008D2                     u3270:
  3527  0008D2                     
  3528                           ;main.c: 359:     if (flagSeco) {
  3529  0008D2  5016               	movf	encenderBombas@flagSeco^0,w,c
  3530  0008D4  B4D8               	btfsc	status,2,c
  3531  0008D6  EF6F  F004         	goto	u3281
  3532  0008DA  EF71  F004         	goto	u3280
  3533  0008DE                     u3281:
  3534  0008DE  EF7E  F004         	goto	l298
  3535  0008E2                     u3280:
  3536  0008E2                     
  3537                           ;main.c: 360:         regando = 1;
  3538  0008E2  0E01               	movlw	1
  3539  0008E4  0100               	movlb	0	; () banked
  3540  0008E6  6FF4               	movwf	_regando& (0+255),b
  3541  0008E8                     
  3542                           ; BSR set to: 0
  3543                           ;main.c: 361:         horarios[hora].regado = 0;
  3544  0008E8  51FC               	movf	_hora& (0+255),w,b
  3545  0008EA  0D0C               	mullw	12
  3546  0008EC  0EB4               	movlw	low (_horarios+10)
  3547  0008EE  24F3               	addwf	243,w,c
  3548  0008F0  6ED9               	movwf	fsr2l,c
  3549  0008F2  0E01               	movlw	high (_horarios+10)
  3550  0008F4  20F4               	addwfc	prodh,w,c
  3551  0008F6  6EDA               	movwf	fsr2h,c
  3552  0008F8  0E00               	movlw	0
  3553  0008FA  6EDF               	movwf	indf2,c
  3554  0008FC                     l298:
  3555  0008FC  0012               	return		;funcret
  3556  0008FE                     __end_of_encenderBombas:
  3557                           	opt callstack 0
  3558                           
  3559 ;; *************** function _estaSeco *****************
  3560 ;; Defined at:
  3561 ;;		line 143 in file "main.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;  s               2   15[COMRAM] struct .
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;  temperatura     1   18[COMRAM] unsigned char 
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  2   15[COMRAM] int 
  3568 ;; Registers used:
  3569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3570 ;; Tracked objects:
  3571 ;;		On entry : 0/0
  3572 ;;		On exit  : 0/0
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3575 ;;      Params:         2       0       0       0       0       0       0       0       0
  3576 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3577 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3578 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3579 ;;Total ram usage:        4 bytes
  3580 ;; Hardware stack levels used:    1
  3581 ;; Hardware stack levels required when called:    4
  3582 ;; This function calls:
  3583 ;;		_dameTemperaturaHumedad
  3584 ;; This function is called by:
  3585 ;;		_encenderBombas
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           
  3589                           	psect	text4
  3590  002C30                     __ptext4:
  3591                           	opt callstack 0
  3592  002C30                     _estaSeco:
  3593                           	opt callstack 24
  3594  002C30                     
  3595                           ;main.c: 144:     unsigned char temperatura;;main.c: 146:     dameTemperaturaHumedad(((v
      +                          oid*)0), &temperatura);
  3596  002C30  0E00               	movlw	0
  3597  002C32  6E04               	movwf	dameTemperaturaHumedad@Humedad^0,c
  3598  002C34  0E00               	movlw	0
  3599  002C36  6E05               	movwf	(dameTemperaturaHumedad@Humedad+1)^0,c
  3600  002C38  0E13               	movlw	low estaSeco@temperatura
  3601  002C3A  6E06               	movwf	dameTemperaturaHumedad@Temperatura^0,c
  3602  002C3C  0E00               	movlw	high estaSeco@temperatura
  3603  002C3E  6E07               	movwf	(dameTemperaturaHumedad@Temperatura+1)^0,c
  3604  002C40  ECAF  F011         	call	_dameTemperaturaHumedad	;wreg free
  3605  002C44                     
  3606                           ;main.c: 149:     return (s.porcientoHumedad < 94) && (temperatura < 34);
  3607  002C44  0E00               	movlw	0
  3608  002C46  6E12               	movwf	_estaSeco$796^0,c
  3609  002C48  0E5E               	movlw	94
  3610  002C4A  6010               	cpfslt	estaSeco@s^0,c
  3611  002C4C  EF2A  F016         	goto	u3061
  3612  002C50  EF2C  F016         	goto	u3060
  3613  002C54                     u3061:
  3614  002C54  EF36  F016         	goto	l3924
  3615  002C58                     u3060:
  3616  002C58  0E22               	movlw	34
  3617  002C5A  6013               	cpfslt	estaSeco@temperatura^0,c
  3618  002C5C  EF32  F016         	goto	u3071
  3619  002C60  EF34  F016         	goto	u3070
  3620  002C64                     u3071:
  3621  002C64  EF36  F016         	goto	l3924
  3622  002C68                     u3070:
  3623  002C68  0E01               	movlw	1
  3624  002C6A  6E12               	movwf	_estaSeco$796^0,c
  3625  002C6C                     l3924:
  3626  002C6C  C012  F010         	movff	_estaSeco$796,?_estaSeco
  3627  002C70  6A11               	clrf	(?_estaSeco+1)^0,c
  3628  002C72  0012               	return		;funcret
  3629  002C74                     __end_of_estaSeco:
  3630                           	opt callstack 0
  3631                           
  3632 ;; *************** function _dameHoraActual *****************
  3633 ;; Defined at:
  3634 ;;		line 177 in file "main.c"
  3635 ;; Parameters:    Size  Location     Type
  3636 ;;		None
  3637 ;; Auto vars:     Size  Location     Type
  3638 ;;		None
  3639 ;; Return value:  Size  Location     Type
  3640 ;;                  1    wreg      void 
  3641 ;; Registers used:
  3642 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3643 ;; Tracked objects:
  3644 ;;		On entry : 0/0
  3645 ;;		On exit  : 0/0
  3646 ;;		Unchanged: 0/0
  3647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3648 ;;      Params:         0       0       0       0       0       0       0       0       0
  3649 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3650 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3651 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3652 ;;Total ram usage:        0 bytes
  3653 ;; Hardware stack levels used:    1
  3654 ;; Hardware stack levels required when called:    4
  3655 ;; This function calls:
  3656 ;;		_convertirDato
  3657 ;;		_leer_rtc
  3658 ;; This function is called by:
  3659 ;;		_sistemaRegado
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663                           	psect	text5
  3664  002E42                     __ptext5:
  3665                           	opt callstack 0
  3666  002E42                     _dameHoraActual:
  3667                           	opt callstack 25
  3668  002E42                     
  3669                           ;main.c: 179:     segundos = convertirDato(leer_rtc(0x00));
  3670  002E42  0E00               	movlw	0
  3671  002E44  EC37  F017         	call	_leer_rtc
  3672  002E48  EC72  F017         	call	_convertirDato
  3673  002E4C  0100               	movlb	0	; () banked
  3674  002E4E  6FFA               	movwf	_segundos& (0+255),b
  3675                           
  3676                           ;main.c: 180:     minutos = convertirDato(leer_rtc(0x01));
  3677  002E50  0E01               	movlw	1
  3678  002E52  EC37  F017         	call	_leer_rtc
  3679  002E56  EC72  F017         	call	_convertirDato
  3680  002E5A  0100               	movlb	0	; () banked
  3681  002E5C  6FFB               	movwf	_minutos& (0+255),b
  3682                           
  3683                           ;main.c: 181:     hora = convertirDato(leer_rtc(0x02));
  3684  002E5E  0E02               	movlw	2
  3685  002E60  EC37  F017         	call	_leer_rtc
  3686  002E64  EC72  F017         	call	_convertirDato
  3687  002E68  0100               	movlb	0	; () banked
  3688  002E6A  6FFC               	movwf	_hora& (0+255),b
  3689  002E6C                     
  3690                           ; BSR set to: 0
  3691  002E6C  0012               	return		;funcret
  3692  002E6E                     __end_of_dameHoraActual:
  3693                           	opt callstack 0
  3694                           
  3695 ;; *************** function _dameDiaActual *****************
  3696 ;; Defined at:
  3697 ;;		line 184 in file "main.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;		None
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;		None
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  1    wreg      void 
  3704 ;; Registers used:
  3705 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3711 ;;      Params:         0       0       0       0       0       0       0       0       0
  3712 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3713 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3714 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3715 ;;Total ram usage:        0 bytes
  3716 ;; Hardware stack levels used:    1
  3717 ;; Hardware stack levels required when called:    4
  3718 ;; This function calls:
  3719 ;;		_convertirDato
  3720 ;;		_leer_rtc
  3721 ;; This function is called by:
  3722 ;;		_sistemaRegado
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726                           	psect	text6
  3727  002F88                     __ptext6:
  3728                           	opt callstack 0
  3729  002F88                     _dameDiaActual:
  3730                           	opt callstack 25
  3731  002F88                     
  3732                           ;main.c: 186:     diaActual = convertirDato(leer_rtc(0x03));
  3733  002F88  0E03               	movlw	3
  3734  002F8A  EC37  F017         	call	_leer_rtc
  3735  002F8E  EC72  F017         	call	_convertirDato
  3736  002F92  0100               	movlb	0	; () banked
  3737  002F94  6FF9               	movwf	_diaActual& (0+255),b
  3738  002F96                     
  3739                           ; BSR set to: 0
  3740  002F96  0012               	return		;funcret
  3741  002F98                     __end_of_dameDiaActual:
  3742                           	opt callstack 0
  3743                           
  3744 ;; *************** function _leer_rtc *****************
  3745 ;; Defined at:
  3746 ;;		line 13 in file "./RTC.h"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;  direccion       1    wreg     unsigned char 
  3749 ;; Auto vars:     Size  Location     Type
  3750 ;;  direccion       1    2[COMRAM] unsigned char 
  3751 ;;  dato            1    3[COMRAM] unsigned char 
  3752 ;; Return value:  Size  Location     Type
  3753 ;;                  1    wreg      unsigned char 
  3754 ;; Registers used:
  3755 ;;		wreg, status,2, status,0, cstack
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3761 ;;      Params:         0       0       0       0       0       0       0       0       0
  3762 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3763 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3764 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3765 ;;Total ram usage:        2 bytes
  3766 ;; Hardware stack levels used:    1
  3767 ;; Hardware stack levels required when called:    3
  3768 ;; This function calls:
  3769 ;;		_i2c_detener
  3770 ;;		_i2c_envia_dato
  3771 ;;		_i2c_inicia_com
  3772 ;;		_i2c_recibe_dato
  3773 ;;		_i2c_reinicia_com
  3774 ;; This function is called by:
  3775 ;;		_dameHoraActual
  3776 ;;		_dameDiaActual
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           	psect	text7
  3781  002E6E                     __ptext7:
  3782                           	opt callstack 0
  3783  002E6E                     _leer_rtc:
  3784                           	opt callstack 25
  3785                           
  3786                           ; BSR set to: 0
  3787                           ;incstack = 0
  3788                           ;leer_rtc@direccion stored from wreg
  3789  002E6E  6E03               	movwf	leer_rtc@direccion^0,c
  3790  002E70                     
  3791                           ;./RTC.h: 14:     unsigned char dato;;./RTC.h: 15:     i2c_inicia_com();
  3792  002E70  ECE6  F017         	call	_i2c_inicia_com	;wreg free
  3793                           
  3794                           ;./RTC.h: 16:     i2c_envia_dato(0xD0);
  3795  002E74  0ED0               	movlw	208
  3796  002E76  ECCC  F017         	call	_i2c_envia_dato
  3797                           
  3798                           ;./RTC.h: 17:     i2c_envia_dato(direccion);
  3799  002E7A  5003               	movf	leer_rtc@direccion^0,w,c
  3800  002E7C  ECCC  F017         	call	_i2c_envia_dato
  3801                           
  3802                           ;./RTC.h: 18:     i2c_reinicia_com();
  3803  002E80  ECE2  F017         	call	_i2c_reinicia_com	;wreg free
  3804                           
  3805                           ;./RTC.h: 19:     i2c_envia_dato(0xD1);
  3806  002E84  0ED1               	movlw	209
  3807  002E86  ECCC  F017         	call	_i2c_envia_dato
  3808                           
  3809                           ;./RTC.h: 20:     dato = i2c_recibe_dato();
  3810  002E8A  ECA1  F017         	call	_i2c_recibe_dato	;wreg free
  3811  002E8E  6E04               	movwf	leer_rtc@dato^0,c
  3812                           
  3813                           ;./RTC.h: 21:     i2c_detener();
  3814  002E90  ECEA  F017         	call	_i2c_detener	;wreg free
  3815  002E94                     
  3816                           ;./RTC.h: 22:     return dato;
  3817  002E94  5004               	movf	leer_rtc@dato^0,w,c
  3818  002E96  0012               	return		;funcret
  3819  002E98                     __end_of_leer_rtc:
  3820                           	opt callstack 0
  3821                           
  3822 ;; *************** function _convertirDato *****************
  3823 ;; Defined at:
  3824 ;;		line 28 in file "./RTC.h"
  3825 ;; Parameters:    Size  Location     Type
  3826 ;;  dato            1    wreg     unsigned char 
  3827 ;; Auto vars:     Size  Location     Type
  3828 ;;  dato            1    1[COMRAM] unsigned char 
  3829 ;;  datoR           1    2[COMRAM] unsigned char 
  3830 ;; Return value:  Size  Location     Type
  3831 ;;                  1    wreg      unsigned char 
  3832 ;; Registers used:
  3833 ;;		wreg, status,2, status,0, prodl, prodh
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3839 ;;      Params:         0       0       0       0       0       0       0       0       0
  3840 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3841 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3842 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3843 ;;Total ram usage:        3 bytes
  3844 ;; Hardware stack levels used:    1
  3845 ;; Hardware stack levels required when called:    1
  3846 ;; This function calls:
  3847 ;;		Nothing
  3848 ;; This function is called by:
  3849 ;;		_dameHoraActual
  3850 ;;		_dameDiaActual
  3851 ;; This function uses a non-reentrant model
  3852 ;;
  3853                           
  3854                           	psect	text8
  3855  002EE4                     __ptext8:
  3856                           	opt callstack 0
  3857  002EE4                     _convertirDato:
  3858                           	opt callstack 27
  3859                           
  3860                           ;incstack = 0
  3861                           ;convertirDato@dato stored from wreg
  3862  002EE4  6E02               	movwf	convertirDato@dato^0,c
  3863  002EE6                     
  3864                           ;./RTC.h: 30:     datoR = (dato & 0xF0) >> 4;
  3865  002EE6  3802               	swapf	convertirDato@dato^0,w,c
  3866  002EE8  0B0F               	andlw	15
  3867  002EEA  0B0F               	andlw	15
  3868  002EEC  6E03               	movwf	convertirDato@datoR^0,c
  3869  002EEE                     
  3870                           ;./RTC.h: 31:     datoR = (datoR * 10) + (dato & 0x0F);
  3871  002EEE  C002  F001         	movff	convertirDato@dato,??_convertirDato
  3872  002EF2  0E0F               	movlw	15
  3873  002EF4  1601               	andwf	??_convertirDato^0,f,c
  3874  002EF6  5003               	movf	convertirDato@datoR^0,w,c
  3875  002EF8  0D0A               	mullw	10
  3876  002EFA  50F3               	movf	243,w,c
  3877  002EFC  2401               	addwf	??_convertirDato^0,w,c
  3878  002EFE  6E03               	movwf	convertirDato@datoR^0,c
  3879  002F00                     
  3880                           ;./RTC.h: 32:     return datoR;
  3881  002F00  5003               	movf	convertirDato@datoR^0,w,c
  3882  002F02  0012               	return		;funcret
  3883  002F04                     __end_of_convertirDato:
  3884                           	opt callstack 0
  3885                           
  3886 ;; *************** function _sistemaPrincipal *****************
  3887 ;; Defined at:
  3888 ;;		line 553 in file "main.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;  opcion          1    wreg     unsigned char 
  3891 ;; Auto vars:     Size  Location     Type
  3892 ;;  opcion          1  138[BANK0 ] unsigned char 
  3893 ;; Return value:  Size  Location     Type
  3894 ;;                  1    wreg      void 
  3895 ;; Registers used:
  3896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3897 ;; Tracked objects:
  3898 ;;		On entry : 0/0
  3899 ;;		On exit  : 0/0
  3900 ;;		Unchanged: 0/0
  3901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3902 ;;      Params:         0       0       0       0       0       0       0       0       0
  3903 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3904 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3905 ;;      Totals:         0       3       0       0       0       0       0       0       0
  3906 ;;Total ram usage:        3 bytes
  3907 ;; Hardware stack levels used:    1
  3908 ;; Hardware stack levels required when called:   11
  3909 ;; This function calls:
  3910 ;;		_UART_printf
  3911 ;;		_asignarHorarios
  3912 ;;		_dameDatosSistema
  3913 ;;		_fijaDiaRtc
  3914 ;;		_fijaHoraRtc
  3915 ;;		_mostrarDatosSensores
  3916 ;;		_mostrarDatosSensoresWIFI
  3917 ;;		_mostrarMenu
  3918 ;;		_regadoRapido
  3919 ;;		_setTiempoRegar
  3920 ;; This function is called by:
  3921 ;;		_main
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           
  3925                           	psect	text9
  3926  001FB0                     __ptext9:
  3927                           	opt callstack 0
  3928  001FB0                     _sistemaPrincipal:
  3929                           	opt callstack 19
  3930                           
  3931                           ;incstack = 0
  3932                           ;sistemaPrincipal@opcion stored from wreg
  3933  001FB0  0100               	movlb	0	; () banked
  3934  001FB2  6FEA               	movwf	sistemaPrincipal@opcion& (0+255),b
  3935  001FB4                     
  3936                           ;main.c: 555:     PIE1bits.RCIE = 0;
  3937  001FB4  9A9D               	bcf	157,5,c	;volatile
  3938                           
  3939                           ;main.c: 557:     switch (opcion) {
  3940  001FB6  EF0E  F010         	goto	l4474
  3941  001FBA                     l4452:
  3942                           
  3943                           ; BSR set to: 0
  3944                           ;main.c: 560:             fijaHoraRtc();
  3945  001FBA  ECFD  F013         	call	_fijaHoraRtc	;wreg free
  3946                           
  3947                           ;main.c: 561:             break;
  3948  001FBE  EF38  F010         	goto	l4476
  3949  001FC2                     l4454:
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;main.c: 564:             asignarHorarios();
  3953  001FC2  ECFE  F00A         	call	_asignarHorarios	;wreg free
  3954                           
  3955                           ;main.c: 565:             break;
  3956  001FC6  EF38  F010         	goto	l4476
  3957  001FCA                     l4456:
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;main.c: 568:             setTiempoRegar();
  3961  001FCA  EC01  F012         	call	_setTiempoRegar	;wreg free
  3962                           
  3963                           ;main.c: 569:             break;
  3964  001FCE  EF38  F010         	goto	l4476
  3965  001FD2                     l4458:
  3966                           
  3967                           ; BSR set to: 0
  3968                           ;main.c: 572:             dameDatosSistema();
  3969  001FD2  EC91  F005         	call	_dameDatosSistema	;wreg free
  3970                           
  3971                           ;main.c: 573:             break;
  3972  001FD6  EF38  F010         	goto	l4476
  3973  001FDA                     l4460:
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;main.c: 576:             if (MODO_COMUNICACION)
  3977  001FDA  0101               	movlb	1	; () banked
  3978  001FDC  517C               	movf	_MODO_COMUNICACION& (0+255),w,b
  3979  001FDE  B4D8               	btfsc	status,2,c
  3980  001FE0  EFF4  F00F         	goto	u3511
  3981  001FE4  EFF6  F00F         	goto	u3510
  3982  001FE8                     u3511:
  3983  001FE8  EFFA  F00F         	goto	l4464
  3984  001FEC                     u3510:
  3985  001FEC                     
  3986                           ; BSR set to: 1
  3987                           ;main.c: 577:                 mostrarDatosSensoresWIFI();
  3988  001FEC  EC01  F00E         	call	_mostrarDatosSensoresWIFI	;wreg free
  3989  001FF0  EF38  F010         	goto	l4476
  3990  001FF4                     l4464:
  3991                           
  3992                           ; BSR set to: 1
  3993                           ;main.c: 579:                 mostrarDatosSensores();
  3994  001FF4  ECFC  F00E         	call	_mostrarDatosSensores	;wreg free
  3995  001FF8  EF38  F010         	goto	l4476
  3996  001FFC                     l4466:
  3997                           
  3998                           ; BSR set to: 0
  3999                           ;main.c: 583:             regadoRapido();
  4000  001FFC  ECE0  F00C         	call	_regadoRapido	;wreg free
  4001                           
  4002                           ;main.c: 584:             break;
  4003  002000  EF38  F010         	goto	l4476
  4004  002004                     l4468:
  4005                           
  4006                           ; BSR set to: 0
  4007                           ;main.c: 587:             fijaDiaRtc();
  4008  002004  ECF1  F016         	call	_fijaDiaRtc	;wreg free
  4009                           
  4010                           ;main.c: 588:             break;
  4011  002008  EF38  F010         	goto	l4476
  4012  00200C                     l4470:
  4013                           
  4014                           ; BSR set to: 0
  4015                           ;main.c: 591:             UART_printf("\r\n Solo se permiten numeros del 1 al 7 \r\n");
  4016  00200C  0EF2               	movlw	low STR_31
  4017  00200E  6E02               	movwf	UART_printf@cadena^0,c
  4018  002010  0E7C               	movlw	high STR_31
  4019  002012  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4020  002014  EC95  F014         	call	_UART_printf	;wreg free
  4021                           
  4022                           ;main.c: 592:             break;
  4023  002018  EF38  F010         	goto	l4476
  4024  00201C                     l4474:
  4025  00201C  0100               	movlb	0	; () banked
  4026  00201E  51EA               	movf	sistemaPrincipal@opcion& (0+255),w,b
  4027  002020  6FE8               	movwf	??_sistemaPrincipal& (0+255),b
  4028  002022  6BE9               	clrf	(??_sistemaPrincipal+1)& (0+255),b
  4029                           
  4030                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4031                           ; Switch size 1, requested type "simple"
  4032                           ; Number of cases is 1, Range of values is 0 to 0
  4033                           ; switch strategies available:
  4034                           ; Name         Instructions Cycles
  4035                           ; simple_byte            4     3 (average)
  4036                           ;	Chosen strategy is simple_byte
  4037  002024  51E9               	movf	(??_sistemaPrincipal+1)& (0+255),w,b
  4038  002026  0A00               	xorlw	0	; case 0
  4039  002028  B4D8               	btfsc	status,2,c
  4040  00202A  EF19  F010         	goto	l4786
  4041  00202E  EF06  F010         	goto	l4470
  4042  002032                     l4786:
  4043                           
  4044                           ; BSR set to: 0
  4045                           ; Switch size 1, requested type "simple"
  4046                           ; Number of cases is 7, Range of values is 1 to 7
  4047                           ; switch strategies available:
  4048                           ; Name         Instructions Cycles
  4049                           ; simple_byte           22    12 (average)
  4050                           ;	Chosen strategy is simple_byte
  4051  002032  51E8               	movf	??_sistemaPrincipal& (0+255),w,b
  4052  002034  0A01               	xorlw	1	; case 1
  4053  002036  B4D8               	btfsc	status,2,c
  4054  002038  EFDD  F00F         	goto	l4452
  4055  00203C  0A03               	xorlw	3	; case 2
  4056  00203E  B4D8               	btfsc	status,2,c
  4057  002040  EFE1  F00F         	goto	l4454
  4058  002044  0A01               	xorlw	1	; case 3
  4059  002046  B4D8               	btfsc	status,2,c
  4060  002048  EFE5  F00F         	goto	l4456
  4061  00204C  0A07               	xorlw	7	; case 4
  4062  00204E  B4D8               	btfsc	status,2,c
  4063  002050  EFE9  F00F         	goto	l4458
  4064  002054  0A01               	xorlw	1	; case 5
  4065  002056  B4D8               	btfsc	status,2,c
  4066  002058  EFED  F00F         	goto	l4460
  4067  00205C  0A03               	xorlw	3	; case 6
  4068  00205E  B4D8               	btfsc	status,2,c
  4069  002060  EFFE  F00F         	goto	l4466
  4070  002064  0A01               	xorlw	1	; case 7
  4071  002066  B4D8               	btfsc	status,2,c
  4072  002068  EF02  F010         	goto	l4468
  4073  00206C  EF06  F010         	goto	l4470
  4074  002070                     l4476:
  4075                           
  4076                           ;main.c: 595:     mostrarMenu();
  4077  002070  ECDE  F012         	call	_mostrarMenu	;wreg free
  4078  002074                     
  4079                           ;main.c: 596:     PIE1bits.RCIE = 1;
  4080  002074  8A9D               	bsf	157,5,c	;volatile
  4081  002076  0012               	return		;funcret
  4082  002078                     __end_of_sistemaPrincipal:
  4083                           	opt callstack 0
  4084                           
  4085 ;; *************** function _setTiempoRegar *****************
  4086 ;; Defined at:
  4087 ;;		line 434 in file "main.c"
  4088 ;; Parameters:    Size  Location     Type
  4089 ;;		None
  4090 ;; Auto vars:     Size  Location     Type
  4091 ;;  hora            1   19[COMRAM] unsigned char 
  4092 ;;  tiempoRegar     1   18[COMRAM] unsigned char 
  4093 ;; Return value:  Size  Location     Type
  4094 ;;                  1    wreg      void 
  4095 ;; Registers used:
  4096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4097 ;; Tracked objects:
  4098 ;;		On entry : 0/0
  4099 ;;		On exit  : 0/0
  4100 ;;		Unchanged: 0/0
  4101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4102 ;;      Params:         0       0       0       0       0       0       0       0       0
  4103 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4104 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4105 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4106 ;;Total ram usage:        2 bytes
  4107 ;; Hardware stack levels used:    1
  4108 ;; Hardware stack levels required when called:    5
  4109 ;; This function calls:
  4110 ;;		_UART_printf
  4111 ;;		_escribeHorariosMemoria
  4112 ;;		_getValue
  4113 ;; This function is called by:
  4114 ;;		_sistemaPrincipal
  4115 ;; This function uses a non-reentrant model
  4116 ;;
  4117                           
  4118                           	psect	text10
  4119  002402                     __ptext10:
  4120                           	opt callstack 0
  4121  002402                     _setTiempoRegar:
  4122                           	opt callstack 24
  4123  002402                     
  4124                           ;main.c: 436:     unsigned char hora;;main.c: 437:     unsigned char tiempoRegar;;main.c
      +                          : 439:     UART_printf("\r\n TIEMPO DE REGADO \r\n");
  4125  002402  0E5E               	movlw	low STR_14
  4126  002404  6E02               	movwf	UART_printf@cadena^0,c
  4127  002406  0E7F               	movlw	high STR_14
  4128  002408  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4129  00240A  EC95  F014         	call	_UART_printf	;wreg free
  4130                           
  4131                           ;main.c: 441:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  4132  00240E  0E03               	movlw	low STR_8
  4133  002410  6E02               	movwf	UART_printf@cadena^0,c
  4134  002412  0E7C               	movlw	high STR_8
  4135  002414  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4136  002416  EC95  F014         	call	_UART_printf	;wreg free
  4137  00241A                     
  4138                           ;main.c: 442:     hora = getValue(2);
  4139  00241A  0E00               	movlw	0
  4140  00241C  6E05               	movwf	(getValue@numCharacters+1)^0,c
  4141  00241E  0E02               	movlw	2
  4142  002420  6E04               	movwf	getValue@numCharacters^0,c
  4143  002422  EC7F  F004         	call	_getValue	;wreg free
  4144  002426  6E14               	movwf	setTiempoRegar@hora^0,c
  4145  002428                     
  4146                           ;main.c: 444:     if (hora != '@') {
  4147  002428  0E40               	movlw	64
  4148  00242A  1814               	xorwf	setTiempoRegar@hora^0,w,c
  4149  00242C  B4D8               	btfsc	status,2,c
  4150  00242E  EF1B  F012         	goto	u3351
  4151  002432  EF1D  F012         	goto	u3350
  4152  002436                     u3351:
  4153  002436  EF50  F012         	goto	l316
  4154  00243A                     u3350:
  4155  00243A                     
  4156                           ;main.c: 446:         UART_printf("\r\n Ingrese los minutos que desee que se riegue en e
      +                          se horario ej: 15 \r\n");
  4157  00243A  0EE9               	movlw	low STR_16
  4158  00243C  6E02               	movwf	UART_printf@cadena^0,c
  4159  00243E  0E79               	movlw	high STR_16
  4160  002440  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4161  002442  EC95  F014         	call	_UART_printf	;wreg free
  4162  002446                     
  4163                           ;main.c: 447:         tiempoRegar = getValue(2);
  4164  002446  0E00               	movlw	0
  4165  002448  6E05               	movwf	(getValue@numCharacters+1)^0,c
  4166  00244A  0E02               	movlw	2
  4167  00244C  6E04               	movwf	getValue@numCharacters^0,c
  4168  00244E  EC7F  F004         	call	_getValue	;wreg free
  4169  002452  6E13               	movwf	setTiempoRegar@tiempoRegar^0,c
  4170  002454                     
  4171                           ;main.c: 449:         if (tiempoRegar != '@') {
  4172  002454  0E40               	movlw	64
  4173  002456  1813               	xorwf	setTiempoRegar@tiempoRegar^0,w,c
  4174  002458  B4D8               	btfsc	status,2,c
  4175  00245A  EF31  F012         	goto	u3361
  4176  00245E  EF33  F012         	goto	u3360
  4177  002462                     u3361:
  4178  002462  EF50  F012         	goto	l316
  4179  002466                     u3360:
  4180  002466                     
  4181                           ;main.c: 453:             UART_printf("\r\n Minutos de riego establecidos! \r\n");
  4182  002466  0E42               	movlw	low STR_17
  4183  002468  6E02               	movwf	UART_printf@cadena^0,c
  4184  00246A  0E7D               	movlw	high STR_17
  4185  00246C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4186  00246E  EC95  F014         	call	_UART_printf	;wreg free
  4187  002472                     
  4188                           ;main.c: 455:             horarios[hora].tiempoRegar = tiempoRegar;
  4189  002472  5014               	movf	setTiempoRegar@hora^0,w,c
  4190  002474  0D0C               	mullw	12
  4191  002476  0EB5               	movlw	low (_horarios+11)
  4192  002478  24F3               	addwf	243,w,c
  4193  00247A  6ED9               	movwf	fsr2l,c
  4194  00247C  0E01               	movlw	high (_horarios+11)
  4195  00247E  20F4               	addwfc	prodh,w,c
  4196  002480  6EDA               	movwf	fsr2h,c
  4197  002482  C013  FFDF         	movff	setTiempoRegar@tiempoRegar,indf2
  4198  002486                     
  4199                           ;main.c: 456:             minutosRegar = horarios[hora].tiempoRegar;
  4200  002486  5014               	movf	setTiempoRegar@hora^0,w,c
  4201  002488  0D0C               	mullw	12
  4202  00248A  0EB5               	movlw	low (_horarios+11)
  4203  00248C  24F3               	addwf	243,w,c
  4204  00248E  6ED9               	movwf	fsr2l,c
  4205  002490  0E01               	movlw	high (_horarios+11)
  4206  002492  20F4               	addwfc	prodh,w,c
  4207  002494  6EDA               	movwf	fsr2h,c
  4208  002496  50DF               	movf	indf2,w,c
  4209  002498  0100               	movlb	0	; () banked
  4210  00249A  6FF6               	movwf	_minutosRegar& (0+255),b
  4211  00249C                     
  4212                           ; BSR set to: 0
  4213                           ;main.c: 458:             escribeHorariosMemoria();
  4214  00249C  ECA2  F00B         	call	_escribeHorariosMemoria	;wreg free
  4215  0024A0                     l316:
  4216  0024A0  0012               	return		;funcret
  4217  0024A2                     __end_of_setTiempoRegar:
  4218                           	opt callstack 0
  4219                           
  4220 ;; *************** function _regadoRapido *****************
  4221 ;; Defined at:
  4222 ;;		line 908 in file "main.c"
  4223 ;; Parameters:    Size  Location     Type
  4224 ;;		None
  4225 ;; Auto vars:     Size  Location     Type
  4226 ;;  areaRegar       1   17[COMRAM] unsigned char 
  4227 ;;  tiempoRegar     1   16[COMRAM] unsigned char 
  4228 ;; Return value:  Size  Location     Type
  4229 ;;                  1    wreg      void 
  4230 ;; Registers used:
  4231 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4232 ;; Tracked objects:
  4233 ;;		On entry : 0/0
  4234 ;;		On exit  : 0/0
  4235 ;;		Unchanged: 0/0
  4236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4237 ;;      Params:         0       0       0       0       0       0       0       0       0
  4238 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4239 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4240 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4241 ;;Total ram usage:        4 bytes
  4242 ;; Hardware stack levels used:    1
  4243 ;; Hardware stack levels required when called:    4
  4244 ;; This function calls:
  4245 ;;		_UART_printf
  4246 ;;		_getValue
  4247 ;; This function is called by:
  4248 ;;		_sistemaPrincipal
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           
  4252                           	psect	text11
  4253  0019C0                     __ptext11:
  4254                           	opt callstack 0
  4255  0019C0                     _regadoRapido:
  4256                           	opt callstack 25
  4257  0019C0                     
  4258                           ;main.c: 910:     unsigned char tiempoRegar;;main.c: 911:     unsigned char areaRegar;;m
      +                          ain.c: 913:     UART_printf("\r\n REGADO RAPIDO \r\n");
  4259  0019C0  0E8C               	movlw	low STR_46
  4260  0019C2  6E02               	movwf	UART_printf@cadena^0,c
  4261  0019C4  0E7F               	movlw	high STR_46
  4262  0019C6  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4263  0019C8  EC95  F014         	call	_UART_printf	;wreg free
  4264  0019CC                     
  4265                           ;main.c: 915:     if (!regando) {
  4266  0019CC  0100               	movlb	0	; () banked
  4267  0019CE  51F4               	movf	_regando& (0+255),w,b
  4268  0019D0  A4D8               	btfss	status,2,c
  4269  0019D2  EFED  F00C         	goto	u3431
  4270  0019D6  EFEF  F00C         	goto	u3430
  4271  0019DA                     u3431:
  4272  0019DA  EF74  F00D         	goto	l4346
  4273  0019DE                     u3430:
  4274  0019DE                     
  4275                           ; BSR set to: 0
  4276                           ;main.c: 916:         UART_printf("\r\n Ingrese los minutos que desee que se riegue ej: 
      +                          15 \r\n");
  4277  0019DE  0E5E               	movlw	low STR_47
  4278  0019E0  6E02               	movwf	UART_printf@cadena^0,c
  4279  0019E2  0E7B               	movlw	high STR_47
  4280  0019E4  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4281  0019E6  EC95  F014         	call	_UART_printf	;wreg free
  4282  0019EA                     
  4283                           ;main.c: 917:         tiempoRegar = getValue(2);
  4284  0019EA  0E00               	movlw	0
  4285  0019EC  6E05               	movwf	(getValue@numCharacters+1)^0,c
  4286  0019EE  0E02               	movlw	2
  4287  0019F0  6E04               	movwf	getValue@numCharacters^0,c
  4288  0019F2  EC7F  F004         	call	_getValue	;wreg free
  4289  0019F6  6E11               	movwf	regadoRapido@tiempoRegar^0,c
  4290  0019F8                     
  4291                           ;main.c: 919:         if (tiempoRegar != '@') {
  4292  0019F8  0E40               	movlw	64
  4293  0019FA  1811               	xorwf	regadoRapido@tiempoRegar^0,w,c
  4294  0019FC  B4D8               	btfsc	status,2,c
  4295  0019FE  EF03  F00D         	goto	u3441
  4296  001A02  EF05  F00D         	goto	u3440
  4297  001A06                     u3441:
  4298  001A06  EF7A  F00D         	goto	l460
  4299  001A0A                     u3440:
  4300  001A0A                     
  4301                           ;main.c: 921:             UART_printf("\r\n Ingrese el numero de sensor del area a regar
      +                           ej: 5 \r\n");
  4302  001A0A  0E25               	movlw	low STR_48
  4303  001A0C  6E02               	movwf	UART_printf@cadena^0,c
  4304  001A0E  0E7B               	movlw	high STR_48
  4305  001A10  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4306  001A12  EC95  F014         	call	_UART_printf	;wreg free
  4307  001A16                     
  4308                           ;main.c: 922:             areaRegar = getValue(1);
  4309  001A16  0E00               	movlw	0
  4310  001A18  6E05               	movwf	(getValue@numCharacters+1)^0,c
  4311  001A1A  0E01               	movlw	1
  4312  001A1C  6E04               	movwf	getValue@numCharacters^0,c
  4313  001A1E  EC7F  F004         	call	_getValue	;wreg free
  4314  001A22  6E12               	movwf	regadoRapido@areaRegar^0,c
  4315  001A24                     
  4316                           ;main.c: 924:             if (areaRegar != '@') {
  4317  001A24  0E40               	movlw	64
  4318  001A26  1812               	xorwf	regadoRapido@areaRegar^0,w,c
  4319  001A28  B4D8               	btfsc	status,2,c
  4320  001A2A  EF19  F00D         	goto	u3451
  4321  001A2E  EF1B  F00D         	goto	u3450
  4322  001A32                     u3451:
  4323  001A32  EF7A  F00D         	goto	l460
  4324  001A36                     u3450:
  4325  001A36                     
  4326                           ;main.c: 926:                 areaRegar--;
  4327  001A36  0612               	decf	regadoRapido@areaRegar^0,f,c
  4328                           
  4329                           ;main.c: 928:                 switch (areaRegar) {
  4330  001A38  EF36  F00D         	goto	l4338
  4331  001A3C                     l450:
  4332                           
  4333                           ;main.c: 931:                         LATDbits.LATD0 = 1;
  4334  001A3C  808C               	bsf	140,0,c	;volatile
  4335                           
  4336                           ;main.c: 932:                         break;
  4337  001A3E  EF63  F00D         	goto	l4340
  4338  001A42                     l452:
  4339                           
  4340                           ;main.c: 935:                         LATDbits.LATD1 = 1;
  4341  001A42  828C               	bsf	140,1,c	;volatile
  4342                           
  4343                           ;main.c: 936:                         break;
  4344  001A44  EF63  F00D         	goto	l4340
  4345  001A48                     l453:
  4346                           
  4347                           ;main.c: 939:                         LATDbits.LATD2 = 1;
  4348  001A48  848C               	bsf	140,2,c	;volatile
  4349                           
  4350                           ;main.c: 940:                         break;
  4351  001A4A  EF63  F00D         	goto	l4340
  4352  001A4E                     l454:
  4353                           
  4354                           ;main.c: 943:                         LATDbits.LATD3 = 1;
  4355  001A4E  868C               	bsf	140,3,c	;volatile
  4356                           
  4357                           ;main.c: 944:                         break;
  4358  001A50  EF63  F00D         	goto	l4340
  4359  001A54                     l455:
  4360                           
  4361                           ;main.c: 947:                         LATDbits.LATD4 = 1;
  4362  001A54  888C               	bsf	140,4,c	;volatile
  4363                           
  4364                           ;main.c: 948:                         break;
  4365  001A56  EF63  F00D         	goto	l4340
  4366  001A5A                     l456:
  4367                           
  4368                           ;main.c: 951:                         LATDbits.LATD5 = 1;
  4369  001A5A  8A8C               	bsf	140,5,c	;volatile
  4370                           
  4371                           ;main.c: 952:                         break;
  4372  001A5C  EF63  F00D         	goto	l4340
  4373  001A60                     l457:
  4374                           
  4375                           ;main.c: 955:                         LATDbits.LATD6 = 1;
  4376  001A60  8C8C               	bsf	140,6,c	;volatile
  4377                           
  4378                           ;main.c: 956:                         break;
  4379  001A62  EF63  F00D         	goto	l4340
  4380  001A66                     l458:
  4381                           
  4382                           ;main.c: 959:                         LATDbits.LATD7 = 1;
  4383  001A66  8E8C               	bsf	140,7,c	;volatile
  4384                           
  4385                           ;main.c: 960:                         break;
  4386  001A68  EF63  F00D         	goto	l4340
  4387  001A6C                     l4338:
  4388  001A6C  5012               	movf	regadoRapido@areaRegar^0,w,c
  4389  001A6E  6E0F               	movwf	??_regadoRapido^0,c
  4390  001A70  6A10               	clrf	(??_regadoRapido+1)^0,c
  4391                           
  4392                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4393                           ; Switch size 1, requested type "simple"
  4394                           ; Number of cases is 1, Range of values is 0 to 0
  4395                           ; switch strategies available:
  4396                           ; Name         Instructions Cycles
  4397                           ; simple_byte            4     3 (average)
  4398                           ;	Chosen strategy is simple_byte
  4399  001A72  5010               	movf	(??_regadoRapido+1)^0,w,c
  4400  001A74  0A00               	xorlw	0	; case 0
  4401  001A76  B4D8               	btfsc	status,2,c
  4402  001A78  EF40  F00D         	goto	l4788
  4403  001A7C  EF63  F00D         	goto	l4340
  4404  001A80                     l4788:
  4405                           
  4406                           ; Switch size 1, requested type "simple"
  4407                           ; Number of cases is 8, Range of values is 0 to 7
  4408                           ; switch strategies available:
  4409                           ; Name         Instructions Cycles
  4410                           ; simple_byte           25    13 (average)
  4411                           ;	Chosen strategy is simple_byte
  4412  001A80  500F               	movf	??_regadoRapido^0,w,c
  4413  001A82  0A00               	xorlw	0	; case 0
  4414  001A84  B4D8               	btfsc	status,2,c
  4415  001A86  EF1E  F00D         	goto	l450
  4416  001A8A  0A01               	xorlw	1	; case 1
  4417  001A8C  B4D8               	btfsc	status,2,c
  4418  001A8E  EF21  F00D         	goto	l452
  4419  001A92  0A03               	xorlw	3	; case 2
  4420  001A94  B4D8               	btfsc	status,2,c
  4421  001A96  EF24  F00D         	goto	l453
  4422  001A9A  0A01               	xorlw	1	; case 3
  4423  001A9C  B4D8               	btfsc	status,2,c
  4424  001A9E  EF27  F00D         	goto	l454
  4425  001AA2  0A07               	xorlw	7	; case 4
  4426  001AA4  B4D8               	btfsc	status,2,c
  4427  001AA6  EF2A  F00D         	goto	l455
  4428  001AAA  0A01               	xorlw	1	; case 5
  4429  001AAC  B4D8               	btfsc	status,2,c
  4430  001AAE  EF2D  F00D         	goto	l456
  4431  001AB2  0A03               	xorlw	3	; case 6
  4432  001AB4  B4D8               	btfsc	status,2,c
  4433  001AB6  EF30  F00D         	goto	l457
  4434  001ABA  0A01               	xorlw	1	; case 7
  4435  001ABC  B4D8               	btfsc	status,2,c
  4436  001ABE  EF33  F00D         	goto	l458
  4437  001AC2  EF63  F00D         	goto	l4340
  4438  001AC6                     l4340:
  4439                           
  4440                           ;main.c: 964:                 regando = 1;
  4441  001AC6  0E01               	movlw	1
  4442  001AC8  0100               	movlb	0	; () banked
  4443  001ACA  6FF4               	movwf	_regando& (0+255),b
  4444  001ACC                     
  4445                           ; BSR set to: 0
  4446                           ;main.c: 965:                 horarios[hora].regado = 0;
  4447  001ACC  51FC               	movf	_hora& (0+255),w,b
  4448  001ACE  0D0C               	mullw	12
  4449  001AD0  0EB4               	movlw	low (_horarios+10)
  4450  001AD2  24F3               	addwf	243,w,c
  4451  001AD4  6ED9               	movwf	fsr2l,c
  4452  001AD6  0E01               	movlw	high (_horarios+10)
  4453  001AD8  20F4               	addwfc	prodh,w,c
  4454  001ADA  6EDA               	movwf	fsr2h,c
  4455  001ADC  0E00               	movlw	0
  4456  001ADE  6EDF               	movwf	indf2,c
  4457  001AE0                     
  4458                           ; BSR set to: 0
  4459                           ;main.c: 966:                 minutosRegar = tiempoRegar;
  4460  001AE0  C011  F0F6         	movff	regadoRapido@tiempoRegar,_minutosRegar
  4461  001AE4  EF7A  F00D         	goto	l460
  4462  001AE8                     l4346:
  4463                           
  4464                           ; BSR set to: 0
  4465                           ;main.c: 973:         UART_printf("\r\n Ya se esta efectuando un riego, intentelo mas ta
      +                          rde \r\n");
  4466  001AE8  0EEB               	movlw	low STR_49
  4467  001AEA  6E02               	movwf	UART_printf@cadena^0,c
  4468  001AEC  0E7A               	movlw	high STR_49
  4469  001AEE  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4470  001AF0  EC95  F014         	call	_UART_printf	;wreg free
  4471  001AF4                     l460:
  4472  001AF4  0012               	return		;funcret
  4473  001AF6                     __end_of_regadoRapido:
  4474                           	opt callstack 0
  4475                           
  4476 ;; *************** function _mostrarMenu *****************
  4477 ;; Defined at:
  4478 ;;		line 539 in file "main.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;		None
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;		None
  4483 ;; Return value:  Size  Location     Type
  4484 ;;                  1    wreg      void 
  4485 ;; Registers used:
  4486 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4487 ;; Tracked objects:
  4488 ;;		On entry : 0/0
  4489 ;;		On exit  : 0/0
  4490 ;;		Unchanged: 0/0
  4491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4492 ;;      Params:         0       0       0       0       0       0       0       0       0
  4493 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4494 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4495 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4496 ;;Total ram usage:        0 bytes
  4497 ;; Hardware stack levels used:    1
  4498 ;; Hardware stack levels required when called:    3
  4499 ;; This function calls:
  4500 ;;		_UART_printf
  4501 ;; This function is called by:
  4502 ;;		_sistemaPrincipal
  4503 ;;		_sistemaRegado
  4504 ;;		_main
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508                           	psect	text12
  4509  0025BC                     __ptext12:
  4510                           	opt callstack 0
  4511  0025BC                     _mostrarMenu:
  4512                           	opt callstack 26
  4513  0025BC                     
  4514                           ;main.c: 541:     UART_printf("\r\n Ingresa una opcion a Realizar: \r\n");
  4515  0025BC  0E67               	movlw	low STR_21
  4516  0025BE  6E02               	movwf	UART_printf@cadena^0,c
  4517  0025C0  0E7D               	movlw	high STR_21
  4518  0025C2  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4519  0025C4  EC95  F014         	call	_UART_printf	;wreg free
  4520                           
  4521                           ;main.c: 542:     UART_printf("\r\n 1. Fijar Hora Actual \r\n");
  4522  0025C8  0EDD               	movlw	low STR_22
  4523  0025CA  6E02               	movwf	UART_printf@cadena^0,c
  4524  0025CC  0E7E               	movlw	high STR_22
  4525  0025CE  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4526  0025D0  EC95  F014         	call	_UART_printf	;wreg free
  4527                           
  4528                           ;main.c: 543:     UART_printf("\r\n 2. Asignar Horarios para regar \r\n");
  4529  0025D4  0ED6               	movlw	low STR_23
  4530  0025D6  6E02               	movwf	UART_printf@cadena^0,c
  4531  0025D8  0E7D               	movlw	high STR_23
  4532  0025DA  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4533  0025DC  EC95  F014         	call	_UART_printf	;wreg free
  4534                           
  4535                           ;main.c: 544:     UART_printf("\r\n 3. Programar tiempo de riego en un horario \r\n");
  4536  0025E0  0E69               	movlw	low STR_24
  4537  0025E2  6E02               	movwf	UART_printf@cadena^0,c
  4538  0025E4  0E7C               	movlw	high STR_24
  4539  0025E6  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4540  0025E8  EC95  F014         	call	_UART_printf	;wreg free
  4541                           
  4542                           ;main.c: 545:     UART_printf("\r\n 4. Dame datos del sistema \r\n");
  4543  0025EC  0E61               	movlw	low STR_25
  4544  0025EE  6E02               	movwf	UART_printf@cadena^0,c
  4545  0025F0  0E7E               	movlw	high STR_25
  4546  0025F2  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4547  0025F4  EC95  F014         	call	_UART_printf	;wreg free
  4548                           
  4549                           ;main.c: 546:     UART_printf("\r\n 5. Mostrar valores sensores \r\n");
  4550  0025F8  0E1F               	movlw	low STR_26
  4551  0025FA  6E02               	movwf	UART_printf@cadena^0,c
  4552  0025FC  0E7E               	movlw	high STR_26
  4553  0025FE  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4554  002600  EC95  F014         	call	_UART_printf	;wreg free
  4555                           
  4556                           ;main.c: 547:     UART_printf("\r\n 6. Regado rapido \r\n");
  4557  002604  0E75               	movlw	low STR_27
  4558  002606  6E02               	movwf	UART_printf@cadena^0,c
  4559  002608  0E7F               	movlw	high STR_27
  4560  00260A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4561  00260C  EC95  F014         	call	_UART_printf	;wreg free
  4562                           
  4563                           ;main.c: 548:     UART_printf("\r\n 7. Fijar Dia Actual \r\n");
  4564  002610  0E12               	movlw	low STR_28
  4565  002612  6E02               	movwf	UART_printf@cadena^0,c
  4566  002614  0E7F               	movlw	high STR_28
  4567  002616  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4568  002618  EC95  F014         	call	_UART_printf	;wreg free
  4569                           
  4570                           ;main.c: 549:     UART_printf("\r\n Opcion:  \r");
  4571  00261C  0ED3               	movlw	low STR_29
  4572  00261E  6E02               	movwf	UART_printf@cadena^0,c
  4573  002620  0E7F               	movlw	high STR_29
  4574  002622  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4575  002624  EC95  F014         	call	_UART_printf	;wreg free
  4576                           
  4577                           ;main.c: 550:     UART_printf("\r\n");
  4578  002628  0E0F               	movlw	low (STR_13+23)
  4579  00262A  6E02               	movwf	UART_printf@cadena^0,c
  4580  00262C  0E7F               	movlw	high (STR_13+23)
  4581  00262E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4582  002630  EC95  F014         	call	_UART_printf	;wreg free
  4583  002634  0012               	return		;funcret
  4584  002636                     __end_of_mostrarMenu:
  4585                           	opt callstack 0
  4586                           
  4587 ;; *************** function _mostrarDatosSensoresWIFI *****************
  4588 ;; Defined at:
  4589 ;;		line 759 in file "main.c"
  4590 ;; Parameters:    Size  Location     Type
  4591 ;;		None
  4592 ;; Auto vars:     Size  Location     Type
  4593 ;;  i               2  102[BANK1 ] int 
  4594 ;;  buffer         50   50[BANK1 ] unsigned char [50]
  4595 ;;  bufferSensor   50    0[BANK1 ] unsigned char [50]
  4596 ;;  humedad         1  101[BANK1 ] unsigned char 
  4597 ;;  temperatura     1  100[BANK1 ] unsigned char 
  4598 ;; Return value:  Size  Location     Type
  4599 ;;                  1    wreg      void 
  4600 ;; Registers used:
  4601 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4602 ;; Tracked objects:
  4603 ;;		On entry : 0/0
  4604 ;;		On exit  : 0/0
  4605 ;;		Unchanged: 0/0
  4606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4607 ;;      Params:         0       0       0       0       0       0       0       0       0
  4608 ;;      Locals:         0       0     104       0       0       0       0       0       0
  4609 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4610 ;;      Totals:         0       1     104       0       0       0       0       0       0
  4611 ;;Total ram usage:      105 bytes
  4612 ;; Hardware stack levels used:    1
  4613 ;; Hardware stack levels required when called:   10
  4614 ;; This function calls:
  4615 ;;		_UART_printf
  4616 ;;		_UART_write
  4617 ;;		_dameTemperaturaHumedad
  4618 ;;		_lecturaWifi
  4619 ;;		_sprintf
  4620 ;; This function is called by:
  4621 ;;		_sistemaPrincipal
  4622 ;; This function uses a non-reentrant model
  4623 ;;
  4624                           
  4625                           	psect	text13
  4626  001C02                     __ptext13:
  4627                           	opt callstack 0
  4628  001C02                     _mostrarDatosSensoresWIFI:
  4629                           	opt callstack 19
  4630  001C02                     
  4631                           ;main.c: 762:     char buffer[50];;main.c: 763:     char bufferSensor[50];;main.c: 764: 
      +                              unsigned char temperatura, humedad;;main.c: 766:     dameTemperaturaHumedad(&humedad
      +                          , &temperatura);
  4632  001C02  0E65               	movlw	low mostrarDatosSensoresWIFI@humedad
  4633  001C04  6E04               	movwf	dameTemperaturaHumedad@Humedad^0,c
  4634  001C06  0E01               	movlw	high mostrarDatosSensoresWIFI@humedad
  4635  001C08  6E05               	movwf	(dameTemperaturaHumedad@Humedad+1)^0,c
  4636  001C0A  0E64               	movlw	low mostrarDatosSensoresWIFI@temperatura
  4637  001C0C  6E06               	movwf	dameTemperaturaHumedad@Temperatura^0,c
  4638  001C0E  0E01               	movlw	high mostrarDatosSensoresWIFI@temperatura
  4639  001C10  6E07               	movwf	(dameTemperaturaHumedad@Temperatura+1)^0,c
  4640  001C12  ECAF  F011         	call	_dameTemperaturaHumedad	;wreg free
  4641  001C16                     
  4642                           ;main.c: 768:     UART_write('I');
  4643  001C16  0E49               	movlw	73
  4644  001C18  ECAE  F017         	call	_UART_write
  4645  001C1C                     
  4646                           ;main.c: 771:     sprintf(buffer, "\r\n\nLa Humedad Ambiente es: %d\r\n", humedad);
  4647  001C1C  0E32               	movlw	low mostrarDatosSensoresWIFI@buffer
  4648  001C1E  0100               	movlb	0	; () banked
  4649  001C20  6F60               	movwf	sprintf@s& (0+255),b
  4650  001C22  0E01               	movlw	high mostrarDatosSensoresWIFI@buffer
  4651  001C24  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4652  001C26  0E81               	movlw	low STR_36
  4653  001C28  6F62               	movwf	sprintf@fmt& (0+255),b
  4654  001C2A  0E7E               	movlw	high STR_36
  4655  001C2C  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4656  001C2E  C165  F064         	movff	mostrarDatosSensoresWIFI@humedad,?_sprintf+4
  4657  001C32  6B65               	clrf	(?_sprintf+5)& (0+255),b
  4658  001C34  EC7B  F015         	call	_sprintf	;wreg free
  4659  001C38                     
  4660                           ;main.c: 772:     UART_printf(buffer);
  4661  001C38  0E32               	movlw	low mostrarDatosSensoresWIFI@buffer
  4662  001C3A  6E02               	movwf	UART_printf@cadena^0,c
  4663  001C3C  0E01               	movlw	high mostrarDatosSensoresWIFI@buffer
  4664  001C3E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4665  001C40  EC95  F014         	call	_UART_printf	;wreg free
  4666  001C44                     
  4667                           ;main.c: 773:     sprintf(buffer, "\r\n\nLa Temperatura es: %d C\r\n", temperatura);
  4668  001C44  0E32               	movlw	low mostrarDatosSensoresWIFI@buffer
  4669  001C46  0100               	movlb	0	; () banked
  4670  001C48  6F60               	movwf	sprintf@s& (0+255),b
  4671  001C4A  0E01               	movlw	high mostrarDatosSensoresWIFI@buffer
  4672  001C4C  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4673  001C4E  0EC0               	movlw	low STR_37
  4674  001C50  6F62               	movwf	sprintf@fmt& (0+255),b
  4675  001C52  0E7E               	movlw	high STR_37
  4676  001C54  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4677  001C56  C164  F064         	movff	mostrarDatosSensoresWIFI@temperatura,?_sprintf+4
  4678  001C5A  6B65               	clrf	(?_sprintf+5)& (0+255),b
  4679  001C5C  EC7B  F015         	call	_sprintf	;wreg free
  4680  001C60                     
  4681                           ;main.c: 774:     UART_printf(buffer);
  4682  001C60  0E32               	movlw	low mostrarDatosSensoresWIFI@buffer
  4683  001C62  6E02               	movwf	UART_printf@cadena^0,c
  4684  001C64  0E01               	movlw	high mostrarDatosSensoresWIFI@buffer
  4685  001C66  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4686  001C68  EC95  F014         	call	_UART_printf	;wreg free
  4687  001C6C                     
  4688                           ;main.c: 776:     lecturaWifi();
  4689  001C6C  EC84  F00E         	call	_lecturaWifi	;wreg free
  4690  001C70                     
  4691                           ;main.c: 778:     if (peticionLecturaSensores) {
  4692  001C70  0100               	movlb	0	; () banked
  4693  001C72  51F3               	movf	_peticionLecturaSensores& (0+255),w,b
  4694  001C74  B4D8               	btfsc	status,2,c
  4695  001C76  EF3F  F00E         	goto	u3401
  4696  001C7A  EF41  F00E         	goto	u3400
  4697  001C7E                     u3401:
  4698  001C7E  EF80  F00E         	goto	l4286
  4699  001C82                     u3400:
  4700  001C82                     
  4701                           ; BSR set to: 0
  4702                           ;main.c: 780:         for (int i = 0; i < 3; i++) {
  4703  001C82  0E00               	movlw	0
  4704  001C84  0101               	movlb	1	; () banked
  4705  001C86  6F67               	movwf	(mostrarDatosSensoresWIFI@i+1)& (0+255),b
  4706  001C88  0E00               	movlw	0
  4707  001C8A  6F66               	movwf	mostrarDatosSensoresWIFI@i& (0+255),b
  4708  001C8C                     l4278:
  4709                           
  4710                           ; BSR set to: 1
  4711                           ;main.c: 782:             sprintf(bufferSensor, "\r\n\nPorcentaje Humedad del sensor %d:
      +                           %d %c\r\n"
  4712  001C8C  0E00               	movlw	low mostrarDatosSensoresWIFI@bufferSensor
  4713  001C8E  0100               	movlb	0	; () banked
  4714  001C90  6F60               	movwf	sprintf@s& (0+255),b
  4715  001C92  0E01               	movlw	high mostrarDatosSensoresWIFI@bufferSensor
  4716  001C94  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4717  001C96  0E9A               	movlw	low STR_38
  4718  001C98  6F62               	movwf	sprintf@fmt& (0+255),b
  4719  001C9A  0E7C               	movlw	high STR_38
  4720  001C9C  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4721  001C9E  C166  F064         	movff	mostrarDatosSensoresWIFI@i,?_sprintf+4
  4722  001CA2  C167  F065         	movff	mostrarDatosSensoresWIFI@i+1,?_sprintf+5
  4723  001CA6  90D8               	bcf	status,0,c
  4724  001CA8  0101               	movlb	1	; () banked
  4725  001CAA  3566               	rlcf	mostrarDatosSensoresWIFI@i& (0+255),w,b
  4726  001CAC  6ED9               	movwf	fsr2l,c
  4727  001CAE  3567               	rlcf	(mostrarDatosSensoresWIFI@i+1)& (0+255),w,b
  4728  001CB0  6EDA               	movwf	fsr2h,c
  4729  001CB2  0E68               	movlw	low _sensores
  4730  001CB4  26D9               	addwf	fsr2l,f,c
  4731  001CB6  0E01               	movlw	high _sensores
  4732  001CB8  22DA               	addwfc	fsr2h,f,c
  4733  001CBA  50DF               	movf	indf2,w,c
  4734  001CBC  0100               	movlb	0	; () banked
  4735  001CBE  6FAC               	movwf	??_mostrarDatosSensoresWIFI& (0+255),b
  4736  001CC0  51AC               	movf	??_mostrarDatosSensoresWIFI& (0+255),w,b
  4737  001CC2  6F66               	movwf	(?_sprintf+6)& (0+255),b
  4738  001CC4  6B67               	clrf	(?_sprintf+7)& (0+255),b
  4739  001CC6  0E00               	movlw	0
  4740  001CC8  6F69               	movwf	(?_sprintf+9)& (0+255),b
  4741  001CCA  0E25               	movlw	37
  4742  001CCC  6F68               	movwf	(?_sprintf+8)& (0+255),b
  4743  001CCE  EC7B  F015         	call	_sprintf	;wreg free
  4744  001CD2                     
  4745                           ;main.c: 784:             UART_printf(bufferSensor);
  4746  001CD2  0E00               	movlw	low mostrarDatosSensoresWIFI@bufferSensor
  4747  001CD4  6E02               	movwf	UART_printf@cadena^0,c
  4748  001CD6  0E01               	movlw	high mostrarDatosSensoresWIFI@bufferSensor
  4749  001CD8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4750  001CDA  EC95  F014         	call	_UART_printf	;wreg free
  4751  001CDE                     
  4752                           ;main.c: 786:         }
  4753  001CDE  0101               	movlb	1	; () banked
  4754  001CE0  4B66               	infsnz	mostrarDatosSensoresWIFI@i& (0+255),f,b
  4755  001CE2  2B67               	incf	(mostrarDatosSensoresWIFI@i+1)& (0+255),f,b
  4756  001CE4                     
  4757                           ; BSR set to: 1
  4758  001CE4  BF67               	btfsc	(mostrarDatosSensoresWIFI@i+1)& (0+255),7,b
  4759  001CE6  EF7E  F00E         	goto	u3411
  4760  001CEA  5167               	movf	(mostrarDatosSensoresWIFI@i+1)& (0+255),w,b
  4761  001CEC  E109               	bnz	u3410
  4762  001CEE  0E03               	movlw	3
  4763  001CF0  5D66               	subwf	mostrarDatosSensoresWIFI@i& (0+255),w,b
  4764  001CF2  A0D8               	btfss	status,0,c
  4765  001CF4  EF7E  F00E         	goto	u3411
  4766  001CF8  EF80  F00E         	goto	u3410
  4767  001CFC                     u3411:
  4768  001CFC  EF46  F00E         	goto	l4278
  4769  001D00                     u3410:
  4770  001D00                     l4286:
  4771                           
  4772                           ;main.c: 790:     UART_write('I');
  4773  001D00  0E49               	movlw	73
  4774  001D02  ECAE  F017         	call	_UART_write
  4775  001D06  0012               	return		;funcret
  4776  001D08                     __end_of_mostrarDatosSensoresWIFI:
  4777                           	opt callstack 0
  4778                           
  4779 ;; *************** function _lecturaWifi *****************
  4780 ;; Defined at:
  4781 ;;		line 487 in file "main.c"
  4782 ;; Parameters:    Size  Location     Type
  4783 ;;		None
  4784 ;; Auto vars:     Size  Location     Type
  4785 ;;  i               2   74[BANK0 ] int 
  4786 ;;  buffer         50   22[BANK0 ] unsigned char [50]
  4787 ;;  humedadMedid    1   73[BANK0 ] unsigned char 
  4788 ;;  Rx              1   72[BANK0 ] unsigned char 
  4789 ;; Return value:  Size  Location     Type
  4790 ;;                  1    wreg      void 
  4791 ;; Registers used:
  4792 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4793 ;; Tracked objects:
  4794 ;;		On entry : 0/0
  4795 ;;		On exit  : 0/0
  4796 ;;		Unchanged: 0/0
  4797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4798 ;;      Params:         0       0       0       0       0       0       0       0       0
  4799 ;;      Locals:         0      54       0       0       0       0       0       0       0
  4800 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4801 ;;      Totals:         0      54       0       0       0       0       0       0       0
  4802 ;;Total ram usage:       54 bytes
  4803 ;; Hardware stack levels used:    1
  4804 ;; Hardware stack levels required when called:    9
  4805 ;; This function calls:
  4806 ;;		_UART_printf
  4807 ;;		_UART_read
  4808 ;;		_UART_write
  4809 ;;		_getValue
  4810 ;;		_restablecerDatosSensor
  4811 ;;		_sprintf
  4812 ;; This function is called by:
  4813 ;;		_sistemaRegado
  4814 ;;		_mostrarDatosSensoresWIFI
  4815 ;; This function uses a non-reentrant model
  4816 ;;
  4817                           
  4818                           	psect	text14
  4819  001D08                     __ptext14:
  4820                           	opt callstack 0
  4821  001D08                     _lecturaWifi:
  4822                           	opt callstack 20
  4823  001D08                     
  4824                           ;main.c: 489:     PIE1bits.RCIE = 0;
  4825  001D08  9A9D               	bcf	157,5,c	;volatile
  4826  001D0A                     
  4827                           ;main.c: 492:     char buffer[50];;main.c: 494:     restablecerDatosSensor();
  4828  001D0A  ECCD  F015         	call	_restablecerDatosSensor	;wreg free
  4829  001D0E                     
  4830                           ;main.c: 496:     UART_write('R');
  4831  001D0E  0E52               	movlw	82
  4832  001D10  ECAE  F017         	call	_UART_write
  4833  001D14                     
  4834                           ;main.c: 498:     UART_printf("\r\nSolicitando Muestreo de sensores\r\n\n");
  4835  001D14  0E1C               	movlw	low STR_18
  4836  001D16  6E02               	movwf	UART_printf@cadena^0,c
  4837  001D18  0E7D               	movlw	high STR_18
  4838  001D1A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4839  001D1C  EC95  F014         	call	_UART_printf	;wreg free
  4840  001D20                     
  4841                           ;main.c: 500:     Rx = UART_read();
  4842  001D20  EC20  F015         	call	_UART_read	;wreg free
  4843  001D24  0100               	movlb	0	; () banked
  4844  001D26  6FA8               	movwf	lecturaWifi@Rx& (0+255),b
  4845  001D28                     
  4846                           ; BSR set to: 0
  4847                           ;main.c: 502:     if (Rx == 'O') {
  4848  001D28  0E4F               	movlw	79
  4849  001D2A  19A8               	xorwf	lecturaWifi@Rx& (0+255),w,b
  4850  001D2C  A4D8               	btfss	status,2,c
  4851  001D2E  EF9B  F00E         	goto	u3111
  4852  001D32  EF9D  F00E         	goto	u3110
  4853  001D36                     u3111:
  4854  001D36  EFF8  F00E         	goto	l4012
  4855  001D3A                     u3110:
  4856  001D3A                     
  4857                           ; BSR set to: 0
  4858                           ;main.c: 504:         peticionLecturaSensores = 1;
  4859  001D3A  0E01               	movlw	1
  4860  001D3C  6FF3               	movwf	_peticionLecturaSensores& (0+255),b
  4861                           
  4862                           ;main.c: 506:         for (int i = 0; i < 3; i++) {
  4863  001D3E  0E00               	movlw	0
  4864  001D40  6FAB               	movwf	(lecturaWifi@i+1)& (0+255),b
  4865  001D42  0E00               	movlw	0
  4866  001D44  6FAA               	movwf	lecturaWifi@i& (0+255),b
  4867  001D46                     l3994:
  4868                           
  4869                           ; BSR set to: 0
  4870                           ;main.c: 508:             sprintf(buffer, "\r\nIngrese el porcentaje de humedad del sens
      +                          or %d\r\n", i);
  4871  001D46  0E76               	movlw	low lecturaWifi@buffer
  4872  001D48  6F60               	movwf	sprintf@s& (0+255),b
  4873  001D4A  0E00               	movlw	high lecturaWifi@buffer
  4874  001D4C  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4875  001D4E  0E36               	movlw	low STR_19
  4876  001D50  6F62               	movwf	sprintf@fmt& (0+255),b
  4877  001D52  0E7C               	movlw	high STR_19
  4878  001D54  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4879  001D56  C0AA  F064         	movff	lecturaWifi@i,?_sprintf+4
  4880  001D5A  C0AB  F065         	movff	lecturaWifi@i+1,?_sprintf+5
  4881  001D5E  EC7B  F015         	call	_sprintf	;wreg free
  4882  001D62                     
  4883                           ;main.c: 509:             UART_printf(buffer);
  4884  001D62  0E76               	movlw	low lecturaWifi@buffer
  4885  001D64  6E02               	movwf	UART_printf@cadena^0,c
  4886  001D66  0E00               	movlw	high lecturaWifi@buffer
  4887  001D68  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4888  001D6A  EC95  F014         	call	_UART_printf	;wreg free
  4889  001D6E                     
  4890                           ;main.c: 511:             humedadMedida = getValue(3);
  4891  001D6E  0E00               	movlw	0
  4892  001D70  6E05               	movwf	(getValue@numCharacters+1)^0,c
  4893  001D72  0E03               	movlw	3
  4894  001D74  6E04               	movwf	getValue@numCharacters^0,c
  4895  001D76  EC7F  F004         	call	_getValue	;wreg free
  4896  001D7A  0100               	movlb	0	; () banked
  4897  001D7C  6FA9               	movwf	lecturaWifi@humedadMedida& (0+255),b
  4898  001D7E                     
  4899                           ; BSR set to: 0
  4900                           ;main.c: 513:             if (humedadMedida != '@')
  4901  001D7E  0E40               	movlw	64
  4902  001D80  19A9               	xorwf	lecturaWifi@humedadMedida& (0+255),w,b
  4903  001D82  B4D8               	btfsc	status,2,c
  4904  001D84  EFC6  F00E         	goto	u3121
  4905  001D88  EFC8  F00E         	goto	u3120
  4906  001D8C                     u3121:
  4907  001D8C  EFD5  F00E         	goto	l4004
  4908  001D90                     u3120:
  4909  001D90                     
  4910                           ; BSR set to: 0
  4911                           ;main.c: 514:                 sensores[i].porcientoHumedad = humedadMedida;
  4912  001D90  90D8               	bcf	status,0,c
  4913  001D92  35AA               	rlcf	lecturaWifi@i& (0+255),w,b
  4914  001D94  6ED9               	movwf	fsr2l,c
  4915  001D96  35AB               	rlcf	(lecturaWifi@i+1)& (0+255),w,b
  4916  001D98  6EDA               	movwf	fsr2h,c
  4917  001D9A  0E68               	movlw	low _sensores
  4918  001D9C  26D9               	addwf	fsr2l,f,c
  4919  001D9E  0E01               	movlw	high _sensores
  4920  001DA0  22DA               	addwfc	fsr2h,f,c
  4921  001DA2  C0A9  FFDF         	movff	lecturaWifi@humedadMedida,indf2
  4922  001DA6  EFE0  F00E         	goto	l4006
  4923  001DAA                     l4004:
  4924                           
  4925                           ; BSR set to: 0
  4926                           ;main.c: 516:                 sensores[i].porcientoHumedad = 100;
  4927  001DAA  90D8               	bcf	status,0,c
  4928  001DAC  35AA               	rlcf	lecturaWifi@i& (0+255),w,b
  4929  001DAE  6ED9               	movwf	fsr2l,c
  4930  001DB0  35AB               	rlcf	(lecturaWifi@i+1)& (0+255),w,b
  4931  001DB2  6EDA               	movwf	fsr2h,c
  4932  001DB4  0E68               	movlw	low _sensores
  4933  001DB6  26D9               	addwf	fsr2l,f,c
  4934  001DB8  0E01               	movlw	high _sensores
  4935  001DBA  22DA               	addwfc	fsr2h,f,c
  4936  001DBC  0E64               	movlw	100
  4937  001DBE  6EDF               	movwf	indf2,c
  4938  001DC0                     l4006:
  4939                           
  4940                           ; BSR set to: 0
  4941                           ;main.c: 518:         }
  4942  001DC0  4BAA               	infsnz	lecturaWifi@i& (0+255),f,b
  4943  001DC2  2BAB               	incf	(lecturaWifi@i+1)& (0+255),f,b
  4944  001DC4                     
  4945                           ; BSR set to: 0
  4946  001DC4  BFAB               	btfsc	(lecturaWifi@i+1)& (0+255),7,b
  4947  001DC6  EFEE  F00E         	goto	u3131
  4948  001DCA  51AB               	movf	(lecturaWifi@i+1)& (0+255),w,b
  4949  001DCC  E109               	bnz	u3130
  4950  001DCE  0E03               	movlw	3
  4951  001DD0  5DAA               	subwf	lecturaWifi@i& (0+255),w,b
  4952  001DD2  A0D8               	btfss	status,0,c
  4953  001DD4  EFEE  F00E         	goto	u3131
  4954  001DD8  EFF0  F00E         	goto	u3130
  4955  001DDC                     u3131:
  4956  001DDC  EFA3  F00E         	goto	l3994
  4957  001DE0                     u3130:
  4958  001DE0                     
  4959                           ; BSR set to: 0
  4960                           ;main.c: 520:         UART_printf("\r\nSensores Leidos con Exito!\r\n\n");
  4961  001DE0  0E41               	movlw	low STR_20
  4962  001DE2  6E02               	movwf	UART_printf@cadena^0,c
  4963  001DE4  0E7E               	movlw	high STR_20
  4964  001DE6  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4965  001DE8  EC95  F014         	call	_UART_printf	;wreg free
  4966                           
  4967                           ;main.c: 522:     } else {
  4968  001DEC  EFFA  F00E         	goto	l4014
  4969  001DF0                     l4012:
  4970                           
  4971                           ; BSR set to: 0
  4972                           ;main.c: 523:         peticionLecturaSensores = 0;
  4973  001DF0  0E00               	movlw	0
  4974  001DF2  6FF3               	movwf	_peticionLecturaSensores& (0+255),b
  4975  001DF4                     l4014:
  4976                           
  4977                           ;main.c: 526:     PIE1bits.RCIE = 1;
  4978  001DF4  8A9D               	bsf	157,5,c	;volatile
  4979  001DF6  0012               	return		;funcret
  4980  001DF8                     __end_of_lecturaWifi:
  4981                           	opt callstack 0
  4982                           
  4983 ;; *************** function _restablecerDatosSensor *****************
  4984 ;; Defined at:
  4985 ;;		line 482 in file "main.c"
  4986 ;; Parameters:    Size  Location     Type
  4987 ;;		None
  4988 ;; Auto vars:     Size  Location     Type
  4989 ;;  i               2    4[COMRAM] int 
  4990 ;; Return value:  Size  Location     Type
  4991 ;;                  1    wreg      void 
  4992 ;; Registers used:
  4993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4994 ;; Tracked objects:
  4995 ;;		On entry : 0/0
  4996 ;;		On exit  : 0/0
  4997 ;;		Unchanged: 0/0
  4998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4999 ;;      Params:         0       0       0       0       0       0       0       0       0
  5000 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5001 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5002 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5003 ;;Total ram usage:        2 bytes
  5004 ;; Hardware stack levels used:    1
  5005 ;; Hardware stack levels required when called:    2
  5006 ;; This function calls:
  5007 ;;		_constructorSensor
  5008 ;; This function is called by:
  5009 ;;		_lecturaWifi
  5010 ;;		_main
  5011 ;; This function uses a non-reentrant model
  5012 ;;
  5013                           
  5014                           	psect	text15
  5015  002B9A                     __ptext15:
  5016                           	opt callstack 0
  5017  002B9A                     _restablecerDatosSensor:
  5018                           	opt callstack 26
  5019  002B9A                     
  5020                           ;main.c: 483:     for (int i = 0; i < 3; i++)
  5021  002B9A  0E00               	movlw	0
  5022  002B9C  6E06               	movwf	(restablecerDatosSensor@i+1)^0,c
  5023  002B9E  0E00               	movlw	0
  5024  002BA0  6E05               	movwf	restablecerDatosSensor@i^0,c
  5025  002BA2                     l3812:
  5026                           
  5027                           ;main.c: 484:         constructorSensor(sensores[i], 0, i);
  5028  002BA2  90D8               	bcf	status,0,c
  5029  002BA4  3405               	rlcf	restablecerDatosSensor@i^0,w,c
  5030  002BA6  6ED9               	movwf	fsr2l,c
  5031  002BA8  3406               	rlcf	(restablecerDatosSensor@i+1)^0,w,c
  5032  002BAA  6EDA               	movwf	fsr2h,c
  5033  002BAC  0E68               	movlw	low _sensores
  5034  002BAE  26D9               	addwf	fsr2l,f,c
  5035  002BB0  0E01               	movlw	high _sensores
  5036  002BB2  22DA               	addwfc	fsr2h,f,c
  5037  002BB4  CFDE F001          	movff	postinc2,constructorSensor@s
  5038  002BB8  CFDD F002          	movff	postdec2,constructorSensor@s+1
  5039  002BBC  0E00               	movlw	0
  5040  002BBE  6E03               	movwf	constructorSensor@porcientoHumedad^0,c
  5041  002BC0  C005  F004         	movff	restablecerDatosSensor@i,constructorSensor@pin
  5042  002BC4  ECD8  F017         	call	_constructorSensor	;wreg free
  5043  002BC8  4A05               	infsnz	restablecerDatosSensor@i^0,f,c
  5044  002BCA  2A06               	incf	(restablecerDatosSensor@i+1)^0,f,c
  5045  002BCC  BE06               	btfsc	(restablecerDatosSensor@i+1)^0,7,c
  5046  002BCE  EFF2  F015         	goto	u2931
  5047  002BD2  5006               	movf	(restablecerDatosSensor@i+1)^0,w,c
  5048  002BD4  E109               	bnz	u2930
  5049  002BD6  0E03               	movlw	3
  5050  002BD8  5C05               	subwf	restablecerDatosSensor@i^0,w,c
  5051  002BDA  A0D8               	btfss	status,0,c
  5052  002BDC  EFF2  F015         	goto	u2931
  5053  002BE0  EFF4  F015         	goto	u2930
  5054  002BE4                     u2931:
  5055  002BE4  EFD1  F015         	goto	l3812
  5056  002BE8                     u2930:
  5057  002BE8  0012               	return		;funcret
  5058  002BEA                     __end_of_restablecerDatosSensor:
  5059                           	opt callstack 0
  5060                           
  5061 ;; *************** function _constructorSensor *****************
  5062 ;; Defined at:
  5063 ;;		line 133 in file "main.c"
  5064 ;; Parameters:    Size  Location     Type
  5065 ;;  s               2    0[COMRAM] struct .
  5066 ;;  porcientoHum    1    2[COMRAM] unsigned char 
  5067 ;;  pin             1    3[COMRAM] unsigned char 
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;		None
  5070 ;; Return value:  Size  Location     Type
  5071 ;;                  1    wreg      void 
  5072 ;; Registers used:
  5073 ;;		None
  5074 ;; Tracked objects:
  5075 ;;		On entry : 0/0
  5076 ;;		On exit  : 0/0
  5077 ;;		Unchanged: 0/0
  5078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5079 ;;      Params:         4       0       0       0       0       0       0       0       0
  5080 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5081 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5082 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5083 ;;Total ram usage:        4 bytes
  5084 ;; Hardware stack levels used:    1
  5085 ;; Hardware stack levels required when called:    1
  5086 ;; This function calls:
  5087 ;;		Nothing
  5088 ;; This function is called by:
  5089 ;;		_restablecerDatosSensor
  5090 ;; This function uses a non-reentrant model
  5091 ;;
  5092                           
  5093                           	psect	text16
  5094  002FB0                     __ptext16:
  5095                           	opt callstack 0
  5096  002FB0                     _constructorSensor:
  5097                           	opt callstack 26
  5098  002FB0                     
  5099                           ;main.c: 134:     s.porcientoHumedad = porcientoHumedad;
  5100  002FB0  C003  F001         	movff	constructorSensor@porcientoHumedad,constructorSensor@s
  5101                           
  5102                           ;main.c: 135:     s.pinSensor = pin;
  5103  002FB4  C004  F002         	movff	constructorSensor@pin,constructorSensor@s+1
  5104  002FB8  0012               	return		;funcret
  5105  002FBA                     __end_of_constructorSensor:
  5106                           	opt callstack 0
  5107                           
  5108 ;; *************** function _mostrarDatosSensores *****************
  5109 ;; Defined at:
  5110 ;;		line 730 in file "main.c"
  5111 ;; Parameters:    Size  Location     Type
  5112 ;;		None
  5113 ;; Auto vars:     Size  Location     Type
  5114 ;;  i               2   75[BANK0 ] int 
  5115 ;;  buffer         50   23[BANK0 ] unsigned char [50]
  5116 ;;  humedad         1   74[BANK0 ] unsigned char 
  5117 ;;  temperatura     1   73[BANK0 ] unsigned char 
  5118 ;; Return value:  Size  Location     Type
  5119 ;;                  1    wreg      void 
  5120 ;; Registers used:
  5121 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5122 ;; Tracked objects:
  5123 ;;		On entry : 0/0
  5124 ;;		On exit  : 0/0
  5125 ;;		Unchanged: 0/0
  5126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5127 ;;      Params:         0       0       0       0       0       0       0       0       0
  5128 ;;      Locals:         0      54       0       0       0       0       0       0       0
  5129 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5130 ;;      Totals:         0      55       0       0       0       0       0       0       0
  5131 ;;Total ram usage:       55 bytes
  5132 ;; Hardware stack levels used:    1
  5133 ;; Hardware stack levels required when called:    9
  5134 ;; This function calls:
  5135 ;;		_UART_printf
  5136 ;;		_UART_write
  5137 ;;		_dameTemperaturaHumedad
  5138 ;;		_lecturaAnalogaSensores
  5139 ;;		_sprintf
  5140 ;; This function is called by:
  5141 ;;		_sistemaPrincipal
  5142 ;; This function uses a non-reentrant model
  5143 ;;
  5144                           
  5145                           	psect	text17
  5146  001DF8                     __ptext17:
  5147                           	opt callstack 0
  5148  001DF8                     _mostrarDatosSensores:
  5149                           	opt callstack 20
  5150  001DF8                     
  5151                           ;main.c: 732:     char buffer[50];;main.c: 733:     unsigned char temperatura, humedad;;
      +                          main.c: 735:     dameTemperaturaHumedad(&humedad, &temperatura);
  5152  001DF8  0EAA               	movlw	low mostrarDatosSensores@humedad
  5153  001DFA  6E04               	movwf	dameTemperaturaHumedad@Humedad^0,c
  5154  001DFC  0E00               	movlw	high mostrarDatosSensores@humedad
  5155  001DFE  6E05               	movwf	(dameTemperaturaHumedad@Humedad+1)^0,c
  5156  001E00  0EA9               	movlw	low mostrarDatosSensores@temperatura
  5157  001E02  6E06               	movwf	dameTemperaturaHumedad@Temperatura^0,c
  5158  001E04  0E00               	movlw	high mostrarDatosSensores@temperatura
  5159  001E06  6E07               	movwf	(dameTemperaturaHumedad@Temperatura+1)^0,c
  5160  001E08  ECAF  F011         	call	_dameTemperaturaHumedad	;wreg free
  5161  001E0C                     
  5162                           ;main.c: 737:     UART_write('I');
  5163  001E0C  0E49               	movlw	73
  5164  001E0E  ECAE  F017         	call	_UART_write
  5165  001E12                     
  5166                           ;main.c: 740:     sprintf(buffer, "\r\n\nLa Humedad Ambiente es: %d\r\n", humedad);
  5167  001E12  0E77               	movlw	low mostrarDatosSensores@buffer
  5168  001E14  0100               	movlb	0	; () banked
  5169  001E16  6F60               	movwf	sprintf@s& (0+255),b
  5170  001E18  0E00               	movlw	high mostrarDatosSensores@buffer
  5171  001E1A  6F61               	movwf	(sprintf@s+1)& (0+255),b
  5172  001E1C  0E81               	movlw	low STR_36
  5173  001E1E  6F62               	movwf	sprintf@fmt& (0+255),b
  5174  001E20  0E7E               	movlw	high STR_36
  5175  001E22  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  5176  001E24  C0AA  F064         	movff	mostrarDatosSensores@humedad,?_sprintf+4
  5177  001E28  6B65               	clrf	(?_sprintf+5)& (0+255),b
  5178  001E2A  EC7B  F015         	call	_sprintf	;wreg free
  5179  001E2E                     
  5180                           ;main.c: 741:     UART_printf(buffer);
  5181  001E2E  0E77               	movlw	low mostrarDatosSensores@buffer
  5182  001E30  6E02               	movwf	UART_printf@cadena^0,c
  5183  001E32  0E00               	movlw	high mostrarDatosSensores@buffer
  5184  001E34  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5185  001E36  EC95  F014         	call	_UART_printf	;wreg free
  5186  001E3A                     
  5187                           ;main.c: 742:     sprintf(buffer, "\r\n\nLa Temperatura es: %d C\r\n", temperatura);
  5188  001E3A  0E77               	movlw	low mostrarDatosSensores@buffer
  5189  001E3C  0100               	movlb	0	; () banked
  5190  001E3E  6F60               	movwf	sprintf@s& (0+255),b
  5191  001E40  0E00               	movlw	high mostrarDatosSensores@buffer
  5192  001E42  6F61               	movwf	(sprintf@s+1)& (0+255),b
  5193  001E44  0EC0               	movlw	low STR_37
  5194  001E46  6F62               	movwf	sprintf@fmt& (0+255),b
  5195  001E48  0E7E               	movlw	high STR_37
  5196  001E4A  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  5197  001E4C  C0A9  F064         	movff	mostrarDatosSensores@temperatura,?_sprintf+4
  5198  001E50  6B65               	clrf	(?_sprintf+5)& (0+255),b
  5199  001E52  EC7B  F015         	call	_sprintf	;wreg free
  5200  001E56                     
  5201                           ;main.c: 743:     UART_printf(buffer);
  5202  001E56  0E77               	movlw	low mostrarDatosSensores@buffer
  5203  001E58  6E02               	movwf	UART_printf@cadena^0,c
  5204  001E5A  0E00               	movlw	high mostrarDatosSensores@buffer
  5205  001E5C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5206  001E5E  EC95  F014         	call	_UART_printf	;wreg free
  5207  001E62                     
  5208                           ;main.c: 745:     lecturaAnalogaSensores();
  5209  001E62  EC59  F011         	call	_lecturaAnalogaSensores	;wreg free
  5210  001E66                     
  5211                           ;main.c: 748:     for (int i = 0; i < 3; i++) {
  5212  001E66  0E00               	movlw	0
  5213  001E68  0100               	movlb	0	; () banked
  5214  001E6A  6FAC               	movwf	(mostrarDatosSensores@i+1)& (0+255),b
  5215  001E6C  0E00               	movlw	0
  5216  001E6E  6FAB               	movwf	mostrarDatosSensores@i& (0+255),b
  5217  001E70                     l4308:
  5218                           
  5219                           ; BSR set to: 0
  5220                           ;main.c: 750:         sprintf(buffer, "\r\n\nPorcentaje Humedad del sensor %d: %d %c\r\n
      +                          "
  5221  001E70  0E77               	movlw	low mostrarDatosSensores@buffer
  5222  001E72  6F60               	movwf	sprintf@s& (0+255),b
  5223  001E74  0E00               	movlw	high mostrarDatosSensores@buffer
  5224  001E76  6F61               	movwf	(sprintf@s+1)& (0+255),b
  5225  001E78  0E9A               	movlw	low STR_38
  5226  001E7A  6F62               	movwf	sprintf@fmt& (0+255),b
  5227  001E7C  0E7C               	movlw	high STR_38
  5228  001E7E  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  5229  001E80  C0AB  F064         	movff	mostrarDatosSensores@i,?_sprintf+4
  5230  001E84  C0AC  F065         	movff	mostrarDatosSensores@i+1,?_sprintf+5
  5231  001E88  90D8               	bcf	status,0,c
  5232  001E8A  35AB               	rlcf	mostrarDatosSensores@i& (0+255),w,b
  5233  001E8C  6ED9               	movwf	fsr2l,c
  5234  001E8E  35AC               	rlcf	(mostrarDatosSensores@i+1)& (0+255),w,b
  5235  001E90  6EDA               	movwf	fsr2h,c
  5236  001E92  0E68               	movlw	low _sensores
  5237  001E94  26D9               	addwf	fsr2l,f,c
  5238  001E96  0E01               	movlw	high _sensores
  5239  001E98  22DA               	addwfc	fsr2h,f,c
  5240  001E9A  50DF               	movf	indf2,w,c
  5241  001E9C  6F76               	movwf	??_mostrarDatosSensores& (0+255),b
  5242  001E9E  5176               	movf	??_mostrarDatosSensores& (0+255),w,b
  5243  001EA0  6F66               	movwf	(?_sprintf+6)& (0+255),b
  5244  001EA2  6B67               	clrf	(?_sprintf+7)& (0+255),b
  5245  001EA4  0E00               	movlw	0
  5246  001EA6  6F69               	movwf	(?_sprintf+9)& (0+255),b
  5247  001EA8  0E25               	movlw	37
  5248  001EAA  6F68               	movwf	(?_sprintf+8)& (0+255),b
  5249  001EAC  EC7B  F015         	call	_sprintf	;wreg free
  5250  001EB0                     
  5251                           ;main.c: 752:         UART_printf(buffer);
  5252  001EB0  0E77               	movlw	low mostrarDatosSensores@buffer
  5253  001EB2  6E02               	movwf	UART_printf@cadena^0,c
  5254  001EB4  0E00               	movlw	high mostrarDatosSensores@buffer
  5255  001EB6  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5256  001EB8  EC95  F014         	call	_UART_printf	;wreg free
  5257  001EBC                     
  5258                           ;main.c: 753:     }
  5259  001EBC  0100               	movlb	0	; () banked
  5260  001EBE  4BAB               	infsnz	mostrarDatosSensores@i& (0+255),f,b
  5261  001EC0  2BAC               	incf	(mostrarDatosSensores@i+1)& (0+255),f,b
  5262  001EC2                     
  5263                           ; BSR set to: 0
  5264  001EC2  BFAC               	btfsc	(mostrarDatosSensores@i+1)& (0+255),7,b
  5265  001EC4  EF6D  F00F         	goto	u3421
  5266  001EC8  51AC               	movf	(mostrarDatosSensores@i+1)& (0+255),w,b
  5267  001ECA  E109               	bnz	u3420
  5268  001ECC  0E03               	movlw	3
  5269  001ECE  5DAB               	subwf	mostrarDatosSensores@i& (0+255),w,b
  5270  001ED0  A0D8               	btfss	status,0,c
  5271  001ED2  EF6D  F00F         	goto	u3421
  5272  001ED6  EF6F  F00F         	goto	u3420
  5273  001EDA                     u3421:
  5274  001EDA  EF38  F00F         	goto	l4308
  5275  001EDE                     u3420:
  5276  001EDE                     
  5277                           ; BSR set to: 0
  5278                           ;main.c: 755:     UART_write('I');
  5279  001EDE  0E49               	movlw	73
  5280  001EE0  ECAE  F017         	call	_UART_write
  5281  001EE4  0012               	return		;funcret
  5282  001EE6                     __end_of_mostrarDatosSensores:
  5283                           	opt callstack 0
  5284                           
  5285 ;; *************** function _lecturaAnalogaSensores *****************
  5286 ;; Defined at:
  5287 ;;		line 530 in file "main.c"
  5288 ;; Parameters:    Size  Location     Type
  5289 ;;		None
  5290 ;; Auto vars:     Size  Location     Type
  5291 ;;  i               2   47[COMRAM] int 
  5292 ;; Return value:  Size  Location     Type
  5293 ;;                  1    wreg      void 
  5294 ;; Registers used:
  5295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5296 ;; Tracked objects:
  5297 ;;		On entry : 0/0
  5298 ;;		On exit  : 0/0
  5299 ;;		Unchanged: 0/0
  5300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5301 ;;      Params:         0       0       0       0       0       0       0       0       0
  5302 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5303 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5304 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5305 ;;Total ram usage:        3 bytes
  5306 ;; Hardware stack levels used:    1
  5307 ;; Hardware stack levels required when called:    3
  5308 ;; This function calls:
  5309 ;;		_dameHumedadSuelo
  5310 ;;		_map
  5311 ;; This function is called by:
  5312 ;;		_sistemaRegado
  5313 ;;		_mostrarDatosSensores
  5314 ;; This function uses a non-reentrant model
  5315 ;;
  5316                           
  5317                           	psect	text18
  5318  0022B2                     __ptext18:
  5319                           	opt callstack 0
  5320  0022B2                     _lecturaAnalogaSensores:
  5321                           	opt callstack 26
  5322  0022B2                     
  5323                           ;main.c: 532:     for (int i = 0; i < 3; i++) {
  5324  0022B2  0E00               	movlw	0
  5325  0022B4  6E31               	movwf	(lecturaAnalogaSensores@i+1)^0,c
  5326  0022B6  0E00               	movlw	0
  5327  0022B8  6E30               	movwf	lecturaAnalogaSensores@i^0,c
  5328  0022BA                     l4022:
  5329                           
  5330                           ;main.c: 533:         sensores[i].porcientoHumedad = map(dameHumedadSuelo(i), 0, 1023, 1
      +                          00, 0);
  5331  0022BA  90D8               	bcf	status,0,c
  5332  0022BC  3430               	rlcf	lecturaAnalogaSensores@i^0,w,c
  5333  0022BE  6ED9               	movwf	fsr2l,c
  5334  0022C0  3431               	rlcf	(lecturaAnalogaSensores@i+1)^0,w,c
  5335  0022C2  6EDA               	movwf	fsr2h,c
  5336  0022C4  0E68               	movlw	low _sensores
  5337  0022C6  26D9               	addwf	fsr2l,f,c
  5338  0022C8  0E01               	movlw	high _sensores
  5339  0022CA  22DA               	addwfc	fsr2h,f,c
  5340  0022CC  5030               	movf	lecturaAnalogaSensores@i^0,w,c
  5341  0022CE  ECF5  F015         	call	_dameHumedadSuelo
  5342  0022D2  C001  F01B         	movff	?_dameHumedadSuelo,map@x
  5343  0022D6  C002  F01C         	movff	?_dameHumedadSuelo+1,map@x+1
  5344  0022DA  0E00               	movlw	0
  5345  0022DC  BE1C               	btfsc	(map@x+1)^0,7,c
  5346  0022DE  0EFF               	movlw	-1
  5347  0022E0  6E1D               	movwf	(map@x+2)^0,c
  5348  0022E2  6E1E               	movwf	(map@x+3)^0,c
  5349  0022E4  0E00               	movlw	0
  5350  0022E6  6E1F               	movwf	map@in_min^0,c
  5351  0022E8  0E00               	movlw	0
  5352  0022EA  6E20               	movwf	(map@in_min+1)^0,c
  5353  0022EC  0E00               	movlw	0
  5354  0022EE  6E21               	movwf	(map@in_min+2)^0,c
  5355  0022F0  0E00               	movlw	0
  5356  0022F2  6E22               	movwf	(map@in_min+3)^0,c
  5357  0022F4  0EFF               	movlw	255
  5358  0022F6  6E23               	movwf	map@in_max^0,c
  5359  0022F8  0E03               	movlw	3
  5360  0022FA  6E24               	movwf	(map@in_max+1)^0,c
  5361  0022FC  0E00               	movlw	0
  5362  0022FE  6E25               	movwf	(map@in_max+2)^0,c
  5363  002300  0E00               	movlw	0
  5364  002302  6E26               	movwf	(map@in_max+3)^0,c
  5365  002304  0E64               	movlw	100
  5366  002306  6E27               	movwf	map@out_min^0,c
  5367  002308  0E00               	movlw	0
  5368  00230A  6E28               	movwf	(map@out_min+1)^0,c
  5369  00230C  0E00               	movlw	0
  5370  00230E  6E29               	movwf	(map@out_min+2)^0,c
  5371  002310  0E00               	movlw	0
  5372  002312  6E2A               	movwf	(map@out_min+3)^0,c
  5373  002314  0E00               	movlw	0
  5374  002316  6E2B               	movwf	map@out_max^0,c
  5375  002318  0E00               	movlw	0
  5376  00231A  6E2C               	movwf	(map@out_max+1)^0,c
  5377  00231C  0E00               	movlw	0
  5378  00231E  6E2D               	movwf	(map@out_max+2)^0,c
  5379  002320  0E00               	movlw	0
  5380  002322  6E2E               	movwf	(map@out_max+3)^0,c
  5381  002324  EC1B  F013         	call	_map	;wreg free
  5382  002328  501B               	movf	?_map^0,w,c
  5383  00232A  6EDF               	movwf	indf2,c
  5384  00232C                     
  5385                           ;main.c: 534:         _delay((unsigned long)((5)*(4000000/4000.0)));
  5386  00232C  0E07               	movlw	7
  5387  00232E  6E2F               	movwf	??_lecturaAnalogaSensores^0,c
  5388  002330  0E7D               	movlw	125
  5389  002332                     u3697:
  5390  002332  2EE8               	decfsz	wreg,f,c
  5391  002334  D7FE               	bra	u3697
  5392  002336  2E2F               	decfsz	??_lecturaAnalogaSensores^0,f,c
  5393  002338  D7FC               	bra	u3697
  5394  00233A  F000               	nop	
  5395  00233C                     
  5396                           ;main.c: 535:     }
  5397  00233C  4A30               	infsnz	lecturaAnalogaSensores@i^0,f,c
  5398  00233E  2A31               	incf	(lecturaAnalogaSensores@i+1)^0,f,c
  5399  002340  BE31               	btfsc	(lecturaAnalogaSensores@i+1)^0,7,c
  5400  002342  EFAC  F011         	goto	u3141
  5401  002346  5031               	movf	(lecturaAnalogaSensores@i+1)^0,w,c
  5402  002348  E109               	bnz	u3140
  5403  00234A  0E03               	movlw	3
  5404  00234C  5C30               	subwf	lecturaAnalogaSensores@i^0,w,c
  5405  00234E  A0D8               	btfss	status,0,c
  5406  002350  EFAC  F011         	goto	u3141
  5407  002354  EFAE  F011         	goto	u3140
  5408  002358                     u3141:
  5409  002358  EF5D  F011         	goto	l4022
  5410  00235C                     u3140:
  5411  00235C  0012               	return		;funcret
  5412  00235E                     __end_of_lecturaAnalogaSensores:
  5413                           	opt callstack 0
  5414                           
  5415 ;; *************** function _map *****************
  5416 ;; Defined at:
  5417 ;;		line 129 in file "main.c"
  5418 ;; Parameters:    Size  Location     Type
  5419 ;;  x               4   26[COMRAM] long 
  5420 ;;  in_min          4   30[COMRAM] long 
  5421 ;;  in_max          4   34[COMRAM] long 
  5422 ;;  out_min         4   38[COMRAM] long 
  5423 ;;  out_max         4   42[COMRAM] long 
  5424 ;; Auto vars:     Size  Location     Type
  5425 ;;		None
  5426 ;; Return value:  Size  Location     Type
  5427 ;;                  4   26[COMRAM] long 
  5428 ;; Registers used:
  5429 ;;		wreg, status,2, status,0, cstack
  5430 ;; Tracked objects:
  5431 ;;		On entry : 0/0
  5432 ;;		On exit  : 0/0
  5433 ;;		Unchanged: 0/0
  5434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5435 ;;      Params:        20       0       0       0       0       0       0       0       0
  5436 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5437 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5438 ;;      Totals:        20       0       0       0       0       0       0       0       0
  5439 ;;Total ram usage:       20 bytes
  5440 ;; Hardware stack levels used:    1
  5441 ;; Hardware stack levels required when called:    2
  5442 ;; This function calls:
  5443 ;;		___aldiv
  5444 ;;		___lmul
  5445 ;; This function is called by:
  5446 ;;		_lecturaAnalogaSensores
  5447 ;; This function uses a non-reentrant model
  5448 ;;
  5449                           
  5450                           	psect	text19
  5451  002636                     __ptext19:
  5452                           	opt callstack 0
  5453  002636                     _map:
  5454                           	opt callstack 26
  5455  002636                     
  5456                           ;main.c: 130:     return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_mi
      +                          n;
  5457  002636  501F               	movf	map@in_min^0,w,c
  5458  002638  5C1B               	subwf	map@x^0,w,c
  5459  00263A  6E01               	movwf	___lmul@multiplier^0,c
  5460  00263C  5020               	movf	(map@in_min+1)^0,w,c
  5461  00263E  581C               	subwfb	(map@x+1)^0,w,c
  5462  002640  6E02               	movwf	(___lmul@multiplier+1)^0,c
  5463  002642  5021               	movf	(map@in_min+2)^0,w,c
  5464  002644  581D               	subwfb	(map@x+2)^0,w,c
  5465  002646  6E03               	movwf	(___lmul@multiplier+2)^0,c
  5466  002648  5022               	movf	(map@in_min+3)^0,w,c
  5467  00264A  581E               	subwfb	(map@x+3)^0,w,c
  5468  00264C  6E04               	movwf	(___lmul@multiplier+3)^0,c
  5469  00264E  5027               	movf	map@out_min^0,w,c
  5470  002650  5C2B               	subwf	map@out_max^0,w,c
  5471  002652  6E05               	movwf	___lmul@multiplicand^0,c
  5472  002654  5028               	movf	(map@out_min+1)^0,w,c
  5473  002656  582C               	subwfb	(map@out_max+1)^0,w,c
  5474  002658  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5475  00265A  5029               	movf	(map@out_min+2)^0,w,c
  5476  00265C  582D               	subwfb	(map@out_max+2)^0,w,c
  5477  00265E  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5478  002660  502A               	movf	(map@out_min+3)^0,w,c
  5479  002662  582E               	subwfb	(map@out_max+3)^0,w,c
  5480  002664  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5481  002666  ECC8  F013         	call	___lmul	;wreg free
  5482  00266A  C001  F00D         	movff	?___lmul,___aldiv@dividend
  5483  00266E  C002  F00E         	movff	?___lmul+1,___aldiv@dividend+1
  5484  002672  C003  F00F         	movff	?___lmul+2,___aldiv@dividend+2
  5485  002676  C004  F010         	movff	?___lmul+3,___aldiv@dividend+3
  5486  00267A  501F               	movf	map@in_min^0,w,c
  5487  00267C  5C23               	subwf	map@in_max^0,w,c
  5488  00267E  6E11               	movwf	___aldiv@divisor^0,c
  5489  002680  5020               	movf	(map@in_min+1)^0,w,c
  5490  002682  5824               	subwfb	(map@in_max+1)^0,w,c
  5491  002684  6E12               	movwf	(___aldiv@divisor+1)^0,c
  5492  002686  5021               	movf	(map@in_min+2)^0,w,c
  5493  002688  5825               	subwfb	(map@in_max+2)^0,w,c
  5494  00268A  6E13               	movwf	(___aldiv@divisor+2)^0,c
  5495  00268C  5022               	movf	(map@in_min+3)^0,w,c
  5496  00268E  5826               	subwfb	(map@in_max+3)^0,w,c
  5497  002690  6E14               	movwf	(___aldiv@divisor+3)^0,c
  5498  002692  EC7B  F00D         	call	___aldiv	;wreg free
  5499  002696  5027               	movf	map@out_min^0,w,c
  5500  002698  240D               	addwf	?___aldiv^0,w,c
  5501  00269A  6E1B               	movwf	?_map^0,c
  5502  00269C  5028               	movf	(map@out_min+1)^0,w,c
  5503  00269E  200E               	addwfc	(?___aldiv+1)^0,w,c
  5504  0026A0  6E1C               	movwf	(?_map+1)^0,c
  5505  0026A2  5029               	movf	(map@out_min+2)^0,w,c
  5506  0026A4  200F               	addwfc	(?___aldiv+2)^0,w,c
  5507  0026A6  6E1D               	movwf	(?_map+2)^0,c
  5508  0026A8  502A               	movf	(map@out_min+3)^0,w,c
  5509  0026AA  2010               	addwfc	(?___aldiv+3)^0,w,c
  5510  0026AC  6E1E               	movwf	(?_map+3)^0,c
  5511  0026AE  0012               	return		;funcret
  5512  0026B0                     __end_of_map:
  5513                           	opt callstack 0
  5514                           
  5515 ;; *************** function ___lmul *****************
  5516 ;; Defined at:
  5517 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  5518 ;; Parameters:    Size  Location     Type
  5519 ;;  multiplier      4    0[COMRAM] unsigned long 
  5520 ;;  multiplicand    4    4[COMRAM] unsigned long 
  5521 ;; Auto vars:     Size  Location     Type
  5522 ;;  product         4    8[COMRAM] unsigned long 
  5523 ;; Return value:  Size  Location     Type
  5524 ;;                  4    0[COMRAM] unsigned long 
  5525 ;; Registers used:
  5526 ;;		wreg, status,2, status,0
  5527 ;; Tracked objects:
  5528 ;;		On entry : 0/0
  5529 ;;		On exit  : 0/0
  5530 ;;		Unchanged: 0/0
  5531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5532 ;;      Params:         8       0       0       0       0       0       0       0       0
  5533 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5534 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5535 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5536 ;;Total ram usage:       12 bytes
  5537 ;; Hardware stack levels used:    1
  5538 ;; Hardware stack levels required when called:    1
  5539 ;; This function calls:
  5540 ;;		Nothing
  5541 ;; This function is called by:
  5542 ;;		_map
  5543 ;; This function uses a non-reentrant model
  5544 ;;
  5545                           
  5546                           	psect	text20
  5547  002790                     __ptext20:
  5548                           	opt callstack 0
  5549  002790                     ___lmul:
  5550                           	opt callstack 26
  5551  002790  0E00               	movlw	0
  5552  002792  6E09               	movwf	___lmul@product^0,c
  5553  002794  0E00               	movlw	0
  5554  002796  6E0A               	movwf	(___lmul@product+1)^0,c
  5555  002798  0E00               	movlw	0
  5556  00279A  6E0B               	movwf	(___lmul@product+2)^0,c
  5557  00279C  0E00               	movlw	0
  5558  00279E  6E0C               	movwf	(___lmul@product+3)^0,c
  5559  0027A0                     l3568:
  5560  0027A0  A001               	btfss	___lmul@multiplier^0,0,c
  5561  0027A2  EFD5  F013         	goto	u2721
  5562  0027A6  EFD7  F013         	goto	u2720
  5563  0027AA                     u2721:
  5564  0027AA  EFDF  F013         	goto	l3572
  5565  0027AE                     u2720:
  5566  0027AE  5005               	movf	___lmul@multiplicand^0,w,c
  5567  0027B0  2609               	addwf	___lmul@product^0,f,c
  5568  0027B2  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  5569  0027B4  220A               	addwfc	(___lmul@product+1)^0,f,c
  5570  0027B6  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  5571  0027B8  220B               	addwfc	(___lmul@product+2)^0,f,c
  5572  0027BA  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  5573  0027BC  220C               	addwfc	(___lmul@product+3)^0,f,c
  5574  0027BE                     l3572:
  5575  0027BE  90D8               	bcf	status,0,c
  5576  0027C0  3605               	rlcf	___lmul@multiplicand^0,f,c
  5577  0027C2  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  5578  0027C4  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  5579  0027C6  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  5580  0027C8  90D8               	bcf	status,0,c
  5581  0027CA  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  5582  0027CC  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  5583  0027CE  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  5584  0027D0  3201               	rrcf	___lmul@multiplier^0,f,c
  5585  0027D2  5001               	movf	___lmul@multiplier^0,w,c
  5586  0027D4  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  5587  0027D6  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  5588  0027D8  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  5589  0027DA  A4D8               	btfss	status,2,c
  5590  0027DC  EFF2  F013         	goto	u2731
  5591  0027E0  EFF4  F013         	goto	u2730
  5592  0027E4                     u2731:
  5593  0027E4  EFD0  F013         	goto	l3568
  5594  0027E8                     u2730:
  5595  0027E8  C009  F001         	movff	___lmul@product,?___lmul
  5596  0027EC  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  5597  0027F0  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  5598  0027F4  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  5599  0027F8  0012               	return		;funcret
  5600  0027FA                     __end_of___lmul:
  5601                           	opt callstack 0
  5602                           
  5603 ;; *************** function _dameHumedadSuelo *****************
  5604 ;; Defined at:
  5605 ;;		line 465 in file "main.c"
  5606 ;; Parameters:    Size  Location     Type
  5607 ;;  canalLeer       1    wreg     unsigned char 
  5608 ;; Auto vars:     Size  Location     Type
  5609 ;;  canalLeer       1    4[COMRAM] unsigned char 
  5610 ;; Return value:  Size  Location     Type
  5611 ;;                  2    0[COMRAM] short 
  5612 ;; Registers used:
  5613 ;;		wreg, status,2, status,0
  5614 ;; Tracked objects:
  5615 ;;		On entry : 0/0
  5616 ;;		On exit  : 0/0
  5617 ;;		Unchanged: 0/0
  5618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5619 ;;      Params:         2       0       0       0       0       0       0       0       0
  5620 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5621 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5622 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5623 ;;Total ram usage:        5 bytes
  5624 ;; Hardware stack levels used:    1
  5625 ;; Hardware stack levels required when called:    1
  5626 ;; This function calls:
  5627 ;;		Nothing
  5628 ;; This function is called by:
  5629 ;;		_lecturaAnalogaSensores
  5630 ;; This function uses a non-reentrant model
  5631 ;;
  5632                           
  5633                           	psect	text21
  5634  002BEA                     __ptext21:
  5635                           	opt callstack 0
  5636  002BEA                     _dameHumedadSuelo:
  5637                           	opt callstack 27
  5638                           
  5639                           ;incstack = 0
  5640                           ;dameHumedadSuelo@canalLeer stored from wreg
  5641  002BEA  6E05               	movwf	dameHumedadSuelo@canalLeer^0,c
  5642  002BEC                     
  5643                           ;main.c: 467:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  5644  002BEC  0E06               	movlw	6
  5645  002BEE                     u3707:
  5646  002BEE  2EE8               	decfsz	wreg,f,c
  5647  002BF0  D7FE               	bra	u3707
  5648  002BF2  D000               	nop2	
  5649  002BF4                     
  5650                           ;main.c: 469:     ADCON0bits.ADON = 1;
  5651  002BF4  80C2               	bsf	194,0,c	;volatile
  5652  002BF6                     
  5653                           ;main.c: 470:     ADCON0bits.CHS = canalLeer;
  5654  002BF6  C005  F003         	movff	dameHumedadSuelo@canalLeer,??_dameHumedadSuelo
  5655  002BFA  4603               	rlncf	??_dameHumedadSuelo^0,f,c
  5656  002BFC  4603               	rlncf	??_dameHumedadSuelo^0,f,c
  5657  002BFE  50C2               	movf	194,w,c	;volatile
  5658  002C00  1803               	xorwf	??_dameHumedadSuelo^0,w,c
  5659  002C02  0BC3               	andlw	-61
  5660  002C04  1803               	xorwf	??_dameHumedadSuelo^0,w,c
  5661  002C06  6EC2               	movwf	194,c	;volatile
  5662  002C08                     
  5663                           ;main.c: 471:     ADCON0bits.GO = 1;
  5664  002C08  82C2               	bsf	194,1,c	;volatile
  5665  002C0A                     
  5666                           ;main.c: 472:     ADCON0bits.GO_DONE = 1;
  5667  002C0A  82C2               	bsf	194,1,c	;volatile
  5668  002C0C                     l319:
  5669  002C0C  B2C2               	btfsc	194,1,c	;volatile
  5670  002C0E  EF0B  F016         	goto	u2921
  5671  002C12  EF0D  F016         	goto	u2920
  5672  002C16                     u2921:
  5673  002C16  EF06  F016         	goto	l319
  5674  002C1A                     u2920:
  5675  002C1A                     
  5676                           ;main.c: 476:     ADCON0bits.ADON = 0;
  5677  002C1A  90C2               	bcf	194,0,c	;volatile
  5678  002C1C                     
  5679                           ;main.c: 478:     return (ADRESH << 8) +ADRESL;
  5680  002C1C  50C4               	movf	196,w,c	;volatile
  5681  002C1E  6E04               	movwf	(??_dameHumedadSuelo+1)^0,c
  5682  002C20  6A03               	clrf	??_dameHumedadSuelo^0,c
  5683  002C22  50C3               	movf	195,w,c	;volatile
  5684  002C24  2403               	addwf	??_dameHumedadSuelo^0,w,c
  5685  002C26  6E01               	movwf	?_dameHumedadSuelo^0,c
  5686  002C28  0E00               	movlw	0
  5687  002C2A  2004               	addwfc	(??_dameHumedadSuelo+1)^0,w,c
  5688  002C2C  6E02               	movwf	(?_dameHumedadSuelo+1)^0,c
  5689  002C2E  0012               	return		;funcret
  5690  002C30                     __end_of_dameHumedadSuelo:
  5691                           	opt callstack 0
  5692                           
  5693 ;; *************** function _dameTemperaturaHumedad *****************
  5694 ;; Defined at:
  5695 ;;		line 696 in file "main.c"
  5696 ;; Parameters:    Size  Location     Type
  5697 ;;  Humedad         2    3[COMRAM] PTR unsigned char 
  5698 ;;		 -> mostrarDatosSensoresWIFI@humedad(1), mostrarDatosSensores@humedad(1), NULL(0), 
  5699 ;;  Temperatura     2    5[COMRAM] PTR unsigned char 
  5700 ;;		 -> mostrarDatosSensoresWIFI@temperatura(1), mostrarDatosSensores@temperatura(1), estaSeco@temperatura(1), 
  5701 ;; Auto vars:     Size  Location     Type
  5702 ;;  checkSum        2    9[COMRAM] unsigned int 
  5703 ;;  temperatura     1   14[COMRAM] unsigned char 
  5704 ;;  humedad         1   13[COMRAM] unsigned char 
  5705 ;;  temperaturaD    1   12[COMRAM] unsigned char 
  5706 ;;  humedadDecim    1   11[COMRAM] unsigned char 
  5707 ;; Return value:  Size  Location     Type
  5708 ;;                  1    wreg      void 
  5709 ;; Registers used:
  5710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5711 ;; Tracked objects:
  5712 ;;		On entry : 0/0
  5713 ;;		On exit  : 0/0
  5714 ;;		Unchanged: 0/0
  5715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5716 ;;      Params:         4       0       0       0       0       0       0       0       0
  5717 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5718 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5719 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5720 ;;Total ram usage:       12 bytes
  5721 ;; Hardware stack levels used:    1
  5722 ;; Hardware stack levels required when called:    3
  5723 ;; This function calls:
  5724 ;;		_DHT11_ReadData
  5725 ;;		_DHT11_Start
  5726 ;;		_UART_printf
  5727 ;;		_check_response
  5728 ;; This function is called by:
  5729 ;;		_estaSeco
  5730 ;;		_mostrarDatosSensores
  5731 ;;		_mostrarDatosSensoresWIFI
  5732 ;; This function uses a non-reentrant model
  5733 ;;
  5734                           
  5735                           	psect	text22
  5736  00235E                     __ptext22:
  5737                           	opt callstack 0
  5738  00235E                     _dameTemperaturaHumedad:
  5739                           	opt callstack 24
  5740  00235E                     
  5741                           ;main.c: 698:     PIE1bits.RCIE = 0;
  5742  00235E  9A9D               	bcf	157,5,c	;volatile
  5743                           
  5744                           ;main.c: 699:     T0CONbits.TMR0ON = 0;
  5745  002360  9ED5               	bcf	213,7,c	;volatile
  5746  002362                     l3648:
  5747                           
  5748                           ;main.c: 705:     DHT11_Start();
  5749  002362  EC82  F017         	call	_DHT11_Start	;wreg free
  5750  002366                     
  5751                           ;main.c: 707:     while (!(check_response())) {
  5752  002366  EC5C  F016         	call	_check_response	;wreg free
  5753  00236A  0900               	iorlw	0
  5754  00236C  B4D8               	btfsc	status,2,c
  5755  00236E  EFBB  F011         	goto	u2801
  5756  002372  EFBD  F011         	goto	u2800
  5757  002376                     u2801:
  5758  002376  EFB1  F011         	goto	l3648
  5759  00237A                     u2800:
  5760  00237A                     
  5761                           ;main.c: 713:     humedad = DHT11_ReadData();
  5762  00237A  ECC4  F014         	call	_DHT11_ReadData	;wreg free
  5763  00237E  6E0E               	movwf	dameTemperaturaHumedad@humedad^0,c
  5764                           
  5765                           ;main.c: 714:     humedadDecimal = DHT11_ReadData();
  5766  002380  ECC4  F014         	call	_DHT11_ReadData	;wreg free
  5767  002384  6E0C               	movwf	dameTemperaturaHumedad@humedadDecimal^0,c
  5768                           
  5769                           ;main.c: 715:     temperatura = DHT11_ReadData();
  5770  002386  ECC4  F014         	call	_DHT11_ReadData	;wreg free
  5771  00238A  6E0F               	movwf	dameTemperaturaHumedad@temperatura^0,c
  5772                           
  5773                           ;main.c: 716:     temperaturaDecimal = DHT11_ReadData();
  5774  00238C  ECC4  F014         	call	_DHT11_ReadData	;wreg free
  5775  002390  6E0D               	movwf	dameTemperaturaHumedad@temperaturaDecimal^0,c
  5776                           
  5777                           ;main.c: 717:     checkSum = DHT11_ReadData();
  5778  002392  ECC4  F014         	call	_DHT11_ReadData	;wreg free
  5779  002396  6E08               	movwf	??_dameTemperaturaHumedad^0,c
  5780  002398  5008               	movf	??_dameTemperaturaHumedad^0,w,c
  5781  00239A  6E0A               	movwf	dameTemperaturaHumedad@checkSum^0,c
  5782  00239C  6A0B               	clrf	(dameTemperaturaHumedad@checkSum+1)^0,c
  5783  00239E                     
  5784                           ;main.c: 719:     if (checkSum != (humedad + humedadDecimal + temperatura + temperaturaD
      +                          ecimal))
  5785  00239E  500C               	movf	dameTemperaturaHumedad@humedadDecimal^0,w,c
  5786  0023A0  C00E  F008         	movff	dameTemperaturaHumedad@humedad,??_dameTemperaturaHumedad
  5787  0023A4  6A09               	clrf	(??_dameTemperaturaHumedad+1)^0,c
  5788  0023A6  2608               	addwf	??_dameTemperaturaHumedad^0,f,c
  5789  0023A8  0E00               	movlw	0
  5790  0023AA  2209               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  5791  0023AC  500F               	movf	dameTemperaturaHumedad@temperatura^0,w,c
  5792  0023AE  2608               	addwf	??_dameTemperaturaHumedad^0,f,c
  5793  0023B0  0E00               	movlw	0
  5794  0023B2  2209               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  5795  0023B4  500D               	movf	dameTemperaturaHumedad@temperaturaDecimal^0,w,c
  5796  0023B6  2608               	addwf	??_dameTemperaturaHumedad^0,f,c
  5797  0023B8  0E00               	movlw	0
  5798  0023BA  2209               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  5799  0023BC  500A               	movf	dameTemperaturaHumedad@checkSum^0,w,c
  5800  0023BE  1808               	xorwf	??_dameTemperaturaHumedad^0,w,c
  5801  0023C0  E109               	bnz	u2810
  5802  0023C2  500B               	movf	(dameTemperaturaHumedad@checkSum+1)^0,w,c
  5803  0023C4  1809               	xorwf	(??_dameTemperaturaHumedad+1)^0,w,c
  5804  0023C6  B4D8               	btfsc	status,2,c
  5805  0023C8  EFE8  F011         	goto	u2811
  5806  0023CC  EFEA  F011         	goto	u2810
  5807  0023D0                     u2811:
  5808  0023D0  EFF2  F011         	goto	l3660
  5809  0023D4                     u2810:
  5810  0023D4                     
  5811                           ;main.c: 720:         UART_printf("Error de lectura DHT11\r\n");
  5812  0023D4  0E45               	movlw	low STR_35
  5813  0023D6  6E02               	movwf	UART_printf@cadena^0,c
  5814  0023D8  0E7F               	movlw	high STR_35
  5815  0023DA  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5816  0023DC  EC95  F014         	call	_UART_printf	;wreg free
  5817  0023E0  EFFE  F011         	goto	l3662
  5818  0023E4                     l3660:
  5819                           
  5820                           ;main.c: 722:         *Humedad = humedad;
  5821  0023E4  C004  FFD9         	movff	dameTemperaturaHumedad@Humedad,fsr2l
  5822  0023E8  C005  FFDA         	movff	dameTemperaturaHumedad@Humedad+1,fsr2h
  5823  0023EC  C00E  FFDF         	movff	dameTemperaturaHumedad@humedad,indf2
  5824                           
  5825                           ;main.c: 723:         *Temperatura = temperatura;
  5826  0023F0  C006  FFD9         	movff	dameTemperaturaHumedad@Temperatura,fsr2l
  5827  0023F4  C007  FFDA         	movff	dameTemperaturaHumedad@Temperatura+1,fsr2h
  5828  0023F8  C00F  FFDF         	movff	dameTemperaturaHumedad@temperatura,indf2
  5829  0023FC                     l3662:
  5830                           
  5831                           ;main.c: 726:     PIE1bits.RCIE = 1;
  5832  0023FC  8A9D               	bsf	157,5,c	;volatile
  5833  0023FE                     
  5834                           ;main.c: 727:     T0CONbits.TMR0ON = 1;
  5835  0023FE  8ED5               	bsf	213,7,c	;volatile
  5836  002400  0012               	return		;funcret
  5837  002402                     __end_of_dameTemperaturaHumedad:
  5838                           	opt callstack 0
  5839                           
  5840 ;; *************** function _check_response *****************
  5841 ;; Defined at:
  5842 ;;		line 38 in file "./DHT11.h"
  5843 ;; Parameters:    Size  Location     Type
  5844 ;;		None
  5845 ;; Auto vars:     Size  Location     Type
  5846 ;;  respuesta       1    0[COMRAM] unsigned char 
  5847 ;; Return value:  Size  Location     Type
  5848 ;;                  1    wreg      unsigned char 
  5849 ;; Registers used:
  5850 ;;		wreg, status,2
  5851 ;; Tracked objects:
  5852 ;;		On entry : 0/0
  5853 ;;		On exit  : 0/0
  5854 ;;		Unchanged: 0/0
  5855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5856 ;;      Params:         0       0       0       0       0       0       0       0       0
  5857 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5858 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5859 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5860 ;;Total ram usage:        1 bytes
  5861 ;; Hardware stack levels used:    1
  5862 ;; Hardware stack levels required when called:    1
  5863 ;; This function calls:
  5864 ;;		Nothing
  5865 ;; This function is called by:
  5866 ;;		_dameTemperaturaHumedad
  5867 ;; This function uses a non-reentrant model
  5868 ;;
  5869                           
  5870                           	psect	text23
  5871  002CB8                     __ptext23:
  5872                           	opt callstack 0
  5873  002CB8                     _check_response:
  5874                           	opt callstack 25
  5875  002CB8                     
  5876                           ;./DHT11.h: 40:     unsigned char respuesta = 0;
  5877  002CB8  0E00               	movlw	0
  5878  002CBA  6E01               	movwf	check_response@respuesta^0,c
  5879  002CBC                     
  5880                           ;./DHT11.h: 41:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  5881  002CBC  0E0D               	movlw	13
  5882  002CBE                     u3717:
  5883  002CBE  2EE8               	decfsz	wreg,f,c
  5884  002CC0  D7FE               	bra	u3717
  5885  002CC2  F000               	nop	
  5886  002CC4                     
  5887                           ;./DHT11.h: 42:     if (!PORTDbits.RD7) {
  5888  002CC4  BE83               	btfsc	131,7,c	;volatile
  5889  002CC6  EF67  F016         	goto	u2691
  5890  002CCA  EF69  F016         	goto	u2690
  5891  002CCE                     u2691:
  5892  002CCE  EF7A  F016         	goto	l3552
  5893  002CD2                     u2690:
  5894  002CD2                     
  5895                           ;./DHT11.h: 43:         _delay((unsigned long)((80)*(4000000/4000000.0)));
  5896  002CD2  0E1A               	movlw	26
  5897  002CD4                     u3727:
  5898  002CD4  2EE8               	decfsz	wreg,f,c
  5899  002CD6  D7FE               	bra	u3727
  5900  002CD8  D000               	nop2	
  5901  002CDA                     
  5902                           ;./DHT11.h: 44:         if (PORTDbits.RD7) {
  5903  002CDA  AE83               	btfss	131,7,c	;volatile
  5904  002CDC  EF72  F016         	goto	u2701
  5905  002CE0  EF74  F016         	goto	u2700
  5906  002CE4                     u2701:
  5907  002CE4  EF7A  F016         	goto	l3552
  5908  002CE8                     u2700:
  5909  002CE8                     
  5910                           ;./DHT11.h: 45:             _delay((unsigned long)((50)*(4000000/4000000.0)));
  5911  002CE8  0E10               	movlw	16
  5912  002CEA                     u3737:
  5913  002CEA  2EE8               	decfsz	wreg,f,c
  5914  002CEC  D7FE               	bra	u3737
  5915  002CEE  D000               	nop2	
  5916  002CF0                     
  5917                           ;./DHT11.h: 46:             respuesta = 1;
  5918  002CF0  0E01               	movlw	1
  5919  002CF2  6E01               	movwf	check_response@respuesta^0,c
  5920  002CF4                     l3552:
  5921                           
  5922                           ;./DHT11.h: 50:     return respuesta;
  5923  002CF4  5001               	movf	check_response@respuesta^0,w,c
  5924  002CF6  0012               	return		;funcret
  5925  002CF8                     __end_of_check_response:
  5926                           	opt callstack 0
  5927                           
  5928 ;; *************** function _DHT11_Start *****************
  5929 ;; Defined at:
  5930 ;;		line 23 in file "./DHT11.h"
  5931 ;; Parameters:    Size  Location     Type
  5932 ;;		None
  5933 ;; Auto vars:     Size  Location     Type
  5934 ;;		None
  5935 ;; Return value:  Size  Location     Type
  5936 ;;                  1    wreg      void 
  5937 ;; Registers used:
  5938 ;;		wreg
  5939 ;; Tracked objects:
  5940 ;;		On entry : 0/0
  5941 ;;		On exit  : 0/0
  5942 ;;		Unchanged: 0/0
  5943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5944 ;;      Params:         0       0       0       0       0       0       0       0       0
  5945 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5946 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5947 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5948 ;;Total ram usage:        1 bytes
  5949 ;; Hardware stack levels used:    1
  5950 ;; Hardware stack levels required when called:    1
  5951 ;; This function calls:
  5952 ;;		Nothing
  5953 ;; This function is called by:
  5954 ;;		_dameTemperaturaHumedad
  5955 ;; This function uses a non-reentrant model
  5956 ;;
  5957                           
  5958                           	psect	text24
  5959  002F04                     __ptext24:
  5960                           	opt callstack 0
  5961  002F04                     _DHT11_Start:
  5962                           	opt callstack 25
  5963  002F04                     
  5964                           ;./DHT11.h: 24:     TRISDbits.RD7 = 0;
  5965  002F04  9E95               	bcf	149,7,c	;volatile
  5966                           
  5967                           ;./DHT11.h: 26:     LATDbits.LATD7 = 0;
  5968  002F06  9E8C               	bcf	140,7,c	;volatile
  5969  002F08                     
  5970                           ;./DHT11.h: 28:     _delay((unsigned long)((20)*(4000000/4000.0)));
  5971  002F08  0E1A               	movlw	26
  5972  002F0A  6E01               	movwf	??_DHT11_Start^0,c
  5973  002F0C  0EF8               	movlw	248
  5974  002F0E                     u3747:
  5975  002F0E  2EE8               	decfsz	wreg,f,c
  5976  002F10  D7FE               	bra	u3747
  5977  002F12  2E01               	decfsz	??_DHT11_Start^0,f,c
  5978  002F14  D7FC               	bra	u3747
  5979  002F16  D000               	nop2	
  5980  002F18                     
  5981                           ;./DHT11.h: 30:     LATDbits.LATD7 = 1;
  5982  002F18  8E8C               	bsf	140,7,c	;volatile
  5983                           
  5984                           ;./DHT11.h: 32:     _delay((unsigned long)((30)*(4000000/4000000.0)));
  5985  002F1A  0E0A               	movlw	10
  5986  002F1C                     u3757:
  5987  002F1C  2EE8               	decfsz	wreg,f,c
  5988  002F1E  D7FE               	bra	u3757
  5989  002F20                     
  5990                           ;./DHT11.h: 34:     TRISDbits.RD7 = 1;
  5991  002F20  8E95               	bsf	149,7,c	;volatile
  5992  002F22  0012               	return		;funcret
  5993  002F24                     __end_of_DHT11_Start:
  5994                           	opt callstack 0
  5995                           
  5996 ;; *************** function _DHT11_ReadData *****************
  5997 ;; Defined at:
  5998 ;;		line 9 in file "./DHT11.h"
  5999 ;; Parameters:    Size  Location     Type
  6000 ;;		None
  6001 ;; Auto vars:     Size  Location     Type
  6002 ;;  data            1    1[COMRAM] unsigned char 
  6003 ;;  i               1    0[COMRAM] unsigned char 
  6004 ;; Return value:  Size  Location     Type
  6005 ;;                  1    wreg      unsigned char 
  6006 ;; Registers used:
  6007 ;;		wreg, status,2, status,0
  6008 ;; Tracked objects:
  6009 ;;		On entry : 0/0
  6010 ;;		On exit  : 0/0
  6011 ;;		Unchanged: 0/0
  6012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6013 ;;      Params:         0       0       0       0       0       0       0       0       0
  6014 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6015 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6016 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6017 ;;Total ram usage:        2 bytes
  6018 ;; Hardware stack levels used:    1
  6019 ;; Hardware stack levels required when called:    1
  6020 ;; This function calls:
  6021 ;;		Nothing
  6022 ;; This function is called by:
  6023 ;;		_dameTemperaturaHumedad
  6024 ;; This function uses a non-reentrant model
  6025 ;;
  6026                           
  6027                           	psect	text25
  6028  002988                     __ptext25:
  6029                           	opt callstack 0
  6030  002988                     _DHT11_ReadData:
  6031                           	opt callstack 25
  6032  002988                     
  6033                           ;./DHT11.h: 10:     char i, data = 0;
  6034  002988  0E00               	movlw	0
  6035  00298A  6E02               	movwf	DHT11_ReadData@data^0,c
  6036                           
  6037                           ;./DHT11.h: 11:     for (i = 0; i < 8; i++) {
  6038  00298C  0E00               	movlw	0
  6039  00298E  6E01               	movwf	DHT11_ReadData@i^0,c
  6040  002990                     l150:
  6041  002990  AE83               	btfss	131,7,c	;volatile
  6042  002992  EFCD  F014         	goto	u2651
  6043  002996  EFCF  F014         	goto	u2650
  6044  00299A                     u2651:
  6045  00299A  EFC8  F014         	goto	l150
  6046  00299E                     u2650:
  6047  00299E                     
  6048                           ;./DHT11.h: 13:         _delay((unsigned long)((30)*(4000000/4000000.0)));
  6049  00299E  0E0A               	movlw	10
  6050  0029A0                     u3767:
  6051  0029A0  2EE8               	decfsz	wreg,f,c
  6052  0029A2  D7FE               	bra	u3767
  6053  0029A4                     
  6054                           ;./DHT11.h: 14:         if (PORTDbits.RD7 & 1)
  6055  0029A4  AE83               	btfss	131,7,c	;volatile
  6056  0029A6  EFD7  F014         	goto	u2661
  6057  0029AA  EFD9  F014         	goto	u2660
  6058  0029AE                     u2661:
  6059  0029AE  EFDD  F014         	goto	l3520
  6060  0029B2                     u2660:
  6061  0029B2                     
  6062                           ;./DHT11.h: 15:             data = ((data << 1) | 1);
  6063  0029B2  80D8               	bsf	status,0,c
  6064  0029B4  3602               	rlcf	DHT11_ReadData@data^0,f,c
  6065  0029B6  EFE0  F014         	goto	l155
  6066  0029BA                     l3520:
  6067                           
  6068                           ;./DHT11.h: 17:             data = (data << 1);
  6069  0029BA  5002               	movf	DHT11_ReadData@data^0,w,c
  6070  0029BC  2402               	addwf	DHT11_ReadData@data^0,w,c
  6071  0029BE  6E02               	movwf	DHT11_ReadData@data^0,c
  6072  0029C0                     l155:
  6073  0029C0  BE83               	btfsc	131,7,c	;volatile
  6074  0029C2  EFE5  F014         	goto	u2671
  6075  0029C6  EFE7  F014         	goto	u2670
  6076  0029CA                     u2671:
  6077  0029CA  EFE0  F014         	goto	l155
  6078  0029CE                     u2670:
  6079  0029CE                     
  6080                           ;./DHT11.h: 19:     }
  6081  0029CE  2A01               	incf	DHT11_ReadData@i^0,f,c
  6082  0029D0  0E07               	movlw	7
  6083  0029D2  6401               	cpfsgt	DHT11_ReadData@i^0,c
  6084  0029D4  EFEE  F014         	goto	u2681
  6085  0029D8  EFF0  F014         	goto	u2680
  6086  0029DC                     u2681:
  6087  0029DC  EFC8  F014         	goto	l150
  6088  0029E0                     u2680:
  6089  0029E0                     
  6090                           ;./DHT11.h: 20:     return data;
  6091  0029E0  5002               	movf	DHT11_ReadData@data^0,w,c
  6092  0029E2  0012               	return		;funcret
  6093  0029E4                     __end_of_DHT11_ReadData:
  6094                           	opt callstack 0
  6095                           
  6096 ;; *************** function _fijaHoraRtc *****************
  6097 ;; Defined at:
  6098 ;;		line 366 in file "main.c"
  6099 ;; Parameters:    Size  Location     Type
  6100 ;;		None
  6101 ;; Auto vars:     Size  Location     Type
  6102 ;;		None
  6103 ;; Return value:  Size  Location     Type
  6104 ;;                  1    wreg      void 
  6105 ;; Registers used:
  6106 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6107 ;; Tracked objects:
  6108 ;;		On entry : 0/0
  6109 ;;		On exit  : 0/0
  6110 ;;		Unchanged: 0/0
  6111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6112 ;;      Params:         0       0       0       0       0       0       0       0       0
  6113 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6114 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6115 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6116 ;;Total ram usage:        0 bytes
  6117 ;; Hardware stack levels used:    1
  6118 ;; Hardware stack levels required when called:    5
  6119 ;; This function calls:
  6120 ;;		_UART_printf
  6121 ;;		_escribe_rtc
  6122 ;;		_setRtc
  6123 ;; This function is called by:
  6124 ;;		_sistemaPrincipal
  6125 ;; This function uses a non-reentrant model
  6126 ;;
  6127                           
  6128                           	psect	text26
  6129  0027FA                     __ptext26:
  6130                           	opt callstack 0
  6131  0027FA                     _fijaHoraRtc:
  6132                           	opt callstack 24
  6133  0027FA                     
  6134                           ;main.c: 368:     UART_printf("\r\n FIJA HORA \r\n");
  6135  0027FA  0EC3               	movlw	low STR_3
  6136  0027FC  6E02               	movwf	UART_printf@cadena^0,c
  6137  0027FE  0E7F               	movlw	high STR_3
  6138  002800  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6139  002802  EC95  F014         	call	_UART_printf	;wreg free
  6140                           
  6141                           ;main.c: 371:     UART_printf("\r\n Envie las Horas en formato 24 Ej: 15 \r\n");
  6142  002806  0EC7               	movlw	low STR_4
  6143  002808  6E02               	movwf	UART_printf@cadena^0,c
  6144  00280A  0E7C               	movlw	high STR_4
  6145  00280C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6146  00280E  EC95  F014         	call	_UART_printf	;wreg free
  6147  002812                     
  6148                           ;main.c: 374:     if (setRtc(0x02)) {
  6149  002812  0E02               	movlw	2
  6150  002814  EC58  F013         	call	_setRtc
  6151  002818  0900               	iorlw	0
  6152  00281A  B4D8               	btfsc	status,2,c
  6153  00281C  EF12  F014         	goto	u3291
  6154  002820  EF14  F014         	goto	u3290
  6155  002824                     u3291:
  6156  002824  EF30  F014         	goto	l303
  6157  002828                     u3290:
  6158  002828                     
  6159                           ;main.c: 375:         UART_printf("\r\n Envie los Minutos Ej: 25 \r\n");
  6160  002828  0EA1               	movlw	low STR_5
  6161  00282A  6E02               	movwf	UART_printf@cadena^0,c
  6162  00282C  0E7E               	movlw	high STR_5
  6163  00282E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6164  002830  EC95  F014         	call	_UART_printf	;wreg free
  6165  002834                     
  6166                           ;main.c: 376:         if (setRtc(0x01)) {
  6167  002834  0E01               	movlw	1
  6168  002836  EC58  F013         	call	_setRtc
  6169  00283A  0900               	iorlw	0
  6170  00283C  B4D8               	btfsc	status,2,c
  6171  00283E  EF23  F014         	goto	u3301
  6172  002842  EF25  F014         	goto	u3300
  6173  002846                     u3301:
  6174  002846  EF30  F014         	goto	l303
  6175  00284A                     u3300:
  6176  00284A                     
  6177                           ;main.c: 377:             UART_printf("\r\n HORA ESTABLECIDA CORRECTAMENTE \r\n");
  6178  00284A  0E8C               	movlw	low STR_6
  6179  00284C  6E02               	movwf	UART_printf@cadena^0,c
  6180  00284E  0E7D               	movlw	high STR_6
  6181  002850  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6182  002852  EC95  F014         	call	_UART_printf	;wreg free
  6183  002856                     
  6184                           ;main.c: 378:             escribe_rtc(0x00, 0);
  6185  002856  0E00               	movlw	0
  6186  002858  6E03               	movwf	escribe_rtc@dato^0,c
  6187  00285A  0E00               	movlw	0
  6188  00285C  EC92  F017         	call	_escribe_rtc
  6189  002860                     l303:
  6190  002860  0012               	return		;funcret
  6191  002862                     __end_of_fijaHoraRtc:
  6192                           	opt callstack 0
  6193                           
  6194 ;; *************** function _fijaDiaRtc *****************
  6195 ;; Defined at:
  6196 ;;		line 189 in file "main.c"
  6197 ;; Parameters:    Size  Location     Type
  6198 ;;		None
  6199 ;; Auto vars:     Size  Location     Type
  6200 ;;		None
  6201 ;; Return value:  Size  Location     Type
  6202 ;;                  1    wreg      void 
  6203 ;; Registers used:
  6204 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6205 ;; Tracked objects:
  6206 ;;		On entry : 0/0
  6207 ;;		On exit  : 0/0
  6208 ;;		Unchanged: 0/0
  6209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6210 ;;      Params:         0       0       0       0       0       0       0       0       0
  6211 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6212 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6213 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6214 ;;Total ram usage:        0 bytes
  6215 ;; Hardware stack levels used:    1
  6216 ;; Hardware stack levels required when called:    5
  6217 ;; This function calls:
  6218 ;;		_UART_printf
  6219 ;;		_setRtc
  6220 ;; This function is called by:
  6221 ;;		_sistemaPrincipal
  6222 ;; This function uses a non-reentrant model
  6223 ;;
  6224                           
  6225                           	psect	text27
  6226  002DE2                     __ptext27:
  6227                           	opt callstack 0
  6228  002DE2                     _fijaDiaRtc:
  6229                           	opt callstack 24
  6230  002DE2                     
  6231                           ;main.c: 191:     UART_printf("\r\n Envie el dia de la semana Ej: 01 = DOMINGO ... 07 = 
      +                          SABADO \r\n");
  6232  002DE2  0E31               	movlw	low STR_1
  6233  002DE4  6E02               	movwf	UART_printf@cadena^0,c
  6234  002DE6  0E7A               	movlw	high STR_1
  6235  002DE8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6236  002DEA  EC95  F014         	call	_UART_printf	;wreg free
  6237  002DEE                     
  6238                           ;main.c: 193:     if (setRtc(0x03)) {
  6239  002DEE  0E03               	movlw	3
  6240  002DF0  EC58  F013         	call	_setRtc
  6241  002DF4  0900               	iorlw	0
  6242  002DF6  B4D8               	btfsc	status,2,c
  6243  002DF8  EF00  F017         	goto	u3181
  6244  002DFC  EF02  F017         	goto	u3180
  6245  002E00                     u3181:
  6246  002E00  EF08  F017         	goto	l247
  6247  002E04                     u3180:
  6248  002E04                     
  6249                           ;main.c: 194:         UART_printf("\r\n DIA ESTABLECIDO CORRECTAMENTE \r\n");
  6250  002E04  0EFB               	movlw	low STR_2
  6251  002E06  6E02               	movwf	UART_printf@cadena^0,c
  6252  002E08  0E7D               	movlw	high STR_2
  6253  002E0A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6254  002E0C  EC95  F014         	call	_UART_printf	;wreg free
  6255  002E10                     l247:
  6256  002E10  0012               	return		;funcret
  6257  002E12                     __end_of_fijaDiaRtc:
  6258                           	opt callstack 0
  6259                           
  6260 ;; *************** function _setRtc *****************
  6261 ;; Defined at:
  6262 ;;		line 199 in file "main.c"
  6263 ;; Parameters:    Size  Location     Type
  6264 ;;  direccion       1    wreg     unsigned char 
  6265 ;; Auto vars:     Size  Location     Type
  6266 ;;  direccion       1   14[COMRAM] unsigned char 
  6267 ;;  dato            1   17[COMRAM] unsigned char 
  6268 ;;  datoRtc         1   16[COMRAM] unsigned char 
  6269 ;;  seteado         1   15[COMRAM] unsigned char 
  6270 ;; Return value:  Size  Location     Type
  6271 ;;                  1    wreg      unsigned char 
  6272 ;; Registers used:
  6273 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6274 ;; Tracked objects:
  6275 ;;		On entry : 0/0
  6276 ;;		On exit  : 0/0
  6277 ;;		Unchanged: 0/0
  6278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6279 ;;      Params:         0       0       0       0       0       0       0       0       0
  6280 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6281 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6282 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6283 ;;Total ram usage:        4 bytes
  6284 ;; Hardware stack levels used:    1
  6285 ;; Hardware stack levels required when called:    4
  6286 ;; This function calls:
  6287 ;;		___awdiv
  6288 ;;		___awmod
  6289 ;;		_escribe_rtc
  6290 ;;		_getValue
  6291 ;; This function is called by:
  6292 ;;		_fijaDiaRtc
  6293 ;;		_fijaHoraRtc
  6294 ;; This function uses a non-reentrant model
  6295 ;;
  6296                           
  6297                           	psect	text28
  6298  0026B0                     __ptext28:
  6299                           	opt callstack 0
  6300  0026B0                     _setRtc:
  6301                           	opt callstack 24
  6302                           
  6303                           ;incstack = 0
  6304                           ;setRtc@direccion stored from wreg
  6305  0026B0  6E0F               	movwf	setRtc@direccion^0,c
  6306  0026B2                     
  6307                           ;main.c: 202:     unsigned char seteado = 0;
  6308  0026B2  0E00               	movlw	0
  6309  0026B4  6E10               	movwf	setRtc@seteado^0,c
  6310                           
  6311                           ;main.c: 203:     unsigned char datoRtc = 0;
  6312  0026B6  0E00               	movlw	0
  6313  0026B8  6E11               	movwf	setRtc@datoRtc^0,c
  6314  0026BA                     
  6315                           ;main.c: 205:     dato = getValue(2);
  6316  0026BA  0E00               	movlw	0
  6317  0026BC  6E05               	movwf	(getValue@numCharacters+1)^0,c
  6318  0026BE  0E02               	movlw	2
  6319  0026C0  6E04               	movwf	getValue@numCharacters^0,c
  6320  0026C2  EC7F  F004         	call	_getValue	;wreg free
  6321  0026C6  6E12               	movwf	setRtc@dato^0,c
  6322  0026C8                     
  6323                           ;main.c: 207:     if (dato != '@') {
  6324  0026C8  0E40               	movlw	64
  6325  0026CA  1812               	xorwf	setRtc@dato^0,w,c
  6326  0026CC  B4D8               	btfsc	status,2,c
  6327  0026CE  EF6B  F013         	goto	u3081
  6328  0026D2  EF6D  F013         	goto	u3080
  6329  0026D6                     u3081:
  6330  0026D6  EF8E  F013         	goto	l3938
  6331  0026DA                     u3080:
  6332  0026DA                     
  6333                           ;main.c: 209:         datoRtc = ((dato / 10) & 0x0F) << 4;
  6334  0026DA  C012  F001         	movff	setRtc@dato,___awdiv@dividend
  6335  0026DE  6A02               	clrf	(___awdiv@dividend+1)^0,c
  6336  0026E0  0E00               	movlw	0
  6337  0026E2  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6338  0026E4  0E0A               	movlw	10
  6339  0026E6  6E03               	movwf	___awdiv@divisor^0,c
  6340  0026E8  EC9F  F010         	call	___awdiv	;wreg free
  6341  0026EC  0E0F               	movlw	15
  6342  0026EE  1601               	andwf	?___awdiv^0,f,c
  6343  0026F0  3801               	swapf	?___awdiv^0,w,c
  6344  0026F2  0BF0               	andlw	240
  6345  0026F4  6E11               	movwf	setRtc@datoRtc^0,c
  6346                           
  6347                           ;main.c: 210:         datoRtc |= (dato % 10) & 0x0F;
  6348  0026F6  C012  F001         	movff	setRtc@dato,___awmod@dividend
  6349  0026FA  6A02               	clrf	(___awmod@dividend+1)^0,c
  6350  0026FC  0E00               	movlw	0
  6351  0026FE  6E04               	movwf	(___awmod@divisor+1)^0,c
  6352  002700  0E0A               	movlw	10
  6353  002702  6E03               	movwf	___awmod@divisor^0,c
  6354  002704  EC01  F011         	call	___awmod	;wreg free
  6355  002708  5001               	movf	?___awmod^0,w,c
  6356  00270A  0B0F               	andlw	15
  6357  00270C  1211               	iorwf	setRtc@datoRtc^0,f,c
  6358                           
  6359                           ;main.c: 211:         escribe_rtc(direccion, datoRtc);
  6360  00270E  C011  F003         	movff	setRtc@datoRtc,escribe_rtc@dato
  6361  002712  500F               	movf	setRtc@direccion^0,w,c
  6362  002714  EC92  F017         	call	_escribe_rtc
  6363  002718                     
  6364                           ;main.c: 212:         seteado = 1;
  6365  002718  0E01               	movlw	1
  6366  00271A  6E10               	movwf	setRtc@seteado^0,c
  6367  00271C                     l3938:
  6368                           
  6369                           ;main.c: 215:     return seteado;
  6370  00271C  5010               	movf	setRtc@seteado^0,w,c
  6371  00271E  0012               	return		;funcret
  6372  002720                     __end_of_setRtc:
  6373                           	opt callstack 0
  6374                           
  6375 ;; *************** function _escribe_rtc *****************
  6376 ;; Defined at:
  6377 ;;		line 2 in file "./RTC.h"
  6378 ;; Parameters:    Size  Location     Type
  6379 ;;  direccion       1    wreg     unsigned char 
  6380 ;;  dato            1    2[COMRAM] unsigned char 
  6381 ;; Auto vars:     Size  Location     Type
  6382 ;;  direccion       1    3[COMRAM] unsigned char 
  6383 ;; Return value:  Size  Location     Type
  6384 ;;                  1    wreg      void 
  6385 ;; Registers used:
  6386 ;;		wreg, status,2, status,0, cstack
  6387 ;; Tracked objects:
  6388 ;;		On entry : 0/0
  6389 ;;		On exit  : 0/0
  6390 ;;		Unchanged: 0/0
  6391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6392 ;;      Params:         1       0       0       0       0       0       0       0       0
  6393 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6394 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6395 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6396 ;;Total ram usage:        2 bytes
  6397 ;; Hardware stack levels used:    1
  6398 ;; Hardware stack levels required when called:    3
  6399 ;; This function calls:
  6400 ;;		_i2c_detener
  6401 ;;		_i2c_envia_dato
  6402 ;;		_i2c_inicia_com
  6403 ;; This function is called by:
  6404 ;;		_setRtc
  6405 ;;		_fijaHoraRtc
  6406 ;;		_setRtcDefault
  6407 ;; This function uses a non-reentrant model
  6408 ;;
  6409                           
  6410                           	psect	text29
  6411  002F24                     __ptext29:
  6412                           	opt callstack 0
  6413  002F24                     _escribe_rtc:
  6414                           	opt callstack 24
  6415                           
  6416                           ;incstack = 0
  6417                           ;escribe_rtc@direccion stored from wreg
  6418  002F24  6E04               	movwf	escribe_rtc@direccion^0,c
  6419  002F26                     
  6420                           ;./RTC.h: 3:     i2c_inicia_com();
  6421  002F26  ECE6  F017         	call	_i2c_inicia_com	;wreg free
  6422                           
  6423                           ;./RTC.h: 4:     i2c_envia_dato(0xD0);
  6424  002F2A  0ED0               	movlw	208
  6425  002F2C  ECCC  F017         	call	_i2c_envia_dato
  6426                           
  6427                           ;./RTC.h: 5:     i2c_envia_dato(direccion);
  6428  002F30  5004               	movf	escribe_rtc@direccion^0,w,c
  6429  002F32  ECCC  F017         	call	_i2c_envia_dato
  6430                           
  6431                           ;./RTC.h: 6:     i2c_envia_dato(dato);
  6432  002F36  5003               	movf	escribe_rtc@dato^0,w,c
  6433  002F38  ECCC  F017         	call	_i2c_envia_dato
  6434                           
  6435                           ;./RTC.h: 7:     i2c_detener();
  6436  002F3C  ECEA  F017         	call	_i2c_detener	;wreg free
  6437  002F40  0012               	return		;funcret
  6438  002F42                     __end_of_escribe_rtc:
  6439                           	opt callstack 0
  6440                           
  6441 ;; *************** function ___awmod *****************
  6442 ;; Defined at:
  6443 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  6444 ;; Parameters:    Size  Location     Type
  6445 ;;  dividend        2    0[COMRAM] int 
  6446 ;;  divisor         2    2[COMRAM] int 
  6447 ;; Auto vars:     Size  Location     Type
  6448 ;;  sign            1    5[COMRAM] unsigned char 
  6449 ;;  counter         1    4[COMRAM] unsigned char 
  6450 ;; Return value:  Size  Location     Type
  6451 ;;                  2    0[COMRAM] int 
  6452 ;; Registers used:
  6453 ;;		wreg, status,2, status,0
  6454 ;; Tracked objects:
  6455 ;;		On entry : 0/0
  6456 ;;		On exit  : 0/0
  6457 ;;		Unchanged: 0/0
  6458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6459 ;;      Params:         4       0       0       0       0       0       0       0       0
  6460 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6461 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6462 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6463 ;;Total ram usage:        6 bytes
  6464 ;; Hardware stack levels used:    1
  6465 ;; Hardware stack levels required when called:    1
  6466 ;; This function calls:
  6467 ;;		Nothing
  6468 ;; This function is called by:
  6469 ;;		_setRtc
  6470 ;; This function uses a non-reentrant model
  6471 ;;
  6472                           
  6473                           	psect	text30
  6474  002202                     __ptext30:
  6475                           	opt callstack 0
  6476  002202                     ___awmod:
  6477                           	opt callstack 26
  6478  002202  0E00               	movlw	0
  6479  002204  6E06               	movwf	___awmod@sign^0,c
  6480  002206  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  6481  002208  EF0A  F011         	goto	u3000
  6482  00220C  EF08  F011         	goto	u3001
  6483  002210                     u3001:
  6484  002210  EF10  F011         	goto	l3870
  6485  002214                     u3000:
  6486  002214  6C01               	negf	___awmod@dividend^0,c
  6487  002216  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6488  002218  B0D8               	btfsc	status,0,c
  6489  00221A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6490  00221C  0E01               	movlw	1
  6491  00221E  6E06               	movwf	___awmod@sign^0,c
  6492  002220                     l3870:
  6493  002220  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  6494  002222  EF17  F011         	goto	u3010
  6495  002226  EF15  F011         	goto	u3011
  6496  00222A                     u3011:
  6497  00222A  EF1B  F011         	goto	l3874
  6498  00222E                     u3010:
  6499  00222E  6C03               	negf	___awmod@divisor^0,c
  6500  002230  1E04               	comf	(___awmod@divisor+1)^0,f,c
  6501  002232  B0D8               	btfsc	status,0,c
  6502  002234  2A04               	incf	(___awmod@divisor+1)^0,f,c
  6503  002236                     l3874:
  6504  002236  5003               	movf	___awmod@divisor^0,w,c
  6505  002238  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  6506  00223A  B4D8               	btfsc	status,2,c
  6507  00223C  EF22  F011         	goto	u3021
  6508  002240  EF24  F011         	goto	u3020
  6509  002244                     u3021:
  6510  002244  EF48  F011         	goto	l3890
  6511  002248                     u3020:
  6512  002248  0E01               	movlw	1
  6513  00224A  6E05               	movwf	___awmod@counter^0,c
  6514  00224C  EF2C  F011         	goto	l3880
  6515  002250                     l3878:
  6516  002250  90D8               	bcf	status,0,c
  6517  002252  3603               	rlcf	___awmod@divisor^0,f,c
  6518  002254  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  6519  002256  2A05               	incf	___awmod@counter^0,f,c
  6520  002258                     l3880:
  6521  002258  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6522  00225A  EF31  F011         	goto	u3031
  6523  00225E  EF33  F011         	goto	u3030
  6524  002262                     u3031:
  6525  002262  EF28  F011         	goto	l3878
  6526  002266                     u3030:
  6527  002266                     l3882:
  6528  002266  5003               	movf	___awmod@divisor^0,w,c
  6529  002268  5C01               	subwf	___awmod@dividend^0,w,c
  6530  00226A  5004               	movf	(___awmod@divisor+1)^0,w,c
  6531  00226C  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  6532  00226E  A0D8               	btfss	status,0,c
  6533  002270  EF3C  F011         	goto	u3041
  6534  002274  EF3E  F011         	goto	u3040
  6535  002278                     u3041:
  6536  002278  EF42  F011         	goto	l3886
  6537  00227C                     u3040:
  6538  00227C  5003               	movf	___awmod@divisor^0,w,c
  6539  00227E  5E01               	subwf	___awmod@dividend^0,f,c
  6540  002280  5004               	movf	(___awmod@divisor+1)^0,w,c
  6541  002282  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  6542  002284                     l3886:
  6543  002284  90D8               	bcf	status,0,c
  6544  002286  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  6545  002288  3203               	rrcf	___awmod@divisor^0,f,c
  6546  00228A  2E05               	decfsz	___awmod@counter^0,f,c
  6547  00228C  EF33  F011         	goto	l3882
  6548  002290                     l3890:
  6549  002290  5006               	movf	___awmod@sign^0,w,c
  6550  002292  B4D8               	btfsc	status,2,c
  6551  002294  EF4E  F011         	goto	u3051
  6552  002298  EF50  F011         	goto	u3050
  6553  00229C                     u3051:
  6554  00229C  EF54  F011         	goto	l3894
  6555  0022A0                     u3050:
  6556  0022A0  6C01               	negf	___awmod@dividend^0,c
  6557  0022A2  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6558  0022A4  B0D8               	btfsc	status,0,c
  6559  0022A6  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6560  0022A8                     l3894:
  6561  0022A8  C001  F001         	movff	___awmod@dividend,?___awmod
  6562  0022AC  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6563  0022B0  0012               	return		;funcret
  6564  0022B2                     __end_of___awmod:
  6565                           	opt callstack 0
  6566                           
  6567 ;; *************** function ___awdiv *****************
  6568 ;; Defined at:
  6569 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  6570 ;; Parameters:    Size  Location     Type
  6571 ;;  dividend        2    0[COMRAM] int 
  6572 ;;  divisor         2    2[COMRAM] int 
  6573 ;; Auto vars:     Size  Location     Type
  6574 ;;  quotient        2    6[COMRAM] int 
  6575 ;;  sign            1    5[COMRAM] unsigned char 
  6576 ;;  counter         1    4[COMRAM] unsigned char 
  6577 ;; Return value:  Size  Location     Type
  6578 ;;                  2    0[COMRAM] int 
  6579 ;; Registers used:
  6580 ;;		wreg, status,2, status,0
  6581 ;; Tracked objects:
  6582 ;;		On entry : 0/0
  6583 ;;		On exit  : 0/0
  6584 ;;		Unchanged: 0/0
  6585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6586 ;;      Params:         4       0       0       0       0       0       0       0       0
  6587 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6588 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6589 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6590 ;;Total ram usage:        8 bytes
  6591 ;; Hardware stack levels used:    1
  6592 ;; Hardware stack levels required when called:    1
  6593 ;; This function calls:
  6594 ;;		Nothing
  6595 ;; This function is called by:
  6596 ;;		_setRtc
  6597 ;; This function uses a non-reentrant model
  6598 ;;
  6599                           
  6600                           	psect	text31
  6601  00213E                     __ptext31:
  6602                           	opt callstack 0
  6603  00213E                     ___awdiv:
  6604                           	opt callstack 26
  6605  00213E  0E00               	movlw	0
  6606  002140  6E06               	movwf	___awdiv@sign^0,c
  6607  002142  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  6608  002144  EFA8  F010         	goto	u2940
  6609  002148  EFA6  F010         	goto	u2941
  6610  00214C                     u2941:
  6611  00214C  EFAE  F010         	goto	l3826
  6612  002150                     u2940:
  6613  002150  6C03               	negf	___awdiv@divisor^0,c
  6614  002152  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  6615  002154  B0D8               	btfsc	status,0,c
  6616  002156  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  6617  002158  0E01               	movlw	1
  6618  00215A  6E06               	movwf	___awdiv@sign^0,c
  6619  00215C                     l3826:
  6620  00215C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  6621  00215E  EFB5  F010         	goto	u2950
  6622  002162  EFB3  F010         	goto	u2951
  6623  002166                     u2951:
  6624  002166  EFBB  F010         	goto	l3832
  6625  00216A                     u2950:
  6626  00216A  6C01               	negf	___awdiv@dividend^0,c
  6627  00216C  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  6628  00216E  B0D8               	btfsc	status,0,c
  6629  002170  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  6630  002172  0E01               	movlw	1
  6631  002174  1A06               	xorwf	___awdiv@sign^0,f,c
  6632  002176                     l3832:
  6633  002176  0E00               	movlw	0
  6634  002178  6E08               	movwf	(___awdiv@quotient+1)^0,c
  6635  00217A  0E00               	movlw	0
  6636  00217C  6E07               	movwf	___awdiv@quotient^0,c
  6637  00217E  5003               	movf	___awdiv@divisor^0,w,c
  6638  002180  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  6639  002182  B4D8               	btfsc	status,2,c
  6640  002184  EFC6  F010         	goto	u2961
  6641  002188  EFC8  F010         	goto	u2960
  6642  00218C                     u2961:
  6643  00218C  EFF0  F010         	goto	l3854
  6644  002190                     u2960:
  6645  002190  0E01               	movlw	1
  6646  002192  6E05               	movwf	___awdiv@counter^0,c
  6647  002194  EFD0  F010         	goto	l3840
  6648  002198                     l3838:
  6649  002198  90D8               	bcf	status,0,c
  6650  00219A  3603               	rlcf	___awdiv@divisor^0,f,c
  6651  00219C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  6652  00219E  2A05               	incf	___awdiv@counter^0,f,c
  6653  0021A0                     l3840:
  6654  0021A0  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  6655  0021A2  EFD5  F010         	goto	u2971
  6656  0021A6  EFD7  F010         	goto	u2970
  6657  0021AA                     u2971:
  6658  0021AA  EFCC  F010         	goto	l3838
  6659  0021AE                     u2970:
  6660  0021AE                     l3842:
  6661  0021AE  90D8               	bcf	status,0,c
  6662  0021B0  3607               	rlcf	___awdiv@quotient^0,f,c
  6663  0021B2  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  6664  0021B4  5003               	movf	___awdiv@divisor^0,w,c
  6665  0021B6  5C01               	subwf	___awdiv@dividend^0,w,c
  6666  0021B8  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6667  0021BA  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  6668  0021BC  A0D8               	btfss	status,0,c
  6669  0021BE  EFE3  F010         	goto	u2981
  6670  0021C2  EFE5  F010         	goto	u2980
  6671  0021C6                     u2981:
  6672  0021C6  EFEA  F010         	goto	l3850
  6673  0021CA                     u2980:
  6674  0021CA  5003               	movf	___awdiv@divisor^0,w,c
  6675  0021CC  5E01               	subwf	___awdiv@dividend^0,f,c
  6676  0021CE  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6677  0021D0  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  6678  0021D2  8007               	bsf	___awdiv@quotient^0,0,c
  6679  0021D4                     l3850:
  6680  0021D4  90D8               	bcf	status,0,c
  6681  0021D6  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  6682  0021D8  3203               	rrcf	___awdiv@divisor^0,f,c
  6683  0021DA  2E05               	decfsz	___awdiv@counter^0,f,c
  6684  0021DC  EFD7  F010         	goto	l3842
  6685  0021E0                     l3854:
  6686  0021E0  5006               	movf	___awdiv@sign^0,w,c
  6687  0021E2  B4D8               	btfsc	status,2,c
  6688  0021E4  EFF6  F010         	goto	u2991
  6689  0021E8  EFF8  F010         	goto	u2990
  6690  0021EC                     u2991:
  6691  0021EC  EFFC  F010         	goto	l3858
  6692  0021F0                     u2990:
  6693  0021F0  6C07               	negf	___awdiv@quotient^0,c
  6694  0021F2  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  6695  0021F4  B0D8               	btfsc	status,0,c
  6696  0021F6  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  6697  0021F8                     l3858:
  6698  0021F8  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6699  0021FC  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6700  002200  0012               	return		;funcret
  6701  002202                     __end_of___awdiv:
  6702                           	opt callstack 0
  6703                           
  6704 ;; *************** function _dameDatosSistema *****************
  6705 ;; Defined at:
  6706 ;;		line 656 in file "main.c"
  6707 ;; Parameters:    Size  Location     Type
  6708 ;;		None
  6709 ;; Auto vars:     Size  Location     Type
  6710 ;;  j               2  132[BANK0 ] int 
  6711 ;;  i               2  134[BANK0 ] int 
  6712 ;;  diasRegar      50   76[BANK0 ] unsigned char [50]
  6713 ;;  buffer         50   26[BANK0 ] unsigned char [50]
  6714 ;; Return value:  Size  Location     Type
  6715 ;;                  1    wreg      void 
  6716 ;; Registers used:
  6717 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6718 ;; Tracked objects:
  6719 ;;		On entry : 0/0
  6720 ;;		On exit  : 0/0
  6721 ;;		Unchanged: 0/0
  6722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6723 ;;      Params:         0       0       0       0       0       0       0       0       0
  6724 ;;      Locals:         0     110       0       0       0       0       0       0       0
  6725 ;;      Temps:          0       4       0       0       0       0       0       0       0
  6726 ;;      Totals:         0     114       0       0       0       0       0       0       0
  6727 ;;Total ram usage:      114 bytes
  6728 ;; Hardware stack levels used:    1
  6729 ;; Hardware stack levels required when called:    9
  6730 ;; This function calls:
  6731 ;;		_UART_printf
  6732 ;;		_UART_write
  6733 ;;		___wmul
  6734 ;;		_sprintf
  6735 ;; This function is called by:
  6736 ;;		_sistemaPrincipal
  6737 ;; This function uses a non-reentrant model
  6738 ;;
  6739                           
  6740                           	psect	text32
  6741  000B22                     __ptext32:
  6742                           	opt callstack 0
  6743  000B22                     _dameDatosSistema:
  6744                           	opt callstack 20
  6745  000B22                     
  6746                           ;main.c: 658:     char buffer[50];;main.c: 659:     char diasRegar[50];;main.c: 661:    
      +                           UART_write('I');
  6747  000B22  0E49               	movlw	73
  6748  000B24  ECAE  F017         	call	_UART_write
  6749  000B28                     
  6750                           ;main.c: 663:     UART_printf("\r\n\nHora | Regar(1 si 0 no) | Minutos de riego | DIAS R
      +                          EGAR\r\n\n");
  6751  000B28  0E72               	movlw	low STR_32
  6752  000B2A  6E02               	movwf	UART_printf@cadena^0,c
  6753  000B2C  0E7A               	movlw	high STR_32
  6754  000B2E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6755  000B30  EC95  F014         	call	_UART_printf	;wreg free
  6756  000B34                     
  6757                           ;main.c: 664:     UART_printf("                                             DLMIJVS\r\n"
      +                          );
  6758  000B34  0E97               	movlw	low STR_33
  6759  000B36  6E02               	movwf	UART_printf@cadena^0,c
  6760  000B38  0E7B               	movlw	high STR_33
  6761  000B3A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6762  000B3C  EC95  F014         	call	_UART_printf	;wreg free
  6763  000B40                     
  6764                           ;main.c: 666:     for (int i = 0; i < 24; i++) {
  6765  000B40  0E00               	movlw	0
  6766  000B42  0100               	movlb	0	; () banked
  6767  000B44  6FE7               	movwf	(dameDatosSistema@i+1)& (0+255),b
  6768  000B46  0E00               	movlw	0
  6769  000B48  6FE6               	movwf	dameDatosSistema@i& (0+255),b
  6770  000B4A                     l4220:
  6771                           
  6772                           ; BSR set to: 0
  6773                           ;main.c: 668:         if (horarios[i].regar) {
  6774  000B4A  C0E6  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  6775  000B4E  C0E7  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  6776  000B52  0E00               	movlw	0
  6777  000B54  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6778  000B56  0E0C               	movlw	12
  6779  000B58  6E03               	movwf	___wmul@multiplicand^0,c
  6780  000B5A  EC5F  F017         	call	___wmul	;wreg free
  6781  000B5E  0EB3               	movlw	low (_horarios+9)
  6782  000B60  2401               	addwf	?___wmul^0,w,c
  6783  000B62  6ED9               	movwf	fsr2l,c
  6784  000B64  0E01               	movlw	high (_horarios+9)
  6785  000B66  2002               	addwfc	(?___wmul+1)^0,w,c
  6786  000B68  6EDA               	movwf	fsr2h,c
  6787  000B6A  50DF               	movf	indf2,w,c
  6788  000B6C  B4D8               	btfsc	status,2,c
  6789  000B6E  EFBB  F005         	goto	u3371
  6790  000B72  EFBD  F005         	goto	u3370
  6791  000B76                     u3371:
  6792  000B76  EF7C  F006         	goto	l4246
  6793  000B7A                     u3370:
  6794  000B7A                     
  6795                           ;main.c: 670:             for (int j = 0; j < 7; j++) {
  6796  000B7A  0E00               	movlw	0
  6797  000B7C  0100               	movlb	0	; () banked
  6798  000B7E  6FE5               	movwf	(dameDatosSistema@j+1)& (0+255),b
  6799  000B80  0E00               	movlw	0
  6800  000B82  6FE4               	movwf	dameDatosSistema@j& (0+255),b
  6801  000B84  EFD8  F005         	goto	l4234
  6802  000B88                     l4228:
  6803                           
  6804                           ; BSR set to: 0
  6805                           ;main.c: 673:                         diasRegar[j] = '0';
  6806  000B88  0EAC               	movlw	low dameDatosSistema@diasRegar
  6807  000B8A  25E4               	addwf	dameDatosSistema@j& (0+255),w,b
  6808  000B8C  6ED9               	movwf	fsr2l,c
  6809  000B8E  0E00               	movlw	high dameDatosSistema@diasRegar
  6810  000B90  21E5               	addwfc	(dameDatosSistema@j+1)& (0+255),w,b
  6811  000B92  6EDA               	movwf	fsr2h,c
  6812  000B94  0E30               	movlw	48
  6813  000B96  6EDF               	movwf	indf2,c
  6814                           
  6815                           ;main.c: 674:                         break;
  6816  000B98  EF0A  F006         	goto	l4236
  6817  000B9C                     l4230:
  6818                           
  6819                           ; BSR set to: 0
  6820                           ;main.c: 677:                         diasRegar[j] = '1';
  6821  000B9C  0EAC               	movlw	low dameDatosSistema@diasRegar
  6822  000B9E  25E4               	addwf	dameDatosSistema@j& (0+255),w,b
  6823  000BA0  6ED9               	movwf	fsr2l,c
  6824  000BA2  0E00               	movlw	high dameDatosSistema@diasRegar
  6825  000BA4  21E5               	addwfc	(dameDatosSistema@j+1)& (0+255),w,b
  6826  000BA6  6EDA               	movwf	fsr2h,c
  6827  000BA8  0E31               	movlw	49
  6828  000BAA  6EDF               	movwf	indf2,c
  6829                           
  6830                           ;main.c: 678:                         break;
  6831  000BAC  EF0A  F006         	goto	l4236
  6832  000BB0                     l4234:
  6833                           
  6834                           ; BSR set to: 0
  6835  000BB0  C0E6  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  6836  000BB4  C0E7  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  6837  000BB8  0E00               	movlw	0
  6838  000BBA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6839  000BBC  0E0C               	movlw	12
  6840  000BBE  6E03               	movwf	___wmul@multiplicand^0,c
  6841  000BC0  EC5F  F017         	call	___wmul	;wreg free
  6842  000BC4  0EAA               	movlw	low _horarios
  6843  000BC6  0100               	movlb	0	; () banked
  6844  000BC8  6F76               	movwf	??_dameDatosSistema& (0+255),b
  6845  000BCA  0E01               	movlw	high _horarios
  6846  000BCC  6F77               	movwf	(??_dameDatosSistema+1)& (0+255),b
  6847  000BCE  0E01               	movlw	1
  6848  000BD0  2776               	addwf	??_dameDatosSistema& (0+255),f,b
  6849  000BD2  0E00               	movlw	0
  6850  000BD4  2377               	addwfc	(??_dameDatosSistema+1)& (0+255),f,b
  6851  000BD6  5001               	movf	?___wmul^0,w,c
  6852  000BD8  2776               	addwf	??_dameDatosSistema& (0+255),f,b
  6853  000BDA  5002               	movf	(?___wmul+1)^0,w,c
  6854  000BDC  2377               	addwfc	(??_dameDatosSistema+1)& (0+255),f,b
  6855  000BDE  51E4               	movf	dameDatosSistema@j& (0+255),w,b
  6856  000BE0  2576               	addwf	??_dameDatosSistema& (0+255),w,b
  6857  000BE2  6ED9               	movwf	fsr2l,c
  6858  000BE4  51E5               	movf	(dameDatosSistema@j+1)& (0+255),w,b
  6859  000BE6  2177               	addwfc	(??_dameDatosSistema+1)& (0+255),w,b
  6860  000BE8  6EDA               	movwf	fsr2h,c
  6861  000BEA  50DF               	movf	indf2,w,c
  6862  000BEC  6F78               	movwf	(??_dameDatosSistema+2)& (0+255),b
  6863  000BEE  6B79               	clrf	(??_dameDatosSistema+3)& (0+255),b
  6864                           
  6865                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6866                           ; Switch size 1, requested type "simple"
  6867                           ; Number of cases is 1, Range of values is 0 to 0
  6868                           ; switch strategies available:
  6869                           ; Name         Instructions Cycles
  6870                           ; simple_byte            4     3 (average)
  6871                           ;	Chosen strategy is simple_byte
  6872  000BF0  5179               	movf	(??_dameDatosSistema+3)& (0+255),w,b
  6873  000BF2  0A00               	xorlw	0	; case 0
  6874  000BF4  B4D8               	btfsc	status,2,c
  6875  000BF6  EFFF  F005         	goto	l4790
  6876  000BFA  EF0A  F006         	goto	l4236
  6877  000BFE                     l4790:
  6878                           
  6879                           ; BSR set to: 0
  6880                           ; Switch size 1, requested type "simple"
  6881                           ; Number of cases is 2, Range of values is 0 to 1
  6882                           ; switch strategies available:
  6883                           ; Name         Instructions Cycles
  6884                           ; simple_byte            7     4 (average)
  6885                           ;	Chosen strategy is simple_byte
  6886  000BFE  5178               	movf	(??_dameDatosSistema+2)& (0+255),w,b
  6887  000C00  0A00               	xorlw	0	; case 0
  6888  000C02  B4D8               	btfsc	status,2,c
  6889  000C04  EFC4  F005         	goto	l4228
  6890  000C08  0A01               	xorlw	1	; case 1
  6891  000C0A  B4D8               	btfsc	status,2,c
  6892  000C0C  EFCE  F005         	goto	l4230
  6893  000C10  EF0A  F006         	goto	l4236
  6894  000C14                     l4236:
  6895                           
  6896                           ; BSR set to: 0
  6897                           ;main.c: 680:             }
  6898  000C14  4BE4               	infsnz	dameDatosSistema@j& (0+255),f,b
  6899  000C16  2BE5               	incf	(dameDatosSistema@j+1)& (0+255),f,b
  6900  000C18                     
  6901                           ; BSR set to: 0
  6902  000C18  BFE5               	btfsc	(dameDatosSistema@j+1)& (0+255),7,b
  6903  000C1A  EF18  F006         	goto	u3381
  6904  000C1E  51E5               	movf	(dameDatosSistema@j+1)& (0+255),w,b
  6905  000C20  E109               	bnz	u3380
  6906  000C22  0E07               	movlw	7
  6907  000C24  5DE4               	subwf	dameDatosSistema@j& (0+255),w,b
  6908  000C26  A0D8               	btfss	status,0,c
  6909  000C28  EF18  F006         	goto	u3381
  6910  000C2C  EF1A  F006         	goto	u3380
  6911  000C30                     u3381:
  6912  000C30  EFD8  F005         	goto	l4234
  6913  000C34                     u3380:
  6914  000C34                     
  6915                           ; BSR set to: 0
  6916                           ;main.c: 682:             sprintf(buffer, " %2d  |          %d       |         %2d      
      +                           | %s\r\n",
  6917  000C34  C0E6  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  6918  000C38  C0E7  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  6919  000C3C  0E00               	movlw	0
  6920  000C3E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6921  000C40  0E0C               	movlw	12
  6922  000C42  6E03               	movwf	___wmul@multiplicand^0,c
  6923  000C44  EC5F  F017         	call	___wmul	;wreg free
  6924  000C48  0EAA               	movlw	low _horarios
  6925  000C4A  2401               	addwf	?___wmul^0,w,c
  6926  000C4C  6ED9               	movwf	fsr2l,c
  6927  000C4E  0E01               	movlw	high _horarios
  6928  000C50  2002               	addwfc	(?___wmul+1)^0,w,c
  6929  000C52  6EDA               	movwf	fsr2h,c
  6930  000C54  50DF               	movf	indf2,w,c
  6931  000C56  0100               	movlb	0	; () banked
  6932  000C58  6F76               	movwf	??_dameDatosSistema& (0+255),b
  6933  000C5A  5176               	movf	??_dameDatosSistema& (0+255),w,b
  6934  000C5C  6FDE               	movwf	_dameDatosSistema$1916& (0+255),b
  6935  000C5E  6BDF               	clrf	(_dameDatosSistema$1916+1)& (0+255),b
  6936                           
  6937                           ;main.c: 682:             sprintf(buffer, " %2d  |          %d       |         %2d      
      +                           | %s\r\n",
  6938  000C60  C0E6  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  6939  000C64  C0E7  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  6940  000C68  0E00               	movlw	0
  6941  000C6A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6942  000C6C  0E0C               	movlw	12
  6943  000C6E  6E03               	movwf	___wmul@multiplicand^0,c
  6944  000C70  EC5F  F017         	call	___wmul	;wreg free
  6945  000C74  0EB3               	movlw	low (_horarios+9)
  6946  000C76  2401               	addwf	?___wmul^0,w,c
  6947  000C78  6ED9               	movwf	fsr2l,c
  6948  000C7A  0E01               	movlw	high (_horarios+9)
  6949  000C7C  2002               	addwfc	(?___wmul+1)^0,w,c
  6950  000C7E  6EDA               	movwf	fsr2h,c
  6951  000C80  50DF               	movf	indf2,w,c
  6952  000C82  0100               	movlb	0	; () banked
  6953  000C84  6F76               	movwf	??_dameDatosSistema& (0+255),b
  6954  000C86  5176               	movf	??_dameDatosSistema& (0+255),w,b
  6955  000C88  6FE0               	movwf	_dameDatosSistema$1917& (0+255),b
  6956  000C8A  6BE1               	clrf	(_dameDatosSistema$1917+1)& (0+255),b
  6957                           
  6958                           ;main.c: 682:             sprintf(buffer, " %2d  |          %d       |         %2d      
      +                           | %s\r\n",
  6959  000C8C  C0E6  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  6960  000C90  C0E7  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  6961  000C94  0E00               	movlw	0
  6962  000C96  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6963  000C98  0E0C               	movlw	12
  6964  000C9A  6E03               	movwf	___wmul@multiplicand^0,c
  6965  000C9C  EC5F  F017         	call	___wmul	;wreg free
  6966  000CA0  0EB5               	movlw	low (_horarios+11)
  6967  000CA2  2401               	addwf	?___wmul^0,w,c
  6968  000CA4  6ED9               	movwf	fsr2l,c
  6969  000CA6  0E01               	movlw	high (_horarios+11)
  6970  000CA8  2002               	addwfc	(?___wmul+1)^0,w,c
  6971  000CAA  6EDA               	movwf	fsr2h,c
  6972  000CAC  50DF               	movf	indf2,w,c
  6973  000CAE  0100               	movlb	0	; () banked
  6974  000CB0  6F76               	movwf	??_dameDatosSistema& (0+255),b
  6975  000CB2  5176               	movf	??_dameDatosSistema& (0+255),w,b
  6976  000CB4  6FE2               	movwf	_dameDatosSistema$1918& (0+255),b
  6977  000CB6  6BE3               	clrf	(_dameDatosSistema$1918+1)& (0+255),b
  6978  000CB8                     
  6979                           ; BSR set to: 0
  6980                           ;main.c: 682:             sprintf(buffer, " %2d  |          %d       |         %2d      
      +                           | %s\r\n",
  6981  000CB8  0E7A               	movlw	low dameDatosSistema@buffer
  6982  000CBA  6F60               	movwf	sprintf@s& (0+255),b
  6983  000CBC  0E00               	movlw	high dameDatosSistema@buffer
  6984  000CBE  6F61               	movwf	(sprintf@s+1)& (0+255),b
  6985  000CC0  0ECE               	movlw	low STR_34
  6986  000CC2  6F62               	movwf	sprintf@fmt& (0+255),b
  6987  000CC4  0E7B               	movlw	high STR_34
  6988  000CC6  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  6989  000CC8  C0DE  F064         	movff	_dameDatosSistema$1916,?_sprintf+4
  6990  000CCC  C0DF  F065         	movff	_dameDatosSistema$1916+1,?_sprintf+5
  6991  000CD0  C0E0  F066         	movff	_dameDatosSistema$1917,?_sprintf+6
  6992  000CD4  C0E1  F067         	movff	_dameDatosSistema$1917+1,?_sprintf+7
  6993  000CD8  C0E2  F068         	movff	_dameDatosSistema$1918,?_sprintf+8
  6994  000CDC  C0E3  F069         	movff	_dameDatosSistema$1918+1,?_sprintf+9
  6995  000CE0  0EAC               	movlw	low dameDatosSistema@diasRegar
  6996  000CE2  6F6A               	movwf	(?_sprintf+10)& (0+255),b
  6997  000CE4  0E00               	movlw	high dameDatosSistema@diasRegar
  6998  000CE6  6F6B               	movwf	(?_sprintf+11)& (0+255),b
  6999  000CE8  EC7B  F015         	call	_sprintf	;wreg free
  7000  000CEC                     
  7001                           ;main.c: 686:             UART_printf(buffer);
  7002  000CEC  0E7A               	movlw	low dameDatosSistema@buffer
  7003  000CEE  6E02               	movwf	UART_printf@cadena^0,c
  7004  000CF0  0E00               	movlw	high dameDatosSistema@buffer
  7005  000CF2  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7006  000CF4  EC95  F014         	call	_UART_printf	;wreg free
  7007  000CF8                     l4246:
  7008                           
  7009                           ;main.c: 690:     }
  7010  000CF8  0100               	movlb	0	; () banked
  7011  000CFA  4BE6               	infsnz	dameDatosSistema@i& (0+255),f,b
  7012  000CFC  2BE7               	incf	(dameDatosSistema@i+1)& (0+255),f,b
  7013  000CFE                     
  7014                           ; BSR set to: 0
  7015  000CFE  BFE7               	btfsc	(dameDatosSistema@i+1)& (0+255),7,b
  7016  000D00  EF8B  F006         	goto	u3391
  7017  000D04  51E7               	movf	(dameDatosSistema@i+1)& (0+255),w,b
  7018  000D06  E109               	bnz	u3390
  7019  000D08  0E18               	movlw	24
  7020  000D0A  5DE6               	subwf	dameDatosSistema@i& (0+255),w,b
  7021  000D0C  A0D8               	btfss	status,0,c
  7022  000D0E  EF8B  F006         	goto	u3391
  7023  000D12  EF8D  F006         	goto	u3390
  7024  000D16                     u3391:
  7025  000D16  EFA5  F005         	goto	l4220
  7026  000D1A                     u3390:
  7027  000D1A                     
  7028                           ; BSR set to: 0
  7029                           ;main.c: 692:     UART_write('I');
  7030  000D1A  0E49               	movlw	73
  7031  000D1C  ECAE  F017         	call	_UART_write
  7032  000D20  0012               	return		;funcret
  7033  000D22                     __end_of_dameDatosSistema:
  7034                           	opt callstack 0
  7035                           
  7036 ;; *************** function _asignarHorarios *****************
  7037 ;; Defined at:
  7038 ;;		line 385 in file "main.c"
  7039 ;; Parameters:    Size  Location     Type
  7040 ;;		None
  7041 ;; Auto vars:     Size  Location     Type
  7042 ;;  i               2   77[BANK0 ] int 
  7043 ;;  buffer         50   24[BANK0 ] unsigned char [50]
  7044 ;;  hora            1   76[BANK0 ] unsigned char 
  7045 ;;  diaRegar        1   75[BANK0 ] unsigned char 
  7046 ;;  Rx              1   74[BANK0 ] unsigned char 
  7047 ;; Return value:  Size  Location     Type
  7048 ;;                  1    wreg      void 
  7049 ;; Registers used:
  7050 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7051 ;; Tracked objects:
  7052 ;;		On entry : 0/0
  7053 ;;		On exit  : 0/0
  7054 ;;		Unchanged: 0/0
  7055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7056 ;;      Params:         0       0       0       0       0       0       0       0       0
  7057 ;;      Locals:         0      55       0       0       0       0       0       0       0
  7058 ;;      Temps:          0       2       0       0       0       0       0       0       0
  7059 ;;      Totals:         0      57       0       0       0       0       0       0       0
  7060 ;;Total ram usage:       57 bytes
  7061 ;; Hardware stack levels used:    1
  7062 ;; Hardware stack levels required when called:    9
  7063 ;; This function calls:
  7064 ;;		_UART_printf
  7065 ;;		_escribeHorariosMemoria
  7066 ;;		_getValue
  7067 ;;		_sprintf
  7068 ;; This function is called by:
  7069 ;;		_sistemaPrincipal
  7070 ;; This function uses a non-reentrant model
  7071 ;;
  7072                           
  7073                           	psect	text33
  7074  0015FC                     __ptext33:
  7075                           	opt callstack 0
  7076  0015FC                     _asignarHorarios:
  7077                           	opt callstack 20
  7078  0015FC                     
  7079                           ;main.c: 387:     unsigned char hora;;main.c: 388:     unsigned char Rx;;main.c: 389:   
      +                            unsigned char diaRegar;;main.c: 390:     char buffer[50];;main.c: 392:     UART_printf
      +                          ("\r\n OPCIONES DE REGADO \r\n");
  7080  0015FC  0E2C               	movlw	low STR_7
  7081  0015FE  6E02               	movwf	UART_printf@cadena^0,c
  7082  001600  0E7F               	movlw	high STR_7
  7083  001602  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7084  001604  EC95  F014         	call	_UART_printf	;wreg free
  7085                           
  7086                           ;main.c: 394:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  7087  001608  0E03               	movlw	low STR_8
  7088  00160A  6E02               	movwf	UART_printf@cadena^0,c
  7089  00160C  0E7C               	movlw	high STR_8
  7090  00160E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7091  001610  EC95  F014         	call	_UART_printf	;wreg free
  7092  001614                     
  7093                           ;main.c: 395:     hora = getValue(2);
  7094  001614  0E00               	movlw	0
  7095  001616  6E05               	movwf	(getValue@numCharacters+1)^0,c
  7096  001618  0E02               	movlw	2
  7097  00161A  6E04               	movwf	getValue@numCharacters^0,c
  7098  00161C  EC7F  F004         	call	_getValue	;wreg free
  7099  001620  0100               	movlb	0	; () banked
  7100  001622  6FAC               	movwf	asignarHorarios@hora& (0+255),b
  7101  001624                     
  7102                           ; BSR set to: 0
  7103                           ;main.c: 397:     if (hora != '@') {
  7104  001624  0E40               	movlw	64
  7105  001626  19AC               	xorwf	asignarHorarios@hora& (0+255),w,b
  7106  001628  B4D8               	btfsc	status,2,c
  7107  00162A  EF19  F00B         	goto	u3311
  7108  00162E  EF1B  F00B         	goto	u3310
  7109  001632                     u3311:
  7110  001632  EFA1  F00B         	goto	l311
  7111  001636                     u3310:
  7112  001636                     
  7113                           ; BSR set to: 0
  7114                           ;main.c: 399:         UART_printf("\r\n Ingrese 1 para activar || ingrese 0 para desacti
      +                          var: \r\n");
  7115  001636  0EB0               	movlw	low STR_9
  7116  001638  6E02               	movwf	UART_printf@cadena^0,c
  7117  00163A  0E7A               	movlw	high STR_9
  7118  00163C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7119  00163E  EC95  F014         	call	_UART_printf	;wreg free
  7120  001642                     
  7121                           ;main.c: 401:         Rx = getValue(1);
  7122  001642  0E00               	movlw	0
  7123  001644  6E05               	movwf	(getValue@numCharacters+1)^0,c
  7124  001646  0E01               	movlw	1
  7125  001648  6E04               	movwf	getValue@numCharacters^0,c
  7126  00164A  EC7F  F004         	call	_getValue	;wreg free
  7127  00164E  0100               	movlb	0	; () banked
  7128  001650  6FAA               	movwf	asignarHorarios@Rx& (0+255),b
  7129  001652                     
  7130                           ; BSR set to: 0
  7131                           ;main.c: 404:         if (Rx == 1) {
  7132  001652  05AA               	decf	asignarHorarios@Rx& (0+255),w,b
  7133  001654  A4D8               	btfss	status,2,c
  7134  001656  EF2F  F00B         	goto	u3321
  7135  00165A  EF31  F00B         	goto	u3320
  7136  00165E                     u3321:
  7137  00165E  EFA1  F00B         	goto	l311
  7138  001662                     u3320:
  7139  001662                     
  7140                           ; BSR set to: 0
  7141                           ;main.c: 406:             UART_printf("\r\n Ingrese 1 para activar || ingrese 0 para des
      +                          activar: \r\n");
  7142  001662  0EB0               	movlw	low STR_9
  7143  001664  6E02               	movwf	UART_printf@cadena^0,c
  7144  001666  0E7A               	movlw	high STR_9
  7145  001668  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7146  00166A  EC95  F014         	call	_UART_printf	;wreg free
  7147                           
  7148                           ;main.c: 407:             UART_printf("\r\n DOMINGO = [1] ... SABADO = [7] \r\n");
  7149  00166E  0EB1               	movlw	low STR_11
  7150  001670  6E02               	movwf	UART_printf@cadena^0,c
  7151  001672  0E7D               	movlw	high STR_11
  7152  001674  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7153  001676  EC95  F014         	call	_UART_printf	;wreg free
  7154  00167A                     
  7155                           ;main.c: 409:             for (int i = 0; i < 7; i++) {
  7156  00167A  0E00               	movlw	0
  7157  00167C  0100               	movlb	0	; () banked
  7158  00167E  6FAE               	movwf	(asignarHorarios@i+1)& (0+255),b
  7159  001680  0E00               	movlw	0
  7160  001682  6FAD               	movwf	asignarHorarios@i& (0+255),b
  7161  001684                     l4166:
  7162                           
  7163                           ; BSR set to: 0
  7164                           ;main.c: 410:                 sprintf(buffer, "\r\n[%d]: ", i + 1);
  7165  001684  0E78               	movlw	low asignarHorarios@buffer
  7166  001686  6F60               	movwf	sprintf@s& (0+255),b
  7167  001688  0E00               	movlw	high asignarHorarios@buffer
  7168  00168A  6F61               	movwf	(sprintf@s+1)& (0+255),b
  7169  00168C  0EEC               	movlw	low STR_12
  7170  00168E  6F62               	movwf	sprintf@fmt& (0+255),b
  7171  001690  0E7F               	movlw	high STR_12
  7172  001692  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  7173  001694  0E01               	movlw	1
  7174  001696  25AD               	addwf	asignarHorarios@i& (0+255),w,b
  7175  001698  6F64               	movwf	(?_sprintf+4)& (0+255),b
  7176  00169A  0E00               	movlw	0
  7177  00169C  21AE               	addwfc	(asignarHorarios@i+1)& (0+255),w,b
  7178  00169E  6F65               	movwf	(?_sprintf+5)& (0+255),b
  7179  0016A0  EC7B  F015         	call	_sprintf	;wreg free
  7180  0016A4                     
  7181                           ;main.c: 411:                 UART_printf(buffer);
  7182  0016A4  0E78               	movlw	low asignarHorarios@buffer
  7183  0016A6  6E02               	movwf	UART_printf@cadena^0,c
  7184  0016A8  0E00               	movlw	high asignarHorarios@buffer
  7185  0016AA  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7186  0016AC  EC95  F014         	call	_UART_printf	;wreg free
  7187  0016B0                     
  7188                           ;main.c: 412:                 diaRegar = getValue(1);
  7189  0016B0  0E00               	movlw	0
  7190  0016B2  6E05               	movwf	(getValue@numCharacters+1)^0,c
  7191  0016B4  0E01               	movlw	1
  7192  0016B6  6E04               	movwf	getValue@numCharacters^0,c
  7193  0016B8  EC7F  F004         	call	_getValue	;wreg free
  7194  0016BC  0100               	movlb	0	; () banked
  7195  0016BE  6FAB               	movwf	asignarHorarios@diaRegar& (0+255),b
  7196  0016C0                     
  7197                           ; BSR set to: 0
  7198                           ;main.c: 414:                 if (diaRegar != '@') {
  7199  0016C0  0E40               	movlw	64
  7200  0016C2  19AB               	xorwf	asignarHorarios@diaRegar& (0+255),w,b
  7201  0016C4  B4D8               	btfsc	status,2,c
  7202  0016C6  EF67  F00B         	goto	u3331
  7203  0016CA  EF69  F00B         	goto	u3330
  7204  0016CE                     u3331:
  7205  0016CE  EF7F  F00B         	goto	l4176
  7206  0016D2                     u3330:
  7207  0016D2                     
  7208                           ; BSR set to: 0
  7209                           ;main.c: 416:                     horarios[hora].dias[i] = diaRegar;
  7210  0016D2  51AC               	movf	asignarHorarios@hora& (0+255),w,b
  7211  0016D4  0D0C               	mullw	12
  7212  0016D6  0EAA               	movlw	low _horarios
  7213  0016D8  6F76               	movwf	??_asignarHorarios& (0+255),b
  7214  0016DA  0E01               	movlw	high _horarios
  7215  0016DC  6F77               	movwf	(??_asignarHorarios+1)& (0+255),b
  7216  0016DE  0E01               	movlw	1
  7217  0016E0  2776               	addwf	??_asignarHorarios& (0+255),f,b
  7218  0016E2  0E00               	movlw	0
  7219  0016E4  2377               	addwfc	(??_asignarHorarios+1)& (0+255),f,b
  7220  0016E6  50F3               	movf	243,w,c
  7221  0016E8  2776               	addwf	??_asignarHorarios& (0+255),f,b
  7222  0016EA  50F4               	movf	244,w,c
  7223  0016EC  2377               	addwfc	(??_asignarHorarios+1)& (0+255),f,b
  7224  0016EE  51AD               	movf	asignarHorarios@i& (0+255),w,b
  7225  0016F0  2576               	addwf	??_asignarHorarios& (0+255),w,b
  7226  0016F2  6ED9               	movwf	fsr2l,c
  7227  0016F4  51AE               	movf	(asignarHorarios@i+1)& (0+255),w,b
  7228  0016F6  2177               	addwfc	(??_asignarHorarios+1)& (0+255),w,b
  7229  0016F8  6EDA               	movwf	fsr2h,c
  7230  0016FA  C0AB  FFDF         	movff	asignarHorarios@diaRegar,indf2
  7231  0016FE                     l4176:
  7232                           
  7233                           ; BSR set to: 0
  7234                           ;main.c: 419:             }
  7235  0016FE  4BAD               	infsnz	asignarHorarios@i& (0+255),f,b
  7236  001700  2BAE               	incf	(asignarHorarios@i+1)& (0+255),f,b
  7237  001702                     
  7238                           ; BSR set to: 0
  7239  001702  BFAE               	btfsc	(asignarHorarios@i+1)& (0+255),7,b
  7240  001704  EF8D  F00B         	goto	u3341
  7241  001708  51AE               	movf	(asignarHorarios@i+1)& (0+255),w,b
  7242  00170A  E109               	bnz	u3340
  7243  00170C  0E07               	movlw	7
  7244  00170E  5DAD               	subwf	asignarHorarios@i& (0+255),w,b
  7245  001710  A0D8               	btfss	status,0,c
  7246  001712  EF8D  F00B         	goto	u3341
  7247  001716  EF8F  F00B         	goto	u3340
  7248  00171A                     u3341:
  7249  00171A  EF42  F00B         	goto	l4166
  7250  00171E                     u3340:
  7251  00171E                     
  7252                           ; BSR set to: 0
  7253                           ;main.c: 421:             horarios[hora].regar = Rx;
  7254  00171E  51AC               	movf	asignarHorarios@hora& (0+255),w,b
  7255  001720  0D0C               	mullw	12
  7256  001722  0EB3               	movlw	low (_horarios+9)
  7257  001724  24F3               	addwf	243,w,c
  7258  001726  6ED9               	movwf	fsr2l,c
  7259  001728  0E01               	movlw	high (_horarios+9)
  7260  00172A  20F4               	addwfc	prodh,w,c
  7261  00172C  6EDA               	movwf	fsr2h,c
  7262  00172E  C0AA  FFDF         	movff	asignarHorarios@Rx,indf2
  7263  001732                     
  7264                           ; BSR set to: 0
  7265                           ;main.c: 423:             escribeHorariosMemoria();
  7266  001732  ECA2  F00B         	call	_escribeHorariosMemoria	;wreg free
  7267  001736                     
  7268                           ;main.c: 426:             UART_printf("\r\n Horario Modificado! \r\n");
  7269  001736  0EF8               	movlw	low STR_13
  7270  001738  6E02               	movwf	UART_printf@cadena^0,c
  7271  00173A  0E7E               	movlw	high STR_13
  7272  00173C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7273  00173E  EC95  F014         	call	_UART_printf	;wreg free
  7274  001742                     l311:
  7275  001742  0012               	return		;funcret
  7276  001744                     __end_of_asignarHorarios:
  7277                           	opt callstack 0
  7278                           
  7279 ;; *************** function _sprintf *****************
  7280 ;; Defined at:
  7281 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  7282 ;; Parameters:    Size  Location     Type
  7283 ;;  s               2    0[BANK0 ] PTR unsigned char 
  7284 ;;		 -> mostrarDatosSensoresWIFI@bufferSensor(50), mostrarDatosSensoresWIFI@buffer(50), mostrarDatosSensores@buffer(50),
      + dameDatosSistema@buffer(50), 
  7285 ;;		 -> lecturaWifi@buffer(50), asignarHorarios@buffer(50), 
  7286 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  7287 ;;		 -> STR_41(45), STR_40(29), STR_39(32), STR_38(45), 
  7288 ;;		 -> STR_37(29), STR_36(32), STR_34(53), STR_19(51), 
  7289 ;;		 -> STR_12(9), 
  7290 ;; Auto vars:     Size  Location     Type
  7291 ;;  f               6   16[BANK0 ] struct _IO_FILE
  7292 ;;  ap              2   14[BANK0 ] PTR void [1]
  7293 ;;		 -> ?_sprintf(2), 
  7294 ;;  ret             2    0        int 
  7295 ;; Return value:  Size  Location     Type
  7296 ;;                  2    0[BANK0 ] int 
  7297 ;; Registers used:
  7298 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7299 ;; Tracked objects:
  7300 ;;		On entry : 0/0
  7301 ;;		On exit  : 0/0
  7302 ;;		Unchanged: 0/0
  7303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7304 ;;      Params:         0      12       0       0       0       0       0       0       0
  7305 ;;      Locals:         0      10       0       0       0       0       0       0       0
  7306 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7307 ;;      Totals:         0      22       0       0       0       0       0       0       0
  7308 ;;Total ram usage:       22 bytes
  7309 ;; Hardware stack levels used:    1
  7310 ;; Hardware stack levels required when called:    8
  7311 ;; This function calls:
  7312 ;;		_vfprintf
  7313 ;; This function is called by:
  7314 ;;		_asignarHorarios
  7315 ;;		_lecturaWifi
  7316 ;;		_dameDatosSistema
  7317 ;;		_mostrarDatosSensores
  7318 ;;		_mostrarDatosSensoresWIFI
  7319 ;; This function uses a non-reentrant model
  7320 ;;
  7321                           
  7322                           	psect	text34
  7323  002AF6                     __ptext34:
  7324                           	opt callstack 0
  7325  002AF6                     _sprintf:
  7326                           	opt callstack 20
  7327  002AF6  0E64               	movlw	low (?_sprintf+4)
  7328  002AF8  0100               	movlb	0	; () banked
  7329  002AFA  6F6E               	movwf	sprintf@ap& (0+255),b
  7330  002AFC  0E00               	movlw	high (?_sprintf+4)
  7331  002AFE  6F6F               	movwf	(sprintf@ap+1)& (0+255),b
  7332  002B00  C060  F070         	movff	sprintf@s,sprintf@f
  7333  002B04  C061  F071         	movff	sprintf@s+1,sprintf@f+1
  7334  002B08                     
  7335                           ; BSR set to: 0
  7336  002B08  0E00               	movlw	0
  7337  002B0A  6F73               	movwf	(sprintf@f+3)& (0+255),b
  7338  002B0C  0E00               	movlw	0
  7339  002B0E  6F72               	movwf	(sprintf@f+2)& (0+255),b
  7340  002B10                     
  7341                           ; BSR set to: 0
  7342  002B10  0E00               	movlw	0
  7343  002B12  6F75               	movwf	(sprintf@f+5)& (0+255),b
  7344  002B14  0E00               	movlw	0
  7345  002B16  6F74               	movwf	(sprintf@f+4)& (0+255),b
  7346  002B18                     
  7347                           ; BSR set to: 0
  7348  002B18  0E70               	movlw	low sprintf@f
  7349  002B1A  6E57               	movwf	vfprintf@fp^0,c
  7350  002B1C  0E00               	movlw	high sprintf@f
  7351  002B1E  6E58               	movwf	(vfprintf@fp+1)^0,c
  7352  002B20  C062  F059         	movff	sprintf@fmt,vfprintf@fmt
  7353  002B24  C063  F05A         	movff	sprintf@fmt+1,vfprintf@fmt+1
  7354  002B28  0E6E               	movlw	low sprintf@ap
  7355  002B2A  6E5B               	movwf	vfprintf@ap^0,c
  7356  002B2C  0E00               	movlw	high sprintf@ap
  7357  002B2E  6E5C               	movwf	(vfprintf@ap+1)^0,c
  7358  002B30  EC64  F014         	call	_vfprintf	;wreg free
  7359  002B34  0100               	movlb	0	; () banked
  7360  002B36  5172               	movf	(sprintf@f+2)& (0+255),w,b
  7361  002B38  2560               	addwf	sprintf@s& (0+255),w,b
  7362  002B3A  6ED9               	movwf	fsr2l,c
  7363  002B3C  5173               	movf	(sprintf@f+3)& (0+255),w,b
  7364  002B3E  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  7365  002B40  6EDA               	movwf	fsr2h,c
  7366  002B42  0E00               	movlw	0
  7367  002B44  6EDF               	movwf	indf2,c
  7368  002B46                     
  7369                           ; BSR set to: 0
  7370  002B46  0012               	return		;funcret
  7371  002B48                     __end_of_sprintf:
  7372                           	opt callstack 0
  7373                           
  7374 ;; *************** function _vfprintf *****************
  7375 ;; Defined at:
  7376 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7377 ;; Parameters:    Size  Location     Type
  7378 ;;  fp              2   86[COMRAM] PTR struct _IO_FILE
  7379 ;;		 -> sprintf@f(6), 
  7380 ;;  fmt             2   88[COMRAM] PTR const unsigned char 
  7381 ;;		 -> STR_41(45), STR_40(29), STR_39(32), STR_38(45), 
  7382 ;;		 -> STR_37(29), STR_36(32), STR_34(53), STR_19(51), 
  7383 ;;		 -> STR_12(9), 
  7384 ;;  ap              2   90[COMRAM] PTR PTR void 
  7385 ;;		 -> sprintf@ap(2), 
  7386 ;; Auto vars:     Size  Location     Type
  7387 ;;  cfmt            2   92[COMRAM] PTR unsigned char 
  7388 ;;		 -> STR_41(45), STR_40(29), STR_39(32), STR_38(45), 
  7389 ;;		 -> STR_37(29), STR_36(32), STR_34(53), STR_19(51), 
  7390 ;;		 -> STR_12(9), 
  7391 ;; Return value:  Size  Location     Type
  7392 ;;                  2   86[COMRAM] int 
  7393 ;; Registers used:
  7394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7395 ;; Tracked objects:
  7396 ;;		On entry : 0/0
  7397 ;;		On exit  : 0/0
  7398 ;;		Unchanged: 0/0
  7399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7400 ;;      Params:         6       0       0       0       0       0       0       0       0
  7401 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7402 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7403 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7404 ;;Total ram usage:        8 bytes
  7405 ;; Hardware stack levels used:    1
  7406 ;; Hardware stack levels required when called:    7
  7407 ;; This function calls:
  7408 ;;		_vfpfcnvrt
  7409 ;; This function is called by:
  7410 ;;		_sprintf
  7411 ;; This function uses a non-reentrant model
  7412 ;;
  7413                           
  7414                           	psect	text35
  7415  0028C8                     __ptext35:
  7416                           	opt callstack 0
  7417  0028C8                     _vfprintf:
  7418                           	opt callstack 20
  7419  0028C8                     
  7420                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  7421  0028C8  C059  F05D         	movff	vfprintf@fmt,vfprintf@cfmt
  7422  0028CC  C05A  F05E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  7423  0028D0                     
  7424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  7425  0028D0  0E00               	movlw	0
  7426  0028D2  0101               	movlb	1	; () banked
  7427  0028D4  6F79               	movwf	(_nout+1)& (0+255),b
  7428  0028D6  0E00               	movlw	0
  7429  0028D8  6F78               	movwf	_nout& (0+255),b
  7430                           
  7431                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  7432  0028DA  EF82  F014         	goto	l3564
  7433  0028DE                     l3562:
  7434                           
  7435                           ; BSR set to: 1
  7436                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  7437  0028DE  C057  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  7438  0028E2  C058  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  7439  0028E6  0E5D               	movlw	low vfprintf@cfmt
  7440  0028E8  6E42               	movwf	vfpfcnvrt@fmt^0,c
  7441  0028EA  0E00               	movlw	high vfprintf@cfmt
  7442  0028EC  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  7443  0028EE  C05B  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  7444  0028F2  C05C  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  7445  0028F6  EC09  F000         	call	_vfpfcnvrt	;wreg free
  7446  0028FA  5040               	movf	?_vfpfcnvrt^0,w,c
  7447  0028FC  0101               	movlb	1	; () banked
  7448  0028FE  2778               	addwf	_nout& (0+255),f,b
  7449  002900  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  7450  002902  2379               	addwfc	(_nout+1)& (0+255),f,b
  7451  002904                     l3564:
  7452                           
  7453                           ; BSR set to: 1
  7454                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  7455  002904  C05D  FFF6         	movff	vfprintf@cfmt,tblptrl
  7456  002908  C05E  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  7457  00290C                     	if	0	;tblptru may be non-zero
  7458  00290C                     	endif
  7459  00290C                     	if	0	;tblptru may be non-zero
  7460  00290C                     	endif
  7461  00290C  0008               	tblrd		*
  7462  00290E  50F5               	movf	tablat,w,c
  7463  002910  0900               	iorlw	0
  7464  002912  A4D8               	btfss	status,2,c
  7465  002914  EF8E  F014         	goto	u2711
  7466  002918  EF90  F014         	goto	u2710
  7467  00291C                     u2711:
  7468  00291C  EF6F  F014         	goto	l3562
  7469  002920                     u2710:
  7470  002920                     
  7471                           ; BSR set to: 1
  7472                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  7473  002920  C178  F057         	movff	_nout,?_vfprintf
  7474  002924  C179  F058         	movff	_nout+1,?_vfprintf+1
  7475  002928                     
  7476                           ; BSR set to: 1
  7477  002928  0012               	return		;funcret
  7478  00292A                     __end_of_vfprintf:
  7479                           	opt callstack 0
  7480                           
  7481 ;; *************** function _vfpfcnvrt *****************
  7482 ;; Defined at:
  7483 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7484 ;; Parameters:    Size  Location     Type
  7485 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  7486 ;;		 -> sprintf@f(6), 
  7487 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  7488 ;;		 -> vfprintf@cfmt(2), 
  7489 ;;  ap              2   67[COMRAM] PTR PTR void 
  7490 ;;		 -> sprintf@ap(2), 
  7491 ;; Auto vars:     Size  Location     Type
  7492 ;;  ll              8   73[COMRAM] long long 
  7493 ;;  llu             8    0        unsigned long long 
  7494 ;;  f               4    0        unsigned long long 
  7495 ;;  vp              3    0        PTR void 
  7496 ;;  ct              3    0        unsigned char [3]
  7497 ;;  cp              2   81[COMRAM] PTR unsigned char 
  7498 ;;		 -> ?_sprintf(2), dameDatosSistema@diasRegar(50), 
  7499 ;;  i               2    0        int 
  7500 ;;  done            2    0        int 
  7501 ;;  c               1   85[COMRAM] unsigned char 
  7502 ;; Return value:  Size  Location     Type
  7503 ;;                  2   63[COMRAM] int 
  7504 ;; Registers used:
  7505 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7506 ;; Tracked objects:
  7507 ;;		On entry : 0/0
  7508 ;;		On exit  : 0/0
  7509 ;;		Unchanged: 0/0
  7510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7511 ;;      Params:         6       0       0       0       0       0       0       0       0
  7512 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7513 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7514 ;;      Totals:        23       0       0       0       0       0       0       0       0
  7515 ;;Total ram usage:       23 bytes
  7516 ;; Hardware stack levels used:    1
  7517 ;; Hardware stack levels required when called:    6
  7518 ;; This function calls:
  7519 ;;		_atoi
  7520 ;;		_ctoa
  7521 ;;		_dtoa
  7522 ;;		_fputc
  7523 ;;		_isdigit
  7524 ;;		_stoa
  7525 ;; This function is called by:
  7526 ;;		_vfprintf
  7527 ;; This function uses a non-reentrant model
  7528 ;;
  7529                           
  7530                           	psect	text36
  7531  000012                     __ptext36:
  7532                           	opt callstack 0
  7533  000012                     _vfpfcnvrt:
  7534                           	opt callstack 20
  7535  000012                     
  7536                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  7537  000012  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7538  000016  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7539  00001A  CFDE FFF6          	movff	postinc2,tblptrl
  7540  00001E  CFDD FFF7          	movff	postdec2,tblptrh
  7541  000022                     	if	0	;tblptru may be non-zero
  7542  000022                     	endif
  7543  000022                     	if	0	;tblptru may be non-zero
  7544  000022                     	endif
  7545  000022  0008               	tblrd		*
  7546  000024  50F5               	movf	tablat,w,c
  7547  000026  0A25               	xorlw	37
  7548  000028  A4D8               	btfss	status,2,c
  7549  00002A  EF19  F000         	goto	u2481
  7550  00002E  EF1B  F000         	goto	u2480
  7551  000032                     u2481:
  7552  000032  EFBB  F001         	goto	l3464
  7553  000036                     u2480:
  7554  000036                     
  7555                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  7556  000036  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7557  00003A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7558  00003E  2ADE               	incf	postinc2,f,c
  7559  000040  0E00               	movlw	0
  7560  000042  22DD               	addwfc	postdec2,f,c
  7561  000044                     
  7562                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  7563  000044  0E00               	movlw	0
  7564  000046  0100               	movlb	0	; () banked
  7565  000048  6FEC               	movwf	(_width+1)& (0+255),b
  7566  00004A  0E00               	movlw	0
  7567  00004C  6FEB               	movwf	_width& (0+255),b
  7568  00004E  C0EB  F0EF         	movff	_width,_flags
  7569  000052  C0EC  F0F0         	movff	_width+1,_flags+1
  7570  000056                     
  7571                           ; BSR set to: 0
  7572                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  7573  000056  69ED               	setf	_prec& (0+255),b
  7574  000058  69EE               	setf	(_prec+1)& (0+255),b
  7575  00005A                     
  7576                           ; BSR set to: 0
  7577                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  7578  00005A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7579  00005E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7580  000062  CFDE FFF6          	movff	postinc2,tblptrl
  7581  000066  CFDD FFF7          	movff	postdec2,tblptrh
  7582  00006A                     	if	0	;tblptru may be non-zero
  7583  00006A                     	endif
  7584  00006A                     	if	0	;tblptru may be non-zero
  7585  00006A                     	endif
  7586  00006A  0008               	tblrd		*
  7587  00006C  50F5               	movf	tablat,w,c
  7588  00006E  0A2A               	xorlw	42
  7589  000070  A4D8               	btfss	status,2,c
  7590  000072  EF3D  F000         	goto	u2491
  7591  000076  EF3F  F000         	goto	u2490
  7592  00007A                     u2491:
  7593  00007A  EF68  F000         	goto	l3412
  7594  00007E                     u2490:
  7595  00007E                     
  7596                           ; BSR set to: 0
  7597                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  7598  00007E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7599  000082  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7600  000086  2ADE               	incf	postinc2,f,c
  7601  000088  0E00               	movlw	0
  7602  00008A  22DD               	addwfc	postdec2,f,c
  7603                           
  7604                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  7605  00008C  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7606  000090  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7607  000094  CFDF F046          	movff	indf2,??_vfpfcnvrt
  7608  000098  0E02               	movlw	2
  7609  00009A  26DE               	addwf	postinc2,f,c
  7610  00009C  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  7611  0000A0  0E00               	movlw	0
  7612  0000A2  22DD               	addwfc	postdec2,f,c
  7613  0000A4  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7614  0000A8  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7615  0000AC  CFDE F0EB          	movff	postinc2,_width
  7616  0000B0  CFDD F0EC          	movff	postdec2,_width+1
  7617  0000B4                     
  7618                           ; BSR set to: 0
  7619                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  7620  0000B4  BFEC               	btfsc	(_width+1)& (0+255),7,b
  7621  0000B6  EF61  F000         	goto	u2500
  7622  0000BA  EF5F  F000         	goto	u2501
  7623  0000BE                     u2501:
  7624  0000BE  EFAB  F000         	goto	l3422
  7625  0000C2                     u2500:
  7626  0000C2                     
  7627                           ; BSR set to: 0
  7628                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  7629  0000C2  81EF               	bsf	_flags& (0+255),0,b
  7630                           
  7631                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  7632  0000C4  6DEB               	negf	_width& (0+255),b
  7633  0000C6  1FEC               	comf	(_width+1)& (0+255),f,b
  7634  0000C8  B0D8               	btfsc	status,0,c
  7635  0000CA  2BEC               	incf	(_width+1)& (0+255),f,b
  7636  0000CC  EFAB  F000         	goto	l3422
  7637  0000D0                     l3412:
  7638                           
  7639                           ; BSR set to: 0
  7640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  7641  0000D0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7642  0000D4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7643  0000D8  CFDE F008          	movff	postinc2,atoi@s
  7644  0000DC  CFDD F009          	movff	postdec2,atoi@s+1
  7645  0000E0  EC91  F006         	call	_atoi	;wreg free
  7646  0000E4  C008  F0EB         	movff	?_atoi,_width
  7647  0000E8  C009  F0EC         	movff	?_atoi+1,_width+1
  7648                           
  7649                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7650  0000EC  EF7F  F000         	goto	l3416
  7651  0000F0                     l3414:
  7652                           
  7653                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  7654  0000F0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7655  0000F4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7656  0000F8  2ADE               	incf	postinc2,f,c
  7657  0000FA  0E00               	movlw	0
  7658  0000FC  22DD               	addwfc	postdec2,f,c
  7659  0000FE                     l3416:
  7660  0000FE  0ED0               	movlw	208
  7661  000100  6E46               	movwf	??_vfpfcnvrt^0,c
  7662  000102  0EFF               	movlw	255
  7663  000104  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  7664  000106  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7665  00010A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7666  00010E  CFDE FFF6          	movff	postinc2,tblptrl
  7667  000112  CFDD FFF7          	movff	postdec2,tblptrh
  7668  000116                     	if	0	;tblptru may be non-zero
  7669  000116                     	endif
  7670  000116                     	if	0	;tblptru may be non-zero
  7671  000116                     	endif
  7672  000116  0008               	tblrd		*
  7673  000118  50F5               	movf	tablat,w,c
  7674  00011A  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  7675  00011C  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  7676  00011E  5046               	movf	??_vfpfcnvrt^0,w,c
  7677  000120  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  7678  000122  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  7679  000124  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  7680  000126  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  7681  000128  E10A               	bnz	u2510
  7682  00012A  0E0A               	movlw	10
  7683  00012C  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  7684  00012E  A0D8               	btfss	status,0,c
  7685  000130  EF9C  F000         	goto	u2511
  7686  000134  EF9F  F000         	goto	u2510
  7687  000138                     u2511:
  7688  000138  0E01               	movlw	1
  7689  00013A  EFA0  F000         	goto	u2520
  7690  00013E                     u2510:
  7691  00013E  0E00               	movlw	0
  7692  000140                     u2520:
  7693  000140  6E54               	movwf	_vfpfcnvrt$1105^0,c
  7694  000142  6A55               	clrf	(_vfpfcnvrt$1105+1)^0,c
  7695  000144  5054               	movf	_vfpfcnvrt$1105^0,w,c
  7696  000146  1055               	iorwf	(_vfpfcnvrt$1105+1)^0,w,c
  7697  000148  A4D8               	btfss	status,2,c
  7698  00014A  EFA9  F000         	goto	u2531
  7699  00014E  EFAB  F000         	goto	u2530
  7700  000152                     u2531:
  7701  000152  EF78  F000         	goto	l3414
  7702  000156                     u2530:
  7703  000156                     l3422:
  7704                           
  7705                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  7706  000156  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7707  00015A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7708  00015E  CFDE FFF6          	movff	postinc2,tblptrl
  7709  000162  CFDD FFF7          	movff	postdec2,tblptrh
  7710  000166                     	if	0	;tblptru may be non-zero
  7711  000166                     	endif
  7712  000166                     	if	0	;tblptru may be non-zero
  7713  000166                     	endif
  7714  000166  0008               	tblrd		*
  7715  000168  50F5               	movf	tablat,w,c
  7716  00016A  0A63               	xorlw	99
  7717  00016C  A4D8               	btfss	status,2,c
  7718  00016E  EFBB  F000         	goto	u2541
  7719  000172  EFBD  F000         	goto	u2540
  7720  000176                     u2541:
  7721  000176  EFE4  F000         	goto	l3430
  7722  00017A                     u2540:
  7723  00017A                     
  7724                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  7725  00017A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7726  00017E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7727  000182  2ADE               	incf	postinc2,f,c
  7728  000184  0E00               	movlw	0
  7729  000186  22DD               	addwfc	postdec2,f,c
  7730                           
  7731                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7732  000188  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7733  00018C  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7734  000190  CFDF F046          	movff	indf2,??_vfpfcnvrt
  7735  000194  0E02               	movlw	2
  7736  000196  26DE               	addwf	postinc2,f,c
  7737  000198  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  7738  00019C  0E00               	movlw	0
  7739  00019E  22DD               	addwfc	postdec2,f,c
  7740  0001A0  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7741  0001A4  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7742  0001A8  50DF               	movf	indf2,w,c
  7743  0001AA  6E56               	movwf	vfpfcnvrt@c^0,c
  7744  0001AC                     
  7745                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  7746  0001AC  C040  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  7747  0001B0  C041  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  7748  0001B4  C056  F01E         	movff	vfpfcnvrt@c,ctoa@c
  7749  0001B8  ECF2  F014         	call	_ctoa	;wreg free
  7750  0001BC  C01C  F040         	movff	?_ctoa,?_vfpfcnvrt
  7751  0001C0  C01D  F041         	movff	?_ctoa+1,?_vfpfcnvrt+1
  7752  0001C4  EFD6  F001         	goto	l577
  7753  0001C8                     l3430:
  7754                           
  7755                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  7756  0001C8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7757  0001CC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7758  0001D0  CFDE FFF6          	movff	postinc2,tblptrl
  7759  0001D4  CFDD FFF7          	movff	postdec2,tblptrh
  7760  0001D8                     	if	0	;tblptru may be non-zero
  7761  0001D8                     	endif
  7762  0001D8                     	if	0	;tblptru may be non-zero
  7763  0001D8                     	endif
  7764  0001D8  0008               	tblrd		*
  7765  0001DA  50F5               	movf	tablat,w,c
  7766  0001DC  0A64               	xorlw	100
  7767  0001DE  B4D8               	btfsc	status,2,c
  7768  0001E0  EFF4  F000         	goto	u2551
  7769  0001E4  EFF6  F000         	goto	u2550
  7770  0001E8                     u2551:
  7771  0001E8  EF08  F001         	goto	l3434
  7772  0001EC                     u2550:
  7773  0001EC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7774  0001F0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7775  0001F4  CFDE FFF6          	movff	postinc2,tblptrl
  7776  0001F8  CFDD FFF7          	movff	postdec2,tblptrh
  7777  0001FC                     	if	0	;tblptru may be non-zero
  7778  0001FC                     	endif
  7779  0001FC                     	if	0	;tblptru may be non-zero
  7780  0001FC                     	endif
  7781  0001FC  0008               	tblrd		*
  7782  0001FE  50F5               	movf	tablat,w,c
  7783  000200  0A69               	xorlw	105
  7784  000202  A4D8               	btfss	status,2,c
  7785  000204  EF06  F001         	goto	u2561
  7786  000208  EF08  F001         	goto	u2560
  7787  00020C                     u2561:
  7788  00020C  EF48  F001         	goto	l3440
  7789  000210                     u2560:
  7790  000210                     l3434:
  7791                           
  7792                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  7793  000210  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7794  000214  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7795  000218  2ADE               	incf	postinc2,f,c
  7796  00021A  0E00               	movlw	0
  7797  00021C  22DD               	addwfc	postdec2,f,c
  7798                           
  7799                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  7800  00021E  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7801  000222  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7802  000226  CFDF F046          	movff	indf2,??_vfpfcnvrt
  7803  00022A  0E02               	movlw	2
  7804  00022C  26DE               	addwf	postinc2,f,c
  7805  00022E  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  7806  000232  0E00               	movlw	0
  7807  000234  22DD               	addwfc	postdec2,f,c
  7808  000236  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7809  00023A  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7810  00023E  CFDE F04A          	movff	postinc2,vfpfcnvrt@ll
  7811  000242  CFDD F04B          	movff	postdec2,vfpfcnvrt@ll+1
  7812  000246  0E00               	movlw	0
  7813  000248  BE4B               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  7814  00024A  0EFF               	movlw	-1
  7815  00024C  6E4C               	movwf	(vfpfcnvrt@ll+2)^0,c
  7816  00024E  6E4D               	movwf	(vfpfcnvrt@ll+3)^0,c
  7817  000250  6E4E               	movwf	(vfpfcnvrt@ll+4)^0,c
  7818  000252  6E4F               	movwf	(vfpfcnvrt@ll+5)^0,c
  7819  000254  6E50               	movwf	(vfpfcnvrt@ll+6)^0,c
  7820  000256  6E51               	movwf	(vfpfcnvrt@ll+7)^0,c
  7821  000258                     
  7822                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  7823  000258  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  7824  00025C  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  7825  000260  C04A  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  7826  000264  C04B  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  7827  000268  C04C  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  7828  00026C  C04D  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  7829  000270  C04E  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  7830  000274  C04F  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  7831  000278  C050  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  7832  00027C  C051  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  7833  000280  ECD7  F001         	call	_dtoa	;wreg free
  7834  000284  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  7835  000288  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  7836  00028C  EFD6  F001         	goto	l577
  7837  000290                     l3440:
  7838                           
  7839                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  7840  000290  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7841  000294  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7842  000298  CFDE FFF6          	movff	postinc2,tblptrl
  7843  00029C  CFDD FFF7          	movff	postdec2,tblptrh
  7844  0002A0                     	if	0	;tblptru may be non-zero
  7845  0002A0                     	endif
  7846  0002A0                     	if	0	;tblptru may be non-zero
  7847  0002A0                     	endif
  7848  0002A0  0008               	tblrd		*
  7849  0002A2  50F5               	movf	tablat,w,c
  7850  0002A4  0A73               	xorlw	115
  7851  0002A6  A4D8               	btfss	status,2,c
  7852  0002A8  EF58  F001         	goto	u2571
  7853  0002AC  EF5A  F001         	goto	u2570
  7854  0002B0                     u2571:
  7855  0002B0  EF85  F001         	goto	l3448
  7856  0002B4                     u2570:
  7857  0002B4                     
  7858                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  7859  0002B4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7860  0002B8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7861  0002BC  2ADE               	incf	postinc2,f,c
  7862  0002BE  0E00               	movlw	0
  7863  0002C0  22DD               	addwfc	postdec2,f,c
  7864                           
  7865                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  7866  0002C2  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7867  0002C6  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7868  0002CA  CFDF F046          	movff	indf2,??_vfpfcnvrt
  7869  0002CE  0E02               	movlw	2
  7870  0002D0  26DE               	addwf	postinc2,f,c
  7871  0002D2  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  7872  0002D6  0E00               	movlw	0
  7873  0002D8  22DD               	addwfc	postdec2,f,c
  7874  0002DA  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7875  0002DE  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7876  0002E2  CFDE F052          	movff	postinc2,vfpfcnvrt@cp
  7877  0002E6  CFDD F053          	movff	postdec2,vfpfcnvrt@cp+1
  7878  0002EA                     
  7879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  7880  0002EA  C040  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  7881  0002EE  C041  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  7882  0002F2  C052  F00C         	movff	vfpfcnvrt@cp,stoa@s
  7883  0002F6  C053  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  7884  0002FA  EC1D  F008         	call	_stoa	;wreg free
  7885  0002FE  C00A  F040         	movff	?_stoa,?_vfpfcnvrt
  7886  000302  C00B  F041         	movff	?_stoa+1,?_vfpfcnvrt+1
  7887  000306  EFD6  F001         	goto	l577
  7888  00030A                     l3448:
  7889                           
  7890                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  7891  00030A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7892  00030E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7893  000312  CFDE FFF6          	movff	postinc2,tblptrl
  7894  000316  CFDD FFF7          	movff	postdec2,tblptrh
  7895  00031A                     	if	0	;tblptru may be non-zero
  7896  00031A                     	endif
  7897  00031A                     	if	0	;tblptru may be non-zero
  7898  00031A                     	endif
  7899  00031A  0008               	tblrd		*
  7900  00031C  50F5               	movf	tablat,w,c
  7901  00031E  0A25               	xorlw	37
  7902  000320  A4D8               	btfss	status,2,c
  7903  000322  EF95  F001         	goto	u2581
  7904  000326  EF97  F001         	goto	u2580
  7905  00032A                     u2581:
  7906  00032A  EFAE  F001         	goto	l3458
  7907  00032E                     u2580:
  7908  00032E                     
  7909                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  7910  00032E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7911  000332  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7912  000336  2ADE               	incf	postinc2,f,c
  7913  000338  0E00               	movlw	0
  7914  00033A  22DD               	addwfc	postdec2,f,c
  7915  00033C                     
  7916                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  7917  00033C  0E00               	movlw	0
  7918  00033E  6E02               	movwf	(fputc@c+1)^0,c
  7919  000340  0E25               	movlw	37
  7920  000342  6E01               	movwf	fputc@c^0,c
  7921  000344  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7922  000348  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7923  00034C  EC73  F00F         	call	_fputc	;wreg free
  7924  000350                     l3454:
  7925                           
  7926                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  7927  000350  0E00               	movlw	0
  7928  000352  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  7929  000354  0E01               	movlw	1
  7930  000356  6E40               	movwf	?_vfpfcnvrt^0,c
  7931  000358  EFD6  F001         	goto	l577
  7932  00035C                     l3458:
  7933                           
  7934                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  7935  00035C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7936  000360  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7937  000364  2ADE               	incf	postinc2,f,c
  7938  000366  0E00               	movlw	0
  7939  000368  22DD               	addwfc	postdec2,f,c
  7940  00036A                     
  7941                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  7942  00036A  0E00               	movlw	0
  7943  00036C  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  7944  00036E  0E00               	movlw	0
  7945  000370  6E40               	movwf	?_vfpfcnvrt^0,c
  7946  000372  EFD6  F001         	goto	l577
  7947  000376                     l3464:
  7948                           
  7949                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  7950  000376  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7951  00037A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7952  00037E  CFDE FFF6          	movff	postinc2,tblptrl
  7953  000382  CFDD FFF7          	movff	postdec2,tblptrh
  7954  000386                     	if	0	;tblptru may be non-zero
  7955  000386                     	endif
  7956  000386                     	if	0	;tblptru may be non-zero
  7957  000386                     	endif
  7958  000386  0008               	tblrd		*
  7959  000388  50F5               	movf	tablat,w,c
  7960  00038A  6E01               	movwf	fputc@c^0,c
  7961  00038C  6A02               	clrf	(fputc@c+1)^0,c
  7962  00038E  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7963  000392  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7964  000396  EC73  F00F         	call	_fputc	;wreg free
  7965  00039A                     
  7966                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  7967  00039A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7968  00039E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7969  0003A2  2ADE               	incf	postinc2,f,c
  7970  0003A4  0E00               	movlw	0
  7971  0003A6  22DD               	addwfc	postdec2,f,c
  7972  0003A8  EFA8  F001         	goto	l3454
  7973  0003AC                     l577:
  7974  0003AC  0012               	return		;funcret
  7975  0003AE                     __end_of_vfpfcnvrt:
  7976                           	opt callstack 0
  7977                           
  7978 ;; *************** function _stoa *****************
  7979 ;; Defined at:
  7980 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7981 ;; Parameters:    Size  Location     Type
  7982 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  7983 ;;		 -> sprintf@f(6), 
  7984 ;;  s               2   11[COMRAM] PTR unsigned char 
  7985 ;;		 -> ?_sprintf(2), dameDatosSistema@diasRegar(50), 
  7986 ;; Auto vars:     Size  Location     Type
  7987 ;;  nuls            7   14[COMRAM] unsigned char [7]
  7988 ;;  l               2   29[COMRAM] int 
  7989 ;;  p               2   27[COMRAM] int 
  7990 ;;  cp              2   25[COMRAM] PTR unsigned char 
  7991 ;;		 -> ?_sprintf(2), stoa@nuls(7), dameDatosSistema@diasRegar(50), 
  7992 ;;  w               2   23[COMRAM] int 
  7993 ;;  i               2   21[COMRAM] int 
  7994 ;; Return value:  Size  Location     Type
  7995 ;;                  2    9[COMRAM] int 
  7996 ;; Registers used:
  7997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7998 ;; Tracked objects:
  7999 ;;		On entry : 0/0
  8000 ;;		On exit  : 0/0
  8001 ;;		Unchanged: 0/0
  8002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8003 ;;      Params:         4       0       0       0       0       0       0       0       0
  8004 ;;      Locals:        17       0       0       0       0       0       0       0       0
  8005 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8006 ;;      Totals:        22       0       0       0       0       0       0       0       0
  8007 ;;Total ram usage:       22 bytes
  8008 ;; Hardware stack levels used:    1
  8009 ;; Hardware stack levels required when called:    3
  8010 ;; This function calls:
  8011 ;;		_fputc
  8012 ;;		_strlen
  8013 ;; This function is called by:
  8014 ;;		_vfpfcnvrt
  8015 ;; This function uses a non-reentrant model
  8016 ;;
  8017                           
  8018                           	psect	text37
  8019  00103A                     __ptext37:
  8020                           	opt callstack 0
  8021  00103A                     _stoa:
  8022                           	opt callstack 22
  8023  00103A                     
  8024                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8025  00103A  EE21  F09F         	lfsr	2,stoa@F1144
  8026  00103E  EE10  F00F         	lfsr	1,stoa@nuls
  8027  001042  0E06               	movlw	6
  8028  001044                     u2291:
  8029  001044  CFDB FFE3          	movff	plusw2,plusw1
  8030  001048  06E8               	decf	wreg,f,c
  8031  00104A  E2FC               	bc	u2291
  8032  00104C                     
  8033                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  8034  00104C  C00C  F01A         	movff	stoa@s,stoa@cp
  8035  001050  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  8036  001054                     
  8037                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  8038  001054  501A               	movf	stoa@cp^0,w,c
  8039  001056  101B               	iorwf	(stoa@cp+1)^0,w,c
  8040  001058  A4D8               	btfss	status,2,c
  8041  00105A  EF31  F008         	goto	u2301
  8042  00105E  EF33  F008         	goto	u2300
  8043  001062                     u2301:
  8044  001062  EF37  F008         	goto	l3312
  8045  001066                     u2300:
  8046  001066                     
  8047                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  8048  001066  0E0F               	movlw	low stoa@nuls
  8049  001068  6E1A               	movwf	stoa@cp^0,c
  8050  00106A  0E00               	movlw	high stoa@nuls
  8051  00106C  6E1B               	movwf	(stoa@cp+1)^0,c
  8052  00106E                     l3312:
  8053                           
  8054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  8055  00106E  C01A  F001         	movff	stoa@cp,strlen@s
  8056  001072  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  8057  001076  ECD6  F016         	call	_strlen	;wreg free
  8058  00107A  C001  F01E         	movff	?_strlen,stoa@l
  8059  00107E  C002  F01F         	movff	?_strlen+1,stoa@l+1
  8060  001082                     
  8061                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  8062  001082  C0ED  F01C         	movff	_prec,stoa@p
  8063  001086  C0EE  F01D         	movff	_prec+1,stoa@p+1
  8064  00108A                     
  8065                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  8066  00108A  BE1D               	btfsc	(stoa@p+1)^0,7,c
  8067  00108C  EF4A  F008         	goto	u2311
  8068  001090  EF4C  F008         	goto	u2310
  8069  001094                     u2311:
  8070  001094  EF61  F008         	goto	l548
  8071  001098                     u2310:
  8072  001098  501E               	movf	stoa@l^0,w,c
  8073  00109A  5C1C               	subwf	stoa@p^0,w,c
  8074  00109C  501D               	movf	(stoa@p+1)^0,w,c
  8075  00109E  0A80               	xorlw	128
  8076  0010A0  6E0E               	movwf	??_stoa^0,c
  8077  0010A2  501F               	movf	(stoa@l+1)^0,w,c
  8078  0010A4  0A80               	xorlw	128
  8079  0010A6  580E               	subwfb	??_stoa^0,w,c
  8080  0010A8  A0D8               	btfss	status,0,c
  8081  0010AA  EF59  F008         	goto	u2321
  8082  0010AE  EF5B  F008         	goto	u2320
  8083  0010B2                     u2321:
  8084  0010B2  EF5D  F008         	goto	l546
  8085  0010B6                     u2320:
  8086  0010B6  EF61  F008         	goto	l548
  8087  0010BA                     l546:
  8088  0010BA  C01C  F01E         	movff	stoa@p,stoa@l
  8089  0010BE  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  8090  0010C2                     l548:
  8091                           
  8092                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  8093  0010C2  C01E  F01C         	movff	stoa@l,stoa@p
  8094  0010C6  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  8095                           
  8096                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  8097  0010CA  C0EB  F018         	movff	_width,stoa@w
  8098  0010CE  C0EC  F019         	movff	_width+1,stoa@w+1
  8099                           
  8100                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  8101  0010D2  0100               	movlb	0	; () banked
  8102  0010D4  B1EF               	btfsc	_flags& (0+255),0,b
  8103  0010D6  EF6F  F008         	goto	u2331
  8104  0010DA  EF71  F008         	goto	u2330
  8105  0010DE                     u2331:
  8106  0010DE  EF8E  F008         	goto	l3328
  8107  0010E2                     u2330:
  8108  0010E2  EF7F  F008         	goto	l3326
  8109  0010E6                     l3322:
  8110                           
  8111                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  8112  0010E6  0E00               	movlw	0
  8113  0010E8  6E02               	movwf	(fputc@c+1)^0,c
  8114  0010EA  0E20               	movlw	32
  8115  0010EC  6E01               	movwf	fputc@c^0,c
  8116  0010EE  C00A  F003         	movff	stoa@fp,fputc@fp
  8117  0010F2  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  8118  0010F6  EC73  F00F         	call	_fputc	;wreg free
  8119  0010FA                     
  8120                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  8121  0010FA  4A1E               	infsnz	stoa@l^0,f,c
  8122  0010FC  2A1F               	incf	(stoa@l+1)^0,f,c
  8123  0010FE                     l3326:
  8124                           
  8125                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  8126  0010FE  5018               	movf	stoa@w^0,w,c
  8127  001100  5C1E               	subwf	stoa@l^0,w,c
  8128  001102  501F               	movf	(stoa@l+1)^0,w,c
  8129  001104  0A80               	xorlw	128
  8130  001106  6E0E               	movwf	??_stoa^0,c
  8131  001108  5019               	movf	(stoa@w+1)^0,w,c
  8132  00110A  0A80               	xorlw	128
  8133  00110C  580E               	subwfb	??_stoa^0,w,c
  8134  00110E  A0D8               	btfss	status,0,c
  8135  001110  EF8C  F008         	goto	u2341
  8136  001114  EF8E  F008         	goto	u2340
  8137  001118                     u2341:
  8138  001118  EF73  F008         	goto	l3322
  8139  00111C                     u2340:
  8140  00111C                     l3328:
  8141                           
  8142                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  8143  00111C  0E00               	movlw	0
  8144  00111E  6E17               	movwf	(stoa@i+1)^0,c
  8145  001120  0E00               	movlw	0
  8146  001122  6E16               	movwf	stoa@i^0,c
  8147                           
  8148                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8149  001124  EFA7  F008         	goto	l3336
  8150  001128                     l3330:
  8151                           
  8152                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  8153  001128  C01A  FFD9         	movff	stoa@cp,fsr2l
  8154  00112C  C01B  FFDA         	movff	stoa@cp+1,fsr2h
  8155  001130  50DF               	movf	indf2,w,c
  8156  001132  6E0E               	movwf	??_stoa^0,c
  8157  001134  500E               	movf	??_stoa^0,w,c
  8158  001136  6E01               	movwf	fputc@c^0,c
  8159  001138  6A02               	clrf	(fputc@c+1)^0,c
  8160  00113A  C00A  F003         	movff	stoa@fp,fputc@fp
  8161  00113E  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  8162  001142  EC73  F00F         	call	_fputc	;wreg free
  8163  001146                     
  8164                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  8165  001146  4A1A               	infsnz	stoa@cp^0,f,c
  8166  001148  2A1B               	incf	(stoa@cp+1)^0,f,c
  8167  00114A                     
  8168                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  8169  00114A  4A16               	infsnz	stoa@i^0,f,c
  8170  00114C  2A17               	incf	(stoa@i+1)^0,f,c
  8171  00114E                     l3336:
  8172                           
  8173                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8174  00114E  501C               	movf	stoa@p^0,w,c
  8175  001150  5C16               	subwf	stoa@i^0,w,c
  8176  001152  5017               	movf	(stoa@i+1)^0,w,c
  8177  001154  0A80               	xorlw	128
  8178  001156  6E0E               	movwf	??_stoa^0,c
  8179  001158  501D               	movf	(stoa@p+1)^0,w,c
  8180  00115A  0A80               	xorlw	128
  8181  00115C  580E               	subwfb	??_stoa^0,w,c
  8182  00115E  A0D8               	btfss	status,0,c
  8183  001160  EFB4  F008         	goto	u2351
  8184  001164  EFB6  F008         	goto	u2350
  8185  001168                     u2351:
  8186  001168  EF94  F008         	goto	l3330
  8187  00116C                     u2350:
  8188  00116C                     
  8189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  8190  00116C  0100               	movlb	0	; () banked
  8191  00116E  A1EF               	btfss	_flags& (0+255),0,b
  8192  001170  EFBC  F008         	goto	u2361
  8193  001174  EFBE  F008         	goto	u2360
  8194  001178                     u2361:
  8195  001178  EFDB  F008         	goto	l558
  8196  00117C                     u2360:
  8197  00117C  EFCC  F008         	goto	l3344
  8198  001180                     l3340:
  8199                           
  8200                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  8201  001180  0E00               	movlw	0
  8202  001182  6E02               	movwf	(fputc@c+1)^0,c
  8203  001184  0E20               	movlw	32
  8204  001186  6E01               	movwf	fputc@c^0,c
  8205  001188  C00A  F003         	movff	stoa@fp,fputc@fp
  8206  00118C  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  8207  001190  EC73  F00F         	call	_fputc	;wreg free
  8208  001194                     
  8209                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  8210  001194  4A1E               	infsnz	stoa@l^0,f,c
  8211  001196  2A1F               	incf	(stoa@l+1)^0,f,c
  8212  001198                     l3344:
  8213                           
  8214                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  8215  001198  5018               	movf	stoa@w^0,w,c
  8216  00119A  5C1E               	subwf	stoa@l^0,w,c
  8217  00119C  501F               	movf	(stoa@l+1)^0,w,c
  8218  00119E  0A80               	xorlw	128
  8219  0011A0  6E0E               	movwf	??_stoa^0,c
  8220  0011A2  5019               	movf	(stoa@w+1)^0,w,c
  8221  0011A4  0A80               	xorlw	128
  8222  0011A6  580E               	subwfb	??_stoa^0,w,c
  8223  0011A8  A0D8               	btfss	status,0,c
  8224  0011AA  EFD9  F008         	goto	u2371
  8225  0011AE  EFDB  F008         	goto	u2370
  8226  0011B2                     u2371:
  8227  0011B2  EFC0  F008         	goto	l3340
  8228  0011B6                     u2370:
  8229  0011B6                     l558:
  8230                           
  8231                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  8232  0011B6  C01E  F00A         	movff	stoa@l,?_stoa
  8233  0011BA  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  8234  0011BE  0012               	return		;funcret
  8235  0011C0                     __end_of_stoa:
  8236                           	opt callstack 0
  8237                           
  8238 ;; *************** function _dtoa *****************
  8239 ;; Defined at:
  8240 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8241 ;; Parameters:    Size  Location     Type
  8242 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8243 ;;		 -> sprintf@f(6), 
  8244 ;;  d               8   29[COMRAM] long long 
  8245 ;; Auto vars:     Size  Location     Type
  8246 ;;  n               8   53[COMRAM] long long 
  8247 ;;  i               2   61[COMRAM] int 
  8248 ;;  s               2   51[COMRAM] int 
  8249 ;;  w               2   49[COMRAM] int 
  8250 ;;  p               2   47[COMRAM] int 
  8251 ;; Return value:  Size  Location     Type
  8252 ;;                  2   27[COMRAM] int 
  8253 ;; Registers used:
  8254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8255 ;; Tracked objects:
  8256 ;;		On entry : 0/0
  8257 ;;		On exit  : 0/0
  8258 ;;		Unchanged: 0/0
  8259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8260 ;;      Params:        10       0       0       0       0       0       0       0       0
  8261 ;;      Locals:        18       0       0       0       0       0       0       0       0
  8262 ;;      Temps:          8       0       0       0       0       0       0       0       0
  8263 ;;      Totals:        36       0       0       0       0       0       0       0       0
  8264 ;;Total ram usage:       36 bytes
  8265 ;; Hardware stack levels used:    1
  8266 ;; Hardware stack levels required when called:    5
  8267 ;; This function calls:
  8268 ;;		___aodiv
  8269 ;;		___aomod
  8270 ;;		_abs
  8271 ;;		_pad
  8272 ;; This function is called by:
  8273 ;;		_vfpfcnvrt
  8274 ;; This function uses a non-reentrant model
  8275 ;;
  8276                           
  8277                           	psect	text38
  8278  0003AE                     __ptext38:
  8279                           	opt callstack 0
  8280  0003AE                     _dtoa:
  8281                           	opt callstack 20
  8282  0003AE                     
  8283                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  8284  0003AE  C01E  F036         	movff	dtoa@d,dtoa@n
  8285  0003B2  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  8286  0003B6  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  8287  0003BA  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  8288  0003BE  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  8289  0003C2  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  8290  0003C6  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  8291  0003CA  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  8292  0003CE                     
  8293                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  8294  0003CE  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  8295  0003D0  EFEC  F001         	goto	u2141
  8296  0003D4  EFEF  F001         	goto	u2140
  8297  0003D8                     u2141:
  8298  0003D8  0E01               	movlw	1
  8299  0003DA  EFF0  F001         	goto	u2150
  8300  0003DE                     u2140:
  8301  0003DE  0E00               	movlw	0
  8302  0003E0                     u2150:
  8303  0003E0  6E34               	movwf	dtoa@s^0,c
  8304  0003E2  6A35               	clrf	(dtoa@s+1)^0,c
  8305                           
  8306                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  8307  0003E4  5034               	movf	dtoa@s^0,w,c
  8308  0003E6  1035               	iorwf	(dtoa@s+1)^0,w,c
  8309  0003E8  B4D8               	btfsc	status,2,c
  8310  0003EA  EFF9  F001         	goto	u2161
  8311  0003EE  EFFB  F001         	goto	u2160
  8312  0003F2                     u2161:
  8313  0003F2  EF0B  F002         	goto	l3248
  8314  0003F6                     u2160:
  8315  0003F6                     
  8316                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  8317  0003F6  1E3D               	comf	(dtoa@n+7)^0,f,c
  8318  0003F8  1E3C               	comf	(dtoa@n+6)^0,f,c
  8319  0003FA  1E3B               	comf	(dtoa@n+5)^0,f,c
  8320  0003FC  1E3A               	comf	(dtoa@n+4)^0,f,c
  8321  0003FE  1E39               	comf	(dtoa@n+3)^0,f,c
  8322  000400  1E38               	comf	(dtoa@n+2)^0,f,c
  8323  000402  1E37               	comf	(dtoa@n+1)^0,f,c
  8324  000404  6C36               	negf	dtoa@n^0,c
  8325  000406  0E00               	movlw	0
  8326  000408  2237               	addwfc	(dtoa@n+1)^0,f,c
  8327  00040A  2238               	addwfc	(dtoa@n+2)^0,f,c
  8328  00040C  2239               	addwfc	(dtoa@n+3)^0,f,c
  8329  00040E  223A               	addwfc	(dtoa@n+4)^0,f,c
  8330  000410  223B               	addwfc	(dtoa@n+5)^0,f,c
  8331  000412  223C               	addwfc	(dtoa@n+6)^0,f,c
  8332  000414  223D               	addwfc	(dtoa@n+7)^0,f,c
  8333  000416                     l3248:
  8334                           
  8335                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  8336  000416  0100               	movlb	0	; () banked
  8337  000418  BFEE               	btfsc	(_prec+1)& (0+255),7,b
  8338  00041A  EF11  F002         	goto	u2171
  8339  00041E  EF13  F002         	goto	u2170
  8340  000422                     u2171:
  8341  000422  EF14  F002         	goto	l3252
  8342  000426                     u2170:
  8343  000426                     
  8344                           ; BSR set to: 0
  8345                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  8346  000426  93EF               	bcf	_flags& (0+255),1,b
  8347  000428                     l3252:
  8348                           
  8349                           ; BSR set to: 0
  8350                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  8351  000428  BFEE               	btfsc	(_prec+1)& (0+255),7,b
  8352  00042A  EF21  F002         	goto	u2180
  8353  00042E  51EE               	movf	(_prec+1)& (0+255),w,b
  8354  000430  E106               	bnz	u2181
  8355  000432  05ED               	decf	_prec& (0+255),w,b
  8356  000434  B0D8               	btfsc	status,0,c
  8357  000436  EF1F  F002         	goto	u2181
  8358  00043A  EF21  F002         	goto	u2180
  8359  00043E                     u2181:
  8360  00043E  EF27  F002         	goto	l519
  8361  000442                     u2180:
  8362  000442                     
  8363                           ; BSR set to: 0
  8364  000442  0E00               	movlw	0
  8365  000444  6E31               	movwf	(dtoa@p+1)^0,c
  8366  000446  0E01               	movlw	1
  8367  000448  6E30               	movwf	dtoa@p^0,c
  8368  00044A  EF2B  F002         	goto	l521
  8369  00044E                     l519:
  8370                           
  8371                           ; BSR set to: 0
  8372  00044E  C0ED  F030         	movff	_prec,dtoa@p
  8373  000452  C0EE  F031         	movff	_prec+1,dtoa@p+1
  8374  000456                     l521:
  8375                           
  8376                           ; BSR set to: 0
  8377                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  8378  000456  C0EB  F032         	movff	_width,dtoa@w
  8379  00045A  C0EC  F033         	movff	_width+1,dtoa@w+1
  8380  00045E                     
  8381                           ; BSR set to: 0
  8382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  8383  00045E  5034               	movf	dtoa@s^0,w,c
  8384  000460  1035               	iorwf	(dtoa@s+1)^0,w,c
  8385  000462  A4D8               	btfss	status,2,c
  8386  000464  EF36  F002         	goto	u2191
  8387  000468  EF38  F002         	goto	u2190
  8388  00046C                     u2191:
  8389  00046C  EF3F  F002         	goto	l3260
  8390  000470                     u2190:
  8391  000470                     
  8392                           ; BSR set to: 0
  8393  000470  A5EF               	btfss	_flags& (0+255),2,b
  8394  000472  EF3D  F002         	goto	u2201
  8395  000476  EF3F  F002         	goto	u2200
  8396  00047A                     u2201:
  8397  00047A  EF42  F002         	goto	l3262
  8398  00047E                     u2200:
  8399  00047E                     l3260:
  8400                           
  8401                           ; BSR set to: 0
  8402                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  8403  00047E  0632               	decf	dtoa@w^0,f,c
  8404  000480  A0D8               	btfss	status,0,c
  8405  000482  0633               	decf	(dtoa@w+1)^0,f,c
  8406  000484                     l3262:
  8407                           
  8408                           ; BSR set to: 0
  8409                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  8410  000484  0E00               	movlw	0
  8411  000486  6E3F               	movwf	(dtoa@i+1)^0,c
  8412  000488  0E1F               	movlw	31
  8413  00048A  6E3E               	movwf	dtoa@i^0,c
  8414  00048C                     
  8415                           ; BSR set to: 0
  8416                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  8417  00048C  0E00               	movlw	0
  8418  00048E  0101               	movlb	1	; () banked
  8419  000490  6F9E               	movwf	(_dbuf+31)& (0+255),b
  8420                           
  8421                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8422  000492  EFC7  F002         	goto	l3276
  8423  000496                     l3266:
  8424                           
  8425                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  8426  000496  063E               	decf	dtoa@i^0,f,c
  8427  000498  A0D8               	btfss	status,0,c
  8428  00049A  063F               	decf	(dtoa@i+1)^0,f,c
  8429  00049C                     
  8430                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  8431  00049C  0E7F               	movlw	low _dbuf
  8432  00049E  243E               	addwf	dtoa@i^0,w,c
  8433  0004A0  6ED9               	movwf	fsr2l,c
  8434  0004A2  0E01               	movlw	high _dbuf
  8435  0004A4  203F               	addwfc	(dtoa@i+1)^0,w,c
  8436  0004A6  6EDA               	movwf	fsr2h,c
  8437  0004A8  C036  F001         	movff	dtoa@n,___aomod@dividend
  8438  0004AC  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  8439  0004B0  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  8440  0004B4  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  8441  0004B8  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  8442  0004BC  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  8443  0004C0  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  8444  0004C4  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  8445  0004C8  0E0A               	movlw	10
  8446  0004CA  6E09               	movwf	___aomod@divisor^0,c
  8447  0004CC  0E00               	movlw	0
  8448  0004CE  6E0A               	movwf	(___aomod@divisor+1)^0,c
  8449  0004D0  0E00               	movlw	0
  8450  0004D2  6E0B               	movwf	(___aomod@divisor+2)^0,c
  8451  0004D4  0E00               	movlw	0
  8452  0004D6  6E0C               	movwf	(___aomod@divisor+3)^0,c
  8453  0004D8  0E00               	movlw	0
  8454  0004DA  6E0D               	movwf	(___aomod@divisor+4)^0,c
  8455  0004DC  0E00               	movlw	0
  8456  0004DE  6E0E               	movwf	(___aomod@divisor+5)^0,c
  8457  0004E0  0E00               	movlw	0
  8458  0004E2  6E0F               	movwf	(___aomod@divisor+6)^0,c
  8459  0004E4  0E00               	movlw	0
  8460  0004E6  6E10               	movwf	(___aomod@divisor+7)^0,c
  8461  0004E8  EC4C  F00A         	call	___aomod	;wreg free
  8462  0004EC  C001  F026         	movff	?___aomod,??_dtoa
  8463  0004F0  C002  F027         	movff	?___aomod+1,??_dtoa+1
  8464  0004F4  C003  F028         	movff	?___aomod+2,??_dtoa+2
  8465  0004F8  C004  F029         	movff	?___aomod+3,??_dtoa+3
  8466  0004FC  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  8467  000500  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  8468  000504  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  8469  000508  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  8470  00050C  C026  F013         	movff	??_dtoa,abs@a
  8471  000510  C028  F014         	movff	??_dtoa+2,abs@a+1
  8472  000514  EC7C  F016         	call	_abs	;wreg free
  8473  000518  5013               	movf	?_abs^0,w,c
  8474  00051A  0F30               	addlw	48
  8475  00051C  6EDF               	movwf	indf2,c
  8476  00051E                     
  8477                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  8478  00051E  0630               	decf	dtoa@p^0,f,c
  8479  000520  A0D8               	btfss	status,0,c
  8480  000522  0631               	decf	(dtoa@p+1)^0,f,c
  8481  000524                     
  8482                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  8483  000524  0632               	decf	dtoa@w^0,f,c
  8484  000526  A0D8               	btfss	status,0,c
  8485  000528  0633               	decf	(dtoa@w+1)^0,f,c
  8486  00052A                     
  8487                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  8488  00052A  C036  F001         	movff	dtoa@n,___aodiv@dividend
  8489  00052E  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  8490  000532  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  8491  000536  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  8492  00053A  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  8493  00053E  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  8494  000542  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  8495  000546  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  8496  00054A  0E0A               	movlw	10
  8497  00054C  6E09               	movwf	___aodiv@divisor^0,c
  8498  00054E  0E00               	movlw	0
  8499  000550  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  8500  000552  0E00               	movlw	0
  8501  000554  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  8502  000556  0E00               	movlw	0
  8503  000558  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  8504  00055A  0E00               	movlw	0
  8505  00055C  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  8506  00055E  0E00               	movlw	0
  8507  000560  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  8508  000562  0E00               	movlw	0
  8509  000564  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  8510  000566  0E00               	movlw	0
  8511  000568  6E10               	movwf	(___aodiv@divisor+7)^0,c
  8512  00056A  EC59  F007         	call	___aodiv	;wreg free
  8513  00056E  C001  F036         	movff	?___aodiv,dtoa@n
  8514  000572  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  8515  000576  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  8516  00057A  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  8517  00057E  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  8518  000582  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  8519  000586  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  8520  00058A  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  8521  00058E                     l3276:
  8522                           
  8523                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8524  00058E  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  8525  000590  EFD2  F002         	goto	u2211
  8526  000594  503F               	movf	(dtoa@i+1)^0,w,c
  8527  000596  E108               	bnz	u2210
  8528  000598  043E               	decf	dtoa@i^0,w,c
  8529  00059A  A0D8               	btfss	status,0,c
  8530  00059C  EFD2  F002         	goto	u2211
  8531  0005A0  EFD4  F002         	goto	u2210
  8532  0005A4                     u2211:
  8533  0005A4  EF05  F003         	goto	l3286
  8534  0005A8                     u2210:
  8535  0005A8  5036               	movf	dtoa@n^0,w,c
  8536  0005AA  1037               	iorwf	(dtoa@n+1)^0,w,c
  8537  0005AC  1038               	iorwf	(dtoa@n+2)^0,w,c
  8538  0005AE  1039               	iorwf	(dtoa@n+3)^0,w,c
  8539  0005B0  103A               	iorwf	(dtoa@n+4)^0,w,c
  8540  0005B2  103B               	iorwf	(dtoa@n+5)^0,w,c
  8541  0005B4  103C               	iorwf	(dtoa@n+6)^0,w,c
  8542  0005B6  103D               	iorwf	(dtoa@n+7)^0,w,c
  8543  0005B8  A4D8               	btfss	status,2,c
  8544  0005BA  EFE1  F002         	goto	u2221
  8545  0005BE  EFE3  F002         	goto	u2220
  8546  0005C2                     u2221:
  8547  0005C2  EF4B  F002         	goto	l3266
  8548  0005C6                     u2220:
  8549  0005C6  BE31               	btfsc	(dtoa@p+1)^0,7,c
  8550  0005C8  EFF0  F002         	goto	u2230
  8551  0005CC  5031               	movf	(dtoa@p+1)^0,w,c
  8552  0005CE  E106               	bnz	u2231
  8553  0005D0  0430               	decf	dtoa@p^0,w,c
  8554  0005D2  B0D8               	btfsc	status,0,c
  8555  0005D4  EFEE  F002         	goto	u2231
  8556  0005D8  EFF0  F002         	goto	u2230
  8557  0005DC                     u2231:
  8558  0005DC  EF4B  F002         	goto	l3266
  8559  0005E0                     u2230:
  8560  0005E0  BE33               	btfsc	(dtoa@w+1)^0,7,c
  8561  0005E2  EFFB  F002         	goto	u2241
  8562  0005E6  5033               	movf	(dtoa@w+1)^0,w,c
  8563  0005E8  E108               	bnz	u2240
  8564  0005EA  0432               	decf	dtoa@w^0,w,c
  8565  0005EC  A0D8               	btfss	status,0,c
  8566  0005EE  EFFB  F002         	goto	u2241
  8567  0005F2  EFFD  F002         	goto	u2240
  8568  0005F6                     u2241:
  8569  0005F6  EF05  F003         	goto	l3286
  8570  0005FA                     u2240:
  8571  0005FA  0100               	movlb	0	; () banked
  8572  0005FC  B3EF               	btfsc	_flags& (0+255),1,b
  8573  0005FE  EF03  F003         	goto	u2251
  8574  000602  EF05  F003         	goto	u2250
  8575  000606                     u2251:
  8576  000606  EF4B  F002         	goto	l3266
  8577  00060A                     u2250:
  8578  00060A                     l3286:
  8579                           
  8580                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  8581  00060A  5034               	movf	dtoa@s^0,w,c
  8582  00060C  1035               	iorwf	(dtoa@s+1)^0,w,c
  8583  00060E  A4D8               	btfss	status,2,c
  8584  000610  EF0C  F003         	goto	u2261
  8585  000614  EF0E  F003         	goto	u2260
  8586  000618                     u2261:
  8587  000618  EF16  F003         	goto	l3290
  8588  00061C                     u2260:
  8589  00061C  0100               	movlb	0	; () banked
  8590  00061E  A5EF               	btfss	_flags& (0+255),2,b
  8591  000620  EF14  F003         	goto	u2271
  8592  000624  EF16  F003         	goto	u2270
  8593  000628                     u2271:
  8594  000628  EF34  F003         	goto	l3300
  8595  00062C                     u2270:
  8596  00062C                     l3290:
  8597                           
  8598                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  8599  00062C  063E               	decf	dtoa@i^0,f,c
  8600  00062E  A0D8               	btfss	status,0,c
  8601  000630  063F               	decf	(dtoa@i+1)^0,f,c
  8602  000632                     
  8603                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  8604  000632  5034               	movf	dtoa@s^0,w,c
  8605  000634  1035               	iorwf	(dtoa@s+1)^0,w,c
  8606  000636  A4D8               	btfss	status,2,c
  8607  000638  EF20  F003         	goto	u2281
  8608  00063C  EF22  F003         	goto	u2280
  8609  000640                     u2281:
  8610  000640  EF28  F003         	goto	l3296
  8611  000644                     u2280:
  8612  000644  0E00               	movlw	0
  8613  000646  6E2F               	movwf	(_dtoa$1081+1)^0,c
  8614  000648  0E2B               	movlw	43
  8615  00064A  6E2E               	movwf	_dtoa$1081^0,c
  8616  00064C  EF2C  F003         	goto	l3298
  8617  000650                     l3296:
  8618  000650  0E00               	movlw	0
  8619  000652  6E2F               	movwf	(_dtoa$1081+1)^0,c
  8620  000654  0E2D               	movlw	45
  8621  000656  6E2E               	movwf	_dtoa$1081^0,c
  8622  000658                     l3298:
  8623  000658  0E7F               	movlw	low _dbuf
  8624  00065A  243E               	addwf	dtoa@i^0,w,c
  8625  00065C  6ED9               	movwf	fsr2l,c
  8626  00065E  0E01               	movlw	high _dbuf
  8627  000660  203F               	addwfc	(dtoa@i+1)^0,w,c
  8628  000662  6EDA               	movwf	fsr2h,c
  8629  000664  C02E  FFDF         	movff	_dtoa$1081,indf2
  8630  000668                     l3300:
  8631                           
  8632                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  8633  000668  C01C  F011         	movff	dtoa@fp,pad@fp
  8634  00066C  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  8635  000670  0E7F               	movlw	low _dbuf
  8636  000672  243E               	addwf	dtoa@i^0,w,c
  8637  000674  6E13               	movwf	pad@buf^0,c
  8638  000676  0E01               	movlw	high _dbuf
  8639  000678  203F               	addwfc	(dtoa@i+1)^0,w,c
  8640  00067A  6E14               	movwf	(pad@buf+1)^0,c
  8641  00067C  C032  F015         	movff	dtoa@w,pad@p
  8642  000680  C033  F016         	movff	dtoa@w+1,pad@p+1
  8643  000684  EC3C  F010         	call	_pad	;wreg free
  8644  000688  C011  F01C         	movff	?_pad,?_dtoa
  8645  00068C  C012  F01D         	movff	?_pad+1,?_dtoa+1
  8646  000690  0012               	return		;funcret
  8647  000692                     __end_of_dtoa:
  8648                           	opt callstack 0
  8649                           
  8650 ;; *************** function _abs *****************
  8651 ;; Defined at:
  8652 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  8653 ;; Parameters:    Size  Location     Type
  8654 ;;  a               2   18[COMRAM] int 
  8655 ;; Auto vars:     Size  Location     Type
  8656 ;;		None
  8657 ;; Return value:  Size  Location     Type
  8658 ;;                  2   18[COMRAM] int 
  8659 ;; Registers used:
  8660 ;;		wreg, status,2, status,0
  8661 ;; Tracked objects:
  8662 ;;		On entry : 0/0
  8663 ;;		On exit  : 0/0
  8664 ;;		Unchanged: 0/0
  8665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8666 ;;      Params:         2       0       0       0       0       0       0       0       0
  8667 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8668 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8669 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8670 ;;Total ram usage:        4 bytes
  8671 ;; Hardware stack levels used:    1
  8672 ;; Hardware stack levels required when called:    1
  8673 ;; This function calls:
  8674 ;;		Nothing
  8675 ;; This function is called by:
  8676 ;;		_dtoa
  8677 ;; This function uses a non-reentrant model
  8678 ;;
  8679                           
  8680                           	psect	text39
  8681  002CF8                     __ptext39:
  8682                           	opt callstack 0
  8683  002CF8                     _abs:
  8684                           	opt callstack 23
  8685  002CF8  BE14               	btfsc	(abs@a+1)^0,7,c
  8686  002CFA  EF89  F016         	goto	u1950
  8687  002CFE  5014               	movf	(abs@a+1)^0,w,c
  8688  002D00  E106               	bnz	u1951
  8689  002D02  0413               	decf	abs@a^0,w,c
  8690  002D04  B0D8               	btfsc	status,0,c
  8691  002D06  EF87  F016         	goto	u1951
  8692  002D0A  EF89  F016         	goto	u1950
  8693  002D0E                     u1951:
  8694  002D0E  EF97  F016         	goto	l1266
  8695  002D12                     u1950:
  8696  002D12  C013  F015         	movff	abs@a,??_abs
  8697  002D16  C014  F016         	movff	abs@a+1,??_abs+1
  8698  002D1A  1E15               	comf	??_abs^0,f,c
  8699  002D1C  1E16               	comf	(??_abs+1)^0,f,c
  8700  002D1E  4A15               	infsnz	??_abs^0,f,c
  8701  002D20  2A16               	incf	(??_abs+1)^0,f,c
  8702  002D22  C015  F013         	movff	??_abs,?_abs
  8703  002D26  C016  F014         	movff	??_abs+1,?_abs+1
  8704  002D2A  EF9B  F016         	goto	l1269
  8705  002D2E                     l1266:
  8706  002D2E  C013  F013         	movff	abs@a,?_abs
  8707  002D32  C014  F014         	movff	abs@a+1,?_abs+1
  8708  002D36                     l1269:
  8709  002D36  0012               	return		;funcret
  8710  002D38                     __end_of_abs:
  8711                           	opt callstack 0
  8712                           
  8713 ;; *************** function ___aomod *****************
  8714 ;; Defined at:
  8715 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  8716 ;; Parameters:    Size  Location     Type
  8717 ;;  dividend        8    0[COMRAM] long long 
  8718 ;;  divisor         8    8[COMRAM] long long 
  8719 ;; Auto vars:     Size  Location     Type
  8720 ;;  sign            1   17[COMRAM] unsigned char 
  8721 ;;  counter         1   16[COMRAM] unsigned char 
  8722 ;; Return value:  Size  Location     Type
  8723 ;;                  8    0[COMRAM] long long 
  8724 ;; Registers used:
  8725 ;;		wreg, status,2, status,0
  8726 ;; Tracked objects:
  8727 ;;		On entry : 0/0
  8728 ;;		On exit  : 0/0
  8729 ;;		Unchanged: 0/0
  8730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8731 ;;      Params:        16       0       0       0       0       0       0       0       0
  8732 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8733 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8734 ;;      Totals:        18       0       0       0       0       0       0       0       0
  8735 ;;Total ram usage:       18 bytes
  8736 ;; Hardware stack levels used:    1
  8737 ;; Hardware stack levels required when called:    1
  8738 ;; This function calls:
  8739 ;;		Nothing
  8740 ;; This function is called by:
  8741 ;;		_dtoa
  8742 ;; This function uses a non-reentrant model
  8743 ;;
  8744                           
  8745                           	psect	text40
  8746  001498                     __ptext40:
  8747                           	opt callstack 0
  8748  001498                     ___aomod:
  8749                           	opt callstack 23
  8750  001498  0E00               	movlw	0
  8751  00149A  6E12               	movwf	___aomod@sign^0,c
  8752  00149C  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  8753  00149E  EF55  F00A         	goto	u2050
  8754  0014A2  EF53  F00A         	goto	u2051
  8755  0014A6                     u2051:
  8756  0014A6  EF67  F00A         	goto	l3188
  8757  0014AA                     u2050:
  8758  0014AA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8759  0014AC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8760  0014AE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8761  0014B0  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8762  0014B2  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8763  0014B4  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8764  0014B6  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8765  0014B8  6C01               	negf	___aomod@dividend^0,c
  8766  0014BA  0E00               	movlw	0
  8767  0014BC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8768  0014BE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8769  0014C0  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8770  0014C2  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8771  0014C4  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8772  0014C6  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8773  0014C8  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8774  0014CA  0E01               	movlw	1
  8775  0014CC  6E12               	movwf	___aomod@sign^0,c
  8776  0014CE                     l3188:
  8777  0014CE  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  8778  0014D0  EF6E  F00A         	goto	u2060
  8779  0014D4  EF6C  F00A         	goto	u2061
  8780  0014D8                     u2061:
  8781  0014D8  EF7E  F00A         	goto	l3192
  8782  0014DC                     u2060:
  8783  0014DC  1E10               	comf	(___aomod@divisor+7)^0,f,c
  8784  0014DE  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  8785  0014E0  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  8786  0014E2  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  8787  0014E4  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  8788  0014E6  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  8789  0014E8  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  8790  0014EA  6C09               	negf	___aomod@divisor^0,c
  8791  0014EC  0E00               	movlw	0
  8792  0014EE  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  8793  0014F0  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  8794  0014F2  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  8795  0014F4  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  8796  0014F6  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  8797  0014F8  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  8798  0014FA  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  8799  0014FC                     l3192:
  8800  0014FC  5009               	movf	___aomod@divisor^0,w,c
  8801  0014FE  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  8802  001500  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  8803  001502  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  8804  001504  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  8805  001506  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  8806  001508  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  8807  00150A  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  8808  00150C  B4D8               	btfsc	status,2,c
  8809  00150E  EF8B  F00A         	goto	u2071
  8810  001512  EF8D  F00A         	goto	u2070
  8811  001516                     u2071:
  8812  001516  EFD5  F00A         	goto	l3208
  8813  00151A                     u2070:
  8814  00151A  0E01               	movlw	1
  8815  00151C  6E11               	movwf	___aomod@counter^0,c
  8816  00151E  EF9B  F00A         	goto	l3198
  8817  001522                     l3196:
  8818  001522  90D8               	bcf	status,0,c
  8819  001524  3609               	rlcf	___aomod@divisor^0,f,c
  8820  001526  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  8821  001528  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  8822  00152A  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  8823  00152C  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  8824  00152E  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  8825  001530  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  8826  001532  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  8827  001534  2A11               	incf	___aomod@counter^0,f,c
  8828  001536                     l3198:
  8829  001536  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  8830  001538  EFA0  F00A         	goto	u2081
  8831  00153C  EFA2  F00A         	goto	u2080
  8832  001540                     u2081:
  8833  001540  EF91  F00A         	goto	l3196
  8834  001544                     u2080:
  8835  001544                     l3200:
  8836  001544  5009               	movf	___aomod@divisor^0,w,c
  8837  001546  5C01               	subwf	___aomod@dividend^0,w,c
  8838  001548  500A               	movf	(___aomod@divisor+1)^0,w,c
  8839  00154A  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  8840  00154C  500B               	movf	(___aomod@divisor+2)^0,w,c
  8841  00154E  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  8842  001550  500C               	movf	(___aomod@divisor+3)^0,w,c
  8843  001552  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  8844  001554  500D               	movf	(___aomod@divisor+4)^0,w,c
  8845  001556  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  8846  001558  500E               	movf	(___aomod@divisor+5)^0,w,c
  8847  00155A  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  8848  00155C  500F               	movf	(___aomod@divisor+6)^0,w,c
  8849  00155E  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  8850  001560  5010               	movf	(___aomod@divisor+7)^0,w,c
  8851  001562  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  8852  001564  A0D8               	btfss	status,0,c
  8853  001566  EFB7  F00A         	goto	u2091
  8854  00156A  EFB9  F00A         	goto	u2090
  8855  00156E                     u2091:
  8856  00156E  EFC9  F00A         	goto	l3204
  8857  001572                     u2090:
  8858  001572  5009               	movf	___aomod@divisor^0,w,c
  8859  001574  5E01               	subwf	___aomod@dividend^0,f,c
  8860  001576  500A               	movf	(___aomod@divisor+1)^0,w,c
  8861  001578  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  8862  00157A  500B               	movf	(___aomod@divisor+2)^0,w,c
  8863  00157C  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  8864  00157E  500C               	movf	(___aomod@divisor+3)^0,w,c
  8865  001580  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  8866  001582  500D               	movf	(___aomod@divisor+4)^0,w,c
  8867  001584  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  8868  001586  500E               	movf	(___aomod@divisor+5)^0,w,c
  8869  001588  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  8870  00158A  500F               	movf	(___aomod@divisor+6)^0,w,c
  8871  00158C  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  8872  00158E  5010               	movf	(___aomod@divisor+7)^0,w,c
  8873  001590  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  8874  001592                     l3204:
  8875  001592  90D8               	bcf	status,0,c
  8876  001594  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  8877  001596  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  8878  001598  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  8879  00159A  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  8880  00159C  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  8881  00159E  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  8882  0015A0  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  8883  0015A2  3209               	rrcf	___aomod@divisor^0,f,c
  8884  0015A4  2E11               	decfsz	___aomod@counter^0,f,c
  8885  0015A6  EFA2  F00A         	goto	l3200
  8886  0015AA                     l3208:
  8887  0015AA  5012               	movf	___aomod@sign^0,w,c
  8888  0015AC  B4D8               	btfsc	status,2,c
  8889  0015AE  EFDB  F00A         	goto	u2101
  8890  0015B2  EFDD  F00A         	goto	u2100
  8891  0015B6                     u2101:
  8892  0015B6  EFED  F00A         	goto	l3212
  8893  0015BA                     u2100:
  8894  0015BA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8895  0015BC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8896  0015BE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8897  0015C0  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8898  0015C2  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8899  0015C4  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8900  0015C6  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8901  0015C8  6C01               	negf	___aomod@dividend^0,c
  8902  0015CA  0E00               	movlw	0
  8903  0015CC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8904  0015CE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8905  0015D0  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8906  0015D2  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8907  0015D4  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8908  0015D6  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8909  0015D8  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8910  0015DA                     l3212:
  8911  0015DA  C001  F001         	movff	___aomod@dividend,?___aomod
  8912  0015DE  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8913  0015E2  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8914  0015E6  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8915  0015EA  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8916  0015EE  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8917  0015F2  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8918  0015F6  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8919  0015FA  0012               	return		;funcret
  8920  0015FC                     __end_of___aomod:
  8921                           	opt callstack 0
  8922                           
  8923 ;; *************** function ___aodiv *****************
  8924 ;; Defined at:
  8925 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  8926 ;; Parameters:    Size  Location     Type
  8927 ;;  dividend        8    0[COMRAM] long long 
  8928 ;;  divisor         8    8[COMRAM] long long 
  8929 ;; Auto vars:     Size  Location     Type
  8930 ;;  quotient        8   18[COMRAM] long long 
  8931 ;;  sign            1   17[COMRAM] unsigned char 
  8932 ;;  counter         1   16[COMRAM] unsigned char 
  8933 ;; Return value:  Size  Location     Type
  8934 ;;                  8    0[COMRAM] long long 
  8935 ;; Registers used:
  8936 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8937 ;; Tracked objects:
  8938 ;;		On entry : 0/0
  8939 ;;		On exit  : 0/0
  8940 ;;		Unchanged: 0/0
  8941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8942 ;;      Params:        16       0       0       0       0       0       0       0       0
  8943 ;;      Locals:        10       0       0       0       0       0       0       0       0
  8944 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8945 ;;      Totals:        26       0       0       0       0       0       0       0       0
  8946 ;;Total ram usage:       26 bytes
  8947 ;; Hardware stack levels used:    1
  8948 ;; Hardware stack levels required when called:    1
  8949 ;; This function calls:
  8950 ;;		Nothing
  8951 ;; This function is called by:
  8952 ;;		_dtoa
  8953 ;; This function uses a non-reentrant model
  8954 ;;
  8955                           
  8956                           	psect	text41
  8957  000EB2                     __ptext41:
  8958                           	opt callstack 0
  8959  000EB2                     ___aodiv:
  8960                           	opt callstack 23
  8961  000EB2  0E00               	movlw	0
  8962  000EB4  6E12               	movwf	___aodiv@sign^0,c
  8963  000EB6  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  8964  000EB8  EF62  F007         	goto	u1980
  8965  000EBC  EF60  F007         	goto	u1981
  8966  000EC0                     u1981:
  8967  000EC0  EF74  F007         	goto	l3144
  8968  000EC4                     u1980:
  8969  000EC4  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  8970  000EC6  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  8971  000EC8  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  8972  000ECA  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  8973  000ECC  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  8974  000ECE  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  8975  000ED0  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  8976  000ED2  6C09               	negf	___aodiv@divisor^0,c
  8977  000ED4  0E00               	movlw	0
  8978  000ED6  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  8979  000ED8  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  8980  000EDA  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  8981  000EDC  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  8982  000EDE  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  8983  000EE0  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  8984  000EE2  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  8985  000EE4  0E01               	movlw	1
  8986  000EE6  6E12               	movwf	___aodiv@sign^0,c
  8987  000EE8                     l3144:
  8988  000EE8  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  8989  000EEA  EF7B  F007         	goto	u1990
  8990  000EEE  EF79  F007         	goto	u1991
  8991  000EF2                     u1991:
  8992  000EF2  EF8D  F007         	goto	l3150
  8993  000EF6                     u1990:
  8994  000EF6  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  8995  000EF8  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  8996  000EFA  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  8997  000EFC  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  8998  000EFE  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  8999  000F00  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  9000  000F02  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  9001  000F04  6C01               	negf	___aodiv@dividend^0,c
  9002  000F06  0E00               	movlw	0
  9003  000F08  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  9004  000F0A  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  9005  000F0C  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  9006  000F0E  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  9007  000F10  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  9008  000F12  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  9009  000F14  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  9010  000F16  0E01               	movlw	1
  9011  000F18  1A12               	xorwf	___aodiv@sign^0,f,c
  9012  000F1A                     l3150:
  9013  000F1A  EE20  F013         	lfsr	2,___aodiv@quotient
  9014  000F1E  0E07               	movlw	7
  9015  000F20                     u2001:
  9016  000F20  6ADE               	clrf	postinc2,c
  9017  000F22  06E8               	decf	wreg,f,c
  9018  000F24  E2FD               	bc	u2001
  9019  000F26  5009               	movf	___aodiv@divisor^0,w,c
  9020  000F28  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  9021  000F2A  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  9022  000F2C  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  9023  000F2E  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  9024  000F30  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  9025  000F32  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  9026  000F34  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  9027  000F36  B4D8               	btfsc	status,2,c
  9028  000F38  EFA0  F007         	goto	u2011
  9029  000F3C  EFA2  F007         	goto	u2010
  9030  000F40                     u2011:
  9031  000F40  EFF4  F007         	goto	l3172
  9032  000F44                     u2010:
  9033  000F44  0E01               	movlw	1
  9034  000F46  6E11               	movwf	___aodiv@counter^0,c
  9035  000F48  EFB0  F007         	goto	l3158
  9036  000F4C                     l3156:
  9037  000F4C  90D8               	bcf	status,0,c
  9038  000F4E  3609               	rlcf	___aodiv@divisor^0,f,c
  9039  000F50  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  9040  000F52  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  9041  000F54  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  9042  000F56  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  9043  000F58  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  9044  000F5A  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  9045  000F5C  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  9046  000F5E  2A11               	incf	___aodiv@counter^0,f,c
  9047  000F60                     l3158:
  9048  000F60  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  9049  000F62  EFB5  F007         	goto	u2021
  9050  000F66  EFB7  F007         	goto	u2020
  9051  000F6A                     u2021:
  9052  000F6A  EFA6  F007         	goto	l3156
  9053  000F6E                     u2020:
  9054  000F6E                     l3160:
  9055  000F6E  90D8               	bcf	status,0,c
  9056  000F70  3613               	rlcf	___aodiv@quotient^0,f,c
  9057  000F72  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  9058  000F74  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  9059  000F76  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  9060  000F78  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  9061  000F7A  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  9062  000F7C  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  9063  000F7E  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  9064  000F80  5009               	movf	___aodiv@divisor^0,w,c
  9065  000F82  5C01               	subwf	___aodiv@dividend^0,w,c
  9066  000F84  500A               	movf	(___aodiv@divisor+1)^0,w,c
  9067  000F86  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  9068  000F88  500B               	movf	(___aodiv@divisor+2)^0,w,c
  9069  000F8A  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  9070  000F8C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  9071  000F8E  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  9072  000F90  500D               	movf	(___aodiv@divisor+4)^0,w,c
  9073  000F92  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  9074  000F94  500E               	movf	(___aodiv@divisor+5)^0,w,c
  9075  000F96  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  9076  000F98  500F               	movf	(___aodiv@divisor+6)^0,w,c
  9077  000F9A  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  9078  000F9C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  9079  000F9E  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  9080  000FA0  A0D8               	btfss	status,0,c
  9081  000FA2  EFD5  F007         	goto	u2031
  9082  000FA6  EFD7  F007         	goto	u2030
  9083  000FAA                     u2031:
  9084  000FAA  EFE8  F007         	goto	l3168
  9085  000FAE                     u2030:
  9086  000FAE  5009               	movf	___aodiv@divisor^0,w,c
  9087  000FB0  5E01               	subwf	___aodiv@dividend^0,f,c
  9088  000FB2  500A               	movf	(___aodiv@divisor+1)^0,w,c
  9089  000FB4  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  9090  000FB6  500B               	movf	(___aodiv@divisor+2)^0,w,c
  9091  000FB8  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  9092  000FBA  500C               	movf	(___aodiv@divisor+3)^0,w,c
  9093  000FBC  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  9094  000FBE  500D               	movf	(___aodiv@divisor+4)^0,w,c
  9095  000FC0  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  9096  000FC2  500E               	movf	(___aodiv@divisor+5)^0,w,c
  9097  000FC4  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  9098  000FC6  500F               	movf	(___aodiv@divisor+6)^0,w,c
  9099  000FC8  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  9100  000FCA  5010               	movf	(___aodiv@divisor+7)^0,w,c
  9101  000FCC  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  9102  000FCE  8013               	bsf	___aodiv@quotient^0,0,c
  9103  000FD0                     l3168:
  9104  000FD0  90D8               	bcf	status,0,c
  9105  000FD2  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  9106  000FD4  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  9107  000FD6  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  9108  000FD8  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  9109  000FDA  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  9110  000FDC  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  9111  000FDE  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  9112  000FE0  3209               	rrcf	___aodiv@divisor^0,f,c
  9113  000FE2  2E11               	decfsz	___aodiv@counter^0,f,c
  9114  000FE4  EFB7  F007         	goto	l3160
  9115  000FE8                     l3172:
  9116  000FE8  5012               	movf	___aodiv@sign^0,w,c
  9117  000FEA  B4D8               	btfsc	status,2,c
  9118  000FEC  EFFA  F007         	goto	u2041
  9119  000FF0  EFFC  F007         	goto	u2040
  9120  000FF4                     u2041:
  9121  000FF4  EF0C  F008         	goto	l3176
  9122  000FF8                     u2040:
  9123  000FF8  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  9124  000FFA  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  9125  000FFC  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  9126  000FFE  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  9127  001000  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  9128  001002  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  9129  001004  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  9130  001006  6C13               	negf	___aodiv@quotient^0,c
  9131  001008  0E00               	movlw	0
  9132  00100A  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  9133  00100C  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  9134  00100E  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  9135  001010  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  9136  001012  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  9137  001014  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  9138  001016  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  9139  001018                     l3176:
  9140  001018  C013  F001         	movff	___aodiv@quotient,?___aodiv
  9141  00101C  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  9142  001020  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  9143  001024  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  9144  001028  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  9145  00102C  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  9146  001030  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  9147  001034  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  9148  001038  0012               	return		;funcret
  9149  00103A                     __end_of___aodiv:
  9150                           	opt callstack 0
  9151                           
  9152 ;; *************** function _ctoa *****************
  9153 ;; Defined at:
  9154 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9155 ;; Parameters:    Size  Location     Type
  9156 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  9157 ;;		 -> sprintf@f(6), 
  9158 ;;  c               1   29[COMRAM] unsigned char 
  9159 ;; Auto vars:     Size  Location     Type
  9160 ;;  w               2   30[COMRAM] int 
  9161 ;;  l               2    0        int 
  9162 ;; Return value:  Size  Location     Type
  9163 ;;                  2   27[COMRAM] int 
  9164 ;; Registers used:
  9165 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9166 ;; Tracked objects:
  9167 ;;		On entry : 0/0
  9168 ;;		On exit  : 0/0
  9169 ;;		Unchanged: 0/0
  9170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9171 ;;      Params:         3       0       0       0       0       0       0       0       0
  9172 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9173 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9174 ;;      Totals:         5       0       0       0       0       0       0       0       0
  9175 ;;Total ram usage:        5 bytes
  9176 ;; Hardware stack levels used:    1
  9177 ;; Hardware stack levels required when called:    5
  9178 ;; This function calls:
  9179 ;;		_pad
  9180 ;; This function is called by:
  9181 ;;		_vfpfcnvrt
  9182 ;; This function uses a non-reentrant model
  9183 ;;
  9184                           
  9185                           	psect	text42
  9186  0029E4                     __ptext42:
  9187                           	opt callstack 0
  9188  0029E4                     _ctoa:
  9189                           	opt callstack 20
  9190  0029E4                     
  9191                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  9192  0029E4  0100               	movlb	0	; () banked
  9193  0029E6  51EB               	movf	_width& (0+255),w,b
  9194  0029E8  11EC               	iorwf	(_width+1)& (0+255),w,b
  9195  0029EA  A4D8               	btfss	status,2,c
  9196  0029EC  EFFA  F014         	goto	u2131
  9197  0029F0  EFFC  F014         	goto	u2130
  9198  0029F4                     u2131:
  9199  0029F4  EF02  F015         	goto	l3232
  9200  0029F8                     u2130:
  9201  0029F8                     
  9202                           ; BSR set to: 0
  9203  0029F8  C0EB  F01F         	movff	_width,ctoa@w
  9204  0029FC  C0EC  F020         	movff	_width+1,ctoa@w+1
  9205  002A00  EF08  F015         	goto	l3234
  9206  002A04                     l3232:
  9207                           
  9208                           ; BSR set to: 0
  9209  002A04  0EFF               	movlw	255
  9210  002A06  25EB               	addwf	_width& (0+255),w,b
  9211  002A08  6E1F               	movwf	ctoa@w^0,c
  9212  002A0A  0EFF               	movlw	255
  9213  002A0C  21EC               	addwfc	(_width+1)& (0+255),w,b
  9214  002A0E  6E20               	movwf	(ctoa@w+1)^0,c
  9215  002A10                     l3234:
  9216                           
  9217                           ; BSR set to: 0
  9218                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  9219  002A10  C01E  F17F         	movff	ctoa@c,_dbuf
  9220  002A14                     
  9221                           ; BSR set to: 0
  9222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  9223  002A14  0E00               	movlw	0
  9224  002A16  0101               	movlb	1	; () banked
  9225  002A18  6F80               	movwf	(_dbuf+1)& (0+255),b
  9226  002A1A                     
  9227                           ; BSR set to: 1
  9228                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  9229  002A1A  C01C  F011         	movff	ctoa@fp,pad@fp
  9230  002A1E  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  9231  002A22  0E7F               	movlw	low _dbuf
  9232  002A24  6E13               	movwf	pad@buf^0,c
  9233  002A26  0E01               	movlw	high _dbuf
  9234  002A28  6E14               	movwf	(pad@buf+1)^0,c
  9235  002A2A  C01F  F015         	movff	ctoa@w,pad@p
  9236  002A2E  C020  F016         	movff	ctoa@w+1,pad@p+1
  9237  002A32  EC3C  F010         	call	_pad	;wreg free
  9238  002A36  C011  F01C         	movff	?_pad,?_ctoa
  9239  002A3A  C012  F01D         	movff	?_pad+1,?_ctoa+1
  9240  002A3E  0012               	return		;funcret
  9241  002A40                     __end_of_ctoa:
  9242                           	opt callstack 0
  9243                           
  9244 ;; *************** function _pad *****************
  9245 ;; Defined at:
  9246 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9247 ;; Parameters:    Size  Location     Type
  9248 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  9249 ;;		 -> sprintf@f(6), 
  9250 ;;  buf             2   18[COMRAM] PTR unsigned char 
  9251 ;;		 -> dbuf(32), 
  9252 ;;  p               2   20[COMRAM] int 
  9253 ;; Auto vars:     Size  Location     Type
  9254 ;;  w               2   25[COMRAM] int 
  9255 ;;  i               2   23[COMRAM] int 
  9256 ;; Return value:  Size  Location     Type
  9257 ;;                  2   16[COMRAM] int 
  9258 ;; Registers used:
  9259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9260 ;; Tracked objects:
  9261 ;;		On entry : 0/0
  9262 ;;		On exit  : 0/0
  9263 ;;		Unchanged: 0/0
  9264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9265 ;;      Params:         6       0       0       0       0       0       0       0       0
  9266 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9267 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9268 ;;      Totals:        11       0       0       0       0       0       0       0       0
  9269 ;;Total ram usage:       11 bytes
  9270 ;; Hardware stack levels used:    1
  9271 ;; Hardware stack levels required when called:    4
  9272 ;; This function calls:
  9273 ;;		_fputc
  9274 ;;		_fputs
  9275 ;;		_strlen
  9276 ;; This function is called by:
  9277 ;;		_ctoa
  9278 ;;		_dtoa
  9279 ;; This function uses a non-reentrant model
  9280 ;;
  9281                           
  9282                           	psect	text43
  9283  002078                     __ptext43:
  9284                           	opt callstack 0
  9285  002078                     _pad:
  9286                           	opt callstack 20
  9287  002078                     
  9288                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  9289  002078  0100               	movlb	0	; () banked
  9290  00207A  A1EF               	btfss	_flags& (0+255),0,b
  9291  00207C  EF42  F010         	goto	u1911
  9292  002080  EF44  F010         	goto	u1910
  9293  002084                     u1911:
  9294  002084  EF4E  F010         	goto	l3104
  9295  002088                     u1910:
  9296  002088                     
  9297                           ; BSR set to: 0
  9298                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  9299  002088  C013  F00A         	movff	pad@buf,fputs@s
  9300  00208C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9301  002090  C011  F00C         	movff	pad@fp,fputs@fp
  9302  002094  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9303  002098  EC3A  F016         	call	_fputs	;wreg free
  9304  00209C                     l3104:
  9305                           
  9306                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  9307  00209C  BE16               	btfsc	(pad@p+1)^0,7,c
  9308  00209E  EF53  F010         	goto	u1921
  9309  0020A2  EF55  F010         	goto	u1920
  9310  0020A6                     u1921:
  9311  0020A6  EF5B  F010         	goto	l3108
  9312  0020AA                     u1920:
  9313  0020AA  C015  F01A         	movff	pad@p,pad@w
  9314  0020AE  C016  F01B         	movff	pad@p+1,pad@w+1
  9315  0020B2  EF5F  F010         	goto	l501
  9316  0020B6                     l3108:
  9317  0020B6  0E00               	movlw	0
  9318  0020B8  6E1B               	movwf	(pad@w+1)^0,c
  9319  0020BA  0E00               	movlw	0
  9320  0020BC  6E1A               	movwf	pad@w^0,c
  9321  0020BE                     l501:
  9322                           
  9323                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  9324  0020BE  0E00               	movlw	0
  9325  0020C0  6E19               	movwf	(pad@i+1)^0,c
  9326  0020C2  0E00               	movlw	0
  9327  0020C4  6E18               	movwf	pad@i^0,c
  9328                           
  9329                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9330  0020C6  EF71  F010         	goto	l3114
  9331  0020CA                     l3110:
  9332                           
  9333                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  9334  0020CA  0E00               	movlw	0
  9335  0020CC  6E02               	movwf	(fputc@c+1)^0,c
  9336  0020CE  0E20               	movlw	32
  9337  0020D0  6E01               	movwf	fputc@c^0,c
  9338  0020D2  C011  F003         	movff	pad@fp,fputc@fp
  9339  0020D6  C012  F004         	movff	pad@fp+1,fputc@fp+1
  9340  0020DA  EC73  F00F         	call	_fputc	;wreg free
  9341  0020DE                     
  9342                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  9343  0020DE  4A18               	infsnz	pad@i^0,f,c
  9344  0020E0  2A19               	incf	(pad@i+1)^0,f,c
  9345  0020E2                     l3114:
  9346                           
  9347                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9348  0020E2  501A               	movf	pad@w^0,w,c
  9349  0020E4  5C18               	subwf	pad@i^0,w,c
  9350  0020E6  5019               	movf	(pad@i+1)^0,w,c
  9351  0020E8  0A80               	xorlw	128
  9352  0020EA  6E17               	movwf	??_pad^0,c
  9353  0020EC  501B               	movf	(pad@w+1)^0,w,c
  9354  0020EE  0A80               	xorlw	128
  9355  0020F0  5817               	subwfb	??_pad^0,w,c
  9356  0020F2  A0D8               	btfss	status,0,c
  9357  0020F4  EF7E  F010         	goto	u1931
  9358  0020F8  EF80  F010         	goto	u1930
  9359  0020FC                     u1931:
  9360  0020FC  EF65  F010         	goto	l3110
  9361  002100                     u1930:
  9362  002100                     
  9363                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  9364  002100  0100               	movlb	0	; () banked
  9365  002102  B1EF               	btfsc	_flags& (0+255),0,b
  9366  002104  EF86  F010         	goto	u1941
  9367  002108  EF88  F010         	goto	u1940
  9368  00210C                     u1941:
  9369  00210C  EF92  F010         	goto	l3118
  9370  002110                     u1940:
  9371  002110                     
  9372                           ; BSR set to: 0
  9373                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  9374  002110  C013  F00A         	movff	pad@buf,fputs@s
  9375  002114  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9376  002118  C011  F00C         	movff	pad@fp,fputs@fp
  9377  00211C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9378  002120  EC3A  F016         	call	_fputs	;wreg free
  9379  002124                     l3118:
  9380                           
  9381                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  9382  002124  C013  F001         	movff	pad@buf,strlen@s
  9383  002128  C014  F002         	movff	pad@buf+1,strlen@s+1
  9384  00212C  ECD6  F016         	call	_strlen	;wreg free
  9385  002130  501A               	movf	pad@w^0,w,c
  9386  002132  2401               	addwf	?_strlen^0,w,c
  9387  002134  6E11               	movwf	?_pad^0,c
  9388  002136  501B               	movf	(pad@w+1)^0,w,c
  9389  002138  2002               	addwfc	(?_strlen+1)^0,w,c
  9390  00213A  6E12               	movwf	(?_pad+1)^0,c
  9391  00213C  0012               	return		;funcret
  9392  00213E                     __end_of_pad:
  9393                           	opt callstack 0
  9394                           
  9395 ;; *************** function _strlen *****************
  9396 ;; Defined at:
  9397 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  9398 ;; Parameters:    Size  Location     Type
  9399 ;;  s               2    0[COMRAM] PTR const unsigned char 
  9400 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(32), dameDatosSistema@diasRegar(50), 
  9401 ;; Auto vars:     Size  Location     Type
  9402 ;;  a               2    2[COMRAM] PTR const unsigned char 
  9403 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(32), dameDatosSistema@diasRegar(50), 
  9404 ;; Return value:  Size  Location     Type
  9405 ;;                  2    0[COMRAM] unsigned int 
  9406 ;; Registers used:
  9407 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9408 ;; Tracked objects:
  9409 ;;		On entry : 0/0
  9410 ;;		On exit  : 0/0
  9411 ;;		Unchanged: 0/0
  9412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9413 ;;      Params:         2       0       0       0       0       0       0       0       0
  9414 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9415 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9416 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9417 ;;Total ram usage:        4 bytes
  9418 ;; Hardware stack levels used:    1
  9419 ;; Hardware stack levels required when called:    1
  9420 ;; This function calls:
  9421 ;;		Nothing
  9422 ;; This function is called by:
  9423 ;;		_pad
  9424 ;;		_stoa
  9425 ;; This function uses a non-reentrant model
  9426 ;;
  9427                           
  9428                           	psect	text44
  9429  002DAC                     __ptext44:
  9430                           	opt callstack 0
  9431  002DAC                     _strlen:
  9432                           	opt callstack 23
  9433  002DAC  C001  F003         	movff	strlen@s,strlen@a
  9434  002DB0  C002  F004         	movff	strlen@s+1,strlen@a+1
  9435  002DB4  EFDE  F016         	goto	l3094
  9436  002DB8                     l3092:
  9437  002DB8  4A01               	infsnz	strlen@s^0,f,c
  9438  002DBA  2A02               	incf	(strlen@s+1)^0,f,c
  9439  002DBC                     l3094:
  9440  002DBC  C001  FFD9         	movff	strlen@s,fsr2l
  9441  002DC0  C002  FFDA         	movff	strlen@s+1,fsr2h
  9442  002DC4  50DF               	movf	indf2,w,c
  9443  002DC6  A4D8               	btfss	status,2,c
  9444  002DC8  EFE8  F016         	goto	u1901
  9445  002DCC  EFEA  F016         	goto	u1900
  9446  002DD0                     u1901:
  9447  002DD0  EFDC  F016         	goto	l3092
  9448  002DD4                     u1900:
  9449  002DD4  5003               	movf	strlen@a^0,w,c
  9450  002DD6  5C01               	subwf	strlen@s^0,w,c
  9451  002DD8  6E01               	movwf	?_strlen^0,c
  9452  002DDA  5004               	movf	(strlen@a+1)^0,w,c
  9453  002DDC  5802               	subwfb	(strlen@s+1)^0,w,c
  9454  002DDE  6E02               	movwf	(?_strlen+1)^0,c
  9455  002DE0  0012               	return		;funcret
  9456  002DE2                     __end_of_strlen:
  9457                           	opt callstack 0
  9458                           
  9459 ;; *************** function _fputs *****************
  9460 ;; Defined at:
  9461 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  9462 ;; Parameters:    Size  Location     Type
  9463 ;;  s               2    9[COMRAM] PTR const unsigned char 
  9464 ;;		 -> dbuf(32), 
  9465 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  9466 ;;		 -> sprintf@f(6), 
  9467 ;; Auto vars:     Size  Location     Type
  9468 ;;  i               2   14[COMRAM] int 
  9469 ;;  c               1   13[COMRAM] unsigned char 
  9470 ;; Return value:  Size  Location     Type
  9471 ;;                  2    9[COMRAM] int 
  9472 ;; Registers used:
  9473 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9474 ;; Tracked objects:
  9475 ;;		On entry : 0/0
  9476 ;;		On exit  : 0/0
  9477 ;;		Unchanged: 0/0
  9478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9479 ;;      Params:         4       0       0       0       0       0       0       0       0
  9480 ;;      Locals:         3       0       0       0       0       0       0       0       0
  9481 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9482 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9483 ;;Total ram usage:        7 bytes
  9484 ;; Hardware stack levels used:    1
  9485 ;; Hardware stack levels required when called:    3
  9486 ;; This function calls:
  9487 ;;		_fputc
  9488 ;; This function is called by:
  9489 ;;		_pad
  9490 ;; This function uses a non-reentrant model
  9491 ;;
  9492                           
  9493                           	psect	text45
  9494  002C74                     __ptext45:
  9495                           	opt callstack 0
  9496  002C74                     _fputs:
  9497                           	opt callstack 20
  9498  002C74  0E00               	movlw	0
  9499  002C76  6E10               	movwf	(fputs@i+1)^0,c
  9500  002C78  0E00               	movlw	0
  9501  002C7A  6E0F               	movwf	fputs@i^0,c
  9502  002C7C  EF4B  F016         	goto	l3088
  9503  002C80                     l3084:
  9504  002C80  C00E  F001         	movff	fputs@c,fputc@c
  9505  002C84  6A02               	clrf	(fputc@c+1)^0,c
  9506  002C86  C00C  F003         	movff	fputs@fp,fputc@fp
  9507  002C8A  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  9508  002C8E  EC73  F00F         	call	_fputc	;wreg free
  9509  002C92  4A0F               	infsnz	fputs@i^0,f,c
  9510  002C94  2A10               	incf	(fputs@i+1)^0,f,c
  9511  002C96                     l3088:
  9512  002C96  500F               	movf	fputs@i^0,w,c
  9513  002C98  240A               	addwf	fputs@s^0,w,c
  9514  002C9A  6ED9               	movwf	fsr2l,c
  9515  002C9C  5010               	movf	(fputs@i+1)^0,w,c
  9516  002C9E  200B               	addwfc	(fputs@s+1)^0,w,c
  9517  002CA0  6EDA               	movwf	fsr2h,c
  9518  002CA2  50DF               	movf	indf2,w,c
  9519  002CA4  6E0E               	movwf	fputs@c^0,c
  9520  002CA6  500E               	movf	fputs@c^0,w,c
  9521  002CA8  A4D8               	btfss	status,2,c
  9522  002CAA  EF59  F016         	goto	u1891
  9523  002CAE  EF5B  F016         	goto	u1890
  9524  002CB2                     u1891:
  9525  002CB2  EF40  F016         	goto	l3084
  9526  002CB6                     u1890:
  9527  002CB6  0012               	return		;funcret
  9528  002CB8                     __end_of_fputs:
  9529                           	opt callstack 0
  9530                           
  9531 ;; *************** function _fputc *****************
  9532 ;; Defined at:
  9533 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  9534 ;; Parameters:    Size  Location     Type
  9535 ;;  c               2    0[COMRAM] int 
  9536 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  9537 ;;		 -> sprintf@f(6), 
  9538 ;; Auto vars:     Size  Location     Type
  9539 ;;		None
  9540 ;; Return value:  Size  Location     Type
  9541 ;;                  2    0[COMRAM] int 
  9542 ;; Registers used:
  9543 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9544 ;; Tracked objects:
  9545 ;;		On entry : 0/0
  9546 ;;		On exit  : 0/0
  9547 ;;		Unchanged: 0/0
  9548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9549 ;;      Params:         4       0       0       0       0       0       0       0       0
  9550 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9551 ;;      Temps:          5       0       0       0       0       0       0       0       0
  9552 ;;      Totals:         9       0       0       0       0       0       0       0       0
  9553 ;;Total ram usage:        9 bytes
  9554 ;; Hardware stack levels used:    1
  9555 ;; Hardware stack levels required when called:    2
  9556 ;; This function calls:
  9557 ;;		_putch
  9558 ;; This function is called by:
  9559 ;;		_pad
  9560 ;;		_stoa
  9561 ;;		_vfpfcnvrt
  9562 ;;		_fputs
  9563 ;; This function uses a non-reentrant model
  9564 ;;
  9565                           
  9566                           	psect	text46
  9567  001EE6                     __ptext46:
  9568                           	opt callstack 0
  9569  001EE6                     _fputc:
  9570                           	opt callstack 22
  9571  001EE6  5003               	movf	fputc@fp^0,w,c
  9572  001EE8  1004               	iorwf	(fputc@fp+1)^0,w,c
  9573  001EEA  B4D8               	btfsc	status,2,c
  9574  001EEC  EF7A  F00F         	goto	u1851
  9575  001EF0  EF7C  F00F         	goto	u1850
  9576  001EF4                     u1851:
  9577  001EF4  EF85  F00F         	goto	l3072
  9578  001EF8                     u1850:
  9579  001EF8  5003               	movf	fputc@fp^0,w,c
  9580  001EFA  1004               	iorwf	(fputc@fp+1)^0,w,c
  9581  001EFC  A4D8               	btfss	status,2,c
  9582  001EFE  EF83  F00F         	goto	u1861
  9583  001F02  EF85  F00F         	goto	u1860
  9584  001F06                     u1861:
  9585  001F06  EF8A  F00F         	goto	l3074
  9586  001F0A                     u1860:
  9587  001F0A                     l3072:
  9588  001F0A  5001               	movf	fputc@c^0,w,c
  9589  001F0C  ECEE  F017         	call	_putch
  9590  001F10  EFD7  F00F         	goto	l1326
  9591  001F14                     l3074:
  9592  001F14  EE20 F004          	lfsr	2,4
  9593  001F18  5003               	movf	fputc@fp^0,w,c
  9594  001F1A  26D9               	addwf	fsr2l,f,c
  9595  001F1C  5004               	movf	(fputc@fp+1)^0,w,c
  9596  001F1E  22DA               	addwfc	fsr2h,f,c
  9597  001F20  50DE               	movf	postinc2,w,c
  9598  001F22  10DE               	iorwf	postinc2,w,c
  9599  001F24  B4D8               	btfsc	status,2,c
  9600  001F26  EF97  F00F         	goto	u1871
  9601  001F2A  EF99  F00F         	goto	u1870
  9602  001F2E                     u1871:
  9603  001F2E  EFB4  F00F         	goto	l3078
  9604  001F32                     u1870:
  9605  001F32  EE20 F004          	lfsr	2,4
  9606  001F36  5003               	movf	fputc@fp^0,w,c
  9607  001F38  26D9               	addwf	fsr2l,f,c
  9608  001F3A  5004               	movf	(fputc@fp+1)^0,w,c
  9609  001F3C  22DA               	addwfc	fsr2h,f,c
  9610  001F3E  EE10 F002          	lfsr	1,2
  9611  001F42  5003               	movf	fputc@fp^0,w,c
  9612  001F44  26E1               	addwf	fsr1l,f,c
  9613  001F46  5004               	movf	(fputc@fp+1)^0,w,c
  9614  001F48  22E2               	addwfc	fsr1h,f,c
  9615  001F4A  50DE               	movf	postinc2,w,c
  9616  001F4C  5CE6               	subwf	postinc1,w,c
  9617  001F4E  50E6               	movf	postinc1,w,c
  9618  001F50  0A80               	xorlw	128
  9619  001F52  6E09               	movwf	(??_fputc+4)^0,c
  9620  001F54  50DE               	movf	postinc2,w,c
  9621  001F56  0A80               	xorlw	128
  9622  001F58  5809               	subwfb	(??_fputc+4)^0,w,c
  9623  001F5A  B0D8               	btfsc	status,0,c
  9624  001F5C  EFB2  F00F         	goto	u1881
  9625  001F60  EFB4  F00F         	goto	u1880
  9626  001F64                     u1881:
  9627  001F64  EFD7  F00F         	goto	l1326
  9628  001F68                     u1880:
  9629  001F68                     l3078:
  9630  001F68  EE20 F002          	lfsr	2,2
  9631  001F6C  5003               	movf	fputc@fp^0,w,c
  9632  001F6E  26D9               	addwf	fsr2l,f,c
  9633  001F70  5004               	movf	(fputc@fp+1)^0,w,c
  9634  001F72  22DA               	addwfc	fsr2h,f,c
  9635  001F74  CFDE F005          	movff	postinc2,??_fputc
  9636  001F78  CFDD F006          	movff	postdec2,??_fputc+1
  9637  001F7C  C003  FFD9         	movff	fputc@fp,fsr2l
  9638  001F80  C004  FFDA         	movff	fputc@fp+1,fsr2h
  9639  001F84  CFDE F007          	movff	postinc2,??_fputc+2
  9640  001F88  CFDD F008          	movff	postdec2,??_fputc+3
  9641  001F8C  5005               	movf	??_fputc^0,w,c
  9642  001F8E  2407               	addwf	(??_fputc+2)^0,w,c
  9643  001F90  6ED9               	movwf	fsr2l,c
  9644  001F92  5006               	movf	(??_fputc+1)^0,w,c
  9645  001F94  2008               	addwfc	(??_fputc+3)^0,w,c
  9646  001F96  6EDA               	movwf	fsr2h,c
  9647  001F98  C001  FFDF         	movff	fputc@c,indf2
  9648  001F9C  EE20 F002          	lfsr	2,2
  9649  001FA0  5003               	movf	fputc@fp^0,w,c
  9650  001FA2  26D9               	addwf	fsr2l,f,c
  9651  001FA4  5004               	movf	(fputc@fp+1)^0,w,c
  9652  001FA6  22DA               	addwfc	fsr2h,f,c
  9653  001FA8  2ADE               	incf	postinc2,f,c
  9654  001FAA  0E00               	movlw	0
  9655  001FAC  22DD               	addwfc	postdec2,f,c
  9656  001FAE                     l1326:
  9657  001FAE  0012               	return		;funcret
  9658  001FB0                     __end_of_fputc:
  9659                           	opt callstack 0
  9660                           
  9661 ;; *************** function _putch *****************
  9662 ;; Defined at:
  9663 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  9664 ;; Parameters:    Size  Location     Type
  9665 ;;  c               1    wreg     unsigned char 
  9666 ;; Auto vars:     Size  Location     Type
  9667 ;;  c               1    0[COMRAM] unsigned char 
  9668 ;; Return value:  Size  Location     Type
  9669 ;;                  1    wreg      void 
  9670 ;; Registers used:
  9671 ;;		wreg
  9672 ;; Tracked objects:
  9673 ;;		On entry : 0/0
  9674 ;;		On exit  : 0/0
  9675 ;;		Unchanged: 0/0
  9676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9677 ;;      Params:         0       0       0       0       0       0       0       0       0
  9678 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9679 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9680 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9681 ;;Total ram usage:        0 bytes
  9682 ;; Hardware stack levels used:    1
  9683 ;; Hardware stack levels required when called:    1
  9684 ;; This function calls:
  9685 ;;		Nothing
  9686 ;; This function is called by:
  9687 ;;		_fputc
  9688 ;; This function uses a non-reentrant model
  9689 ;;
  9690                           
  9691                           	psect	text47
  9692  002FDC                     __ptext47:
  9693                           	opt callstack 0
  9694  002FDC                     _putch:
  9695                           	opt callstack 22
  9696  002FDC  0012               	return		;funcret
  9697  002FDE                     __end_of_putch:
  9698                           	opt callstack 0
  9699                           
  9700 ;; *************** function _atoi *****************
  9701 ;; Defined at:
  9702 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  9703 ;; Parameters:    Size  Location     Type
  9704 ;;  s               2    7[COMRAM] PTR const unsigned char 
  9705 ;;		 -> STR_41(45), STR_40(29), STR_39(32), STR_38(45), 
  9706 ;;		 -> STR_37(29), STR_36(32), STR_34(53), STR_19(51), 
  9707 ;;		 -> STR_12(9), 
  9708 ;; Auto vars:     Size  Location     Type
  9709 ;;  n               2   20[COMRAM] int 
  9710 ;;  neg             2   13[COMRAM] int 
  9711 ;; Return value:  Size  Location     Type
  9712 ;;                  2    7[COMRAM] int 
  9713 ;; Registers used:
  9714 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9715 ;; Tracked objects:
  9716 ;;		On entry : 0/0
  9717 ;;		On exit  : 0/0
  9718 ;;		Unchanged: 0/0
  9719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9720 ;;      Params:         2       0       0       0       0       0       0       0       0
  9721 ;;      Locals:         9       0       0       0       0       0       0       0       0
  9722 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9723 ;;      Totals:        15       0       0       0       0       0       0       0       0
  9724 ;;Total ram usage:       15 bytes
  9725 ;; Hardware stack levels used:    1
  9726 ;; Hardware stack levels required when called:    2
  9727 ;; This function calls:
  9728 ;;		___wmul
  9729 ;;		_isdigit
  9730 ;;		_isspace
  9731 ;; This function is called by:
  9732 ;;		_vfpfcnvrt
  9733 ;; This function uses a non-reentrant model
  9734 ;;
  9735                           
  9736                           	psect	text48
  9737  000D22                     __ptext48:
  9738                           	opt callstack 0
  9739  000D22                     _atoi:
  9740                           	opt callstack 23
  9741  000D22  0E00               	movlw	0
  9742  000D24  6E16               	movwf	(atoi@n+1)^0,c
  9743  000D26  0E00               	movlw	0
  9744  000D28  6E15               	movwf	atoi@n^0,c
  9745  000D2A  0E00               	movlw	0
  9746  000D2C  6E0F               	movwf	(atoi@neg+1)^0,c
  9747  000D2E  0E00               	movlw	0
  9748  000D30  6E0E               	movwf	atoi@neg^0,c
  9749  000D32  EF9D  F006         	goto	l3350
  9750  000D36                     l3348:
  9751  000D36  4A08               	infsnz	atoi@s^0,f,c
  9752  000D38  2A09               	incf	(atoi@s+1)^0,f,c
  9753  000D3A                     l3350:
  9754  000D3A  0E01               	movlw	1
  9755  000D3C  6E14               	movwf	_atoi$1565^0,c
  9756  000D3E  C008  FFF6         	movff	atoi@s,tblptrl
  9757  000D42  C009  FFF7         	movff	atoi@s+1,tblptrh
  9758  000D46                     	if	0	;tblptru may be non-zero
  9759  000D46                     	endif
  9760  000D46                     	if	0	;tblptru may be non-zero
  9761  000D46                     	endif
  9762  000D46  0008               	tblrd		*
  9763  000D48  50F5               	movf	tablat,w,c
  9764  000D4A  0A20               	xorlw	32
  9765  000D4C  B4D8               	btfsc	status,2,c
  9766  000D4E  EFAB  F006         	goto	u2381
  9767  000D52  EFAD  F006         	goto	u2380
  9768  000D56                     u2381:
  9769  000D56  EFCA  F006         	goto	l3358
  9770  000D5A                     u2380:
  9771  000D5A  0EF7               	movlw	247
  9772  000D5C  6E0A               	movwf	??_atoi^0,c
  9773  000D5E  0EFF               	movlw	255
  9774  000D60  6E0B               	movwf	(??_atoi+1)^0,c
  9775  000D62  C008  FFF6         	movff	atoi@s,tblptrl
  9776  000D66  C009  FFF7         	movff	atoi@s+1,tblptrh
  9777  000D6A                     	if	0	;tblptru may be non-zero
  9778  000D6A                     	endif
  9779  000D6A                     	if	0	;tblptru may be non-zero
  9780  000D6A                     	endif
  9781  000D6A  0008               	tblrd		*
  9782  000D6C  50F5               	movf	tablat,w,c
  9783  000D6E  6E0C               	movwf	(??_atoi+2)^0,c
  9784  000D70  6A0D               	clrf	(??_atoi+3)^0,c
  9785  000D72  500A               	movf	??_atoi^0,w,c
  9786  000D74  260C               	addwf	(??_atoi+2)^0,f,c
  9787  000D76  500B               	movf	(??_atoi+1)^0,w,c
  9788  000D78  220D               	addwfc	(??_atoi+3)^0,f,c
  9789  000D7A  500D               	movf	(??_atoi+3)^0,w,c
  9790  000D7C  E109               	bnz	u2390
  9791  000D7E  0E05               	movlw	5
  9792  000D80  5C0C               	subwf	(??_atoi+2)^0,w,c
  9793  000D82  A0D8               	btfss	status,0,c
  9794  000D84  EFC6  F006         	goto	u2391
  9795  000D88  EFC8  F006         	goto	u2390
  9796  000D8C                     u2391:
  9797  000D8C  EFCA  F006         	goto	l3358
  9798  000D90                     u2390:
  9799  000D90  0E00               	movlw	0
  9800  000D92  6E14               	movwf	_atoi$1565^0,c
  9801  000D94                     l3358:
  9802  000D94  C014  F010         	movff	_atoi$1565,_atoi$1564
  9803  000D98  6A11               	clrf	(_atoi$1564+1)^0,c
  9804  000D9A  5010               	movf	_atoi$1564^0,w,c
  9805  000D9C  1011               	iorwf	(_atoi$1564+1)^0,w,c
  9806  000D9E  A4D8               	btfss	status,2,c
  9807  000DA0  EFD4  F006         	goto	u2401
  9808  000DA4  EFD6  F006         	goto	u2400
  9809  000DA8                     u2401:
  9810  000DA8  EF9B  F006         	goto	l3348
  9811  000DAC                     u2400:
  9812  000DAC  EFE0  F006         	goto	l3368
  9813  000DB0                     l3364:
  9814  000DB0  0E00               	movlw	0
  9815  000DB2  6E0F               	movwf	(atoi@neg+1)^0,c
  9816  000DB4  0E01               	movlw	1
  9817  000DB6  6E0E               	movwf	atoi@neg^0,c
  9818  000DB8                     l3366:
  9819  000DB8  4A08               	infsnz	atoi@s^0,f,c
  9820  000DBA  2A09               	incf	(atoi@s+1)^0,f,c
  9821  000DBC  EF15  F007         	goto	l3374
  9822  000DC0                     l3368:
  9823  000DC0  C008  FFF6         	movff	atoi@s,tblptrl
  9824  000DC4  C009  FFF7         	movff	atoi@s+1,tblptrh
  9825  000DC8                     	if	0	;tblptru may be non-zero
  9826  000DC8                     	endif
  9827  000DC8                     	if	0	;tblptru may be non-zero
  9828  000DC8                     	endif
  9829  000DC8  0008               	tblrd		*
  9830  000DCA  50F5               	movf	tablat,w,c
  9831  000DCC  6E0A               	movwf	??_atoi^0,c
  9832  000DCE  6A0B               	clrf	(??_atoi+1)^0,c
  9833                           
  9834                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9835                           ; Switch size 1, requested type "simple"
  9836                           ; Number of cases is 1, Range of values is 0 to 0
  9837                           ; switch strategies available:
  9838                           ; Name         Instructions Cycles
  9839                           ; simple_byte            4     3 (average)
  9840                           ;	Chosen strategy is simple_byte
  9841  000DD0  500B               	movf	(??_atoi+1)^0,w,c
  9842  000DD2  0A00               	xorlw	0	; case 0
  9843  000DD4  B4D8               	btfsc	status,2,c
  9844  000DD6  EFEF  F006         	goto	l4792
  9845  000DDA  EF15  F007         	goto	l3374
  9846  000DDE                     l4792:
  9847                           
  9848                           ; Switch size 1, requested type "simple"
  9849                           ; Number of cases is 2, Range of values is 43 to 45
  9850                           ; switch strategies available:
  9851                           ; Name         Instructions Cycles
  9852                           ; simple_byte            7     4 (average)
  9853                           ;	Chosen strategy is simple_byte
  9854  000DDE  500A               	movf	??_atoi^0,w,c
  9855  000DE0  0A2B               	xorlw	43	; case 43
  9856  000DE2  B4D8               	btfsc	status,2,c
  9857  000DE4  EFDC  F006         	goto	l3366
  9858  000DE8  0A06               	xorlw	6	; case 45
  9859  000DEA  B4D8               	btfsc	status,2,c
  9860  000DEC  EFD8  F006         	goto	l3364
  9861  000DF0  EF15  F007         	goto	l3374
  9862  000DF4                     l3370:
  9863  000DF4  C015  F001         	movff	atoi@n,___wmul@multiplier
  9864  000DF8  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  9865  000DFC  0E00               	movlw	0
  9866  000DFE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9867  000E00  0E0A               	movlw	10
  9868  000E02  6E03               	movwf	___wmul@multiplicand^0,c
  9869  000E04  EC5F  F017         	call	___wmul	;wreg free
  9870  000E08  C008  FFF6         	movff	atoi@s,tblptrl
  9871  000E0C  C009  FFF7         	movff	atoi@s+1,tblptrh
  9872  000E10                     	if	0	;tblptru may be non-zero
  9873  000E10                     	endif
  9874  000E10                     	if	0	;tblptru may be non-zero
  9875  000E10                     	endif
  9876  000E10  0008               	tblrd		*
  9877  000E12  50F5               	movf	tablat,w,c
  9878  000E14  5E01               	subwf	?___wmul^0,f,c
  9879  000E16  0E00               	movlw	0
  9880  000E18  5A02               	subwfb	(?___wmul+1)^0,f,c
  9881  000E1A  0E30               	movlw	48
  9882  000E1C  2401               	addwf	?___wmul^0,w,c
  9883  000E1E  6E15               	movwf	atoi@n^0,c
  9884  000E20  0E00               	movlw	0
  9885  000E22  2002               	addwfc	(?___wmul+1)^0,w,c
  9886  000E24  6E16               	movwf	(atoi@n+1)^0,c
  9887  000E26  EFDC  F006         	goto	l3366
  9888  000E2A                     l3374:
  9889  000E2A  0ED0               	movlw	208
  9890  000E2C  6E0A               	movwf	??_atoi^0,c
  9891  000E2E  0EFF               	movlw	255
  9892  000E30  6E0B               	movwf	(??_atoi+1)^0,c
  9893  000E32  C008  FFF6         	movff	atoi@s,tblptrl
  9894  000E36  C009  FFF7         	movff	atoi@s+1,tblptrh
  9895  000E3A                     	if	0	;tblptru may be non-zero
  9896  000E3A                     	endif
  9897  000E3A                     	if	0	;tblptru may be non-zero
  9898  000E3A                     	endif
  9899  000E3A  0008               	tblrd		*
  9900  000E3C  50F5               	movf	tablat,w,c
  9901  000E3E  6E0C               	movwf	(??_atoi+2)^0,c
  9902  000E40  6A0D               	clrf	(??_atoi+3)^0,c
  9903  000E42  500A               	movf	??_atoi^0,w,c
  9904  000E44  260C               	addwf	(??_atoi+2)^0,f,c
  9905  000E46  500B               	movf	(??_atoi+1)^0,w,c
  9906  000E48  220D               	addwfc	(??_atoi+3)^0,f,c
  9907  000E4A  500D               	movf	(??_atoi+3)^0,w,c
  9908  000E4C  E10A               	bnz	u2410
  9909  000E4E  0E0A               	movlw	10
  9910  000E50  5C0C               	subwf	(??_atoi+2)^0,w,c
  9911  000E52  A0D8               	btfss	status,0,c
  9912  000E54  EF2E  F007         	goto	u2411
  9913  000E58  EF31  F007         	goto	u2410
  9914  000E5C                     u2411:
  9915  000E5C  0E01               	movlw	1
  9916  000E5E  EF32  F007         	goto	u2420
  9917  000E62                     u2410:
  9918  000E62  0E00               	movlw	0
  9919  000E64                     u2420:
  9920  000E64  6E12               	movwf	_atoi$1566^0,c
  9921  000E66  6A13               	clrf	(_atoi$1566+1)^0,c
  9922  000E68  5012               	movf	_atoi$1566^0,w,c
  9923  000E6A  1013               	iorwf	(_atoi$1566+1)^0,w,c
  9924  000E6C  A4D8               	btfss	status,2,c
  9925  000E6E  EF3B  F007         	goto	u2431
  9926  000E72  EF3D  F007         	goto	u2430
  9927  000E76                     u2431:
  9928  000E76  EFFA  F006         	goto	l3370
  9929  000E7A                     u2430:
  9930  000E7A  500E               	movf	atoi@neg^0,w,c
  9931  000E7C  100F               	iorwf	(atoi@neg+1)^0,w,c
  9932  000E7E  A4D8               	btfss	status,2,c
  9933  000E80  EF44  F007         	goto	u2441
  9934  000E84  EF46  F007         	goto	u2440
  9935  000E88                     u2441:
  9936  000E88  EF54  F007         	goto	l1297
  9937  000E8C                     u2440:
  9938  000E8C  C015  F00A         	movff	atoi@n,??_atoi
  9939  000E90  C016  F00B         	movff	atoi@n+1,??_atoi+1
  9940  000E94  1E0A               	comf	??_atoi^0,f,c
  9941  000E96  1E0B               	comf	(??_atoi+1)^0,f,c
  9942  000E98  4A0A               	infsnz	??_atoi^0,f,c
  9943  000E9A  2A0B               	incf	(??_atoi+1)^0,f,c
  9944  000E9C  C00A  F008         	movff	??_atoi,?_atoi
  9945  000EA0  C00B  F009         	movff	??_atoi+1,?_atoi+1
  9946  000EA4  EF58  F007         	goto	l1300
  9947  000EA8                     l1297:
  9948  000EA8  C015  F008         	movff	atoi@n,?_atoi
  9949  000EAC  C016  F009         	movff	atoi@n+1,?_atoi+1
  9950  000EB0                     l1300:
  9951  000EB0  0012               	return		;funcret
  9952  000EB2                     __end_of_atoi:
  9953                           	opt callstack 0
  9954                           
  9955 ;; *************** function _isspace *****************
  9956 ;; Defined at:
  9957 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  9958 ;; Parameters:    Size  Location     Type
  9959 ;;  c               2    0[COMRAM] int 
  9960 ;; Auto vars:     Size  Location     Type
  9961 ;;		None
  9962 ;; Return value:  Size  Location     Type
  9963 ;;                  2    0[COMRAM] int 
  9964 ;; Registers used:
  9965 ;;		wreg, status,2, status,0
  9966 ;; Tracked objects:
  9967 ;;		On entry : 0/0
  9968 ;;		On exit  : 0/0
  9969 ;;		Unchanged: 0/0
  9970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9971 ;;      Params:         2       0       0       0       0       0       0       0       0
  9972 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9973 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9974 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9975 ;;Total ram usage:        7 bytes
  9976 ;; Hardware stack levels used:    1
  9977 ;; Hardware stack levels required when called:    1
  9978 ;; This function calls:
  9979 ;;		Nothing
  9980 ;; This function is called by:
  9981 ;;		_atoi
  9982 ;; This function uses a non-reentrant model
  9983 ;;
  9984                           
  9985                           	psect	text49
  9986  002B48                     __ptext49:
  9987                           	opt callstack 0
  9988  002B48                     _isspace:
  9989                           	opt callstack 23
  9990  002B48  0E01               	movlw	1
  9991  002B4A  6E07               	movwf	_isspace$1582^0,c
  9992  002B4C  0E20               	movlw	32
  9993  002B4E  1801               	xorwf	isspace@c^0,w,c
  9994  002B50  1002               	iorwf	(isspace@c+1)^0,w,c
  9995  002B52  B4D8               	btfsc	status,2,c
  9996  002B54  EFAE  F015         	goto	u2111
  9997  002B58  EFB0  F015         	goto	u2110
  9998  002B5C                     u2111:
  9999  002B5C  EFC9  F015         	goto	l3224
 10000  002B60                     u2110:
 10001  002B60  0EF7               	movlw	247
 10002  002B62  6E03               	movwf	??_isspace^0,c
 10003  002B64  0EFF               	movlw	255
 10004  002B66  6E04               	movwf	(??_isspace+1)^0,c
 10005  002B68  C001  F005         	movff	isspace@c,??_isspace+2
 10006  002B6C  C002  F006         	movff	isspace@c+1,??_isspace+3
 10007  002B70  5003               	movf	??_isspace^0,w,c
 10008  002B72  2605               	addwf	(??_isspace+2)^0,f,c
 10009  002B74  5004               	movf	(??_isspace+1)^0,w,c
 10010  002B76  2206               	addwfc	(??_isspace+3)^0,f,c
 10011  002B78  5006               	movf	(??_isspace+3)^0,w,c
 10012  002B7A  E109               	bnz	u2120
 10013  002B7C  0E05               	movlw	5
 10014  002B7E  5C05               	subwf	(??_isspace+2)^0,w,c
 10015  002B80  A0D8               	btfss	status,0,c
 10016  002B82  EFC5  F015         	goto	u2121
 10017  002B86  EFC7  F015         	goto	u2120
 10018  002B8A                     u2121:
 10019  002B8A  EFC9  F015         	goto	l3224
 10020  002B8E                     u2120:
 10021  002B8E  0E00               	movlw	0
 10022  002B90  6E07               	movwf	_isspace$1582^0,c
 10023  002B92                     l3224:
 10024  002B92  C007  F001         	movff	_isspace$1582,?_isspace
 10025  002B96  6A02               	clrf	(?_isspace+1)^0,c
 10026  002B98  0012               	return		;funcret
 10027  002B9A                     __end_of_isspace:
 10028                           	opt callstack 0
 10029                           
 10030 ;; *************** function _isdigit *****************
 10031 ;; Defined at:
 10032 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 10033 ;; Parameters:    Size  Location     Type
 10034 ;;  c               2    0[COMRAM] int 
 10035 ;; Auto vars:     Size  Location     Type
 10036 ;;		None
 10037 ;; Return value:  Size  Location     Type
 10038 ;;                  2    0[COMRAM] int 
 10039 ;; Registers used:
 10040 ;;		wreg, status,2, status,0
 10041 ;; Tracked objects:
 10042 ;;		On entry : 0/0
 10043 ;;		On exit  : 0/0
 10044 ;;		Unchanged: 0/0
 10045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10046 ;;      Params:         2       0       0       0       0       0       0       0       0
 10047 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10048 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10049 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10050 ;;Total ram usage:        6 bytes
 10051 ;; Hardware stack levels used:    1
 10052 ;; Hardware stack levels required when called:    1
 10053 ;; This function calls:
 10054 ;;		Nothing
 10055 ;; This function is called by:
 10056 ;;		_vfpfcnvrt
 10057 ;;		_atoi
 10058 ;; This function uses a non-reentrant model
 10059 ;;
 10060                           
 10061                           	psect	text50
 10062  002D74                     __ptext50:
 10063                           	opt callstack 0
 10064  002D74                     _isdigit:
 10065                           	opt callstack 24
 10066  002D74  0ED0               	movlw	208
 10067  002D76  6E03               	movwf	??_isdigit^0,c
 10068  002D78  0EFF               	movlw	255
 10069  002D7A  6E04               	movwf	(??_isdigit+1)^0,c
 10070  002D7C  C001  F005         	movff	isdigit@c,??_isdigit+2
 10071  002D80  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 10072  002D84  5003               	movf	??_isdigit^0,w,c
 10073  002D86  2605               	addwf	(??_isdigit+2)^0,f,c
 10074  002D88  5004               	movf	(??_isdigit+1)^0,w,c
 10075  002D8A  2206               	addwfc	(??_isdigit+3)^0,f,c
 10076  002D8C  5006               	movf	(??_isdigit+3)^0,w,c
 10077  002D8E  E10A               	bnz	u1960
 10078  002D90  0E0A               	movlw	10
 10079  002D92  5C05               	subwf	(??_isdigit+2)^0,w,c
 10080  002D94  A0D8               	btfss	status,0,c
 10081  002D96  EFCF  F016         	goto	u1961
 10082  002D9A  EFD2  F016         	goto	u1960
 10083  002D9E                     u1961:
 10084  002D9E  0E01               	movlw	1
 10085  002DA0  EFD3  F016         	goto	u1970
 10086  002DA4                     u1960:
 10087  002DA4  0E00               	movlw	0
 10088  002DA6                     u1970:
 10089  002DA6  6E01               	movwf	?_isdigit^0,c
 10090  002DA8  6A02               	clrf	(?_isdigit+1)^0,c
 10091  002DAA  0012               	return		;funcret
 10092  002DAC                     __end_of_isdigit:
 10093                           	opt callstack 0
 10094                           
 10095 ;; *************** function _getValue *****************
 10096 ;; Defined at:
 10097 ;;		line 804 in file "main.c"
 10098 ;; Parameters:    Size  Location     Type
 10099 ;;  numCharacter    2    3[COMRAM] short 
 10100 ;; Auto vars:     Size  Location     Type
 10101 ;;  i               2   10[COMRAM] int 
 10102 ;;  i               2    8[COMRAM] int 
 10103 ;;  Rx              1   13[COMRAM] unsigned char 
 10104 ;;  dato            1   12[COMRAM] unsigned char 
 10105 ;;  datoIncorrec    1    7[COMRAM] unsigned char 
 10106 ;; Return value:  Size  Location     Type
 10107 ;;                  1    wreg      unsigned char 
 10108 ;; Registers used:
 10109 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10110 ;; Tracked objects:
 10111 ;;		On entry : 0/0
 10112 ;;		On exit  : 0/0
 10113 ;;		Unchanged: 0/0
 10114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10115 ;;      Params:         2       0       0       0       0       0       0       0       0
 10116 ;;      Locals:         7       0       0       0       0       0       0       0       0
 10117 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10118 ;;      Totals:        11       0       0       0       0       0       0       0       0
 10119 ;;Total ram usage:       11 bytes
 10120 ;; Hardware stack levels used:    1
 10121 ;; Hardware stack levels required when called:    3
 10122 ;; This function calls:
 10123 ;;		_UART_printf
 10124 ;;		_UART_read
 10125 ;;		_UART_write
 10126 ;; This function is called by:
 10127 ;;		_setRtc
 10128 ;;		_asignarHorarios
 10129 ;;		_setTiempoRegar
 10130 ;;		_lecturaWifi
 10131 ;;		_regadoRapido
 10132 ;; This function uses a non-reentrant model
 10133 ;;
 10134                           
 10135                           	psect	text51
 10136  0008FE                     __ptext51:
 10137                           	opt callstack 0
 10138  0008FE                     _getValue:
 10139                           	opt callstack 25
 10140  0008FE                     
 10141                           ;main.c: 807:     unsigned char datoIncorrecto = 0;
 10142  0008FE  0E00               	movlw	0
 10143  000900  6E08               	movwf	getValue@datoIncorrecto^0,c
 10144                           
 10145                           ;main.c: 808:     unsigned char dato = 0;
 10146  000902  0E00               	movlw	0
 10147  000904  6E0D               	movwf	getValue@dato^0,c
 10148                           
 10149                           ;main.c: 810:     switch (numCharacters) {
 10150  000906  EF5B  F005         	goto	l3746
 10151  00090A                     l3668:
 10152                           
 10153                           ;main.c: 813:             Rx = UART_read();
 10154  00090A  EC20  F015         	call	_UART_read	;wreg free
 10155  00090E  6E0E               	movwf	getValue@Rx^0,c
 10156  000910                     
 10157                           ;main.c: 815:             if (Rx >= 48 && Rx <= 57) {
 10158  000910  0E2F               	movlw	47
 10159  000912  640E               	cpfsgt	getValue@Rx^0,c
 10160  000914  EF8E  F004         	goto	u2821
 10161  000918  EF90  F004         	goto	u2820
 10162  00091C                     u2821:
 10163  00091C  EF9E  F004         	goto	l3678
 10164  000920                     u2820:
 10165  000920  0E3A               	movlw	58
 10166  000922  600E               	cpfslt	getValue@Rx^0,c
 10167  000924  EF96  F004         	goto	u2831
 10168  000928  EF98  F004         	goto	u2830
 10169  00092C                     u2831:
 10170  00092C  EF9E  F004         	goto	l3678
 10171  000930                     u2830:
 10172  000930                     
 10173                           ;main.c: 816:                 Rx -= 48;
 10174  000930  0E30               	movlw	48
 10175  000932  5E0E               	subwf	getValue@Rx^0,f,c
 10176  000934                     
 10177                           ;main.c: 817:                 dato = Rx;
 10178  000934  C00E  F00D         	movff	getValue@Rx,getValue@dato
 10179                           
 10180                           ;main.c: 818:             } else {
 10181  000938  EF75  F005         	goto	l3748
 10182  00093C                     l3678:
 10183                           
 10184                           ;main.c: 819:                 UART_write('@');
 10185  00093C  0E40               	movlw	64
 10186  00093E  ECAE  F017         	call	_UART_write
 10187  000942                     
 10188                           ;main.c: 820:                 datoIncorrecto = 1;
 10189  000942  0E01               	movlw	1
 10190  000944  6E08               	movwf	getValue@datoIncorrecto^0,c
 10191  000946  EF75  F005         	goto	l3748
 10192  00094A                     l3682:
 10193                           
 10194                           ;main.c: 826:             for (int i = 0; i < 2; i++) {
 10195  00094A  0E00               	movlw	0
 10196  00094C  6E0A               	movwf	(getValue@i+1)^0,c
 10197  00094E  0E00               	movlw	0
 10198  000950  6E09               	movwf	getValue@i^0,c
 10199  000952                     l3688:
 10200                           
 10201                           ;main.c: 828:                 Rx = UART_read();
 10202  000952  EC20  F015         	call	_UART_read	;wreg free
 10203  000956  6E0E               	movwf	getValue@Rx^0,c
 10204  000958                     
 10205                           ;main.c: 830:                 if (Rx >= 48 && Rx <= 57) {
 10206  000958  0E2F               	movlw	47
 10207  00095A  640E               	cpfsgt	getValue@Rx^0,c
 10208  00095C  EFB2  F004         	goto	u2841
 10209  000960  EFB4  F004         	goto	u2840
 10210  000964                     u2841:
 10211  000964  EFE2  F004         	goto	l3704
 10212  000968                     u2840:
 10213  000968  0E3A               	movlw	58
 10214  00096A  600E               	cpfslt	getValue@Rx^0,c
 10215  00096C  EFBA  F004         	goto	u2851
 10216  000970  EFBC  F004         	goto	u2850
 10217  000974                     u2851:
 10218  000974  EFE2  F004         	goto	l3704
 10219  000978                     u2850:
 10220  000978                     
 10221                           ;main.c: 832:                     Rx -= 48;
 10222  000978  0E30               	movlw	48
 10223  00097A  5E0E               	subwf	getValue@Rx^0,f,c
 10224                           
 10225                           ;main.c: 834:                     switch (i) {
 10226  00097C  EFCC  F004         	goto	l3702
 10227  000980                     l422:
 10228                           
 10229                           ;main.c: 836:                             dato = Rx;
 10230  000980  C00E  F00D         	movff	getValue@Rx,getValue@dato
 10231  000984                     
 10232                           ;main.c: 837:                             dato *= 10;
 10233  000984  0E0A               	movlw	10
 10234  000986  020D               	mulwf	getValue@dato^0,c
 10235  000988  50F3               	movf	prodl,w,c
 10236  00098A  6E0D               	movwf	getValue@dato^0,c
 10237                           
 10238                           ;main.c: 838:                             break;
 10239  00098C  EFE9  F004         	goto	l3708
 10240  000990                     l3698:
 10241                           
 10242                           ;main.c: 841:                             dato += Rx;
 10243  000990  500E               	movf	getValue@Rx^0,w,c
 10244  000992  260D               	addwf	getValue@dato^0,f,c
 10245                           
 10246                           ;main.c: 842:                             break;
 10247  000994  EFE9  F004         	goto	l3708
 10248  000998                     l3702:
 10249  000998  C009  F006         	movff	getValue@i,??_getValue
 10250  00099C  C00A  F007         	movff	getValue@i+1,??_getValue+1
 10251                           
 10252                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10253                           ; Switch size 1, requested type "simple"
 10254                           ; Number of cases is 1, Range of values is 0 to 0
 10255                           ; switch strategies available:
 10256                           ; Name         Instructions Cycles
 10257                           ; simple_byte            4     3 (average)
 10258                           ;	Chosen strategy is simple_byte
 10259  0009A0  5007               	movf	(??_getValue+1)^0,w,c
 10260  0009A2  0A00               	xorlw	0	; case 0
 10261  0009A4  B4D8               	btfsc	status,2,c
 10262  0009A6  EFD7  F004         	goto	l4794
 10263  0009AA  EFE9  F004         	goto	l3708
 10264  0009AE                     l4794:
 10265                           
 10266                           ; Switch size 1, requested type "simple"
 10267                           ; Number of cases is 2, Range of values is 0 to 1
 10268                           ; switch strategies available:
 10269                           ; Name         Instructions Cycles
 10270                           ; simple_byte            7     4 (average)
 10271                           ;	Chosen strategy is simple_byte
 10272  0009AE  5006               	movf	??_getValue^0,w,c
 10273  0009B0  0A00               	xorlw	0	; case 0
 10274  0009B2  B4D8               	btfsc	status,2,c
 10275  0009B4  EFC0  F004         	goto	l422
 10276  0009B8  0A01               	xorlw	1	; case 1
 10277  0009BA  B4D8               	btfsc	status,2,c
 10278  0009BC  EFC8  F004         	goto	l3698
 10279  0009C0  EFE9  F004         	goto	l3708
 10280  0009C4                     l3704:
 10281                           
 10282                           ;main.c: 850:                     datoIncorrecto = 1;
 10283  0009C4  0E01               	movlw	1
 10284  0009C6  6E08               	movwf	getValue@datoIncorrecto^0,c
 10285  0009C8                     
 10286                           ;main.c: 851:                     UART_write('@');
 10287  0009C8  0E40               	movlw	64
 10288  0009CA  ECAE  F017         	call	_UART_write
 10289                           
 10290                           ;main.c: 852:                     break;
 10291  0009CE  EF75  F005         	goto	l3748
 10292  0009D2                     l3708:
 10293                           
 10294                           ;main.c: 854:             }
 10295  0009D2  4A09               	infsnz	getValue@i^0,f,c
 10296  0009D4  2A0A               	incf	(getValue@i+1)^0,f,c
 10297  0009D6  BE0A               	btfsc	(getValue@i+1)^0,7,c
 10298  0009D8  EFF7  F004         	goto	u2861
 10299  0009DC  500A               	movf	(getValue@i+1)^0,w,c
 10300  0009DE  E109               	bnz	u2860
 10301  0009E0  0E02               	movlw	2
 10302  0009E2  5C09               	subwf	getValue@i^0,w,c
 10303  0009E4  A0D8               	btfss	status,0,c
 10304  0009E6  EFF7  F004         	goto	u2861
 10305  0009EA  EFF9  F004         	goto	u2860
 10306  0009EE                     u2861:
 10307  0009EE  EFA9  F004         	goto	l3688
 10308  0009F2                     u2860:
 10309  0009F2  EF75  F005         	goto	l3748
 10310  0009F6                     l3712:
 10311                           
 10312                           ;main.c: 858:             for (int i = 0; i < 3; i++) {
 10313  0009F6  0E00               	movlw	0
 10314  0009F8  6E0C               	movwf	(getValue@i_989+1)^0,c
 10315  0009FA  0E00               	movlw	0
 10316  0009FC  6E0B               	movwf	getValue@i_989^0,c
 10317  0009FE                     l3718:
 10318                           
 10319                           ;main.c: 860:                 Rx = UART_read();
 10320  0009FE  EC20  F015         	call	_UART_read	;wreg free
 10321  000A02  6E0E               	movwf	getValue@Rx^0,c
 10322  000A04                     
 10323                           ;main.c: 862:                 if (Rx >= 48 && Rx <= 57) {
 10324  000A04  0E2F               	movlw	47
 10325  000A06  640E               	cpfsgt	getValue@Rx^0,c
 10326  000A08  EF08  F005         	goto	u2871
 10327  000A0C  EF0A  F005         	goto	u2870
 10328  000A10                     u2871:
 10329  000A10  EF42  F005         	goto	l3736
 10330  000A14                     u2870:
 10331  000A14  0E3A               	movlw	58
 10332  000A16  600E               	cpfslt	getValue@Rx^0,c
 10333  000A18  EF10  F005         	goto	u2881
 10334  000A1C  EF12  F005         	goto	u2880
 10335  000A20                     u2881:
 10336  000A20  EF42  F005         	goto	l3736
 10337  000A24                     u2880:
 10338  000A24                     
 10339                           ;main.c: 864:                     Rx -= 48;
 10340  000A24  0E30               	movlw	48
 10341  000A26  5E0E               	subwf	getValue@Rx^0,f,c
 10342                           
 10343                           ;main.c: 866:                     switch (i) {
 10344  000A28  EF28  F005         	goto	l3734
 10345  000A2C                     l432:
 10346                           
 10347                           ;main.c: 868:                             dato = Rx;
 10348  000A2C  C00E  F00D         	movff	getValue@Rx,getValue@dato
 10349  000A30                     
 10350                           ;main.c: 869:                             dato *= 100;
 10351  000A30  0E64               	movlw	100
 10352  000A32  020D               	mulwf	getValue@dato^0,c
 10353  000A34  50F3               	movf	prodl,w,c
 10354  000A36  6E0D               	movwf	getValue@dato^0,c
 10355                           
 10356                           ;main.c: 870:                             break;
 10357  000A38  EF49  F005         	goto	l3740
 10358  000A3C                     l3728:
 10359                           
 10360                           ;main.c: 873:                             dato += (Rx * 10);
 10361  000A3C  500E               	movf	getValue@Rx^0,w,c
 10362  000A3E  0D0A               	mullw	10
 10363  000A40  50F3               	movf	243,w,c
 10364  000A42  260D               	addwf	getValue@dato^0,f,c
 10365                           
 10366                           ;main.c: 874:                             break;
 10367  000A44  EF49  F005         	goto	l3740
 10368  000A48                     l3730:
 10369                           
 10370                           ;main.c: 877:                             dato += Rx;
 10371  000A48  500E               	movf	getValue@Rx^0,w,c
 10372  000A4A  260D               	addwf	getValue@dato^0,f,c
 10373                           
 10374                           ;main.c: 878:                             break;
 10375  000A4C  EF49  F005         	goto	l3740
 10376  000A50                     l3734:
 10377  000A50  C00B  F006         	movff	getValue@i_989,??_getValue
 10378  000A54  C00C  F007         	movff	getValue@i_989+1,??_getValue+1
 10379                           
 10380                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10381                           ; Switch size 1, requested type "simple"
 10382                           ; Number of cases is 1, Range of values is 0 to 0
 10383                           ; switch strategies available:
 10384                           ; Name         Instructions Cycles
 10385                           ; simple_byte            4     3 (average)
 10386                           ;	Chosen strategy is simple_byte
 10387  000A58  5007               	movf	(??_getValue+1)^0,w,c
 10388  000A5A  0A00               	xorlw	0	; case 0
 10389  000A5C  B4D8               	btfsc	status,2,c
 10390  000A5E  EF33  F005         	goto	l4796
 10391  000A62  EF49  F005         	goto	l3740
 10392  000A66                     l4796:
 10393                           
 10394                           ; Switch size 1, requested type "simple"
 10395                           ; Number of cases is 3, Range of values is 0 to 2
 10396                           ; switch strategies available:
 10397                           ; Name         Instructions Cycles
 10398                           ; simple_byte           10     6 (average)
 10399                           ;	Chosen strategy is simple_byte
 10400  000A66  5006               	movf	??_getValue^0,w,c
 10401  000A68  0A00               	xorlw	0	; case 0
 10402  000A6A  B4D8               	btfsc	status,2,c
 10403  000A6C  EF16  F005         	goto	l432
 10404  000A70  0A01               	xorlw	1	; case 1
 10405  000A72  B4D8               	btfsc	status,2,c
 10406  000A74  EF1E  F005         	goto	l3728
 10407  000A78  0A03               	xorlw	3	; case 2
 10408  000A7A  B4D8               	btfsc	status,2,c
 10409  000A7C  EF24  F005         	goto	l3730
 10410  000A80  EF49  F005         	goto	l3740
 10411  000A84                     l3736:
 10412                           
 10413                           ;main.c: 886:                     datoIncorrecto = 1;
 10414  000A84  0E01               	movlw	1
 10415  000A86  6E08               	movwf	getValue@datoIncorrecto^0,c
 10416  000A88                     
 10417                           ;main.c: 887:                     UART_write('@');
 10418  000A88  0E40               	movlw	64
 10419  000A8A  ECAE  F017         	call	_UART_write
 10420                           
 10421                           ;main.c: 888:                     break;
 10422  000A8E  EF75  F005         	goto	l3748
 10423  000A92                     l3740:
 10424                           
 10425                           ;main.c: 890:             }
 10426  000A92  4A0B               	infsnz	getValue@i_989^0,f,c
 10427  000A94  2A0C               	incf	(getValue@i_989+1)^0,f,c
 10428  000A96  BE0C               	btfsc	(getValue@i_989+1)^0,7,c
 10429  000A98  EF57  F005         	goto	u2891
 10430  000A9C  500C               	movf	(getValue@i_989+1)^0,w,c
 10431  000A9E  E109               	bnz	u2890
 10432  000AA0  0E03               	movlw	3
 10433  000AA2  5C0B               	subwf	getValue@i_989^0,w,c
 10434  000AA4  A0D8               	btfss	status,0,c
 10435  000AA6  EF57  F005         	goto	u2891
 10436  000AAA  EF59  F005         	goto	u2890
 10437  000AAE                     u2891:
 10438  000AAE  EFFF  F004         	goto	l3718
 10439  000AB2                     u2890:
 10440  000AB2  EF75  F005         	goto	l3748
 10441  000AB6                     l3746:
 10442  000AB6  C004  F006         	movff	getValue@numCharacters,??_getValue
 10443  000ABA  C005  F007         	movff	getValue@numCharacters+1,??_getValue+1
 10444                           
 10445                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10446                           ; Switch size 1, requested type "simple"
 10447                           ; Number of cases is 1, Range of values is 0 to 0
 10448                           ; switch strategies available:
 10449                           ; Name         Instructions Cycles
 10450                           ; simple_byte            4     3 (average)
 10451                           ;	Chosen strategy is simple_byte
 10452  000ABE  5007               	movf	(??_getValue+1)^0,w,c
 10453  000AC0  0A00               	xorlw	0	; case 0
 10454  000AC2  B4D8               	btfsc	status,2,c
 10455  000AC4  EF66  F005         	goto	l4798
 10456  000AC8  EF75  F005         	goto	l3748
 10457  000ACC                     l4798:
 10458                           
 10459                           ; Switch size 1, requested type "simple"
 10460                           ; Number of cases is 3, Range of values is 1 to 3
 10461                           ; switch strategies available:
 10462                           ; Name         Instructions Cycles
 10463                           ; simple_byte           10     6 (average)
 10464                           ;	Chosen strategy is simple_byte
 10465  000ACC  5006               	movf	??_getValue^0,w,c
 10466  000ACE  0A01               	xorlw	1	; case 1
 10467  000AD0  B4D8               	btfsc	status,2,c
 10468  000AD2  EF85  F004         	goto	l3668
 10469  000AD6  0A03               	xorlw	3	; case 2
 10470  000AD8  B4D8               	btfsc	status,2,c
 10471  000ADA  EFA5  F004         	goto	l3682
 10472  000ADE  0A01               	xorlw	1	; case 3
 10473  000AE0  B4D8               	btfsc	status,2,c
 10474  000AE2  EFFB  F004         	goto	l3712
 10475  000AE6  EF75  F005         	goto	l3748
 10476  000AEA                     l3748:
 10477                           
 10478                           ;main.c: 899:     if (esperandoDatos || datoIncorrecto) {
 10479  000AEA  0101               	movlb	1	; () banked
 10480  000AEC  517D               	movf	_esperandoDatos& (0+255),w,b
 10481  000AEE  A4D8               	btfss	status,2,c
 10482  000AF0  EF7C  F005         	goto	u2901
 10483  000AF4  EF7E  F005         	goto	u2900
 10484  000AF8                     u2901:
 10485  000AF8  EF86  F005         	goto	l3752
 10486  000AFC                     u2900:
 10487  000AFC                     
 10488                           ; BSR set to: 1
 10489  000AFC  5008               	movf	getValue@datoIncorrecto^0,w,c
 10490  000AFE  B4D8               	btfsc	status,2,c
 10491  000B00  EF84  F005         	goto	u2911
 10492  000B04  EF86  F005         	goto	u2910
 10493  000B08                     u2911:
 10494  000B08  EF8F  F005         	goto	l3760
 10495  000B0C                     u2910:
 10496  000B0C                     l3752:
 10497                           
 10498                           ; BSR set to: 1
 10499                           ;main.c: 901:         UART_printf("\nFALLO EL SETEO\r\n");
 10500  000B0C  0EA0               	movlw	low STR_45
 10501  000B0E  6E02               	movwf	UART_printf@cadena^0,c
 10502  000B10  0E7F               	movlw	high STR_45
 10503  000B12  6E03               	movwf	(UART_printf@cadena+1)^0,c
 10504  000B14  EC95  F014         	call	_UART_printf	;wreg free
 10505  000B18                     
 10506                           ;main.c: 902:         return '@';
 10507  000B18  0E40               	movlw	64
 10508  000B1A  EF90  F005         	goto	l442
 10509  000B1E                     l3760:
 10510                           
 10511                           ; BSR set to: 1
 10512                           ;main.c: 904:         return dato;
 10513  000B1E  500D               	movf	getValue@dato^0,w,c
 10514  000B20                     l442:
 10515  000B20  0012               	return		;funcret
 10516  000B22                     __end_of_getValue:
 10517                           	opt callstack 0
 10518                           
 10519 ;; *************** function _UART_read *****************
 10520 ;; Defined at:
 10521 ;;		line 34 in file "./UART.h"
 10522 ;; Parameters:    Size  Location     Type
 10523 ;;		None
 10524 ;; Auto vars:     Size  Location     Type
 10525 ;;		None
 10526 ;; Return value:  Size  Location     Type
 10527 ;;                  1    wreg      unsigned char 
 10528 ;; Registers used:
 10529 ;;		wreg, status,2
 10530 ;; Tracked objects:
 10531 ;;		On entry : 0/0
 10532 ;;		On exit  : 0/0
 10533 ;;		Unchanged: 0/0
 10534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10535 ;;      Params:         0       0       0       0       0       0       0       0       0
 10536 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10537 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10538 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10539 ;;Total ram usage:        0 bytes
 10540 ;; Hardware stack levels used:    1
 10541 ;; Hardware stack levels required when called:    1
 10542 ;; This function calls:
 10543 ;;		Nothing
 10544 ;; This function is called by:
 10545 ;;		_lecturaWifi
 10546 ;;		_getValue
 10547 ;; This function uses a non-reentrant model
 10548 ;;
 10549                           
 10550                           	psect	text52
 10551  002A40                     __ptext52:
 10552                           	opt callstack 0
 10553  002A40                     _UART_read:
 10554                           	opt callstack 26
 10555  002A40                     
 10556                           ;./UART.h: 36:     TMR0 = VALOR_TIMER0UART;
 10557  002A40  0E67               	movlw	103
 10558  002A42  6ED7               	movwf	215,c	;volatile
 10559  002A44  0E69               	movlw	105
 10560  002A46  6ED6               	movwf	214,c	;volatile
 10561                           
 10562                           ;./UART.h: 37:     esperaDatoConcluida = 0;
 10563  002A48  0E00               	movlw	0
 10564  002A4A  0100               	movlb	0	; () banked
 10565  002A4C  6FFD               	movwf	_esperaDatoConcluida& (0+255),b
 10566                           
 10567                           ;./UART.h: 38:     esperandoDatos = 1;
 10568  002A4E  0E01               	movlw	1
 10569  002A50  0101               	movlb	1	; () banked
 10570  002A52  6F7D               	movwf	_esperandoDatos& (0+255),b
 10571                           
 10572                           ;./UART.h: 39:     byteUart = 0;
 10573  002A54  0E00               	movlw	0
 10574  002A56  6F7E               	movwf	_byteUart& (0+255),b
 10575                           
 10576                           ;./UART.h: 40:     tiempoInactividadTrans = 0;
 10577  002A58  0E00               	movlw	0
 10578  002A5A  0100               	movlb	0	; () banked
 10579  002A5C  6FFE               	movwf	_tiempoInactividadTrans& (0+255),b
 10580  002A5E                     l127:
 10581                           
 10582                           ; BSR set to: 0
 10583  002A5E  BA9E               	btfsc	158,5,c	;volatile
 10584  002A60  EF34  F015         	goto	u2591
 10585  002A64  EF36  F015         	goto	u2590
 10586  002A68                     u2591:
 10587  002A68  EF3E  F015         	goto	l3492
 10588  002A6C                     u2590:
 10589  002A6C                     
 10590                           ; BSR set to: 0
 10591  002A6C  51FD               	movf	_esperaDatoConcluida& (0+255),w,b
 10592  002A6E  B4D8               	btfsc	status,2,c
 10593  002A70  EF3C  F015         	goto	u2601
 10594  002A74  EF3E  F015         	goto	u2600
 10595  002A78                     u2601:
 10596  002A78  EF2F  F015         	goto	l127
 10597  002A7C                     u2600:
 10598  002A7C                     l3492:
 10599                           
 10600                           ; BSR set to: 0
 10601                           ;./UART.h: 44:     if (!esperaDatoConcluida) {
 10602  002A7C  51FD               	movf	_esperaDatoConcluida& (0+255),w,b
 10603  002A7E  A4D8               	btfss	status,2,c
 10604  002A80  EF44  F015         	goto	u2611
 10605  002A84  EF46  F015         	goto	u2610
 10606  002A88                     u2611:
 10607  002A88  EF4B  F015         	goto	l132
 10608  002A8C                     u2610:
 10609  002A8C                     
 10610                           ; BSR set to: 0
 10611                           ;./UART.h: 45:         byteUart = RCREG;
 10612  002A8C  CFAE F17E          	movff	4014,_byteUart	;volatile
 10613  002A90                     
 10614                           ; BSR set to: 0
 10615                           ;./UART.h: 46:         esperandoDatos = 0;
 10616  002A90  0E00               	movlw	0
 10617  002A92  0101               	movlb	1	; () banked
 10618  002A94  6F7D               	movwf	_esperandoDatos& (0+255),b
 10619  002A96                     l132:
 10620                           
 10621                           ;./UART.h: 49:     return byteUart;
 10622  002A96  0101               	movlb	1	; () banked
 10623  002A98  517E               	movf	_byteUart& (0+255),w,b
 10624  002A9A                     
 10625                           ; BSR set to: 1
 10626  002A9A  0012               	return		;funcret
 10627  002A9C                     __end_of_UART_read:
 10628                           	opt callstack 0
 10629                           
 10630 ;; *************** function _UART_printf *****************
 10631 ;; Defined at:
 10632 ;;		line 57 in file "./UART.h"
 10633 ;; Parameters:    Size  Location     Type
 10634 ;;  cadena          2    1[COMRAM] PTR unsigned char 
 10635 ;;		 -> STR_49(58), STR_48(57), STR_47(57), STR_46(20), 
 10636 ;;		 -> STR_45(18), STR_44(11), STR_43(9), STR_42(17), 
 10637 ;;		 -> mostrarDatosSensoresWIFI@bufferSensor(50), mostrarDatosSensoresWIFI@buffer(50), mostrarDatosSensores@buffer(50),
      + STR_35(25), 
 10638 ;;		 -> dameDatosSistema@buffer(50), STR_33(55), STR_32(62), STR_31(42), 
 10639 ;;		 -> STR_30(3), STR_29(14), STR_28(26), STR_27(23), 
 10640 ;;		 -> STR_26(34), STR_25(32), STR_24(49), STR_23(37), 
 10641 ;;		 -> STR_22(27), STR_21(37), STR_20(32), lecturaWifi@buffer(50), 
 10642 ;;		 -> STR_18(38), STR_17(37), STR_16(72), STR_15(51), 
 10643 ;;		 -> STR_14(23), STR_13(26), asignarHorarios@buffer(50), STR_11(37), 
 10644 ;;		 -> STR_10(59), STR_9(59), STR_8(51), STR_7(25), 
 10645 ;;		 -> STR_6(37), STR_5(31), STR_4(43), STR_3(16), 
 10646 ;;		 -> STR_2(36), STR_1(65), 
 10647 ;; Auto vars:     Size  Location     Type
 10648 ;;		None
 10649 ;; Return value:  Size  Location     Type
 10650 ;;                  1    wreg      void 
 10651 ;; Registers used:
 10652 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10653 ;; Tracked objects:
 10654 ;;		On entry : 0/0
 10655 ;;		On exit  : 0/0
 10656 ;;		Unchanged: 0/0
 10657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10658 ;;      Params:         2       0       0       0       0       0       0       0       0
 10659 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10660 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10661 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10662 ;;Total ram usage:        2 bytes
 10663 ;; Hardware stack levels used:    1
 10664 ;; Hardware stack levels required when called:    2
 10665 ;; This function calls:
 10666 ;;		_UART_write
 10667 ;; This function is called by:
 10668 ;;		_fijaDiaRtc
 10669 ;;		_fijaHoraRtc
 10670 ;;		_asignarHorarios
 10671 ;;		_setTiempoRegar
 10672 ;;		_lecturaWifi
 10673 ;;		_mostrarMenu
 10674 ;;		_sistemaPrincipal
 10675 ;;		_dameDatosSistema
 10676 ;;		_dameTemperaturaHumedad
 10677 ;;		_mostrarDatosSensores
 10678 ;;		_mostrarDatosSensoresWIFI
 10679 ;;		_getValue
 10680 ;;		_regadoRapido
 10681 ;;		_configBluetoothHC_06
 10682 ;; This function uses a non-reentrant model
 10683 ;;
 10684                           
 10685                           	psect	text53
 10686  00292A                     __ptext53:
 10687                           	opt callstack 0
 10688  00292A                     _UART_printf:
 10689                           	opt callstack 26
 10690  00292A                     
 10691                           ;./UART.h: 58:     while (*cadena) {
 10692  00292A  EFAB  F014         	goto	l3506
 10693  00292E                     l3502:
 10694                           
 10695                           ;./UART.h: 59:         UART_write(*cadena++);
 10696  00292E  C002  FFF6         	movff	UART_printf@cadena,tblptrl
 10697  002932  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
 10698  002936  6AF8               	clrf	tblptru,c
 10699  002938  0E07               	movlw	(high __ramtop+-1)
 10700  00293A  64F7               	cpfsgt	tblptrh,c
 10701  00293C  D003               	bra	u2627
 10702  00293E  0008               	tblrd		*
 10703  002940  50F5               	movf	tablat,w,c
 10704  002942  D005               	bra	u2620
 10705  002944                     u2627:
 10706  002944  CFF6 FFE1          	movff	tblptrl,fsr1l
 10707  002948  CFF7 FFE2          	movff	tblptrh,fsr1h
 10708  00294C  50E7               	movf	indf1,w,c
 10709  00294E                     u2620:
 10710  00294E  ECAE  F017         	call	_UART_write
 10711  002952  4A02               	infsnz	UART_printf@cadena^0,f,c
 10712  002954  2A03               	incf	(UART_printf@cadena+1)^0,f,c
 10713  002956                     l3506:
 10714                           
 10715                           ;./UART.h: 58:     while (*cadena) {
 10716  002956  C002  FFF6         	movff	UART_printf@cadena,tblptrl
 10717  00295A  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
 10718  00295E  6AF8               	clrf	tblptru,c
 10719  002960  0E07               	movlw	(high __ramtop+-1)
 10720  002962  64F7               	cpfsgt	tblptrh,c
 10721  002964  D003               	bra	u2637
 10722  002966  0008               	tblrd		*
 10723  002968  50F5               	movf	tablat,w,c
 10724  00296A  D005               	bra	u2630
 10725  00296C                     u2637:
 10726  00296C  CFF6 FFE1          	movff	tblptrl,fsr1l
 10727  002970  CFF7 FFE2          	movff	tblptrh,fsr1h
 10728  002974  50E7               	movf	indf1,w,c
 10729  002976                     u2630:
 10730  002976  0900               	iorlw	0
 10731  002978  A4D8               	btfss	status,2,c
 10732  00297A  EFC1  F014         	goto	u2641
 10733  00297E  EFC3  F014         	goto	u2640
 10734  002982                     u2641:
 10735  002982  EF97  F014         	goto	l3502
 10736  002986                     u2640:
 10737  002986  0012               	return		;funcret
 10738  002988                     __end_of_UART_printf:
 10739                           	opt callstack 0
 10740                           
 10741 ;; *************** function _UART_write *****************
 10742 ;; Defined at:
 10743 ;;		line 52 in file "./UART.h"
 10744 ;; Parameters:    Size  Location     Type
 10745 ;;  dato            1    wreg     unsigned char 
 10746 ;; Auto vars:     Size  Location     Type
 10747 ;;  dato            1    0[COMRAM] unsigned char 
 10748 ;; Return value:  Size  Location     Type
 10749 ;;                  1    wreg      void 
 10750 ;; Registers used:
 10751 ;;		wreg
 10752 ;; Tracked objects:
 10753 ;;		On entry : 0/0
 10754 ;;		On exit  : 0/0
 10755 ;;		Unchanged: 0/0
 10756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10757 ;;      Params:         0       0       0       0       0       0       0       0       0
 10758 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10759 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10760 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10761 ;;Total ram usage:        1 bytes
 10762 ;; Hardware stack levels used:    1
 10763 ;; Hardware stack levels required when called:    1
 10764 ;; This function calls:
 10765 ;;		Nothing
 10766 ;; This function is called by:
 10767 ;;		_UART_printf
 10768 ;;		_lecturaWifi
 10769 ;;		_dameDatosSistema
 10770 ;;		_mostrarDatosSensores
 10771 ;;		_mostrarDatosSensoresWIFI
 10772 ;;		_getValue
 10773 ;; This function uses a non-reentrant model
 10774 ;;
 10775                           
 10776                           	psect	text54
 10777  002F5C                     __ptext54:
 10778                           	opt callstack 0
 10779  002F5C                     _UART_write:
 10780                           	opt callstack 26
 10781                           
 10782                           ;incstack = 0
 10783                           ;UART_write@dato stored from wreg
 10784  002F5C  6E01               	movwf	UART_write@dato^0,c
 10785  002F5E                     
 10786                           ;./UART.h: 53:     TXREG = dato;
 10787  002F5E  C001  FFAD         	movff	UART_write@dato,4013	;volatile
 10788  002F62                     l136:
 10789  002F62  A2AC               	btfss	172,1,c	;volatile
 10790  002F64  EFB6  F017         	goto	u2471
 10791  002F68  EFB8  F017         	goto	u2470
 10792  002F6C                     u2471:
 10793  002F6C  EFB1  F017         	goto	l136
 10794  002F70                     u2470:
 10795  002F70  0012               	return		;funcret
 10796  002F72                     __end_of_UART_write:
 10797                           	opt callstack 0
 10798                           
 10799 ;; *************** function _escribeHorariosMemoria *****************
 10800 ;; Defined at:
 10801 ;;		line 247 in file "main.c"
 10802 ;; Parameters:    Size  Location     Type
 10803 ;;		None
 10804 ;; Auto vars:     Size  Location     Type
 10805 ;;  j               2   12[COMRAM] int 
 10806 ;;  i               2   16[COMRAM] int 
 10807 ;;  contMemoria     2   14[COMRAM] int 
 10808 ;; Return value:  Size  Location     Type
 10809 ;;                  1    wreg      void 
 10810 ;; Registers used:
 10811 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10812 ;; Tracked objects:
 10813 ;;		On entry : 0/0
 10814 ;;		On exit  : 0/0
 10815 ;;		Unchanged: 0/0
 10816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10817 ;;      Params:         0       0       0       0       0       0       0       0       0
 10818 ;;      Locals:         6       0       0       0       0       0       0       0       0
 10819 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10820 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10821 ;;Total ram usage:        8 bytes
 10822 ;; Hardware stack levels used:    1
 10823 ;; Hardware stack levels required when called:    4
 10824 ;; This function calls:
 10825 ;;		___wmul
 10826 ;;		_escribe_eeprom
 10827 ;; This function is called by:
 10828 ;;		_asignarHorarios
 10829 ;;		_setTiempoRegar
 10830 ;; This function uses a non-reentrant model
 10831 ;;
 10832                           
 10833                           	psect	text55
 10834  001744                     __ptext55:
 10835                           	opt callstack 0
 10836  001744                     _escribeHorariosMemoria:
 10837                           	opt callstack 24
 10838  001744                     
 10839                           ;main.c: 249:     int contMemoria = 0;
 10840  001744  0E00               	movlw	0
 10841  001746  6E10               	movwf	(escribeHorariosMemoria@contMemoria+1)^0,c
 10842  001748  0E00               	movlw	0
 10843  00174A  6E0F               	movwf	escribeHorariosMemoria@contMemoria^0,c
 10844                           
 10845                           ;main.c: 250:     for (int i = 0; i < 24; i++) {
 10846  00174C  0E00               	movlw	0
 10847  00174E  6E12               	movwf	(escribeHorariosMemoria@i+1)^0,c
 10848  001750  0E00               	movlw	0
 10849  001752  6E11               	movwf	escribeHorariosMemoria@i^0,c
 10850  001754                     l3948:
 10851                           
 10852                           ;main.c: 251:         escribe_eeprom(contMemoria++, horarios[i].hora);
 10853  001754  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
 10854  001758  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
 10855  00175C  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
 10856  001760  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
 10857  001764  0E00               	movlw	0
 10858  001766  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10859  001768  0E0C               	movlw	12
 10860  00176A  6E03               	movwf	___wmul@multiplicand^0,c
 10861  00176C  EC5F  F017         	call	___wmul	;wreg free
 10862  001770  0EAA               	movlw	low _horarios
 10863  001772  2401               	addwf	?___wmul^0,w,c
 10864  001774  6ED9               	movwf	fsr2l,c
 10865  001776  0E01               	movlw	high _horarios
 10866  001778  2002               	addwfc	(?___wmul+1)^0,w,c
 10867  00177A  6EDA               	movwf	fsr2h,c
 10868  00177C  50DF               	movf	indf2,w,c
 10869  00177E  6E09               	movwf	escribe_eeprom@dato^0,c
 10870  001780  EC09  F017         	call	_escribe_eeprom	;wreg free
 10871  001784  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 10872  001786  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 10873  001788                     
 10874                           ;main.c: 253:         for (int j = 0; j < 7; j++) {
 10875  001788  0E00               	movlw	0
 10876  00178A  6E0E               	movwf	(escribeHorariosMemoria@j+1)^0,c
 10877  00178C  0E00               	movlw	0
 10878  00178E  6E0D               	movwf	escribeHorariosMemoria@j^0,c
 10879  001790                     l3958:
 10880                           
 10881                           ;main.c: 254:             escribe_eeprom(contMemoria++, horarios[i].dias[j]);
 10882  001790  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
 10883  001794  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
 10884  001798  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
 10885  00179C  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
 10886  0017A0  0E00               	movlw	0
 10887  0017A2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10888  0017A4  0E0C               	movlw	12
 10889  0017A6  6E03               	movwf	___wmul@multiplicand^0,c
 10890  0017A8  EC5F  F017         	call	___wmul	;wreg free
 10891  0017AC  0EAA               	movlw	low _horarios
 10892  0017AE  6E0B               	movwf	??_escribeHorariosMemoria^0,c
 10893  0017B0  0E01               	movlw	high _horarios
 10894  0017B2  6E0C               	movwf	(??_escribeHorariosMemoria+1)^0,c
 10895  0017B4  0E01               	movlw	1
 10896  0017B6  260B               	addwf	??_escribeHorariosMemoria^0,f,c
 10897  0017B8  0E00               	movlw	0
 10898  0017BA  220C               	addwfc	(??_escribeHorariosMemoria+1)^0,f,c
 10899  0017BC  5001               	movf	?___wmul^0,w,c
 10900  0017BE  260B               	addwf	??_escribeHorariosMemoria^0,f,c
 10901  0017C0  5002               	movf	(?___wmul+1)^0,w,c
 10902  0017C2  220C               	addwfc	(??_escribeHorariosMemoria+1)^0,f,c
 10903  0017C4  500D               	movf	escribeHorariosMemoria@j^0,w,c
 10904  0017C6  240B               	addwf	??_escribeHorariosMemoria^0,w,c
 10905  0017C8  6ED9               	movwf	fsr2l,c
 10906  0017CA  500E               	movf	(escribeHorariosMemoria@j+1)^0,w,c
 10907  0017CC  200C               	addwfc	(??_escribeHorariosMemoria+1)^0,w,c
 10908  0017CE  6EDA               	movwf	fsr2h,c
 10909  0017D0  50DF               	movf	indf2,w,c
 10910  0017D2  6E09               	movwf	escribe_eeprom@dato^0,c
 10911  0017D4  EC09  F017         	call	_escribe_eeprom	;wreg free
 10912  0017D8  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 10913  0017DA  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 10914  0017DC                     
 10915                           ;main.c: 255:         }
 10916  0017DC  4A0D               	infsnz	escribeHorariosMemoria@j^0,f,c
 10917  0017DE  2A0E               	incf	(escribeHorariosMemoria@j+1)^0,f,c
 10918  0017E0  BE0E               	btfsc	(escribeHorariosMemoria@j+1)^0,7,c
 10919  0017E2  EFFC  F00B         	goto	u3091
 10920  0017E6  500E               	movf	(escribeHorariosMemoria@j+1)^0,w,c
 10921  0017E8  E109               	bnz	u3090
 10922  0017EA  0E07               	movlw	7
 10923  0017EC  5C0D               	subwf	escribeHorariosMemoria@j^0,w,c
 10924  0017EE  A0D8               	btfss	status,0,c
 10925  0017F0  EFFC  F00B         	goto	u3091
 10926  0017F4  EFFE  F00B         	goto	u3090
 10927  0017F8                     u3091:
 10928  0017F8  EFC8  F00B         	goto	l3958
 10929  0017FC                     u3090:
 10930  0017FC                     
 10931                           ;main.c: 257:         escribe_eeprom(contMemoria++, horarios[i].regar);
 10932  0017FC  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
 10933  001800  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
 10934  001804  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
 10935  001808  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
 10936  00180C  0E00               	movlw	0
 10937  00180E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10938  001810  0E0C               	movlw	12
 10939  001812  6E03               	movwf	___wmul@multiplicand^0,c
 10940  001814  EC5F  F017         	call	___wmul	;wreg free
 10941  001818  0EB3               	movlw	low (_horarios+9)
 10942  00181A  2401               	addwf	?___wmul^0,w,c
 10943  00181C  6ED9               	movwf	fsr2l,c
 10944  00181E  0E01               	movlw	high (_horarios+9)
 10945  001820  2002               	addwfc	(?___wmul+1)^0,w,c
 10946  001822  6EDA               	movwf	fsr2h,c
 10947  001824  50DF               	movf	indf2,w,c
 10948  001826  6E09               	movwf	escribe_eeprom@dato^0,c
 10949  001828  EC09  F017         	call	_escribe_eeprom	;wreg free
 10950  00182C  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 10951  00182E  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 10952  001830                     
 10953                           ;main.c: 258:         escribe_eeprom(contMemoria++, horarios[i].tiempoRegar);
 10954  001830  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
 10955  001834  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
 10956  001838  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
 10957  00183C  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
 10958  001840  0E00               	movlw	0
 10959  001842  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10960  001844  0E0C               	movlw	12
 10961  001846  6E03               	movwf	___wmul@multiplicand^0,c
 10962  001848  EC5F  F017         	call	___wmul	;wreg free
 10963  00184C  0EB5               	movlw	low (_horarios+11)
 10964  00184E  2401               	addwf	?___wmul^0,w,c
 10965  001850  6ED9               	movwf	fsr2l,c
 10966  001852  0E01               	movlw	high (_horarios+11)
 10967  001854  2002               	addwfc	(?___wmul+1)^0,w,c
 10968  001856  6EDA               	movwf	fsr2h,c
 10969  001858  50DF               	movf	indf2,w,c
 10970  00185A  6E09               	movwf	escribe_eeprom@dato^0,c
 10971  00185C  EC09  F017         	call	_escribe_eeprom	;wreg free
 10972  001860  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 10973  001862  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 10974                           
 10975                           ;main.c: 259:     }
 10976  001864  4A11               	infsnz	escribeHorariosMemoria@i^0,f,c
 10977  001866  2A12               	incf	(escribeHorariosMemoria@i+1)^0,f,c
 10978  001868  BE12               	btfsc	(escribeHorariosMemoria@i+1)^0,7,c
 10979  00186A  EF40  F00C         	goto	u3101
 10980  00186E  5012               	movf	(escribeHorariosMemoria@i+1)^0,w,c
 10981  001870  E109               	bnz	u3100
 10982  001872  0E18               	movlw	24
 10983  001874  5C11               	subwf	escribeHorariosMemoria@i^0,w,c
 10984  001876  A0D8               	btfss	status,0,c
 10985  001878  EF40  F00C         	goto	u3101
 10986  00187C  EF42  F00C         	goto	u3100
 10987  001880                     u3101:
 10988  001880  EFAA  F00B         	goto	l3948
 10989  001884                     u3100:
 10990  001884  0012               	return		;funcret
 10991  001886                     __end_of_escribeHorariosMemoria:
 10992                           	opt callstack 0
 10993                           
 10994 ;; *************** function _escribe_eeprom *****************
 10995 ;; Defined at:
 10996 ;;		line 218 in file "main.c"
 10997 ;; Parameters:    Size  Location     Type
 10998 ;;  direccion       2    6[COMRAM] unsigned short 
 10999 ;;  dato            1    8[COMRAM] unsigned char 
 11000 ;; Auto vars:     Size  Location     Type
 11001 ;;		None
 11002 ;; Return value:  Size  Location     Type
 11003 ;;                  1    wreg      void 
 11004 ;; Registers used:
 11005 ;;		wreg, status,2, status,0, cstack
 11006 ;; Tracked objects:
 11007 ;;		On entry : 0/0
 11008 ;;		On exit  : 0/0
 11009 ;;		Unchanged: 0/0
 11010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11011 ;;      Params:         3       0       0       0       0       0       0       0       0
 11012 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11013 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11014 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11015 ;;Total ram usage:        4 bytes
 11016 ;; Hardware stack levels used:    1
 11017 ;; Hardware stack levels required when called:    3
 11018 ;; This function calls:
 11019 ;;		_i2c_detener
 11020 ;;		_i2c_envia_dato
 11021 ;;		_i2c_inicia_com
 11022 ;; This function is called by:
 11023 ;;		_escribeHorariosMemoria
 11024 ;; This function uses a non-reentrant model
 11025 ;;
 11026                           
 11027                           	psect	text56
 11028  002E12                     __ptext56:
 11029                           	opt callstack 0
 11030  002E12                     _escribe_eeprom:
 11031                           	opt callstack 24
 11032  002E12                     
 11033                           ;main.c: 219:     i2c_inicia_com();
 11034  002E12  ECE6  F017         	call	_i2c_inicia_com	;wreg free
 11035                           
 11036                           ;main.c: 220:     i2c_envia_dato(0xAE);
 11037  002E16  0EAE               	movlw	174
 11038  002E18  ECCC  F017         	call	_i2c_envia_dato
 11039                           
 11040                           ;main.c: 221:     i2c_envia_dato(direccion >> 8);
 11041  002E1C  5008               	movf	(escribe_eeprom@direccion+1)^0,w,c
 11042  002E1E  ECCC  F017         	call	_i2c_envia_dato
 11043                           
 11044                           ;main.c: 223:     i2c_envia_dato(direccion);
 11045  002E22  5007               	movf	escribe_eeprom@direccion^0,w,c
 11046  002E24  ECCC  F017         	call	_i2c_envia_dato
 11047                           
 11048                           ;main.c: 225:     i2c_envia_dato(dato);
 11049  002E28  5009               	movf	escribe_eeprom@dato^0,w,c
 11050  002E2A  ECCC  F017         	call	_i2c_envia_dato
 11051                           
 11052                           ;main.c: 226:     i2c_detener();
 11053  002E2E  ECEA  F017         	call	_i2c_detener	;wreg free
 11054  002E32                     
 11055                           ;main.c: 227:     _delay((unsigned long)((10)*(4000000/4000.0)));
 11056  002E32  0E0D               	movlw	13
 11057  002E34  6E0A               	movwf	??_escribe_eeprom^0,c
 11058  002E36  0EFC               	movlw	252
 11059  002E38                     u3777:
 11060  002E38  2EE8               	decfsz	wreg,f,c
 11061  002E3A  D7FE               	bra	u3777
 11062  002E3C  2E0A               	decfsz	??_escribe_eeprom^0,f,c
 11063  002E3E  D7FC               	bra	u3777
 11064  002E40  0012               	return		;funcret
 11065  002E42                     __end_of_escribe_eeprom:
 11066                           	opt callstack 0
 11067                           
 11068 ;; *************** function _leeHorariosMemoria *****************
 11069 ;; Defined at:
 11070 ;;		line 262 in file "main.c"
 11071 ;; Parameters:    Size  Location     Type
 11072 ;;		None
 11073 ;; Auto vars:     Size  Location     Type
 11074 ;;  j               2    8[COMRAM] int 
 11075 ;;  i               2   12[COMRAM] int 
 11076 ;;  contMemoria     2   10[COMRAM] int 
 11077 ;; Return value:  Size  Location     Type
 11078 ;;                  1    wreg      void 
 11079 ;; Registers used:
 11080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11081 ;; Tracked objects:
 11082 ;;		On entry : 0/0
 11083 ;;		On exit  : 0/0
 11084 ;;		Unchanged: 0/0
 11085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11086 ;;      Params:         0       0       0       0       0       0       0       0       0
 11087 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11088 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11089 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11090 ;;Total ram usage:        8 bytes
 11091 ;; Hardware stack levels used:    1
 11092 ;; Hardware stack levels required when called:    4
 11093 ;; This function calls:
 11094 ;;		___wmul
 11095 ;;		_leer_eeprom
 11096 ;; This function is called by:
 11097 ;;		_main
 11098 ;; This function uses a non-reentrant model
 11099 ;;
 11100                           
 11101                           	psect	text57
 11102  001886                     __ptext57:
 11103                           	opt callstack 0
 11104  001886                     _leeHorariosMemoria:
 11105                           	opt callstack 26
 11106  001886                     
 11107                           ;main.c: 264:     int contMemoria = 0;
 11108  001886  0E00               	movlw	0
 11109  001888  6E0C               	movwf	(leeHorariosMemoria@contMemoria+1)^0,c
 11110  00188A  0E00               	movlw	0
 11111  00188C  6E0B               	movwf	leeHorariosMemoria@contMemoria^0,c
 11112                           
 11113                           ;main.c: 266:     for (int i = 0; i < 24; i++) {
 11114  00188E  0E00               	movlw	0
 11115  001890  6E0E               	movwf	(leeHorariosMemoria@i+1)^0,c
 11116  001892  0E00               	movlw	0
 11117  001894  6E0D               	movwf	leeHorariosMemoria@i^0,c
 11118  001896                     l4424:
 11119                           
 11120                           ;main.c: 267:         horarios[i].hora = leer_eeprom(contMemoria++);
 11121  001896  C00D  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
 11122  00189A  C00E  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
 11123  00189E  0E00               	movlw	0
 11124  0018A0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11125  0018A2  0E0C               	movlw	12
 11126  0018A4  6E03               	movwf	___wmul@multiplicand^0,c
 11127  0018A6  EC5F  F017         	call	___wmul	;wreg free
 11128  0018AA  0EAA               	movlw	low _horarios
 11129  0018AC  2401               	addwf	?___wmul^0,w,c
 11130  0018AE  6ED9               	movwf	fsr2l,c
 11131  0018B0  0E01               	movlw	high _horarios
 11132  0018B2  2002               	addwfc	(?___wmul+1)^0,w,c
 11133  0018B4  6EDA               	movwf	fsr2h,c
 11134  0018B6  C00B  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
 11135  0018BA  C00C  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
 11136  0018BE  EC9C  F016         	call	_leer_eeprom	;wreg free
 11137  0018C2  6EDF               	movwf	indf2,c
 11138  0018C4  4A0B               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
 11139  0018C6  2A0C               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
 11140  0018C8                     
 11141                           ;main.c: 269:         for (int j = 0; j < 7; j++) {
 11142  0018C8  0E00               	movlw	0
 11143  0018CA  6E0A               	movwf	(leeHorariosMemoria@j+1)^0,c
 11144  0018CC  0E00               	movlw	0
 11145  0018CE  6E09               	movwf	leeHorariosMemoria@j^0,c
 11146  0018D0                     l4434:
 11147                           
 11148                           ;main.c: 270:             horarios[i].dias[j] = leer_eeprom(contMemoria++);
 11149  0018D0  C00D  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
 11150  0018D4  C00E  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
 11151  0018D8  0E00               	movlw	0
 11152  0018DA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11153  0018DC  0E0C               	movlw	12
 11154  0018DE  6E03               	movwf	___wmul@multiplicand^0,c
 11155  0018E0  EC5F  F017         	call	___wmul	;wreg free
 11156  0018E4  0EAA               	movlw	low _horarios
 11157  0018E6  6E07               	movwf	??_leeHorariosMemoria^0,c
 11158  0018E8  0E01               	movlw	high _horarios
 11159  0018EA  6E08               	movwf	(??_leeHorariosMemoria+1)^0,c
 11160  0018EC  0E01               	movlw	1
 11161  0018EE  2607               	addwf	??_leeHorariosMemoria^0,f,c
 11162  0018F0  0E00               	movlw	0
 11163  0018F2  2208               	addwfc	(??_leeHorariosMemoria+1)^0,f,c
 11164  0018F4  5001               	movf	?___wmul^0,w,c
 11165  0018F6  2607               	addwf	??_leeHorariosMemoria^0,f,c
 11166  0018F8  5002               	movf	(?___wmul+1)^0,w,c
 11167  0018FA  2208               	addwfc	(??_leeHorariosMemoria+1)^0,f,c
 11168  0018FC  5009               	movf	leeHorariosMemoria@j^0,w,c
 11169  0018FE  2407               	addwf	??_leeHorariosMemoria^0,w,c
 11170  001900  6ED9               	movwf	fsr2l,c
 11171  001902  500A               	movf	(leeHorariosMemoria@j+1)^0,w,c
 11172  001904  2008               	addwfc	(??_leeHorariosMemoria+1)^0,w,c
 11173  001906  6EDA               	movwf	fsr2h,c
 11174  001908  C00B  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
 11175  00190C  C00C  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
 11176  001910  EC9C  F016         	call	_leer_eeprom	;wreg free
 11177  001914  6EDF               	movwf	indf2,c
 11178  001916  4A0B               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
 11179  001918  2A0C               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
 11180  00191A                     
 11181                           ;main.c: 271:         }
 11182  00191A  4A09               	infsnz	leeHorariosMemoria@j^0,f,c
 11183  00191C  2A0A               	incf	(leeHorariosMemoria@j+1)^0,f,c
 11184  00191E  BE0A               	btfsc	(leeHorariosMemoria@j+1)^0,7,c
 11185  001920  EF9B  F00C         	goto	u3491
 11186  001924  500A               	movf	(leeHorariosMemoria@j+1)^0,w,c
 11187  001926  E109               	bnz	u3490
 11188  001928  0E07               	movlw	7
 11189  00192A  5C09               	subwf	leeHorariosMemoria@j^0,w,c
 11190  00192C  A0D8               	btfss	status,0,c
 11191  00192E  EF9B  F00C         	goto	u3491
 11192  001932  EF9D  F00C         	goto	u3490
 11193  001936                     u3491:
 11194  001936  EF68  F00C         	goto	l4434
 11195  00193A                     u3490:
 11196  00193A                     
 11197                           ;main.c: 273:         horarios[i].regar = leer_eeprom(contMemoria++);
 11198  00193A  C00D  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
 11199  00193E  C00E  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
 11200  001942  0E00               	movlw	0
 11201  001944  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11202  001946  0E0C               	movlw	12
 11203  001948  6E03               	movwf	___wmul@multiplicand^0,c
 11204  00194A  EC5F  F017         	call	___wmul	;wreg free
 11205  00194E  0EB3               	movlw	low (_horarios+9)
 11206  001950  2401               	addwf	?___wmul^0,w,c
 11207  001952  6ED9               	movwf	fsr2l,c
 11208  001954  0E01               	movlw	high (_horarios+9)
 11209  001956  2002               	addwfc	(?___wmul+1)^0,w,c
 11210  001958  6EDA               	movwf	fsr2h,c
 11211  00195A  C00B  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
 11212  00195E  C00C  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
 11213  001962  EC9C  F016         	call	_leer_eeprom	;wreg free
 11214  001966  6EDF               	movwf	indf2,c
 11215  001968  4A0B               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
 11216  00196A  2A0C               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
 11217  00196C                     
 11218                           ;main.c: 274:         horarios[i].tiempoRegar = leer_eeprom(contMemoria++);
 11219  00196C  C00D  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
 11220  001970  C00E  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
 11221  001974  0E00               	movlw	0
 11222  001976  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11223  001978  0E0C               	movlw	12
 11224  00197A  6E03               	movwf	___wmul@multiplicand^0,c
 11225  00197C  EC5F  F017         	call	___wmul	;wreg free
 11226  001980  0EB5               	movlw	low (_horarios+11)
 11227  001982  2401               	addwf	?___wmul^0,w,c
 11228  001984  6ED9               	movwf	fsr2l,c
 11229  001986  0E01               	movlw	high (_horarios+11)
 11230  001988  2002               	addwfc	(?___wmul+1)^0,w,c
 11231  00198A  6EDA               	movwf	fsr2h,c
 11232  00198C  C00B  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
 11233  001990  C00C  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
 11234  001994  EC9C  F016         	call	_leer_eeprom	;wreg free
 11235  001998  6EDF               	movwf	indf2,c
 11236  00199A  4A0B               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
 11237  00199C  2A0C               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
 11238                           
 11239                           ;main.c: 275:     }
 11240  00199E  4A0D               	infsnz	leeHorariosMemoria@i^0,f,c
 11241  0019A0  2A0E               	incf	(leeHorariosMemoria@i+1)^0,f,c
 11242  0019A2  BE0E               	btfsc	(leeHorariosMemoria@i+1)^0,7,c
 11243  0019A4  EFDD  F00C         	goto	u3501
 11244  0019A8  500E               	movf	(leeHorariosMemoria@i+1)^0,w,c
 11245  0019AA  E109               	bnz	u3500
 11246  0019AC  0E18               	movlw	24
 11247  0019AE  5C0D               	subwf	leeHorariosMemoria@i^0,w,c
 11248  0019B0  A0D8               	btfss	status,0,c
 11249  0019B2  EFDD  F00C         	goto	u3501
 11250  0019B6  EFDF  F00C         	goto	u3500
 11251  0019BA                     u3501:
 11252  0019BA  EF4B  F00C         	goto	l4424
 11253  0019BE                     u3500:
 11254  0019BE  0012               	return		;funcret
 11255  0019C0                     __end_of_leeHorariosMemoria:
 11256                           	opt callstack 0
 11257                           
 11258 ;; *************** function _leer_eeprom *****************
 11259 ;; Defined at:
 11260 ;;		line 230 in file "main.c"
 11261 ;; Parameters:    Size  Location     Type
 11262 ;;  direccion       2    2[COMRAM] unsigned short 
 11263 ;; Auto vars:     Size  Location     Type
 11264 ;;  dato            1    5[COMRAM] unsigned char 
 11265 ;; Return value:  Size  Location     Type
 11266 ;;                  1    wreg      unsigned char 
 11267 ;; Registers used:
 11268 ;;		wreg, status,2, status,0, cstack
 11269 ;; Tracked objects:
 11270 ;;		On entry : 0/0
 11271 ;;		On exit  : 0/0
 11272 ;;		Unchanged: 0/0
 11273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11274 ;;      Params:         2       0       0       0       0       0       0       0       0
 11275 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11276 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11277 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11278 ;;Total ram usage:        4 bytes
 11279 ;; Hardware stack levels used:    1
 11280 ;; Hardware stack levels required when called:    3
 11281 ;; This function calls:
 11282 ;;		_i2c_detener
 11283 ;;		_i2c_envia_dato
 11284 ;;		_i2c_inicia_com
 11285 ;;		_i2c_recibe_dato
 11286 ;;		_i2c_reinicia_com
 11287 ;; This function is called by:
 11288 ;;		_leeHorariosMemoria
 11289 ;; This function uses a non-reentrant model
 11290 ;;
 11291                           
 11292                           	psect	text58
 11293  002D38                     __ptext58:
 11294                           	opt callstack 0
 11295  002D38                     _leer_eeprom:
 11296                           	opt callstack 26
 11297  002D38                     
 11298                           ;main.c: 232:     unsigned char dato;;main.c: 234:     i2c_inicia_com();
 11299  002D38  ECE6  F017         	call	_i2c_inicia_com	;wreg free
 11300                           
 11301                           ;main.c: 235:     i2c_envia_dato(0xAE);
 11302  002D3C  0EAE               	movlw	174
 11303  002D3E  ECCC  F017         	call	_i2c_envia_dato
 11304                           
 11305                           ;main.c: 236:     i2c_envia_dato(direccion >> 8);
 11306  002D42  5004               	movf	(leer_eeprom@direccion+1)^0,w,c
 11307  002D44  ECCC  F017         	call	_i2c_envia_dato
 11308                           
 11309                           ;main.c: 237:     i2c_envia_dato(direccion);
 11310  002D48  5003               	movf	leer_eeprom@direccion^0,w,c
 11311  002D4A  ECCC  F017         	call	_i2c_envia_dato
 11312                           
 11313                           ;main.c: 238:     i2c_reinicia_com();
 11314  002D4E  ECE2  F017         	call	_i2c_reinicia_com	;wreg free
 11315                           
 11316                           ;main.c: 239:     i2c_envia_dato(0xAF);
 11317  002D52  0EAF               	movlw	175
 11318  002D54  ECCC  F017         	call	_i2c_envia_dato
 11319                           
 11320                           ;main.c: 240:     dato = i2c_recibe_dato();
 11321  002D58  ECA1  F017         	call	_i2c_recibe_dato	;wreg free
 11322  002D5C  6E06               	movwf	leer_eeprom@dato^0,c
 11323                           
 11324                           ;main.c: 241:     i2c_detener();
 11325  002D5E  ECEA  F017         	call	_i2c_detener	;wreg free
 11326  002D62                     
 11327                           ;main.c: 242:     _delay((unsigned long)((10)*(4000000/4000.0)));
 11328  002D62  0E0D               	movlw	13
 11329  002D64  6E05               	movwf	??_leer_eeprom^0,c
 11330  002D66  0EFC               	movlw	252
 11331  002D68                     u3787:
 11332  002D68  2EE8               	decfsz	wreg,f,c
 11333  002D6A  D7FE               	bra	u3787
 11334  002D6C  2E05               	decfsz	??_leer_eeprom^0,f,c
 11335  002D6E  D7FC               	bra	u3787
 11336  002D70                     
 11337                           ;main.c: 244:     return dato;
 11338  002D70  5006               	movf	leer_eeprom@dato^0,w,c
 11339  002D72  0012               	return		;funcret
 11340  002D74                     __end_of_leer_eeprom:
 11341                           	opt callstack 0
 11342                           
 11343 ;; *************** function _i2c_reinicia_com *****************
 11344 ;; Defined at:
 11345 ;;		line 37 in file "./I2C.h"
 11346 ;; Parameters:    Size  Location     Type
 11347 ;;		None
 11348 ;; Auto vars:     Size  Location     Type
 11349 ;;		None
 11350 ;; Return value:  Size  Location     Type
 11351 ;;                  1    wreg      void 
 11352 ;; Registers used:
 11353 ;;		wreg, status,2, status,0, cstack
 11354 ;; Tracked objects:
 11355 ;;		On entry : 0/0
 11356 ;;		On exit  : 0/0
 11357 ;;		Unchanged: 0/0
 11358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11359 ;;      Params:         0       0       0       0       0       0       0       0       0
 11360 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11361 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11362 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11363 ;;Total ram usage:        0 bytes
 11364 ;; Hardware stack levels used:    1
 11365 ;; Hardware stack levels required when called:    2
 11366 ;; This function calls:
 11367 ;;		_i2c_espera
 11368 ;; This function is called by:
 11369 ;;		_leer_rtc
 11370 ;;		_leer_eeprom
 11371 ;; This function uses a non-reentrant model
 11372 ;;
 11373                           
 11374                           	psect	text59
 11375  002FC4                     __ptext59:
 11376                           	opt callstack 0
 11377  002FC4                     _i2c_reinicia_com:
 11378                           	opt callstack 25
 11379  002FC4                     
 11380                           ;./I2C.h: 38:     i2c_espera();
 11381  002FC4  EC4C  F017         	call	_i2c_espera	;wreg free
 11382  002FC8                     
 11383                           ;./I2C.h: 39:     SSPCON2bits.RSEN = 1;
 11384  002FC8  82C5               	bsf	197,1,c	;volatile
 11385  002FCA  0012               	return		;funcret
 11386  002FCC                     __end_of_i2c_reinicia_com:
 11387                           	opt callstack 0
 11388                           
 11389 ;; *************** function _i2c_recibe_dato *****************
 11390 ;; Defined at:
 11391 ;;		line 68 in file "./I2C.h"
 11392 ;; Parameters:    Size  Location     Type
 11393 ;;		None
 11394 ;; Auto vars:     Size  Location     Type
 11395 ;;  datoleido       1    1[COMRAM] unsigned char 
 11396 ;; Return value:  Size  Location     Type
 11397 ;;                  1    wreg      unsigned char 
 11398 ;; Registers used:
 11399 ;;		wreg, status,2, status,0, cstack
 11400 ;; Tracked objects:
 11401 ;;		On entry : 0/0
 11402 ;;		On exit  : 0/0
 11403 ;;		Unchanged: 0/0
 11404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11405 ;;      Params:         0       0       0       0       0       0       0       0       0
 11406 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11407 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11408 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11409 ;;Total ram usage:        1 bytes
 11410 ;; Hardware stack levels used:    1
 11411 ;; Hardware stack levels required when called:    2
 11412 ;; This function calls:
 11413 ;;		_i2c_espera
 11414 ;; This function is called by:
 11415 ;;		_leer_rtc
 11416 ;;		_leer_eeprom
 11417 ;; This function uses a non-reentrant model
 11418 ;;
 11419                           
 11420                           	psect	text60
 11421  002F42                     __ptext60:
 11422                           	opt callstack 0
 11423  002F42                     _i2c_recibe_dato:
 11424                           	opt callstack 25
 11425  002F42                     
 11426                           ;./I2C.h: 70:     unsigned char datoleido;;./I2C.h: 73:     i2c_espera();
 11427  002F42  EC4C  F017         	call	_i2c_espera	;wreg free
 11428  002F46                     
 11429                           ;./I2C.h: 74:     SSPCON2bits.RCEN = 1;
 11430  002F46  86C5               	bsf	197,3,c	;volatile
 11431                           
 11432                           ;./I2C.h: 76:     i2c_espera();
 11433  002F48  EC4C  F017         	call	_i2c_espera	;wreg free
 11434  002F4C                     
 11435                           ;./I2C.h: 77:     datoleido = SSPBUF;
 11436  002F4C  CFC9 F002          	movff	4041,i2c_recibe_dato@datoleido	;volatile
 11437                           
 11438                           ;./I2C.h: 80:     i2c_espera();
 11439  002F50  EC4C  F017         	call	_i2c_espera	;wreg free
 11440  002F54                     
 11441                           ;./I2C.h: 82:     SSPCON2bits.ACKDT = 1;
 11442  002F54  8AC5               	bsf	197,5,c	;volatile
 11443  002F56                     
 11444                           ;./I2C.h: 87:     SSPCON2bits.ACKEN = 1;
 11445  002F56  88C5               	bsf	197,4,c	;volatile
 11446  002F58                     
 11447                           ;./I2C.h: 91:     return datoleido;
 11448  002F58  5002               	movf	i2c_recibe_dato@datoleido^0,w,c
 11449  002F5A  0012               	return		;funcret
 11450  002F5C                     __end_of_i2c_recibe_dato:
 11451                           	opt callstack 0
 11452                           
 11453 ;; *************** function _i2c_inicia_com *****************
 11454 ;; Defined at:
 11455 ;;		line 28 in file "./I2C.h"
 11456 ;; Parameters:    Size  Location     Type
 11457 ;;		None
 11458 ;; Auto vars:     Size  Location     Type
 11459 ;;		None
 11460 ;; Return value:  Size  Location     Type
 11461 ;;                  1    wreg      void 
 11462 ;; Registers used:
 11463 ;;		wreg, status,2, status,0, cstack
 11464 ;; Tracked objects:
 11465 ;;		On entry : 0/0
 11466 ;;		On exit  : 0/0
 11467 ;;		Unchanged: 0/0
 11468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11469 ;;      Params:         0       0       0       0       0       0       0       0       0
 11470 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11471 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11472 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11473 ;;Total ram usage:        0 bytes
 11474 ;; Hardware stack levels used:    1
 11475 ;; Hardware stack levels required when called:    2
 11476 ;; This function calls:
 11477 ;;		_i2c_espera
 11478 ;; This function is called by:
 11479 ;;		_escribe_rtc
 11480 ;;		_leer_rtc
 11481 ;;		_escribe_eeprom
 11482 ;;		_leer_eeprom
 11483 ;; This function uses a non-reentrant model
 11484 ;;
 11485                           
 11486                           	psect	text61
 11487  002FCC                     __ptext61:
 11488                           	opt callstack 0
 11489  002FCC                     _i2c_inicia_com:
 11490                           	opt callstack 25
 11491  002FCC                     
 11492                           ;./I2C.h: 29:     i2c_espera();
 11493  002FCC  EC4C  F017         	call	_i2c_espera	;wreg free
 11494  002FD0                     
 11495                           ;./I2C.h: 30:     SSPCON2bits.SEN = 1;
 11496  002FD0  80C5               	bsf	197,0,c	;volatile
 11497  002FD2  0012               	return		;funcret
 11498  002FD4                     __end_of_i2c_inicia_com:
 11499                           	opt callstack 0
 11500                           
 11501 ;; *************** function _i2c_envia_dato *****************
 11502 ;; Defined at:
 11503 ;;		line 57 in file "./I2C.h"
 11504 ;; Parameters:    Size  Location     Type
 11505 ;;  dato            1    wreg     unsigned char 
 11506 ;; Auto vars:     Size  Location     Type
 11507 ;;  dato            1    1[COMRAM] unsigned char 
 11508 ;; Return value:  Size  Location     Type
 11509 ;;                  1    wreg      unsigned char 
 11510 ;; Registers used:
 11511 ;;		wreg, status,2, status,0, cstack
 11512 ;; Tracked objects:
 11513 ;;		On entry : 0/0
 11514 ;;		On exit  : 0/0
 11515 ;;		Unchanged: 0/0
 11516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11517 ;;      Params:         0       0       0       0       0       0       0       0       0
 11518 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11519 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11520 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11521 ;;Total ram usage:        1 bytes
 11522 ;; Hardware stack levels used:    1
 11523 ;; Hardware stack levels required when called:    2
 11524 ;; This function calls:
 11525 ;;		_i2c_espera
 11526 ;; This function is called by:
 11527 ;;		_escribe_rtc
 11528 ;;		_leer_rtc
 11529 ;;		_escribe_eeprom
 11530 ;;		_leer_eeprom
 11531 ;; This function uses a non-reentrant model
 11532 ;;
 11533                           
 11534                           	psect	text62
 11535  002F98                     __ptext62:
 11536                           	opt callstack 0
 11537  002F98                     _i2c_envia_dato:
 11538                           	opt callstack 25
 11539                           
 11540                           ;incstack = 0
 11541                           ;i2c_envia_dato@dato stored from wreg
 11542  002F98  6E02               	movwf	i2c_envia_dato@dato^0,c
 11543  002F9A                     
 11544                           ;./I2C.h: 58:     i2c_espera();
 11545  002F9A  EC4C  F017         	call	_i2c_espera	;wreg free
 11546  002F9E                     
 11547                           ;./I2C.h: 59:     SSPBUF = dato;
 11548  002F9E  C002  FFC9         	movff	i2c_envia_dato@dato,4041	;volatile
 11549  002FA2  0012               	return		;funcret
 11550  002FA4                     __end_of_i2c_envia_dato:
 11551                           	opt callstack 0
 11552                           
 11553 ;; *************** function _i2c_detener *****************
 11554 ;; Defined at:
 11555 ;;		line 46 in file "./I2C.h"
 11556 ;; Parameters:    Size  Location     Type
 11557 ;;		None
 11558 ;; Auto vars:     Size  Location     Type
 11559 ;;		None
 11560 ;; Return value:  Size  Location     Type
 11561 ;;                  1    wreg      void 
 11562 ;; Registers used:
 11563 ;;		wreg, status,2, status,0, cstack
 11564 ;; Tracked objects:
 11565 ;;		On entry : 0/0
 11566 ;;		On exit  : 0/0
 11567 ;;		Unchanged: 0/0
 11568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11569 ;;      Params:         0       0       0       0       0       0       0       0       0
 11570 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11571 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11572 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11573 ;;Total ram usage:        0 bytes
 11574 ;; Hardware stack levels used:    1
 11575 ;; Hardware stack levels required when called:    2
 11576 ;; This function calls:
 11577 ;;		_i2c_espera
 11578 ;; This function is called by:
 11579 ;;		_escribe_rtc
 11580 ;;		_leer_rtc
 11581 ;;		_escribe_eeprom
 11582 ;;		_leer_eeprom
 11583 ;; This function uses a non-reentrant model
 11584 ;;
 11585                           
 11586                           	psect	text63
 11587  002FD4                     __ptext63:
 11588                           	opt callstack 0
 11589  002FD4                     _i2c_detener:
 11590                           	opt callstack 25
 11591  002FD4                     
 11592                           ;./I2C.h: 47:     i2c_espera();
 11593  002FD4  EC4C  F017         	call	_i2c_espera	;wreg free
 11594  002FD8                     
 11595                           ;./I2C.h: 48:     SSPCON2bits.PEN = 1;
 11596  002FD8  84C5               	bsf	197,2,c	;volatile
 11597  002FDA  0012               	return		;funcret
 11598  002FDC                     __end_of_i2c_detener:
 11599                           	opt callstack 0
 11600                           
 11601 ;; *************** function _i2c_espera *****************
 11602 ;; Defined at:
 11603 ;;		line 20 in file "./I2C.h"
 11604 ;; Parameters:    Size  Location     Type
 11605 ;;		None
 11606 ;; Auto vars:     Size  Location     Type
 11607 ;;		None
 11608 ;; Return value:  Size  Location     Type
 11609 ;;                  1    wreg      void 
 11610 ;; Registers used:
 11611 ;;		wreg, status,2, status,0
 11612 ;; Tracked objects:
 11613 ;;		On entry : 0/0
 11614 ;;		On exit  : 0/0
 11615 ;;		Unchanged: 0/0
 11616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11617 ;;      Params:         0       0       0       0       0       0       0       0       0
 11618 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11619 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11620 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11621 ;;Total ram usage:        1 bytes
 11622 ;; Hardware stack levels used:    1
 11623 ;; Hardware stack levels required when called:    1
 11624 ;; This function calls:
 11625 ;;		Nothing
 11626 ;; This function is called by:
 11627 ;;		_i2c_inicia_com
 11628 ;;		_i2c_reinicia_com
 11629 ;;		_i2c_detener
 11630 ;;		_i2c_envia_dato
 11631 ;;		_i2c_recibe_dato
 11632 ;; This function uses a non-reentrant model
 11633 ;;
 11634                           
 11635                           	psect	text64
 11636  002E98                     __ptext64:
 11637                           	opt callstack 0
 11638  002E98                     _i2c_espera:
 11639                           	opt callstack 25
 11640  002E98                     l3390:
 11641  002E98  CFC5 F001          	movff	4037,??_i2c_espera	;volatile
 11642  002E9C  0E1F               	movlw	31
 11643  002E9E  1601               	andwf	??_i2c_espera^0,f,c
 11644  002EA0  A4D8               	btfss	status,2,c
 11645  002EA2  EF55  F017         	goto	u2451
 11646  002EA6  EF57  F017         	goto	u2450
 11647  002EAA                     u2451:
 11648  002EAA  EF4C  F017         	goto	l3390
 11649  002EAE                     u2450:
 11650  002EAE  B4C7               	btfsc	199,2,c	;volatile
 11651  002EB0  EF5C  F017         	goto	u2461
 11652  002EB4  EF5E  F017         	goto	u2460
 11653  002EB8                     u2461:
 11654  002EB8  EF4C  F017         	goto	l3390
 11655  002EBC                     u2460:
 11656  002EBC  0012               	return		;funcret
 11657  002EBE                     __end_of_i2c_espera:
 11658                           	opt callstack 0
 11659                           
 11660 ;; *************** function _inicializarObjetos *****************
 11661 ;; Defined at:
 11662 ;;		line 158 in file "main.c"
 11663 ;; Parameters:    Size  Location     Type
 11664 ;;		None
 11665 ;; Auto vars:     Size  Location     Type
 11666 ;;  j               2    8[COMRAM] int 
 11667 ;;  i               2   10[COMRAM] int 
 11668 ;;  i               2   12[COMRAM] int 
 11669 ;; Return value:  Size  Location     Type
 11670 ;;                  1    wreg      void 
 11671 ;; Registers used:
 11672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11673 ;; Tracked objects:
 11674 ;;		On entry : 0/0
 11675 ;;		On exit  : 0/0
 11676 ;;		Unchanged: 0/0
 11677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11678 ;;      Params:         0       0       0       0       0       0       0       0       0
 11679 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11680 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11681 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11682 ;;Total ram usage:        8 bytes
 11683 ;; Hardware stack levels used:    1
 11684 ;; Hardware stack levels required when called:    2
 11685 ;; This function calls:
 11686 ;;		___wmul
 11687 ;; This function is called by:
 11688 ;;		_main
 11689 ;; This function uses a non-reentrant model
 11690 ;;
 11691                           
 11692                           	psect	text65
 11693  00132E                     __ptext65:
 11694                           	opt callstack 0
 11695  00132E                     _inicializarObjetos:
 11696                           	opt callstack 28
 11697  00132E                     
 11698                           ;main.c: 160:     for (int i = 0; i < 24; i++) {
 11699  00132E  0E00               	movlw	0
 11700  001330  6E0E               	movwf	(inicializarObjetos@i+1)^0,c
 11701  001332  0E00               	movlw	0
 11702  001334  6E0D               	movwf	inicializarObjetos@i^0,c
 11703  001336                     l4388:
 11704                           
 11705                           ;main.c: 161:         horarios[i].hora = i;
 11706  001336  C00D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
 11707  00133A  C00E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
 11708  00133E  0E00               	movlw	0
 11709  001340  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11710  001342  0E0C               	movlw	12
 11711  001344  6E03               	movwf	___wmul@multiplicand^0,c
 11712  001346  EC5F  F017         	call	___wmul	;wreg free
 11713  00134A  0EAA               	movlw	low _horarios
 11714  00134C  2401               	addwf	?___wmul^0,w,c
 11715  00134E  6ED9               	movwf	fsr2l,c
 11716  001350  0E01               	movlw	high _horarios
 11717  001352  2002               	addwfc	(?___wmul+1)^0,w,c
 11718  001354  6EDA               	movwf	fsr2h,c
 11719  001356  C00D  FFDF         	movff	inicializarObjetos@i,indf2
 11720                           
 11721                           ;main.c: 162:         horarios[i].regar = 0;
 11722  00135A  C00D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
 11723  00135E  C00E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
 11724  001362  0E00               	movlw	0
 11725  001364  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11726  001366  0E0C               	movlw	12
 11727  001368  6E03               	movwf	___wmul@multiplicand^0,c
 11728  00136A  EC5F  F017         	call	___wmul	;wreg free
 11729  00136E  0EB3               	movlw	low (_horarios+9)
 11730  001370  2401               	addwf	?___wmul^0,w,c
 11731  001372  6ED9               	movwf	fsr2l,c
 11732  001374  0E01               	movlw	high (_horarios+9)
 11733  001376  2002               	addwfc	(?___wmul+1)^0,w,c
 11734  001378  6EDA               	movwf	fsr2h,c
 11735  00137A  0E00               	movlw	0
 11736  00137C  6EDF               	movwf	indf2,c
 11737                           
 11738                           ;main.c: 163:         horarios[i].regado = 0;
 11739  00137E  C00D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
 11740  001382  C00E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
 11741  001386  0E00               	movlw	0
 11742  001388  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11743  00138A  0E0C               	movlw	12
 11744  00138C  6E03               	movwf	___wmul@multiplicand^0,c
 11745  00138E  EC5F  F017         	call	___wmul	;wreg free
 11746  001392  0EB4               	movlw	low (_horarios+10)
 11747  001394  2401               	addwf	?___wmul^0,w,c
 11748  001396  6ED9               	movwf	fsr2l,c
 11749  001398  0E01               	movlw	high (_horarios+10)
 11750  00139A  2002               	addwfc	(?___wmul+1)^0,w,c
 11751  00139C  6EDA               	movwf	fsr2h,c
 11752  00139E  0E00               	movlw	0
 11753  0013A0  6EDF               	movwf	indf2,c
 11754                           
 11755                           ;main.c: 164:         horarios[i].tiempoRegar = 15;
 11756  0013A2  C00D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
 11757  0013A6  C00E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
 11758  0013AA  0E00               	movlw	0
 11759  0013AC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11760  0013AE  0E0C               	movlw	12
 11761  0013B0  6E03               	movwf	___wmul@multiplicand^0,c
 11762  0013B2  EC5F  F017         	call	___wmul	;wreg free
 11763  0013B6  0EB5               	movlw	low (_horarios+11)
 11764  0013B8  2401               	addwf	?___wmul^0,w,c
 11765  0013BA  6ED9               	movwf	fsr2l,c
 11766  0013BC  0E01               	movlw	high (_horarios+11)
 11767  0013BE  2002               	addwfc	(?___wmul+1)^0,w,c
 11768  0013C0  6EDA               	movwf	fsr2h,c
 11769  0013C2  0E0F               	movlw	15
 11770  0013C4  6EDF               	movwf	indf2,c
 11771  0013C6                     
 11772                           ;main.c: 165:     }
 11773  0013C6  4A0D               	infsnz	inicializarObjetos@i^0,f,c
 11774  0013C8  2A0E               	incf	(inicializarObjetos@i+1)^0,f,c
 11775  0013CA  BE0E               	btfsc	(inicializarObjetos@i+1)^0,7,c
 11776  0013CC  EFF1  F009         	goto	u3461
 11777  0013D0  500E               	movf	(inicializarObjetos@i+1)^0,w,c
 11778  0013D2  E109               	bnz	u3460
 11779  0013D4  0E18               	movlw	24
 11780  0013D6  5C0D               	subwf	inicializarObjetos@i^0,w,c
 11781  0013D8  A0D8               	btfss	status,0,c
 11782  0013DA  EFF1  F009         	goto	u3461
 11783  0013DE  EFF3  F009         	goto	u3460
 11784  0013E2                     u3461:
 11785  0013E2  EF9B  F009         	goto	l4388
 11786  0013E6                     u3460:
 11787  0013E6                     
 11788                           ;main.c: 167:     for (int i = 0; i < 24; i++) {
 11789  0013E6  0E00               	movlw	0
 11790  0013E8  6E0C               	movwf	(inicializarObjetos@i_806+1)^0,c
 11791  0013EA  0E00               	movlw	0
 11792  0013EC  6E0B               	movwf	inicializarObjetos@i_806^0,c
 11793  0013EE                     l4400:
 11794                           
 11795                           ;main.c: 169:         for (int j = 0; j < 7; j++)
 11796  0013EE  0E00               	movlw	0
 11797  0013F0  6E0A               	movwf	(inicializarObjetos@j+1)^0,c
 11798  0013F2  0E00               	movlw	0
 11799  0013F4  6E09               	movwf	inicializarObjetos@j^0,c
 11800  0013F6                     l4406:
 11801                           
 11802                           ;main.c: 170:             horarios[i].dias[j] = 0;
 11803  0013F6  C00B  F001         	movff	inicializarObjetos@i_806,___wmul@multiplier
 11804  0013FA  C00C  F002         	movff	inicializarObjetos@i_806+1,___wmul@multiplier+1
 11805  0013FE  0E00               	movlw	0
 11806  001400  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11807  001402  0E0C               	movlw	12
 11808  001404  6E03               	movwf	___wmul@multiplicand^0,c
 11809  001406  EC5F  F017         	call	___wmul	;wreg free
 11810  00140A  0EAA               	movlw	low _horarios
 11811  00140C  6E07               	movwf	??_inicializarObjetos^0,c
 11812  00140E  0E01               	movlw	high _horarios
 11813  001410  6E08               	movwf	(??_inicializarObjetos+1)^0,c
 11814  001412  0E01               	movlw	1
 11815  001414  2607               	addwf	??_inicializarObjetos^0,f,c
 11816  001416  0E00               	movlw	0
 11817  001418  2208               	addwfc	(??_inicializarObjetos+1)^0,f,c
 11818  00141A  5001               	movf	?___wmul^0,w,c
 11819  00141C  2607               	addwf	??_inicializarObjetos^0,f,c
 11820  00141E  5002               	movf	(?___wmul+1)^0,w,c
 11821  001420  2208               	addwfc	(??_inicializarObjetos+1)^0,f,c
 11822  001422  5009               	movf	inicializarObjetos@j^0,w,c
 11823  001424  2407               	addwf	??_inicializarObjetos^0,w,c
 11824  001426  6ED9               	movwf	fsr2l,c
 11825  001428  500A               	movf	(inicializarObjetos@j+1)^0,w,c
 11826  00142A  2008               	addwfc	(??_inicializarObjetos+1)^0,w,c
 11827  00142C  6EDA               	movwf	fsr2h,c
 11828  00142E  0E00               	movlw	0
 11829  001430  6EDF               	movwf	indf2,c
 11830  001432  4A09               	infsnz	inicializarObjetos@j^0,f,c
 11831  001434  2A0A               	incf	(inicializarObjetos@j+1)^0,f,c
 11832  001436  BE0A               	btfsc	(inicializarObjetos@j+1)^0,7,c
 11833  001438  EF27  F00A         	goto	u3471
 11834  00143C  500A               	movf	(inicializarObjetos@j+1)^0,w,c
 11835  00143E  E109               	bnz	u3470
 11836  001440  0E07               	movlw	7
 11837  001442  5C09               	subwf	inicializarObjetos@j^0,w,c
 11838  001444  A0D8               	btfss	status,0,c
 11839  001446  EF27  F00A         	goto	u3471
 11840  00144A  EF29  F00A         	goto	u3470
 11841  00144E                     u3471:
 11842  00144E  EFFB  F009         	goto	l4406
 11843  001452                     u3470:
 11844  001452                     
 11845                           ;main.c: 172:         horarios[i].dias[7] = '\0';
 11846  001452  C00B  F001         	movff	inicializarObjetos@i_806,___wmul@multiplier
 11847  001456  C00C  F002         	movff	inicializarObjetos@i_806+1,___wmul@multiplier+1
 11848  00145A  0E00               	movlw	0
 11849  00145C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11850  00145E  0E0C               	movlw	12
 11851  001460  6E03               	movwf	___wmul@multiplicand^0,c
 11852  001462  EC5F  F017         	call	___wmul	;wreg free
 11853  001466  0EB2               	movlw	low (_horarios+8)
 11854  001468  2401               	addwf	?___wmul^0,w,c
 11855  00146A  6ED9               	movwf	fsr2l,c
 11856  00146C  0E01               	movlw	high (_horarios+8)
 11857  00146E  2002               	addwfc	(?___wmul+1)^0,w,c
 11858  001470  6EDA               	movwf	fsr2h,c
 11859  001472  0E00               	movlw	0
 11860  001474  6EDF               	movwf	indf2,c
 11861  001476                     
 11862                           ;main.c: 173:     }
 11863  001476  4A0B               	infsnz	inicializarObjetos@i_806^0,f,c
 11864  001478  2A0C               	incf	(inicializarObjetos@i_806+1)^0,f,c
 11865  00147A  BE0C               	btfsc	(inicializarObjetos@i_806+1)^0,7,c
 11866  00147C  EF49  F00A         	goto	u3481
 11867  001480  500C               	movf	(inicializarObjetos@i_806+1)^0,w,c
 11868  001482  E109               	bnz	u3480
 11869  001484  0E18               	movlw	24
 11870  001486  5C0B               	subwf	inicializarObjetos@i_806^0,w,c
 11871  001488  A0D8               	btfss	status,0,c
 11872  00148A  EF49  F00A         	goto	u3481
 11873  00148E  EF4B  F00A         	goto	u3480
 11874  001492                     u3481:
 11875  001492  EFF7  F009         	goto	l4400
 11876  001496                     u3480:
 11877  001496  0012               	return		;funcret
 11878  001498                     __end_of_inicializarObjetos:
 11879                           	opt callstack 0
 11880                           
 11881 ;; *************** function ___wmul *****************
 11882 ;; Defined at:
 11883 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 11884 ;; Parameters:    Size  Location     Type
 11885 ;;  multiplier      2    0[COMRAM] unsigned int 
 11886 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11887 ;; Auto vars:     Size  Location     Type
 11888 ;;  product         2    4[COMRAM] unsigned int 
 11889 ;; Return value:  Size  Location     Type
 11890 ;;                  2    0[COMRAM] unsigned int 
 11891 ;; Registers used:
 11892 ;;		wreg, status,2, status,0, prodl, prodh
 11893 ;; Tracked objects:
 11894 ;;		On entry : 0/0
 11895 ;;		On exit  : 0/0
 11896 ;;		Unchanged: 0/0
 11897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11898 ;;      Params:         4       0       0       0       0       0       0       0       0
 11899 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11900 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11901 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11902 ;;Total ram usage:        6 bytes
 11903 ;; Hardware stack levels used:    1
 11904 ;; Hardware stack levels required when called:    1
 11905 ;; This function calls:
 11906 ;;		Nothing
 11907 ;; This function is called by:
 11908 ;;		_inicializarObjetos
 11909 ;;		_escribeHorariosMemoria
 11910 ;;		_leeHorariosMemoria
 11911 ;;		_dameDatosSistema
 11912 ;;		_atoi
 11913 ;; This function uses a non-reentrant model
 11914 ;;
 11915                           
 11916                           	psect	text66
 11917  002EBE                     __ptext66:
 11918                           	opt callstack 0
 11919  002EBE                     ___wmul:
 11920                           	opt callstack 23
 11921  002EBE  5001               	movf	___wmul@multiplier^0,w,c
 11922  002EC0  0203               	mulwf	___wmul@multiplicand^0,c
 11923  002EC2  CFF3 F005          	movff	prodl,___wmul@product
 11924  002EC6  CFF4 F006          	movff	prodh,___wmul@product+1
 11925  002ECA  5001               	movf	___wmul@multiplier^0,w,c
 11926  002ECC  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11927  002ECE  50F3               	movf	243,w,c
 11928  002ED0  2606               	addwf	(___wmul@product+1)^0,f,c
 11929  002ED2  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11930  002ED4  0203               	mulwf	___wmul@multiplicand^0,c
 11931  002ED6  50F3               	movf	243,w,c
 11932  002ED8  2606               	addwf	(___wmul@product+1)^0,f,c
 11933  002EDA  C005  F001         	movff	___wmul@product,?___wmul
 11934  002EDE  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11935  002EE2  0012               	return		;funcret
 11936  002EE4                     __end_of___wmul:
 11937                           	opt callstack 0
 11938                           
 11939 ;; *************** function _i2c_iniciar *****************
 11940 ;; Defined at:
 11941 ;;		line 4 in file "./I2C.h"
 11942 ;; Parameters:    Size  Location     Type
 11943 ;;		None
 11944 ;; Auto vars:     Size  Location     Type
 11945 ;;		None
 11946 ;; Return value:  Size  Location     Type
 11947 ;;                  1    wreg      void 
 11948 ;; Registers used:
 11949 ;;		wreg, status,2
 11950 ;; Tracked objects:
 11951 ;;		On entry : 0/0
 11952 ;;		On exit  : 0/0
 11953 ;;		Unchanged: 0/0
 11954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11955 ;;      Params:         0       0       0       0       0       0       0       0       0
 11956 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11957 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11958 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11959 ;;Total ram usage:        0 bytes
 11960 ;; Hardware stack levels used:    1
 11961 ;; Hardware stack levels required when called:    1
 11962 ;; This function calls:
 11963 ;;		Nothing
 11964 ;; This function is called by:
 11965 ;;		_main
 11966 ;; This function uses a non-reentrant model
 11967 ;;
 11968                           
 11969                           	psect	text67
 11970  002F72                     __ptext67:
 11971                           	opt callstack 0
 11972  002F72                     _i2c_iniciar:
 11973                           	opt callstack 29
 11974  002F72                     
 11975                           ;./I2C.h: 5:     TRISBbits.RB0 = 1;
 11976  002F72  8093               	bsf	147,0,c	;volatile
 11977                           
 11978                           ;./I2C.h: 6:     TRISBbits.RB1 = 1;
 11979  002F74  8293               	bsf	147,1,c	;volatile
 11980  002F76                     
 11981                           ;./I2C.h: 7:     SSPSTAT = 0b10000000;
 11982  002F76  0E80               	movlw	128
 11983  002F78  6EC7               	movwf	199,c	;volatile
 11984                           
 11985                           ;./I2C.h: 8:     SSPCON1 = 0b00101000;
 11986  002F7A  0E28               	movlw	40
 11987  002F7C  6EC6               	movwf	198,c	;volatile
 11988                           
 11989                           ;./I2C.h: 9:     SSPCON2 = 0b00000000;
 11990  002F7E  0E00               	movlw	0
 11991  002F80  6EC5               	movwf	197,c	;volatile
 11992                           
 11993                           ;./I2C.h: 10:     SSPADD = 9;
 11994  002F82  0E09               	movlw	9
 11995  002F84  6EC8               	movwf	200,c	;volatile
 11996  002F86  0012               	return		;funcret
 11997  002F88                     __end_of_i2c_iniciar:
 11998                           	opt callstack 0
 11999                           
 12000 ;; *************** function _configurarAdc *****************
 12001 ;; Defined at:
 12002 ;;		line 138 in file "main.c"
 12003 ;; Parameters:    Size  Location     Type
 12004 ;;		None
 12005 ;; Auto vars:     Size  Location     Type
 12006 ;;		None
 12007 ;; Return value:  Size  Location     Type
 12008 ;;                  1    wreg      void 
 12009 ;; Registers used:
 12010 ;;		wreg, status,2
 12011 ;; Tracked objects:
 12012 ;;		On entry : 0/0
 12013 ;;		On exit  : 0/0
 12014 ;;		Unchanged: 0/0
 12015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12016 ;;      Params:         0       0       0       0       0       0       0       0       0
 12017 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12018 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12019 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12020 ;;Total ram usage:        0 bytes
 12021 ;; Hardware stack levels used:    1
 12022 ;; Hardware stack levels required when called:    1
 12023 ;; This function calls:
 12024 ;;		Nothing
 12025 ;; This function is called by:
 12026 ;;		_main
 12027 ;; This function uses a non-reentrant model
 12028 ;;
 12029                           
 12030                           	psect	text68
 12031  002FBA                     __ptext68:
 12032                           	opt callstack 0
 12033  002FBA                     _configurarAdc:
 12034                           	opt callstack 29
 12035  002FBA                     
 12036                           ;main.c: 139:     ADCON1 = 0b00000000;
 12037  002FBA  0E00               	movlw	0
 12038  002FBC  6EC1               	movwf	193,c	;volatile
 12039                           
 12040                           ;main.c: 140:     ADCON2 = 0b10100101;
 12041  002FBE  0EA5               	movlw	165
 12042  002FC0  6EC0               	movwf	192,c	;volatile
 12043  002FC2  0012               	return		;funcret
 12044  002FC4                     __end_of_configurarAdc:
 12045                           	opt callstack 0
 12046                           
 12047 ;; *************** function _UART_init *****************
 12048 ;; Defined at:
 12049 ;;		line 12 in file "./UART.h"
 12050 ;; Parameters:    Size  Location     Type
 12051 ;;  BAUD            4   26[COMRAM] long 
 12052 ;; Auto vars:     Size  Location     Type
 12053 ;;  frecuenciaCr    4    0        long 
 12054 ;; Return value:  Size  Location     Type
 12055 ;;                  1    wreg      void 
 12056 ;; Registers used:
 12057 ;;		wreg, status,2, status,0, cstack
 12058 ;; Tracked objects:
 12059 ;;		On entry : 0/0
 12060 ;;		On exit  : 0/0
 12061 ;;		Unchanged: 0/0
 12062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12063 ;;      Params:         4       0       0       0       0       0       0       0       0
 12064 ;;      Locals:         8       0       0       0       0       0       0       0       0
 12065 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12066 ;;      Totals:        12       0       0       0       0       0       0       0       0
 12067 ;;Total ram usage:       12 bytes
 12068 ;; Hardware stack levels used:    1
 12069 ;; Hardware stack levels required when called:    2
 12070 ;; This function calls:
 12071 ;;		___aldiv
 12072 ;; This function is called by:
 12073 ;;		_main
 12074 ;; This function uses a non-reentrant model
 12075 ;;
 12076                           
 12077                           	psect	text69
 12078  002720                     __ptext69:
 12079                           	opt callstack 0
 12080  002720                     _UART_init:
 12081                           	opt callstack 28
 12082  002720                     
 12083                           ;./UART.h: 14:     TRISCbits.TRISC6 = 0;
 12084  002720  9C94               	bcf	148,6,c	;volatile
 12085  002722                     
 12086                           ;./UART.h: 15:     TRISCbits.TRISC7 = 1;
 12087  002722  8E94               	bsf	148,7,c	;volatile
 12088  002724                     
 12089                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 12090  002724  0E10               	movlw	16
 12091  002726  6E11               	movwf	___aldiv@divisor^0,c
 12092  002728  0E00               	movlw	0
 12093  00272A  6E12               	movwf	(___aldiv@divisor+1)^0,c
 12094  00272C  0E00               	movlw	0
 12095  00272E  6E13               	movwf	(___aldiv@divisor+2)^0,c
 12096  002730  0E00               	movlw	0
 12097  002732  6E14               	movwf	(___aldiv@divisor+3)^0,c
 12098  002734  0E00               	movlw	0
 12099  002736  6E0D               	movwf	___aldiv@dividend^0,c
 12100  002738  0E09               	movlw	9
 12101  00273A  6E0E               	movwf	(___aldiv@dividend+1)^0,c
 12102  00273C  0E3D               	movlw	61
 12103  00273E  6E0F               	movwf	(___aldiv@dividend+2)^0,c
 12104  002740  0E00               	movlw	0
 12105  002742  6E10               	movwf	(___aldiv@dividend+3)^0,c
 12106  002744  EC7B  F00D         	call	___aldiv	;wreg free
 12107  002748  C00D  F023         	movff	?___aldiv,_UART_init$1915
 12108  00274C  C00E  F024         	movff	?___aldiv+1,_UART_init$1915+1
 12109  002750  C00F  F025         	movff	?___aldiv+2,_UART_init$1915+2
 12110  002754  C010  F026         	movff	?___aldiv+3,_UART_init$1915+3
 12111  002758                     
 12112                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 12113  002758  C023  F00D         	movff	_UART_init$1915,___aldiv@dividend
 12114  00275C  C024  F00E         	movff	_UART_init$1915+1,___aldiv@dividend+1
 12115  002760  C025  F00F         	movff	_UART_init$1915+2,___aldiv@dividend+2
 12116  002764  C026  F010         	movff	_UART_init$1915+3,___aldiv@dividend+3
 12117  002768  C01B  F011         	movff	UART_init@BAUD,___aldiv@divisor
 12118  00276C  C01C  F012         	movff	UART_init@BAUD+1,___aldiv@divisor+1
 12119  002770  C01D  F013         	movff	UART_init@BAUD+2,___aldiv@divisor+2
 12120  002774  C01E  F014         	movff	UART_init@BAUD+3,___aldiv@divisor+3
 12121  002778  EC7B  F00D         	call	___aldiv	;wreg free
 12122  00277C  040D               	decf	?___aldiv^0,w,c
 12123  00277E  6EAF               	movwf	175,c	;volatile
 12124  002780                     
 12125                           ;./UART.h: 21:     TXSTAbits.BRGH = 1;
 12126  002780  84AC               	bsf	172,2,c	;volatile
 12127  002782                     
 12128                           ;./UART.h: 22:     TXSTAbits.SYNC = 0;
 12129  002782  98AC               	bcf	172,4,c	;volatile
 12130  002784                     
 12131                           ;./UART.h: 23:     RCSTAbits.SPEN = 1;
 12132  002784  8EAB               	bsf	171,7,c	;volatile
 12133  002786                     
 12134                           ;./UART.h: 26:     TXSTAbits.TX9 = 0;
 12135  002786  9CAC               	bcf	172,6,c	;volatile
 12136  002788                     
 12137                           ;./UART.h: 27:     TXSTAbits.TXEN = 1;
 12138  002788  8AAC               	bsf	172,5,c	;volatile
 12139  00278A                     
 12140                           ;./UART.h: 30:     RCSTAbits.RC9 = 0;
 12141  00278A  9CAB               	bcf	171,6,c	;volatile
 12142  00278C                     
 12143                           ;./UART.h: 31:     RCSTAbits.CREN = 1;
 12144  00278C  88AB               	bsf	171,4,c	;volatile
 12145  00278E  0012               	return		;funcret
 12146  002790                     __end_of_UART_init:
 12147                           	opt callstack 0
 12148                           
 12149 ;; *************** function ___aldiv *****************
 12150 ;; Defined at:
 12151 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 12152 ;; Parameters:    Size  Location     Type
 12153 ;;  dividend        4   12[COMRAM] long 
 12154 ;;  divisor         4   16[COMRAM] long 
 12155 ;; Auto vars:     Size  Location     Type
 12156 ;;  quotient        4   22[COMRAM] long 
 12157 ;;  sign            1   21[COMRAM] unsigned char 
 12158 ;;  counter         1   20[COMRAM] unsigned char 
 12159 ;; Return value:  Size  Location     Type
 12160 ;;                  4   12[COMRAM] long 
 12161 ;; Registers used:
 12162 ;;		wreg, status,2, status,0
 12163 ;; Tracked objects:
 12164 ;;		On entry : 0/0
 12165 ;;		On exit  : 0/0
 12166 ;;		Unchanged: 0/0
 12167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12168 ;;      Params:         8       0       0       0       0       0       0       0       0
 12169 ;;      Locals:         6       0       0       0       0       0       0       0       0
 12170 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12171 ;;      Totals:        14       0       0       0       0       0       0       0       0
 12172 ;;Total ram usage:       14 bytes
 12173 ;; Hardware stack levels used:    1
 12174 ;; Hardware stack levels required when called:    1
 12175 ;; This function calls:
 12176 ;;		Nothing
 12177 ;; This function is called by:
 12178 ;;		_UART_init
 12179 ;;		_map
 12180 ;; This function uses a non-reentrant model
 12181 ;;
 12182                           
 12183                           	psect	text70
 12184  001AF6                     __ptext70:
 12185                           	opt callstack 0
 12186  001AF6                     ___aldiv:
 12187                           	opt callstack 26
 12188  001AF6  0E00               	movlw	0
 12189  001AF8  6E16               	movwf	___aldiv@sign^0,c
 12190  001AFA  BE14               	btfsc	(___aldiv@divisor+3)^0,7,c
 12191  001AFC  EF84  F00D         	goto	u2740
 12192  001B00  EF82  F00D         	goto	u2741
 12193  001B04                     u2741:
 12194  001B04  EF8E  F00D         	goto	l3584
 12195  001B08                     u2740:
 12196  001B08  1E14               	comf	(___aldiv@divisor+3)^0,f,c
 12197  001B0A  1E13               	comf	(___aldiv@divisor+2)^0,f,c
 12198  001B0C  1E12               	comf	(___aldiv@divisor+1)^0,f,c
 12199  001B0E  6C11               	negf	___aldiv@divisor^0,c
 12200  001B10  0E00               	movlw	0
 12201  001B12  2212               	addwfc	(___aldiv@divisor+1)^0,f,c
 12202  001B14  2213               	addwfc	(___aldiv@divisor+2)^0,f,c
 12203  001B16  2214               	addwfc	(___aldiv@divisor+3)^0,f,c
 12204  001B18  0E01               	movlw	1
 12205  001B1A  6E16               	movwf	___aldiv@sign^0,c
 12206  001B1C                     l3584:
 12207  001B1C  BE10               	btfsc	(___aldiv@dividend+3)^0,7,c
 12208  001B1E  EF95  F00D         	goto	u2750
 12209  001B22  EF93  F00D         	goto	u2751
 12210  001B26                     u2751:
 12211  001B26  EF9F  F00D         	goto	l3590
 12212  001B2A                     u2750:
 12213  001B2A  1E10               	comf	(___aldiv@dividend+3)^0,f,c
 12214  001B2C  1E0F               	comf	(___aldiv@dividend+2)^0,f,c
 12215  001B2E  1E0E               	comf	(___aldiv@dividend+1)^0,f,c
 12216  001B30  6C0D               	negf	___aldiv@dividend^0,c
 12217  001B32  0E00               	movlw	0
 12218  001B34  220E               	addwfc	(___aldiv@dividend+1)^0,f,c
 12219  001B36  220F               	addwfc	(___aldiv@dividend+2)^0,f,c
 12220  001B38  2210               	addwfc	(___aldiv@dividend+3)^0,f,c
 12221  001B3A  0E01               	movlw	1
 12222  001B3C  1A16               	xorwf	___aldiv@sign^0,f,c
 12223  001B3E                     l3590:
 12224  001B3E  0E00               	movlw	0
 12225  001B40  6E17               	movwf	___aldiv@quotient^0,c
 12226  001B42  0E00               	movlw	0
 12227  001B44  6E18               	movwf	(___aldiv@quotient+1)^0,c
 12228  001B46  0E00               	movlw	0
 12229  001B48  6E19               	movwf	(___aldiv@quotient+2)^0,c
 12230  001B4A  0E00               	movlw	0
 12231  001B4C  6E1A               	movwf	(___aldiv@quotient+3)^0,c
 12232  001B4E  5011               	movf	___aldiv@divisor^0,w,c
 12233  001B50  1012               	iorwf	(___aldiv@divisor+1)^0,w,c
 12234  001B52  1013               	iorwf	(___aldiv@divisor+2)^0,w,c
 12235  001B54  1014               	iorwf	(___aldiv@divisor+3)^0,w,c
 12236  001B56  B4D8               	btfsc	status,2,c
 12237  001B58  EFB0  F00D         	goto	u2761
 12238  001B5C  EFB2  F00D         	goto	u2760
 12239  001B60                     u2761:
 12240  001B60  EFE8  F00D         	goto	l3612
 12241  001B64                     u2760:
 12242  001B64  0E01               	movlw	1
 12243  001B66  6E15               	movwf	___aldiv@counter^0,c
 12244  001B68  EFBC  F00D         	goto	l3598
 12245  001B6C                     l3596:
 12246  001B6C  90D8               	bcf	status,0,c
 12247  001B6E  3611               	rlcf	___aldiv@divisor^0,f,c
 12248  001B70  3612               	rlcf	(___aldiv@divisor+1)^0,f,c
 12249  001B72  3613               	rlcf	(___aldiv@divisor+2)^0,f,c
 12250  001B74  3614               	rlcf	(___aldiv@divisor+3)^0,f,c
 12251  001B76  2A15               	incf	___aldiv@counter^0,f,c
 12252  001B78                     l3598:
 12253  001B78  AE14               	btfss	(___aldiv@divisor+3)^0,7,c
 12254  001B7A  EFC1  F00D         	goto	u2771
 12255  001B7E  EFC3  F00D         	goto	u2770
 12256  001B82                     u2771:
 12257  001B82  EFB6  F00D         	goto	l3596
 12258  001B86                     u2770:
 12259  001B86                     l3600:
 12260  001B86  90D8               	bcf	status,0,c
 12261  001B88  3617               	rlcf	___aldiv@quotient^0,f,c
 12262  001B8A  3618               	rlcf	(___aldiv@quotient+1)^0,f,c
 12263  001B8C  3619               	rlcf	(___aldiv@quotient+2)^0,f,c
 12264  001B8E  361A               	rlcf	(___aldiv@quotient+3)^0,f,c
 12265  001B90  5011               	movf	___aldiv@divisor^0,w,c
 12266  001B92  5C0D               	subwf	___aldiv@dividend^0,w,c
 12267  001B94  5012               	movf	(___aldiv@divisor+1)^0,w,c
 12268  001B96  580E               	subwfb	(___aldiv@dividend+1)^0,w,c
 12269  001B98  5013               	movf	(___aldiv@divisor+2)^0,w,c
 12270  001B9A  580F               	subwfb	(___aldiv@dividend+2)^0,w,c
 12271  001B9C  5014               	movf	(___aldiv@divisor+3)^0,w,c
 12272  001B9E  5810               	subwfb	(___aldiv@dividend+3)^0,w,c
 12273  001BA0  A0D8               	btfss	status,0,c
 12274  001BA2  EFD5  F00D         	goto	u2781
 12275  001BA6  EFD7  F00D         	goto	u2780
 12276  001BAA                     u2781:
 12277  001BAA  EFE0  F00D         	goto	l3608
 12278  001BAE                     u2780:
 12279  001BAE  5011               	movf	___aldiv@divisor^0,w,c
 12280  001BB0  5E0D               	subwf	___aldiv@dividend^0,f,c
 12281  001BB2  5012               	movf	(___aldiv@divisor+1)^0,w,c
 12282  001BB4  5A0E               	subwfb	(___aldiv@dividend+1)^0,f,c
 12283  001BB6  5013               	movf	(___aldiv@divisor+2)^0,w,c
 12284  001BB8  5A0F               	subwfb	(___aldiv@dividend+2)^0,f,c
 12285  001BBA  5014               	movf	(___aldiv@divisor+3)^0,w,c
 12286  001BBC  5A10               	subwfb	(___aldiv@dividend+3)^0,f,c
 12287  001BBE  8017               	bsf	___aldiv@quotient^0,0,c
 12288  001BC0                     l3608:
 12289  001BC0  90D8               	bcf	status,0,c
 12290  001BC2  3214               	rrcf	(___aldiv@divisor+3)^0,f,c
 12291  001BC4  3213               	rrcf	(___aldiv@divisor+2)^0,f,c
 12292  001BC6  3212               	rrcf	(___aldiv@divisor+1)^0,f,c
 12293  001BC8  3211               	rrcf	___aldiv@divisor^0,f,c
 12294  001BCA  2E15               	decfsz	___aldiv@counter^0,f,c
 12295  001BCC  EFC3  F00D         	goto	l3600
 12296  001BD0                     l3612:
 12297  001BD0  5016               	movf	___aldiv@sign^0,w,c
 12298  001BD2  B4D8               	btfsc	status,2,c
 12299  001BD4  EFEE  F00D         	goto	u2791
 12300  001BD8  EFF0  F00D         	goto	u2790
 12301  001BDC                     u2791:
 12302  001BDC  EFF8  F00D         	goto	l3616
 12303  001BE0                     u2790:
 12304  001BE0  1E1A               	comf	(___aldiv@quotient+3)^0,f,c
 12305  001BE2  1E19               	comf	(___aldiv@quotient+2)^0,f,c
 12306  001BE4  1E18               	comf	(___aldiv@quotient+1)^0,f,c
 12307  001BE6  6C17               	negf	___aldiv@quotient^0,c
 12308  001BE8  0E00               	movlw	0
 12309  001BEA  2218               	addwfc	(___aldiv@quotient+1)^0,f,c
 12310  001BEC  2219               	addwfc	(___aldiv@quotient+2)^0,f,c
 12311  001BEE  221A               	addwfc	(___aldiv@quotient+3)^0,f,c
 12312  001BF0                     l3616:
 12313  001BF0  C017  F00D         	movff	___aldiv@quotient,?___aldiv
 12314  001BF4  C018  F00E         	movff	___aldiv@quotient+1,?___aldiv+1
 12315  001BF8  C019  F00F         	movff	___aldiv@quotient+2,?___aldiv+2
 12316  001BFC  C01A  F010         	movff	___aldiv@quotient+3,?___aldiv+3
 12317  001C00  0012               	return		;funcret
 12318  001C02                     __end_of___aldiv:
 12319                           	opt callstack 0
 12320                           
 12321 ;; *************** function _desbordamiento *****************
 12322 ;; Defined at:
 12323 ;;		line 100 in file "main.c"
 12324 ;; Parameters:    Size  Location     Type
 12325 ;;		None
 12326 ;; Auto vars:     Size  Location     Type
 12327 ;;		None
 12328 ;; Return value:  Size  Location     Type
 12329 ;;                  1    wreg      void 
 12330 ;; Registers used:
 12331 ;;		wreg, status,2, status,0
 12332 ;; Tracked objects:
 12333 ;;		On entry : 0/0
 12334 ;;		On exit  : 0/0
 12335 ;;		Unchanged: 0/0
 12336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12337 ;;      Params:         0       0       0       0       0       0       0       0       0
 12338 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12339 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12340 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12341 ;;Total ram usage:        0 bytes
 12342 ;; Hardware stack levels used:    1
 12343 ;; This function calls:
 12344 ;;		Nothing
 12345 ;; This function is called by:
 12346 ;;		Interrupt level 2
 12347 ;; This function uses a non-reentrant model
 12348 ;;
 12349                           
 12350                           	psect	intcode
 12351  000008                     __pintcode:
 12352                           	opt callstack 0
 12353  000008                     _desbordamiento:
 12354                           	opt callstack 19
 12355                           
 12356                           ;incstack = 0
 12357  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12358  00000A  ED31  F014         	call	int_func,f	;refresh shadow registers
 12359                           
 12360                           	psect	intcode_body
 12361  002862                     __pintcode_body:
 12362                           	opt callstack 19
 12363  002862                     int_func:
 12364                           	opt callstack 19
 12365  002862  0006               	pop		; remove dummy address from shadow register refresh
 12366  002864                     
 12367                           ;main.c: 102:     if (INTCONbits.TMR0IF) {
 12368  002864  A4F2               	btfss	242,2,c	;volatile
 12369  002866  EF37  F014         	goto	i2u363_41
 12370  00286A  EF39  F014         	goto	i2u363_40
 12371  00286E                     i2u363_41:
 12372  00286E  EF56  F014         	goto	i2l4554
 12373  002872                     i2u363_40:
 12374  002872                     
 12375                           ;main.c: 104:         if (esperandoDatos) {
 12376  002872  0101               	movlb	1	; () banked
 12377  002874  517D               	movf	_esperandoDatos& (0+255),w,b
 12378  002876  B4D8               	btfsc	status,2,c
 12379  002878  EF40  F014         	goto	i2u364_41
 12380  00287C  EF42  F014         	goto	i2u364_40
 12381  002880                     i2u364_41:
 12382  002880  EF4E  F014         	goto	i2l4550
 12383  002884                     i2u364_40:
 12384  002884                     
 12385                           ; BSR set to: 1
 12386                           ;main.c: 106:             tiempoInactividadTrans++;
 12387  002884  0100               	movlb	0	; () banked
 12388  002886  2BFE               	incf	_tiempoInactividadTrans& (0+255),f,b
 12389  002888                     
 12390                           ; BSR set to: 0
 12391                           ;main.c: 108:             if (tiempoInactividadTrans == 1)
 12392  002888  05FE               	decf	_tiempoInactividadTrans& (0+255),w,b
 12393  00288A  A4D8               	btfss	status,2,c
 12394  00288C  EF4A  F014         	goto	i2u365_41
 12395  002890  EF4C  F014         	goto	i2u365_40
 12396  002894                     i2u365_41:
 12397  002894  EF4E  F014         	goto	i2l4550
 12398  002898                     i2u365_40:
 12399  002898                     
 12400                           ; BSR set to: 0
 12401                           ;main.c: 109:                 esperaDatoConcluida = 1;
 12402  002898  0E01               	movlw	1
 12403  00289A  6FFD               	movwf	_esperaDatoConcluida& (0+255),b
 12404  00289C                     i2l4550:
 12405                           
 12406                           ;main.c: 114:         INTCONbits.TMR0IF = 0;
 12407  00289C  94F2               	bcf	242,2,c	;volatile
 12408  00289E                     
 12409                           ;main.c: 115:         TMR0 = VALOR_TIMER0;
 12410  00289E  C1A6  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
 12411  0028A2  C1A7  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
 12412                           
 12413                           ;main.c: 116:         overflowTimer = 1;
 12414  0028A6  0E01               	movlw	1
 12415  0028A8  0101               	movlb	1	; () banked
 12416  0028AA  6F7A               	movwf	_overflowTimer& (0+255),b
 12417  0028AC                     i2l4554:
 12418                           
 12419                           ;main.c: 120:     if (PIR1bits.RCIF) {
 12420  0028AC  AA9E               	btfss	158,5,c	;volatile
 12421  0028AE  EF5B  F014         	goto	i2u366_41
 12422  0028B2  EF5D  F014         	goto	i2u366_40
 12423  0028B6                     i2u366_41:
 12424  0028B6  EF62  F014         	goto	i2l209
 12425  0028BA                     i2u366_40:
 12426  0028BA                     
 12427                           ;main.c: 122:         byteUart = RCREG;
 12428  0028BA  CFAE F17E          	movff	4014,_byteUart	;volatile
 12429  0028BE                     
 12430                           ;main.c: 123:         datoRecibido = 1;
 12431  0028BE  0E01               	movlw	1
 12432  0028C0  0101               	movlb	1	; () banked
 12433  0028C2  6F7B               	movwf	_datoRecibido& (0+255),b
 12434  0028C4                     i2l209:
 12435  0028C4  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12436  0028C6  0011               	retfie		f
 12437  0028C8                     __end_of_desbordamiento:
 12438                           	opt callstack 0
 12439                           
 12440                           	psect	rparam
 12441  0000                     
 12442                           	psect	temp
 12443  00005F                     btemp:
 12444                           	opt callstack 0
 12445  00005F                     	ds	1
 12446  0000                     int$flags	set	btemp
 12447  0000                     wtemp8	set	btemp+1
 12448  0000                     ttemp5	set	btemp+1
 12449  0000                     ttemp6	set	btemp+4
 12450  0000                     ttemp7	set	btemp+8
 12451                           tosu	equ	0xFFF
 12452                           tosh	equ	0xFFE
 12453                           tosl	equ	0xFFD
 12454                           stkptr	equ	0xFFC
 12455                           pclatu	equ	0xFFB
 12456                           pclath	equ	0xFFA
 12457                           pcl	equ	0xFF9
 12458                           tblptru	equ	0xFF8
 12459                           tblptrh	equ	0xFF7
 12460                           tblptrl	equ	0xFF6
 12461                           tablat	equ	0xFF5
 12462                           prodh	equ	0xFF4
 12463                           prodl	equ	0xFF3
 12464                           indf0	equ	0xFEF
 12465                           postinc0	equ	0xFEE
 12466                           postdec0	equ	0xFED
 12467                           preinc0	equ	0xFEC
 12468                           plusw0	equ	0xFEB
 12469                           fsr0h	equ	0xFEA
 12470                           fsr0l	equ	0xFE9
 12471                           wreg	equ	0xFE8
 12472                           indf1	equ	0xFE7
 12473                           postinc1	equ	0xFE6
 12474                           postdec1	equ	0xFE5
 12475                           preinc1	equ	0xFE4
 12476                           plusw1	equ	0xFE3
 12477                           fsr1h	equ	0xFE2
 12478                           fsr1l	equ	0xFE1
 12479                           bsr	equ	0xFE0
 12480                           indf2	equ	0xFDF
 12481                           postinc2	equ	0xFDE
 12482                           postdec2	equ	0xFDD
 12483                           preinc2	equ	0xFDC
 12484                           plusw2	equ	0xFDB
 12485                           fsr2h	equ	0xFDA
 12486                           fsr2l	equ	0xFD9
 12487                           status	equ	0xFD8


Data Sizes:
    Strings     1557
    Constant    0
    Data        11
    BSS         363
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    139     159
    BANK1           256    104     170
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), dameDatosSistema@diasRegar(BANK0[50]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), dameDatosSistema@diasRegar(BANK0[50]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 53
		 -> STR_41(CODE[45]), STR_40(CODE[29]), STR_39(CODE[32]), STR_38(CODE[45]), 
		 -> STR_37(CODE[29]), STR_36(CODE[32]), STR_34(CODE[53]), STR_19(CODE[51]), 
		 -> STR_12(CODE[9]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@bufferSensor(BANK1[50]), mostrarDatosSensoresWIFI@buffer(BANK1[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), 
		 -> lecturaWifi@buffer(BANK0[50]), asignarHorarios@buffer(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@bufferSensor(BANK1[50]), mostrarDatosSensoresWIFI@buffer(BANK1[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), 
		 -> lecturaWifi@buffer(BANK0[50]), asignarHorarios@buffer(BANK0[50]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1586_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@bufferSensor(BANK1[50]), mostrarDatosSensoresWIFI@buffer(BANK1[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), 
		 -> lecturaWifi@buffer(BANK0[50]), asignarHorarios@buffer(BANK0[50]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@bufferSensor(BANK1[50]), mostrarDatosSensoresWIFI@buffer(BANK1[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), 
		 -> lecturaWifi@buffer(BANK0[50]), asignarHorarios@buffer(BANK0[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 53
		 -> STR_41(CODE[45]), STR_40(CODE[29]), STR_39(CODE[32]), STR_38(CODE[45]), 
		 -> STR_37(CODE[29]), STR_36(CODE[32]), STR_34(CODE[53]), STR_19(CODE[51]), 
		 -> STR_12(CODE[9]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 53
		 -> STR_41(CODE[45]), STR_40(CODE[29]), STR_39(CODE[32]), STR_38(CODE[45]), 
		 -> STR_37(CODE[29]), STR_36(CODE[32]), STR_34(CODE[53]), STR_19(CODE[51]), 
		 -> STR_12(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 53
		 -> STR_41(CODE[45]), STR_40(CODE[29]), STR_39(CODE[32]), STR_38(CODE[45]), 
		 -> STR_37(CODE[29]), STR_36(CODE[32]), STR_34(CODE[53]), STR_19(CODE[51]), 
		 -> STR_12(CODE[9]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), dameDatosSistema@diasRegar(BANK0[50]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), dameDatosSistema@diasRegar(BANK0[50]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dameDatosSistema@diasRegar(BANK0[50]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    dameTemperaturaHumedad@Temperatura	PTR unsigned char  size(2) Largest target is 1
		 -> mostrarDatosSensoresWIFI@temperatura(BANK1[1]), mostrarDatosSensores@temperatura(BANK0[1]), estaSeco@temperatura(COMRAM[1]), 

    dameTemperaturaHumedad@Humedad	PTR unsigned char  size(2) Largest target is 1
		 -> mostrarDatosSensoresWIFI@humedad(BANK1[1]), mostrarDatosSensores@humedad(BANK0[1]), NULL(NULL[0]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 72
		 -> STR_49(CODE[58]), STR_48(CODE[57]), STR_47(CODE[57]), STR_46(CODE[20]), 
		 -> STR_45(CODE[18]), STR_44(CODE[11]), STR_43(CODE[9]), STR_42(CODE[17]), 
		 -> mostrarDatosSensoresWIFI@bufferSensor(BANK1[50]), mostrarDatosSensoresWIFI@buffer(BANK1[50]), mostrarDatosSensores@buffer(BANK0[50]), STR_35(CODE[25]), 
		 -> dameDatosSistema@buffer(BANK0[50]), STR_33(CODE[55]), STR_32(CODE[62]), STR_31(CODE[42]), 
		 -> STR_30(CODE[3]), STR_29(CODE[14]), STR_28(CODE[26]), STR_27(CODE[23]), 
		 -> STR_26(CODE[34]), STR_25(CODE[32]), STR_24(CODE[49]), STR_23(CODE[37]), 
		 -> STR_22(CODE[27]), STR_21(CODE[37]), STR_20(CODE[32]), lecturaWifi@buffer(BANK0[50]), 
		 -> STR_18(CODE[38]), STR_17(CODE[37]), STR_16(CODE[72]), STR_15(CODE[51]), 
		 -> STR_14(CODE[23]), STR_13(CODE[26]), asignarHorarios@buffer(BANK0[50]), STR_11(CODE[37]), 
		 -> STR_10(CODE[59]), STR_9(CODE[59]), STR_8(CODE[51]), STR_7(CODE[25]), 
		 -> STR_6(CODE[37]), STR_5(CODE[31]), STR_4(CODE[43]), STR_3(CODE[16]), 
		 -> STR_2(CODE[36]), STR_1(CODE[65]), 


Critical Paths under _main in COMRAM

    _encenderBombas->_estaSeco
    _estaSeco->_dameTemperaturaHumedad
    _dameHoraActual->_leer_rtc
    _dameDiaActual->_leer_rtc
    _leer_rtc->_i2c_envia_dato
    _leer_rtc->_i2c_recibe_dato
    _setTiempoRegar->_escribeHorariosMemoria
    _regadoRapido->_getValue
    _mostrarMenu->_UART_printf
    _restablecerDatosSensor->_constructorSensor
    _lecturaAnalogaSensores->_map
    _map->___aldiv
    _dameTemperaturaHumedad->_UART_printf
    _fijaHoraRtc->_setRtc
    _fijaDiaRtc->_setRtc
    _setRtc->_getValue
    _escribe_rtc->_i2c_envia_dato
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _getValue->_UART_printf
    _UART_printf->_UART_write
    _escribeHorariosMemoria->_escribe_eeprom
    _escribe_eeprom->___wmul
    _leeHorariosMemoria->___wmul
    _leeHorariosMemoria->_leer_eeprom
    _leer_eeprom->_i2c_envia_dato
    _leer_eeprom->_i2c_recibe_dato
    _i2c_reinicia_com->_i2c_espera
    _i2c_recibe_dato->_i2c_espera
    _i2c_inicia_com->_i2c_espera
    _i2c_envia_dato->_i2c_espera
    _i2c_detener->_i2c_espera
    _inicializarObjetos->___wmul
    _UART_init->___aldiv
    ___aldiv->___lmul

Critical Paths under _desbordamiento in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sistemaPrincipal
    _sistemaRegado->_lecturaWifi
    _sistemaPrincipal->_dameDatosSistema
    _mostrarDatosSensoresWIFI->_lecturaWifi
    _lecturaWifi->_sprintf
    _mostrarDatosSensores->_sprintf
    _dameDatosSistema->_sprintf
    _asignarHorarios->_sprintf

Critical Paths under _desbordamiento in BANK0

    None.

Critical Paths under _main in BANK1

    _sistemaPrincipal->_mostrarDatosSensoresWIFI

Critical Paths under _desbordamiento in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _desbordamiento in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _desbordamiento in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _desbordamiento in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _desbordamiento in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _desbordamiento in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _desbordamiento in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  257282
                          _UART_init
                      _configurarAdc
                        _i2c_iniciar
                 _inicializarObjetos
                 _leeHorariosMemoria
                        _mostrarMenu
             _restablecerDatosSensor
                   _sistemaPrincipal
                      _sistemaRegado
 ---------------------------------------------------------------------------------
 (1) _sistemaRegado                                        0     0      0   41437
                      _dameDiaActual
                     _dameHoraActual
                     _encenderBombas
                          _horaRegar
             _lecturaAnalogaSensores
                        _lecturaWifi
                        _mostrarMenu
 ---------------------------------------------------------------------------------
 (2) _horaRegar                                            5     3      2      24
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _encenderBombas                                       5     5      0    5565
                                             19 COMRAM     5     5      0
                           _estaSeco
 ---------------------------------------------------------------------------------
 (3) _estaSeco                                             4     2      2    5290
                                             15 COMRAM     4     2      2
             _dameTemperaturaHumedad
 ---------------------------------------------------------------------------------
 (2) _dameHoraActual                                       0     0      0     181
                      _convertirDato
                           _leer_rtc
 ---------------------------------------------------------------------------------
 (2) _dameDiaActual                                        0     0      0     181
                      _convertirDato
                           _leer_rtc
 ---------------------------------------------------------------------------------
 (3) _leer_rtc                                             2     2      0      90
                                              2 COMRAM     2     2      0
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (3) _convertirDato                                        3     3      0      91
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _sistemaPrincipal                                     3     3      0  202976
                                            136 BANK0      3     3      0
                        _UART_printf
                    _asignarHorarios
                   _dameDatosSistema
                         _fijaDiaRtc
                        _fijaHoraRtc
               _mostrarDatosSensores
           _mostrarDatosSensoresWIFI
                        _mostrarMenu
                       _regadoRapido
                     _setTiempoRegar
 ---------------------------------------------------------------------------------
 (2) _setTiempoRegar                                       2     2      0   13260
                                             18 COMRAM     2     2      0
                        _UART_printf
             _escribeHorariosMemoria
                           _getValue
 ---------------------------------------------------------------------------------
 (2) _regadoRapido                                         4     4      0    8865
                                             14 COMRAM     4     4      0
                        _UART_printf
                           _getValue
 ---------------------------------------------------------------------------------
 (2) _mostrarMenu                                          0     0      0    3791
                        _UART_printf
 ---------------------------------------------------------------------------------
 (2) _mostrarDatosSensoresWIFI                           105   105      0   59161
                                             76 BANK0      1     1      0
                                              0 BANK1    104   104      0
                        _UART_printf
                         _UART_write
             _dameTemperaturaHumedad
                        _lecturaWifi
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lecturaWifi                                         54    54      0   29923
                                             22 BANK0     54    54      0
                        _UART_printf
                          _UART_read
                         _UART_write
                           _getValue
             _restablecerDatosSensor
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _restablecerDatosSensor                               2     2      0     387
                                              4 COMRAM     2     2      0
                  _constructorSensor
 ---------------------------------------------------------------------------------
 (4) _constructorSensor                                    4     0      4     297
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _mostrarDatosSensores                                55    55      0   31004
                                             22 BANK0     55    55      0
                        _UART_printf
                         _UART_write
             _dameTemperaturaHumedad
             _lecturaAnalogaSensores
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lecturaAnalogaSensores                               3     3      0    1772
                                             46 COMRAM     3     3      0
                   _dameHumedadSuelo
                                _map
 ---------------------------------------------------------------------------------
 (3) _map                                                 20     0     20    1660
                                             26 COMRAM    20     0     20
                            ___aldiv
                             ___lmul
                   _dameHumedadSuelo (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _dameHumedadSuelo                                     5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _dameTemperaturaHumedad                              12     8      4    4590
                                              3 COMRAM    12     8      4
                     _DHT11_ReadData
                        _DHT11_Start
                        _UART_printf
                     _check_response
 ---------------------------------------------------------------------------------
 (5) _check_response                                       1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _DHT11_ReadData                                       2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fijaHoraRtc                                          0     0      0   10705
                        _UART_printf
                        _escribe_rtc
                             _setRtc
 ---------------------------------------------------------------------------------
 (2) _fijaDiaRtc                                           0     0      0   10259
                        _UART_printf
                             _setRtc
 ---------------------------------------------------------------------------------
 (3) _setRtc                                               4     4      0    6468
                                             14 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
                        _escribe_rtc
                           _getValue
 ---------------------------------------------------------------------------------
 (4) _escribe_rtc                                          2     1      1     446
                                              2 COMRAM     2     1      1
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _dameDatosSistema                                   114   114      0   28164
                                             22 BANK0    114   114      0
                        _UART_printf
                         _UART_write
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _asignarHorarios                                     57    57      0   33954
                                             22 BANK0     57    57      0
                        _UART_printf
             _escribeHorariosMemoria
                           _getValue
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             22    10     12   20509
                                              0 BANK0     22    10     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   18936
                                             86 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           45    39      6   18568
                                             63 COMRAM    23    17      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5574
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 7     4      3    4145
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3925
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    4224
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _getValue                                            11     9      2    4983
                                              3 COMRAM    11     9      2
                        _UART_printf
                          _UART_read
                         _UART_write
 ---------------------------------------------------------------------------------
 (4) _UART_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART_printf                                          2     0      2    3791
                                              1 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (4) _UART_write                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _escribeHorariosMemoria                               8     8      0    4374
                                             10 COMRAM     8     8      0
                             ___wmul
                     _escribe_eeprom
 ---------------------------------------------------------------------------------
 (4) _escribe_eeprom                                       4     1      3     696
                                              6 COMRAM     4     1      3
                             ___wmul (ARG)
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (1) _leeHorariosMemoria                                   8     8      0    4094
                                              6 COMRAM     8     8      0
                             ___wmul
                        _leer_eeprom
 ---------------------------------------------------------------------------------
 (2) _leer_eeprom                                          4     2      2     416
                                              2 COMRAM     4     2      2
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (4) _i2c_reinicia_com                                     0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_recibe_dato                                      1     1      0      23
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_inicia_com                                       0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_envia_dato                                       1     1      0      22
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_detener                                          0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (5) _i2c_espera                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _inicializarObjetos                                   8     8      0    3697
                                              6 COMRAM     8     8      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    3383
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _i2c_iniciar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4     900
                                             26 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     756
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _desbordamiento                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
       ___lmul (ARG)
   _configurarAdc
   _i2c_iniciar
   _inicializarObjetos
     ___wmul
   _leeHorariosMemoria
     ___wmul
     _leer_eeprom
       _i2c_detener
         _i2c_espera
       _i2c_envia_dato
         _i2c_espera
       _i2c_inicia_com
         _i2c_espera
       _i2c_recibe_dato
         _i2c_espera
       _i2c_reinicia_com
         _i2c_espera
   _mostrarMenu
     _UART_printf
       _UART_write
   _restablecerDatosSensor
     _constructorSensor
   _sistemaPrincipal
     _UART_printf
       _UART_write
     _asignarHorarios
       _UART_printf
         _UART_write
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
       _getValue
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _dameDatosSistema
       _UART_printf
         _UART_write
       _UART_write
       ___wmul
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _fijaDiaRtc
       _UART_printf
         _UART_write
       _setRtc
         ___awdiv
         ___awmod
         _escribe_rtc
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
         _getValue
           _UART_printf
             _UART_write
           _UART_read
           _UART_write
     _fijaHoraRtc
       _UART_printf
         _UART_write
       _escribe_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
       _setRtc
         ___awdiv
         ___awmod
         _escribe_rtc
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
         _getValue
           _UART_printf
             _UART_write
           _UART_read
           _UART_write
     _mostrarDatosSensores
       _UART_printf
         _UART_write
       _UART_write
       _dameTemperaturaHumedad
         _DHT11_ReadData
         _DHT11_Start
         _UART_printf
           _UART_write
         _check_response
       _lecturaAnalogaSensores
         _dameHumedadSuelo
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
           _dameHumedadSuelo (ARG)
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _mostrarDatosSensoresWIFI
       _UART_printf
         _UART_write
       _UART_write
       _dameTemperaturaHumedad
         _DHT11_ReadData
         _DHT11_Start
         _UART_printf
           _UART_write
         _check_response
       _lecturaWifi
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
         _getValue
           _UART_printf
             _UART_write
           _UART_read
           _UART_write
         _restablecerDatosSensor
           _constructorSensor
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
               _isdigit
               _stoa
                 _fputc
                   _putch
                 _strlen
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _mostrarMenu
       _UART_printf
         _UART_write
     _regadoRapido
       _UART_printf
         _UART_write
       _getValue
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
     _setTiempoRegar
       _UART_printf
         _UART_write
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
       _getValue
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
   _sistemaRegado
     _dameDiaActual
       _convertirDato
       _leer_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _dameHoraActual
       _convertirDato
       _leer_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _encenderBombas
       _estaSeco
         _dameTemperaturaHumedad
           _DHT11_ReadData
           _DHT11_Start
           _UART_printf
             _UART_write
           _check_response
     _horaRegar
     _lecturaAnalogaSensores
       _dameHumedadSuelo
       _map
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _dameHumedadSuelo (ARG)
     _lecturaWifi
       _UART_printf
         _UART_write
       _UART_read
       _UART_write
       _getValue
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
       _restablecerDatosSensor
         _constructorSensor
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _mostrarMenu
       _UART_printf
         _UART_write

 _desbordamiento (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     120      21       14.1%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     68      AA       7       66.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8B      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A7      20        0.0%
DATA                 0      0     2C7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Jun 18 15:02:07 2020

                 __size_of_escribe_eeprom 0030                                        l81 2F86  
                                      l90 2FD2                                        l93 2FCA  
                                      l87 2EBC                                        l96 2FDA  
                                      l99 2FA2                              ___awdiv@sign 0006  
                          ?_configurarAdc 0001                       ___wmul@multiplicand 0003  
                             __CFG_BORV$3 000000            __end_of_dameTemperaturaHumedad 2402  
                            __CFG_CP0$OFF 000000                              __CFG_CP1$OFF 000000  
                            __CFG_CP2$OFF 000000                              __CFG_CP3$OFF 000000  
                 regadoRapido@tiempoRegar 0011                                       l102 2F5A  
                                     l111 2F02                                       l105 2F40  
                                     l124 278E                                       l132 2A96  
                                     l212 26AE                                       l108 2E96  
                                     l133 2A9A                                       l150 2990  
                                     l127 2A5E                                       l311 1742  
                                     l303 2860                                       l215 2FB8  
                                     l223 2C72                                       l136 2F62  
                                     l400 1EE4                                       l240 2E6C  
                                     l145 2986                                       l161 2F22  
                                     l321 2C1A                                       l218 2FC2  
                                     l322 2C2E                                       l139 2F70  
                                     l251 271E                                       l155 29C0  
                                     l243 2F96                                       l316 24A0  
                                     l228 25BA                                       l237 1496  
                                     l501 20BE                                       l341 235C  
                                     l254 2E40                                       l422 0980  
                                     l158 29E2                                       l166 2CF6  
                                     l406 1D06                                       l271 19BE  
                                     l247 2E10                                       l319 2C0C  
                                     l327 2BE8                                       l264 1884  
                                     l432 0A2C                                       l504 2100  
                                     l336 1DF6                                       l344 2634  
                                     l257 2D72                                       l513 2A3E  
                                     l521 0456                                       l442 0B20  
                                     l506 213C                                       l602 27E8  
                                     l450 1A3C                                       l603 27F8  
                                     l452 1A42                                       l460 1AF4  
                                     l453 1A48                                       l454 1A4E  
                                     l519 044E                                       l455 1A54  
                                     l359 2076                                       l375 132C  
                                     l456 1A5A                                       l705 1038  
                                     l457 1A60                                       l562 11BE  
                                     l546 10BA                                       l458 1A66  
                                     l298 08FC                                       l539 0690  
                                     l387 0D20                                       l395 2400  
                                     l548 10C2                                       l557 116C  
                                     l670 1C00                                       l718 15FA  
                                     l558 11B6                                       l822 2200  
                                     l591 2EE2                                       l577 03AC  
                                     l587 2920                                       l835 22B0  
                                     l588 2928                              __CFG_CPB$OFF 000000  
                            __CFG_CPD$OFF 000000                              __CFG_BOR$OFF 000000  
                                     _abs 2CF8                                       _pad 2078  
                                     _map 2636                              ___awmod@sign 0006  
                                     prod 000FF3                                       wreg 000FE8  
                __end_of_dameDatosSistema 0D22                              __CFG_LVP$OFF 000000  
                       ?_i2c_reinicia_com 0001                              ?_escribe_rtc 0003  
                            __CFG_WDT$OFF 000000                                      ?_abs 0013  
                                    l1300 0EB0                                      l1303 2DAA  
                                    l1311 2B98                                      l3100 2078  
                                    l1341 2B46                                      l1326 1FAE  
                                    l1334 2CB6                                      l1350 2DE0  
                                    l3110 20CA                                      l3102 2088  
                                    l1344 2FDC                                      l3112 20DE  
                                    l3104 209C                                      l3200 1544  
                                    l4000 1D7E                                      l3130 2EBE  
                                    l3114 20E2                                      l3106 20AA  
                                    l3210 15BA                                      l3202 1572  
                                    l1266 2D2E                                      l3122 2CF8  
                                    l4010 1DE0                                      l4002 1D90  
                                    l3132 2EDA                                      l3220 2B60  
                                    l3116 2110                                      l3108 20B6  
                                    l3140 0EC4                                      l3212 15DA  
                                    l3204 1592                                      l3124 2D12  
                                    l3300 0668                                      l4004 1DAA  
                                    l4012 1DF0                                      l4100 07E4  
                                    l1269 2D36                                      l3126 2D74  
                                    l3222 2B8E                                      l3070 1EF8  
                                    l3118 2124                                      l3230 29F8  
                                    l3150 0F1A                                      l3142 0EE4  
                                    l3206 15A4                                      l3310 1066  
                                    l4022 22BA                                      l4014 1DF4  
                                    l4006 1DC0                                      l4110 0820  
                                    l4030 253A                                      l3224 2B92  
                                    l3216 2B48                                      l3072 1F0A  
                                    l3232 2A04                                      l3160 0F6E  
                                    l3152 0F26                                      l3144 0EE8  
                                    l3136 0EB2                                      l3208 15AA  
                                    l3312 106E                                      l3304 103A  
                                    l3400 0044                                      l4024 232C  
                                    l4016 22B2                                      l4008 1DC4  
                                    l4200 2472                                      l4112 0850  
                                    l4104 07EA                                      l4120 08B2  
                                    l4040 25B4                                      l4032 253E  
                                    l1297 0EA8                                      l3218 2B4C  
                                    l3074 1F14                                      l3082 2C74  
                                    l3090 2DAC                                      l3234 2A10  
                                    l3170 0FE2                                      l3162 0F80  
                                    l3154 0F44                                      l3146 0EF6  
                                    l3138 0EB6                                      l3250 0426  
                                    l3242 03AE                                      l3330 1128  
                                    l3322 10E6                                      l3314 1082  
                                    l3306 104C                                      l3410 00C2  
                                    l3402 0056                                      l4210 0B28  
                                    l4050 2DEE                                      l4026 233C  
                                    l4202 2486                                      l4122 08B6  
                                    l4106 081A                                      l4034 2560  
                                    l3500 292A                                      l3076 1F32  
                                    l3068 1EE6                                      l3084 2C80  
                                    l3092 2DB8                                      l3236 2A14  
                                    l3228 29E4                                      l3164 0FAE  
                                    l3156 0F4C                                      l3172 0FE8  
                                    l3148 0F16                                      l3180 1498  
                                    l3260 047E                                      l3252 0428  
                                    l3244 03CE                                      l3340 1180  
                                    l3332 1146                                      l3324 10FA  
                                    l3316 108A                                      l3308 1054  
                                    l3420 0144                                      l3412 00D0  
                                    l3404 005A                                      l4220 0B4A  
                                    l4212 0B34                                      l4052 2E04  
                                    l4140 2834                                      l4028 2340  
                                    l4300 1E62                                      l4204 249C  
                                    l4044 2E42                                      l4124 08D2  
                                    l4036 2580                                      l4054 2D38  
                                    l3502 292E                                      l3350 0D3A  
                                    l3078 1F68                                      l3086 2C92  
                                    l3094 2DBC                                      l3238 2A1A  
                                    l3174 0FF8                                      l3166 0FCE  
                                    l3158 0F60                                      l3190 14DC  
                                    l3182 149C                                      l3270 051E  
                                    l3262 0484                                      l3254 0442  
                                    l3246 03F6                                      l3342 1194  
                                    l3334 114A                                      l3326 10FE  
                                    l3318 1098                                      l3430 01C8  
                                    l3414 00F0                                      l3422 0156  
                                    l3406 007E                                      l4150 1624  
                                    l4230 0B9C                                      l4222 0B7A  
                                    l4214 0B40                                      l4142 284A  
                                    l4134 27FA                                      l4310 1EB0  
                                    l4302 1E66                                      l4206 25BC  
                                    l4046 2F88                                      l4126 08E2  
                                    l4070 06D2                                      l4118 0856  
                                    l4062 0692                                      l4038 25B0  
                                    l3600 1B86                                      l4400 13EE  
                                    l4056 2D62                                      l3504 2952  
                                    l3352 0D3E                                      l3088 2C96  
                                    l3096 2DD4                                      l3176 1018  
                                    l3168 0FD0                                      l3192 14FC  
                                    l3184 14AA                                      l3280 05C6  
                                    l3272 0524                                      l3264 048C  
                                    l3256 045E                                      l3248 0416  
                                    l3344 1198                                      l3336 114E  
                                    l3328 111C                                      l3440 0290  
                                    l3432 01EC                                      l3424 017A  
                                    l3416 00FE                                      l3408 00B4  
                                    l4160 167A                                      l4152 1636  
                                    l4240 0C34                                      l4208 0B22  
                                    l4048 2DE2                                      l4144 2856  
                                    l4136 2812                                      l3520 29BA  
                                    l4312 1EBC                                      l4320 19CC  
                                    l4128 08E8                                      l4080 0712  
                                    l4072 06D4                                      l3610 1BCA  
                                    l3602 1B90                                      l4410 1436  
                                    l4058 2D70                                      l3506 2956  
                                    l3370 0DF4                                      l3362 0D9A  
                                    l3354 0D5A                                      l3346 0D22  
                                    l3194 151A                                      l3186 14CA  
                                    l3290 062C                                      l3282 05E0  
                                    l3274 052A                                      l3266 0496  
                                    l3258 0470                                      l3450 032E  
                                    l3442 02B4                                      l3434 0210  
                                    l3426 01AC                                      l4170 16B0  
                                    l4154 1642                                      l4146 15FC  
                                    l4250 0D1A                                      l4242 0CB8  
                                    l4234 0BB0                                      l4138 2828  
                                    l3522 29CE                                      l3514 299E  
                                    l3530 2F04                                      l4314 1EC2  
                                    l4330 1A16                                      l4322 19DE  
                                    l4082 0742                                      l4074 06DC  
                                    l3604 1BAE                                      l3612 1BD0  
                                    l4412 1452                                      l3620 2FC4  
                                    l3380 0E7A                                      l3364 0DB0  
                                    l3356 0D90                                      l3348 0D36  
                                    l3196 1522                                      l3188 14CE  
                                    l3292 0632                                      l3284 05FA  
                                    l3268 049C                                      l3276 058E  
                                    l3460 036A                                      l3452 033C  
                                    l3444 02EA                                      l3436 0258  
                                    l4180 171E                                      l4172 16C0  
                                    l4156 1652                                      l4148 1614  
                                    l4244 0CEC                                      l4236 0C14  
                                    l4228 0B88                                      l3524 29D0  
                                    l3516 29A4                                      l3508 2988  
                                    l3532 2F08                                      l3540 2CBC  
                                    l4316 1EDE                                      l4308 1E70  
                                    l4260 1C1C                                      l4340 1AC6  
                                    l4332 1A24                                      l4324 19EA  
                                    l4092 077E                                      l4076 070C  
                                    l4068 06A2                                      l4500 1226  
                                    l3614 1BE0                                      l3606 1BBE  
                                    l4414 1476                                      l4406 13F6  
                                    l3390 2E98                                      l3630 2F54  
                                    l3622 2FC8                                      l3710 09D6  
                                    l3702 0998                                      l3382 0E8C  
                                    l3374 0E2A                                      l3366 0DB8  
                                    l3358 0D94                                      l3198 1536  
                                    l3294 0644                                      l3278 05A8  
                                    l3286 060A                                      l3454 0350  
                                    l4182 1732                                      l4174 16D2  
                                    l4166 1684                                      l4158 1662  
                                    l4238 0C18                                      l4246 0CF8  
                                    l3526 29E0                                      l3518 29B2  
                                    l3534 2F18                                      l3550 2CF0  
                                    l3542 2CC4                                      l4270 1C70  
                                    l4262 1C38                                      l4342 1ACC  
                                    l4334 1A36                                      l4326 19F8  
                                    l4318 19C0                                      l4190 2428  
                                    l4094 07AE                                      l4086 0748  
                                    l4510 125E                                      l4502 122A  
                                    l3616 1BF0                                      l3608 1BC0  
                                    l4360 2722                                      l4352 2F72  
                                    l4416 147A                                      l4408 1432  
                                    l3392 2EAE                                      l3480 2F9A  
                                    l3472 2FCC                                      l3632 2F56  
                                    l3624 2F42                                      l4440 191E  
                                    l4424 1896                                      l3720 0A04  
                                    l3712 09F6                                      l3704 09C4  
                                    l3368 0DC0                                      l3296 0650  
                                    l3288 061C                                      l3448 030A  
                                    l3464 0376                                      l3560 28D0  
                                    l4184 1736                                      l4176 16FE  
                                    l4168 16A4                                      l4248 0CFE  
                                    l3536 2F20                                      l3544 2CD2  
                                    l3552 2CF4                                      l3800 2C0A  
                                    l3640 2636                                      l4280 1CD2  
                                    l4272 1C82                                      l4264 1C44  
                                    l4256 1C02                                      l4344 1AE0  
                                    l4328 1A0A                                      l4192 243A  
                                    l4088 0778                                      l4520 12B0  
                                    l4512 1272                                      l4504 1232  
                                    l4600 24DE                                      l4370 2784  
                                    l4362 2724                                      l4354 2F76  
                                    l3482 2F9E                                      l3474 2FD0  
                                    l3634 2F58                                      l3626 2F46  
                                    l4442 193A                                      l4434 18D0  
                                    l4426 18C4                                      l4418 1886  
                                    l3394 2F5E                                      l3490 2A6C  
                                    l3730 0A48                                      l3722 0A14  
                                    l3706 09C8                                      l3378 0E68  
                                    l3298 0658                                      l3466 039A  
                                    l3458 035C                                      l3562 28DE  
                                    l4178 1702                                      l3546 2CDA  
                                    l3538 2CB8                                      l3802 2C1C  
                                    l3570 27AE                                      l4290 1E0C  
                                    l4282 1CDE                                      l4266 1C60  
                                    l4258 1C16                                      l4338 1A6C  
                                    l4346 1AE8                                      l4194 2446  
                                    l4186 2402                                      l4450 1FB4  
                                    l4098 07B4                                      l4530 1302  
                                    l4522 12C6                                      l4514 1276  
                                    l4506 123A                                      l4610 24F4  
                                    l4602 24E6                                      l3580 1B08  
                                    l4372 2786                                      l4364 2758  
                                    l4356 2720                                      l4380 2FBA  
                                    l3388 2E98                                      l3476 2FD4  
                                    l3484 2FA2                                      l3628 2F4C  
                                    l4444 1968                                      l4436 1916  
                                    l4428 18C8                                      l3492 2A7C  
                                    l3740 0A92                                      l3724 0A24  
                                    l3708 09D2                                      l3396 0012  
                                    l3564 2904                                      l3820 2142  
                                    l3548 2CE8                                      l3660 23E4  
                                    l3652 2366                                      l3644 235E  
                                    l3572 27BE                                      l4292 1E12  
                                    l3556 2FB0                                      l3812 2BA2  
                                    l4284 1CE4                                      l4268 1C6C  
                                    l4196 2454                                      l4188 241A  
                                    l4460 1FDA                                      l4452 1FBA  
                                    l3900 2E94                                      l4532 1306  
                                    l4524 12D8                                      l4516 1288  
                                    l4508 124E                                      l4620 2526  
                                    l4612 2506                                      l4604 24E8  
                                    l3590 1B3E                                      l3582 1B18  
                                    l4374 2788                                      l4366 2780  
                                    l4358 2720                                      l4390 13C6  
                                    l4382 132E                                      l3478 2FD8  
                                    l4446 196C                                      l4438 191A  
                                    l3494 2A8C                                      l3750 0AFC  
                                    l3742 0A96                                      l3726 0A30  
                                    l3734 0A50                                      l3718 09FE  
                                    l3670 0910                                      l3398 0036  
                                    l3558 28C8                                      l3830 2172  
                                    l3822 2150                                      l3638 2F26  
                                    l3662 23FC                                      l3654 237A  
                                    l3646 2362                                      l3574 27C8  
                                    l3566 2790                                      l4294 1E2E  
                                    l3814 2BC8                                      l3806 2B9A  
                                    l4278 1C8C                                      l4286 1D00  
                                    l4198 2466                                      l4470 200C  
                                    l4462 1FEC                                      l4454 1FC2  
                                    l3910 2F00                                      l4526 12DC  
                                    l4534 130E                                      l4518 129E  
                                    l4622 252E                                      l4614 250A  
                                    l4606 24EA                                      ?_map 001B  
                                    ?_pad 0011                                      l3592 1B4E  
                                    l3584 1B1C                                      l3576 1AF6  
                                    l4376 278A                                      l4368 2782  
                                    l4392 13CA                                      l4448 19A2  
                                    l3496 2A90                                      l3488 2A40  
                                    l3760 0B1E                                      l3752 0B0C  
                                    l3728 0A3C                                      l3736 0A84  
                                    l3680 0942                                      l3672 0920  
                                    l3840 21A0                                      l3832 2176  
                                    l3824 2158                                      l3664 23FE  
                                    l3656 239E                                      l3648 2362  
                                    l3568 27A0                                      l4296 1E3A  
                                    l4288 1DF8                                      l3816 2BCC  
                                    l4464 1FF4                                      l4456 1FCA  
                                    l3904 2EE6                                      l3920 2C58  
                                    l4536 1312                                      l4528 12EE  
                                    l4616 250E                                      l4608 24EE  
                                    l3594 1B64                                      l3586 1B2A  
                                    l3578 1AFA                                      l4378 278C  
                                    l4394 13E6                                      l3754 0B18  
                                    l3738 0A88                                      l3690 0958  
                                    l3682 094A                                      l3674 0930  
                                    l3746 0AB6                                      l3666 08FE  
                                    l3850 21D4                                      l3842 21AE  
                                    l3834 217E                                      l3826 215C  
                                    l3818 213E                                      l3930 26BA  
                                    l3658 23D4                                      l4298 1E56  
                                    l4466 1FFC                                      l4458 1FD2  
                                    l4474 201C                                      l3906 2EE6  
                                    l3922 2C68                                      l3914 2C30  
                                    l4538 1328                                      l4490 11EA  
                                    l4618 2514                                      l3596 1B6C  
                                    l3588 1B3A                                      l4388 1336  
                                    l3692 0968                                      l3748 0AEA  
                                    l3676 0934                                      l3668 090A  
                                    l3780 2AF6                                      l3852 21DA  
                                    l3844 21B4                                      l3836 2190  
                                    l3828 216A                                      l3932 26C8  
                                    l4468 2004                                      l4476 2070  
                                    l3908 2EEE                                      l3924 2C6C  
                                    l3916 2C44                                      l4492 11F2  
                                    l4484 11C0                                      l4580 24A2  
                                    l3598 1B78                                      l3950 1784  
                                    l3942 1744                                      l3694 0978  
                                    l3678 093C                                      l3782 2B08  
                                    l3846 21CA                                      l3838 2198  
                                    l3854 21E0                                      l3870 2220  
                                    l3862 2202                                      l3934 26DA  
                                    l4478 2074                                      l3918 2C48  
                                    l4494 11F4                                      l4486 11D2  
                                    l4590 24BA                                      l4582 24AA  
                                    l3776 2E12                                      l3960 17D8  
                                    l3952 1788                                      l3696 0984  
                                    l3688 0952                                      l3784 2B10  
                                    l3856 21F0                                      l3848 21D2  
                                    l3880 2258                                      l3872 222E  
                                    l3864 2206                                      l3936 2718  
                                    l3928 26B2                                      l3792 2BEC  
                                    l4496 1206                                      l4488 11D6  
                                    l4592 24CE                                      l4584 24AE  
                                    l3778 2E32                                      l3970 1830  
                                    l3962 17DC                                      l3698 0990  
                                    l3786 2B18                                      l3858 21F8  
                                    l3882 2266                                      l3890 2290  
                                    l3874 2236                                      l3866 2214  
                                    l3938 271C                                      l3794 2BF4  
                                    l4498 1212                                      l4594 24D2  
                                    l4586 24B2                                      l3972 1868  
                                    l3964 17E0                                      l3948 1754  
                                    l3788 2B34                                      l3892 22A0  
                                    l3884 227C                                      l3876 2248  
                                    l3868 221C                                      l3796 2BF6  
                                    l3980 1D0E                                      l4596 24D6  
                                    l4588 24B6                                      l3966 17FC  
                                    l3958 1790                                      l4790 0BFE  
                                    l3894 22A8                                      l3886 2284  
                                    l3878 2250                                      l3798 2C08  
                                    l3982 1D14                                      l3974 1D08  
                                    l4598 24DA                                      l3968 182C  
                                    l4792 0DDE                                      l3888 228A  
                                    l3984 1D20                                      l3976 1D0A  
                                    l4784 086C                                      l4794 09AE  
                                    l3994 1D46                                      l3986 1D28  
                                    l3978 1D0A                                      l4786 2032  
                                    l3898 2E70                                      l4796 0A66  
                                    l3996 1D62                                      l3988 1D3A  
                                    l4788 1A80                                      l4798 0ACC  
                                    l3998 1D6E                              ?_leer_eeprom 0003  
                                    STR_1 7A31                                      STR_2 7DFB  
                                    STR_3 7FC3                                      STR_4 7CC7  
                                    STR_5 7EA1                                      STR_6 7D8C  
                                    STR_7 7F2C                                      STR_8 7C03  
                                    STR_9 7AB0                                      u2001 0F20  
                                    u2010 0F44                                      u2011 0F40  
                                    u2020 0F6E                                      u2100 15BA  
                                    u2021 0F6A                                      u2101 15B6  
                                    u2110 2B60                                      u2030 0FAE  
                                    u2111 2B5C                                      u2031 0FAA  
                                    u2120 2B8E                                      u2040 0FF8  
                                    u2200 047E                                      u3000 2214  
                                    u2121 2B8A                                      u2041 0FF4  
                                    u2201 047A                                      u3001 2210  
                                    u2130 29F8                                      u2050 14AA  
                                    u2210 05A8                                      u3010 222E  
                                    u2131 29F4                                      u2051 14A6  
                                    u2211 05A4                                      u3011 222A  
                                    u3100 1884                                      u2060 14DC  
                                    u2220 05C6                                      u2140 03DE  
                                    u2300 1066                                      u3020 2248  
                                    u3101 1880                                      u2061 14D8  
                                    u2221 05C2                                      u2141 03D8  
                                    u2301 1062                                      u3021 2244  
                                    u2070 151A                                      u2230 05E0  
                                    u2150 03E0                                      u2310 1098  
                                    u3030 2266                                      u3110 1D3A  
                                    u2071 1516                                      u2231 05DC  
                                    u2311 1094                                      u3031 2262  
                                    u3111 1D36                                      u2400 0DAC  
                                    u2080 1544                                      u2240 05FA  
                                    u2160 03F6                                      u2320 10B6  
                                    u3040 227C                                      u3120 1D90  
                                    u3200 070C                                      _LATD 000F8C  
                                    u2401 0DA8                                      u2081 1540  
                                    u2241 05F6                                      u2161 03F2  
                                    u2321 10B2                                      u3041 2278  
                                    u3121 1D8C                                      u3201 0708  
                                    u2410 0E62                                      u2090 1572  
                                    u2250 060A                                      u2170 0426  
                                    u2330 10E2                                      u3050 22A0  
                                    u3130 1DE0                                      u3210 0742  
                                    u2411 0E5C                                      u2091 156E  
                                    u2251 0606                                      u2171 0422  
                                    u2331 10DE                                      u3051 229C  
                                    u3131 1DDC                                      u3211 073E  
                                    u2420 0E64                                      u2260 061C  
                                    u2180 0442                                      u2340 111C  
                                    u2500 00C2                                      u3300 284A  
                                    u3140 235C                                      u3060 2C58  
                                    u3220 0778                                      u2261 0618  
                                    u2181 043E                                      u2341 1118  
                                    u2501 00BE                                      u3301 2846  
                                    u3141 2358                                      u3061 2C54  
                                    u3221 0774                                      u2430 0E7A  
                                    u2270 062C                                      u2190 0470  
                                    u2350 116C                                      u2510 013E  
                                    u3310 1636                                      u3070 2C68  
                                    u3230 07AE                                      u3150 2560  
                                    u2431 0E76                                      u2271 0628  
                                    u2191 046C                                      u2351 1168  
                                    u2511 0138                                      u3311 1632  
                                    u3071 2C64                                      u3231 07AA  
                                    u3151 255C                                      u2600 2A7C  
                                    u2440 0E8C                                      u2280 0644  
                                    u2360 117C                                      u2520 0140  
                                    u3320 1662                                      u3080 26DA  
                                    u3400 1C82                                      u3240 07E4  
                                    u3160 2580                                      u2601 2A78  
                                    u2441 0E88                                      u2281 0640  
                                    u2361 1178                                      u3321 165E  
                                    u3081 26D6                                      u3401 1C7E  
                                    u3241 07E0                                      u3161 257C  
                                    u2450 2EAE                                      u3090 17FC  
                                    u2610 2A8C                                      u2370 11B6  
                                    u2530 0156                                      u3330 16D2  
                                    u3410 1D00                                      u3250 081A  
                                    u3170 25B0                                      u2451 2EAA  
                                    u3091 17F8                                      u2611 2A88  
                                    u2371 11B2                                      u2291 1044  
                                    u2531 0152                                      u3331 16CE  
                                    u3411 1CFC                                      u3251 0816  
                                    u3171 25AC                                      u2460 2EBC  
                                    u3500 19BE                                      u2620 294E  
                                    u2380 0D5A                                      u1900 2DD4  
                                    u2540 017A                                      u3340 171E  
                                    u3180 2E04                                      u2700 2CE8  
                                    u3420 1EDE                                      u3260 0850  
                                    u2461 2EB8                                      u3501 19BA  
                                    u2381 0D56                                      u1901 2DD0  
                                    u2541 0176                                      u3341 171A  
                                    u3181 2E00                                      u2701 2CE4  
                                    u3421 1EDA                                      u3261 084C  
                                    u2470 2F70                                      u2630 2976  
                                    u2390 0D90                                      u1910 2088  
                                    u2550 01EC                                      u2710 2920  
                                    u3430 19DE                                      u3350 243A  
                                    u3510 1FEC                                      u3270 08D2  
                                    u3190 06D2                                      u2471 2F6C  
                                    u2391 0D8C                                      u1911 2084  
                                    u2551 01E8                                      u2711 291C  
                                    u3431 19DA                                      u3351 2436  
                                    u3511 1FE8                                      u3271 08CE  
                                    u3191 06CE                                      u2640 2986  
                                    u1920 20AA                                      u2560 0210  
                                    u2480 0036                                      u2800 237A  
                                    u2720 27AE                                      u3440 1A0A  
                                    u3360 2466                                      u3280 08E2  
                                    u3600 12C6                                      u3520 11D2  
                                    u2641 2982                                      u1921 20A6  
                                    u2561 020C                                      u2481 0032  
                                    u2801 2376                                      u2721 27AA  
                                    u3441 1A06                                      u3361 2462  
                                    u3281 08DE                                      u3601 12C2  
                                    u3521 11CE                                      u1850 1EF8  
                                    u1930 2100                                      u2570 02B4  
                                    u2490 007E                                      u3370 0B7A  
                                    u3290 2828                                      u2650 299E  
                                    u2810 23D4                                      u2730 27E8  
                                    u3450 1A36                                      u3610 12D8  
                                    u3530 11EA                                      u2627 2944  
                                    u1851 1EF4                                      u1931 20FC  
                                    u2571 02B0                                      u2491 007A  
                                    u3371 0B76                                      u3291 2824  
                                    u2651 299A                                      u2811 23D0  
                                    u2731 27E4                                      u3451 1A32  
                                    u3611 12D4                                      u3531 11E6  
                                    u2740 1B08                                      u3460 13E6  
                                    u2900 0AFC                                      u2820 0920  
                                    u1860 1F0A                                      u1940 2110  
                                    u2580 032E                                      u3380 0C34  
                                    u2660 29B2                                      u3620 12EE  
                                    u3540 1206                                      u2741 1B04  
                                    u3461 13E2                                      u2637 296C  
                                    u2901 0AF8                                      u2821 091C  
                                    u1861 1F06                                      u1941 210C  
                                    u2581 032A                                      u3381 0C30  
                                    u2661 29AE                                      u3621 12EA  
                                    u3541 1202                                      u2750 1B2A  
                                    u3470 1452                                      u2590 2A6C  
                                    u2910 0B0C                                      u2830 0930  
                                    u1870 1F32                                      u1950 2D12  
                                    u3390 0D1A                                      u2670 29CE  
                                    u3550 124E                                      u2751 1B26  
                                    u3471 144E                                      u2591 2A68  
                                    u2911 0B08                                      u2831 092C  
                                    u1871 1F2E                                      u1951 2D0E  
                                    u3391 0D16                                      u2671 29CA  
                                    u3551 124A                                      u2760 1B64  
                                    u3480 1496                                      u2840 0968  
                                    u1960 2DA4                                      u1880 1F68  
                                    u2680 29E0                                      u2920 2C1A  
                                    u3560 125E                                      u2761 1B60  
                                    u3481 1492                                      u2841 0964  
                                    u1961 2D9E                                      u1881 1F64  
                                    u2681 29DC                                      u2921 2C16  
                                    u3561 125A                                      u2770 1B86  
                                    u3490 193A                                      u2850 0978  
                                    u1970 2DA6                                      u1890 2CB6  
                                    u2690 2CD2                                      u2930 2BE8  
                                    u3570 1288                                      u2771 1B82  
                                    u3491 1936                                      u2851 0974  
                                    u1891 2CB2                                      u2691 2CCE  
                                    u3707 2BEE                                      u2931 2BE4  
                                    u3571 1284                                      u2780 1BAE  
                                    u2860 09F2                                      u1980 0EC4  
                                    u2940 2150                                      u3580 129E  
                                    u2781 1BAA                                      u2861 09EE  
                                    u1981 0EC0                                      u2941 214C  
                                    u3717 2CBE                                      u3581 129A  
                                    u2790 1BE0                                      u2870 0A14  
                                    u1990 0EF6                                      u2950 216A  
                                    u3590 12B0                                      u3670 2506  
                                    u2791 1BDC                                      u2871 0A10  
                                    u1991 0EF2                                      u2951 2166  
                                    u3727 2CD4                                      u3591 12AC  
                                    u3671 2502                                      u2880 0A24  
                                    u2960 2190                                      u3680 2526  
                                    u2881 0A20                                      u2961 218C  
                                    u3737 2CEA                                      u3681 2522  
                                    u2890 0AB2                                      u2970 21AE  
                                    u2891 0AAE                                      u2971 21AA  
                                    u3747 2F0E                                      u2980 21CA  
                                    u2981 21C6                                      u3757 2F1C  
                                    u2990 21F0                                      u2991 21EC  
                                    u3767 29A0                                      u3777 2E38  
                                    u3697 2332                                      u3787 2D68  
                                    _TMR0 000FD6                      _minutosTranscurridos 00F5  
                      ??_i2c_reinicia_com 0002                            _check_response 2CB8  
                 escribeHorariosMemoria@i 0011                   escribeHorariosMemoria@j 000D  
                           ??_i2c_detener 0002                                      abs@a 0013  
                                    _dbuf 017F                                      _atoi 0D22  
                                    _ctoa 29E4                                      _main 24A2  
                                    _dtoa 03AE                                      _hora 00FC  
                                    _prec 00ED                                      _nout 0178  
                                    pad@i 0018                                      pad@p 0015  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    indf1 000FE7                                      indf2 000FDF  
                                    fsr1l 000FE1                                      pad@w 001A  
                                    map@x 001B                                      fsr2l 000FD9  
                                    _stoa 103A                                      btemp 005F  
                          ?_sistemaRegado 0001                  __size_of_asignarHorarios 0148  
                           ??_i2c_iniciar 0001                                      prodh 000FF4  
                                    prodl 000FF3                                      start 000E  
                ??_restablecerDatosSensor 0005                             __CFG_IESO$OFF 000000  
                        ??_DHT11_ReadData 0001                         _constructorSensor 2FB0  
                    __size_of_DHT11_Start 0020                              ?_lecturaWifi 0001  
                 __size_of_setTiempoRegar 00A0                             __CFG_MCLRE$ON 000000  
                            ___param_bank 000000                        ?_constructorSensor 0001  
                      setTiempoRegar@hora 0014                        _leeHorariosMemoria 1886  
                        ??_encenderBombas 0014                                     ??_abs 0015  
                                   ??_map 002F                                     ??_pad 0017  
                          _i2c_envia_dato 2F98                             __CFG_PLLDIV$1 000000  
                          _i2c_inicia_com 2FCC                           __end_of___aldiv 1C02  
                         __end_of___aodiv 103A                                     ?_atoi 0008  
                                   ?_ctoa 001C                                     ?_main 0001  
                                   ?_dtoa 001C                           __end_of___aomod 15FC  
                           _convertirDato 2EE4                           __end_of___awdiv 2202  
                                   STR_10 7AB0                                     STR_11 7DB1  
                                   STR_12 7FEC                                     STR_20 7E41  
                                   STR_13 7EF8                                     STR_21 7D67  
                                   STR_30 7F0F                                     STR_14 7F5E  
                                   STR_22 7EDD                                     STR_15 7C03  
                                   STR_23 7DD6                                     STR_31 7CF2  
                                   STR_40 7EC0                                     STR_24 7C69  
                                   STR_32 7A72                                     STR_16 79E9  
                                   STR_41 7C9A                                     STR_25 7E61  
                                   STR_17 7D42                                     STR_33 7B97  
                                   STR_42 7FB2                                     STR_26 7E1F  
                                   STR_18 7D1C                                     STR_34 7BCE  
                                   STR_43 7FF5                                     STR_27 7F75  
                                   STR_35 7F45                                     STR_19 7C36  
                                   STR_44 7FE1                                     STR_28 7F12  
                                   STR_36 7E81                           __end_of___awmod 22B2  
                                   STR_29 7FD3                                     STR_45 7FA0  
                                   STR_37 7EC0                                     STR_46 7F8C  
                                   STR_38 7C9A                                     STR_39 7E81  
                                   STR_47 7B5E                                     STR_48 7B25  
                                   STR_49 7AEB                       ??_constructorSensor 0005  
                                   ?_stoa 000A                         convertirDato@dato 0002  
                                   _T0CON 000FD5                           ___awdiv@divisor 0003  
                                   i2l209 28C4                       ?_leeHorariosMemoria 0001  
                         ___awdiv@counter 0005                                     _RCREG 000FAE  
                            vfpfcnvrt@fmt 0042                                     _SPBRG 000FAF  
                           __CFG_USBDIV$1 000000                                     _TRISD 000F95  
                                   _TXREG 000FAD                             __CFG_PWRT$OFF 000000  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                       ___lmul@multiplicand 0005  
                           __CFG_WRT3$OFF 000000                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            __CFG_EBTRB$OFF 000000  
                      __size_of_UART_init 0070                        __size_of_UART_read 005C  
                                   _flags 00EF                                     _fputc 1EE6  
                                   _fputs 2C74                           __end_of_isdigit 2DAC  
                  __end_of_check_response 2CF8                               ?_UART_write 0001  
                                   atoi@n 0015                                     pad@fp 0011  
                                   atoi@s 0008                                     _width 00EB  
                                   ctoa@c 001E                                     _putch 2FDC  
                                   ctoa@w 001F                                     dtoa@d 001E  
                                   dtoa@i 003E                                     dtoa@n 0036  
                                   dtoa@p 0030                                     dtoa@s 0034  
                                   dtoa@w 0032                           __end_of_isspace 2B9A  
                                   tablat 000FF5                                     plusw1 000FE3  
                                   plusw2 000FDB                                     stoa@i 0016  
                                   stoa@l 001E                                     stoa@p 001C  
                                   stoa@s 000C         __size_of_mostrarDatosSensoresWIFI 0106  
                                   stoa@w 0018                                     ttemp5 0060  
                                   ttemp6 0063                                     ttemp7 0067  
                                   status 000FD8                 ?_mostrarDatosSensoresWIFI 0001  
                                   wtemp8 0060                           __end_of_sprintf 2B48  
                      escribe_eeprom@dato 0009                 __end_of_constructorSensor 2FBA  
                    ??_leeHorariosMemoria 0007                            __CFG_ICPRT$OFF 000000  
                              _i2c_espera 2E98                          ??_dameHoraActual 0005  
                         __initialization 2A9C                       __end_of_i2c_detener 2FDC  
         __size_of_lecturaAnalogaSensores 00AC                    __end_of_i2c_envia_dato 2FA4  
                            __end_of_atoi 0EB2                              __end_of_ctoa 2A40  
                            __end_of_main 253A                              __end_of_dtoa 0692  
                ??_escribeHorariosMemoria 000B                           ??_configurarAdc 0001  
                            __end_of_stoa 11C0                    __end_of_i2c_inicia_com 2FD4  
                      _inicializarObjetos 132E                       __end_of_i2c_iniciar 2F88  
                  sistemaPrincipal@opcion 00EA                          _dameHumedadSuelo 2BEA  
                          ?_convertirDato 0001                      __size_of_fijaHoraRtc 0068  
                                  ??_atoi 000A                                    ??_ctoa 001F  
                                  ??_main 005F                                    ??_dtoa 0026  
                                  ??_stoa 000E                 setTiempoRegar@tiempoRegar 0013  
                           __activetblptr 000002                       ?_inicializarObjetos 0001  
                      i2c_envia_dato@dato 0002                           __CFG_CCP2MX$OFF 000000  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                                  ?_fputc 0001                                    ?_fputs 000A  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                         ?_check_response 0001                          ___awdiv@dividend 0001  
                  encenderBombas@flagSeco 0016                                    ?_putch 0001  
                      convertirDato@datoR 0003                             _horaRegar$803 0005  
                                  i2l4540 2864                                    i2l4550 289C  
                                  i2l4542 2872                                    i2l4552 289E  
                                  i2l4544 2884                                    i2l4546 2888  
                                  i2l4554 28AC                                    i2l4556 28BA  
                                  i2l4548 2898                                    i2l4558 28BE  
                         ??_sistemaRegado 005F                                    _SSPADD 000FC8  
                                  _SSPBUF 000FC9                      ??_inicializarObjetos 0007  
         __size_of_restablecerDatosSensor 0050                            __CFG_XINST$OFF 000000  
                        __end_of_getValue 0B22                              vfprintf@cfmt 005D  
                __end_of_sistemaPrincipal 2078                            _escribe_eeprom 2E12  
                                  ___lmul 2790                           ?_i2c_envia_dato 0001  
                               ??___aldiv 0015                                 ??___aodiv 0011  
                               ??___aomod 0011                                    ___wmul 2EBE  
                       __end_of_UART_init 2790                         __end_of_UART_read 2A9C  
                               ??___awdiv 0005                                 ??___awmod 0005  
                       ??_asignarHorarios 0076                          __end_of_leer_rtc 2E98  
                         ?_i2c_inicia_com 0001                          __end_of_estaSeco 2C74  
                     __size_of_UART_write 0016                              ?_UART_printf 0002  
                                  clear_0 2AC4                                    clear_1 2AD6  
                                  clear_2 2AE2                          ___awdiv@quotient 0007  
                         ___awmod@divisor 0003                                    _setRtc 26B0  
                         ___awmod@counter 0005                                    pad@buf 0013  
                                  ctoa@fp 001C       mostrarDatosSensoresWIFI@temperatura 0164  
                                  dtoa@fp 001C                                    _strlen 2DAC  
                         _i2c_recibe_dato 2F42                    __size_of_dameDiaActual 0010  
                            ?_mostrarMenu 0001                                    fputc@c 0001  
                                  fputs@c 000E                                    fputs@i 000F  
                                  fputs@s 000A                                 ??_isdigit 0003  
                    escribe_rtc@direccion 0004                              __mediumconst 79E8  
                               ??_isspace 0003                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                  _lecturaAnalogaSensores 22B2              __end_of_mostrarDatosSensores 1EE6  
                                  stoa@cp 001A                                    stoa@fp 000A  
                                  putch@c 0001                          __end_of_vfprintf 292A  
                               ??_sprintf 005F                             ?_regadoRapido 0001  
                              __accesstop 0060                   __end_of__initialization 2AE8  
                    __size_of_escribe_rtc 001E                           __CFG_PBADEN$OFF 000000  
                    __size_of_leer_eeprom 003C                           __CFG_FOSC$XT_XT 000000  
                             _i2c_detener 2FD4                __size_of_constructorSensor 000A  
                           ___rparam_used 000001                               _i2c_iniciar 2F72  
                  __end_of_escribe_eeprom 2E42                               ?_i2c_espera 0001  
                          _setTiempoRegar 2402                            __pcstackCOMRAM 0001  
                            leer_rtc@dato 0004                              __pidataBANK1 2FA4  
                    __size_of_lecturaWifi 00F0           __size_of_escribeHorariosMemoria 0142  
                         ??_convertirDato 0001                             __end_of_fputc 1FB0  
                           __end_of_fputs 2CB8                       estaSeco@temperatura 0013  
                           __end_of_putch 2FDE                    _restablecerDatosSensor 2B9A  
                            _datoRecibido 017B                         ?_dameDatosSistema 0001  
                          ??_regadoRapido 000F                                   ??_fputc 0005  
                                 ??_fputs 000E                                   ??_putch 0001  
                              __pbssBANK0 00EB                                __pbssBANK1 0168  
                      ??_dameDatosSistema 0076                   __size_of_desbordamiento 28C0  
                      __size_of_horaRegar 0082                    __end_of_setTiempoRegar 24A2  
                           _dameDiaActual 2F88         constructorSensor@porcientoHumedad 0003  
                            lecturaWifi@i 00AA                           ?_escribe_eeprom 0007  
           dameTemperaturaHumedad@Humedad 0004                                _fijaDiaRtc 2DE2  
                      _contInterrupciones 00F1                 __size_of_i2c_reinicia_com 0008  
                                 ?___lmul 0001                                   ?___wmul 0001  
                              _flagRegado 00F7                mostrarDatosSensores@buffer 0077  
                 __end_of_i2c_recibe_dato 2F5C                                   _ACKSTAT 007E2E  
                          ___lmul@product 0009                                   ?_setRtc 0001  
                                 ?_strlen 0001           mostrarDatosSensores@temperatura 00A9  
           dameTemperaturaHumedad@humedad 000E                        __size_of_vfpfcnvrt 039C  
                     __size_of_i2c_espera 0026                                 ?_getValue 0004  
                  _escribeHorariosMemoria 1744                                   _SSPCON1 000FC6  
                                 _SSPCON2 000FC5                              ??_UART_write 0001  
                                 _SSPSTAT 000FC7                  __end_of_dameHumedadSuelo 2C30  
                               ?_leer_rtc 0001                                 ?_estaSeco 0010  
                         __CFG_VREGEN$OFF 000000                            ?_dameDiaActual 0001  
                           ??_DHT11_Start 0001                           ?_setTiempoRegar 0001  
                                 __Hparam 0000                                   __Lparam 0000  
       dameTemperaturaHumedad@Temperatura 0006                                   ___aldiv 1AF6  
                                 ___aodiv 0EB2                                   ___aomod 1498  
                                 ___awdiv 213E                           __size_of___lmul 006A  
                    _mostrarDatosSensores 1DF8                                   ___awmod 2202  
                         __size_of___wmul 0026                                 ?_vfprintf 0057  
                         __CFG_STVREN$OFF 000000                                   __pcinit 2A9C  
                                 __ramtop 0800                        __end_of_UART_write 2F72  
                         __size_of_setRtc 0070                                   __ptext0 24A2  
                                 __ptext1 11C0                                   __ptext2 253A  
                                 __ptext3 0692                                   __ptext4 2C30  
                                 __ptext5 2E42                                   __ptext6 2F88  
                                 __ptext7 2E6E                                   __ptext8 2EE4  
                                 __ptext9 1FB0                   check_response@respuesta 0001  
                       __end_of_horaRegar 25BC                                 _T0CONbits 000FD5  
                         __size_of_strlen 0036                      __size_of_UART_printf 005E  
                            __size_of_abs 0040                              __size_of_pad 00C6  
                            __size_of_map 007A                          ??_check_response 0001  
                                 _isdigit 2D74                          ___awmod@dividend 0001  
                                 _regando 00F4                     regadoRapido@areaRegar 0012  
                        ___aldiv@dividend 000D                                   _isspace 2B48  
                                 _minutos 00FB                      __size_of_mostrarMenu 007A  
                                 atoi@neg 000E                                ??_getValue 0006  
                                 _sprintf 2AF6                            __pintcode_body 2862  
                    end_of_initialization 2AE8            mostrarDatosSensoresWIFI@buffer 0132  
                              ??_leer_rtc 0003                                ??_estaSeco 0012  
                                 fputc@fp 0003                           _asignarHorarios 15FC  
                           __Lmediumconst 79E8                                   int_func 2862  
                                 fputs@fp 000C                          ??_i2c_envia_dato 0002  
             __size_of_leeHorariosMemoria 013A                          ??_i2c_inicia_com 0002  
                             ?_fijaDiaRtc 0001                          _VALOR_TIMER0UART 01A8  
                       __end_of_vfpfcnvrt 03AE                  ??_dameTemperaturaHumedad 0008  
                               _RCSTAbits 000FAB                          ___aldiv@quotient 0017  
                   ?_mostrarDatosSensores 0001                       __end_of_DHT11_Start 2F24  
                                 postdec1 000FE5                                   postdec2 000FDD  
                       ?_sistemaPrincipal 0001                   _peticionLecturaSensores 00F3  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                             ??_fijaHoraRtc 0013  
                    __end_of_regadoRapido 1AF6                          ?_i2c_recibe_dato 0001  
                              ??_vfprintf 005D                             setRtc@datoRtc 0011  
                   __end_of_configurarAdc 2FC4                        ??_sistemaPrincipal 00E8  
                                 strlen@a 0003                                   strlen@s 0001  
                               _UART_init 2720                                getValue@Rx 000E  
                               _UART_read 2A40                                 _PORTDbits 000F83  
                 __size_of_DHT11_ReadData 005C                   ?_lecturaAnalogaSensores 0001  
                           setRtc@seteado 0010                 dameHumedadSuelo@canalLeer 0005  
                 lecturaAnalogaSensores@i 0030                                 _TRISBbits 000F93  
                               _TRISCbits 000F94                                 _TRISDbits 000F95  
                 __size_of_encenderBombas 026C                  _mostrarDatosSensoresWIFI 1C02  
                       lecturaWifi@buffer 0076                           ??_dameDiaActual 0005  
                              map@out_max 002B                                map@out_min 0027  
                          _desbordamiento 0008                            _esperandoDatos 017D  
                          _UART_init$1915 0023                              ?_i2c_detener 0001  
                   __end_of_sistemaRegado 132E                                 _TXSTAbits 000FAC  
                       dameDatosSistema@i 00E6                         dameDatosSistema@j 00E4  
             __size_of_inicializarObjetos 016A                              ?_i2c_iniciar 0001  
                            ??_i2c_espera 0001                         _MODO_COMUNICACION 017C  
                      DHT11_ReadData@data 0002                          _i2c_reinicia_com 2FC4  
               dameDatosSistema@diasRegar 00AC                            __end_of___lmul 27FA  
                             vfpfcnvrt@ap 0044                               vfpfcnvrt@cp 0052  
                             vfpfcnvrt@fp 0040                               vfpfcnvrt@ll 004A  
                          __end_of___wmul 2EE4                   ?_restablecerDatosSensor 0001  
          __end_of_lecturaAnalogaSensores 235E                                ?_UART_init 001B  
                              ?_UART_read 0001                   __size_of_dameHoraActual 002C  
                          __end_of_setRtc 2720                       __end_of_fijaHoraRtc 2862  
                          __end_of_strlen 2DE2                       start_initialization 2A9C  
                            _estaSeco$796 0012                               __end_of_abs 2D38  
                             __end_of_pad 213E                   __end_of_asignarHorarios 1744  
                             __end_of_map 26B0                       __size_of_fijaDiaRtc 0030  
       escribeHorariosMemoria@contMemoria 000F                    __end_of_desbordamiento 28C8  
                      __end_of_i2c_espera 2EBE                             ??_escribe_rtc 0004  
                           ??_leer_eeprom 0005                          ??_escribe_eeprom 000A  
                     leeHorariosMemoria@i 000D                       leeHorariosMemoria@j 0009  
                    constructorSensor@pin 0004                               _DHT11_Start 2F04  
                   _dameDatosSistema$1916 00DE                     _dameDatosSistema$1917 00E0  
                   _dameDatosSistema$1918 00E2                             ??_lecturaWifi 005F  
                  ??_mostrarDatosSensores 0076                               vfprintf@fmt 0059  
               __size_of_dameDatosSistema 0200           __size_of_dameTemperaturaHumedad 00A4  
                                ??___lmul 0009                                  ??___wmul 0005  
          __end_of_restablecerDatosSensor 2BEA                               __pdataBANK1 019F  
                        __CFG_LPT1OSC$OFF 000000                         leer_rtc@direccion 0003  
                                ??_setRtc 000F                     __end_of_convertirDato 2F04  
                                ??_strlen 0003                               __pbssBIGRAM 01AA  
                 ?_escribeHorariosMemoria 0001                             __pcstackBANK0 0060  
                           __pcstackBANK1 0100                          ___aodiv@dividend 0001  
                         ?_desbordamiento 0001                          ??_setTiempoRegar 0013  
                               _diaActual 00F9                   inicializarObjetos@i_806 000B  
                       __size_of_getValue 0224                         ?_dameHumedadSuelo 0001  
                  getValue@datoIncorrecto 0008                         UART_printf@cadena 0002  
                           lecturaWifi@Rx 00A8                                 _atoi$1564 0010  
                               _atoi$1565 0014                                 _atoi$1566 0012  
                      ??_dameHumedadSuelo 0003                         __size_of_leer_rtc 002A  
                       __size_of_estaSeco 0044                       __end_of_escribe_rtc 2F42  
                     __end_of_leer_eeprom 2D74                     __size_of_regadoRapido 0136  
                               _dtoa$1081 002E                                 __pintcode 0008  
                           __pmediumconst 79E8                                  ?___aldiv 000D  
                                ?___aodiv 0001                                  ?___aomod 0001  
                                ?___awdiv 0001                          ___aodiv@quotient 0013  
                                ?___awmod 0001                               _fijaHoraRtc 27FA  
                     __end_of_lecturaWifi 1DF8                            _DHT11_ReadData 2988  
                              setRtc@dato 0012                               ??_UART_init 001F  
                             ??_UART_read 0001                         __size_of_vfprintf 0062  
             mostrarDatosSensores@humedad 00AA            __end_of_escribeHorariosMemoria 1886  
                                ?_isdigit 0001                            _encenderBombas 0692  
                                ?_isspace 0001                                 _horaRegar 253A  
          dameTemperaturaHumedad@checkSum 000A                    _dameTemperaturaHumedad 235E  
                        ?_asignarHorarios 0001                                  ?_sprintf 0060  
                          __size_of_fputc 00CA                            __size_of_fputs 0044  
                            _regadoRapido 19C0                            __size_of_putch 0002  
                         ___aldiv@divisor 0011                           ___aldiv@counter 0015  
                          ___wmul@product 0005                                  _LATDbits 000F8C  
                                _PIE1bits 000F9D                      __size_of_i2c_detener 0008  
                            ??_fijaDiaRtc 0013                                  _PIR1bits 000F9E  
                                i2u363_40 2872                                  i2u363_41 286E  
                                i2u364_40 2884                                  i2u364_41 2880  
                                i2u365_40 2898                                  i2u365_41 2894  
                                i2u366_40 28BA                                  i2u366_41 28B6  
                 restablecerDatosSensor@i 0005                      __size_of_i2c_iniciar 0016  
                        __CFG_WDTPS$32768 000000                    _tiempoInactividadTrans 00FE  
           leeHorariosMemoria@contMemoria 000B                       asignarHorarios@hora 00AC  
                  __end_of_DHT11_ReadData 29E4                                 getValue@i 0009  
                           ??_UART_printf 0004                    dameDatosSistema@buffer 007A  
                               _vfpfcnvrt 0012                                 map@in_max 0023  
                               map@in_min 001F                                _ADCON0bits 000FC2  
                          _dameHoraActual 2E42                         ___wmul@multiplier 0001  
              ??_mostrarDatosSensoresWIFI 00AC                    __end_of_encenderBombas 08FE  
                           ??_mostrarMenu 0004                            UART_write@dato 0001  
                              ?_horaRegar 0001                     mostrarDatosSensores@i 00AB  
                            _isspace$1582 0007                 __size_of_sistemaPrincipal 00C8  
                __end_of_i2c_reinicia_com 2FCC                                vfpfcnvrt@c 0056  
                      __end_of_fijaDiaRtc 2E12                         ___lmul@multiplier 0001  
                               copy_data0 2AB0                               _escribe_rtc 2F24  
                             _leer_eeprom 2D38                              _VALOR_TIMER0 01A6  
              __end_of_leeHorariosMemoria 19C0                                 estaSeco@s 0010  
                 asignarHorarios@diaRegar 00AB                                  __Hrparam 0000  
                   getValue@numCharacters 0004                              _minutosRegar 00F6  
                             _lecturaWifi 1D08                             UART_init@BAUD 001B  
                              vfprintf@ap 005B                                  __Lrparam 0000  
                              vfprintf@fp 0057                          _dameDatosSistema 0B22  
dameTemperaturaHumedad@temperaturaDecimal 000D                       _esperaDatoConcluida 00FD  
                        __size_of___aldiv 010C                           ?_DHT11_ReadData 0001  
                        __size_of___aodiv 0188                          __size_of___aomod 0164  
                        __size_of___awdiv 00C4                    __end_of_dameHoraActual 2E6E  
                        __size_of___awmod 00B0                                ?_vfpfcnvrt 0040  
                         DHT11_ReadData@i 0001                           ___aodiv@divisor 0009  
                         ___aodiv@counter 0011                           ?_encenderBombas 0001  
                              sprintf@fmt 0062                  __size_of_i2c_recibe_dato 001A  
                     __end_of_UART_printf 2988                          __size_of_isdigit 0038  
                        __size_of_isspace 0052                                  __ptext10 2402  
                                __ptext11 19C0                                  __ptext20 2790  
                                __ptext12 25BC                                  __ptext21 2BEA  
                                __ptext13 1C02                                  __ptext30 2202  
                                __ptext22 235E                                  __ptext14 1D08  
                                __ptext31 213E                                  __ptext23 2CB8  
                                __ptext15 2B9A                                  __ptext40 1498  
                                __ptext32 0B22                                  __ptext24 2F04  
                                __ptext16 2FB0                                  __ptext41 0EB2  
                                __ptext33 15FC                                  __ptext25 2988  
                                __ptext17 1DF8                                  __ptext50 2D74  
                                __ptext42 29E4                                  __ptext34 2AF6  
                                __ptext26 27FA                                  __ptext18 22B2  
                                __ptext51 08FE                                  __ptext43 2078  
                                __ptext35 28C8                                  __ptext27 2DE2  
                                __ptext19 2636                                  __ptext60 2F42  
                                __ptext52 2A40                                  __ptext44 2DAC  
                                __ptext36 0012                                  __ptext28 26B0  
                                __ptext61 2FCC                                  __ptext53 292A  
                                __ptext45 2C74                                  __ptext37 103A  
                                __ptext29 2F24                                  __ptext70 1AF6  
                                __ptext62 2F98                                  __ptext54 2F5C  
                                __ptext46 1EE6                                  __ptext38 03AE  
                                __ptext63 2FD4                                  __ptext55 1744  
                                __ptext47 2FDC                                  __ptext39 2CF8  
                                __ptext64 2E98                                  __ptext56 2E12  
                                __ptext48 0D22                                  __ptext65 132E  
                                __ptext57 1886                                  __ptext49 2B48  
                                __ptext66 2EBE                                  __ptext58 2D38  
                                __ptext67 2F72                                  __ptext59 2FC4  
                                __ptext68 2FBA                                  __ptext69 2720  
                                _getValue 08FE                       __end_of_mostrarMenu 2636  
                        __size_of_sprintf 0052                                  _leer_rtc 2E6E  
                                _estaSeco 2C30                __end_of_inicializarObjetos 1498  
                                _byteUart 017E                    __size_of_configurarAdc 000A  
                lecturaWifi@humedadMedida 00A9                   __size_of_check_response 0040  
                   __end_of_dameDiaActual 2F98                       inicializarObjetos@i 000D  
                     inicializarObjetos@j 0009                             __size_of_atoi 0190  
                           __size_of_ctoa 005C                             __size_of_main 0098  
                           __size_of_dtoa 02E4                                  _horarios 01AA  
                            ?_DHT11_Start 0001                             __size_of_stoa 0186  
    dameTemperaturaHumedad@humedadDecimal 000C                                  _tempHora 00F8  
                                _segundos 00FA                                 stoa@F1144 019F  
                         encenderBombas@i 0017                                  _sensores 0168  
               mostrarDatosSensoresWIFI@i 0166                                  int$flags 005F  
                                _vfprintf 28C8                           ?_dameHoraActual 0001  
                 __size_of_i2c_envia_dato 000C                             getValue@i_989 000B  
                 __size_of_i2c_inicia_com 0008                  i2c_recibe_dato@datoleido 0002  
                        ___aomod@dividend 0001                     __CFG_CPUDIV$OSC1_PLL2 000000  
                        ??_desbordamiento 0001                            _vfpfcnvrt$1105 0054  
                  __size_of_sistemaRegado 016E                                _INTCONbits 000FF2  
                      constructorSensor@s 0001                               ??_horaRegar 0003  
         mostrarDatosSensoresWIFI@humedad 0165                   escribe_eeprom@direccion 0007  
                                isdigit@c 0001                                  intlevel2 0000  
                               sprintf@ap 006E                           escribe_rtc@dato 0003  
                                isspace@c 0001                           setRtc@direccion 000F  
                       asignarHorarios@Rx 00AA             __size_of_mostrarDatosSensores 00EE  
                           _overflowTimer 017A                              ?_fijaHoraRtc 0001  
       dameTemperaturaHumedad@temperatura 000F                           ___aomod@divisor 0009  
                            getValue@dato 000D                 __size_of_dameHumedadSuelo 0046  
                             ??_vfpfcnvrt 0046                                  stoa@nuls 000F  
                         ___aomod@counter 0011                               _UART_printf 292A  
                           _configurarAdc 2FBA          __end_of_mostrarDatosSensoresWIFI 1D08  
                   asignarHorarios@buffer 0078                                  sprintf@f 0070  
                                sprintf@s 0060                   ?_dameTemperaturaHumedad 0004  
                             _mostrarMenu 25BC                              ___aldiv@sign 0016  
                        asignarHorarios@i 00AD                          _sistemaPrincipal 1FB0  
                         leer_eeprom@dato 0006                               _SSPCON2bits 000FC5  
                              _UART_write 2F5C                              ___aodiv@sign 0012  
                       ??_i2c_recibe_dato 0002                    __size_of_convertirDato 0020  
                    leer_eeprom@direccion 0003      mostrarDatosSensoresWIFI@bufferSensor 0100  
                           _sistemaRegado 11C0                              ___aomod@sign 0012  
                ??_lecturaAnalogaSensores 002F  
