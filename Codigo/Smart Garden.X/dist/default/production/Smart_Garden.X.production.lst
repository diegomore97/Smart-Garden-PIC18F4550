

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Jun 13 13:43:16 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    79                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    81                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    82                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    83  0000                     
    84                           ; Version 2.10
    85                           ; Generated 31/07/2019 GMT
    86                           ; 
    87                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    88                           ; All rights reserved.
    89                           ; 
    90                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    91                           ; 
    92                           ; Redistribution and use in source and binary forms, with or without modification, are
    93                           ; permitted provided that the following conditions are met:
    94                           ; 
    95                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    96                           ;        conditions and the following disclaimer.
    97                           ; 
    98                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    99                           ;        of conditions and the following disclaimer in the documentation and/or other
   100                           ;        materials provided with the distribution.
   101                           ; 
   102                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   103                           ;        software without specific prior written permission.
   104                           ; 
   105                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   106                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   107                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   108                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   109                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   110                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   111                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   112                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   113                           ; 
   114                           ; 
   115                           ; Code-generator required, PIC18F4550 Definitions
   116                           ; 
   117                           ; SFR Addresses
   118  0000                     
   119                           	psect	idataBANK0
   120  0026BA                     __pidataBANK0:
   121                           	opt callstack 0
   122                           
   123                           ;initializer for _VALOR_TIMER0
   124  0026BA  6769               	dw	26473
   125                           
   126                           ;initializer for _VALOR_TIMER0UART
   127  0026BC  6769               	dw	26473
   128  0000                     _TMR0	set	4054
   129  0000                     _TRISD	set	3989
   130  0000                     _T0CON	set	4053
   131  0000                     _T0CONbits	set	4053
   132  0000                     _LATD	set	3980
   133  0000                     _PIE1bits	set	3997
   134  0000                     _ADRESL	set	4035
   135  0000                     _ADRESH	set	4036
   136  0000                     _ADCON0bits	set	4034
   137  0000                     _ADCON2	set	4032
   138  0000                     _ADCON1	set	4033
   139  0000                     _INTCONbits	set	4082
   140  0000                     _LATDbits	set	3980
   141  0000                     _TRISDbits	set	3989
   142  0000                     _PORTDbits	set	3971
   143  0000                     _TXREG	set	4013
   144  0000                     _RCREG	set	4014
   145  0000                     _PIR1bits	set	3998
   146  0000                     _RCSTAbits	set	4011
   147  0000                     _TXSTAbits	set	4012
   148  0000                     _SPBRG	set	4015
   149  0000                     _TRISCbits	set	3988
   150  0000                     _SSPBUF	set	4041
   151  0000                     _SSPCON2bits	set	4037
   152  0000                     _SSPADD	set	4040
   153  0000                     _SSPCON2	set	4037
   154  0000                     _SSPCON1	set	4038
   155  0000                     _SSPSTAT	set	4039
   156  0000                     _TRISBbits	set	3987
   157  0000                     _ACKSTAT	set	32302
   158                           
   159                           	psect	mediumconst
   160  007AEC                     __pmediumconst:
   161                           	opt callstack 0
   162  007AEC  00                 	db	0
   163  007AED                     STR_11:
   164  007AED  0D                 	db	13
   165  007AEE  0A                 	db	10
   166  007AEF  20                 	db	32
   167  007AF0  49                 	db	73	;'I'
   168  007AF1  6E                 	db	110	;'n'
   169  007AF2  67                 	db	103	;'g'
   170  007AF3  72                 	db	114	;'r'
   171  007AF4  65                 	db	101	;'e'
   172  007AF5  73                 	db	115	;'s'
   173  007AF6  65                 	db	101	;'e'
   174  007AF7  20                 	db	32
   175  007AF8  6C                 	db	108	;'l'
   176  007AF9  6F                 	db	111	;'o'
   177  007AFA  73                 	db	115	;'s'
   178  007AFB  20                 	db	32
   179  007AFC  6D                 	db	109	;'m'
   180  007AFD  69                 	db	105	;'i'
   181  007AFE  6E                 	db	110	;'n'
   182  007AFF  75                 	db	117	;'u'
   183  007B00  74                 	db	116	;'t'
   184  007B01  6F                 	db	111	;'o'
   185  007B02  73                 	db	115	;'s'
   186  007B03  20                 	db	32
   187  007B04  71                 	db	113	;'q'
   188  007B05  75                 	db	117	;'u'
   189  007B06  65                 	db	101	;'e'
   190  007B07  20                 	db	32
   191  007B08  64                 	db	100	;'d'
   192  007B09  65                 	db	101	;'e'
   193  007B0A  73                 	db	115	;'s'
   194  007B0B  65                 	db	101	;'e'
   195  007B0C  65                 	db	101	;'e'
   196  007B0D  20                 	db	32
   197  007B0E  71                 	db	113	;'q'
   198  007B0F  75                 	db	117	;'u'
   199  007B10  65                 	db	101	;'e'
   200  007B11  20                 	db	32
   201  007B12  73                 	db	115	;'s'
   202  007B13  65                 	db	101	;'e'
   203  007B14  20                 	db	32
   204  007B15  72                 	db	114	;'r'
   205  007B16  69                 	db	105	;'i'
   206  007B17  65                 	db	101	;'e'
   207  007B18  67                 	db	103	;'g'
   208  007B19  75                 	db	117	;'u'
   209  007B1A  65                 	db	101	;'e'
   210  007B1B  20                 	db	32
   211  007B1C  65                 	db	101	;'e'
   212  007B1D  6E                 	db	110	;'n'
   213  007B1E  20                 	db	32
   214  007B1F  65                 	db	101	;'e'
   215  007B20  73                 	db	115	;'s'
   216  007B21  65                 	db	101	;'e'
   217  007B22  20                 	db	32
   218  007B23  68                 	db	104	;'h'
   219  007B24  6F                 	db	111	;'o'
   220  007B25  72                 	db	114	;'r'
   221  007B26  61                 	db	97	;'a'
   222  007B27  72                 	db	114	;'r'
   223  007B28  69                 	db	105	;'i'
   224  007B29  6F                 	db	111	;'o'
   225  007B2A  20                 	db	32
   226  007B2B  65                 	db	101	;'e'
   227  007B2C  6A                 	db	106	;'j'
   228  007B2D  3A                 	db	58	;':'
   229  007B2E  20                 	db	32
   230  007B2F  31                 	db	49	;'1'
   231  007B30  35                 	db	53	;'5'
   232  007B31  20                 	db	32
   233  007B32  0D                 	db	13
   234  007B33  0A                 	db	10
   235  007B34  00                 	db	0
   236  007B35                     STR_43:
   237  007B35  0D                 	db	13
   238  007B36  0A                 	db	10
   239  007B37  20                 	db	32
   240  007B38  59                 	db	89	;'Y'
   241  007B39  61                 	db	97	;'a'
   242  007B3A  20                 	db	32
   243  007B3B  73                 	db	115	;'s'
   244  007B3C  65                 	db	101	;'e'
   245  007B3D  20                 	db	32
   246  007B3E  65                 	db	101	;'e'
   247  007B3F  73                 	db	115	;'s'
   248  007B40  74                 	db	116	;'t'
   249  007B41  61                 	db	97	;'a'
   250  007B42  20                 	db	32
   251  007B43  65                 	db	101	;'e'
   252  007B44  66                 	db	102	;'f'
   253  007B45  65                 	db	101	;'e'
   254  007B46  63                 	db	99	;'c'
   255  007B47  74                 	db	116	;'t'
   256  007B48  75                 	db	117	;'u'
   257  007B49  61                 	db	97	;'a'
   258  007B4A  6E                 	db	110	;'n'
   259  007B4B  64                 	db	100	;'d'
   260  007B4C  6F                 	db	111	;'o'
   261  007B4D  20                 	db	32
   262  007B4E  75                 	db	117	;'u'
   263  007B4F  6E                 	db	110	;'n'
   264  007B50  20                 	db	32
   265  007B51  72                 	db	114	;'r'
   266  007B52  69                 	db	105	;'i'
   267  007B53  65                 	db	101	;'e'
   268  007B54  67                 	db	103	;'g'
   269  007B55  6F                 	db	111	;'o'
   270  007B56  2C                 	db	44
   271  007B57  20                 	db	32
   272  007B58  69                 	db	105	;'i'
   273  007B59  6E                 	db	110	;'n'
   274  007B5A  74                 	db	116	;'t'
   275  007B5B  65                 	db	101	;'e'
   276  007B5C  6E                 	db	110	;'n'
   277  007B5D  74                 	db	116	;'t'
   278  007B5E  65                 	db	101	;'e'
   279  007B5F  6C                 	db	108	;'l'
   280  007B60  6F                 	db	111	;'o'
   281  007B61  20                 	db	32
   282  007B62  6D                 	db	109	;'m'
   283  007B63  61                 	db	97	;'a'
   284  007B64  73                 	db	115	;'s'
   285  007B65  20                 	db	32
   286  007B66  74                 	db	116	;'t'
   287  007B67  61                 	db	97	;'a'
   288  007B68  72                 	db	114	;'r'
   289  007B69  64                 	db	100	;'d'
   290  007B6A  65                 	db	101	;'e'
   291  007B6B  20                 	db	32
   292  007B6C  0D                 	db	13
   293  007B6D  0A                 	db	10
   294  007B6E  00                 	db	0
   295  007B6F                     STR_42:
   296  007B6F  0D                 	db	13
   297  007B70  0A                 	db	10
   298  007B71  20                 	db	32
   299  007B72  49                 	db	73	;'I'
   300  007B73  6E                 	db	110	;'n'
   301  007B74  67                 	db	103	;'g'
   302  007B75  72                 	db	114	;'r'
   303  007B76  65                 	db	101	;'e'
   304  007B77  73                 	db	115	;'s'
   305  007B78  65                 	db	101	;'e'
   306  007B79  20                 	db	32
   307  007B7A  65                 	db	101	;'e'
   308  007B7B  6C                 	db	108	;'l'
   309  007B7C  20                 	db	32
   310  007B7D  6E                 	db	110	;'n'
   311  007B7E  75                 	db	117	;'u'
   312  007B7F  6D                 	db	109	;'m'
   313  007B80  65                 	db	101	;'e'
   314  007B81  72                 	db	114	;'r'
   315  007B82  6F                 	db	111	;'o'
   316  007B83  20                 	db	32
   317  007B84  64                 	db	100	;'d'
   318  007B85  65                 	db	101	;'e'
   319  007B86  20                 	db	32
   320  007B87  73                 	db	115	;'s'
   321  007B88  65                 	db	101	;'e'
   322  007B89  6E                 	db	110	;'n'
   323  007B8A  73                 	db	115	;'s'
   324  007B8B  6F                 	db	111	;'o'
   325  007B8C  72                 	db	114	;'r'
   326  007B8D  20                 	db	32
   327  007B8E  64                 	db	100	;'d'
   328  007B8F  65                 	db	101	;'e'
   329  007B90  6C                 	db	108	;'l'
   330  007B91  20                 	db	32
   331  007B92  61                 	db	97	;'a'
   332  007B93  72                 	db	114	;'r'
   333  007B94  65                 	db	101	;'e'
   334  007B95  61                 	db	97	;'a'
   335  007B96  20                 	db	32
   336  007B97  61                 	db	97	;'a'
   337  007B98  20                 	db	32
   338  007B99  72                 	db	114	;'r'
   339  007B9A  65                 	db	101	;'e'
   340  007B9B  67                 	db	103	;'g'
   341  007B9C  61                 	db	97	;'a'
   342  007B9D  72                 	db	114	;'r'
   343  007B9E  20                 	db	32
   344  007B9F  65                 	db	101	;'e'
   345  007BA0  6A                 	db	106	;'j'
   346  007BA1  3A                 	db	58	;':'
   347  007BA2  20                 	db	32
   348  007BA3  35                 	db	53	;'5'
   349  007BA4  20                 	db	32
   350  007BA5  0D                 	db	13
   351  007BA6  0A                 	db	10
   352  007BA7  00                 	db	0
   353  007BA8                     STR_41:
   354  007BA8  0D                 	db	13
   355  007BA9  0A                 	db	10
   356  007BAA  20                 	db	32
   357  007BAB  49                 	db	73	;'I'
   358  007BAC  6E                 	db	110	;'n'
   359  007BAD  67                 	db	103	;'g'
   360  007BAE  72                 	db	114	;'r'
   361  007BAF  65                 	db	101	;'e'
   362  007BB0  73                 	db	115	;'s'
   363  007BB1  65                 	db	101	;'e'
   364  007BB2  20                 	db	32
   365  007BB3  6C                 	db	108	;'l'
   366  007BB4  6F                 	db	111	;'o'
   367  007BB5  73                 	db	115	;'s'
   368  007BB6  20                 	db	32
   369  007BB7  6D                 	db	109	;'m'
   370  007BB8  69                 	db	105	;'i'
   371  007BB9  6E                 	db	110	;'n'
   372  007BBA  75                 	db	117	;'u'
   373  007BBB  74                 	db	116	;'t'
   374  007BBC  6F                 	db	111	;'o'
   375  007BBD  73                 	db	115	;'s'
   376  007BBE  20                 	db	32
   377  007BBF  71                 	db	113	;'q'
   378  007BC0  75                 	db	117	;'u'
   379  007BC1  65                 	db	101	;'e'
   380  007BC2  20                 	db	32
   381  007BC3  64                 	db	100	;'d'
   382  007BC4  65                 	db	101	;'e'
   383  007BC5  73                 	db	115	;'s'
   384  007BC6  65                 	db	101	;'e'
   385  007BC7  65                 	db	101	;'e'
   386  007BC8  20                 	db	32
   387  007BC9  71                 	db	113	;'q'
   388  007BCA  75                 	db	117	;'u'
   389  007BCB  65                 	db	101	;'e'
   390  007BCC  20                 	db	32
   391  007BCD  73                 	db	115	;'s'
   392  007BCE  65                 	db	101	;'e'
   393  007BCF  20                 	db	32
   394  007BD0  72                 	db	114	;'r'
   395  007BD1  69                 	db	105	;'i'
   396  007BD2  65                 	db	101	;'e'
   397  007BD3  67                 	db	103	;'g'
   398  007BD4  75                 	db	117	;'u'
   399  007BD5  65                 	db	101	;'e'
   400  007BD6  20                 	db	32
   401  007BD7  65                 	db	101	;'e'
   402  007BD8  6A                 	db	106	;'j'
   403  007BD9  3A                 	db	58	;':'
   404  007BDA  20                 	db	32
   405  007BDB  31                 	db	49	;'1'
   406  007BDC  35                 	db	53	;'5'
   407  007BDD  20                 	db	32
   408  007BDE  0D                 	db	13
   409  007BDF  0A                 	db	10
   410  007BE0  00                 	db	0
   411  007BE1                     STR_7:
   412  007BE1  0D                 	db	13
   413  007BE2  0A                 	db	10
   414  007BE3  20                 	db	32
   415  007BE4  49                 	db	73	;'I'
   416  007BE5  6E                 	db	110	;'n'
   417  007BE6  67                 	db	103	;'g'
   418  007BE7  72                 	db	114	;'r'
   419  007BE8  65                 	db	101	;'e'
   420  007BE9  73                 	db	115	;'s'
   421  007BEA  65                 	db	101	;'e'
   422  007BEB  20                 	db	32
   423  007BEC  31                 	db	49	;'1'
   424  007BED  20                 	db	32
   425  007BEE  70                 	db	112	;'p'
   426  007BEF  61                 	db	97	;'a'
   427  007BF0  72                 	db	114	;'r'
   428  007BF1  61                 	db	97	;'a'
   429  007BF2  20                 	db	32
   430  007BF3  72                 	db	114	;'r'
   431  007BF4  65                 	db	101	;'e'
   432  007BF5  67                 	db	103	;'g'
   433  007BF6  61                 	db	97	;'a'
   434  007BF7  72                 	db	114	;'r'
   435  007BF8  20                 	db	32
   436  007BF9  7C                 	db	124
   437  007BFA  7C                 	db	124
   438  007BFB  20                 	db	32
   439  007BFC  69                 	db	105	;'i'
   440  007BFD  6E                 	db	110	;'n'
   441  007BFE  67                 	db	103	;'g'
   442  007BFF  72                 	db	114	;'r'
   443  007C00  65                 	db	101	;'e'
   444  007C01  73                 	db	115	;'s'
   445  007C02  65                 	db	101	;'e'
   446  007C03  20                 	db	32
   447  007C04  30                 	db	48	;'0'
   448  007C05  20                 	db	32
   449  007C06  70                 	db	112	;'p'
   450  007C07  61                 	db	97	;'a'
   451  007C08  72                 	db	114	;'r'
   452  007C09  61                 	db	97	;'a'
   453  007C0A  20                 	db	32
   454  007C0B  6E                 	db	110	;'n'
   455  007C0C  6F                 	db	111	;'o'
   456  007C0D  20                 	db	32
   457  007C0E  72                 	db	114	;'r'
   458  007C0F  65                 	db	101	;'e'
   459  007C10  67                 	db	103	;'g'
   460  007C11  61                 	db	97	;'a'
   461  007C12  72                 	db	114	;'r'
   462  007C13  3A                 	db	58	;':'
   463  007C14  20                 	db	32
   464  007C15  0D                 	db	13
   465  007C16  0A                 	db	10
   466  007C17  00                 	db	0
   467  007C18                     STR_6:
   468  007C18  0D                 	db	13
   469  007C19  0A                 	db	10
   470  007C1A  20                 	db	32
   471  007C1B  49                 	db	73	;'I'
   472  007C1C  6E                 	db	110	;'n'
   473  007C1D  67                 	db	103	;'g'
   474  007C1E  72                 	db	114	;'r'
   475  007C1F  65                 	db	101	;'e'
   476  007C20  73                 	db	115	;'s'
   477  007C21  65                 	db	101	;'e'
   478  007C22  20                 	db	32
   479  007C23  75                 	db	117	;'u'
   480  007C24  6E                 	db	110	;'n'
   481  007C25  61                 	db	97	;'a'
   482  007C26  20                 	db	32
   483  007C27  68                 	db	104	;'h'
   484  007C28  6F                 	db	111	;'o'
   485  007C29  72                 	db	114	;'r'
   486  007C2A  61                 	db	97	;'a'
   487  007C2B  20                 	db	32
   488  007C2C  65                 	db	101	;'e'
   489  007C2D  6E                 	db	110	;'n'
   490  007C2E  20                 	db	32
   491  007C2F  66                 	db	102	;'f'
   492  007C30  6F                 	db	111	;'o'
   493  007C31  72                 	db	114	;'r'
   494  007C32  6D                 	db	109	;'m'
   495  007C33  61                 	db	97	;'a'
   496  007C34  74                 	db	116	;'t'
   497  007C35  6F                 	db	111	;'o'
   498  007C36  20                 	db	32
   499  007C37  64                 	db	100	;'d'
   500  007C38  65                 	db	101	;'e'
   501  007C39  20                 	db	32
   502  007C3A  32                 	db	50	;'2'
   503  007C3B  34                 	db	52	;'4'
   504  007C3C  20                 	db	32
   505  007C3D  68                 	db	104	;'h'
   506  007C3E  72                 	db	114	;'r'
   507  007C3F  73                 	db	115	;'s'
   508  007C40  20                 	db	32
   509  007C41  65                 	db	101	;'e'
   510  007C42  6A                 	db	106	;'j'
   511  007C43  3A                 	db	58	;':'
   512  007C44  20                 	db	32
   513  007C45  31                 	db	49	;'1'
   514  007C46  35                 	db	53	;'5'
   515  007C47  20                 	db	32
   516  007C48  0D                 	db	13
   517  007C49  0A                 	db	10
   518  007C4A  00                 	db	0
   519  007C4B                     STR_14:
   520  007C4B  0D                 	db	13
   521  007C4C  0A                 	db	10
   522  007C4D  49                 	db	73	;'I'
   523  007C4E  6E                 	db	110	;'n'
   524  007C4F  67                 	db	103	;'g'
   525  007C50  72                 	db	114	;'r'
   526  007C51  65                 	db	101	;'e'
   527  007C52  73                 	db	115	;'s'
   528  007C53  65                 	db	101	;'e'
   529  007C54  20                 	db	32
   530  007C55  65                 	db	101	;'e'
   531  007C56  6C                 	db	108	;'l'
   532  007C57  20                 	db	32
   533  007C58  70                 	db	112	;'p'
   534  007C59  6F                 	db	111	;'o'
   535  007C5A  72                 	db	114	;'r'
   536  007C5B  63                 	db	99	;'c'
   537  007C5C  65                 	db	101	;'e'
   538  007C5D  6E                 	db	110	;'n'
   539  007C5E  74                 	db	116	;'t'
   540  007C5F  61                 	db	97	;'a'
   541  007C60  6A                 	db	106	;'j'
   542  007C61  65                 	db	101	;'e'
   543  007C62  20                 	db	32
   544  007C63  64                 	db	100	;'d'
   545  007C64  65                 	db	101	;'e'
   546  007C65  20                 	db	32
   547  007C66  68                 	db	104	;'h'
   548  007C67  75                 	db	117	;'u'
   549  007C68  6D                 	db	109	;'m'
   550  007C69  65                 	db	101	;'e'
   551  007C6A  64                 	db	100	;'d'
   552  007C6B  61                 	db	97	;'a'
   553  007C6C  64                 	db	100	;'d'
   554  007C6D  20                 	db	32
   555  007C6E  64                 	db	100	;'d'
   556  007C6F  65                 	db	101	;'e'
   557  007C70  6C                 	db	108	;'l'
   558  007C71  20                 	db	32
   559  007C72  73                 	db	115	;'s'
   560  007C73  65                 	db	101	;'e'
   561  007C74  6E                 	db	110	;'n'
   562  007C75  73                 	db	115	;'s'
   563  007C76  6F                 	db	111	;'o'
   564  007C77  72                 	db	114	;'r'
   565  007C78  20                 	db	32
   566  007C79  25                 	db	37
   567  007C7A  64                 	db	100	;'d'
   568  007C7B  0D                 	db	13
   569  007C7C  0A                 	db	10
   570  007C7D  00                 	db	0
   571  007C7E                     STR_26:
   572  007C7E  0D                 	db	13
   573  007C7F  0A                 	db	10
   574  007C80  0A                 	db	10
   575  007C81  48                 	db	72	;'H'
   576  007C82  6F                 	db	111	;'o'
   577  007C83  72                 	db	114	;'r'
   578  007C84  61                 	db	97	;'a'
   579  007C85  20                 	db	32
   580  007C86  7C                 	db	124
   581  007C87  20                 	db	32
   582  007C88  52                 	db	82	;'R'
   583  007C89  65                 	db	101	;'e'
   584  007C8A  67                 	db	103	;'g'
   585  007C8B  61                 	db	97	;'a'
   586  007C8C  72                 	db	114	;'r'
   587  007C8D  28                 	db	40
   588  007C8E  31                 	db	49	;'1'
   589  007C8F  20                 	db	32
   590  007C90  73                 	db	115	;'s'
   591  007C91  69                 	db	105	;'i'
   592  007C92  20                 	db	32
   593  007C93  30                 	db	48	;'0'
   594  007C94  20                 	db	32
   595  007C95  6E                 	db	110	;'n'
   596  007C96  6F                 	db	111	;'o'
   597  007C97  29                 	db	41
   598  007C98  20                 	db	32
   599  007C99  7C                 	db	124
   600  007C9A  20                 	db	32
   601  007C9B  4D                 	db	77	;'M'
   602  007C9C  69                 	db	105	;'i'
   603  007C9D  6E                 	db	110	;'n'
   604  007C9E  75                 	db	117	;'u'
   605  007C9F  74                 	db	116	;'t'
   606  007CA0  6F                 	db	111	;'o'
   607  007CA1  73                 	db	115	;'s'
   608  007CA2  20                 	db	32
   609  007CA3  64                 	db	100	;'d'
   610  007CA4  65                 	db	101	;'e'
   611  007CA5  20                 	db	32
   612  007CA6  72                 	db	114	;'r'
   613  007CA7  69                 	db	105	;'i'
   614  007CA8  65                 	db	101	;'e'
   615  007CA9  67                 	db	103	;'g'
   616  007CAA  6F                 	db	111	;'o'
   617  007CAB  20                 	db	32
   618  007CAC  0D                 	db	13
   619  007CAD  0A                 	db	10
   620  007CAE  0A                 	db	10
   621  007CAF  00                 	db	0
   622  007CB0                     STR_19:
   623  007CB0  0D                 	db	13
   624  007CB1  0A                 	db	10
   625  007CB2  20                 	db	32
   626  007CB3  33                 	db	51	;'3'
   627  007CB4  2E                 	db	46
   628  007CB5  20                 	db	32
   629  007CB6  50                 	db	80	;'P'
   630  007CB7  72                 	db	114	;'r'
   631  007CB8  6F                 	db	111	;'o'
   632  007CB9  67                 	db	103	;'g'
   633  007CBA  72                 	db	114	;'r'
   634  007CBB  61                 	db	97	;'a'
   635  007CBC  6D                 	db	109	;'m'
   636  007CBD  61                 	db	97	;'a'
   637  007CBE  72                 	db	114	;'r'
   638  007CBF  20                 	db	32
   639  007CC0  74                 	db	116	;'t'
   640  007CC1  69                 	db	105	;'i'
   641  007CC2  65                 	db	101	;'e'
   642  007CC3  6D                 	db	109	;'m'
   643  007CC4  70                 	db	112	;'p'
   644  007CC5  6F                 	db	111	;'o'
   645  007CC6  20                 	db	32
   646  007CC7  64                 	db	100	;'d'
   647  007CC8  65                 	db	101	;'e'
   648  007CC9  20                 	db	32
   649  007CCA  72                 	db	114	;'r'
   650  007CCB  69                 	db	105	;'i'
   651  007CCC  65                 	db	101	;'e'
   652  007CCD  67                 	db	103	;'g'
   653  007CCE  6F                 	db	111	;'o'
   654  007CCF  20                 	db	32
   655  007CD0  65                 	db	101	;'e'
   656  007CD1  6E                 	db	110	;'n'
   657  007CD2  20                 	db	32
   658  007CD3  75                 	db	117	;'u'
   659  007CD4  6E                 	db	110	;'n'
   660  007CD5  20                 	db	32
   661  007CD6  68                 	db	104	;'h'
   662  007CD7  6F                 	db	111	;'o'
   663  007CD8  72                 	db	114	;'r'
   664  007CD9  61                 	db	97	;'a'
   665  007CDA  72                 	db	114	;'r'
   666  007CDB  69                 	db	105	;'i'
   667  007CDC  6F                 	db	111	;'o'
   668  007CDD  20                 	db	32
   669  007CDE  0D                 	db	13
   670  007CDF  0A                 	db	10
   671  007CE0  00                 	db	0
   672  007CE1                     STR_32:
   673  007CE1  0D                 	db	13
   674  007CE2  0A                 	db	10
   675  007CE3  0A                 	db	10
   676  007CE4  50                 	db	80	;'P'
   677  007CE5  6F                 	db	111	;'o'
   678  007CE6  72                 	db	114	;'r'
   679  007CE7  63                 	db	99	;'c'
   680  007CE8  65                 	db	101	;'e'
   681  007CE9  6E                 	db	110	;'n'
   682  007CEA  74                 	db	116	;'t'
   683  007CEB  61                 	db	97	;'a'
   684  007CEC  6A                 	db	106	;'j'
   685  007CED  65                 	db	101	;'e'
   686  007CEE  20                 	db	32
   687  007CEF  48                 	db	72	;'H'
   688  007CF0  75                 	db	117	;'u'
   689  007CF1  6D                 	db	109	;'m'
   690  007CF2  65                 	db	101	;'e'
   691  007CF3  64                 	db	100	;'d'
   692  007CF4  61                 	db	97	;'a'
   693  007CF5  64                 	db	100	;'d'
   694  007CF6  20                 	db	32
   695  007CF7  64                 	db	100	;'d'
   696  007CF8  65                 	db	101	;'e'
   697  007CF9  6C                 	db	108	;'l'
   698  007CFA  20                 	db	32
   699  007CFB  73                 	db	115	;'s'
   700  007CFC  65                 	db	101	;'e'
   701  007CFD  6E                 	db	110	;'n'
   702  007CFE  73                 	db	115	;'s'
   703  007CFF  6F                 	db	111	;'o'
   704  007D00  72                 	db	114	;'r'
   705  007D01  20                 	db	32
   706  007D02  25                 	db	37
   707  007D03  64                 	db	100	;'d'
   708  007D04  3A                 	db	58	;':'
   709  007D05  20                 	db	32
   710  007D06  25                 	db	37
   711  007D07  64                 	db	100	;'d'
   712  007D08  20                 	db	32
   713  007D09  25                 	db	37
   714  007D0A  63                 	db	99	;'c'
   715  007D0B  0D                 	db	13
   716  007D0C  0A                 	db	10
   717  007D0D  00                 	db	0
   718  007D0E                     STR_2:
   719  007D0E  0D                 	db	13
   720  007D0F  0A                 	db	10
   721  007D10  20                 	db	32
   722  007D11  45                 	db	69	;'E'
   723  007D12  6E                 	db	110	;'n'
   724  007D13  76                 	db	118	;'v'
   725  007D14  69                 	db	105	;'i'
   726  007D15  65                 	db	101	;'e'
   727  007D16  20                 	db	32
   728  007D17  6C                 	db	108	;'l'
   729  007D18  61                 	db	97	;'a'
   730  007D19  73                 	db	115	;'s'
   731  007D1A  20                 	db	32
   732  007D1B  48                 	db	72	;'H'
   733  007D1C  6F                 	db	111	;'o'
   734  007D1D  72                 	db	114	;'r'
   735  007D1E  61                 	db	97	;'a'
   736  007D1F  73                 	db	115	;'s'
   737  007D20  20                 	db	32
   738  007D21  65                 	db	101	;'e'
   739  007D22  6E                 	db	110	;'n'
   740  007D23  20                 	db	32
   741  007D24  66                 	db	102	;'f'
   742  007D25  6F                 	db	111	;'o'
   743  007D26  72                 	db	114	;'r'
   744  007D27  6D                 	db	109	;'m'
   745  007D28  61                 	db	97	;'a'
   746  007D29  74                 	db	116	;'t'
   747  007D2A  6F                 	db	111	;'o'
   748  007D2B  20                 	db	32
   749  007D2C  32                 	db	50	;'2'
   750  007D2D  34                 	db	52	;'4'
   751  007D2E  20                 	db	32
   752  007D2F  45                 	db	69	;'E'
   753  007D30  6A                 	db	106	;'j'
   754  007D31  3A                 	db	58	;':'
   755  007D32  20                 	db	32
   756  007D33  31                 	db	49	;'1'
   757  007D34  35                 	db	53	;'5'
   758  007D35  20                 	db	32
   759  007D36  0D                 	db	13
   760  007D37  0A                 	db	10
   761  007D38  00                 	db	0
   762  007D39                     STR_25:
   763  007D39  0D                 	db	13
   764  007D3A  0A                 	db	10
   765  007D3B  20                 	db	32
   766  007D3C  53                 	db	83	;'S'
   767  007D3D  6F                 	db	111	;'o'
   768  007D3E  6C                 	db	108	;'l'
   769  007D3F  6F                 	db	111	;'o'
   770  007D40  20                 	db	32
   771  007D41  73                 	db	115	;'s'
   772  007D42  65                 	db	101	;'e'
   773  007D43  20                 	db	32
   774  007D44  70                 	db	112	;'p'
   775  007D45  65                 	db	101	;'e'
   776  007D46  72                 	db	114	;'r'
   777  007D47  6D                 	db	109	;'m'
   778  007D48  69                 	db	105	;'i'
   779  007D49  74                 	db	116	;'t'
   780  007D4A  65                 	db	101	;'e'
   781  007D4B  6E                 	db	110	;'n'
   782  007D4C  20                 	db	32
   783  007D4D  6E                 	db	110	;'n'
   784  007D4E  75                 	db	117	;'u'
   785  007D4F  6D                 	db	109	;'m'
   786  007D50  65                 	db	101	;'e'
   787  007D51  72                 	db	114	;'r'
   788  007D52  6F                 	db	111	;'o'
   789  007D53  73                 	db	115	;'s'
   790  007D54  20                 	db	32
   791  007D55  64                 	db	100	;'d'
   792  007D56  65                 	db	101	;'e'
   793  007D57  6C                 	db	108	;'l'
   794  007D58  20                 	db	32
   795  007D59  31                 	db	49	;'1'
   796  007D5A  20                 	db	32
   797  007D5B  61                 	db	97	;'a'
   798  007D5C  6C                 	db	108	;'l'
   799  007D5D  20                 	db	32
   800  007D5E  33                 	db	51	;'3'
   801  007D5F  20                 	db	32
   802  007D60  0D                 	db	13
   803  007D61  0A                 	db	10
   804  007D62  00                 	db	0
   805  007D63                     STR_13:
   806  007D63  0D                 	db	13
   807  007D64  0A                 	db	10
   808  007D65  53                 	db	83	;'S'
   809  007D66  6F                 	db	111	;'o'
   810  007D67  6C                 	db	108	;'l'
   811  007D68  69                 	db	105	;'i'
   812  007D69  63                 	db	99	;'c'
   813  007D6A  69                 	db	105	;'i'
   814  007D6B  74                 	db	116	;'t'
   815  007D6C  61                 	db	97	;'a'
   816  007D6D  6E                 	db	110	;'n'
   817  007D6E  64                 	db	100	;'d'
   818  007D6F  6F                 	db	111	;'o'
   819  007D70  20                 	db	32
   820  007D71  4D                 	db	77	;'M'
   821  007D72  75                 	db	117	;'u'
   822  007D73  65                 	db	101	;'e'
   823  007D74  73                 	db	115	;'s'
   824  007D75  74                 	db	116	;'t'
   825  007D76  72                 	db	114	;'r'
   826  007D77  65                 	db	101	;'e'
   827  007D78  6F                 	db	111	;'o'
   828  007D79  20                 	db	32
   829  007D7A  64                 	db	100	;'d'
   830  007D7B  65                 	db	101	;'e'
   831  007D7C  20                 	db	32
   832  007D7D  73                 	db	115	;'s'
   833  007D7E  65                 	db	101	;'e'
   834  007D7F  6E                 	db	110	;'n'
   835  007D80  73                 	db	115	;'s'
   836  007D81  6F                 	db	111	;'o'
   837  007D82  72                 	db	114	;'r'
   838  007D83  65                 	db	101	;'e'
   839  007D84  73                 	db	115	;'s'
   840  007D85  0D                 	db	13
   841  007D86  0A                 	db	10
   842  007D87  0A                 	db	10
   843  007D88  00                 	db	0
   844  007D89                     STR_12:
   845  007D89  0D                 	db	13
   846  007D8A  0A                 	db	10
   847  007D8B  20                 	db	32
   848  007D8C  4D                 	db	77	;'M'
   849  007D8D  69                 	db	105	;'i'
   850  007D8E  6E                 	db	110	;'n'
   851  007D8F  75                 	db	117	;'u'
   852  007D90  74                 	db	116	;'t'
   853  007D91  6F                 	db	111	;'o'
   854  007D92  73                 	db	115	;'s'
   855  007D93  20                 	db	32
   856  007D94  64                 	db	100	;'d'
   857  007D95  65                 	db	101	;'e'
   858  007D96  20                 	db	32
   859  007D97  72                 	db	114	;'r'
   860  007D98  69                 	db	105	;'i'
   861  007D99  65                 	db	101	;'e'
   862  007D9A  67                 	db	103	;'g'
   863  007D9B  6F                 	db	111	;'o'
   864  007D9C  20                 	db	32
   865  007D9D  65                 	db	101	;'e'
   866  007D9E  73                 	db	115	;'s'
   867  007D9F  74                 	db	116	;'t'
   868  007DA0  61                 	db	97	;'a'
   869  007DA1  62                 	db	98	;'b'
   870  007DA2  6C                 	db	108	;'l'
   871  007DA3  65                 	db	101	;'e'
   872  007DA4  63                 	db	99	;'c'
   873  007DA5  69                 	db	105	;'i'
   874  007DA6  64                 	db	100	;'d'
   875  007DA7  6F                 	db	111	;'o'
   876  007DA8  73                 	db	115	;'s'
   877  007DA9  21                 	db	33
   878  007DAA  20                 	db	32
   879  007DAB  0D                 	db	13
   880  007DAC  0A                 	db	10
   881  007DAD  00                 	db	0
   882  007DAE                     STR_16:
   883  007DAE  0D                 	db	13
   884  007DAF  0A                 	db	10
   885  007DB0  20                 	db	32
   886  007DB1  49                 	db	73	;'I'
   887  007DB2  6E                 	db	110	;'n'
   888  007DB3  67                 	db	103	;'g'
   889  007DB4  72                 	db	114	;'r'
   890  007DB5  65                 	db	101	;'e'
   891  007DB6  73                 	db	115	;'s'
   892  007DB7  61                 	db	97	;'a'
   893  007DB8  20                 	db	32
   894  007DB9  75                 	db	117	;'u'
   895  007DBA  6E                 	db	110	;'n'
   896  007DBB  61                 	db	97	;'a'
   897  007DBC  20                 	db	32
   898  007DBD  6F                 	db	111	;'o'
   899  007DBE  70                 	db	112	;'p'
   900  007DBF  63                 	db	99	;'c'
   901  007DC0  69                 	db	105	;'i'
   902  007DC1  6F                 	db	111	;'o'
   903  007DC2  6E                 	db	110	;'n'
   904  007DC3  20                 	db	32
   905  007DC4  61                 	db	97	;'a'
   906  007DC5  20                 	db	32
   907  007DC6  52                 	db	82	;'R'
   908  007DC7  65                 	db	101	;'e'
   909  007DC8  61                 	db	97	;'a'
   910  007DC9  6C                 	db	108	;'l'
   911  007DCA  69                 	db	105	;'i'
   912  007DCB  7A                 	db	122	;'z'
   913  007DCC  61                 	db	97	;'a'
   914  007DCD  72                 	db	114	;'r'
   915  007DCE  3A                 	db	58	;':'
   916  007DCF  20                 	db	32
   917  007DD0  0D                 	db	13
   918  007DD1  0A                 	db	10
   919  007DD2  00                 	db	0
   920  007DD3                     STR_4:
   921  007DD3  0D                 	db	13
   922  007DD4  0A                 	db	10
   923  007DD5  20                 	db	32
   924  007DD6  48                 	db	72	;'H'
   925  007DD7  4F                 	db	79	;'O'
   926  007DD8  52                 	db	82	;'R'
   927  007DD9  41                 	db	65	;'A'
   928  007DDA  20                 	db	32
   929  007DDB  45                 	db	69	;'E'
   930  007DDC  53                 	db	83	;'S'
   931  007DDD  54                 	db	84	;'T'
   932  007DDE  41                 	db	65	;'A'
   933  007DDF  42                 	db	66	;'B'
   934  007DE0  4C                 	db	76	;'L'
   935  007DE1  45                 	db	69	;'E'
   936  007DE2  43                 	db	67	;'C'
   937  007DE3  49                 	db	73	;'I'
   938  007DE4  44                 	db	68	;'D'
   939  007DE5  41                 	db	65	;'A'
   940  007DE6  20                 	db	32
   941  007DE7  43                 	db	67	;'C'
   942  007DE8  4F                 	db	79	;'O'
   943  007DE9  52                 	db	82	;'R'
   944  007DEA  52                 	db	82	;'R'
   945  007DEB  45                 	db	69	;'E'
   946  007DEC  43                 	db	67	;'C'
   947  007DED  54                 	db	84	;'T'
   948  007DEE  41                 	db	65	;'A'
   949  007DEF  4D                 	db	77	;'M'
   950  007DF0  45                 	db	69	;'E'
   951  007DF1  4E                 	db	78	;'N'
   952  007DF2  54                 	db	84	;'T'
   953  007DF3  45                 	db	69	;'E'
   954  007DF4  20                 	db	32
   955  007DF5  0D                 	db	13
   956  007DF6  0A                 	db	10
   957  007DF7  00                 	db	0
   958  007DF8                     STR_18:
   959  007DF8  0D                 	db	13
   960  007DF9  0A                 	db	10
   961  007DFA  20                 	db	32
   962  007DFB  32                 	db	50	;'2'
   963  007DFC  2E                 	db	46
   964  007DFD  20                 	db	32
   965  007DFE  41                 	db	65	;'A'
   966  007DFF  73                 	db	115	;'s'
   967  007E00  69                 	db	105	;'i'
   968  007E01  67                 	db	103	;'g'
   969  007E02  6E                 	db	110	;'n'
   970  007E03  61                 	db	97	;'a'
   971  007E04  72                 	db	114	;'r'
   972  007E05  20                 	db	32
   973  007E06  48                 	db	72	;'H'
   974  007E07  6F                 	db	111	;'o'
   975  007E08  72                 	db	114	;'r'
   976  007E09  61                 	db	97	;'a'
   977  007E0A  72                 	db	114	;'r'
   978  007E0B  69                 	db	105	;'i'
   979  007E0C  6F                 	db	111	;'o'
   980  007E0D  73                 	db	115	;'s'
   981  007E0E  20                 	db	32
   982  007E0F  70                 	db	112	;'p'
   983  007E10  61                 	db	97	;'a'
   984  007E11  72                 	db	114	;'r'
   985  007E12  61                 	db	97	;'a'
   986  007E13  20                 	db	32
   987  007E14  72                 	db	114	;'r'
   988  007E15  65                 	db	101	;'e'
   989  007E16  67                 	db	103	;'g'
   990  007E17  61                 	db	97	;'a'
   991  007E18  72                 	db	114	;'r'
   992  007E19  20                 	db	32
   993  007E1A  0D                 	db	13
   994  007E1B  0A                 	db	10
   995  007E1C  00                 	db	0
   996  007E1D                     STR_21:
   997  007E1D  0D                 	db	13
   998  007E1E  0A                 	db	10
   999  007E1F  20                 	db	32
  1000  007E20  35                 	db	53	;'5'
  1001  007E21  2E                 	db	46
  1002  007E22  20                 	db	32
  1003  007E23  4D                 	db	77	;'M'
  1004  007E24  6F                 	db	111	;'o'
  1005  007E25  73                 	db	115	;'s'
  1006  007E26  74                 	db	116	;'t'
  1007  007E27  72                 	db	114	;'r'
  1008  007E28  61                 	db	97	;'a'
  1009  007E29  72                 	db	114	;'r'
  1010  007E2A  20                 	db	32
  1011  007E2B  76                 	db	118	;'v'
  1012  007E2C  61                 	db	97	;'a'
  1013  007E2D  6C                 	db	108	;'l'
  1014  007E2E  6F                 	db	111	;'o'
  1015  007E2F  72                 	db	114	;'r'
  1016  007E30  65                 	db	101	;'e'
  1017  007E31  73                 	db	115	;'s'
  1018  007E32  20                 	db	32
  1019  007E33  73                 	db	115	;'s'
  1020  007E34  65                 	db	101	;'e'
  1021  007E35  6E                 	db	110	;'n'
  1022  007E36  73                 	db	115	;'s'
  1023  007E37  6F                 	db	111	;'o'
  1024  007E38  72                 	db	114	;'r'
  1025  007E39  65                 	db	101	;'e'
  1026  007E3A  73                 	db	115	;'s'
  1027  007E3B  20                 	db	32
  1028  007E3C  0D                 	db	13
  1029  007E3D  0A                 	db	10
  1030  007E3E  00                 	db	0
  1031  007E3F                     STR_15:
  1032  007E3F  0D                 	db	13
  1033  007E40  0A                 	db	10
  1034  007E41  53                 	db	83	;'S'
  1035  007E42  65                 	db	101	;'e'
  1036  007E43  6E                 	db	110	;'n'
  1037  007E44  73                 	db	115	;'s'
  1038  007E45  6F                 	db	111	;'o'
  1039  007E46  72                 	db	114	;'r'
  1040  007E47  65                 	db	101	;'e'
  1041  007E48  73                 	db	115	;'s'
  1042  007E49  20                 	db	32
  1043  007E4A  4C                 	db	76	;'L'
  1044  007E4B  65                 	db	101	;'e'
  1045  007E4C  69                 	db	105	;'i'
  1046  007E4D  64                 	db	100	;'d'
  1047  007E4E  6F                 	db	111	;'o'
  1048  007E4F  73                 	db	115	;'s'
  1049  007E50  20                 	db	32
  1050  007E51  63                 	db	99	;'c'
  1051  007E52  6F                 	db	111	;'o'
  1052  007E53  6E                 	db	110	;'n'
  1053  007E54  20                 	db	32
  1054  007E55  45                 	db	69	;'E'
  1055  007E56  78                 	db	120	;'x'
  1056  007E57  69                 	db	105	;'i'
  1057  007E58  74                 	db	116	;'t'
  1058  007E59  6F                 	db	111	;'o'
  1059  007E5A  21                 	db	33
  1060  007E5B  0D                 	db	13
  1061  007E5C  0A                 	db	10
  1062  007E5D  0A                 	db	10
  1063  007E5E  00                 	db	0
  1064  007E5F                     STR_20:
  1065  007E5F  0D                 	db	13
  1066  007E60  0A                 	db	10
  1067  007E61  20                 	db	32
  1068  007E62  34                 	db	52	;'4'
  1069  007E63  2E                 	db	46
  1070  007E64  20                 	db	32
  1071  007E65  44                 	db	68	;'D'
  1072  007E66  61                 	db	97	;'a'
  1073  007E67  6D                 	db	109	;'m'
  1074  007E68  65                 	db	101	;'e'
  1075  007E69  20                 	db	32
  1076  007E6A  64                 	db	100	;'d'
  1077  007E6B  61                 	db	97	;'a'
  1078  007E6C  74                 	db	116	;'t'
  1079  007E6D  6F                 	db	111	;'o'
  1080  007E6E  73                 	db	115	;'s'
  1081  007E6F  20                 	db	32
  1082  007E70  64                 	db	100	;'d'
  1083  007E71  65                 	db	101	;'e'
  1084  007E72  6C                 	db	108	;'l'
  1085  007E73  20                 	db	32
  1086  007E74  73                 	db	115	;'s'
  1087  007E75  69                 	db	105	;'i'
  1088  007E76  73                 	db	115	;'s'
  1089  007E77  74                 	db	116	;'t'
  1090  007E78  65                 	db	101	;'e'
  1091  007E79  6D                 	db	109	;'m'
  1092  007E7A  61                 	db	97	;'a'
  1093  007E7B  20                 	db	32
  1094  007E7C  0D                 	db	13
  1095  007E7D  0A                 	db	10
  1096  007E7E  00                 	db	0
  1097  007E7F                     STR_30:
  1098  007E7F  0D                 	db	13
  1099  007E80  0A                 	db	10
  1100  007E81  0A                 	db	10
  1101  007E82  4C                 	db	76	;'L'
  1102  007E83  61                 	db	97	;'a'
  1103  007E84  20                 	db	32
  1104  007E85  48                 	db	72	;'H'
  1105  007E86  75                 	db	117	;'u'
  1106  007E87  6D                 	db	109	;'m'
  1107  007E88  65                 	db	101	;'e'
  1108  007E89  64                 	db	100	;'d'
  1109  007E8A  61                 	db	97	;'a'
  1110  007E8B  64                 	db	100	;'d'
  1111  007E8C  20                 	db	32
  1112  007E8D  41                 	db	65	;'A'
  1113  007E8E  6D                 	db	109	;'m'
  1114  007E8F  62                 	db	98	;'b'
  1115  007E90  69                 	db	105	;'i'
  1116  007E91  65                 	db	101	;'e'
  1117  007E92  6E                 	db	110	;'n'
  1118  007E93  74                 	db	116	;'t'
  1119  007E94  65                 	db	101	;'e'
  1120  007E95  20                 	db	32
  1121  007E96  65                 	db	101	;'e'
  1122  007E97  73                 	db	115	;'s'
  1123  007E98  3A                 	db	58	;':'
  1124  007E99  20                 	db	32
  1125  007E9A  25                 	db	37
  1126  007E9B  64                 	db	100	;'d'
  1127  007E9C  0D                 	db	13
  1128  007E9D  0A                 	db	10
  1129  007E9E  00                 	db	0
  1130  007E9F                     STR_3:
  1131  007E9F  0D                 	db	13
  1132  007EA0  0A                 	db	10
  1133  007EA1  20                 	db	32
  1134  007EA2  45                 	db	69	;'E'
  1135  007EA3  6E                 	db	110	;'n'
  1136  007EA4  76                 	db	118	;'v'
  1137  007EA5  69                 	db	105	;'i'
  1138  007EA6  65                 	db	101	;'e'
  1139  007EA7  20                 	db	32
  1140  007EA8  6C                 	db	108	;'l'
  1141  007EA9  6F                 	db	111	;'o'
  1142  007EAA  73                 	db	115	;'s'
  1143  007EAB  20                 	db	32
  1144  007EAC  4D                 	db	77	;'M'
  1145  007EAD  69                 	db	105	;'i'
  1146  007EAE  6E                 	db	110	;'n'
  1147  007EAF  75                 	db	117	;'u'
  1148  007EB0  74                 	db	116	;'t'
  1149  007EB1  6F                 	db	111	;'o'
  1150  007EB2  73                 	db	115	;'s'
  1151  007EB3  20                 	db	32
  1152  007EB4  45                 	db	69	;'E'
  1153  007EB5  6A                 	db	106	;'j'
  1154  007EB6  3A                 	db	58	;':'
  1155  007EB7  20                 	db	32
  1156  007EB8  32                 	db	50	;'2'
  1157  007EB9  35                 	db	53	;'5'
  1158  007EBA  20                 	db	32
  1159  007EBB  0D                 	db	13
  1160  007EBC  0A                 	db	10
  1161  007EBD  00                 	db	0
  1162  007EBE                     STR_31:
  1163  007EBE  0D                 	db	13
  1164  007EBF  0A                 	db	10
  1165  007EC0  0A                 	db	10
  1166  007EC1  4C                 	db	76	;'L'
  1167  007EC2  61                 	db	97	;'a'
  1168  007EC3  20                 	db	32
  1169  007EC4  54                 	db	84	;'T'
  1170  007EC5  65                 	db	101	;'e'
  1171  007EC6  6D                 	db	109	;'m'
  1172  007EC7  70                 	db	112	;'p'
  1173  007EC8  65                 	db	101	;'e'
  1174  007EC9  72                 	db	114	;'r'
  1175  007ECA  61                 	db	97	;'a'
  1176  007ECB  74                 	db	116	;'t'
  1177  007ECC  75                 	db	117	;'u'
  1178  007ECD  72                 	db	114	;'r'
  1179  007ECE  61                 	db	97	;'a'
  1180  007ECF  20                 	db	32
  1181  007ED0  65                 	db	101	;'e'
  1182  007ED1  73                 	db	115	;'s'
  1183  007ED2  3A                 	db	58	;':'
  1184  007ED3  20                 	db	32
  1185  007ED4  25                 	db	37
  1186  007ED5  64                 	db	100	;'d'
  1187  007ED6  20                 	db	32
  1188  007ED7  43                 	db	67	;'C'
  1189  007ED8  0D                 	db	13
  1190  007ED9  0A                 	db	10
  1191  007EDA  00                 	db	0
  1192  007EDB                     STR_17:
  1193  007EDB  0D                 	db	13
  1194  007EDC  0A                 	db	10
  1195  007EDD  20                 	db	32
  1196  007EDE  31                 	db	49	;'1'
  1197  007EDF  2E                 	db	46
  1198  007EE0  20                 	db	32
  1199  007EE1  46                 	db	70	;'F'
  1200  007EE2  69                 	db	105	;'i'
  1201  007EE3  6A                 	db	106	;'j'
  1202  007EE4  61                 	db	97	;'a'
  1203  007EE5  72                 	db	114	;'r'
  1204  007EE6  20                 	db	32
  1205  007EE7  48                 	db	72	;'H'
  1206  007EE8  6F                 	db	111	;'o'
  1207  007EE9  72                 	db	114	;'r'
  1208  007EEA  61                 	db	97	;'a'
  1209  007EEB  20                 	db	32
  1210  007EEC  41                 	db	65	;'A'
  1211  007EED  63                 	db	99	;'c'
  1212  007EEE  74                 	db	116	;'t'
  1213  007EEF  75                 	db	117	;'u'
  1214  007EF0  61                 	db	97	;'a'
  1215  007EF1  6C                 	db	108	;'l'
  1216  007EF2  20                 	db	32
  1217  007EF3  0D                 	db	13
  1218  007EF4  0A                 	db	10
  1219  007EF5  00                 	db	0
  1220  007EF6                     STR_8:
  1221  007EF6  0D                 	db	13
  1222  007EF7  0A                 	db	10
  1223  007EF8  20                 	db	32
  1224  007EF9  48                 	db	72	;'H'
  1225  007EFA  6F                 	db	111	;'o'
  1226  007EFB  72                 	db	114	;'r'
  1227  007EFC  61                 	db	97	;'a'
  1228  007EFD  72                 	db	114	;'r'
  1229  007EFE  69                 	db	105	;'i'
  1230  007EFF  6F                 	db	111	;'o'
  1231  007F00  20                 	db	32
  1232  007F01  4D                 	db	77	;'M'
  1233  007F02  6F                 	db	111	;'o'
  1234  007F03  64                 	db	100	;'d'
  1235  007F04  69                 	db	105	;'i'
  1236  007F05  66                 	db	102	;'f'
  1237  007F06  69                 	db	105	;'i'
  1238  007F07  63                 	db	99	;'c'
  1239  007F08  61                 	db	97	;'a'
  1240  007F09  64                 	db	100	;'d'
  1241  007F0A  6F                 	db	111	;'o'
  1242  007F0B  21                 	db	33
  1243  007F0C  20                 	db	32
  1244  007F0D  0D                 	db	13
  1245  007F0E  0A                 	db	10
  1246  007F0F  00                 	db	0
  1247  007F10                     STR_5:
  1248  007F10  0D                 	db	13
  1249  007F11  0A                 	db	10
  1250  007F12  20                 	db	32
  1251  007F13  4F                 	db	79	;'O'
  1252  007F14  50                 	db	80	;'P'
  1253  007F15  43                 	db	67	;'C'
  1254  007F16  49                 	db	73	;'I'
  1255  007F17  4F                 	db	79	;'O'
  1256  007F18  4E                 	db	78	;'N'
  1257  007F19  45                 	db	69	;'E'
  1258  007F1A  53                 	db	83	;'S'
  1259  007F1B  20                 	db	32
  1260  007F1C  44                 	db	68	;'D'
  1261  007F1D  45                 	db	69	;'E'
  1262  007F1E  20                 	db	32
  1263  007F1F  52                 	db	82	;'R'
  1264  007F20  45                 	db	69	;'E'
  1265  007F21  47                 	db	71	;'G'
  1266  007F22  41                 	db	65	;'A'
  1267  007F23  44                 	db	68	;'D'
  1268  007F24  4F                 	db	79	;'O'
  1269  007F25  20                 	db	32
  1270  007F26  0D                 	db	13
  1271  007F27  0A                 	db	10
  1272  007F28  00                 	db	0
  1273  007F29                     STR_28:
  1274  007F29  45                 	db	69	;'E'
  1275  007F2A  72                 	db	114	;'r'
  1276  007F2B  72                 	db	114	;'r'
  1277  007F2C  6F                 	db	111	;'o'
  1278  007F2D  72                 	db	114	;'r'
  1279  007F2E  20                 	db	32
  1280  007F2F  64                 	db	100	;'d'
  1281  007F30  65                 	db	101	;'e'
  1282  007F31  20                 	db	32
  1283  007F32  6C                 	db	108	;'l'
  1284  007F33  65                 	db	101	;'e'
  1285  007F34  63                 	db	99	;'c'
  1286  007F35  74                 	db	116	;'t'
  1287  007F36  75                 	db	117	;'u'
  1288  007F37  72                 	db	114	;'r'
  1289  007F38  61                 	db	97	;'a'
  1290  007F39  20                 	db	32
  1291  007F3A  44                 	db	68	;'D'
  1292  007F3B  48                 	db	72	;'H'
  1293  007F3C  54                 	db	84	;'T'
  1294  007F3D  31                 	db	49	;'1'
  1295  007F3E  31                 	db	49	;'1'
  1296  007F3F  0D                 	db	13
  1297  007F40  0A                 	db	10
  1298  007F41  00                 	db	0
  1299  007F42                     STR_9:
  1300  007F42  0D                 	db	13
  1301  007F43  0A                 	db	10
  1302  007F44  20                 	db	32
  1303  007F45  54                 	db	84	;'T'
  1304  007F46  49                 	db	73	;'I'
  1305  007F47  45                 	db	69	;'E'
  1306  007F48  4D                 	db	77	;'M'
  1307  007F49  50                 	db	80	;'P'
  1308  007F4A  4F                 	db	79	;'O'
  1309  007F4B  20                 	db	32
  1310  007F4C  44                 	db	68	;'D'
  1311  007F4D  45                 	db	69	;'E'
  1312  007F4E  20                 	db	32
  1313  007F4F  52                 	db	82	;'R'
  1314  007F50  45                 	db	69	;'E'
  1315  007F51  47                 	db	71	;'G'
  1316  007F52  41                 	db	65	;'A'
  1317  007F53  44                 	db	68	;'D'
  1318  007F54  4F                 	db	79	;'O'
  1319  007F55  20                 	db	32
  1320  007F56  0D                 	db	13
  1321  007F57  0A                 	db	10
  1322  007F58  00                 	db	0
  1323  007F59                     STR_22:
  1324  007F59  0D                 	db	13
  1325  007F5A  0A                 	db	10
  1326  007F5B  20                 	db	32
  1327  007F5C  36                 	db	54	;'6'
  1328  007F5D  2E                 	db	46
  1329  007F5E  20                 	db	32
  1330  007F5F  52                 	db	82	;'R'
  1331  007F60  65                 	db	101	;'e'
  1332  007F61  67                 	db	103	;'g'
  1333  007F62  61                 	db	97	;'a'
  1334  007F63  64                 	db	100	;'d'
  1335  007F64  6F                 	db	111	;'o'
  1336  007F65  20                 	db	32
  1337  007F66  72                 	db	114	;'r'
  1338  007F67  61                 	db	97	;'a'
  1339  007F68  70                 	db	112	;'p'
  1340  007F69  69                 	db	105	;'i'
  1341  007F6A  64                 	db	100	;'d'
  1342  007F6B  6F                 	db	111	;'o'
  1343  007F6C  20                 	db	32
  1344  007F6D  0D                 	db	13
  1345  007F6E  0A                 	db	10
  1346  007F6F  00                 	db	0
  1347  007F70                     STR_29:
  1348  007F70  44                 	db	68	;'D'
  1349  007F71  48                 	db	72	;'H'
  1350  007F72  54                 	db	84	;'T'
  1351  007F73  31                 	db	49	;'1'
  1352  007F74  31                 	db	49	;'1'
  1353  007F75  20                 	db	32
  1354  007F76  4E                 	db	78	;'N'
  1355  007F77  4F                 	db	79	;'O'
  1356  007F78  20                 	db	32
  1357  007F79  52                 	db	82	;'R'
  1358  007F7A  45                 	db	69	;'E'
  1359  007F7B  53                 	db	83	;'S'
  1360  007F7C  50                 	db	80	;'P'
  1361  007F7D  4F                 	db	79	;'O'
  1362  007F7E  4E                 	db	78	;'N'
  1363  007F7F  44                 	db	68	;'D'
  1364  007F80  49                 	db	73	;'I'
  1365  007F81  4F                 	db	79	;'O'
  1366  007F82  0D                 	db	13
  1367  007F83  0A                 	db	10
  1368  007F84  00                 	db	0
  1369  007F85                     STR_40:
  1370  007F85  0D                 	db	13
  1371  007F86  0A                 	db	10
  1372  007F87  20                 	db	32
  1373  007F88  52                 	db	82	;'R'
  1374  007F89  45                 	db	69	;'E'
  1375  007F8A  47                 	db	71	;'G'
  1376  007F8B  41                 	db	65	;'A'
  1377  007F8C  44                 	db	68	;'D'
  1378  007F8D  4F                 	db	79	;'O'
  1379  007F8E  20                 	db	32
  1380  007F8F  52                 	db	82	;'R'
  1381  007F90  41                 	db	65	;'A'
  1382  007F91  50                 	db	80	;'P'
  1383  007F92  49                 	db	73	;'I'
  1384  007F93  44                 	db	68	;'D'
  1385  007F94  4F                 	db	79	;'O'
  1386  007F95  20                 	db	32
  1387  007F96  0D                 	db	13
  1388  007F97  0A                 	db	10
  1389  007F98  00                 	db	0
  1390  007F99                     STR_39:
  1391  007F99  0A                 	db	10
  1392  007F9A  46                 	db	70	;'F'
  1393  007F9B  41                 	db	65	;'A'
  1394  007F9C  4C                 	db	76	;'L'
  1395  007F9D  4C                 	db	76	;'L'
  1396  007F9E  4F                 	db	79	;'O'
  1397  007F9F  20                 	db	32
  1398  007FA0  45                 	db	69	;'E'
  1399  007FA1  4C                 	db	76	;'L'
  1400  007FA2  20                 	db	32
  1401  007FA3  53                 	db	83	;'S'
  1402  007FA4  45                 	db	69	;'E'
  1403  007FA5  54                 	db	84	;'T'
  1404  007FA6  45                 	db	69	;'E'
  1405  007FA7  4F                 	db	79	;'O'
  1406  007FA8  0D                 	db	13
  1407  007FA9  0A                 	db	10
  1408  007FAA  00                 	db	0
  1409  007FAB  41                 	db	65	;'A'
  1410  007FAC  54                 	db	84	;'T'
  1411  007FAD  2B                 	db	43
  1412  007FAE  4E                 	db	78	;'N'
  1413  007FAF  41                 	db	65	;'A'
  1414  007FB0  4D                 	db	77	;'M'
  1415  007FB1  45                 	db	69	;'E'
  1416  007FB2  53                 	db	83	;'S'
  1417  007FB3  4D                 	db	77	;'M'
  1418  007FB4  41                 	db	65	;'A'
  1419  007FB5  52                 	db	82	;'R'
  1420  007FB6  54                 	db	84	;'T'
  1421  007FB7  48                 	db	72	;'H'
  1422  007FB8  4F                 	db	79	;'O'
  1423  007FB9  4D                 	db	77	;'M'
  1424  007FBA  45                 	db	69	;'E'
  1425  007FBB  00                 	db	0
  1426  007FBC                     STR_1:
  1427  007FBC  0D                 	db	13
  1428  007FBD  0A                 	db	10
  1429  007FBE  20                 	db	32
  1430  007FBF  46                 	db	70	;'F'
  1431  007FC0  49                 	db	73	;'I'
  1432  007FC1  4A                 	db	74	;'J'
  1433  007FC2  41                 	db	65	;'A'
  1434  007FC3  20                 	db	32
  1435  007FC4  48                 	db	72	;'H'
  1436  007FC5  4F                 	db	79	;'O'
  1437  007FC6  52                 	db	82	;'R'
  1438  007FC7  41                 	db	65	;'A'
  1439  007FC8  20                 	db	32
  1440  007FC9  0D                 	db	13
  1441  007FCA  0A                 	db	10
  1442  007FCB  00                 	db	0
  1443  007FCC                     STR_27:
  1444  007FCC  25                 	db	37
  1445  007FCD  64                 	db	100	;'d'
  1446  007FCE  20                 	db	32
  1447  007FCF  7C                 	db	124
  1448  007FD0  20                 	db	32
  1449  007FD1  25                 	db	37
  1450  007FD2  64                 	db	100	;'d'
  1451  007FD3  20                 	db	32
  1452  007FD4  7C                 	db	124
  1453  007FD5  20                 	db	32
  1454  007FD6  25                 	db	37
  1455  007FD7  64                 	db	100	;'d'
  1456  007FD8  20                 	db	32
  1457  007FD9  0D                 	db	13
  1458  007FDA  0A                 	db	10
  1459  007FDB  00                 	db	0
  1460  007FDC                     STR_23:
  1461  007FDC  0D                 	db	13
  1462  007FDD  0A                 	db	10
  1463  007FDE  20                 	db	32
  1464  007FDF  4F                 	db	79	;'O'
  1465  007FE0  70                 	db	112	;'p'
  1466  007FE1  63                 	db	99	;'c'
  1467  007FE2  69                 	db	105	;'i'
  1468  007FE3  6F                 	db	111	;'o'
  1469  007FE4  6E                 	db	110	;'n'
  1470  007FE5  3A                 	db	58	;':'
  1471  007FE6  20                 	db	32
  1472  007FE7  20                 	db	32
  1473  007FE8  0D                 	db	13
  1474  007FE9  00                 	db	0
  1475  007FEA  41                 	db	65	;'A'
  1476  007FEB  54                 	db	84	;'T'
  1477  007FEC  2B                 	db	43
  1478  007FED  50                 	db	80	;'P'
  1479  007FEE  49                 	db	73	;'I'
  1480  007FEF  4E                 	db	78	;'N'
  1481  007FF0  32                 	db	50	;'2'
  1482  007FF1  35                 	db	53	;'5'
  1483  007FF2  30                 	db	48	;'0'
  1484  007FF3  31                 	db	49	;'1'
  1485  007FF4  00                 	db	0
  1486  007FF5  41                 	db	65	;'A'
  1487  007FF6  54                 	db	84	;'T'
  1488  007FF7  2B                 	db	43
  1489  007FF8  42                 	db	66	;'B'
  1490  007FF9  41                 	db	65	;'A'
  1491  007FFA  55                 	db	85	;'U'
  1492  007FFB  44                 	db	68	;'D'
  1493  007FFC  34                 	db	52	;'4'
  1494  007FFD  00                 	db	0
  1495  0000                     
  1496                           ; #config settings
  1497  007FFE  00                 	db	0	; dummy byte at the end
  1498  0000                     
  1499                           	psect	cinit
  1500  00232A                     __pcinit:
  1501                           	opt callstack 0
  1502  00232A                     start_initialization:
  1503                           	opt callstack 0
  1504  00232A                     __initialization:
  1505                           	opt callstack 0
  1506                           
  1507                           ; Initialize objects allocated to BANK0 (4 bytes)
  1508                           ; load TBLPTR registers with __pidataBANK0
  1509  00232A  0EBA               	movlw	low __pidataBANK0
  1510  00232C  6EF6               	movwf	tblptrl,c
  1511  00232E  0E26               	movlw	high __pidataBANK0
  1512  002330  6EF7               	movwf	tblptrh,c
  1513  002332  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1514  002334  6EF8               	movwf	tblptru,c
  1515  002336  EE00  F0F8         	lfsr	0,__pdataBANK0
  1516  00233A  EE10 F004          	lfsr	1,4
  1517  00233E                     copy_data0:
  1518  00233E  0009               	tblrd		*+
  1519  002340  CFF5 FFEE          	movff	tablat,postinc0
  1520  002344  50E5               	movf	postdec1,w,c
  1521  002346  50E1               	movf	fsr1l,w,c
  1522  002348  E1FA               	bnz	copy_data0
  1523                           
  1524                           ; Clear objects allocated to BANK1 (144 bytes)
  1525  00234A  EE01  F000         	lfsr	0,__pbssBANK1
  1526  00234E  0E90               	movlw	144
  1527  002350                     clear_0:
  1528  002350  6AEE               	clrf	postinc0,c
  1529  002352  06E8               	decf	wreg,f,c
  1530  002354  E1FD               	bnz	clear_0
  1531                           
  1532                           ; Clear objects allocated to BANK0 (24 bytes)
  1533  002356  EE00  F0E0         	lfsr	0,__pbssBANK0
  1534  00235A  0E18               	movlw	24
  1535  00235C                     clear_1:
  1536  00235C  6AEE               	clrf	postinc0,c
  1537  00235E  06E8               	decf	wreg,f,c
  1538  002360  E1FD               	bnz	clear_1
  1539                           
  1540                           ; Clear objects allocated to COMRAM (2 bytes)
  1541  002362  6A5E               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1542  002364  6A5D               	clrf	__pbssCOMRAM& (0+255),c
  1543  002366                     end_of_initialization:
  1544                           	opt callstack 0
  1545  002366                     __end_of__initialization:
  1546                           	opt callstack 0
  1547  002366  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1548  002368  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1549  00236A  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1550  00236C  6EF8               	movwf	tblptru,c
  1551  00236E  0100               	movlb	0
  1552  002370  EF26  F00E         	goto	_main	;jump to C main() function
  1553                           
  1554                           	psect	bssCOMRAM
  1555  00005D                     __pbssCOMRAM:
  1556                           	opt callstack 0
  1557  00005D                     _hora:
  1558                           	opt callstack 0
  1559  00005D                     	ds	1
  1560  00005E                     _MODO_COMUNICACION:
  1561                           	opt callstack 0
  1562  00005E                     	ds	1
  1563                           
  1564                           	psect	bssBANK0
  1565  0000E0                     __pbssBANK0:
  1566                           	opt callstack 0
  1567  0000E0                     _nout:
  1568                           	opt callstack 0
  1569  0000E0                     	ds	2
  1570  0000E2                     _width:
  1571                           	opt callstack 0
  1572  0000E2                     	ds	2
  1573  0000E4                     _prec:
  1574                           	opt callstack 0
  1575  0000E4                     	ds	2
  1576  0000E6                     _flags:
  1577                           	opt callstack 0
  1578  0000E6                     	ds	2
  1579  0000E8                     _contInterrupciones:
  1580                           	opt callstack 0
  1581  0000E8                     	ds	2
  1582  0000EA                     _peticionLecturaSensores:
  1583                           	opt callstack 0
  1584  0000EA                     	ds	1
  1585  0000EB                     _regando:
  1586                           	opt callstack 0
  1587  0000EB                     	ds	1
  1588  0000EC                     _minutosTranscurridos:
  1589                           	opt callstack 0
  1590  0000EC                     	ds	1
  1591  0000ED                     _minutosRegar:
  1592                           	opt callstack 0
  1593  0000ED                     	ds	1
  1594  0000EE                     _flagRegado:
  1595                           	opt callstack 0
  1596  0000EE                     	ds	1
  1597  0000EF                     _tempHora:
  1598                           	opt callstack 0
  1599  0000EF                     	ds	1
  1600  0000F0                     _overflowTimer:
  1601                           	opt callstack 0
  1602  0000F0                     	ds	1
  1603  0000F1                     _datoRecibido:
  1604                           	opt callstack 0
  1605  0000F1                     	ds	1
  1606  0000F2                     _segundos:
  1607                           	opt callstack 0
  1608  0000F2                     	ds	1
  1609  0000F3                     _minutos:
  1610                           	opt callstack 0
  1611  0000F3                     	ds	1
  1612  0000F4                     _esperandoDatos:
  1613                           	opt callstack 0
  1614  0000F4                     	ds	1
  1615  0000F5                     _esperaDatoConcluida:
  1616                           	opt callstack 0
  1617  0000F5                     	ds	1
  1618  0000F6                     _byteUart:
  1619                           	opt callstack 0
  1620  0000F6                     	ds	1
  1621  0000F7                     _tiempoInactividadTrans:
  1622                           	opt callstack 0
  1623  0000F7                     	ds	1
  1624                           
  1625                           	psect	dataBANK0
  1626  0000F8                     __pdataBANK0:
  1627                           	opt callstack 0
  1628  0000F8                     _VALOR_TIMER0:
  1629                           	opt callstack 0
  1630  0000F8                     	ds	2
  1631  0000FA                     _VALOR_TIMER0UART:
  1632                           	opt callstack 0
  1633  0000FA                     	ds	2
  1634                           
  1635                           	psect	bssBANK1
  1636  000100                     __pbssBANK1:
  1637                           	opt callstack 0
  1638  000100                     _horarios:
  1639                           	opt callstack 0
  1640  000100                     	ds	96
  1641  000160                     _sensores:
  1642                           	opt callstack 0
  1643  000160                     	ds	16
  1644  000170                     _dbuf:
  1645                           	opt callstack 0
  1646  000170                     	ds	32
  1647                           
  1648                           	psect	cstackBANK0
  1649  000060                     __pcstackBANK0:
  1650                           	opt callstack 0
  1651  000060                     ?_sprintf:
  1652                           	opt callstack 0
  1653  000060                     sprintf@s:
  1654                           	opt callstack 0
  1655                           
  1656                           ; 2 bytes @ 0x0
  1657  000060                     	ds	2
  1658  000062                     sprintf@fmt:
  1659                           	opt callstack 0
  1660                           
  1661                           ; 2 bytes @ 0x2
  1662  000062                     	ds	10
  1663  00006C                     sprintf@ap:
  1664                           	opt callstack 0
  1665                           
  1666                           ; 2 bytes @ 0xC
  1667  00006C                     	ds	2
  1668  00006E                     sprintf@f:
  1669                           	opt callstack 0
  1670                           
  1671                           ; 6 bytes @ 0xE
  1672  00006E                     	ds	6
  1673  000074                     ??_dameDatosSistema:
  1674  000074                     lecturaWifi@buffer:
  1675                           	opt callstack 0
  1676  000074                     mostrarDatosSensores@buffer:
  1677                           	opt callstack 0
  1678                           
  1679                           ; 50 bytes @ 0x14
  1680  000074                     	ds	9
  1681  00007D                     dameDatosSistema@buffer:
  1682                           	opt callstack 0
  1683                           
  1684                           ; 50 bytes @ 0x1D
  1685  00007D                     	ds	41
  1686  0000A6                     lecturaWifi@Rx:
  1687                           	opt callstack 0
  1688  0000A6                     mostrarDatosSensores@temperatura:
  1689                           	opt callstack 0
  1690                           
  1691                           ; 1 bytes @ 0x46
  1692  0000A6                     	ds	1
  1693  0000A7                     lecturaWifi@humedadMedida:
  1694                           	opt callstack 0
  1695  0000A7                     mostrarDatosSensores@humedad:
  1696                           	opt callstack 0
  1697                           
  1698                           ; 1 bytes @ 0x47
  1699  0000A7                     	ds	1
  1700  0000A8                     lecturaWifi@i:
  1701                           	opt callstack 0
  1702  0000A8                     mostrarDatosSensores@i:
  1703                           	opt callstack 0
  1704                           
  1705                           ; 2 bytes @ 0x48
  1706  0000A8                     	ds	2
  1707  0000AA                     mostrarDatosSensoresWIFI@buffer:
  1708                           	opt callstack 0
  1709                           
  1710                           ; 50 bytes @ 0x4A
  1711  0000AA                     	ds	5
  1712  0000AF                     dameDatosSistema@i:
  1713                           	opt callstack 0
  1714                           
  1715                           ; 2 bytes @ 0x4F
  1716  0000AF                     	ds	45
  1717  0000DC                     mostrarDatosSensoresWIFI@temperatura:
  1718                           	opt callstack 0
  1719                           
  1720                           ; 1 bytes @ 0x7C
  1721  0000DC                     	ds	1
  1722  0000DD                     mostrarDatosSensoresWIFI@humedad:
  1723                           	opt callstack 0
  1724                           
  1725                           ; 1 bytes @ 0x7D
  1726  0000DD                     	ds	1
  1727  0000DE                     mostrarDatosSensoresWIFI@i:
  1728                           	opt callstack 0
  1729                           
  1730                           ; 2 bytes @ 0x7E
  1731  0000DE                     	ds	2
  1732                           
  1733                           	psect	cstackCOMRAM
  1734  000001                     __pcstackCOMRAM:
  1735                           	opt callstack 0
  1736  000001                     ??_i2c_espera:
  1737  000001                     ??_convertirDato:
  1738  000001                     ??_DHT11_Start:
  1739  000001                     ??_inicializarObjetos:
  1740  000001                     ?_strlen:
  1741                           	opt callstack 0
  1742  000001                     ?_horaRegar:
  1743                           	opt callstack 0
  1744  000001                     ?_dameHumedadSuelo:
  1745                           	opt callstack 0
  1746  000001                     ?___awdiv:
  1747                           	opt callstack 0
  1748  000001                     ?___awmod:
  1749                           	opt callstack 0
  1750  000001                     ?___lmul:
  1751                           	opt callstack 0
  1752  000001                     ?___aodiv:
  1753                           	opt callstack 0
  1754  000001                     ?___aomod:
  1755                           	opt callstack 0
  1756  000001                     UART_write@dato:
  1757                           	opt callstack 0
  1758  000001                     DHT11_ReadData@i:
  1759                           	opt callstack 0
  1760  000001                     check_response@respuesta:
  1761                           	opt callstack 0
  1762  000001                     constructorSensor@s:
  1763                           	opt callstack 0
  1764  000001                     ___awdiv@dividend:
  1765                           	opt callstack 0
  1766  000001                     ___awmod@dividend:
  1767                           	opt callstack 0
  1768  000001                     fputc@c:
  1769                           	opt callstack 0
  1770  000001                     strlen@s:
  1771                           	opt callstack 0
  1772  000001                     ___lmul@multiplier:
  1773                           	opt callstack 0
  1774  000001                     ___aodiv@dividend:
  1775                           	opt callstack 0
  1776  000001                     ___aomod@dividend:
  1777                           	opt callstack 0
  1778                           
  1779                           ; 8 bytes @ 0x0
  1780  000001                     	ds	1
  1781  000002                     i2c_envia_dato@dato:
  1782                           	opt callstack 0
  1783  000002                     i2c_recibe_dato@datoleido:
  1784                           	opt callstack 0
  1785  000002                     convertirDato@dato:
  1786                           	opt callstack 0
  1787  000002                     DHT11_ReadData@data:
  1788                           	opt callstack 0
  1789  000002                     UART_printf@cadena:
  1790                           	opt callstack 0
  1791                           
  1792                           ; 2 bytes @ 0x1
  1793  000002                     	ds	1
  1794  000003                     ??_dameHumedadSuelo:
  1795  000003                     escribe_rtc@dato:
  1796                           	opt callstack 0
  1797  000003                     leer_rtc@direccion:
  1798                           	opt callstack 0
  1799  000003                     convertirDato@datoR:
  1800                           	opt callstack 0
  1801  000003                     constructorSensor@porcientoHumedad:
  1802                           	opt callstack 0
  1803  000003                     _horaRegar$795:
  1804                           	opt callstack 0
  1805  000003                     inicializarObjetos@i:
  1806                           	opt callstack 0
  1807  000003                     escribe_eeprom@direccion:
  1808                           	opt callstack 0
  1809  000003                     leer_eeprom@direccion:
  1810                           	opt callstack 0
  1811  000003                     ___awdiv@divisor:
  1812                           	opt callstack 0
  1813  000003                     ___awmod@divisor:
  1814                           	opt callstack 0
  1815  000003                     fputc@fp:
  1816                           	opt callstack 0
  1817  000003                     strlen@a:
  1818                           	opt callstack 0
  1819                           
  1820                           ; 2 bytes @ 0x2
  1821  000003                     	ds	1
  1822  000004                     escribe_rtc@direccion:
  1823                           	opt callstack 0
  1824  000004                     leer_rtc@dato:
  1825                           	opt callstack 0
  1826  000004                     constructorSensor@pin:
  1827                           	opt callstack 0
  1828  000004                     dameTemperaturaHumedad@Humedad:
  1829                           	opt callstack 0
  1830  000004                     getValue@numCharacters:
  1831                           	opt callstack 0
  1832                           
  1833                           ; 2 bytes @ 0x3
  1834  000004                     	ds	1
  1835  000005                     ??_fputc:
  1836  000005                     ??_leer_eeprom:
  1837  000005                     escribe_eeprom@dato:
  1838                           	opt callstack 0
  1839  000005                     dameHumedadSuelo@canalLeer:
  1840                           	opt callstack 0
  1841  000005                     ___awdiv@counter:
  1842                           	opt callstack 0
  1843  000005                     ___awmod@counter:
  1844                           	opt callstack 0
  1845  000005                     restablecerDatosSensor@i:
  1846                           	opt callstack 0
  1847  000005                     ___lmul@multiplicand:
  1848                           	opt callstack 0
  1849                           
  1850                           ; 4 bytes @ 0x4
  1851  000005                     	ds	1
  1852  000006                     ??_getValue:
  1853  000006                     ??_escribe_eeprom:
  1854  000006                     leer_eeprom@dato:
  1855                           	opt callstack 0
  1856  000006                     ___awdiv@sign:
  1857                           	opt callstack 0
  1858  000006                     ___awmod@sign:
  1859                           	opt callstack 0
  1860  000006                     dameTemperaturaHumedad@Temperatura:
  1861                           	opt callstack 0
  1862                           
  1863                           ; 2 bytes @ 0x5
  1864  000006                     	ds	1
  1865  000007                     ??_escribeHorariosMemoria:
  1866  000007                     ??_leeHorariosMemoria:
  1867  000007                     ___awdiv@quotient:
  1868                           	opt callstack 0
  1869                           
  1870                           ; 2 bytes @ 0x6
  1871  000007                     	ds	1
  1872  000008                     ??_dameTemperaturaHumedad:
  1873  000008                     getValue@datoIncorrecto:
  1874                           	opt callstack 0
  1875                           
  1876                           ; 1 bytes @ 0x7
  1877  000008                     	ds	1
  1878  000009                     escribeHorariosMemoria@contMemoria:
  1879                           	opt callstack 0
  1880  000009                     leeHorariosMemoria@contMemoria:
  1881                           	opt callstack 0
  1882  000009                     getValue@i:
  1883                           	opt callstack 0
  1884  000009                     ___lmul@product:
  1885                           	opt callstack 0
  1886  000009                     ___aodiv@divisor:
  1887                           	opt callstack 0
  1888  000009                     ___aomod@divisor:
  1889                           	opt callstack 0
  1890                           
  1891                           ; 8 bytes @ 0x8
  1892  000009                     	ds	1
  1893  00000A                     dameTemperaturaHumedad@checkSum:
  1894                           	opt callstack 0
  1895  00000A                     fputs@s:
  1896                           	opt callstack 0
  1897                           
  1898                           ; 2 bytes @ 0x9
  1899  00000A                     	ds	1
  1900  00000B                     escribeHorariosMemoria@i:
  1901                           	opt callstack 0
  1902  00000B                     leeHorariosMemoria@i:
  1903                           	opt callstack 0
  1904  00000B                     getValue@i_962:
  1905                           	opt callstack 0
  1906                           
  1907                           ; 2 bytes @ 0xA
  1908  00000B                     	ds	1
  1909  00000C                     dameTemperaturaHumedad@humedadDecimal:
  1910                           	opt callstack 0
  1911  00000C                     fputs@fp:
  1912                           	opt callstack 0
  1913                           
  1914                           ; 2 bytes @ 0xB
  1915  00000C                     	ds	1
  1916  00000D                     ?___aldiv:
  1917                           	opt callstack 0
  1918  00000D                     dameTemperaturaHumedad@temperaturaDecimal:
  1919                           	opt callstack 0
  1920  00000D                     getValue@dato:
  1921                           	opt callstack 0
  1922  00000D                     ___aldiv@dividend:
  1923                           	opt callstack 0
  1924                           
  1925                           ; 4 bytes @ 0xC
  1926  00000D                     	ds	1
  1927  00000E                     dameTemperaturaHumedad@humedad:
  1928                           	opt callstack 0
  1929  00000E                     getValue@Rx:
  1930                           	opt callstack 0
  1931  00000E                     fputs@c:
  1932                           	opt callstack 0
  1933                           
  1934                           ; 1 bytes @ 0xD
  1935  00000E                     	ds	1
  1936  00000F                     ??_regadoRapido:
  1937  00000F                     setRtc@direccion:
  1938                           	opt callstack 0
  1939  00000F                     asignarHorarios@hora:
  1940                           	opt callstack 0
  1941  00000F                     setTiempoRegar@tiempoRegar:
  1942                           	opt callstack 0
  1943  00000F                     dameTemperaturaHumedad@temperatura:
  1944                           	opt callstack 0
  1945  00000F                     fputs@i:
  1946                           	opt callstack 0
  1947                           
  1948                           ; 2 bytes @ 0xE
  1949  00000F                     	ds	1
  1950  000010                     ?_estaSeco:
  1951                           	opt callstack 0
  1952  000010                     setRtc@seteado:
  1953                           	opt callstack 0
  1954  000010                     asignarHorarios@Rx:
  1955                           	opt callstack 0
  1956  000010                     setTiempoRegar@hora:
  1957                           	opt callstack 0
  1958  000010                     estaSeco@s:
  1959                           	opt callstack 0
  1960                           
  1961                           ; 2 bytes @ 0xF
  1962  000010                     	ds	1
  1963  000011                     ?_pad:
  1964                           	opt callstack 0
  1965  000011                     setRtc@datoRtc:
  1966                           	opt callstack 0
  1967  000011                     regadoRapido@tiempoRegar:
  1968                           	opt callstack 0
  1969  000011                     ___aodiv@counter:
  1970                           	opt callstack 0
  1971  000011                     ___aomod@counter:
  1972                           	opt callstack 0
  1973  000011                     pad@fp:
  1974                           	opt callstack 0
  1975  000011                     ___aldiv@divisor:
  1976                           	opt callstack 0
  1977                           
  1978                           ; 4 bytes @ 0x10
  1979  000011                     	ds	1
  1980  000012                     _estaSeco$789:
  1981                           	opt callstack 0
  1982  000012                     setRtc@dato:
  1983                           	opt callstack 0
  1984  000012                     regadoRapido@areaRegar:
  1985                           	opt callstack 0
  1986  000012                     ___aodiv@sign:
  1987                           	opt callstack 0
  1988  000012                     ___aomod@sign:
  1989                           	opt callstack 0
  1990                           
  1991                           ; 1 bytes @ 0x11
  1992  000012                     	ds	1
  1993  000013                     ?_abs:
  1994                           	opt callstack 0
  1995  000013                     estaSeco@temperatura:
  1996                           	opt callstack 0
  1997  000013                     pad@buf:
  1998                           	opt callstack 0
  1999  000013                     abs@a:
  2000                           	opt callstack 0
  2001  000013                     ___aodiv@quotient:
  2002                           	opt callstack 0
  2003                           
  2004                           ; 8 bytes @ 0x12
  2005  000013                     	ds	1
  2006  000014                     ??_encenderBombas:
  2007                           
  2008                           ; 1 bytes @ 0x13
  2009  000014                     	ds	1
  2010  000015                     ??_abs:
  2011  000015                     ___aldiv@counter:
  2012                           	opt callstack 0
  2013  000015                     pad@p:
  2014                           	opt callstack 0
  2015                           
  2016                           ; 2 bytes @ 0x14
  2017  000015                     	ds	1
  2018  000016                     encenderBombas@flagSeco:
  2019                           	opt callstack 0
  2020  000016                     ___aldiv@sign:
  2021                           	opt callstack 0
  2022                           
  2023                           ; 1 bytes @ 0x15
  2024  000016                     	ds	1
  2025  000017                     ??_pad:
  2026  000017                     encenderBombas@i:
  2027                           	opt callstack 0
  2028  000017                     ___aldiv@quotient:
  2029                           	opt callstack 0
  2030                           
  2031                           ; 4 bytes @ 0x16
  2032  000017                     	ds	1
  2033  000018                     pad@i:
  2034                           	opt callstack 0
  2035                           
  2036                           ; 2 bytes @ 0x17
  2037  000018                     	ds	2
  2038  00001A                     pad@w:
  2039                           	opt callstack 0
  2040                           
  2041                           ; 2 bytes @ 0x19
  2042  00001A                     	ds	1
  2043  00001B                     ?_map:
  2044                           	opt callstack 0
  2045  00001B                     UART_init@BAUD:
  2046                           	opt callstack 0
  2047  00001B                     map@x:
  2048                           	opt callstack 0
  2049                           
  2050                           ; 4 bytes @ 0x1A
  2051  00001B                     	ds	1
  2052  00001C                     ?_ctoa:
  2053                           	opt callstack 0
  2054  00001C                     ?_dtoa:
  2055                           	opt callstack 0
  2056  00001C                     ctoa@fp:
  2057                           	opt callstack 0
  2058  00001C                     dtoa@fp:
  2059                           	opt callstack 0
  2060                           
  2061                           ; 2 bytes @ 0x1B
  2062  00001C                     	ds	2
  2063  00001E                     ctoa@c:
  2064                           	opt callstack 0
  2065  00001E                     dtoa@d:
  2066                           	opt callstack 0
  2067                           
  2068                           ; 8 bytes @ 0x1D
  2069  00001E                     	ds	1
  2070  00001F                     ctoa@w:
  2071                           	opt callstack 0
  2072  00001F                     map@in_min:
  2073                           	opt callstack 0
  2074                           
  2075                           ; 4 bytes @ 0x1E
  2076  00001F                     	ds	4
  2077  000023                     map@in_max:
  2078                           	opt callstack 0
  2079  000023                     _UART_init$1824:
  2080                           	opt callstack 0
  2081                           
  2082                           ; 4 bytes @ 0x22
  2083  000023                     	ds	3
  2084  000026                     ??_dtoa:
  2085                           
  2086                           ; 1 bytes @ 0x25
  2087  000026                     	ds	1
  2088  000027                     map@out_min:
  2089                           	opt callstack 0
  2090                           
  2091                           ; 4 bytes @ 0x26
  2092  000027                     	ds	4
  2093  00002B                     map@out_max:
  2094                           	opt callstack 0
  2095                           
  2096                           ; 4 bytes @ 0x2A
  2097  00002B                     	ds	3
  2098  00002E                     _dtoa$1044:
  2099                           	opt callstack 0
  2100                           
  2101                           ; 2 bytes @ 0x2D
  2102  00002E                     	ds	1
  2103  00002F                     ??_lecturaAnalogaSensores:
  2104                           
  2105                           ; 1 bytes @ 0x2E
  2106  00002F                     	ds	1
  2107  000030                     lecturaAnalogaSensores@i:
  2108                           	opt callstack 0
  2109  000030                     dtoa@p:
  2110                           	opt callstack 0
  2111                           
  2112                           ; 2 bytes @ 0x2F
  2113  000030                     	ds	2
  2114  000032                     dtoa@w:
  2115                           	opt callstack 0
  2116                           
  2117                           ; 2 bytes @ 0x31
  2118  000032                     	ds	2
  2119  000034                     dtoa@s:
  2120                           	opt callstack 0
  2121                           
  2122                           ; 2 bytes @ 0x33
  2123  000034                     	ds	2
  2124  000036                     dtoa@n:
  2125                           	opt callstack 0
  2126                           
  2127                           ; 8 bytes @ 0x35
  2128  000036                     	ds	8
  2129  00003E                     dtoa@i:
  2130                           	opt callstack 0
  2131                           
  2132                           ; 2 bytes @ 0x3D
  2133  00003E                     	ds	2
  2134  000040                     ?_vfpfcnvrt:
  2135                           	opt callstack 0
  2136  000040                     vfpfcnvrt@fp:
  2137                           	opt callstack 0
  2138                           
  2139                           ; 2 bytes @ 0x3F
  2140  000040                     	ds	2
  2141  000042                     vfpfcnvrt@fmt:
  2142                           	opt callstack 0
  2143                           
  2144                           ; 2 bytes @ 0x41
  2145  000042                     	ds	2
  2146  000044                     vfpfcnvrt@ap:
  2147                           	opt callstack 0
  2148                           
  2149                           ; 2 bytes @ 0x43
  2150  000044                     	ds	2
  2151  000046                     ??_vfpfcnvrt:
  2152                           
  2153                           ; 1 bytes @ 0x45
  2154  000046                     	ds	2
  2155  000048                     vfpfcnvrt@ll:
  2156                           	opt callstack 0
  2157                           
  2158                           ; 8 bytes @ 0x47
  2159  000048                     	ds	8
  2160  000050                     vfpfcnvrt@c:
  2161                           	opt callstack 0
  2162                           
  2163                           ; 1 bytes @ 0x4F
  2164  000050                     	ds	1
  2165  000051                     ?_vfprintf:
  2166                           	opt callstack 0
  2167  000051                     vfprintf@fp:
  2168                           	opt callstack 0
  2169                           
  2170                           ; 2 bytes @ 0x50
  2171  000051                     	ds	2
  2172  000053                     vfprintf@fmt:
  2173                           	opt callstack 0
  2174                           
  2175                           ; 2 bytes @ 0x52
  2176  000053                     	ds	2
  2177  000055                     vfprintf@ap:
  2178                           	opt callstack 0
  2179                           
  2180                           ; 2 bytes @ 0x54
  2181  000055                     	ds	2
  2182  000057                     vfprintf@cfmt:
  2183                           	opt callstack 0
  2184                           
  2185                           ; 2 bytes @ 0x56
  2186  000057                     	ds	2
  2187  000059                     ??_mostrarDatosSensoresWIFI:
  2188  000059                     ??_mostrarDatosSensores:
  2189  000059                     
  2190                           ; 1 bytes @ 0x58
  2191  000059                     	ds	1
  2192  00005A                     ??_sistemaPrincipal:
  2193                           
  2194                           ; 1 bytes @ 0x59
  2195  00005A                     	ds	2
  2196  00005C                     sistemaPrincipal@opcion:
  2197                           	opt callstack 0
  2198                           
  2199                           ; 1 bytes @ 0x5B
  2200  00005C                     	ds	1
  2201  00005D                     
  2202                           ; 1 bytes @ 0x5C
  2203 ;;
  2204 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2205 ;;
  2206 ;; *************** function _main *****************
  2207 ;; Defined at:
  2208 ;;		line 895 in file "main.c"
  2209 ;; Parameters:    Size  Location     Type
  2210 ;;		None
  2211 ;; Auto vars:     Size  Location     Type
  2212 ;;		None
  2213 ;; Return value:  Size  Location     Type
  2214 ;;                  1    wreg      void 
  2215 ;; Registers used:
  2216 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2222 ;;      Params:         0       0       0       0       0       0       0       0       0
  2223 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2224 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2225 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2226 ;;Total ram usage:        0 bytes
  2227 ;; Hardware stack levels required when called:   12
  2228 ;; This function calls:
  2229 ;;		_UART_init
  2230 ;;		_configurarAdc
  2231 ;;		_i2c_iniciar
  2232 ;;		_inicializarObjetos
  2233 ;;		_leeHorariosMemoria
  2234 ;;		_mostrarMenu
  2235 ;;		_restablecerDatosSensor
  2236 ;;		_sistemaPrincipal
  2237 ;;		_sistemaRegado
  2238 ;; This function is called by:
  2239 ;;		Startup code after reset
  2240 ;; This function uses a non-reentrant model
  2241 ;;
  2242                           
  2243                           	psect	text0
  2244  001C4C                     __ptext0:
  2245                           	opt callstack 0
  2246  001C4C                     _main:
  2247                           	opt callstack 19
  2248  001C4C                     
  2249                           ;main.c: 897:     INTCONbits.GIE = 1;
  2250  001C4C  8EF2               	bsf	242,7,c	;volatile
  2251                           
  2252                           ;main.c: 898:     INTCONbits.PEIE = 1;
  2253  001C4E  8CF2               	bsf	242,6,c	;volatile
  2254                           
  2255                           ;main.c: 899:     INTCONbits.TMR0IE = 0;
  2256  001C50  9AF2               	bcf	242,5,c	;volatile
  2257                           
  2258                           ;main.c: 900:     INTCONbits.TMR0IF = 0;
  2259  001C52  94F2               	bcf	242,2,c	;volatile
  2260                           
  2261                           ;main.c: 901:     PIE1bits.RCIE = 1;
  2262  001C54  8A9D               	bsf	157,5,c	;volatile
  2263  001C56                     
  2264                           ;main.c: 903:     T0CON = 0b00000111;
  2265  001C56  0E07               	movlw	7
  2266  001C58  6ED5               	movwf	213,c	;volatile
  2267  001C5A                     
  2268                           ;main.c: 905:     INTCONbits.TMR0IE = 1;
  2269  001C5A  8AF2               	bsf	242,5,c	;volatile
  2270  001C5C                     
  2271                           ;main.c: 910:     restablecerDatosSensor();
  2272  001C5C  EC6D  F011         	call	_restablecerDatosSensor	;wreg free
  2273  001C60                     
  2274                           ;main.c: 912:     UART_init(9600);
  2275  001C60  0E80               	movlw	128
  2276  001C62  6E1B               	movwf	UART_init@BAUD^0,c
  2277  001C64  0E25               	movlw	37
  2278  001C66  6E1C               	movwf	(UART_init@BAUD+1)^0,c
  2279  001C68  0E00               	movlw	0
  2280  001C6A  6E1D               	movwf	(UART_init@BAUD+2)^0,c
  2281  001C6C  0E00               	movlw	0
  2282  001C6E  6E1E               	movwf	(UART_init@BAUD+3)^0,c
  2283  001C70  EC2D  F00F         	call	_UART_init	;wreg free
  2284  001C74                     
  2285                           ;main.c: 913:     i2c_iniciar();
  2286  001C74  EC36  F013         	call	_i2c_iniciar	;wreg free
  2287  001C78                     
  2288                           ;main.c: 914:     configurarAdc();
  2289  001C78  EC4C  F013         	call	_configurarAdc	;wreg free
  2290  001C7C                     
  2291                           ;main.c: 915:     inicializarObjetos();
  2292  001C7C  ECE2  F00A         	call	_inicializarObjetos	;wreg free
  2293  001C80                     
  2294                           ;main.c: 917:     leeHorariosMemoria();
  2295  001C80  EC76  F00A         	call	_leeHorariosMemoria	;wreg free
  2296  001C84                     
  2297                           ;main.c: 921:     TRISD = 0;
  2298  001C84  0E00               	movlw	0
  2299  001C86  6E95               	movwf	149,c	;volatile
  2300  001C88                     
  2301                           ;main.c: 922:     LATD = 0;
  2302  001C88  0E00               	movlw	0
  2303  001C8A  6E8C               	movwf	140,c	;volatile
  2304  001C8C                     
  2305                           ;main.c: 924:     TMR0 = VALOR_TIMER0;
  2306  001C8C  C0F8  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
  2307  001C90  C0F9  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
  2308  001C94                     
  2309                           ;main.c: 926:     INTCONbits.TMR0IF = 1;
  2310  001C94  84F2               	bsf	242,2,c	;volatile
  2311  001C96                     
  2312                           ;main.c: 928:     T0CONbits.TMR0ON = 1;
  2313  001C96  8ED5               	bsf	213,7,c	;volatile
  2314  001C98                     
  2315                           ;main.c: 930:     mostrarMenu();
  2316  001C98  EC65  F00F         	call	_mostrarMenu	;wreg free
  2317  001C9C                     
  2318                           ;main.c: 932:     MODO_COMUNICACION = 0;
  2319  001C9C  0E00               	movlw	0
  2320  001C9E  6E5E               	movwf	_MODO_COMUNICACION^0,c
  2321  001CA0                     l3968:
  2322                           
  2323                           ;main.c: 937:         if (datoRecibido) {
  2324  001CA0  0100               	movlb	0	; () banked
  2325  001CA2  51F1               	movf	_datoRecibido& (0+255),w,b
  2326  001CA4  B4D8               	btfsc	status,2,c
  2327  001CA6  EF57  F00E         	goto	u2951
  2328  001CAA  EF59  F00E         	goto	u2950
  2329  001CAE                     u2951:
  2330  001CAE  EF60  F00E         	goto	l3976
  2331  001CB2                     u2950:
  2332  001CB2                     
  2333                           ; BSR set to: 0
  2334                           ;main.c: 939:             datoRecibido = 0;
  2335  001CB2  0E00               	movlw	0
  2336  001CB4  6FF1               	movwf	_datoRecibido& (0+255),b
  2337  001CB6                     
  2338                           ; BSR set to: 0
  2339                           ;main.c: 940:             byteUart -= 48;
  2340  001CB6  0E30               	movlw	48
  2341  001CB8  5FF6               	subwf	_byteUart& (0+255),f,b
  2342  001CBA                     
  2343                           ; BSR set to: 0
  2344                           ;main.c: 941:             sistemaPrincipal(byteUart);
  2345  001CBA  51F6               	movf	_byteUart& (0+255),w,b
  2346  001CBC  ECCF  F00C         	call	_sistemaPrincipal
  2347  001CC0                     l3976:
  2348                           
  2349                           ;main.c: 945:         if (overflowTimer) {
  2350  001CC0  0100               	movlb	0	; () banked
  2351  001CC2  51F0               	movf	_overflowTimer& (0+255),w,b
  2352  001CC4  B4D8               	btfsc	status,2,c
  2353  001CC6  EF67  F00E         	goto	u2961
  2354  001CCA  EF69  F00E         	goto	u2960
  2355  001CCE                     u2961:
  2356  001CCE  EF50  F00E         	goto	l3968
  2357  001CD2                     u2960:
  2358  001CD2                     
  2359                           ; BSR set to: 0
  2360                           ;main.c: 947:             esperandoDatos = 0;
  2361  001CD2  0E00               	movlw	0
  2362  001CD4  6FF4               	movwf	_esperandoDatos& (0+255),b
  2363                           
  2364                           ;main.c: 948:             overflowTimer = 0;
  2365  001CD6  0E00               	movlw	0
  2366  001CD8  6FF0               	movwf	_overflowTimer& (0+255),b
  2367  001CDA                     
  2368                           ; BSR set to: 0
  2369                           ;main.c: 949:             sistemaRegado();
  2370  001CDA  EC9A  F005         	call	_sistemaRegado	;wreg free
  2371  001CDE  EF50  F00E         	goto	l3968
  2372  001CE2  EF07  F000         	goto	start
  2373  001CE6                     __end_of_main:
  2374                           	opt callstack 0
  2375                           
  2376 ;; *************** function _sistemaRegado *****************
  2377 ;; Defined at:
  2378 ;;		line 537 in file "main.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;		None
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;		None
  2383 ;; Return value:  Size  Location     Type
  2384 ;;                  1    wreg      void 
  2385 ;; Registers used:
  2386 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2392 ;;      Params:         0       0       0       0       0       0       0       0       0
  2393 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2394 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2395 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2396 ;;Total ram usage:        0 bytes
  2397 ;; Hardware stack levels used:    1
  2398 ;; Hardware stack levels required when called:   10
  2399 ;; This function calls:
  2400 ;;		_dameHoraActual
  2401 ;;		_encenderBombas
  2402 ;;		_horaRegar
  2403 ;;		_lecturaAnalogaSensores
  2404 ;;		_lecturaWifi
  2405 ;;		_mostrarMenu
  2406 ;; This function is called by:
  2407 ;;		_main
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411                           	psect	text1
  2412  000B34                     __ptext1:
  2413                           	opt callstack 0
  2414  000B34                     _sistemaRegado:
  2415                           	opt callstack 20
  2416  000B34                     
  2417                           ;main.c: 541:     if (regando) {
  2418  000B34  0100               	movlb	0	; () banked
  2419  000B36  51EB               	movf	_regando& (0+255),w,b
  2420  000B38  B4D8               	btfsc	status,2,c
  2421  000B3A  EFA1  F005         	goto	u2801
  2422  000B3E  EFA3  F005         	goto	u2800
  2423  000B42                     u2801:
  2424  000B42  EFD3  F005         	goto	l3860
  2425  000B46                     u2800:
  2426  000B46                     
  2427                           ; BSR set to: 0
  2428                           ;main.c: 543:         contInterrupciones++;
  2429  000B46  4BE8               	infsnz	_contInterrupciones& (0+255),f,b
  2430  000B48  2BE9               	incf	(_contInterrupciones+1)& (0+255),f,b
  2431  000B4A                     
  2432                           ; BSR set to: 0
  2433                           ;main.c: 545:         if (contInterrupciones == 6) {
  2434  000B4A  0E06               	movlw	6
  2435  000B4C  19E8               	xorwf	_contInterrupciones& (0+255),w,b
  2436  000B4E  11E9               	iorwf	(_contInterrupciones+1)& (0+255),w,b
  2437  000B50  A4D8               	btfss	status,2,c
  2438  000B52  EFAD  F005         	goto	u2811
  2439  000B56  EFAF  F005         	goto	u2810
  2440  000B5A                     u2811:
  2441  000B5A  EF4B  F006         	goto	l352
  2442  000B5E                     u2810:
  2443  000B5E                     
  2444                           ; BSR set to: 0
  2445                           ;main.c: 546:             contInterrupciones = 0;
  2446  000B5E  0E00               	movlw	0
  2447  000B60  6FE9               	movwf	(_contInterrupciones+1)& (0+255),b
  2448  000B62  0E00               	movlw	0
  2449  000B64  6FE8               	movwf	_contInterrupciones& (0+255),b
  2450  000B66                     
  2451                           ; BSR set to: 0
  2452                           ;main.c: 547:             minutosTranscurridos++;
  2453  000B66  2BEC               	incf	_minutosTranscurridos& (0+255),f,b
  2454  000B68                     
  2455                           ; BSR set to: 0
  2456                           ;main.c: 550:             if (minutosTranscurridos >= minutosRegar) {
  2457  000B68  51ED               	movf	_minutosRegar& (0+255),w,b
  2458  000B6A  5DEC               	subwf	_minutosTranscurridos& (0+255),w,b
  2459  000B6C  A0D8               	btfss	status,0,c
  2460  000B6E  EFBB  F005         	goto	u2821
  2461  000B72  EFBD  F005         	goto	u2820
  2462  000B76                     u2821:
  2463  000B76  EF4B  F006         	goto	l352
  2464  000B7A                     u2820:
  2465  000B7A                     
  2466                           ; BSR set to: 0
  2467                           ;main.c: 552:                 LATD = 0;
  2468  000B7A  0E00               	movlw	0
  2469  000B7C  6E8C               	movwf	140,c	;volatile
  2470                           
  2471                           ;main.c: 553:                 minutosTranscurridos = 0;
  2472  000B7E  0E00               	movlw	0
  2473  000B80  6FEC               	movwf	_minutosTranscurridos& (0+255),b
  2474                           
  2475                           ;main.c: 554:                 regando = 0;
  2476  000B82  0E00               	movlw	0
  2477  000B84  6FEB               	movwf	_regando& (0+255),b
  2478  000B86                     
  2479                           ; BSR set to: 0
  2480                           ;main.c: 555:                 horarios[hora].regado = 1;
  2481  000B86  505D               	movf	_hora^0,w,c
  2482  000B88  0D04               	mullw	4
  2483  000B8A  0E02               	movlw	low (_horarios+2)
  2484  000B8C  24F3               	addwf	243,w,c
  2485  000B8E  6ED9               	movwf	fsr2l,c
  2486  000B90  0E01               	movlw	high (_horarios+2)
  2487  000B92  20F4               	addwfc	prodh,w,c
  2488  000B94  6EDA               	movwf	fsr2h,c
  2489  000B96  0E01               	movlw	1
  2490  000B98  6EDF               	movwf	indf2,c
  2491  000B9A                     
  2492                           ; BSR set to: 0
  2493                           ;main.c: 556:                 tempHora = hora;
  2494  000B9A  C05D  F0EF         	movff	_hora,_tempHora
  2495  000B9E                     
  2496                           ; BSR set to: 0
  2497                           ;main.c: 557:                 flagRegado = 0;
  2498  000B9E  0E00               	movlw	0
  2499  000BA0  6FEE               	movwf	_flagRegado& (0+255),b
  2500  000BA2  EF4B  F006         	goto	l352
  2501  000BA6                     l3860:
  2502                           
  2503                           ; BSR set to: 0
  2504                           ;main.c: 563:         dameHoraActual();
  2505  000BA6  ECB2  F012         	call	_dameHoraActual	;wreg free
  2506  000BAA                     
  2507                           ;main.c: 565:         if (hora != tempHora && !flagRegado) {
  2508  000BAA  0100               	movlb	0	; () banked
  2509  000BAC  51EF               	movf	_tempHora& (0+255),w,b
  2510  000BAE  185D               	xorwf	_hora^0,w,c
  2511  000BB0  B4D8               	btfsc	status,2,c
  2512  000BB2  EFDD  F005         	goto	u2831
  2513  000BB6  EFDF  F005         	goto	u2830
  2514  000BBA                     u2831:
  2515  000BBA  EFF3  F005         	goto	l3870
  2516  000BBE                     u2830:
  2517  000BBE                     
  2518                           ; BSR set to: 0
  2519  000BBE  51EE               	movf	_flagRegado& (0+255),w,b
  2520  000BC0  A4D8               	btfss	status,2,c
  2521  000BC2  EFE5  F005         	goto	u2841
  2522  000BC6  EFE7  F005         	goto	u2840
  2523  000BCA                     u2841:
  2524  000BCA  EFF3  F005         	goto	l3870
  2525  000BCE                     u2840:
  2526  000BCE                     
  2527                           ; BSR set to: 0
  2528                           ;main.c: 566:             horarios[tempHora].regado = 0;
  2529  000BCE  51EF               	movf	_tempHora& (0+255),w,b
  2530  000BD0  0D04               	mullw	4
  2531  000BD2  0E02               	movlw	low (_horarios+2)
  2532  000BD4  24F3               	addwf	243,w,c
  2533  000BD6  6ED9               	movwf	fsr2l,c
  2534  000BD8  0E01               	movlw	high (_horarios+2)
  2535  000BDA  20F4               	addwfc	prodh,w,c
  2536  000BDC  6EDA               	movwf	fsr2h,c
  2537  000BDE  0E00               	movlw	0
  2538  000BE0  6EDF               	movwf	indf2,c
  2539  000BE2                     
  2540                           ; BSR set to: 0
  2541                           ;main.c: 567:             flagRegado = 1;
  2542  000BE2  0E01               	movlw	1
  2543  000BE4  6FEE               	movwf	_flagRegado& (0+255),b
  2544  000BE6                     l3870:
  2545                           
  2546                           ; BSR set to: 0
  2547                           ;main.c: 570:         if ((!MODO_COMUNICACION && horaRegar()) || (MODO_COMUNICACION
  2548  000BE6  505E               	movf	_MODO_COMUNICACION^0,w,c
  2549  000BE8  A4D8               	btfss	status,2,c
  2550  000BEA  EFF9  F005         	goto	u2851
  2551  000BEE  EFFB  F005         	goto	u2850
  2552  000BF2                     u2851:
  2553  000BF2  EF06  F006         	goto	l3874
  2554  000BF6                     u2850:
  2555  000BF6                     
  2556                           ; BSR set to: 0
  2557  000BF6  EC45  F011         	call	_horaRegar	;wreg free
  2558  000BFA  5001               	movf	?_horaRegar^0,w,c
  2559  000BFC  1002               	iorwf	(?_horaRegar+1)^0,w,c
  2560  000BFE  A4D8               	btfss	status,2,c
  2561  000C00  EF04  F006         	goto	u2861
  2562  000C04  EF06  F006         	goto	u2860
  2563  000C08                     u2861:
  2564  000C08  EF19  F006         	goto	l3878
  2565  000C0C                     u2860:
  2566  000C0C                     l3874:
  2567  000C0C  505E               	movf	_MODO_COMUNICACION^0,w,c
  2568  000C0E  B4D8               	btfsc	status,2,c
  2569  000C10  EF0C  F006         	goto	u2871
  2570  000C14  EF0E  F006         	goto	u2870
  2571  000C18                     u2871:
  2572  000C18  EF4B  F006         	goto	l352
  2573  000C1C                     u2870:
  2574  000C1C  EC45  F011         	call	_horaRegar	;wreg free
  2575  000C20  5001               	movf	?_horaRegar^0,w,c
  2576  000C22  1002               	iorwf	(?_horaRegar+1)^0,w,c
  2577  000C24  B4D8               	btfsc	status,2,c
  2578  000C26  EF17  F006         	goto	u2881
  2579  000C2A  EF19  F006         	goto	u2880
  2580  000C2E                     u2881:
  2581  000C2E  EF4B  F006         	goto	l352
  2582  000C32                     u2880:
  2583  000C32                     l3878:
  2584                           
  2585                           ;main.c: 571:                 && horaRegar())) {;main.c: 575:             if (MODO_COMUN
      +                          ICACION) {
  2586  000C32  505E               	movf	_MODO_COMUNICACION^0,w,c
  2587  000C34  B4D8               	btfsc	status,2,c
  2588  000C36  EF1F  F006         	goto	u2891
  2589  000C3A  EF21  F006         	goto	u2890
  2590  000C3E                     u2891:
  2591  000C3E  EF3C  F006         	goto	l3890
  2592  000C42                     u2890:
  2593  000C42                     
  2594                           ;main.c: 576:                 lecturaWifi();
  2595  000C42  EC18  F009         	call	_lecturaWifi	;wreg free
  2596  000C46                     
  2597                           ;main.c: 577:                 if (peticionLecturaSensores) {
  2598  000C46  0100               	movlb	0	; () banked
  2599  000C48  51EA               	movf	_peticionLecturaSensores& (0+255),w,b
  2600  000C4A  B4D8               	btfsc	status,2,c
  2601  000C4C  EF2A  F006         	goto	u2901
  2602  000C50  EF2C  F006         	goto	u2900
  2603  000C54                     u2901:
  2604  000C54  EF38  F006         	goto	l3888
  2605  000C58                     u2900:
  2606  000C58                     
  2607                           ; BSR set to: 0
  2608                           ;main.c: 578:                     minutosRegar = horarios[hora].tiempoRegar;
  2609  000C58  505D               	movf	_hora^0,w,c
  2610  000C5A  0D04               	mullw	4
  2611  000C5C  0E03               	movlw	low (_horarios+3)
  2612  000C5E  24F3               	addwf	243,w,c
  2613  000C60  6ED9               	movwf	fsr2l,c
  2614  000C62  0E01               	movlw	high (_horarios+3)
  2615  000C64  20F4               	addwfc	prodh,w,c
  2616  000C66  6EDA               	movwf	fsr2h,c
  2617  000C68  50DF               	movf	indf2,w,c
  2618  000C6A  6FED               	movwf	_minutosRegar& (0+255),b
  2619  000C6C                     
  2620                           ; BSR set to: 0
  2621                           ;main.c: 579:                     encenderBombas();
  2622  000C6C  EC7B  F001         	call	_encenderBombas	;wreg free
  2623  000C70                     l3888:
  2624                           
  2625                           ;main.c: 581:                 mostrarMenu();
  2626  000C70  EC65  F00F         	call	_mostrarMenu	;wreg free
  2627                           
  2628                           ;main.c: 582:             } else {
  2629  000C74  EF4B  F006         	goto	l352
  2630  000C78                     l3890:
  2631                           
  2632                           ;main.c: 583:                 lecturaAnalogaSensores();
  2633  000C78  EC80  F00D         	call	_lecturaAnalogaSensores	;wreg free
  2634  000C7C                     
  2635                           ;main.c: 584:                 minutosRegar = horarios[hora].tiempoRegar;
  2636  000C7C  505D               	movf	_hora^0,w,c
  2637  000C7E  0D04               	mullw	4
  2638  000C80  0E03               	movlw	low (_horarios+3)
  2639  000C82  24F3               	addwf	243,w,c
  2640  000C84  6ED9               	movwf	fsr2l,c
  2641  000C86  0E01               	movlw	high (_horarios+3)
  2642  000C88  20F4               	addwfc	prodh,w,c
  2643  000C8A  6EDA               	movwf	fsr2h,c
  2644  000C8C  50DF               	movf	indf2,w,c
  2645  000C8E  0100               	movlb	0	; () banked
  2646  000C90  6FED               	movwf	_minutosRegar& (0+255),b
  2647  000C92                     
  2648                           ; BSR set to: 0
  2649                           ;main.c: 585:                 encenderBombas();
  2650  000C92  EC7B  F001         	call	_encenderBombas	;wreg free
  2651  000C96                     l352:
  2652  000C96  0012               	return		;funcret
  2653  000C98                     __end_of_sistemaRegado:
  2654                           	opt callstack 0
  2655                           
  2656 ;; *************** function _horaRegar *****************
  2657 ;; Defined at:
  2658 ;;		line 147 in file "main.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;		None
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;		None
  2663 ;; Return value:  Size  Location     Type
  2664 ;;                  2    0[COMRAM] int 
  2665 ;; Registers used:
  2666 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2667 ;; Tracked objects:
  2668 ;;		On entry : 0/0
  2669 ;;		On exit  : 0/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2672 ;;      Params:         2       0       0       0       0       0       0       0       0
  2673 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2674 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2675 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2676 ;;Total ram usage:        3 bytes
  2677 ;; Hardware stack levels used:    1
  2678 ;; Hardware stack levels required when called:    1
  2679 ;; This function calls:
  2680 ;;		Nothing
  2681 ;; This function is called by:
  2682 ;;		_sistemaRegado
  2683 ;; This function uses a non-reentrant model
  2684 ;;
  2685                           
  2686                           	psect	text2
  2687  00228A                     __ptext2:
  2688                           	opt callstack 0
  2689  00228A                     _horaRegar:
  2690                           	opt callstack 28
  2691  00228A                     
  2692                           ;main.c: 149:     return (horarios[hora].regar) && (!horarios[hora].regado);
  2693  00228A  0E00               	movlw	0
  2694  00228C  6E03               	movwf	_horaRegar$795^0,c
  2695  00228E  505D               	movf	_hora^0,w,c
  2696  002290  0D04               	mullw	4
  2697  002292  0E01               	movlw	low (_horarios+1)
  2698  002294  24F3               	addwf	243,w,c
  2699  002296  6ED9               	movwf	fsr2l,c
  2700  002298  0E01               	movlw	high (_horarios+1)
  2701  00229A  20F4               	addwfc	prodh,w,c
  2702  00229C  6EDA               	movwf	fsr2h,c
  2703  00229E  50DF               	movf	indf2,w,c
  2704  0022A0  B4D8               	btfsc	status,2,c
  2705  0022A2  EF55  F011         	goto	u2521
  2706  0022A6  EF57  F011         	goto	u2520
  2707  0022AA                     u2521:
  2708  0022AA  EF69  F011         	goto	l3496
  2709  0022AE                     u2520:
  2710  0022AE  505D               	movf	_hora^0,w,c
  2711  0022B0  0D04               	mullw	4
  2712  0022B2  0E02               	movlw	low (_horarios+2)
  2713  0022B4  24F3               	addwf	243,w,c
  2714  0022B6  6ED9               	movwf	fsr2l,c
  2715  0022B8  0E01               	movlw	high (_horarios+2)
  2716  0022BA  20F4               	addwfc	prodh,w,c
  2717  0022BC  6EDA               	movwf	fsr2h,c
  2718  0022BE  50DF               	movf	indf2,w,c
  2719  0022C0  A4D8               	btfss	status,2,c
  2720  0022C2  EF65  F011         	goto	u2531
  2721  0022C6  EF67  F011         	goto	u2530
  2722  0022CA                     u2531:
  2723  0022CA  EF69  F011         	goto	l3496
  2724  0022CE                     u2530:
  2725  0022CE  0E01               	movlw	1
  2726  0022D0  6E03               	movwf	_horaRegar$795^0,c
  2727  0022D2                     l3496:
  2728  0022D2  C003  F001         	movff	_horaRegar$795,?_horaRegar
  2729  0022D6  6A02               	clrf	(?_horaRegar+1)^0,c
  2730  0022D8  0012               	return		;funcret
  2731  0022DA                     __end_of_horaRegar:
  2732                           	opt callstack 0
  2733                           
  2734 ;; *************** function _encenderBombas *****************
  2735 ;; Defined at:
  2736 ;;		line 253 in file "main.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;		None
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;  i               2   22[COMRAM] int 
  2741 ;;  flagSeco        1   21[COMRAM] unsigned char 
  2742 ;; Return value:  Size  Location     Type
  2743 ;;                  1    wreg      void 
  2744 ;; Registers used:
  2745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2746 ;; Tracked objects:
  2747 ;;		On entry : 0/0
  2748 ;;		On exit  : 0/0
  2749 ;;		Unchanged: 0/0
  2750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2751 ;;      Params:         0       0       0       0       0       0       0       0       0
  2752 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2753 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2754 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2755 ;;Total ram usage:        5 bytes
  2756 ;; Hardware stack levels used:    1
  2757 ;; Hardware stack levels required when called:    5
  2758 ;; This function calls:
  2759 ;;		_estaSeco
  2760 ;; This function is called by:
  2761 ;;		_sistemaRegado
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765                           	psect	text3
  2766  0002F6                     __ptext3:
  2767                           	opt callstack 0
  2768  0002F6                     _encenderBombas:
  2769                           	opt callstack 24
  2770  0002F6                     
  2771                           ;main.c: 255:     char flagSeco = 0;
  2772  0002F6  0E00               	movlw	0
  2773  0002F8  6E16               	movwf	encenderBombas@flagSeco^0,c
  2774                           
  2775                           ;main.c: 257:     for (int i = 0; i < 3; i++) {
  2776  0002FA  0E00               	movlw	0
  2777  0002FC  6E18               	movwf	(encenderBombas@i+1)^0,c
  2778  0002FE  0E00               	movlw	0
  2779  000300  6E17               	movwf	encenderBombas@i^0,c
  2780  000302  EF5D  F002         	goto	l3566
  2781  000306                     l3516:
  2782                           
  2783                           ;main.c: 262:                 if (estaSeco(sensores[i])) {
  2784  000306  90D8               	bcf	status,0,c
  2785  000308  3417               	rlcf	encenderBombas@i^0,w,c
  2786  00030A  6ED9               	movwf	fsr2l,c
  2787  00030C  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  2788  00030E  6EDA               	movwf	fsr2h,c
  2789  000310  0E60               	movlw	low _sensores
  2790  000312  26D9               	addwf	fsr2l,f,c
  2791  000314  0E01               	movlw	high _sensores
  2792  000316  22DA               	addwfc	fsr2h,f,c
  2793  000318  CFDE F010          	movff	postinc2,estaSeco@s
  2794  00031C  CFDD F011          	movff	postdec2,estaSeco@s+1
  2795  000320  ECDD  F011         	call	_estaSeco	;wreg free
  2796  000324  5010               	movf	?_estaSeco^0,w,c
  2797  000326  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2798  000328  B4D8               	btfsc	status,2,c
  2799  00032A  EF99  F001         	goto	u2541
  2800  00032E  EF9B  F001         	goto	u2540
  2801  000332                     u2541:
  2802  000332  EF8B  F002         	goto	l3568
  2803  000336                     u2540:
  2804  000336                     
  2805                           ;main.c: 263:                     LATDbits.LATD0 = 1;
  2806  000336  808C               	bsf	140,0,c	;volatile
  2807  000338                     l3520:
  2808                           
  2809                           ;main.c: 264:                     flagSeco = 1;
  2810  000338  0E01               	movlw	1
  2811  00033A  6E16               	movwf	encenderBombas@flagSeco^0,c
  2812  00033C  EF8B  F002         	goto	l3568
  2813  000340                     l3522:
  2814                           
  2815                           ;main.c: 269:                 if (estaSeco(sensores[i])) {
  2816  000340  90D8               	bcf	status,0,c
  2817  000342  3417               	rlcf	encenderBombas@i^0,w,c
  2818  000344  6ED9               	movwf	fsr2l,c
  2819  000346  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  2820  000348  6EDA               	movwf	fsr2h,c
  2821  00034A  0E60               	movlw	low _sensores
  2822  00034C  26D9               	addwf	fsr2l,f,c
  2823  00034E  0E01               	movlw	high _sensores
  2824  000350  22DA               	addwfc	fsr2h,f,c
  2825  000352  CFDE F010          	movff	postinc2,estaSeco@s
  2826  000356  CFDD F011          	movff	postdec2,estaSeco@s+1
  2827  00035A  ECDD  F011         	call	_estaSeco	;wreg free
  2828  00035E  5010               	movf	?_estaSeco^0,w,c
  2829  000360  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2830  000362  B4D8               	btfsc	status,2,c
  2831  000364  EFB6  F001         	goto	u2551
  2832  000368  EFB8  F001         	goto	u2550
  2833  00036C                     u2551:
  2834  00036C  EF8B  F002         	goto	l3568
  2835  000370                     u2550:
  2836  000370                     
  2837                           ;main.c: 270:                     LATDbits.LATD1 = 1;
  2838  000370  828C               	bsf	140,1,c	;volatile
  2839  000372  EF9C  F001         	goto	l3520
  2840  000376                     l3528:
  2841                           
  2842                           ;main.c: 276:                 if (estaSeco(sensores[i])) {
  2843  000376  90D8               	bcf	status,0,c
  2844  000378  3417               	rlcf	encenderBombas@i^0,w,c
  2845  00037A  6ED9               	movwf	fsr2l,c
  2846  00037C  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  2847  00037E  6EDA               	movwf	fsr2h,c
  2848  000380  0E60               	movlw	low _sensores
  2849  000382  26D9               	addwf	fsr2l,f,c
  2850  000384  0E01               	movlw	high _sensores
  2851  000386  22DA               	addwfc	fsr2h,f,c
  2852  000388  CFDE F010          	movff	postinc2,estaSeco@s
  2853  00038C  CFDD F011          	movff	postdec2,estaSeco@s+1
  2854  000390  ECDD  F011         	call	_estaSeco	;wreg free
  2855  000394  5010               	movf	?_estaSeco^0,w,c
  2856  000396  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2857  000398  B4D8               	btfsc	status,2,c
  2858  00039A  EFD1  F001         	goto	u2561
  2859  00039E  EFD3  F001         	goto	u2560
  2860  0003A2                     u2561:
  2861  0003A2  EF8B  F002         	goto	l3568
  2862  0003A6                     u2560:
  2863  0003A6                     
  2864                           ;main.c: 277:                     LATDbits.LATD2 = 1;
  2865  0003A6  848C               	bsf	140,2,c	;volatile
  2866  0003A8  EF9C  F001         	goto	l3520
  2867  0003AC                     l3534:
  2868                           
  2869                           ;main.c: 283:                 if (estaSeco(sensores[i])) {
  2870  0003AC  90D8               	bcf	status,0,c
  2871  0003AE  3417               	rlcf	encenderBombas@i^0,w,c
  2872  0003B0  6ED9               	movwf	fsr2l,c
  2873  0003B2  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  2874  0003B4  6EDA               	movwf	fsr2h,c
  2875  0003B6  0E60               	movlw	low _sensores
  2876  0003B8  26D9               	addwf	fsr2l,f,c
  2877  0003BA  0E01               	movlw	high _sensores
  2878  0003BC  22DA               	addwfc	fsr2h,f,c
  2879  0003BE  CFDE F010          	movff	postinc2,estaSeco@s
  2880  0003C2  CFDD F011          	movff	postdec2,estaSeco@s+1
  2881  0003C6  ECDD  F011         	call	_estaSeco	;wreg free
  2882  0003CA  5010               	movf	?_estaSeco^0,w,c
  2883  0003CC  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2884  0003CE  B4D8               	btfsc	status,2,c
  2885  0003D0  EFEC  F001         	goto	u2571
  2886  0003D4  EFEE  F001         	goto	u2570
  2887  0003D8                     u2571:
  2888  0003D8  EF8B  F002         	goto	l3568
  2889  0003DC                     u2570:
  2890  0003DC                     
  2891                           ;main.c: 284:                     LATDbits.LATD3 = 1;
  2892  0003DC  868C               	bsf	140,3,c	;volatile
  2893  0003DE  EF9C  F001         	goto	l3520
  2894  0003E2                     l3540:
  2895                           
  2896                           ;main.c: 290:                 if (estaSeco(sensores[i])) {
  2897  0003E2  90D8               	bcf	status,0,c
  2898  0003E4  3417               	rlcf	encenderBombas@i^0,w,c
  2899  0003E6  6ED9               	movwf	fsr2l,c
  2900  0003E8  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  2901  0003EA  6EDA               	movwf	fsr2h,c
  2902  0003EC  0E60               	movlw	low _sensores
  2903  0003EE  26D9               	addwf	fsr2l,f,c
  2904  0003F0  0E01               	movlw	high _sensores
  2905  0003F2  22DA               	addwfc	fsr2h,f,c
  2906  0003F4  CFDE F010          	movff	postinc2,estaSeco@s
  2907  0003F8  CFDD F011          	movff	postdec2,estaSeco@s+1
  2908  0003FC  ECDD  F011         	call	_estaSeco	;wreg free
  2909  000400  5010               	movf	?_estaSeco^0,w,c
  2910  000402  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2911  000404  B4D8               	btfsc	status,2,c
  2912  000406  EF07  F002         	goto	u2581
  2913  00040A  EF09  F002         	goto	u2580
  2914  00040E                     u2581:
  2915  00040E  EF8B  F002         	goto	l3568
  2916  000412                     u2580:
  2917  000412                     
  2918                           ;main.c: 291:                     LATDbits.LATD4 = 1;
  2919  000412  888C               	bsf	140,4,c	;volatile
  2920  000414  EF9C  F001         	goto	l3520
  2921  000418                     l3546:
  2922                           
  2923                           ;main.c: 297:                 if (estaSeco(sensores[i])) {
  2924  000418  90D8               	bcf	status,0,c
  2925  00041A  3417               	rlcf	encenderBombas@i^0,w,c
  2926  00041C  6ED9               	movwf	fsr2l,c
  2927  00041E  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  2928  000420  6EDA               	movwf	fsr2h,c
  2929  000422  0E60               	movlw	low _sensores
  2930  000424  26D9               	addwf	fsr2l,f,c
  2931  000426  0E01               	movlw	high _sensores
  2932  000428  22DA               	addwfc	fsr2h,f,c
  2933  00042A  CFDE F010          	movff	postinc2,estaSeco@s
  2934  00042E  CFDD F011          	movff	postdec2,estaSeco@s+1
  2935  000432  ECDD  F011         	call	_estaSeco	;wreg free
  2936  000436  5010               	movf	?_estaSeco^0,w,c
  2937  000438  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2938  00043A  B4D8               	btfsc	status,2,c
  2939  00043C  EF22  F002         	goto	u2591
  2940  000440  EF24  F002         	goto	u2590
  2941  000444                     u2591:
  2942  000444  EF8B  F002         	goto	l3568
  2943  000448                     u2590:
  2944  000448                     
  2945                           ;main.c: 298:                     LATDbits.LATD5 = 1;
  2946  000448  8A8C               	bsf	140,5,c	;volatile
  2947  00044A  EF9C  F001         	goto	l3520
  2948  00044E                     l3552:
  2949                           
  2950                           ;main.c: 304:                 if (estaSeco(sensores[i])) {
  2951  00044E  90D8               	bcf	status,0,c
  2952  000450  3417               	rlcf	encenderBombas@i^0,w,c
  2953  000452  6ED9               	movwf	fsr2l,c
  2954  000454  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  2955  000456  6EDA               	movwf	fsr2h,c
  2956  000458  0E60               	movlw	low _sensores
  2957  00045A  26D9               	addwf	fsr2l,f,c
  2958  00045C  0E01               	movlw	high _sensores
  2959  00045E  22DA               	addwfc	fsr2h,f,c
  2960  000460  CFDE F010          	movff	postinc2,estaSeco@s
  2961  000464  CFDD F011          	movff	postdec2,estaSeco@s+1
  2962  000468  ECDD  F011         	call	_estaSeco	;wreg free
  2963  00046C  5010               	movf	?_estaSeco^0,w,c
  2964  00046E  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2965  000470  B4D8               	btfsc	status,2,c
  2966  000472  EF3D  F002         	goto	u2601
  2967  000476  EF3F  F002         	goto	u2600
  2968  00047A                     u2601:
  2969  00047A  EF8B  F002         	goto	l3568
  2970  00047E                     u2600:
  2971  00047E                     
  2972                           ;main.c: 305:                     LATDbits.LATD6 = 1;
  2973  00047E  8C8C               	bsf	140,6,c	;volatile
  2974  000480  EF9C  F001         	goto	l3520
  2975  000484                     l3558:
  2976                           
  2977                           ;main.c: 311:                 if (estaSeco(sensores[i])) {
  2978  000484  90D8               	bcf	status,0,c
  2979  000486  3417               	rlcf	encenderBombas@i^0,w,c
  2980  000488  6ED9               	movwf	fsr2l,c
  2981  00048A  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  2982  00048C  6EDA               	movwf	fsr2h,c
  2983  00048E  0E60               	movlw	low _sensores
  2984  000490  26D9               	addwf	fsr2l,f,c
  2985  000492  0E01               	movlw	high _sensores
  2986  000494  22DA               	addwfc	fsr2h,f,c
  2987  000496  CFDE F010          	movff	postinc2,estaSeco@s
  2988  00049A  CFDD F011          	movff	postdec2,estaSeco@s+1
  2989  00049E  ECDD  F011         	call	_estaSeco	;wreg free
  2990  0004A2  5010               	movf	?_estaSeco^0,w,c
  2991  0004A4  1011               	iorwf	(?_estaSeco+1)^0,w,c
  2992  0004A6  B4D8               	btfsc	status,2,c
  2993  0004A8  EF58  F002         	goto	u2611
  2994  0004AC  EF5A  F002         	goto	u2610
  2995  0004B0                     u2611:
  2996  0004B0  EF8B  F002         	goto	l3568
  2997  0004B4                     u2610:
  2998  0004B4                     
  2999                           ;main.c: 312:                     LATDbits.LATD7 = 1;
  3000  0004B4  8E8C               	bsf	140,7,c	;volatile
  3001  0004B6  EF9C  F001         	goto	l3520
  3002  0004BA                     l3566:
  3003  0004BA  C017  F014         	movff	encenderBombas@i,??_encenderBombas
  3004  0004BE  C018  F015         	movff	encenderBombas@i+1,??_encenderBombas+1
  3005                           
  3006                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3007                           ; Switch size 1, requested type "simple"
  3008                           ; Number of cases is 1, Range of values is 0 to 0
  3009                           ; switch strategies available:
  3010                           ; Name         Instructions Cycles
  3011                           ; simple_byte            4     3 (average)
  3012                           ;	Chosen strategy is simple_byte
  3013  0004C2  5015               	movf	(??_encenderBombas+1)^0,w,c
  3014  0004C4  0A00               	xorlw	0	; case 0
  3015  0004C6  B4D8               	btfsc	status,2,c
  3016  0004C8  EF68  F002         	goto	l4102
  3017  0004CC  EF8B  F002         	goto	l3568
  3018  0004D0                     l4102:
  3019                           
  3020                           ; Switch size 1, requested type "simple"
  3021                           ; Number of cases is 8, Range of values is 0 to 7
  3022                           ; switch strategies available:
  3023                           ; Name         Instructions Cycles
  3024                           ; simple_byte           25    13 (average)
  3025                           ;	Chosen strategy is simple_byte
  3026  0004D0  5014               	movf	??_encenderBombas^0,w,c
  3027  0004D2  0A00               	xorlw	0	; case 0
  3028  0004D4  B4D8               	btfsc	status,2,c
  3029  0004D6  EF83  F001         	goto	l3516
  3030  0004DA  0A01               	xorlw	1	; case 1
  3031  0004DC  B4D8               	btfsc	status,2,c
  3032  0004DE  EFA0  F001         	goto	l3522
  3033  0004E2  0A03               	xorlw	3	; case 2
  3034  0004E4  B4D8               	btfsc	status,2,c
  3035  0004E6  EFBB  F001         	goto	l3528
  3036  0004EA  0A01               	xorlw	1	; case 3
  3037  0004EC  B4D8               	btfsc	status,2,c
  3038  0004EE  EFD6  F001         	goto	l3534
  3039  0004F2  0A07               	xorlw	7	; case 4
  3040  0004F4  B4D8               	btfsc	status,2,c
  3041  0004F6  EFF1  F001         	goto	l3540
  3042  0004FA  0A01               	xorlw	1	; case 5
  3043  0004FC  B4D8               	btfsc	status,2,c
  3044  0004FE  EF0C  F002         	goto	l3546
  3045  000502  0A03               	xorlw	3	; case 6
  3046  000504  B4D8               	btfsc	status,2,c
  3047  000506  EF27  F002         	goto	l3552
  3048  00050A  0A01               	xorlw	1	; case 7
  3049  00050C  B4D8               	btfsc	status,2,c
  3050  00050E  EF42  F002         	goto	l3558
  3051  000512  EF8B  F002         	goto	l3568
  3052  000516                     l3568:
  3053                           
  3054                           ;main.c: 318:     }
  3055  000516  4A17               	infsnz	encenderBombas@i^0,f,c
  3056  000518  2A18               	incf	(encenderBombas@i+1)^0,f,c
  3057  00051A  BE18               	btfsc	(encenderBombas@i+1)^0,7,c
  3058  00051C  EF99  F002         	goto	u2621
  3059  000520  5018               	movf	(encenderBombas@i+1)^0,w,c
  3060  000522  E109               	bnz	u2620
  3061  000524  0E03               	movlw	3
  3062  000526  5C17               	subwf	encenderBombas@i^0,w,c
  3063  000528  A0D8               	btfss	status,0,c
  3064  00052A  EF99  F002         	goto	u2621
  3065  00052E  EF9B  F002         	goto	u2620
  3066  000532                     u2621:
  3067  000532  EF5D  F002         	goto	l3566
  3068  000536                     u2620:
  3069  000536                     
  3070                           ;main.c: 320:     if (flagSeco) {
  3071  000536  5016               	movf	encenderBombas@flagSeco^0,w,c
  3072  000538  B4D8               	btfsc	status,2,c
  3073  00053A  EFA1  F002         	goto	u2631
  3074  00053E  EFA3  F002         	goto	u2630
  3075  000542                     u2631:
  3076  000542  EFB0  F002         	goto	l279
  3077  000546                     u2630:
  3078  000546                     
  3079                           ;main.c: 321:         regando = 1;
  3080  000546  0E01               	movlw	1
  3081  000548  0100               	movlb	0	; () banked
  3082  00054A  6FEB               	movwf	_regando& (0+255),b
  3083  00054C                     
  3084                           ; BSR set to: 0
  3085                           ;main.c: 322:         horarios[hora].regado = 0;
  3086  00054C  505D               	movf	_hora^0,w,c
  3087  00054E  0D04               	mullw	4
  3088  000550  0E02               	movlw	low (_horarios+2)
  3089  000552  24F3               	addwf	243,w,c
  3090  000554  6ED9               	movwf	fsr2l,c
  3091  000556  0E01               	movlw	high (_horarios+2)
  3092  000558  20F4               	addwfc	prodh,w,c
  3093  00055A  6EDA               	movwf	fsr2h,c
  3094  00055C  0E00               	movlw	0
  3095  00055E  6EDF               	movwf	indf2,c
  3096  000560                     l279:
  3097  000560  0012               	return		;funcret
  3098  000562                     __end_of_encenderBombas:
  3099                           	opt callstack 0
  3100                           
  3101 ;; *************** function _estaSeco *****************
  3102 ;; Defined at:
  3103 ;;		line 138 in file "main.c"
  3104 ;; Parameters:    Size  Location     Type
  3105 ;;  s               2   15[COMRAM] struct .
  3106 ;; Auto vars:     Size  Location     Type
  3107 ;;  temperatura     1   18[COMRAM] unsigned char 
  3108 ;; Return value:  Size  Location     Type
  3109 ;;                  2   15[COMRAM] int 
  3110 ;; Registers used:
  3111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3112 ;; Tracked objects:
  3113 ;;		On entry : 0/0
  3114 ;;		On exit  : 0/0
  3115 ;;		Unchanged: 0/0
  3116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3117 ;;      Params:         2       0       0       0       0       0       0       0       0
  3118 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3119 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3120 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3121 ;;Total ram usage:        4 bytes
  3122 ;; Hardware stack levels used:    1
  3123 ;; Hardware stack levels required when called:    4
  3124 ;; This function calls:
  3125 ;;		_dameTemperaturaHumedad
  3126 ;; This function is called by:
  3127 ;;		_encenderBombas
  3128 ;; This function uses a non-reentrant model
  3129 ;;
  3130                           
  3131                           	psect	text4
  3132  0023BA                     __ptext4:
  3133                           	opt callstack 0
  3134  0023BA                     _estaSeco:
  3135                           	opt callstack 24
  3136  0023BA                     
  3137                           ;main.c: 139:     unsigned char temperatura;;main.c: 141:     dameTemperaturaHumedad(((v
      +                          oid*)0), &temperatura);
  3138  0023BA  0E00               	movlw	0
  3139  0023BC  6E04               	movwf	dameTemperaturaHumedad@Humedad^0,c
  3140  0023BE  0E00               	movlw	0
  3141  0023C0  6E05               	movwf	(dameTemperaturaHumedad@Humedad+1)^0,c
  3142  0023C2  0E13               	movlw	low estaSeco@temperatura
  3143  0023C4  6E06               	movwf	dameTemperaturaHumedad@Temperatura^0,c
  3144  0023C6  0E00               	movlw	high estaSeco@temperatura
  3145  0023C8  6E07               	movwf	(dameTemperaturaHumedad@Temperatura+1)^0,c
  3146  0023CA  EC75  F00C         	call	_dameTemperaturaHumedad	;wreg free
  3147  0023CE                     
  3148                           ;main.c: 144:     return (s.porcientoHumedad < 94) && (temperatura < 34);
  3149  0023CE  0E00               	movlw	0
  3150  0023D0  6E12               	movwf	_estaSeco$789^0,c
  3151  0023D2  0E5E               	movlw	94
  3152  0023D4  6010               	cpfslt	estaSeco@s^0,c
  3153  0023D6  EFEF  F011         	goto	u2441
  3154  0023DA  EFF1  F011         	goto	u2440
  3155  0023DE                     u2441:
  3156  0023DE  EFFB  F011         	goto	l3394
  3157  0023E2                     u2440:
  3158  0023E2  0E22               	movlw	34
  3159  0023E4  6013               	cpfslt	estaSeco@temperatura^0,c
  3160  0023E6  EFF7  F011         	goto	u2451
  3161  0023EA  EFF9  F011         	goto	u2450
  3162  0023EE                     u2451:
  3163  0023EE  EFFB  F011         	goto	l3394
  3164  0023F2                     u2450:
  3165  0023F2  0E01               	movlw	1
  3166  0023F4  6E12               	movwf	_estaSeco$789^0,c
  3167  0023F6                     l3394:
  3168  0023F6  C012  F010         	movff	_estaSeco$789,?_estaSeco
  3169  0023FA  6A11               	clrf	(?_estaSeco+1)^0,c
  3170  0023FC  0012               	return		;funcret
  3171  0023FE                     __end_of_estaSeco:
  3172                           	opt callstack 0
  3173                           
  3174 ;; *************** function _dameHoraActual *****************
  3175 ;; Defined at:
  3176 ;;		line 163 in file "main.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;		None
  3179 ;; Auto vars:     Size  Location     Type
  3180 ;;		None
  3181 ;; Return value:  Size  Location     Type
  3182 ;;                  1    wreg      void 
  3183 ;; Registers used:
  3184 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3185 ;; Tracked objects:
  3186 ;;		On entry : 0/0
  3187 ;;		On exit  : 0/0
  3188 ;;		Unchanged: 0/0
  3189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3190 ;;      Params:         0       0       0       0       0       0       0       0       0
  3191 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3192 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3193 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3194 ;;Total ram usage:        0 bytes
  3195 ;; Hardware stack levels used:    1
  3196 ;; Hardware stack levels required when called:    4
  3197 ;; This function calls:
  3198 ;;		_convertirDato
  3199 ;;		_leer_rtc
  3200 ;; This function is called by:
  3201 ;;		_sistemaRegado
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           	psect	text5
  3206  002564                     __ptext5:
  3207                           	opt callstack 0
  3208  002564                     _dameHoraActual:
  3209                           	opt callstack 25
  3210  002564                     
  3211                           ;main.c: 165:     segundos = convertirDato(leer_rtc(0x00));
  3212  002564  0E00               	movlw	0
  3213  002566  ECC7  F012         	call	_leer_rtc
  3214  00256A  ECEF  F012         	call	_convertirDato
  3215  00256E  0100               	movlb	0	; () banked
  3216  002570  6FF2               	movwf	_segundos& (0+255),b
  3217                           
  3218                           ;main.c: 166:     minutos = convertirDato(leer_rtc(0x01));
  3219  002572  0E01               	movlw	1
  3220  002574  ECC7  F012         	call	_leer_rtc
  3221  002578  ECEF  F012         	call	_convertirDato
  3222  00257C  0100               	movlb	0	; () banked
  3223  00257E  6FF3               	movwf	_minutos& (0+255),b
  3224                           
  3225                           ;main.c: 167:     hora = convertirDato(leer_rtc(0x02));
  3226  002580  0E02               	movlw	2
  3227  002582  ECC7  F012         	call	_leer_rtc
  3228  002586  ECEF  F012         	call	_convertirDato
  3229  00258A  6E5D               	movwf	_hora^0,c
  3230  00258C  0012               	return		;funcret
  3231  00258E                     __end_of_dameHoraActual:
  3232                           	opt callstack 0
  3233                           
  3234 ;; *************** function _leer_rtc *****************
  3235 ;; Defined at:
  3236 ;;		line 13 in file "./RTC.h"
  3237 ;; Parameters:    Size  Location     Type
  3238 ;;  direccion       1    wreg     unsigned char 
  3239 ;; Auto vars:     Size  Location     Type
  3240 ;;  direccion       1    2[COMRAM] unsigned char 
  3241 ;;  dato            1    3[COMRAM] unsigned char 
  3242 ;; Return value:  Size  Location     Type
  3243 ;;                  1    wreg      unsigned char 
  3244 ;; Registers used:
  3245 ;;		wreg, status,2, status,0, cstack
  3246 ;; Tracked objects:
  3247 ;;		On entry : 0/0
  3248 ;;		On exit  : 0/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3251 ;;      Params:         0       0       0       0       0       0       0       0       0
  3252 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3253 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3254 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3255 ;;Total ram usage:        2 bytes
  3256 ;; Hardware stack levels used:    1
  3257 ;; Hardware stack levels required when called:    3
  3258 ;; This function calls:
  3259 ;;		_i2c_detener
  3260 ;;		_i2c_envia_dato
  3261 ;;		_i2c_inicia_com
  3262 ;;		_i2c_recibe_dato
  3263 ;;		_i2c_reinicia_com
  3264 ;; This function is called by:
  3265 ;;		_dameHoraActual
  3266 ;; This function uses a non-reentrant model
  3267 ;;
  3268                           
  3269                           	psect	text6
  3270  00258E                     __ptext6:
  3271                           	opt callstack 0
  3272  00258E                     _leer_rtc:
  3273                           	opt callstack 25
  3274                           
  3275                           ;incstack = 0
  3276                           ;leer_rtc@direccion stored from wreg
  3277  00258E  6E03               	movwf	leer_rtc@direccion^0,c
  3278  002590                     
  3279                           ;./RTC.h: 14:     unsigned char dato;;./RTC.h: 15:     i2c_inicia_com();
  3280  002590  EC55  F013         	call	_i2c_inicia_com	;wreg free
  3281                           
  3282                           ;./RTC.h: 16:     i2c_envia_dato(0xD0);
  3283  002594  0ED0               	movlw	208
  3284  002596  EC41  F013         	call	_i2c_envia_dato
  3285                           
  3286                           ;./RTC.h: 17:     i2c_envia_dato(direccion);
  3287  00259A  5003               	movf	leer_rtc@direccion^0,w,c
  3288  00259C  EC41  F013         	call	_i2c_envia_dato
  3289                           
  3290                           ;./RTC.h: 18:     i2c_reinicia_com();
  3291  0025A0  EC51  F013         	call	_i2c_reinicia_com	;wreg free
  3292                           
  3293                           ;./RTC.h: 19:     i2c_envia_dato(0xD1);
  3294  0025A4  0ED1               	movlw	209
  3295  0025A6  EC41  F013         	call	_i2c_envia_dato
  3296                           
  3297                           ;./RTC.h: 20:     dato = i2c_recibe_dato();
  3298  0025AA  EC1E  F013         	call	_i2c_recibe_dato	;wreg free
  3299  0025AE  6E04               	movwf	leer_rtc@dato^0,c
  3300                           
  3301                           ;./RTC.h: 21:     i2c_detener();
  3302  0025B0  EC59  F013         	call	_i2c_detener	;wreg free
  3303  0025B4                     
  3304                           ;./RTC.h: 22:     return dato;
  3305  0025B4  5004               	movf	leer_rtc@dato^0,w,c
  3306  0025B6  0012               	return		;funcret
  3307  0025B8                     __end_of_leer_rtc:
  3308                           	opt callstack 0
  3309                           
  3310 ;; *************** function _convertirDato *****************
  3311 ;; Defined at:
  3312 ;;		line 28 in file "./RTC.h"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;  dato            1    wreg     unsigned char 
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;  dato            1    1[COMRAM] unsigned char 
  3317 ;;  datoR           1    2[COMRAM] unsigned char 
  3318 ;; Return value:  Size  Location     Type
  3319 ;;                  1    wreg      unsigned char 
  3320 ;; Registers used:
  3321 ;;		wreg, status,2, status,0, prodl, prodh
  3322 ;; Tracked objects:
  3323 ;;		On entry : 0/0
  3324 ;;		On exit  : 0/0
  3325 ;;		Unchanged: 0/0
  3326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3327 ;;      Params:         0       0       0       0       0       0       0       0       0
  3328 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3329 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3330 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3331 ;;Total ram usage:        3 bytes
  3332 ;; Hardware stack levels used:    1
  3333 ;; Hardware stack levels required when called:    1
  3334 ;; This function calls:
  3335 ;;		Nothing
  3336 ;; This function is called by:
  3337 ;;		_dameHoraActual
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340                           
  3341                           	psect	text7
  3342  0025DE                     __ptext7:
  3343                           	opt callstack 0
  3344  0025DE                     _convertirDato:
  3345                           	opt callstack 27
  3346                           
  3347                           ;incstack = 0
  3348                           ;convertirDato@dato stored from wreg
  3349  0025DE  6E02               	movwf	convertirDato@dato^0,c
  3350  0025E0                     
  3351                           ;./RTC.h: 30:     datoR = (dato & 0xF0) >> 4;
  3352  0025E0  3802               	swapf	convertirDato@dato^0,w,c
  3353  0025E2  0B0F               	andlw	15
  3354  0025E4  0B0F               	andlw	15
  3355  0025E6  6E03               	movwf	convertirDato@datoR^0,c
  3356  0025E8                     
  3357                           ;./RTC.h: 31:     datoR = (datoR * 10) + (dato & 0x0F);
  3358  0025E8  C002  F001         	movff	convertirDato@dato,??_convertirDato
  3359  0025EC  0E0F               	movlw	15
  3360  0025EE  1601               	andwf	??_convertirDato^0,f,c
  3361  0025F0  5003               	movf	convertirDato@datoR^0,w,c
  3362  0025F2  0D0A               	mullw	10
  3363  0025F4  50F3               	movf	243,w,c
  3364  0025F6  2401               	addwf	??_convertirDato^0,w,c
  3365  0025F8  6E03               	movwf	convertirDato@datoR^0,c
  3366  0025FA                     
  3367                           ;./RTC.h: 32:     return datoR;
  3368  0025FA  5003               	movf	convertirDato@datoR^0,w,c
  3369  0025FC  0012               	return		;funcret
  3370  0025FE                     __end_of_convertirDato:
  3371                           	opt callstack 0
  3372                           
  3373 ;; *************** function _sistemaPrincipal *****************
  3374 ;; Defined at:
  3375 ;;		line 494 in file "main.c"
  3376 ;; Parameters:    Size  Location     Type
  3377 ;;  opcion          1    wreg     unsigned char 
  3378 ;; Auto vars:     Size  Location     Type
  3379 ;;  opcion          1   91[COMRAM] unsigned char 
  3380 ;; Return value:  Size  Location     Type
  3381 ;;                  1    wreg      void 
  3382 ;; Registers used:
  3383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3384 ;; Tracked objects:
  3385 ;;		On entry : 0/0
  3386 ;;		On exit  : 0/0
  3387 ;;		Unchanged: 0/0
  3388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3389 ;;      Params:         0       0       0       0       0       0       0       0       0
  3390 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3391 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3392 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3393 ;;Total ram usage:        3 bytes
  3394 ;; Hardware stack levels used:    1
  3395 ;; Hardware stack levels required when called:   11
  3396 ;; This function calls:
  3397 ;;		_UART_printf
  3398 ;;		_asignarHorarios
  3399 ;;		_dameDatosSistema
  3400 ;;		_fijaHoraRtc
  3401 ;;		_mostrarDatosSensores
  3402 ;;		_mostrarDatosSensoresWIFI
  3403 ;;		_mostrarMenu
  3404 ;;		_regadoRapido
  3405 ;;		_setTiempoRegar
  3406 ;; This function is called by:
  3407 ;;		_main
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411                           	psect	text8
  3412  00199E                     __ptext8:
  3413                           	opt callstack 0
  3414  00199E                     _sistemaPrincipal:
  3415                           	opt callstack 19
  3416                           
  3417                           ;incstack = 0
  3418                           ;sistemaPrincipal@opcion stored from wreg
  3419  00199E  6E5C               	movwf	sistemaPrincipal@opcion^0,c
  3420  0019A0                     
  3421                           ;main.c: 496:     PIE1bits.RCIE = 0;
  3422  0019A0  9A9D               	bcf	157,5,c	;volatile
  3423                           
  3424                           ;main.c: 498:     switch (opcion) {
  3425  0019A2  EFFF  F00C         	goto	l3830
  3426  0019A6                     l3810:
  3427                           
  3428                           ;main.c: 501:             fijaHoraRtc();
  3429  0019A6  ECD1  F00F         	call	_fijaHoraRtc	;wreg free
  3430                           
  3431                           ;main.c: 502:             break;
  3432  0019AA  EF24  F00D         	goto	l3832
  3433  0019AE                     l3812:
  3434                           
  3435                           ;main.c: 505:             asignarHorarios();
  3436  0019AE  EC73  F00E         	call	_asignarHorarios	;wreg free
  3437                           
  3438                           ;main.c: 506:             break;
  3439  0019B2  EF24  F00D         	goto	l3832
  3440  0019B6                     l3814:
  3441                           
  3442                           ;main.c: 509:             setTiempoRegar();
  3443  0019B6  ECD6  F00D         	call	_setTiempoRegar	;wreg free
  3444                           
  3445                           ;main.c: 510:             break;
  3446  0019BA  EF24  F00D         	goto	l3832
  3447  0019BE                     l3816:
  3448                           
  3449                           ;main.c: 513:             dameDatosSistema();
  3450  0019BE  EC9E  F008         	call	_dameDatosSistema	;wreg free
  3451                           
  3452                           ;main.c: 514:             break;
  3453  0019C2  EF24  F00D         	goto	l3832
  3454  0019C6                     l3818:
  3455                           
  3456                           ;main.c: 517:             if (MODO_COMUNICACION)
  3457  0019C6  505E               	movf	_MODO_COMUNICACION^0,w,c
  3458  0019C8  B4D8               	btfsc	status,2,c
  3459  0019CA  EFE9  F00C         	goto	u2791
  3460  0019CE  EFEB  F00C         	goto	u2790
  3461  0019D2                     u2791:
  3462  0019D2  EFEF  F00C         	goto	l3822
  3463  0019D6                     u2790:
  3464  0019D6                     
  3465                           ;main.c: 518:                 mostrarDatosSensoresWIFI();
  3466  0019D6  EC1F  F008         	call	_mostrarDatosSensoresWIFI	;wreg free
  3467  0019DA  EF24  F00D         	goto	l3832
  3468  0019DE                     l3822:
  3469                           
  3470                           ;main.c: 520:                 mostrarDatosSensores();
  3471  0019DE  EC90  F009         	call	_mostrarDatosSensores	;wreg free
  3472  0019E2  EF24  F00D         	goto	l3832
  3473  0019E6                     l3824:
  3474                           
  3475                           ;main.c: 524:             regadoRapido();
  3476  0019E6  ECFE  F006         	call	_regadoRapido	;wreg free
  3477                           
  3478                           ;main.c: 525:             break;
  3479  0019EA  EF24  F00D         	goto	l3832
  3480  0019EE                     l3826:
  3481                           
  3482                           ;main.c: 528:             UART_printf("\r\n Solo se permiten numeros del 1 al 3 \r\n");
  3483  0019EE  0E39               	movlw	low STR_25
  3484  0019F0  6E02               	movwf	UART_printf@cadena^0,c
  3485  0019F2  0E7D               	movlw	high STR_25
  3486  0019F4  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3487  0019F6  EC67  F010         	call	_UART_printf	;wreg free
  3488                           
  3489                           ;main.c: 529:             break;
  3490  0019FA  EF24  F00D         	goto	l3832
  3491  0019FE                     l3830:
  3492  0019FE  505C               	movf	sistemaPrincipal@opcion^0,w,c
  3493  001A00  6E5A               	movwf	??_sistemaPrincipal^0,c
  3494  001A02  6A5B               	clrf	(??_sistemaPrincipal+1)^0,c
  3495                           
  3496                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3497                           ; Switch size 1, requested type "simple"
  3498                           ; Number of cases is 1, Range of values is 0 to 0
  3499                           ; switch strategies available:
  3500                           ; Name         Instructions Cycles
  3501                           ; simple_byte            4     3 (average)
  3502                           ;	Chosen strategy is simple_byte
  3503  001A04  505B               	movf	(??_sistemaPrincipal+1)^0,w,c
  3504  001A06  0A00               	xorlw	0	; case 0
  3505  001A08  B4D8               	btfsc	status,2,c
  3506  001A0A  EF09  F00D         	goto	l4104
  3507  001A0E  EFF7  F00C         	goto	l3826
  3508  001A12                     l4104:
  3509                           
  3510                           ; Switch size 1, requested type "simple"
  3511                           ; Number of cases is 6, Range of values is 1 to 6
  3512                           ; switch strategies available:
  3513                           ; Name         Instructions Cycles
  3514                           ; simple_byte           19    10 (average)
  3515                           ;	Chosen strategy is simple_byte
  3516  001A12  505A               	movf	??_sistemaPrincipal^0,w,c
  3517  001A14  0A01               	xorlw	1	; case 1
  3518  001A16  B4D8               	btfsc	status,2,c
  3519  001A18  EFD3  F00C         	goto	l3810
  3520  001A1C  0A03               	xorlw	3	; case 2
  3521  001A1E  B4D8               	btfsc	status,2,c
  3522  001A20  EFD7  F00C         	goto	l3812
  3523  001A24  0A01               	xorlw	1	; case 3
  3524  001A26  B4D8               	btfsc	status,2,c
  3525  001A28  EFDB  F00C         	goto	l3814
  3526  001A2C  0A07               	xorlw	7	; case 4
  3527  001A2E  B4D8               	btfsc	status,2,c
  3528  001A30  EFDF  F00C         	goto	l3816
  3529  001A34  0A01               	xorlw	1	; case 5
  3530  001A36  B4D8               	btfsc	status,2,c
  3531  001A38  EFE3  F00C         	goto	l3818
  3532  001A3C  0A03               	xorlw	3	; case 6
  3533  001A3E  B4D8               	btfsc	status,2,c
  3534  001A40  EFF3  F00C         	goto	l3824
  3535  001A44  EFF7  F00C         	goto	l3826
  3536  001A48                     l3832:
  3537                           
  3538                           ;main.c: 532:     mostrarMenu();
  3539  001A48  EC65  F00F         	call	_mostrarMenu	;wreg free
  3540  001A4C                     
  3541                           ;main.c: 533:     PIE1bits.RCIE = 1;
  3542  001A4C  8A9D               	bsf	157,5,c	;volatile
  3543  001A4E  0012               	return		;funcret
  3544  001A50                     __end_of_sistemaPrincipal:
  3545                           	opt callstack 0
  3546                           
  3547 ;; *************** function _setTiempoRegar *****************
  3548 ;; Defined at:
  3549 ;;		line 378 in file "main.c"
  3550 ;; Parameters:    Size  Location     Type
  3551 ;;		None
  3552 ;; Auto vars:     Size  Location     Type
  3553 ;;  hora            1   15[COMRAM] unsigned char 
  3554 ;;  tiempoRegar     1   14[COMRAM] unsigned char 
  3555 ;; Return value:  Size  Location     Type
  3556 ;;                  1    wreg      void 
  3557 ;; Registers used:
  3558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3559 ;; Tracked objects:
  3560 ;;		On entry : 0/0
  3561 ;;		On exit  : 0/0
  3562 ;;		Unchanged: 0/0
  3563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3564 ;;      Params:         0       0       0       0       0       0       0       0       0
  3565 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3566 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3567 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3568 ;;Total ram usage:        2 bytes
  3569 ;; Hardware stack levels used:    1
  3570 ;; Hardware stack levels required when called:    5
  3571 ;; This function calls:
  3572 ;;		_UART_printf
  3573 ;;		_escribeHorariosMemoria
  3574 ;;		_getValue
  3575 ;; This function is called by:
  3576 ;;		_sistemaPrincipal
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580                           	psect	text9
  3581  001BAC                     __ptext9:
  3582                           	opt callstack 0
  3583  001BAC                     _setTiempoRegar:
  3584                           	opt callstack 24
  3585  001BAC                     
  3586                           ;main.c: 380:     unsigned char hora;;main.c: 381:     unsigned char tiempoRegar;;main.c
      +                          : 383:     UART_printf("\r\n TIEMPO DE REGADO \r\n");
  3587  001BAC  0E42               	movlw	low STR_9
  3588  001BAE  6E02               	movwf	UART_printf@cadena^0,c
  3589  001BB0  0E7F               	movlw	high STR_9
  3590  001BB2  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3591  001BB4  EC67  F010         	call	_UART_printf	;wreg free
  3592                           
  3593                           ;main.c: 385:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  3594  001BB8  0E18               	movlw	low STR_6
  3595  001BBA  6E02               	movwf	UART_printf@cadena^0,c
  3596  001BBC  0E7C               	movlw	high STR_6
  3597  001BBE  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3598  001BC0  EC67  F010         	call	_UART_printf	;wreg free
  3599  001BC4                     
  3600                           ;main.c: 386:     hora = getValue(2);
  3601  001BC4  0E00               	movlw	0
  3602  001BC6  6E05               	movwf	(getValue@numCharacters+1)^0,c
  3603  001BC8  0E02               	movlw	2
  3604  001BCA  6E04               	movwf	getValue@numCharacters^0,c
  3605  001BCC  ECC4  F003         	call	_getValue	;wreg free
  3606  001BD0  6E10               	movwf	setTiempoRegar@hora^0,c
  3607  001BD2                     
  3608                           ;main.c: 388:     if (hora != 'F') {
  3609  001BD2  0E46               	movlw	70
  3610  001BD4  1810               	xorwf	setTiempoRegar@hora^0,w,c
  3611  001BD6  B4D8               	btfsc	status,2,c
  3612  001BD8  EFF0  F00D         	goto	u2681
  3613  001BDC  EFF2  F00D         	goto	u2680
  3614  001BE0                     u2681:
  3615  001BE0  EF25  F00E         	goto	l294
  3616  001BE4                     u2680:
  3617  001BE4                     
  3618                           ;main.c: 390:         UART_printf("\r\n Ingrese los minutos que desee que se riegue en e
      +                          se horario ej: 15 \r\n");
  3619  001BE4  0EED               	movlw	low STR_11
  3620  001BE6  6E02               	movwf	UART_printf@cadena^0,c
  3621  001BE8  0E7A               	movlw	high STR_11
  3622  001BEA  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3623  001BEC  EC67  F010         	call	_UART_printf	;wreg free
  3624  001BF0                     
  3625                           ;main.c: 391:         tiempoRegar = getValue(2);
  3626  001BF0  0E00               	movlw	0
  3627  001BF2  6E05               	movwf	(getValue@numCharacters+1)^0,c
  3628  001BF4  0E02               	movlw	2
  3629  001BF6  6E04               	movwf	getValue@numCharacters^0,c
  3630  001BF8  ECC4  F003         	call	_getValue	;wreg free
  3631  001BFC  6E0F               	movwf	setTiempoRegar@tiempoRegar^0,c
  3632  001BFE                     
  3633                           ;main.c: 393:         if (tiempoRegar != 'F') {
  3634  001BFE  0E46               	movlw	70
  3635  001C00  180F               	xorwf	setTiempoRegar@tiempoRegar^0,w,c
  3636  001C02  B4D8               	btfsc	status,2,c
  3637  001C04  EF06  F00E         	goto	u2691
  3638  001C08  EF08  F00E         	goto	u2690
  3639  001C0C                     u2691:
  3640  001C0C  EF25  F00E         	goto	l294
  3641  001C10                     u2690:
  3642  001C10                     
  3643                           ;main.c: 395:             UART_printf("\r\n Minutos de riego establecidos! \r\n");
  3644  001C10  0E89               	movlw	low STR_12
  3645  001C12  6E02               	movwf	UART_printf@cadena^0,c
  3646  001C14  0E7D               	movlw	high STR_12
  3647  001C16  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3648  001C18  EC67  F010         	call	_UART_printf	;wreg free
  3649  001C1C                     
  3650                           ;main.c: 397:             horarios[hora].tiempoRegar = tiempoRegar;
  3651  001C1C  5010               	movf	setTiempoRegar@hora^0,w,c
  3652  001C1E  0D04               	mullw	4
  3653  001C20  0E03               	movlw	low (_horarios+3)
  3654  001C22  24F3               	addwf	243,w,c
  3655  001C24  6ED9               	movwf	fsr2l,c
  3656  001C26  0E01               	movlw	high (_horarios+3)
  3657  001C28  20F4               	addwfc	prodh,w,c
  3658  001C2A  6EDA               	movwf	fsr2h,c
  3659  001C2C  C00F  FFDF         	movff	setTiempoRegar@tiempoRegar,indf2
  3660  001C30                     
  3661                           ;main.c: 398:             minutosRegar = horarios[hora].tiempoRegar;
  3662  001C30  5010               	movf	setTiempoRegar@hora^0,w,c
  3663  001C32  0D04               	mullw	4
  3664  001C34  0E03               	movlw	low (_horarios+3)
  3665  001C36  24F3               	addwf	243,w,c
  3666  001C38  6ED9               	movwf	fsr2l,c
  3667  001C3A  0E01               	movlw	high (_horarios+3)
  3668  001C3C  20F4               	addwfc	prodh,w,c
  3669  001C3E  6EDA               	movwf	fsr2h,c
  3670  001C40  50DF               	movf	indf2,w,c
  3671  001C42  0100               	movlb	0	; () banked
  3672  001C44  6FED               	movwf	_minutosRegar& (0+255),b
  3673  001C46                     
  3674                           ; BSR set to: 0
  3675                           ;main.c: 400:             escribeHorariosMemoria();
  3676  001C46  EC07  F00A         	call	_escribeHorariosMemoria	;wreg free
  3677  001C4A                     l294:
  3678  001C4A  0012               	return		;funcret
  3679  001C4C                     __end_of_setTiempoRegar:
  3680                           	opt callstack 0
  3681                           
  3682 ;; *************** function _regadoRapido *****************
  3683 ;; Defined at:
  3684 ;;		line 825 in file "main.c"
  3685 ;; Parameters:    Size  Location     Type
  3686 ;;		None
  3687 ;; Auto vars:     Size  Location     Type
  3688 ;;  areaRegar       1   17[COMRAM] unsigned char 
  3689 ;;  tiempoRegar     1   16[COMRAM] unsigned char 
  3690 ;; Return value:  Size  Location     Type
  3691 ;;                  1    wreg      void 
  3692 ;; Registers used:
  3693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3694 ;; Tracked objects:
  3695 ;;		On entry : 0/0
  3696 ;;		On exit  : 0/0
  3697 ;;		Unchanged: 0/0
  3698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3699 ;;      Params:         0       0       0       0       0       0       0       0       0
  3700 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3701 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3702 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3703 ;;Total ram usage:        4 bytes
  3704 ;; Hardware stack levels used:    1
  3705 ;; Hardware stack levels required when called:    4
  3706 ;; This function calls:
  3707 ;;		_UART_printf
  3708 ;;		_getValue
  3709 ;; This function is called by:
  3710 ;;		_sistemaPrincipal
  3711 ;; This function uses a non-reentrant model
  3712 ;;
  3713                           
  3714                           	psect	text10
  3715  000DFC                     __ptext10:
  3716                           	opt callstack 0
  3717  000DFC                     _regadoRapido:
  3718                           	opt callstack 25
  3719  000DFC                     
  3720                           ;main.c: 827:     unsigned char tiempoRegar;;main.c: 828:     unsigned char areaRegar;;m
      +                          ain.c: 830:     UART_printf("\r\n REGADO RAPIDO \r\n");
  3721  000DFC  0E85               	movlw	low STR_40
  3722  000DFE  6E02               	movwf	UART_printf@cadena^0,c
  3723  000E00  0E7F               	movlw	high STR_40
  3724  000E02  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3725  000E04  EC67  F010         	call	_UART_printf	;wreg free
  3726  000E08                     
  3727                           ;main.c: 832:     if (!regando) {
  3728  000E08  0100               	movlb	0	; () banked
  3729  000E0A  51EB               	movf	_regando& (0+255),w,b
  3730  000E0C  A4D8               	btfss	status,2,c
  3731  000E0E  EF0B  F007         	goto	u2741
  3732  000E12  EF0D  F007         	goto	u2740
  3733  000E16                     u2741:
  3734  000E16  EF92  F007         	goto	l3740
  3735  000E1A                     u2740:
  3736  000E1A                     
  3737                           ; BSR set to: 0
  3738                           ;main.c: 833:         UART_printf("\r\n Ingrese los minutos que desee que se riegue ej: 
      +                          15 \r\n");
  3739  000E1A  0EA8               	movlw	low STR_41
  3740  000E1C  6E02               	movwf	UART_printf@cadena^0,c
  3741  000E1E  0E7B               	movlw	high STR_41
  3742  000E20  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3743  000E22  EC67  F010         	call	_UART_printf	;wreg free
  3744  000E26                     
  3745                           ;main.c: 834:         tiempoRegar = getValue(2);
  3746  000E26  0E00               	movlw	0
  3747  000E28  6E05               	movwf	(getValue@numCharacters+1)^0,c
  3748  000E2A  0E02               	movlw	2
  3749  000E2C  6E04               	movwf	getValue@numCharacters^0,c
  3750  000E2E  ECC4  F003         	call	_getValue	;wreg free
  3751  000E32  6E11               	movwf	regadoRapido@tiempoRegar^0,c
  3752  000E34                     
  3753                           ;main.c: 836:         if (tiempoRegar != 'F') {
  3754  000E34  0E46               	movlw	70
  3755  000E36  1811               	xorwf	regadoRapido@tiempoRegar^0,w,c
  3756  000E38  B4D8               	btfsc	status,2,c
  3757  000E3A  EF21  F007         	goto	u2751
  3758  000E3E  EF23  F007         	goto	u2750
  3759  000E42                     u2751:
  3760  000E42  EF98  F007         	goto	l429
  3761  000E46                     u2750:
  3762  000E46                     
  3763                           ;main.c: 838:             UART_printf("\r\n Ingrese el numero de sensor del area a regar
      +                           ej: 5 \r\n");
  3764  000E46  0E6F               	movlw	low STR_42
  3765  000E48  6E02               	movwf	UART_printf@cadena^0,c
  3766  000E4A  0E7B               	movlw	high STR_42
  3767  000E4C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3768  000E4E  EC67  F010         	call	_UART_printf	;wreg free
  3769  000E52                     
  3770                           ;main.c: 839:             areaRegar = getValue(1);
  3771  000E52  0E00               	movlw	0
  3772  000E54  6E05               	movwf	(getValue@numCharacters+1)^0,c
  3773  000E56  0E01               	movlw	1
  3774  000E58  6E04               	movwf	getValue@numCharacters^0,c
  3775  000E5A  ECC4  F003         	call	_getValue	;wreg free
  3776  000E5E  6E12               	movwf	regadoRapido@areaRegar^0,c
  3777  000E60                     
  3778                           ;main.c: 841:             if (areaRegar != 'F') {
  3779  000E60  0E46               	movlw	70
  3780  000E62  1812               	xorwf	regadoRapido@areaRegar^0,w,c
  3781  000E64  B4D8               	btfsc	status,2,c
  3782  000E66  EF37  F007         	goto	u2761
  3783  000E6A  EF39  F007         	goto	u2760
  3784  000E6E                     u2761:
  3785  000E6E  EF98  F007         	goto	l429
  3786  000E72                     u2760:
  3787  000E72                     
  3788                           ;main.c: 843:                 areaRegar--;
  3789  000E72  0612               	decf	regadoRapido@areaRegar^0,f,c
  3790                           
  3791                           ;main.c: 845:                 switch (areaRegar) {
  3792  000E74  EF54  F007         	goto	l3732
  3793  000E78                     l419:
  3794                           
  3795                           ;main.c: 848:                         LATDbits.LATD0 = 1;
  3796  000E78  808C               	bsf	140,0,c	;volatile
  3797                           
  3798                           ;main.c: 849:                         break;
  3799  000E7A  EF81  F007         	goto	l3734
  3800  000E7E                     l421:
  3801                           
  3802                           ;main.c: 852:                         LATDbits.LATD1 = 1;
  3803  000E7E  828C               	bsf	140,1,c	;volatile
  3804                           
  3805                           ;main.c: 853:                         break;
  3806  000E80  EF81  F007         	goto	l3734
  3807  000E84                     l422:
  3808                           
  3809                           ;main.c: 856:                         LATDbits.LATD2 = 1;
  3810  000E84  848C               	bsf	140,2,c	;volatile
  3811                           
  3812                           ;main.c: 857:                         break;
  3813  000E86  EF81  F007         	goto	l3734
  3814  000E8A                     l423:
  3815                           
  3816                           ;main.c: 860:                         LATDbits.LATD3 = 1;
  3817  000E8A  868C               	bsf	140,3,c	;volatile
  3818                           
  3819                           ;main.c: 861:                         break;
  3820  000E8C  EF81  F007         	goto	l3734
  3821  000E90                     l424:
  3822                           
  3823                           ;main.c: 864:                         LATDbits.LATD4 = 1;
  3824  000E90  888C               	bsf	140,4,c	;volatile
  3825                           
  3826                           ;main.c: 865:                         break;
  3827  000E92  EF81  F007         	goto	l3734
  3828  000E96                     l425:
  3829                           
  3830                           ;main.c: 868:                         LATDbits.LATD5 = 1;
  3831  000E96  8A8C               	bsf	140,5,c	;volatile
  3832                           
  3833                           ;main.c: 869:                         break;
  3834  000E98  EF81  F007         	goto	l3734
  3835  000E9C                     l426:
  3836                           
  3837                           ;main.c: 872:                         LATDbits.LATD6 = 1;
  3838  000E9C  8C8C               	bsf	140,6,c	;volatile
  3839                           
  3840                           ;main.c: 873:                         break;
  3841  000E9E  EF81  F007         	goto	l3734
  3842  000EA2                     l427:
  3843                           
  3844                           ;main.c: 876:                         LATDbits.LATD7 = 1;
  3845  000EA2  8E8C               	bsf	140,7,c	;volatile
  3846                           
  3847                           ;main.c: 877:                         break;
  3848  000EA4  EF81  F007         	goto	l3734
  3849  000EA8                     l3732:
  3850  000EA8  5012               	movf	regadoRapido@areaRegar^0,w,c
  3851  000EAA  6E0F               	movwf	??_regadoRapido^0,c
  3852  000EAC  6A10               	clrf	(??_regadoRapido+1)^0,c
  3853                           
  3854                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3855                           ; Switch size 1, requested type "simple"
  3856                           ; Number of cases is 1, Range of values is 0 to 0
  3857                           ; switch strategies available:
  3858                           ; Name         Instructions Cycles
  3859                           ; simple_byte            4     3 (average)
  3860                           ;	Chosen strategy is simple_byte
  3861  000EAE  5010               	movf	(??_regadoRapido+1)^0,w,c
  3862  000EB0  0A00               	xorlw	0	; case 0
  3863  000EB2  B4D8               	btfsc	status,2,c
  3864  000EB4  EF5E  F007         	goto	l4106
  3865  000EB8  EF81  F007         	goto	l3734
  3866  000EBC                     l4106:
  3867                           
  3868                           ; Switch size 1, requested type "simple"
  3869                           ; Number of cases is 8, Range of values is 0 to 7
  3870                           ; switch strategies available:
  3871                           ; Name         Instructions Cycles
  3872                           ; simple_byte           25    13 (average)
  3873                           ;	Chosen strategy is simple_byte
  3874  000EBC  500F               	movf	??_regadoRapido^0,w,c
  3875  000EBE  0A00               	xorlw	0	; case 0
  3876  000EC0  B4D8               	btfsc	status,2,c
  3877  000EC2  EF3C  F007         	goto	l419
  3878  000EC6  0A01               	xorlw	1	; case 1
  3879  000EC8  B4D8               	btfsc	status,2,c
  3880  000ECA  EF3F  F007         	goto	l421
  3881  000ECE  0A03               	xorlw	3	; case 2
  3882  000ED0  B4D8               	btfsc	status,2,c
  3883  000ED2  EF42  F007         	goto	l422
  3884  000ED6  0A01               	xorlw	1	; case 3
  3885  000ED8  B4D8               	btfsc	status,2,c
  3886  000EDA  EF45  F007         	goto	l423
  3887  000EDE  0A07               	xorlw	7	; case 4
  3888  000EE0  B4D8               	btfsc	status,2,c
  3889  000EE2  EF48  F007         	goto	l424
  3890  000EE6  0A01               	xorlw	1	; case 5
  3891  000EE8  B4D8               	btfsc	status,2,c
  3892  000EEA  EF4B  F007         	goto	l425
  3893  000EEE  0A03               	xorlw	3	; case 6
  3894  000EF0  B4D8               	btfsc	status,2,c
  3895  000EF2  EF4E  F007         	goto	l426
  3896  000EF6  0A01               	xorlw	1	; case 7
  3897  000EF8  B4D8               	btfsc	status,2,c
  3898  000EFA  EF51  F007         	goto	l427
  3899  000EFE  EF81  F007         	goto	l3734
  3900  000F02                     l3734:
  3901                           
  3902                           ;main.c: 881:                 regando = 1;
  3903  000F02  0E01               	movlw	1
  3904  000F04  0100               	movlb	0	; () banked
  3905  000F06  6FEB               	movwf	_regando& (0+255),b
  3906  000F08                     
  3907                           ; BSR set to: 0
  3908                           ;main.c: 882:                 horarios[hora].regado = 0;
  3909  000F08  505D               	movf	_hora^0,w,c
  3910  000F0A  0D04               	mullw	4
  3911  000F0C  0E02               	movlw	low (_horarios+2)
  3912  000F0E  24F3               	addwf	243,w,c
  3913  000F10  6ED9               	movwf	fsr2l,c
  3914  000F12  0E01               	movlw	high (_horarios+2)
  3915  000F14  20F4               	addwfc	prodh,w,c
  3916  000F16  6EDA               	movwf	fsr2h,c
  3917  000F18  0E00               	movlw	0
  3918  000F1A  6EDF               	movwf	indf2,c
  3919  000F1C                     
  3920                           ; BSR set to: 0
  3921                           ;main.c: 883:                 minutosRegar = tiempoRegar;
  3922  000F1C  C011  F0ED         	movff	regadoRapido@tiempoRegar,_minutosRegar
  3923  000F20  EF98  F007         	goto	l429
  3924  000F24                     l3740:
  3925                           
  3926                           ; BSR set to: 0
  3927                           ;main.c: 890:         UART_printf("\r\n Ya se esta efectuando un riego, intentelo mas ta
      +                          rde \r\n");
  3928  000F24  0E35               	movlw	low STR_43
  3929  000F26  6E02               	movwf	UART_printf@cadena^0,c
  3930  000F28  0E7B               	movlw	high STR_43
  3931  000F2A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3932  000F2C  EC67  F010         	call	_UART_printf	;wreg free
  3933  000F30                     l429:
  3934  000F30  0012               	return		;funcret
  3935  000F32                     __end_of_regadoRapido:
  3936                           	opt callstack 0
  3937                           
  3938 ;; *************** function _mostrarMenu *****************
  3939 ;; Defined at:
  3940 ;;		line 481 in file "main.c"
  3941 ;; Parameters:    Size  Location     Type
  3942 ;;		None
  3943 ;; Auto vars:     Size  Location     Type
  3944 ;;		None
  3945 ;; Return value:  Size  Location     Type
  3946 ;;                  1    wreg      void 
  3947 ;; Registers used:
  3948 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3949 ;; Tracked objects:
  3950 ;;		On entry : 0/0
  3951 ;;		On exit  : 0/0
  3952 ;;		Unchanged: 0/0
  3953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3954 ;;      Params:         0       0       0       0       0       0       0       0       0
  3955 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3956 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3957 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3958 ;;Total ram usage:        0 bytes
  3959 ;; Hardware stack levels used:    1
  3960 ;; Hardware stack levels required when called:    3
  3961 ;; This function calls:
  3962 ;;		_UART_printf
  3963 ;; This function is called by:
  3964 ;;		_sistemaPrincipal
  3965 ;;		_sistemaRegado
  3966 ;;		_main
  3967 ;; This function uses a non-reentrant model
  3968 ;;
  3969                           
  3970                           	psect	text11
  3971  001ECA                     __ptext11:
  3972                           	opt callstack 0
  3973  001ECA                     _mostrarMenu:
  3974                           	opt callstack 26
  3975  001ECA                     
  3976                           ;main.c: 483:     UART_printf("\r\n Ingresa una opcion a Realizar: \r\n");
  3977  001ECA  0EAE               	movlw	low STR_16
  3978  001ECC  6E02               	movwf	UART_printf@cadena^0,c
  3979  001ECE  0E7D               	movlw	high STR_16
  3980  001ED0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3981  001ED2  EC67  F010         	call	_UART_printf	;wreg free
  3982                           
  3983                           ;main.c: 484:     UART_printf("\r\n 1. Fijar Hora Actual \r\n");
  3984  001ED6  0EDB               	movlw	low STR_17
  3985  001ED8  6E02               	movwf	UART_printf@cadena^0,c
  3986  001EDA  0E7E               	movlw	high STR_17
  3987  001EDC  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3988  001EDE  EC67  F010         	call	_UART_printf	;wreg free
  3989                           
  3990                           ;main.c: 485:     UART_printf("\r\n 2. Asignar Horarios para regar \r\n");
  3991  001EE2  0EF8               	movlw	low STR_18
  3992  001EE4  6E02               	movwf	UART_printf@cadena^0,c
  3993  001EE6  0E7D               	movlw	high STR_18
  3994  001EE8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  3995  001EEA  EC67  F010         	call	_UART_printf	;wreg free
  3996                           
  3997                           ;main.c: 486:     UART_printf("\r\n 3. Programar tiempo de riego en un horario \r\n");
  3998  001EEE  0EB0               	movlw	low STR_19
  3999  001EF0  6E02               	movwf	UART_printf@cadena^0,c
  4000  001EF2  0E7C               	movlw	high STR_19
  4001  001EF4  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4002  001EF6  EC67  F010         	call	_UART_printf	;wreg free
  4003                           
  4004                           ;main.c: 487:     UART_printf("\r\n 4. Dame datos del sistema \r\n");
  4005  001EFA  0E5F               	movlw	low STR_20
  4006  001EFC  6E02               	movwf	UART_printf@cadena^0,c
  4007  001EFE  0E7E               	movlw	high STR_20
  4008  001F00  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4009  001F02  EC67  F010         	call	_UART_printf	;wreg free
  4010                           
  4011                           ;main.c: 488:     UART_printf("\r\n 5. Mostrar valores sensores \r\n");
  4012  001F06  0E1D               	movlw	low STR_21
  4013  001F08  6E02               	movwf	UART_printf@cadena^0,c
  4014  001F0A  0E7E               	movlw	high STR_21
  4015  001F0C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4016  001F0E  EC67  F010         	call	_UART_printf	;wreg free
  4017                           
  4018                           ;main.c: 489:     UART_printf("\r\n 6. Regado rapido \r\n");
  4019  001F12  0E59               	movlw	low STR_22
  4020  001F14  6E02               	movwf	UART_printf@cadena^0,c
  4021  001F16  0E7F               	movlw	high STR_22
  4022  001F18  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4023  001F1A  EC67  F010         	call	_UART_printf	;wreg free
  4024                           
  4025                           ;main.c: 490:     UART_printf("\r\n Opcion:  \r");
  4026  001F1E  0EDC               	movlw	low STR_23
  4027  001F20  6E02               	movwf	UART_printf@cadena^0,c
  4028  001F22  0E7F               	movlw	high STR_23
  4029  001F24  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4030  001F26  EC67  F010         	call	_UART_printf	;wreg free
  4031                           
  4032                           ;main.c: 491:     UART_printf("\r\n");
  4033  001F2A  0E0D               	movlw	low (STR_8+23)
  4034  001F2C  6E02               	movwf	UART_printf@cadena^0,c
  4035  001F2E  0E7F               	movlw	high (STR_8+23)
  4036  001F30  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4037  001F32  EC67  F010         	call	_UART_printf	;wreg free
  4038  001F36  0012               	return		;funcret
  4039  001F38                     __end_of_mostrarMenu:
  4040                           	opt callstack 0
  4041                           
  4042 ;; *************** function _mostrarDatosSensoresWIFI *****************
  4043 ;; Defined at:
  4044 ;;		line 677 in file "main.c"
  4045 ;; Parameters:    Size  Location     Type
  4046 ;;		None
  4047 ;; Auto vars:     Size  Location     Type
  4048 ;;  i               2  126[BANK0 ] int 
  4049 ;;  buffer         50   74[BANK0 ] unsigned char [50]
  4050 ;;  humedad         1  125[BANK0 ] unsigned char 
  4051 ;;  temperatura     1  124[BANK0 ] unsigned char 
  4052 ;; Return value:  Size  Location     Type
  4053 ;;                  1    wreg      void 
  4054 ;; Registers used:
  4055 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4056 ;; Tracked objects:
  4057 ;;		On entry : 0/0
  4058 ;;		On exit  : 0/0
  4059 ;;		Unchanged: 0/0
  4060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4061 ;;      Params:         0       0       0       0       0       0       0       0       0
  4062 ;;      Locals:         0      54       0       0       0       0       0       0       0
  4063 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4064 ;;      Totals:         1      54       0       0       0       0       0       0       0
  4065 ;;Total ram usage:       55 bytes
  4066 ;; Hardware stack levels used:    1
  4067 ;; Hardware stack levels required when called:   10
  4068 ;; This function calls:
  4069 ;;		_UART_printf
  4070 ;;		_UART_write
  4071 ;;		_dameTemperaturaHumedad
  4072 ;;		_lecturaWifi
  4073 ;;		_sprintf
  4074 ;; This function is called by:
  4075 ;;		_sistemaPrincipal
  4076 ;; This function uses a non-reentrant model
  4077 ;;
  4078                           
  4079                           	psect	text12
  4080  00103E                     __ptext12:
  4081                           	opt callstack 0
  4082  00103E                     _mostrarDatosSensoresWIFI:
  4083                           	opt callstack 19
  4084  00103E                     
  4085                           ;main.c: 680:     char buffer[50];;main.c: 681:     unsigned char temperatura, humedad;;
      +                          main.c: 683:     lecturaWifi();
  4086  00103E  EC18  F009         	call	_lecturaWifi	;wreg free
  4087  001042                     
  4088                           ;main.c: 685:     UART_write('I');
  4089  001042  0E49               	movlw	73
  4090  001044  EC2B  F013         	call	_UART_write
  4091  001048                     
  4092                           ;main.c: 688:     if (peticionLecturaSensores) {
  4093  001048  0100               	movlb	0	; () banked
  4094  00104A  51EA               	movf	_peticionLecturaSensores& (0+255),w,b
  4095  00104C  B4D8               	btfsc	status,2,c
  4096  00104E  EF2B  F008         	goto	u2711
  4097  001052  EF2D  F008         	goto	u2710
  4098  001056                     u2711:
  4099  001056  EF68  F008         	goto	l3674
  4100  00105A                     u2710:
  4101  00105A                     
  4102                           ; BSR set to: 0
  4103                           ;main.c: 690:         for (int i = 0; i < 3; i++) {
  4104  00105A  0E00               	movlw	0
  4105  00105C  6FDF               	movwf	(mostrarDatosSensoresWIFI@i+1)& (0+255),b
  4106  00105E  0E00               	movlw	0
  4107  001060  6FDE               	movwf	mostrarDatosSensoresWIFI@i& (0+255),b
  4108  001062                     l3666:
  4109                           
  4110                           ; BSR set to: 0
  4111                           ;main.c: 692:             sprintf(buffer, "\r\n\nPorcentaje Humedad del sensor %d: %d %c
      +                          \r\n"
  4112  001062  0EAA               	movlw	low mostrarDatosSensoresWIFI@buffer
  4113  001064  6F60               	movwf	sprintf@s& (0+255),b
  4114  001066  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  4115  001068  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4116  00106A  0EE1               	movlw	low STR_32
  4117  00106C  6F62               	movwf	sprintf@fmt& (0+255),b
  4118  00106E  0E7C               	movlw	high STR_32
  4119  001070  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4120  001072  C0DE  F064         	movff	mostrarDatosSensoresWIFI@i,?_sprintf+4
  4121  001076  C0DF  F065         	movff	mostrarDatosSensoresWIFI@i+1,?_sprintf+5
  4122  00107A  90D8               	bcf	status,0,c
  4123  00107C  35DE               	rlcf	mostrarDatosSensoresWIFI@i& (0+255),w,b
  4124  00107E  6ED9               	movwf	fsr2l,c
  4125  001080  35DF               	rlcf	(mostrarDatosSensoresWIFI@i+1)& (0+255),w,b
  4126  001082  6EDA               	movwf	fsr2h,c
  4127  001084  0E60               	movlw	low _sensores
  4128  001086  26D9               	addwf	fsr2l,f,c
  4129  001088  0E01               	movlw	high _sensores
  4130  00108A  22DA               	addwfc	fsr2h,f,c
  4131  00108C  50DF               	movf	indf2,w,c
  4132  00108E  6E59               	movwf	??_mostrarDatosSensoresWIFI^0,c
  4133  001090  5059               	movf	??_mostrarDatosSensoresWIFI^0,w,c
  4134  001092  6F66               	movwf	(?_sprintf+6)& (0+255),b
  4135  001094  6B67               	clrf	(?_sprintf+7)& (0+255),b
  4136  001096  0E00               	movlw	0
  4137  001098  6F69               	movwf	(?_sprintf+9)& (0+255),b
  4138  00109A  0E25               	movlw	37
  4139  00109C  6F68               	movwf	(?_sprintf+8)& (0+255),b
  4140  00109E  EC1C  F011         	call	_sprintf	;wreg free
  4141  0010A2                     
  4142                           ;main.c: 694:             UART_printf(buffer);
  4143  0010A2  0EAA               	movlw	low mostrarDatosSensoresWIFI@buffer
  4144  0010A4  6E02               	movwf	UART_printf@cadena^0,c
  4145  0010A6  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  4146  0010A8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4147  0010AA  EC67  F010         	call	_UART_printf	;wreg free
  4148  0010AE                     
  4149                           ;main.c: 696:         }
  4150  0010AE  0100               	movlb	0	; () banked
  4151  0010B0  4BDE               	infsnz	mostrarDatosSensoresWIFI@i& (0+255),f,b
  4152  0010B2  2BDF               	incf	(mostrarDatosSensoresWIFI@i+1)& (0+255),f,b
  4153  0010B4                     
  4154                           ; BSR set to: 0
  4155  0010B4  BFDF               	btfsc	(mostrarDatosSensoresWIFI@i+1)& (0+255),7,b
  4156  0010B6  EF66  F008         	goto	u2721
  4157  0010BA  51DF               	movf	(mostrarDatosSensoresWIFI@i+1)& (0+255),w,b
  4158  0010BC  E109               	bnz	u2720
  4159  0010BE  0E03               	movlw	3
  4160  0010C0  5DDE               	subwf	mostrarDatosSensoresWIFI@i& (0+255),w,b
  4161  0010C2  A0D8               	btfss	status,0,c
  4162  0010C4  EF66  F008         	goto	u2721
  4163  0010C8  EF68  F008         	goto	u2720
  4164  0010CC                     u2721:
  4165  0010CC  EF31  F008         	goto	l3666
  4166  0010D0                     u2720:
  4167  0010D0                     l3674:
  4168                           
  4169                           ; BSR set to: 0
  4170                           ;main.c: 700:     dameTemperaturaHumedad(&humedad, &temperatura);
  4171  0010D0  0EDD               	movlw	low mostrarDatosSensoresWIFI@humedad
  4172  0010D2  6E04               	movwf	dameTemperaturaHumedad@Humedad^0,c
  4173  0010D4  0E00               	movlw	high mostrarDatosSensoresWIFI@humedad
  4174  0010D6  6E05               	movwf	(dameTemperaturaHumedad@Humedad+1)^0,c
  4175  0010D8  0EDC               	movlw	low mostrarDatosSensoresWIFI@temperatura
  4176  0010DA  6E06               	movwf	dameTemperaturaHumedad@Temperatura^0,c
  4177  0010DC  0E00               	movlw	high mostrarDatosSensoresWIFI@temperatura
  4178  0010DE  6E07               	movwf	(dameTemperaturaHumedad@Temperatura+1)^0,c
  4179  0010E0  EC75  F00C         	call	_dameTemperaturaHumedad	;wreg free
  4180                           
  4181                           ;main.c: 702:     sprintf(buffer, "\r\n\nLa Humedad Ambiente es: %d\r\n", humedad);
  4182  0010E4  0EAA               	movlw	low mostrarDatosSensoresWIFI@buffer
  4183  0010E6  0100               	movlb	0	; () banked
  4184  0010E8  6F60               	movwf	sprintf@s& (0+255),b
  4185  0010EA  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  4186  0010EC  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4187  0010EE  0E7F               	movlw	low STR_30
  4188  0010F0  6F62               	movwf	sprintf@fmt& (0+255),b
  4189  0010F2  0E7E               	movlw	high STR_30
  4190  0010F4  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4191  0010F6  C0DD  F064         	movff	mostrarDatosSensoresWIFI@humedad,?_sprintf+4
  4192  0010FA  6B65               	clrf	(?_sprintf+5)& (0+255),b
  4193  0010FC  EC1C  F011         	call	_sprintf	;wreg free
  4194  001100                     
  4195                           ;main.c: 703:     UART_printf(buffer);
  4196  001100  0EAA               	movlw	low mostrarDatosSensoresWIFI@buffer
  4197  001102  6E02               	movwf	UART_printf@cadena^0,c
  4198  001104  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  4199  001106  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4200  001108  EC67  F010         	call	_UART_printf	;wreg free
  4201  00110C                     
  4202                           ;main.c: 704:     sprintf(buffer, "\r\n\nLa Temperatura es: %d C\r\n", temperatura);
  4203  00110C  0EAA               	movlw	low mostrarDatosSensoresWIFI@buffer
  4204  00110E  0100               	movlb	0	; () banked
  4205  001110  6F60               	movwf	sprintf@s& (0+255),b
  4206  001112  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  4207  001114  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4208  001116  0EBE               	movlw	low STR_31
  4209  001118  6F62               	movwf	sprintf@fmt& (0+255),b
  4210  00111A  0E7E               	movlw	high STR_31
  4211  00111C  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4212  00111E  C0DC  F064         	movff	mostrarDatosSensoresWIFI@temperatura,?_sprintf+4
  4213  001122  6B65               	clrf	(?_sprintf+5)& (0+255),b
  4214  001124  EC1C  F011         	call	_sprintf	;wreg free
  4215                           
  4216                           ;main.c: 705:     UART_printf(buffer);
  4217  001128  0EAA               	movlw	low mostrarDatosSensoresWIFI@buffer
  4218  00112A  6E02               	movwf	UART_printf@cadena^0,c
  4219  00112C  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  4220  00112E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4221  001130  EC67  F010         	call	_UART_printf	;wreg free
  4222  001134                     
  4223                           ;main.c: 707:     UART_write('I');
  4224  001134  0E49               	movlw	73
  4225  001136  EC2B  F013         	call	_UART_write
  4226  00113A  0012               	return		;funcret
  4227  00113C                     __end_of_mostrarDatosSensoresWIFI:
  4228                           	opt callstack 0
  4229                           
  4230 ;; *************** function _lecturaWifi *****************
  4231 ;; Defined at:
  4232 ;;		line 429 in file "main.c"
  4233 ;; Parameters:    Size  Location     Type
  4234 ;;		None
  4235 ;; Auto vars:     Size  Location     Type
  4236 ;;  i               2   72[BANK0 ] int 
  4237 ;;  buffer         50   20[BANK0 ] unsigned char [50]
  4238 ;;  humedadMedid    1   71[BANK0 ] unsigned char 
  4239 ;;  Rx              1   70[BANK0 ] unsigned char 
  4240 ;; Return value:  Size  Location     Type
  4241 ;;                  1    wreg      void 
  4242 ;; Registers used:
  4243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4244 ;; Tracked objects:
  4245 ;;		On entry : 0/0
  4246 ;;		On exit  : 0/0
  4247 ;;		Unchanged: 0/0
  4248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4249 ;;      Params:         0       0       0       0       0       0       0       0       0
  4250 ;;      Locals:         0      54       0       0       0       0       0       0       0
  4251 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4252 ;;      Totals:         0      54       0       0       0       0       0       0       0
  4253 ;;Total ram usage:       54 bytes
  4254 ;; Hardware stack levels used:    1
  4255 ;; Hardware stack levels required when called:    9
  4256 ;; This function calls:
  4257 ;;		_UART_printf
  4258 ;;		_UART_read
  4259 ;;		_UART_write
  4260 ;;		_getValue
  4261 ;;		_restablecerDatosSensor
  4262 ;;		_sprintf
  4263 ;; This function is called by:
  4264 ;;		_sistemaRegado
  4265 ;;		_mostrarDatosSensoresWIFI
  4266 ;; This function uses a non-reentrant model
  4267 ;;
  4268                           
  4269                           	psect	text13
  4270  001230                     __ptext13:
  4271                           	opt callstack 0
  4272  001230                     _lecturaWifi:
  4273                           	opt callstack 20
  4274  001230                     
  4275                           ;main.c: 431:     PIE1bits.RCIE = 0;
  4276  001230  9A9D               	bcf	157,5,c	;volatile
  4277  001232                     
  4278                           ;main.c: 434:     char buffer[50];;main.c: 436:     restablecerDatosSensor();
  4279  001232  EC6D  F011         	call	_restablecerDatosSensor	;wreg free
  4280  001236                     
  4281                           ;main.c: 438:     UART_write('R');
  4282  001236  0E52               	movlw	82
  4283  001238  EC2B  F013         	call	_UART_write
  4284  00123C                     
  4285                           ;main.c: 440:     UART_printf("\r\nSolicitando Muestreo de sensores\r\n\n");
  4286  00123C  0E63               	movlw	low STR_13
  4287  00123E  6E02               	movwf	UART_printf@cadena^0,c
  4288  001240  0E7D               	movlw	high STR_13
  4289  001242  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4290  001244  EC67  F010         	call	_UART_printf	;wreg free
  4291  001248                     
  4292                           ;main.c: 442:     Rx = UART_read();
  4293  001248  ECF2  F010         	call	_UART_read	;wreg free
  4294  00124C  0100               	movlb	0	; () banked
  4295  00124E  6FA6               	movwf	lecturaWifi@Rx& (0+255),b
  4296  001250                     
  4297                           ; BSR set to: 0
  4298                           ;main.c: 444:     if (Rx == 'O') {
  4299  001250  0E4F               	movlw	79
  4300  001252  19A6               	xorwf	lecturaWifi@Rx& (0+255),w,b
  4301  001254  A4D8               	btfss	status,2,c
  4302  001256  EF2F  F009         	goto	u2481
  4303  00125A  EF31  F009         	goto	u2480
  4304  00125E                     u2481:
  4305  00125E  EF8C  F009         	goto	l3470
  4306  001262                     u2480:
  4307  001262                     
  4308                           ; BSR set to: 0
  4309                           ;main.c: 446:         peticionLecturaSensores = 1;
  4310  001262  0E01               	movlw	1
  4311  001264  6FEA               	movwf	_peticionLecturaSensores& (0+255),b
  4312                           
  4313                           ;main.c: 448:         for (int i = 0; i < 3; i++) {
  4314  001266  0E00               	movlw	0
  4315  001268  6FA9               	movwf	(lecturaWifi@i+1)& (0+255),b
  4316  00126A  0E00               	movlw	0
  4317  00126C  6FA8               	movwf	lecturaWifi@i& (0+255),b
  4318  00126E                     l3452:
  4319                           
  4320                           ; BSR set to: 0
  4321                           ;main.c: 450:             sprintf(buffer, "\r\nIngrese el porcentaje de humedad del sens
      +                          or %d\r\n", i);
  4322  00126E  0E74               	movlw	low lecturaWifi@buffer
  4323  001270  6F60               	movwf	sprintf@s& (0+255),b
  4324  001272  0E00               	movlw	high lecturaWifi@buffer
  4325  001274  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4326  001276  0E4B               	movlw	low STR_14
  4327  001278  6F62               	movwf	sprintf@fmt& (0+255),b
  4328  00127A  0E7C               	movlw	high STR_14
  4329  00127C  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4330  00127E  C0A8  F064         	movff	lecturaWifi@i,?_sprintf+4
  4331  001282  C0A9  F065         	movff	lecturaWifi@i+1,?_sprintf+5
  4332  001286  EC1C  F011         	call	_sprintf	;wreg free
  4333  00128A                     
  4334                           ;main.c: 451:             UART_printf(buffer);
  4335  00128A  0E74               	movlw	low lecturaWifi@buffer
  4336  00128C  6E02               	movwf	UART_printf@cadena^0,c
  4337  00128E  0E00               	movlw	high lecturaWifi@buffer
  4338  001290  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4339  001292  EC67  F010         	call	_UART_printf	;wreg free
  4340  001296                     
  4341                           ;main.c: 453:             humedadMedida = getValue(3);
  4342  001296  0E00               	movlw	0
  4343  001298  6E05               	movwf	(getValue@numCharacters+1)^0,c
  4344  00129A  0E03               	movlw	3
  4345  00129C  6E04               	movwf	getValue@numCharacters^0,c
  4346  00129E  ECC4  F003         	call	_getValue	;wreg free
  4347  0012A2  0100               	movlb	0	; () banked
  4348  0012A4  6FA7               	movwf	lecturaWifi@humedadMedida& (0+255),b
  4349  0012A6                     
  4350                           ; BSR set to: 0
  4351                           ;main.c: 455:             if (humedadMedida != 'F')
  4352  0012A6  0E46               	movlw	70
  4353  0012A8  19A7               	xorwf	lecturaWifi@humedadMedida& (0+255),w,b
  4354  0012AA  B4D8               	btfsc	status,2,c
  4355  0012AC  EF5A  F009         	goto	u2491
  4356  0012B0  EF5C  F009         	goto	u2490
  4357  0012B4                     u2491:
  4358  0012B4  EF69  F009         	goto	l3462
  4359  0012B8                     u2490:
  4360  0012B8                     
  4361                           ; BSR set to: 0
  4362                           ;main.c: 456:                 sensores[i].porcientoHumedad = humedadMedida;
  4363  0012B8  90D8               	bcf	status,0,c
  4364  0012BA  35A8               	rlcf	lecturaWifi@i& (0+255),w,b
  4365  0012BC  6ED9               	movwf	fsr2l,c
  4366  0012BE  35A9               	rlcf	(lecturaWifi@i+1)& (0+255),w,b
  4367  0012C0  6EDA               	movwf	fsr2h,c
  4368  0012C2  0E60               	movlw	low _sensores
  4369  0012C4  26D9               	addwf	fsr2l,f,c
  4370  0012C6  0E01               	movlw	high _sensores
  4371  0012C8  22DA               	addwfc	fsr2h,f,c
  4372  0012CA  C0A7  FFDF         	movff	lecturaWifi@humedadMedida,indf2
  4373  0012CE  EF74  F009         	goto	l3464
  4374  0012D2                     l3462:
  4375                           
  4376                           ; BSR set to: 0
  4377                           ;main.c: 458:                 sensores[i].porcientoHumedad = 100;
  4378  0012D2  90D8               	bcf	status,0,c
  4379  0012D4  35A8               	rlcf	lecturaWifi@i& (0+255),w,b
  4380  0012D6  6ED9               	movwf	fsr2l,c
  4381  0012D8  35A9               	rlcf	(lecturaWifi@i+1)& (0+255),w,b
  4382  0012DA  6EDA               	movwf	fsr2h,c
  4383  0012DC  0E60               	movlw	low _sensores
  4384  0012DE  26D9               	addwf	fsr2l,f,c
  4385  0012E0  0E01               	movlw	high _sensores
  4386  0012E2  22DA               	addwfc	fsr2h,f,c
  4387  0012E4  0E64               	movlw	100
  4388  0012E6  6EDF               	movwf	indf2,c
  4389  0012E8                     l3464:
  4390                           
  4391                           ; BSR set to: 0
  4392                           ;main.c: 460:         }
  4393  0012E8  4BA8               	infsnz	lecturaWifi@i& (0+255),f,b
  4394  0012EA  2BA9               	incf	(lecturaWifi@i+1)& (0+255),f,b
  4395  0012EC                     
  4396                           ; BSR set to: 0
  4397  0012EC  BFA9               	btfsc	(lecturaWifi@i+1)& (0+255),7,b
  4398  0012EE  EF82  F009         	goto	u2501
  4399  0012F2  51A9               	movf	(lecturaWifi@i+1)& (0+255),w,b
  4400  0012F4  E109               	bnz	u2500
  4401  0012F6  0E03               	movlw	3
  4402  0012F8  5DA8               	subwf	lecturaWifi@i& (0+255),w,b
  4403  0012FA  A0D8               	btfss	status,0,c
  4404  0012FC  EF82  F009         	goto	u2501
  4405  001300  EF84  F009         	goto	u2500
  4406  001304                     u2501:
  4407  001304  EF37  F009         	goto	l3452
  4408  001308                     u2500:
  4409  001308                     
  4410                           ; BSR set to: 0
  4411                           ;main.c: 462:         UART_printf("\r\nSensores Leidos con Exito!\r\n\n");
  4412  001308  0E3F               	movlw	low STR_15
  4413  00130A  6E02               	movwf	UART_printf@cadena^0,c
  4414  00130C  0E7E               	movlw	high STR_15
  4415  00130E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4416  001310  EC67  F010         	call	_UART_printf	;wreg free
  4417                           
  4418                           ;main.c: 464:     } else {
  4419  001314  EF8E  F009         	goto	l3472
  4420  001318                     l3470:
  4421                           
  4422                           ; BSR set to: 0
  4423                           ;main.c: 465:         peticionLecturaSensores = 0;
  4424  001318  0E00               	movlw	0
  4425  00131A  6FEA               	movwf	_peticionLecturaSensores& (0+255),b
  4426  00131C                     l3472:
  4427                           
  4428                           ;main.c: 468:     PIE1bits.RCIE = 1;
  4429  00131C  8A9D               	bsf	157,5,c	;volatile
  4430  00131E  0012               	return		;funcret
  4431  001320                     __end_of_lecturaWifi:
  4432                           	opt callstack 0
  4433                           
  4434 ;; *************** function _restablecerDatosSensor *****************
  4435 ;; Defined at:
  4436 ;;		line 424 in file "main.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;		None
  4439 ;; Auto vars:     Size  Location     Type
  4440 ;;  i               2    4[COMRAM] int 
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  1    wreg      void 
  4443 ;; Registers used:
  4444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4445 ;; Tracked objects:
  4446 ;;		On entry : 0/0
  4447 ;;		On exit  : 0/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4450 ;;      Params:         0       0       0       0       0       0       0       0       0
  4451 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4452 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4453 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4454 ;;Total ram usage:        2 bytes
  4455 ;; Hardware stack levels used:    1
  4456 ;; Hardware stack levels required when called:    2
  4457 ;; This function calls:
  4458 ;;		_constructorSensor
  4459 ;; This function is called by:
  4460 ;;		_lecturaWifi
  4461 ;;		_main
  4462 ;; This function uses a non-reentrant model
  4463 ;;
  4464                           
  4465                           	psect	text14
  4466  0022DA                     __ptext14:
  4467                           	opt callstack 0
  4468  0022DA                     _restablecerDatosSensor:
  4469                           	opt callstack 26
  4470  0022DA                     
  4471                           ;main.c: 425:     for (int i = 0; i < 3; i++)
  4472  0022DA  0E00               	movlw	0
  4473  0022DC  6E06               	movwf	(restablecerDatosSensor@i+1)^0,c
  4474  0022DE  0E00               	movlw	0
  4475  0022E0  6E05               	movwf	restablecerDatosSensor@i^0,c
  4476  0022E2                     l3270:
  4477                           
  4478                           ;main.c: 426:         constructorSensor(sensores[i], 0, i);
  4479  0022E2  90D8               	bcf	status,0,c
  4480  0022E4  3405               	rlcf	restablecerDatosSensor@i^0,w,c
  4481  0022E6  6ED9               	movwf	fsr2l,c
  4482  0022E8  3406               	rlcf	(restablecerDatosSensor@i+1)^0,w,c
  4483  0022EA  6EDA               	movwf	fsr2h,c
  4484  0022EC  0E60               	movlw	low _sensores
  4485  0022EE  26D9               	addwf	fsr2l,f,c
  4486  0022F0  0E01               	movlw	high _sensores
  4487  0022F2  22DA               	addwfc	fsr2h,f,c
  4488  0022F4  CFDE F001          	movff	postinc2,constructorSensor@s
  4489  0022F8  CFDD F002          	movff	postdec2,constructorSensor@s+1
  4490  0022FC  0E00               	movlw	0
  4491  0022FE  6E03               	movwf	constructorSensor@porcientoHumedad^0,c
  4492  002300  C005  F004         	movff	restablecerDatosSensor@i,constructorSensor@pin
  4493  002304  EC47  F013         	call	_constructorSensor	;wreg free
  4494  002308  4A05               	infsnz	restablecerDatosSensor@i^0,f,c
  4495  00230A  2A06               	incf	(restablecerDatosSensor@i+1)^0,f,c
  4496  00230C  BE06               	btfsc	(restablecerDatosSensor@i+1)^0,7,c
  4497  00230E  EF92  F011         	goto	u2311
  4498  002312  5006               	movf	(restablecerDatosSensor@i+1)^0,w,c
  4499  002314  E109               	bnz	u2310
  4500  002316  0E03               	movlw	3
  4501  002318  5C05               	subwf	restablecerDatosSensor@i^0,w,c
  4502  00231A  A0D8               	btfss	status,0,c
  4503  00231C  EF92  F011         	goto	u2311
  4504  002320  EF94  F011         	goto	u2310
  4505  002324                     u2311:
  4506  002324  EF71  F011         	goto	l3270
  4507  002328                     u2310:
  4508  002328  0012               	return		;funcret
  4509  00232A                     __end_of_restablecerDatosSensor:
  4510                           	opt callstack 0
  4511                           
  4512 ;; *************** function _constructorSensor *****************
  4513 ;; Defined at:
  4514 ;;		line 128 in file "main.c"
  4515 ;; Parameters:    Size  Location     Type
  4516 ;;  s               2    0[COMRAM] struct .
  4517 ;;  porcientoHum    1    2[COMRAM] unsigned char 
  4518 ;;  pin             1    3[COMRAM] unsigned char 
  4519 ;; Auto vars:     Size  Location     Type
  4520 ;;		None
  4521 ;; Return value:  Size  Location     Type
  4522 ;;                  1    wreg      void 
  4523 ;; Registers used:
  4524 ;;		None
  4525 ;; Tracked objects:
  4526 ;;		On entry : 0/0
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4530 ;;      Params:         4       0       0       0       0       0       0       0       0
  4531 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4532 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4533 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4534 ;;Total ram usage:        4 bytes
  4535 ;; Hardware stack levels used:    1
  4536 ;; Hardware stack levels required when called:    1
  4537 ;; This function calls:
  4538 ;;		Nothing
  4539 ;; This function is called by:
  4540 ;;		_restablecerDatosSensor
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           	psect	text15
  4545  00268E                     __ptext15:
  4546                           	opt callstack 0
  4547  00268E                     _constructorSensor:
  4548                           	opt callstack 26
  4549  00268E                     
  4550                           ;main.c: 129:     s.porcientoHumedad = porcientoHumedad;
  4551  00268E  C003  F001         	movff	constructorSensor@porcientoHumedad,constructorSensor@s
  4552                           
  4553                           ;main.c: 130:     s.pinSensor = pin;
  4554  002692  C004  F002         	movff	constructorSensor@pin,constructorSensor@s+1
  4555  002696  0012               	return		;funcret
  4556  002698                     __end_of_constructorSensor:
  4557                           	opt callstack 0
  4558                           
  4559 ;; *************** function _mostrarDatosSensores *****************
  4560 ;; Defined at:
  4561 ;;		line 648 in file "main.c"
  4562 ;; Parameters:    Size  Location     Type
  4563 ;;		None
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;  i               2   72[BANK0 ] int 
  4566 ;;  buffer         50   20[BANK0 ] unsigned char [50]
  4567 ;;  humedad         1   71[BANK0 ] unsigned char 
  4568 ;;  temperatura     1   70[BANK0 ] unsigned char 
  4569 ;; Return value:  Size  Location     Type
  4570 ;;                  1    wreg      void 
  4571 ;; Registers used:
  4572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4573 ;; Tracked objects:
  4574 ;;		On entry : 0/0
  4575 ;;		On exit  : 0/0
  4576 ;;		Unchanged: 0/0
  4577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4578 ;;      Params:         0       0       0       0       0       0       0       0       0
  4579 ;;      Locals:         0      54       0       0       0       0       0       0       0
  4580 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4581 ;;      Totals:         1      54       0       0       0       0       0       0       0
  4582 ;;Total ram usage:       55 bytes
  4583 ;; Hardware stack levels used:    1
  4584 ;; Hardware stack levels required when called:    9
  4585 ;; This function calls:
  4586 ;;		_UART_printf
  4587 ;;		_UART_write
  4588 ;;		_dameTemperaturaHumedad
  4589 ;;		_lecturaAnalogaSensores
  4590 ;;		_sprintf
  4591 ;; This function is called by:
  4592 ;;		_sistemaPrincipal
  4593 ;; This function uses a non-reentrant model
  4594 ;;
  4595                           
  4596                           	psect	text16
  4597  001320                     __ptext16:
  4598                           	opt callstack 0
  4599  001320                     _mostrarDatosSensores:
  4600                           	opt callstack 20
  4601  001320                     
  4602                           ;main.c: 650:     char buffer[50];;main.c: 651:     unsigned char temperatura, humedad;;
      +                          main.c: 653:     dameTemperaturaHumedad(&humedad, &temperatura);
  4603  001320  0EA7               	movlw	low mostrarDatosSensores@humedad
  4604  001322  6E04               	movwf	dameTemperaturaHumedad@Humedad^0,c
  4605  001324  0E00               	movlw	high mostrarDatosSensores@humedad
  4606  001326  6E05               	movwf	(dameTemperaturaHumedad@Humedad+1)^0,c
  4607  001328  0EA6               	movlw	low mostrarDatosSensores@temperatura
  4608  00132A  6E06               	movwf	dameTemperaturaHumedad@Temperatura^0,c
  4609  00132C  0E00               	movlw	high mostrarDatosSensores@temperatura
  4610  00132E  6E07               	movwf	(dameTemperaturaHumedad@Temperatura+1)^0,c
  4611  001330  EC75  F00C         	call	_dameTemperaturaHumedad	;wreg free
  4612  001334                     
  4613                           ;main.c: 655:     UART_write('I');
  4614  001334  0E49               	movlw	73
  4615  001336  EC2B  F013         	call	_UART_write
  4616  00133A                     
  4617                           ;main.c: 658:     sprintf(buffer, "\r\n\nLa Humedad Ambiente es: %d\r\n", humedad);
  4618  00133A  0E74               	movlw	low mostrarDatosSensores@buffer
  4619  00133C  0100               	movlb	0	; () banked
  4620  00133E  6F60               	movwf	sprintf@s& (0+255),b
  4621  001340  0E00               	movlw	high mostrarDatosSensores@buffer
  4622  001342  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4623  001344  0E7F               	movlw	low STR_30
  4624  001346  6F62               	movwf	sprintf@fmt& (0+255),b
  4625  001348  0E7E               	movlw	high STR_30
  4626  00134A  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4627  00134C  C0A7  F064         	movff	mostrarDatosSensores@humedad,?_sprintf+4
  4628  001350  6B65               	clrf	(?_sprintf+5)& (0+255),b
  4629  001352  EC1C  F011         	call	_sprintf	;wreg free
  4630  001356                     
  4631                           ;main.c: 659:     UART_printf(buffer);
  4632  001356  0E74               	movlw	low mostrarDatosSensores@buffer
  4633  001358  6E02               	movwf	UART_printf@cadena^0,c
  4634  00135A  0E00               	movlw	high mostrarDatosSensores@buffer
  4635  00135C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4636  00135E  EC67  F010         	call	_UART_printf	;wreg free
  4637  001362                     
  4638                           ;main.c: 660:     sprintf(buffer, "\r\n\nLa Temperatura es: %d C\r\n", temperatura);
  4639  001362  0E74               	movlw	low mostrarDatosSensores@buffer
  4640  001364  0100               	movlb	0	; () banked
  4641  001366  6F60               	movwf	sprintf@s& (0+255),b
  4642  001368  0E00               	movlw	high mostrarDatosSensores@buffer
  4643  00136A  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4644  00136C  0EBE               	movlw	low STR_31
  4645  00136E  6F62               	movwf	sprintf@fmt& (0+255),b
  4646  001370  0E7E               	movlw	high STR_31
  4647  001372  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4648  001374  C0A6  F064         	movff	mostrarDatosSensores@temperatura,?_sprintf+4
  4649  001378  6B65               	clrf	(?_sprintf+5)& (0+255),b
  4650  00137A  EC1C  F011         	call	_sprintf	;wreg free
  4651  00137E                     
  4652                           ;main.c: 661:     UART_printf(buffer);
  4653  00137E  0E74               	movlw	low mostrarDatosSensores@buffer
  4654  001380  6E02               	movwf	UART_printf@cadena^0,c
  4655  001382  0E00               	movlw	high mostrarDatosSensores@buffer
  4656  001384  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4657  001386  EC67  F010         	call	_UART_printf	;wreg free
  4658  00138A                     
  4659                           ;main.c: 663:     lecturaAnalogaSensores();
  4660  00138A  EC80  F00D         	call	_lecturaAnalogaSensores	;wreg free
  4661  00138E                     
  4662                           ;main.c: 666:     for (int i = 0; i < 3; i++) {
  4663  00138E  0E00               	movlw	0
  4664  001390  0100               	movlb	0	; () banked
  4665  001392  6FA9               	movwf	(mostrarDatosSensores@i+1)& (0+255),b
  4666  001394  0E00               	movlw	0
  4667  001396  6FA8               	movwf	mostrarDatosSensores@i& (0+255),b
  4668  001398                     l3702:
  4669                           
  4670                           ; BSR set to: 0
  4671                           ;main.c: 668:         sprintf(buffer, "\r\n\nPorcentaje Humedad del sensor %d: %d %c\r\n
      +                          "
  4672  001398  0E74               	movlw	low mostrarDatosSensores@buffer
  4673  00139A  6F60               	movwf	sprintf@s& (0+255),b
  4674  00139C  0E00               	movlw	high mostrarDatosSensores@buffer
  4675  00139E  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4676  0013A0  0EE1               	movlw	low STR_32
  4677  0013A2  6F62               	movwf	sprintf@fmt& (0+255),b
  4678  0013A4  0E7C               	movlw	high STR_32
  4679  0013A6  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4680  0013A8  C0A8  F064         	movff	mostrarDatosSensores@i,?_sprintf+4
  4681  0013AC  C0A9  F065         	movff	mostrarDatosSensores@i+1,?_sprintf+5
  4682  0013B0  90D8               	bcf	status,0,c
  4683  0013B2  35A8               	rlcf	mostrarDatosSensores@i& (0+255),w,b
  4684  0013B4  6ED9               	movwf	fsr2l,c
  4685  0013B6  35A9               	rlcf	(mostrarDatosSensores@i+1)& (0+255),w,b
  4686  0013B8  6EDA               	movwf	fsr2h,c
  4687  0013BA  0E60               	movlw	low _sensores
  4688  0013BC  26D9               	addwf	fsr2l,f,c
  4689  0013BE  0E01               	movlw	high _sensores
  4690  0013C0  22DA               	addwfc	fsr2h,f,c
  4691  0013C2  50DF               	movf	indf2,w,c
  4692  0013C4  6E59               	movwf	??_mostrarDatosSensores^0,c
  4693  0013C6  5059               	movf	??_mostrarDatosSensores^0,w,c
  4694  0013C8  6F66               	movwf	(?_sprintf+6)& (0+255),b
  4695  0013CA  6B67               	clrf	(?_sprintf+7)& (0+255),b
  4696  0013CC  0E00               	movlw	0
  4697  0013CE  6F69               	movwf	(?_sprintf+9)& (0+255),b
  4698  0013D0  0E25               	movlw	37
  4699  0013D2  6F68               	movwf	(?_sprintf+8)& (0+255),b
  4700  0013D4  EC1C  F011         	call	_sprintf	;wreg free
  4701  0013D8                     
  4702                           ;main.c: 670:         UART_printf(buffer);
  4703  0013D8  0E74               	movlw	low mostrarDatosSensores@buffer
  4704  0013DA  6E02               	movwf	UART_printf@cadena^0,c
  4705  0013DC  0E00               	movlw	high mostrarDatosSensores@buffer
  4706  0013DE  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4707  0013E0  EC67  F010         	call	_UART_printf	;wreg free
  4708  0013E4                     
  4709                           ;main.c: 671:     }
  4710  0013E4  0100               	movlb	0	; () banked
  4711  0013E6  4BA8               	infsnz	mostrarDatosSensores@i& (0+255),f,b
  4712  0013E8  2BA9               	incf	(mostrarDatosSensores@i+1)& (0+255),f,b
  4713  0013EA                     
  4714                           ; BSR set to: 0
  4715  0013EA  BFA9               	btfsc	(mostrarDatosSensores@i+1)& (0+255),7,b
  4716  0013EC  EF01  F00A         	goto	u2731
  4717  0013F0  51A9               	movf	(mostrarDatosSensores@i+1)& (0+255),w,b
  4718  0013F2  E109               	bnz	u2730
  4719  0013F4  0E03               	movlw	3
  4720  0013F6  5DA8               	subwf	mostrarDatosSensores@i& (0+255),w,b
  4721  0013F8  A0D8               	btfss	status,0,c
  4722  0013FA  EF01  F00A         	goto	u2731
  4723  0013FE  EF03  F00A         	goto	u2730
  4724  001402                     u2731:
  4725  001402  EFCC  F009         	goto	l3702
  4726  001406                     u2730:
  4727  001406                     
  4728                           ; BSR set to: 0
  4729                           ;main.c: 673:     UART_write('I');
  4730  001406  0E49               	movlw	73
  4731  001408  EC2B  F013         	call	_UART_write
  4732  00140C  0012               	return		;funcret
  4733  00140E                     __end_of_mostrarDatosSensores:
  4734                           	opt callstack 0
  4735                           
  4736 ;; *************** function _lecturaAnalogaSensores *****************
  4737 ;; Defined at:
  4738 ;;		line 472 in file "main.c"
  4739 ;; Parameters:    Size  Location     Type
  4740 ;;		None
  4741 ;; Auto vars:     Size  Location     Type
  4742 ;;  i               2   47[COMRAM] int 
  4743 ;; Return value:  Size  Location     Type
  4744 ;;                  1    wreg      void 
  4745 ;; Registers used:
  4746 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4747 ;; Tracked objects:
  4748 ;;		On entry : 0/0
  4749 ;;		On exit  : 0/0
  4750 ;;		Unchanged: 0/0
  4751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4752 ;;      Params:         0       0       0       0       0       0       0       0       0
  4753 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4754 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4755 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4756 ;;Total ram usage:        3 bytes
  4757 ;; Hardware stack levels used:    1
  4758 ;; Hardware stack levels required when called:    3
  4759 ;; This function calls:
  4760 ;;		_dameHumedadSuelo
  4761 ;;		_map
  4762 ;; This function is called by:
  4763 ;;		_sistemaRegado
  4764 ;;		_mostrarDatosSensores
  4765 ;; This function uses a non-reentrant model
  4766 ;;
  4767                           
  4768                           	psect	text17
  4769  001B00                     __ptext17:
  4770                           	opt callstack 0
  4771  001B00                     _lecturaAnalogaSensores:
  4772                           	opt callstack 26
  4773  001B00                     
  4774                           ;main.c: 474:     for (int i = 0; i < 3; i++) {
  4775  001B00  0E00               	movlw	0
  4776  001B02  6E31               	movwf	(lecturaAnalogaSensores@i+1)^0,c
  4777  001B04  0E00               	movlw	0
  4778  001B06  6E30               	movwf	lecturaAnalogaSensores@i^0,c
  4779  001B08                     l3480:
  4780                           
  4781                           ;main.c: 475:         sensores[i].porcientoHumedad = map(dameHumedadSuelo(i), 0, 1023, 1
      +                          00, 0);
  4782  001B08  90D8               	bcf	status,0,c
  4783  001B0A  3430               	rlcf	lecturaAnalogaSensores@i^0,w,c
  4784  001B0C  6ED9               	movwf	fsr2l,c
  4785  001B0E  3431               	rlcf	(lecturaAnalogaSensores@i+1)^0,w,c
  4786  001B10  6EDA               	movwf	fsr2h,c
  4787  001B12  0E60               	movlw	low _sensores
  4788  001B14  26D9               	addwf	fsr2l,f,c
  4789  001B16  0E01               	movlw	high _sensores
  4790  001B18  22DA               	addwfc	fsr2h,f,c
  4791  001B1A  5030               	movf	lecturaAnalogaSensores@i^0,w,c
  4792  001B1C  ECBA  F011         	call	_dameHumedadSuelo
  4793  001B20  C001  F01B         	movff	?_dameHumedadSuelo,map@x
  4794  001B24  C002  F01C         	movff	?_dameHumedadSuelo+1,map@x+1
  4795  001B28  0E00               	movlw	0
  4796  001B2A  BE1C               	btfsc	(map@x+1)^0,7,c
  4797  001B2C  0EFF               	movlw	-1
  4798  001B2E  6E1D               	movwf	(map@x+2)^0,c
  4799  001B30  6E1E               	movwf	(map@x+3)^0,c
  4800  001B32  0E00               	movlw	0
  4801  001B34  6E1F               	movwf	map@in_min^0,c
  4802  001B36  0E00               	movlw	0
  4803  001B38  6E20               	movwf	(map@in_min+1)^0,c
  4804  001B3A  0E00               	movlw	0
  4805  001B3C  6E21               	movwf	(map@in_min+2)^0,c
  4806  001B3E  0E00               	movlw	0
  4807  001B40  6E22               	movwf	(map@in_min+3)^0,c
  4808  001B42  0EFF               	movlw	255
  4809  001B44  6E23               	movwf	map@in_max^0,c
  4810  001B46  0E03               	movlw	3
  4811  001B48  6E24               	movwf	(map@in_max+1)^0,c
  4812  001B4A  0E00               	movlw	0
  4813  001B4C  6E25               	movwf	(map@in_max+2)^0,c
  4814  001B4E  0E00               	movlw	0
  4815  001B50  6E26               	movwf	(map@in_max+3)^0,c
  4816  001B52  0E64               	movlw	100
  4817  001B54  6E27               	movwf	map@out_min^0,c
  4818  001B56  0E00               	movlw	0
  4819  001B58  6E28               	movwf	(map@out_min+1)^0,c
  4820  001B5A  0E00               	movlw	0
  4821  001B5C  6E29               	movwf	(map@out_min+2)^0,c
  4822  001B5E  0E00               	movlw	0
  4823  001B60  6E2A               	movwf	(map@out_min+3)^0,c
  4824  001B62  0E00               	movlw	0
  4825  001B64  6E2B               	movwf	map@out_max^0,c
  4826  001B66  0E00               	movlw	0
  4827  001B68  6E2C               	movwf	(map@out_max+1)^0,c
  4828  001B6A  0E00               	movlw	0
  4829  001B6C  6E2D               	movwf	(map@out_max+2)^0,c
  4830  001B6E  0E00               	movlw	0
  4831  001B70  6E2E               	movwf	(map@out_max+3)^0,c
  4832  001B72  ECB8  F00E         	call	_map	;wreg free
  4833  001B76  501B               	movf	?_map^0,w,c
  4834  001B78  6EDF               	movwf	indf2,c
  4835  001B7A                     
  4836                           ;main.c: 476:         _delay((unsigned long)((5)*(4000000/4000.0)));
  4837  001B7A  0E07               	movlw	7
  4838  001B7C  6E2F               	movwf	??_lecturaAnalogaSensores^0,c
  4839  001B7E  0E7D               	movlw	125
  4840  001B80                     u2977:
  4841  001B80  2EE8               	decfsz	wreg,f,c
  4842  001B82  D7FE               	bra	u2977
  4843  001B84  2E2F               	decfsz	??_lecturaAnalogaSensores^0,f,c
  4844  001B86  D7FC               	bra	u2977
  4845  001B88  F000               	nop	
  4846  001B8A                     
  4847                           ;main.c: 477:     }
  4848  001B8A  4A30               	infsnz	lecturaAnalogaSensores@i^0,f,c
  4849  001B8C  2A31               	incf	(lecturaAnalogaSensores@i+1)^0,f,c
  4850  001B8E  BE31               	btfsc	(lecturaAnalogaSensores@i+1)^0,7,c
  4851  001B90  EFD3  F00D         	goto	u2511
  4852  001B94  5031               	movf	(lecturaAnalogaSensores@i+1)^0,w,c
  4853  001B96  E109               	bnz	u2510
  4854  001B98  0E03               	movlw	3
  4855  001B9A  5C30               	subwf	lecturaAnalogaSensores@i^0,w,c
  4856  001B9C  A0D8               	btfss	status,0,c
  4857  001B9E  EFD3  F00D         	goto	u2511
  4858  001BA2  EFD5  F00D         	goto	u2510
  4859  001BA6                     u2511:
  4860  001BA6  EF84  F00D         	goto	l3480
  4861  001BAA                     u2510:
  4862  001BAA  0012               	return		;funcret
  4863  001BAC                     __end_of_lecturaAnalogaSensores:
  4864                           	opt callstack 0
  4865                           
  4866 ;; *************** function _map *****************
  4867 ;; Defined at:
  4868 ;;		line 124 in file "main.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;  x               4   26[COMRAM] long 
  4871 ;;  in_min          4   30[COMRAM] long 
  4872 ;;  in_max          4   34[COMRAM] long 
  4873 ;;  out_min         4   38[COMRAM] long 
  4874 ;;  out_max         4   42[COMRAM] long 
  4875 ;; Auto vars:     Size  Location     Type
  4876 ;;		None
  4877 ;; Return value:  Size  Location     Type
  4878 ;;                  4   26[COMRAM] long 
  4879 ;; Registers used:
  4880 ;;		wreg, status,2, status,0, cstack
  4881 ;; Tracked objects:
  4882 ;;		On entry : 0/0
  4883 ;;		On exit  : 0/0
  4884 ;;		Unchanged: 0/0
  4885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4886 ;;      Params:        20       0       0       0       0       0       0       0       0
  4887 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4888 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4889 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4890 ;;Total ram usage:       20 bytes
  4891 ;; Hardware stack levels used:    1
  4892 ;; Hardware stack levels required when called:    2
  4893 ;; This function calls:
  4894 ;;		___aldiv
  4895 ;;		___lmul
  4896 ;; This function is called by:
  4897 ;;		_lecturaAnalogaSensores
  4898 ;; This function uses a non-reentrant model
  4899 ;;
  4900                           
  4901                           	psect	text18
  4902  001D70                     __ptext18:
  4903                           	opt callstack 0
  4904  001D70                     _map:
  4905                           	opt callstack 26
  4906  001D70                     
  4907                           ;main.c: 125:     return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_mi
      +                          n;
  4908  001D70  501F               	movf	map@in_min^0,w,c
  4909  001D72  5C1B               	subwf	map@x^0,w,c
  4910  001D74  6E01               	movwf	___lmul@multiplier^0,c
  4911  001D76  5020               	movf	(map@in_min+1)^0,w,c
  4912  001D78  581C               	subwfb	(map@x+1)^0,w,c
  4913  001D7A  6E02               	movwf	(___lmul@multiplier+1)^0,c
  4914  001D7C  5021               	movf	(map@in_min+2)^0,w,c
  4915  001D7E  581D               	subwfb	(map@x+2)^0,w,c
  4916  001D80  6E03               	movwf	(___lmul@multiplier+2)^0,c
  4917  001D82  5022               	movf	(map@in_min+3)^0,w,c
  4918  001D84  581E               	subwfb	(map@x+3)^0,w,c
  4919  001D86  6E04               	movwf	(___lmul@multiplier+3)^0,c
  4920  001D88  5027               	movf	map@out_min^0,w,c
  4921  001D8A  5C2B               	subwf	map@out_max^0,w,c
  4922  001D8C  6E05               	movwf	___lmul@multiplicand^0,c
  4923  001D8E  5028               	movf	(map@out_min+1)^0,w,c
  4924  001D90  582C               	subwfb	(map@out_max+1)^0,w,c
  4925  001D92  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  4926  001D94  5029               	movf	(map@out_min+2)^0,w,c
  4927  001D96  582D               	subwfb	(map@out_max+2)^0,w,c
  4928  001D98  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  4929  001D9A  502A               	movf	(map@out_min+3)^0,w,c
  4930  001D9C  582E               	subwfb	(map@out_max+3)^0,w,c
  4931  001D9E  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  4932  001DA0  EC9C  F00F         	call	___lmul	;wreg free
  4933  001DA4  C001  F00D         	movff	?___lmul,___aldiv@dividend
  4934  001DA8  C002  F00E         	movff	?___lmul+1,___aldiv@dividend+1
  4935  001DAC  C003  F00F         	movff	?___lmul+2,___aldiv@dividend+2
  4936  001DB0  C004  F010         	movff	?___lmul+3,___aldiv@dividend+3
  4937  001DB4  501F               	movf	map@in_min^0,w,c
  4938  001DB6  5C23               	subwf	map@in_max^0,w,c
  4939  001DB8  6E11               	movwf	___aldiv@divisor^0,c
  4940  001DBA  5020               	movf	(map@in_min+1)^0,w,c
  4941  001DBC  5824               	subwfb	(map@in_max+1)^0,w,c
  4942  001DBE  6E12               	movwf	(___aldiv@divisor+1)^0,c
  4943  001DC0  5021               	movf	(map@in_min+2)^0,w,c
  4944  001DC2  5825               	subwfb	(map@in_max+2)^0,w,c
  4945  001DC4  6E13               	movwf	(___aldiv@divisor+2)^0,c
  4946  001DC6  5022               	movf	(map@in_min+3)^0,w,c
  4947  001DC8  5826               	subwfb	(map@in_max+3)^0,w,c
  4948  001DCA  6E14               	movwf	(___aldiv@divisor+3)^0,c
  4949  001DCC  EC99  F007         	call	___aldiv	;wreg free
  4950  001DD0  5027               	movf	map@out_min^0,w,c
  4951  001DD2  240D               	addwf	?___aldiv^0,w,c
  4952  001DD4  6E1B               	movwf	?_map^0,c
  4953  001DD6  5028               	movf	(map@out_min+1)^0,w,c
  4954  001DD8  200E               	addwfc	(?___aldiv+1)^0,w,c
  4955  001DDA  6E1C               	movwf	(?_map+1)^0,c
  4956  001DDC  5029               	movf	(map@out_min+2)^0,w,c
  4957  001DDE  200F               	addwfc	(?___aldiv+2)^0,w,c
  4958  001DE0  6E1D               	movwf	(?_map+2)^0,c
  4959  001DE2  502A               	movf	(map@out_min+3)^0,w,c
  4960  001DE4  2010               	addwfc	(?___aldiv+3)^0,w,c
  4961  001DE6  6E1E               	movwf	(?_map+3)^0,c
  4962  001DE8  0012               	return		;funcret
  4963  001DEA                     __end_of_map:
  4964                           	opt callstack 0
  4965                           
  4966 ;; *************** function ___lmul *****************
  4967 ;; Defined at:
  4968 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  4969 ;; Parameters:    Size  Location     Type
  4970 ;;  multiplier      4    0[COMRAM] unsigned long 
  4971 ;;  multiplicand    4    4[COMRAM] unsigned long 
  4972 ;; Auto vars:     Size  Location     Type
  4973 ;;  product         4    8[COMRAM] unsigned long 
  4974 ;; Return value:  Size  Location     Type
  4975 ;;                  4    0[COMRAM] unsigned long 
  4976 ;; Registers used:
  4977 ;;		wreg, status,2, status,0
  4978 ;; Tracked objects:
  4979 ;;		On entry : 0/0
  4980 ;;		On exit  : 0/0
  4981 ;;		Unchanged: 0/0
  4982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4983 ;;      Params:         8       0       0       0       0       0       0       0       0
  4984 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4985 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4986 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4987 ;;Total ram usage:       12 bytes
  4988 ;; Hardware stack levels used:    1
  4989 ;; Hardware stack levels required when called:    1
  4990 ;; This function calls:
  4991 ;;		Nothing
  4992 ;; This function is called by:
  4993 ;;		_map
  4994 ;; This function uses a non-reentrant model
  4995 ;;
  4996                           
  4997                           	psect	text19
  4998  001F38                     __ptext19:
  4999                           	opt callstack 0
  5000  001F38                     ___lmul:
  5001                           	opt callstack 26
  5002  001F38  0E00               	movlw	0
  5003  001F3A  6E09               	movwf	___lmul@product^0,c
  5004  001F3C  0E00               	movlw	0
  5005  001F3E  6E0A               	movwf	(___lmul@product+1)^0,c
  5006  001F40  0E00               	movlw	0
  5007  001F42  6E0B               	movwf	(___lmul@product+2)^0,c
  5008  001F44  0E00               	movlw	0
  5009  001F46  6E0C               	movwf	(___lmul@product+3)^0,c
  5010  001F48                     l3038:
  5011  001F48  A001               	btfss	___lmul@multiplier^0,0,c
  5012  001F4A  EFA9  F00F         	goto	u2101
  5013  001F4E  EFAB  F00F         	goto	u2100
  5014  001F52                     u2101:
  5015  001F52  EFB3  F00F         	goto	l3042
  5016  001F56                     u2100:
  5017  001F56  5005               	movf	___lmul@multiplicand^0,w,c
  5018  001F58  2609               	addwf	___lmul@product^0,f,c
  5019  001F5A  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  5020  001F5C  220A               	addwfc	(___lmul@product+1)^0,f,c
  5021  001F5E  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  5022  001F60  220B               	addwfc	(___lmul@product+2)^0,f,c
  5023  001F62  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  5024  001F64  220C               	addwfc	(___lmul@product+3)^0,f,c
  5025  001F66                     l3042:
  5026  001F66  90D8               	bcf	status,0,c
  5027  001F68  3605               	rlcf	___lmul@multiplicand^0,f,c
  5028  001F6A  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  5029  001F6C  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  5030  001F6E  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  5031  001F70  90D8               	bcf	status,0,c
  5032  001F72  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  5033  001F74  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  5034  001F76  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  5035  001F78  3201               	rrcf	___lmul@multiplier^0,f,c
  5036  001F7A  5001               	movf	___lmul@multiplier^0,w,c
  5037  001F7C  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  5038  001F7E  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  5039  001F80  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  5040  001F82  A4D8               	btfss	status,2,c
  5041  001F84  EFC6  F00F         	goto	u2111
  5042  001F88  EFC8  F00F         	goto	u2110
  5043  001F8C                     u2111:
  5044  001F8C  EFA4  F00F         	goto	l3038
  5045  001F90                     u2110:
  5046  001F90  C009  F001         	movff	___lmul@product,?___lmul
  5047  001F94  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  5048  001F98  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  5049  001F9C  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  5050  001FA0  0012               	return		;funcret
  5051  001FA2                     __end_of___lmul:
  5052                           	opt callstack 0
  5053                           
  5054 ;; *************** function _dameHumedadSuelo *****************
  5055 ;; Defined at:
  5056 ;;		line 407 in file "main.c"
  5057 ;; Parameters:    Size  Location     Type
  5058 ;;  canalLeer       1    wreg     unsigned char 
  5059 ;; Auto vars:     Size  Location     Type
  5060 ;;  canalLeer       1    4[COMRAM] unsigned char 
  5061 ;; Return value:  Size  Location     Type
  5062 ;;                  2    0[COMRAM] short 
  5063 ;; Registers used:
  5064 ;;		wreg, status,2, status,0
  5065 ;; Tracked objects:
  5066 ;;		On entry : 0/0
  5067 ;;		On exit  : 0/0
  5068 ;;		Unchanged: 0/0
  5069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5070 ;;      Params:         2       0       0       0       0       0       0       0       0
  5071 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5072 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5073 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5074 ;;Total ram usage:        5 bytes
  5075 ;; Hardware stack levels used:    1
  5076 ;; Hardware stack levels required when called:    1
  5077 ;; This function calls:
  5078 ;;		Nothing
  5079 ;; This function is called by:
  5080 ;;		_lecturaAnalogaSensores
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083                           
  5084                           	psect	text20
  5085  002374                     __ptext20:
  5086                           	opt callstack 0
  5087  002374                     _dameHumedadSuelo:
  5088                           	opt callstack 27
  5089                           
  5090                           ;incstack = 0
  5091                           ;dameHumedadSuelo@canalLeer stored from wreg
  5092  002374  6E05               	movwf	dameHumedadSuelo@canalLeer^0,c
  5093  002376                     
  5094                           ;main.c: 409:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  5095  002376  0E06               	movlw	6
  5096  002378                     u2987:
  5097  002378  2EE8               	decfsz	wreg,f,c
  5098  00237A  D7FE               	bra	u2987
  5099  00237C  D000               	nop2	
  5100  00237E                     
  5101                           ;main.c: 411:     ADCON0bits.ADON = 1;
  5102  00237E  80C2               	bsf	194,0,c	;volatile
  5103  002380                     
  5104                           ;main.c: 412:     ADCON0bits.CHS = canalLeer;
  5105  002380  C005  F003         	movff	dameHumedadSuelo@canalLeer,??_dameHumedadSuelo
  5106  002384  4603               	rlncf	??_dameHumedadSuelo^0,f,c
  5107  002386  4603               	rlncf	??_dameHumedadSuelo^0,f,c
  5108  002388  50C2               	movf	194,w,c	;volatile
  5109  00238A  1803               	xorwf	??_dameHumedadSuelo^0,w,c
  5110  00238C  0BC3               	andlw	-61
  5111  00238E  1803               	xorwf	??_dameHumedadSuelo^0,w,c
  5112  002390  6EC2               	movwf	194,c	;volatile
  5113  002392                     
  5114                           ;main.c: 413:     ADCON0bits.GO = 1;
  5115  002392  82C2               	bsf	194,1,c	;volatile
  5116  002394                     
  5117                           ;main.c: 414:     ADCON0bits.GO_DONE = 1;
  5118  002394  82C2               	bsf	194,1,c	;volatile
  5119  002396                     l297:
  5120  002396  B2C2               	btfsc	194,1,c	;volatile
  5121  002398  EFD0  F011         	goto	u2301
  5122  00239C  EFD2  F011         	goto	u2300
  5123  0023A0                     u2301:
  5124  0023A0  EFCB  F011         	goto	l297
  5125  0023A4                     u2300:
  5126  0023A4                     
  5127                           ;main.c: 418:     ADCON0bits.ADON = 0;
  5128  0023A4  90C2               	bcf	194,0,c	;volatile
  5129  0023A6                     
  5130                           ;main.c: 420:     return (ADRESH << 8) +ADRESL;
  5131  0023A6  50C4               	movf	196,w,c	;volatile
  5132  0023A8  6E04               	movwf	(??_dameHumedadSuelo+1)^0,c
  5133  0023AA  6A03               	clrf	??_dameHumedadSuelo^0,c
  5134  0023AC  50C3               	movf	195,w,c	;volatile
  5135  0023AE  2403               	addwf	??_dameHumedadSuelo^0,w,c
  5136  0023B0  6E01               	movwf	?_dameHumedadSuelo^0,c
  5137  0023B2  0E00               	movlw	0
  5138  0023B4  2004               	addwfc	(??_dameHumedadSuelo+1)^0,w,c
  5139  0023B6  6E02               	movwf	(?_dameHumedadSuelo+1)^0,c
  5140  0023B8  0012               	return		;funcret
  5141  0023BA                     __end_of_dameHumedadSuelo:
  5142                           	opt callstack 0
  5143                           
  5144 ;; *************** function _dameTemperaturaHumedad *****************
  5145 ;; Defined at:
  5146 ;;		line 613 in file "main.c"
  5147 ;; Parameters:    Size  Location     Type
  5148 ;;  Humedad         2    3[COMRAM] PTR unsigned char 
  5149 ;;		 -> mostrarDatosSensoresWIFI@humedad(1), mostrarDatosSensores@humedad(1), NULL(0), 
  5150 ;;  Temperatura     2    5[COMRAM] PTR unsigned char 
  5151 ;;		 -> mostrarDatosSensoresWIFI@temperatura(1), mostrarDatosSensores@temperatura(1), estaSeco@temperatura(1), 
  5152 ;; Auto vars:     Size  Location     Type
  5153 ;;  checkSum        2    9[COMRAM] unsigned int 
  5154 ;;  temperatura     1   14[COMRAM] unsigned char 
  5155 ;;  humedad         1   13[COMRAM] unsigned char 
  5156 ;;  temperaturaD    1   12[COMRAM] unsigned char 
  5157 ;;  humedadDecim    1   11[COMRAM] unsigned char 
  5158 ;; Return value:  Size  Location     Type
  5159 ;;                  1    wreg      void 
  5160 ;; Registers used:
  5161 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5162 ;; Tracked objects:
  5163 ;;		On entry : 0/0
  5164 ;;		On exit  : 0/0
  5165 ;;		Unchanged: 0/0
  5166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5167 ;;      Params:         4       0       0       0       0       0       0       0       0
  5168 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5169 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5170 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5171 ;;Total ram usage:       12 bytes
  5172 ;; Hardware stack levels used:    1
  5173 ;; Hardware stack levels required when called:    3
  5174 ;; This function calls:
  5175 ;;		_DHT11_ReadData
  5176 ;;		_DHT11_Start
  5177 ;;		_UART_printf
  5178 ;;		_check_response
  5179 ;; This function is called by:
  5180 ;;		_estaSeco
  5181 ;;		_mostrarDatosSensores
  5182 ;;		_mostrarDatosSensoresWIFI
  5183 ;; This function uses a non-reentrant model
  5184 ;;
  5185                           
  5186                           	psect	text21
  5187  0018EA                     __ptext21:
  5188                           	opt callstack 0
  5189  0018EA                     _dameTemperaturaHumedad:
  5190                           	opt callstack 24
  5191  0018EA                     
  5192                           ;main.c: 615:     PIE1bits.RCIE = 0;
  5193  0018EA  9A9D               	bcf	157,5,c	;volatile
  5194                           
  5195                           ;main.c: 616:     T0CONbits.TMR0ON = 0;
  5196  0018EC  9ED5               	bcf	213,7,c	;volatile
  5197  0018EE                     
  5198                           ;main.c: 622:     DHT11_Start();
  5199  0018EE  ECFF  F012         	call	_DHT11_Start	;wreg free
  5200  0018F2                     
  5201                           ;main.c: 624:     if (check_response()) {
  5202  0018F2  EC21  F012         	call	_check_response	;wreg free
  5203  0018F6  0900               	iorlw	0
  5204  0018F8  B4D8               	btfsc	status,2,c
  5205  0018FA  EF81  F00C         	goto	u2181
  5206  0018FE  EF83  F00C         	goto	u2180
  5207  001902                     u2181:
  5208  001902  EFC6  F00C         	goto	l3130
  5209  001906                     u2180:
  5210  001906                     
  5211                           ;main.c: 627:         humedad = DHT11_ReadData();
  5212  001906  EC96  F010         	call	_DHT11_ReadData	;wreg free
  5213  00190A  6E0E               	movwf	dameTemperaturaHumedad@humedad^0,c
  5214                           
  5215                           ;main.c: 628:         humedadDecimal = DHT11_ReadData();
  5216  00190C  EC96  F010         	call	_DHT11_ReadData	;wreg free
  5217  001910  6E0C               	movwf	dameTemperaturaHumedad@humedadDecimal^0,c
  5218                           
  5219                           ;main.c: 629:         temperatura = DHT11_ReadData();
  5220  001912  EC96  F010         	call	_DHT11_ReadData	;wreg free
  5221  001916  6E0F               	movwf	dameTemperaturaHumedad@temperatura^0,c
  5222                           
  5223                           ;main.c: 630:         temperaturaDecimal = DHT11_ReadData();
  5224  001918  EC96  F010         	call	_DHT11_ReadData	;wreg free
  5225  00191C  6E0D               	movwf	dameTemperaturaHumedad@temperaturaDecimal^0,c
  5226                           
  5227                           ;main.c: 631:         checkSum = DHT11_ReadData();
  5228  00191E  EC96  F010         	call	_DHT11_ReadData	;wreg free
  5229  001922  6E08               	movwf	??_dameTemperaturaHumedad^0,c
  5230  001924  5008               	movf	??_dameTemperaturaHumedad^0,w,c
  5231  001926  6E0A               	movwf	dameTemperaturaHumedad@checkSum^0,c
  5232  001928  6A0B               	clrf	(dameTemperaturaHumedad@checkSum+1)^0,c
  5233  00192A                     
  5234                           ;main.c: 633:         if (checkSum != (humedad + humedadDecimal + temperatura + temperat
      +                          uraDecimal))
  5235  00192A  500C               	movf	dameTemperaturaHumedad@humedadDecimal^0,w,c
  5236  00192C  C00E  F008         	movff	dameTemperaturaHumedad@humedad,??_dameTemperaturaHumedad
  5237  001930  6A09               	clrf	(??_dameTemperaturaHumedad+1)^0,c
  5238  001932  2608               	addwf	??_dameTemperaturaHumedad^0,f,c
  5239  001934  0E00               	movlw	0
  5240  001936  2209               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  5241  001938  500F               	movf	dameTemperaturaHumedad@temperatura^0,w,c
  5242  00193A  2608               	addwf	??_dameTemperaturaHumedad^0,f,c
  5243  00193C  0E00               	movlw	0
  5244  00193E  2209               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  5245  001940  500D               	movf	dameTemperaturaHumedad@temperaturaDecimal^0,w,c
  5246  001942  2608               	addwf	??_dameTemperaturaHumedad^0,f,c
  5247  001944  0E00               	movlw	0
  5248  001946  2209               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  5249  001948  500A               	movf	dameTemperaturaHumedad@checkSum^0,w,c
  5250  00194A  1808               	xorwf	??_dameTemperaturaHumedad^0,w,c
  5251  00194C  E109               	bnz	u2190
  5252  00194E  500B               	movf	(dameTemperaturaHumedad@checkSum+1)^0,w,c
  5253  001950  1809               	xorwf	(??_dameTemperaturaHumedad+1)^0,w,c
  5254  001952  B4D8               	btfsc	status,2,c
  5255  001954  EFAE  F00C         	goto	u2191
  5256  001958  EFB0  F00C         	goto	u2190
  5257  00195C                     u2191:
  5258  00195C  EFB8  F00C         	goto	l3128
  5259  001960                     u2190:
  5260  001960                     
  5261                           ;main.c: 634:             UART_printf("Error de lectura DHT11\r\n");
  5262  001960  0E29               	movlw	low STR_28
  5263  001962  6E02               	movwf	UART_printf@cadena^0,c
  5264  001964  0E7F               	movlw	high STR_28
  5265  001966  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5266  001968  EC67  F010         	call	_UART_printf	;wreg free
  5267  00196C  EFCC  F00C         	goto	l3132
  5268  001970                     l3128:
  5269                           
  5270                           ;main.c: 636:             *Humedad = humedad;
  5271  001970  C004  FFD9         	movff	dameTemperaturaHumedad@Humedad,fsr2l
  5272  001974  C005  FFDA         	movff	dameTemperaturaHumedad@Humedad+1,fsr2h
  5273  001978  C00E  FFDF         	movff	dameTemperaturaHumedad@humedad,indf2
  5274                           
  5275                           ;main.c: 637:             *Temperatura = temperatura;
  5276  00197C  C006  FFD9         	movff	dameTemperaturaHumedad@Temperatura,fsr2l
  5277  001980  C007  FFDA         	movff	dameTemperaturaHumedad@Temperatura+1,fsr2h
  5278  001984  C00F  FFDF         	movff	dameTemperaturaHumedad@temperatura,indf2
  5279  001988  EFCC  F00C         	goto	l3132
  5280  00198C                     l3130:
  5281                           
  5282                           ;main.c: 641:         UART_printf("DHT11 NO RESPONDIO\r\n");
  5283  00198C  0E70               	movlw	low STR_29
  5284  00198E  6E02               	movwf	UART_printf@cadena^0,c
  5285  001990  0E7F               	movlw	high STR_29
  5286  001992  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5287  001994  EC67  F010         	call	_UART_printf	;wreg free
  5288  001998                     l3132:
  5289                           
  5290                           ;main.c: 644:     PIE1bits.RCIE = 1;
  5291  001998  8A9D               	bsf	157,5,c	;volatile
  5292  00199A                     
  5293                           ;main.c: 645:     T0CONbits.TMR0ON = 1;
  5294  00199A  8ED5               	bsf	213,7,c	;volatile
  5295  00199C  0012               	return		;funcret
  5296  00199E                     __end_of_dameTemperaturaHumedad:
  5297                           	opt callstack 0
  5298                           
  5299 ;; *************** function _check_response *****************
  5300 ;; Defined at:
  5301 ;;		line 38 in file "./DHT11.h"
  5302 ;; Parameters:    Size  Location     Type
  5303 ;;		None
  5304 ;; Auto vars:     Size  Location     Type
  5305 ;;  respuesta       1    0[COMRAM] unsigned char 
  5306 ;; Return value:  Size  Location     Type
  5307 ;;                  1    wreg      unsigned char 
  5308 ;; Registers used:
  5309 ;;		wreg, status,2
  5310 ;; Tracked objects:
  5311 ;;		On entry : 0/0
  5312 ;;		On exit  : 0/0
  5313 ;;		Unchanged: 0/0
  5314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5315 ;;      Params:         0       0       0       0       0       0       0       0       0
  5316 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5317 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5318 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5319 ;;Total ram usage:        1 bytes
  5320 ;; Hardware stack levels used:    1
  5321 ;; Hardware stack levels required when called:    1
  5322 ;; This function calls:
  5323 ;;		Nothing
  5324 ;; This function is called by:
  5325 ;;		_dameTemperaturaHumedad
  5326 ;; This function uses a non-reentrant model
  5327 ;;
  5328                           
  5329                           	psect	text22
  5330  002442                     __ptext22:
  5331                           	opt callstack 0
  5332  002442                     _check_response:
  5333                           	opt callstack 25
  5334  002442                     
  5335                           ;./DHT11.h: 40:     unsigned char respuesta = 0;
  5336  002442  0E00               	movlw	0
  5337  002444  6E01               	movwf	check_response@respuesta^0,c
  5338  002446                     
  5339                           ;./DHT11.h: 41:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  5340  002446  0E0D               	movlw	13
  5341  002448                     u2997:
  5342  002448  2EE8               	decfsz	wreg,f,c
  5343  00244A  D7FE               	bra	u2997
  5344  00244C  F000               	nop	
  5345  00244E                     
  5346                           ;./DHT11.h: 42:     if (!PORTDbits.RD7) {
  5347  00244E  BE83               	btfsc	131,7,c	;volatile
  5348  002450  EF2C  F012         	goto	u2071
  5349  002454  EF2E  F012         	goto	u2070
  5350  002458                     u2071:
  5351  002458  EF3F  F012         	goto	l3022
  5352  00245C                     u2070:
  5353  00245C                     
  5354                           ;./DHT11.h: 43:         _delay((unsigned long)((80)*(4000000/4000000.0)));
  5355  00245C  0E1A               	movlw	26
  5356  00245E                     u3007:
  5357  00245E  2EE8               	decfsz	wreg,f,c
  5358  002460  D7FE               	bra	u3007
  5359  002462  D000               	nop2	
  5360  002464                     
  5361                           ;./DHT11.h: 44:         if (PORTDbits.RD7) {
  5362  002464  AE83               	btfss	131,7,c	;volatile
  5363  002466  EF37  F012         	goto	u2081
  5364  00246A  EF39  F012         	goto	u2080
  5365  00246E                     u2081:
  5366  00246E  EF3F  F012         	goto	l3022
  5367  002472                     u2080:
  5368  002472                     
  5369                           ;./DHT11.h: 45:             _delay((unsigned long)((50)*(4000000/4000000.0)));
  5370  002472  0E10               	movlw	16
  5371  002474                     u3017:
  5372  002474  2EE8               	decfsz	wreg,f,c
  5373  002476  D7FE               	bra	u3017
  5374  002478  D000               	nop2	
  5375  00247A                     
  5376                           ;./DHT11.h: 46:             respuesta = 1;
  5377  00247A  0E01               	movlw	1
  5378  00247C  6E01               	movwf	check_response@respuesta^0,c
  5379  00247E                     l3022:
  5380                           
  5381                           ;./DHT11.h: 50:     return respuesta;
  5382  00247E  5001               	movf	check_response@respuesta^0,w,c
  5383  002480  0012               	return		;funcret
  5384  002482                     __end_of_check_response:
  5385                           	opt callstack 0
  5386                           
  5387 ;; *************** function _DHT11_Start *****************
  5388 ;; Defined at:
  5389 ;;		line 23 in file "./DHT11.h"
  5390 ;; Parameters:    Size  Location     Type
  5391 ;;		None
  5392 ;; Auto vars:     Size  Location     Type
  5393 ;;		None
  5394 ;; Return value:  Size  Location     Type
  5395 ;;                  1    wreg      void 
  5396 ;; Registers used:
  5397 ;;		wreg
  5398 ;; Tracked objects:
  5399 ;;		On entry : 0/0
  5400 ;;		On exit  : 0/0
  5401 ;;		Unchanged: 0/0
  5402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5403 ;;      Params:         0       0       0       0       0       0       0       0       0
  5404 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5405 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5406 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5407 ;;Total ram usage:        1 bytes
  5408 ;; Hardware stack levels used:    1
  5409 ;; Hardware stack levels required when called:    1
  5410 ;; This function calls:
  5411 ;;		Nothing
  5412 ;; This function is called by:
  5413 ;;		_dameTemperaturaHumedad
  5414 ;; This function uses a non-reentrant model
  5415 ;;
  5416                           
  5417                           	psect	text23
  5418  0025FE                     __ptext23:
  5419                           	opt callstack 0
  5420  0025FE                     _DHT11_Start:
  5421                           	opt callstack 25
  5422  0025FE                     
  5423                           ;./DHT11.h: 24:     TRISDbits.RD7 = 0;
  5424  0025FE  9E95               	bcf	149,7,c	;volatile
  5425                           
  5426                           ;./DHT11.h: 26:     LATDbits.LATD7 = 0;
  5427  002600  9E8C               	bcf	140,7,c	;volatile
  5428  002602                     
  5429                           ;./DHT11.h: 28:     _delay((unsigned long)((20)*(4000000/4000.0)));
  5430  002602  0E1A               	movlw	26
  5431  002604  6E01               	movwf	??_DHT11_Start^0,c
  5432  002606  0EF8               	movlw	248
  5433  002608                     u3027:
  5434  002608  2EE8               	decfsz	wreg,f,c
  5435  00260A  D7FE               	bra	u3027
  5436  00260C  2E01               	decfsz	??_DHT11_Start^0,f,c
  5437  00260E  D7FC               	bra	u3027
  5438  002610  D000               	nop2	
  5439  002612                     
  5440                           ;./DHT11.h: 30:     LATDbits.LATD7 = 1;
  5441  002612  8E8C               	bsf	140,7,c	;volatile
  5442                           
  5443                           ;./DHT11.h: 32:     _delay((unsigned long)((30)*(4000000/4000000.0)));
  5444  002614  0E0A               	movlw	10
  5445  002616                     u3037:
  5446  002616  2EE8               	decfsz	wreg,f,c
  5447  002618  D7FE               	bra	u3037
  5448  00261A                     
  5449                           ;./DHT11.h: 34:     TRISDbits.RD7 = 1;
  5450  00261A  8E95               	bsf	149,7,c	;volatile
  5451  00261C  0012               	return		;funcret
  5452  00261E                     __end_of_DHT11_Start:
  5453                           	opt callstack 0
  5454                           
  5455 ;; *************** function _DHT11_ReadData *****************
  5456 ;; Defined at:
  5457 ;;		line 9 in file "./DHT11.h"
  5458 ;; Parameters:    Size  Location     Type
  5459 ;;		None
  5460 ;; Auto vars:     Size  Location     Type
  5461 ;;  data            1    1[COMRAM] unsigned char 
  5462 ;;  i               1    0[COMRAM] unsigned char 
  5463 ;; Return value:  Size  Location     Type
  5464 ;;                  1    wreg      unsigned char 
  5465 ;; Registers used:
  5466 ;;		wreg, status,2, status,0
  5467 ;; Tracked objects:
  5468 ;;		On entry : 0/0
  5469 ;;		On exit  : 0/0
  5470 ;;		Unchanged: 0/0
  5471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5472 ;;      Params:         0       0       0       0       0       0       0       0       0
  5473 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5474 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5475 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5476 ;;Total ram usage:        2 bytes
  5477 ;; Hardware stack levels used:    1
  5478 ;; Hardware stack levels required when called:    1
  5479 ;; This function calls:
  5480 ;;		Nothing
  5481 ;; This function is called by:
  5482 ;;		_dameTemperaturaHumedad
  5483 ;; This function uses a non-reentrant model
  5484 ;;
  5485                           
  5486                           	psect	text24
  5487  00212C                     __ptext24:
  5488                           	opt callstack 0
  5489  00212C                     _DHT11_ReadData:
  5490                           	opt callstack 25
  5491  00212C                     
  5492                           ;./DHT11.h: 10:     char i, data = 0;
  5493  00212C  0E00               	movlw	0
  5494  00212E  6E02               	movwf	DHT11_ReadData@data^0,c
  5495                           
  5496                           ;./DHT11.h: 11:     for (i = 0; i < 8; i++) {
  5497  002130  0E00               	movlw	0
  5498  002132  6E01               	movwf	DHT11_ReadData@i^0,c
  5499  002134                     l148:
  5500  002134  AE83               	btfss	131,7,c	;volatile
  5501  002136  EF9F  F010         	goto	u2031
  5502  00213A  EFA1  F010         	goto	u2030
  5503  00213E                     u2031:
  5504  00213E  EF9A  F010         	goto	l148
  5505  002142                     u2030:
  5506  002142                     
  5507                           ;./DHT11.h: 13:         _delay((unsigned long)((30)*(4000000/4000000.0)));
  5508  002142  0E0A               	movlw	10
  5509  002144                     u3047:
  5510  002144  2EE8               	decfsz	wreg,f,c
  5511  002146  D7FE               	bra	u3047
  5512  002148                     
  5513                           ;./DHT11.h: 14:         if (PORTDbits.RD7 & 1)
  5514  002148  AE83               	btfss	131,7,c	;volatile
  5515  00214A  EFA9  F010         	goto	u2041
  5516  00214E  EFAB  F010         	goto	u2040
  5517  002152                     u2041:
  5518  002152  EFAF  F010         	goto	l2990
  5519  002156                     u2040:
  5520  002156                     
  5521                           ;./DHT11.h: 15:             data = ((data << 1) | 1);
  5522  002156  80D8               	bsf	status,0,c
  5523  002158  3602               	rlcf	DHT11_ReadData@data^0,f,c
  5524  00215A  EFB2  F010         	goto	l153
  5525  00215E                     l2990:
  5526                           
  5527                           ;./DHT11.h: 17:             data = (data << 1);
  5528  00215E  5002               	movf	DHT11_ReadData@data^0,w,c
  5529  002160  2402               	addwf	DHT11_ReadData@data^0,w,c
  5530  002162  6E02               	movwf	DHT11_ReadData@data^0,c
  5531  002164                     l153:
  5532  002164  BE83               	btfsc	131,7,c	;volatile
  5533  002166  EFB7  F010         	goto	u2051
  5534  00216A  EFB9  F010         	goto	u2050
  5535  00216E                     u2051:
  5536  00216E  EFB2  F010         	goto	l153
  5537  002172                     u2050:
  5538  002172                     
  5539                           ;./DHT11.h: 19:     }
  5540  002172  2A01               	incf	DHT11_ReadData@i^0,f,c
  5541  002174  0E07               	movlw	7
  5542  002176  6401               	cpfsgt	DHT11_ReadData@i^0,c
  5543  002178  EFC0  F010         	goto	u2061
  5544  00217C  EFC2  F010         	goto	u2060
  5545  002180                     u2061:
  5546  002180  EF9A  F010         	goto	l148
  5547  002184                     u2060:
  5548  002184                     
  5549                           ;./DHT11.h: 20:     return data;
  5550  002184  5002               	movf	DHT11_ReadData@data^0,w,c
  5551  002186  0012               	return		;funcret
  5552  002188                     __end_of_DHT11_ReadData:
  5553                           	opt callstack 0
  5554                           
  5555 ;; *************** function _fijaHoraRtc *****************
  5556 ;; Defined at:
  5557 ;;		line 327 in file "main.c"
  5558 ;; Parameters:    Size  Location     Type
  5559 ;;		None
  5560 ;; Auto vars:     Size  Location     Type
  5561 ;;		None
  5562 ;; Return value:  Size  Location     Type
  5563 ;;                  1    wreg      void 
  5564 ;; Registers used:
  5565 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5566 ;; Tracked objects:
  5567 ;;		On entry : 0/0
  5568 ;;		On exit  : 0/0
  5569 ;;		Unchanged: 0/0
  5570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5571 ;;      Params:         0       0       0       0       0       0       0       0       0
  5572 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5573 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5574 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5575 ;;Total ram usage:        0 bytes
  5576 ;; Hardware stack levels used:    1
  5577 ;; Hardware stack levels required when called:    5
  5578 ;; This function calls:
  5579 ;;		_UART_printf
  5580 ;;		_escribe_rtc
  5581 ;;		_setRtc
  5582 ;; This function is called by:
  5583 ;;		_sistemaPrincipal
  5584 ;; This function uses a non-reentrant model
  5585 ;;
  5586                           
  5587                           	psect	text25
  5588  001FA2                     __ptext25:
  5589                           	opt callstack 0
  5590  001FA2                     _fijaHoraRtc:
  5591                           	opt callstack 24
  5592  001FA2                     
  5593                           ;main.c: 329:     UART_printf("\r\n FIJA HORA \r\n");
  5594  001FA2  0EBC               	movlw	low STR_1
  5595  001FA4  6E02               	movwf	UART_printf@cadena^0,c
  5596  001FA6  0E7F               	movlw	high STR_1
  5597  001FA8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5598  001FAA  EC67  F010         	call	_UART_printf	;wreg free
  5599                           
  5600                           ;main.c: 332:     UART_printf("\r\n Envie las Horas en formato 24 Ej: 15 \r\n");
  5601  001FAE  0E0E               	movlw	low STR_2
  5602  001FB0  6E02               	movwf	UART_printf@cadena^0,c
  5603  001FB2  0E7D               	movlw	high STR_2
  5604  001FB4  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5605  001FB6  EC67  F010         	call	_UART_printf	;wreg free
  5606  001FBA                     
  5607                           ;main.c: 335:     if (setRtc(0x02)) {
  5608  001FBA  0E02               	movlw	2
  5609  001FBC  ECF5  F00E         	call	_setRtc
  5610  001FC0  0900               	iorlw	0
  5611  001FC2  B4D8               	btfsc	status,2,c
  5612  001FC4  EFE6  F00F         	goto	u2641
  5613  001FC8  EFE8  F00F         	goto	u2640
  5614  001FCC                     u2641:
  5615  001FCC  EF04  F010         	goto	l284
  5616  001FD0                     u2640:
  5617  001FD0                     
  5618                           ;main.c: 336:         UART_printf("\r\n Envie los Minutos Ej: 25 \r\n");
  5619  001FD0  0E9F               	movlw	low STR_3
  5620  001FD2  6E02               	movwf	UART_printf@cadena^0,c
  5621  001FD4  0E7E               	movlw	high STR_3
  5622  001FD6  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5623  001FD8  EC67  F010         	call	_UART_printf	;wreg free
  5624  001FDC                     
  5625                           ;main.c: 337:         if (setRtc(0x01)) {
  5626  001FDC  0E01               	movlw	1
  5627  001FDE  ECF5  F00E         	call	_setRtc
  5628  001FE2  0900               	iorlw	0
  5629  001FE4  B4D8               	btfsc	status,2,c
  5630  001FE6  EFF7  F00F         	goto	u2651
  5631  001FEA  EFF9  F00F         	goto	u2650
  5632  001FEE                     u2651:
  5633  001FEE  EF04  F010         	goto	l284
  5634  001FF2                     u2650:
  5635  001FF2                     
  5636                           ;main.c: 338:             UART_printf("\r\n HORA ESTABLECIDA CORRECTAMENTE \r\n");
  5637  001FF2  0ED3               	movlw	low STR_4
  5638  001FF4  6E02               	movwf	UART_printf@cadena^0,c
  5639  001FF6  0E7D               	movlw	high STR_4
  5640  001FF8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5641  001FFA  EC67  F010         	call	_UART_printf	;wreg free
  5642  001FFE                     
  5643                           ;main.c: 339:             escribe_rtc(0x00, 0);
  5644  001FFE  0E00               	movlw	0
  5645  002000  6E03               	movwf	escribe_rtc@dato^0,c
  5646  002002  0E00               	movlw	0
  5647  002004  EC0F  F013         	call	_escribe_rtc
  5648  002008                     l284:
  5649  002008  0012               	return		;funcret
  5650  00200A                     __end_of_fijaHoraRtc:
  5651                           	opt callstack 0
  5652                           
  5653 ;; *************** function _setRtc *****************
  5654 ;; Defined at:
  5655 ;;		line 170 in file "main.c"
  5656 ;; Parameters:    Size  Location     Type
  5657 ;;  direccion       1    wreg     unsigned char 
  5658 ;; Auto vars:     Size  Location     Type
  5659 ;;  direccion       1   14[COMRAM] unsigned char 
  5660 ;;  dato            1   17[COMRAM] unsigned char 
  5661 ;;  datoRtc         1   16[COMRAM] unsigned char 
  5662 ;;  seteado         1   15[COMRAM] unsigned char 
  5663 ;; Return value:  Size  Location     Type
  5664 ;;                  1    wreg      unsigned char 
  5665 ;; Registers used:
  5666 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5667 ;; Tracked objects:
  5668 ;;		On entry : 0/0
  5669 ;;		On exit  : 0/0
  5670 ;;		Unchanged: 0/0
  5671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5672 ;;      Params:         0       0       0       0       0       0       0       0       0
  5673 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5674 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5675 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5676 ;;Total ram usage:        4 bytes
  5677 ;; Hardware stack levels used:    1
  5678 ;; Hardware stack levels required when called:    4
  5679 ;; This function calls:
  5680 ;;		___awdiv
  5681 ;;		___awmod
  5682 ;;		_escribe_rtc
  5683 ;;		_getValue
  5684 ;; This function is called by:
  5685 ;;		_fijaHoraRtc
  5686 ;; This function uses a non-reentrant model
  5687 ;;
  5688                           
  5689                           	psect	text26
  5690  001DEA                     __ptext26:
  5691                           	opt callstack 0
  5692  001DEA                     _setRtc:
  5693                           	opt callstack 24
  5694                           
  5695                           ;incstack = 0
  5696                           ;setRtc@direccion stored from wreg
  5697  001DEA  6E0F               	movwf	setRtc@direccion^0,c
  5698  001DEC                     
  5699                           ;main.c: 173:     unsigned char seteado = 0;
  5700  001DEC  0E00               	movlw	0
  5701  001DEE  6E10               	movwf	setRtc@seteado^0,c
  5702                           
  5703                           ;main.c: 174:     unsigned char datoRtc = 0;
  5704  001DF0  0E00               	movlw	0
  5705  001DF2  6E11               	movwf	setRtc@datoRtc^0,c
  5706  001DF4                     
  5707                           ;main.c: 176:     dato = getValue(2);
  5708  001DF4  0E00               	movlw	0
  5709  001DF6  6E05               	movwf	(getValue@numCharacters+1)^0,c
  5710  001DF8  0E02               	movlw	2
  5711  001DFA  6E04               	movwf	getValue@numCharacters^0,c
  5712  001DFC  ECC4  F003         	call	_getValue	;wreg free
  5713  001E00  6E12               	movwf	setRtc@dato^0,c
  5714  001E02                     
  5715                           ;main.c: 178:     if (dato != 'F') {
  5716  001E02  0E46               	movlw	70
  5717  001E04  1812               	xorwf	setRtc@dato^0,w,c
  5718  001E06  B4D8               	btfsc	status,2,c
  5719  001E08  EF08  F00F         	goto	u2461
  5720  001E0C  EF0A  F00F         	goto	u2460
  5721  001E10                     u2461:
  5722  001E10  EF2B  F00F         	goto	l3408
  5723  001E14                     u2460:
  5724  001E14                     
  5725                           ;main.c: 180:         datoRtc = ((dato / 10) & 0x0F) << 4;
  5726  001E14  C012  F001         	movff	setRtc@dato,___awdiv@dividend
  5727  001E18  6A02               	clrf	(___awdiv@dividend+1)^0,c
  5728  001E1A  0E00               	movlw	0
  5729  001E1C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5730  001E1E  0E0A               	movlw	10
  5731  001E20  6E03               	movwf	___awdiv@divisor^0,c
  5732  001E22  EC13  F00C         	call	___awdiv	;wreg free
  5733  001E26  0E0F               	movlw	15
  5734  001E28  1601               	andwf	?___awdiv^0,f,c
  5735  001E2A  3801               	swapf	?___awdiv^0,w,c
  5736  001E2C  0BF0               	andlw	240
  5737  001E2E  6E11               	movwf	setRtc@datoRtc^0,c
  5738                           
  5739                           ;main.c: 181:         datoRtc |= (dato % 10) & 0x0F;
  5740  001E30  C012  F001         	movff	setRtc@dato,___awmod@dividend
  5741  001E34  6A02               	clrf	(___awmod@dividend+1)^0,c
  5742  001E36  0E00               	movlw	0
  5743  001E38  6E04               	movwf	(___awmod@divisor+1)^0,c
  5744  001E3A  0E0A               	movlw	10
  5745  001E3C  6E03               	movwf	___awmod@divisor^0,c
  5746  001E3E  EC28  F00D         	call	___awmod	;wreg free
  5747  001E42  5001               	movf	?___awmod^0,w,c
  5748  001E44  0B0F               	andlw	15
  5749  001E46  1211               	iorwf	setRtc@datoRtc^0,f,c
  5750                           
  5751                           ;main.c: 182:         escribe_rtc(direccion, datoRtc);
  5752  001E48  C011  F003         	movff	setRtc@datoRtc,escribe_rtc@dato
  5753  001E4C  500F               	movf	setRtc@direccion^0,w,c
  5754  001E4E  EC0F  F013         	call	_escribe_rtc
  5755  001E52                     
  5756                           ;main.c: 183:         seteado = 1;
  5757  001E52  0E01               	movlw	1
  5758  001E54  6E10               	movwf	setRtc@seteado^0,c
  5759  001E56                     l3408:
  5760                           
  5761                           ;main.c: 186:     return seteado;
  5762  001E56  5010               	movf	setRtc@seteado^0,w,c
  5763  001E58  0012               	return		;funcret
  5764  001E5A                     __end_of_setRtc:
  5765                           	opt callstack 0
  5766                           
  5767 ;; *************** function _escribe_rtc *****************
  5768 ;; Defined at:
  5769 ;;		line 2 in file "./RTC.h"
  5770 ;; Parameters:    Size  Location     Type
  5771 ;;  direccion       1    wreg     unsigned char 
  5772 ;;  dato            1    2[COMRAM] unsigned char 
  5773 ;; Auto vars:     Size  Location     Type
  5774 ;;  direccion       1    3[COMRAM] unsigned char 
  5775 ;; Return value:  Size  Location     Type
  5776 ;;                  1    wreg      void 
  5777 ;; Registers used:
  5778 ;;		wreg, status,2, status,0, cstack
  5779 ;; Tracked objects:
  5780 ;;		On entry : 0/0
  5781 ;;		On exit  : 0/0
  5782 ;;		Unchanged: 0/0
  5783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5784 ;;      Params:         1       0       0       0       0       0       0       0       0
  5785 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5786 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5787 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5788 ;;Total ram usage:        2 bytes
  5789 ;; Hardware stack levels used:    1
  5790 ;; Hardware stack levels required when called:    3
  5791 ;; This function calls:
  5792 ;;		_i2c_detener
  5793 ;;		_i2c_envia_dato
  5794 ;;		_i2c_inicia_com
  5795 ;; This function is called by:
  5796 ;;		_setRtc
  5797 ;;		_fijaHoraRtc
  5798 ;;		_setRtcDefault
  5799 ;; This function uses a non-reentrant model
  5800 ;;
  5801                           
  5802                           	psect	text27
  5803  00261E                     __ptext27:
  5804                           	opt callstack 0
  5805  00261E                     _escribe_rtc:
  5806                           	opt callstack 24
  5807                           
  5808                           ;incstack = 0
  5809                           ;escribe_rtc@direccion stored from wreg
  5810  00261E  6E04               	movwf	escribe_rtc@direccion^0,c
  5811  002620                     
  5812                           ;./RTC.h: 3:     i2c_inicia_com();
  5813  002620  EC55  F013         	call	_i2c_inicia_com	;wreg free
  5814                           
  5815                           ;./RTC.h: 4:     i2c_envia_dato(0xD0);
  5816  002624  0ED0               	movlw	208
  5817  002626  EC41  F013         	call	_i2c_envia_dato
  5818                           
  5819                           ;./RTC.h: 5:     i2c_envia_dato(direccion);
  5820  00262A  5004               	movf	escribe_rtc@direccion^0,w,c
  5821  00262C  EC41  F013         	call	_i2c_envia_dato
  5822                           
  5823                           ;./RTC.h: 6:     i2c_envia_dato(dato);
  5824  002630  5003               	movf	escribe_rtc@dato^0,w,c
  5825  002632  EC41  F013         	call	_i2c_envia_dato
  5826                           
  5827                           ;./RTC.h: 7:     i2c_detener();
  5828  002636  EC59  F013         	call	_i2c_detener	;wreg free
  5829  00263A  0012               	return		;funcret
  5830  00263C                     __end_of_escribe_rtc:
  5831                           	opt callstack 0
  5832                           
  5833 ;; *************** function ___awmod *****************
  5834 ;; Defined at:
  5835 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  5836 ;; Parameters:    Size  Location     Type
  5837 ;;  dividend        2    0[COMRAM] int 
  5838 ;;  divisor         2    2[COMRAM] int 
  5839 ;; Auto vars:     Size  Location     Type
  5840 ;;  sign            1    5[COMRAM] unsigned char 
  5841 ;;  counter         1    4[COMRAM] unsigned char 
  5842 ;; Return value:  Size  Location     Type
  5843 ;;                  2    0[COMRAM] int 
  5844 ;; Registers used:
  5845 ;;		wreg, status,2, status,0
  5846 ;; Tracked objects:
  5847 ;;		On entry : 0/0
  5848 ;;		On exit  : 0/0
  5849 ;;		Unchanged: 0/0
  5850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5851 ;;      Params:         4       0       0       0       0       0       0       0       0
  5852 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5853 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5854 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5855 ;;Total ram usage:        6 bytes
  5856 ;; Hardware stack levels used:    1
  5857 ;; Hardware stack levels required when called:    1
  5858 ;; This function calls:
  5859 ;;		Nothing
  5860 ;; This function is called by:
  5861 ;;		_setRtc
  5862 ;; This function uses a non-reentrant model
  5863 ;;
  5864                           
  5865                           	psect	text28
  5866  001A50                     __ptext28:
  5867                           	opt callstack 0
  5868  001A50                     ___awmod:
  5869                           	opt callstack 26
  5870  001A50  0E00               	movlw	0
  5871  001A52  6E06               	movwf	___awmod@sign^0,c
  5872  001A54  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  5873  001A56  EF31  F00D         	goto	u2380
  5874  001A5A  EF2F  F00D         	goto	u2381
  5875  001A5E                     u2381:
  5876  001A5E  EF37  F00D         	goto	l3340
  5877  001A62                     u2380:
  5878  001A62  6C01               	negf	___awmod@dividend^0,c
  5879  001A64  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5880  001A66  B0D8               	btfsc	status,0,c
  5881  001A68  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5882  001A6A  0E01               	movlw	1
  5883  001A6C  6E06               	movwf	___awmod@sign^0,c
  5884  001A6E                     l3340:
  5885  001A6E  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  5886  001A70  EF3E  F00D         	goto	u2390
  5887  001A74  EF3C  F00D         	goto	u2391
  5888  001A78                     u2391:
  5889  001A78  EF42  F00D         	goto	l3344
  5890  001A7C                     u2390:
  5891  001A7C  6C03               	negf	___awmod@divisor^0,c
  5892  001A7E  1E04               	comf	(___awmod@divisor+1)^0,f,c
  5893  001A80  B0D8               	btfsc	status,0,c
  5894  001A82  2A04               	incf	(___awmod@divisor+1)^0,f,c
  5895  001A84                     l3344:
  5896  001A84  5003               	movf	___awmod@divisor^0,w,c
  5897  001A86  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  5898  001A88  B4D8               	btfsc	status,2,c
  5899  001A8A  EF49  F00D         	goto	u2401
  5900  001A8E  EF4B  F00D         	goto	u2400
  5901  001A92                     u2401:
  5902  001A92  EF6F  F00D         	goto	l3360
  5903  001A96                     u2400:
  5904  001A96  0E01               	movlw	1
  5905  001A98  6E05               	movwf	___awmod@counter^0,c
  5906  001A9A  EF53  F00D         	goto	l3350
  5907  001A9E                     l3348:
  5908  001A9E  90D8               	bcf	status,0,c
  5909  001AA0  3603               	rlcf	___awmod@divisor^0,f,c
  5910  001AA2  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  5911  001AA4  2A05               	incf	___awmod@counter^0,f,c
  5912  001AA6                     l3350:
  5913  001AA6  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5914  001AA8  EF58  F00D         	goto	u2411
  5915  001AAC  EF5A  F00D         	goto	u2410
  5916  001AB0                     u2411:
  5917  001AB0  EF4F  F00D         	goto	l3348
  5918  001AB4                     u2410:
  5919  001AB4                     l3352:
  5920  001AB4  5003               	movf	___awmod@divisor^0,w,c
  5921  001AB6  5C01               	subwf	___awmod@dividend^0,w,c
  5922  001AB8  5004               	movf	(___awmod@divisor+1)^0,w,c
  5923  001ABA  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  5924  001ABC  A0D8               	btfss	status,0,c
  5925  001ABE  EF63  F00D         	goto	u2421
  5926  001AC2  EF65  F00D         	goto	u2420
  5927  001AC6                     u2421:
  5928  001AC6  EF69  F00D         	goto	l3356
  5929  001ACA                     u2420:
  5930  001ACA  5003               	movf	___awmod@divisor^0,w,c
  5931  001ACC  5E01               	subwf	___awmod@dividend^0,f,c
  5932  001ACE  5004               	movf	(___awmod@divisor+1)^0,w,c
  5933  001AD0  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  5934  001AD2                     l3356:
  5935  001AD2  90D8               	bcf	status,0,c
  5936  001AD4  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  5937  001AD6  3203               	rrcf	___awmod@divisor^0,f,c
  5938  001AD8  2E05               	decfsz	___awmod@counter^0,f,c
  5939  001ADA  EF5A  F00D         	goto	l3352
  5940  001ADE                     l3360:
  5941  001ADE  5006               	movf	___awmod@sign^0,w,c
  5942  001AE0  B4D8               	btfsc	status,2,c
  5943  001AE2  EF75  F00D         	goto	u2431
  5944  001AE6  EF77  F00D         	goto	u2430
  5945  001AEA                     u2431:
  5946  001AEA  EF7B  F00D         	goto	l3364
  5947  001AEE                     u2430:
  5948  001AEE  6C01               	negf	___awmod@dividend^0,c
  5949  001AF0  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5950  001AF2  B0D8               	btfsc	status,0,c
  5951  001AF4  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5952  001AF6                     l3364:
  5953  001AF6  C001  F001         	movff	___awmod@dividend,?___awmod
  5954  001AFA  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5955  001AFE  0012               	return		;funcret
  5956  001B00                     __end_of___awmod:
  5957                           	opt callstack 0
  5958                           
  5959 ;; *************** function ___awdiv *****************
  5960 ;; Defined at:
  5961 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  5962 ;; Parameters:    Size  Location     Type
  5963 ;;  dividend        2    0[COMRAM] int 
  5964 ;;  divisor         2    2[COMRAM] int 
  5965 ;; Auto vars:     Size  Location     Type
  5966 ;;  quotient        2    6[COMRAM] int 
  5967 ;;  sign            1    5[COMRAM] unsigned char 
  5968 ;;  counter         1    4[COMRAM] unsigned char 
  5969 ;; Return value:  Size  Location     Type
  5970 ;;                  2    0[COMRAM] int 
  5971 ;; Registers used:
  5972 ;;		wreg, status,2, status,0
  5973 ;; Tracked objects:
  5974 ;;		On entry : 0/0
  5975 ;;		On exit  : 0/0
  5976 ;;		Unchanged: 0/0
  5977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5978 ;;      Params:         4       0       0       0       0       0       0       0       0
  5979 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5980 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5981 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5982 ;;Total ram usage:        8 bytes
  5983 ;; Hardware stack levels used:    1
  5984 ;; Hardware stack levels required when called:    1
  5985 ;; This function calls:
  5986 ;;		Nothing
  5987 ;; This function is called by:
  5988 ;;		_setRtc
  5989 ;; This function uses a non-reentrant model
  5990 ;;
  5991                           
  5992                           	psect	text29
  5993  001826                     __ptext29:
  5994                           	opt callstack 0
  5995  001826                     ___awdiv:
  5996                           	opt callstack 26
  5997  001826  0E00               	movlw	0
  5998  001828  6E06               	movwf	___awdiv@sign^0,c
  5999  00182A  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  6000  00182C  EF1C  F00C         	goto	u2320
  6001  001830  EF1A  F00C         	goto	u2321
  6002  001834                     u2321:
  6003  001834  EF22  F00C         	goto	l3296
  6004  001838                     u2320:
  6005  001838  6C03               	negf	___awdiv@divisor^0,c
  6006  00183A  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  6007  00183C  B0D8               	btfsc	status,0,c
  6008  00183E  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  6009  001840  0E01               	movlw	1
  6010  001842  6E06               	movwf	___awdiv@sign^0,c
  6011  001844                     l3296:
  6012  001844  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  6013  001846  EF29  F00C         	goto	u2330
  6014  00184A  EF27  F00C         	goto	u2331
  6015  00184E                     u2331:
  6016  00184E  EF2F  F00C         	goto	l3302
  6017  001852                     u2330:
  6018  001852  6C01               	negf	___awdiv@dividend^0,c
  6019  001854  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  6020  001856  B0D8               	btfsc	status,0,c
  6021  001858  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  6022  00185A  0E01               	movlw	1
  6023  00185C  1A06               	xorwf	___awdiv@sign^0,f,c
  6024  00185E                     l3302:
  6025  00185E  0E00               	movlw	0
  6026  001860  6E08               	movwf	(___awdiv@quotient+1)^0,c
  6027  001862  0E00               	movlw	0
  6028  001864  6E07               	movwf	___awdiv@quotient^0,c
  6029  001866  5003               	movf	___awdiv@divisor^0,w,c
  6030  001868  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  6031  00186A  B4D8               	btfsc	status,2,c
  6032  00186C  EF3A  F00C         	goto	u2341
  6033  001870  EF3C  F00C         	goto	u2340
  6034  001874                     u2341:
  6035  001874  EF64  F00C         	goto	l3324
  6036  001878                     u2340:
  6037  001878  0E01               	movlw	1
  6038  00187A  6E05               	movwf	___awdiv@counter^0,c
  6039  00187C  EF44  F00C         	goto	l3310
  6040  001880                     l3308:
  6041  001880  90D8               	bcf	status,0,c
  6042  001882  3603               	rlcf	___awdiv@divisor^0,f,c
  6043  001884  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  6044  001886  2A05               	incf	___awdiv@counter^0,f,c
  6045  001888                     l3310:
  6046  001888  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  6047  00188A  EF49  F00C         	goto	u2351
  6048  00188E  EF4B  F00C         	goto	u2350
  6049  001892                     u2351:
  6050  001892  EF40  F00C         	goto	l3308
  6051  001896                     u2350:
  6052  001896                     l3312:
  6053  001896  90D8               	bcf	status,0,c
  6054  001898  3607               	rlcf	___awdiv@quotient^0,f,c
  6055  00189A  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  6056  00189C  5003               	movf	___awdiv@divisor^0,w,c
  6057  00189E  5C01               	subwf	___awdiv@dividend^0,w,c
  6058  0018A0  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6059  0018A2  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  6060  0018A4  A0D8               	btfss	status,0,c
  6061  0018A6  EF57  F00C         	goto	u2361
  6062  0018AA  EF59  F00C         	goto	u2360
  6063  0018AE                     u2361:
  6064  0018AE  EF5E  F00C         	goto	l3320
  6065  0018B2                     u2360:
  6066  0018B2  5003               	movf	___awdiv@divisor^0,w,c
  6067  0018B4  5E01               	subwf	___awdiv@dividend^0,f,c
  6068  0018B6  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6069  0018B8  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  6070  0018BA  8007               	bsf	___awdiv@quotient^0,0,c
  6071  0018BC                     l3320:
  6072  0018BC  90D8               	bcf	status,0,c
  6073  0018BE  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  6074  0018C0  3203               	rrcf	___awdiv@divisor^0,f,c
  6075  0018C2  2E05               	decfsz	___awdiv@counter^0,f,c
  6076  0018C4  EF4B  F00C         	goto	l3312
  6077  0018C8                     l3324:
  6078  0018C8  5006               	movf	___awdiv@sign^0,w,c
  6079  0018CA  B4D8               	btfsc	status,2,c
  6080  0018CC  EF6A  F00C         	goto	u2371
  6081  0018D0  EF6C  F00C         	goto	u2370
  6082  0018D4                     u2371:
  6083  0018D4  EF70  F00C         	goto	l3328
  6084  0018D8                     u2370:
  6085  0018D8  6C07               	negf	___awdiv@quotient^0,c
  6086  0018DA  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  6087  0018DC  B0D8               	btfsc	status,0,c
  6088  0018DE  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  6089  0018E0                     l3328:
  6090  0018E0  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6091  0018E4  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6092  0018E8  0012               	return		;funcret
  6093  0018EA                     __end_of___awdiv:
  6094                           	opt callstack 0
  6095                           
  6096 ;; *************** function _dameDatosSistema *****************
  6097 ;; Defined at:
  6098 ;;		line 592 in file "main.c"
  6099 ;; Parameters:    Size  Location     Type
  6100 ;;		None
  6101 ;; Auto vars:     Size  Location     Type
  6102 ;;  i               2   79[BANK0 ] int 
  6103 ;;  buffer         50   29[BANK0 ] unsigned char [50]
  6104 ;; Return value:  Size  Location     Type
  6105 ;;                  1    wreg      void 
  6106 ;; Registers used:
  6107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6108 ;; Tracked objects:
  6109 ;;		On entry : 0/0
  6110 ;;		On exit  : 0/0
  6111 ;;		Unchanged: 0/0
  6112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6113 ;;      Params:         0       0       0       0       0       0       0       0       0
  6114 ;;      Locals:         0      52       0       0       0       0       0       0       0
  6115 ;;      Temps:          0       9       0       0       0       0       0       0       0
  6116 ;;      Totals:         0      61       0       0       0       0       0       0       0
  6117 ;;Total ram usage:       61 bytes
  6118 ;; Hardware stack levels used:    1
  6119 ;; Hardware stack levels required when called:    9
  6120 ;; This function calls:
  6121 ;;		_UART_printf
  6122 ;;		_UART_write
  6123 ;;		_sprintf
  6124 ;; This function is called by:
  6125 ;;		_sistemaPrincipal
  6126 ;; This function uses a non-reentrant model
  6127 ;;
  6128                           
  6129                           	psect	text30
  6130  00113C                     __ptext30:
  6131                           	opt callstack 0
  6132  00113C                     _dameDatosSistema:
  6133                           	opt callstack 20
  6134  00113C                     
  6135                           ;main.c: 594:     char buffer[50];;main.c: 596:     UART_write('I');
  6136  00113C  0E49               	movlw	73
  6137  00113E  EC2B  F013         	call	_UART_write
  6138  001142                     
  6139                           ;main.c: 598:     UART_printf("\r\n\nHora | Regar(1 si 0 no) | Minutos de riego \r\n\n")
      +                          ;
  6140  001142  0E7E               	movlw	low STR_26
  6141  001144  6E02               	movwf	UART_printf@cadena^0,c
  6142  001146  0E7C               	movlw	high STR_26
  6143  001148  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6144  00114A  EC67  F010         	call	_UART_printf	;wreg free
  6145  00114E                     
  6146                           ;main.c: 600:     for (int i = 0; i < 24; i++) {
  6147  00114E  0E00               	movlw	0
  6148  001150  0100               	movlb	0	; () banked
  6149  001152  6FB0               	movwf	(dameDatosSistema@i+1)& (0+255),b
  6150  001154  0E00               	movlw	0
  6151  001156  6FAF               	movwf	dameDatosSistema@i& (0+255),b
  6152  001158                     l3644:
  6153                           
  6154                           ; BSR set to: 0
  6155                           ;main.c: 602:         sprintf(buffer, "%d | %d | %d \r\n", horarios[i].hora, horarios[i]
      +                          .regar,
  6156  001158  0E7D               	movlw	low dameDatosSistema@buffer
  6157  00115A  6F60               	movwf	sprintf@s& (0+255),b
  6158  00115C  0E00               	movlw	high dameDatosSistema@buffer
  6159  00115E  6F61               	movwf	(sprintf@s+1)& (0+255),b
  6160  001160  0ECC               	movlw	low STR_27
  6161  001162  6F62               	movwf	sprintf@fmt& (0+255),b
  6162  001164  0E7F               	movlw	high STR_27
  6163  001166  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  6164  001168  0E00               	movlw	low _horarios
  6165  00116A  6F74               	movwf	??_dameDatosSistema& (0+255),b
  6166  00116C  0E01               	movlw	high _horarios
  6167  00116E  6F75               	movwf	(??_dameDatosSistema+1)& (0+255),b
  6168  001170  90D8               	bcf	status,0,c
  6169  001172  35AF               	rlcf	dameDatosSistema@i& (0+255),w,b
  6170  001174  6ED9               	movwf	fsr2l,c
  6171  001176  35B0               	rlcf	(dameDatosSistema@i+1)& (0+255),w,b
  6172  001178  6EDA               	movwf	fsr2h,c
  6173  00117A  90D8               	bcf	status,0,c
  6174  00117C  36D9               	rlcf	fsr2l,f,c
  6175  00117E  36DA               	rlcf	fsr2h,f,c
  6176  001180  5174               	movf	??_dameDatosSistema& (0+255),w,b
  6177  001182  26D9               	addwf	fsr2l,f,c
  6178  001184  5175               	movf	(??_dameDatosSistema+1)& (0+255),w,b
  6179  001186  22DA               	addwfc	fsr2h,f,c
  6180  001188  50DF               	movf	indf2,w,c
  6181  00118A  6F76               	movwf	(??_dameDatosSistema+2)& (0+255),b
  6182  00118C  5176               	movf	(??_dameDatosSistema+2)& (0+255),w,b
  6183  00118E  6F64               	movwf	(?_sprintf+4)& (0+255),b
  6184  001190  6B65               	clrf	(?_sprintf+5)& (0+255),b
  6185  001192  0E00               	movlw	low _horarios
  6186  001194  6F77               	movwf	(??_dameDatosSistema+3)& (0+255),b
  6187  001196  0E01               	movlw	high _horarios
  6188  001198  6F78               	movwf	(??_dameDatosSistema+4)& (0+255),b
  6189  00119A  0E01               	movlw	1
  6190  00119C  2777               	addwf	(??_dameDatosSistema+3)& (0+255),f,b
  6191  00119E  0E00               	movlw	0
  6192  0011A0  2378               	addwfc	(??_dameDatosSistema+4)& (0+255),f,b
  6193  0011A2  90D8               	bcf	status,0,c
  6194  0011A4  35AF               	rlcf	dameDatosSistema@i& (0+255),w,b
  6195  0011A6  6ED9               	movwf	fsr2l,c
  6196  0011A8  35B0               	rlcf	(dameDatosSistema@i+1)& (0+255),w,b
  6197  0011AA  6EDA               	movwf	fsr2h,c
  6198  0011AC  90D8               	bcf	status,0,c
  6199  0011AE  36D9               	rlcf	fsr2l,f,c
  6200  0011B0  36DA               	rlcf	fsr2h,f,c
  6201  0011B2  5177               	movf	(??_dameDatosSistema+3)& (0+255),w,b
  6202  0011B4  26D9               	addwf	fsr2l,f,c
  6203  0011B6  5178               	movf	(??_dameDatosSistema+4)& (0+255),w,b
  6204  0011B8  22DA               	addwfc	fsr2h,f,c
  6205  0011BA  50DF               	movf	indf2,w,c
  6206  0011BC  6F79               	movwf	(??_dameDatosSistema+5)& (0+255),b
  6207  0011BE  5179               	movf	(??_dameDatosSistema+5)& (0+255),w,b
  6208  0011C0  6F66               	movwf	(?_sprintf+6)& (0+255),b
  6209  0011C2  6B67               	clrf	(?_sprintf+7)& (0+255),b
  6210  0011C4  0E00               	movlw	low _horarios
  6211  0011C6  6F7A               	movwf	(??_dameDatosSistema+6)& (0+255),b
  6212  0011C8  0E01               	movlw	high _horarios
  6213  0011CA  6F7B               	movwf	(??_dameDatosSistema+7)& (0+255),b
  6214  0011CC  0E03               	movlw	3
  6215  0011CE  277A               	addwf	(??_dameDatosSistema+6)& (0+255),f,b
  6216  0011D0  0E00               	movlw	0
  6217  0011D2  237B               	addwfc	(??_dameDatosSistema+7)& (0+255),f,b
  6218  0011D4  90D8               	bcf	status,0,c
  6219  0011D6  35AF               	rlcf	dameDatosSistema@i& (0+255),w,b
  6220  0011D8  6ED9               	movwf	fsr2l,c
  6221  0011DA  35B0               	rlcf	(dameDatosSistema@i+1)& (0+255),w,b
  6222  0011DC  6EDA               	movwf	fsr2h,c
  6223  0011DE  90D8               	bcf	status,0,c
  6224  0011E0  36D9               	rlcf	fsr2l,f,c
  6225  0011E2  36DA               	rlcf	fsr2h,f,c
  6226  0011E4  517A               	movf	(??_dameDatosSistema+6)& (0+255),w,b
  6227  0011E6  26D9               	addwf	fsr2l,f,c
  6228  0011E8  517B               	movf	(??_dameDatosSistema+7)& (0+255),w,b
  6229  0011EA  22DA               	addwfc	fsr2h,f,c
  6230  0011EC  50DF               	movf	indf2,w,c
  6231  0011EE  6F7C               	movwf	(??_dameDatosSistema+8)& (0+255),b
  6232  0011F0  517C               	movf	(??_dameDatosSistema+8)& (0+255),w,b
  6233  0011F2  6F68               	movwf	(?_sprintf+8)& (0+255),b
  6234  0011F4  6B69               	clrf	(?_sprintf+9)& (0+255),b
  6235  0011F6  EC1C  F011         	call	_sprintf	;wreg free
  6236  0011FA                     
  6237                           ;main.c: 605:         UART_printf(buffer);
  6238  0011FA  0E7D               	movlw	low dameDatosSistema@buffer
  6239  0011FC  6E02               	movwf	UART_printf@cadena^0,c
  6240  0011FE  0E00               	movlw	high dameDatosSistema@buffer
  6241  001200  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6242  001202  EC67  F010         	call	_UART_printf	;wreg free
  6243  001206                     
  6244                           ;main.c: 607:     }
  6245  001206  0100               	movlb	0	; () banked
  6246  001208  4BAF               	infsnz	dameDatosSistema@i& (0+255),f,b
  6247  00120A  2BB0               	incf	(dameDatosSistema@i+1)& (0+255),f,b
  6248  00120C                     
  6249                           ; BSR set to: 0
  6250  00120C  BFB0               	btfsc	(dameDatosSistema@i+1)& (0+255),7,b
  6251  00120E  EF12  F009         	goto	u2701
  6252  001212  51B0               	movf	(dameDatosSistema@i+1)& (0+255),w,b
  6253  001214  E109               	bnz	u2700
  6254  001216  0E18               	movlw	24
  6255  001218  5DAF               	subwf	dameDatosSistema@i& (0+255),w,b
  6256  00121A  A0D8               	btfss	status,0,c
  6257  00121C  EF12  F009         	goto	u2701
  6258  001220  EF14  F009         	goto	u2700
  6259  001224                     u2701:
  6260  001224  EFAC  F008         	goto	l3644
  6261  001228                     u2700:
  6262  001228                     
  6263                           ; BSR set to: 0
  6264                           ;main.c: 609:     UART_write('I');
  6265  001228  0E49               	movlw	73
  6266  00122A  EC2B  F013         	call	_UART_write
  6267  00122E  0012               	return		;funcret
  6268  001230                     __end_of_dameDatosSistema:
  6269                           	opt callstack 0
  6270                           
  6271 ;; *************** function _sprintf *****************
  6272 ;; Defined at:
  6273 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  6274 ;; Parameters:    Size  Location     Type
  6275 ;;  s               2    0[BANK0 ] PTR unsigned char 
  6276 ;;		 -> mostrarDatosSensoresWIFI@buffer(50), mostrarDatosSensores@buffer(50), dameDatosSistema@buffer(50), lecturaWifi@b
      +uffer(50), 
  6277 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  6278 ;;		 -> STR_35(29), STR_34(32), STR_33(45), STR_32(45), 
  6279 ;;		 -> STR_31(29), STR_30(32), STR_27(16), STR_14(51), 
  6280 ;; Auto vars:     Size  Location     Type
  6281 ;;  f               6   14[BANK0 ] struct _IO_FILE
  6282 ;;  ap              2   12[BANK0 ] PTR void [1]
  6283 ;;		 -> ?_sprintf(2), 
  6284 ;;  ret             2    0        int 
  6285 ;; Return value:  Size  Location     Type
  6286 ;;                  2    0[BANK0 ] int 
  6287 ;; Registers used:
  6288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6289 ;; Tracked objects:
  6290 ;;		On entry : 0/0
  6291 ;;		On exit  : 0/0
  6292 ;;		Unchanged: 0/0
  6293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6294 ;;      Params:         0      10       0       0       0       0       0       0       0
  6295 ;;      Locals:         0      10       0       0       0       0       0       0       0
  6296 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6297 ;;      Totals:         0      20       0       0       0       0       0       0       0
  6298 ;;Total ram usage:       20 bytes
  6299 ;; Hardware stack levels used:    1
  6300 ;; Hardware stack levels required when called:    8
  6301 ;; This function calls:
  6302 ;;		_vfprintf
  6303 ;; This function is called by:
  6304 ;;		_lecturaWifi
  6305 ;;		_dameDatosSistema
  6306 ;;		_mostrarDatosSensores
  6307 ;;		_mostrarDatosSensoresWIFI
  6308 ;; This function uses a non-reentrant model
  6309 ;;
  6310                           
  6311                           	psect	text31
  6312  002238                     __ptext31:
  6313                           	opt callstack 0
  6314  002238                     _sprintf:
  6315                           	opt callstack 20
  6316  002238  0E64               	movlw	low (?_sprintf+4)
  6317  00223A  0100               	movlb	0	; () banked
  6318  00223C  6F6C               	movwf	sprintf@ap& (0+255),b
  6319  00223E  0E00               	movlw	high (?_sprintf+4)
  6320  002240  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  6321  002242  C060  F06E         	movff	sprintf@s,sprintf@f
  6322  002246  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  6323  00224A                     
  6324                           ; BSR set to: 0
  6325  00224A  0E00               	movlw	0
  6326  00224C  6F71               	movwf	(sprintf@f+3)& (0+255),b
  6327  00224E  0E00               	movlw	0
  6328  002250  6F70               	movwf	(sprintf@f+2)& (0+255),b
  6329  002252                     
  6330                           ; BSR set to: 0
  6331  002252  0E00               	movlw	0
  6332  002254  6F73               	movwf	(sprintf@f+5)& (0+255),b
  6333  002256  0E00               	movlw	0
  6334  002258  6F72               	movwf	(sprintf@f+4)& (0+255),b
  6335  00225A                     
  6336                           ; BSR set to: 0
  6337  00225A  0E6E               	movlw	low sprintf@f
  6338  00225C  6E51               	movwf	vfprintf@fp^0,c
  6339  00225E  0E00               	movlw	high sprintf@f
  6340  002260  6E52               	movwf	(vfprintf@fp+1)^0,c
  6341  002262  C062  F053         	movff	sprintf@fmt,vfprintf@fmt
  6342  002266  C063  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6343  00226A  0E6C               	movlw	low sprintf@ap
  6344  00226C  6E55               	movwf	vfprintf@ap^0,c
  6345  00226E  0E00               	movlw	high sprintf@ap
  6346  002270  6E56               	movwf	(vfprintf@ap+1)^0,c
  6347  002272  EC05  F010         	call	_vfprintf	;wreg free
  6348  002276  0100               	movlb	0	; () banked
  6349  002278  5170               	movf	(sprintf@f+2)& (0+255),w,b
  6350  00227A  2560               	addwf	sprintf@s& (0+255),w,b
  6351  00227C  6ED9               	movwf	fsr2l,c
  6352  00227E  5171               	movf	(sprintf@f+3)& (0+255),w,b
  6353  002280  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  6354  002282  6EDA               	movwf	fsr2h,c
  6355  002284  0E00               	movlw	0
  6356  002286  6EDF               	movwf	indf2,c
  6357  002288                     
  6358                           ; BSR set to: 0
  6359  002288  0012               	return		;funcret
  6360  00228A                     __end_of_sprintf:
  6361                           	opt callstack 0
  6362                           
  6363 ;; *************** function _vfprintf *****************
  6364 ;; Defined at:
  6365 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6366 ;; Parameters:    Size  Location     Type
  6367 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  6368 ;;		 -> sprintf@f(6), 
  6369 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  6370 ;;		 -> STR_35(29), STR_34(32), STR_33(45), STR_32(45), 
  6371 ;;		 -> STR_31(29), STR_30(32), STR_27(16), STR_14(51), 
  6372 ;;  ap              2   84[COMRAM] PTR PTR void 
  6373 ;;		 -> sprintf@ap(2), 
  6374 ;; Auto vars:     Size  Location     Type
  6375 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  6376 ;;		 -> STR_35(29), STR_34(32), STR_33(45), STR_32(45), 
  6377 ;;		 -> STR_31(29), STR_30(32), STR_27(16), STR_14(51), 
  6378 ;; Return value:  Size  Location     Type
  6379 ;;                  2   80[COMRAM] int 
  6380 ;; Registers used:
  6381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6382 ;; Tracked objects:
  6383 ;;		On entry : 0/0
  6384 ;;		On exit  : 0/0
  6385 ;;		Unchanged: 0/0
  6386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6387 ;;      Params:         6       0       0       0       0       0       0       0       0
  6388 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6389 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6390 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6391 ;;Total ram usage:        8 bytes
  6392 ;; Hardware stack levels used:    1
  6393 ;; Hardware stack levels required when called:    7
  6394 ;; This function calls:
  6395 ;;		_vfpfcnvrt
  6396 ;; This function is called by:
  6397 ;;		_sprintf
  6398 ;; This function uses a non-reentrant model
  6399 ;;
  6400                           
  6401                           	psect	text32
  6402  00200A                     __ptext32:
  6403                           	opt callstack 0
  6404  00200A                     _vfprintf:
  6405                           	opt callstack 20
  6406  00200A                     
  6407                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6408  00200A  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  6409  00200E  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6410  002012                     
  6411                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  6412  002012  0E00               	movlw	0
  6413  002014  0100               	movlb	0	; () banked
  6414  002016  6FE1               	movwf	(_nout+1)& (0+255),b
  6415  002018  0E00               	movlw	0
  6416  00201A  6FE0               	movwf	_nout& (0+255),b
  6417                           
  6418                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6419  00201C  EF23  F010         	goto	l3034
  6420  002020                     l3032:
  6421                           
  6422                           ; BSR set to: 0
  6423                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  6424  002020  C051  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  6425  002024  C052  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6426  002028  0E57               	movlw	low vfprintf@cfmt
  6427  00202A  6E42               	movwf	vfpfcnvrt@fmt^0,c
  6428  00202C  0E00               	movlw	high vfprintf@cfmt
  6429  00202E  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  6430  002030  C055  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  6431  002034  C056  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6432  002038  ECB1  F002         	call	_vfpfcnvrt	;wreg free
  6433  00203C  5040               	movf	?_vfpfcnvrt^0,w,c
  6434  00203E  0100               	movlb	0	; () banked
  6435  002040  27E0               	addwf	_nout& (0+255),f,b
  6436  002042  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  6437  002044  23E1               	addwfc	(_nout+1)& (0+255),f,b
  6438  002046                     l3034:
  6439                           
  6440                           ; BSR set to: 0
  6441                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6442  002046  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  6443  00204A  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6444  00204E                     	if	0	;tblptru may be non-zero
  6445  00204E                     	endif
  6446  00204E                     	if	0	;tblptru may be non-zero
  6447  00204E                     	endif
  6448  00204E  0008               	tblrd		*
  6449  002050  50F5               	movf	tablat,w,c
  6450  002052  0900               	iorlw	0
  6451  002054  A4D8               	btfss	status,2,c
  6452  002056  EF2F  F010         	goto	u2091
  6453  00205A  EF31  F010         	goto	u2090
  6454  00205E                     u2091:
  6455  00205E  EF10  F010         	goto	l3032
  6456  002062                     u2090:
  6457  002062                     
  6458                           ; BSR set to: 0
  6459                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  6460  002062  C0E0  F051         	movff	_nout,?_vfprintf
  6461  002066  C0E1  F052         	movff	_nout+1,?_vfprintf+1
  6462  00206A                     
  6463                           ; BSR set to: 0
  6464  00206A  0012               	return		;funcret
  6465  00206C                     __end_of_vfprintf:
  6466                           	opt callstack 0
  6467                           
  6468 ;; *************** function _vfpfcnvrt *****************
  6469 ;; Defined at:
  6470 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6471 ;; Parameters:    Size  Location     Type
  6472 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  6473 ;;		 -> sprintf@f(6), 
  6474 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  6475 ;;		 -> vfprintf@cfmt(2), 
  6476 ;;  ap              2   67[COMRAM] PTR PTR void 
  6477 ;;		 -> sprintf@ap(2), 
  6478 ;; Auto vars:     Size  Location     Type
  6479 ;;  ll              8   71[COMRAM] long long 
  6480 ;;  llu             8    0        unsigned long long 
  6481 ;;  f               4    0        unsigned long long 
  6482 ;;  vp              3    0        PTR void 
  6483 ;;  ct              3    0        unsigned char [3]
  6484 ;;  cp              3    0        PTR unsigned char 
  6485 ;;  i               2    0        int 
  6486 ;;  done            2    0        int 
  6487 ;;  c               1   79[COMRAM] unsigned char 
  6488 ;; Return value:  Size  Location     Type
  6489 ;;                  2   63[COMRAM] int 
  6490 ;; Registers used:
  6491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6492 ;; Tracked objects:
  6493 ;;		On entry : 0/0
  6494 ;;		On exit  : 0/0
  6495 ;;		Unchanged: 0/0
  6496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6497 ;;      Params:         6       0       0       0       0       0       0       0       0
  6498 ;;      Locals:         9       0       0       0       0       0       0       0       0
  6499 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6500 ;;      Totals:        17       0       0       0       0       0       0       0       0
  6501 ;;Total ram usage:       17 bytes
  6502 ;; Hardware stack levels used:    1
  6503 ;; Hardware stack levels required when called:    6
  6504 ;; This function calls:
  6505 ;;		_ctoa
  6506 ;;		_dtoa
  6507 ;;		_fputc
  6508 ;; This function is called by:
  6509 ;;		_vfprintf
  6510 ;; This function uses a non-reentrant model
  6511 ;;
  6512                           
  6513                           	psect	text33
  6514  000562                     __ptext33:
  6515                           	opt callstack 0
  6516  000562                     _vfpfcnvrt:
  6517                           	opt callstack 20
  6518  000562                     
  6519                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  6520  000562  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6521  000566  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6522  00056A  CFDE FFF6          	movff	postinc2,tblptrl
  6523  00056E  CFDD FFF7          	movff	postdec2,tblptrh
  6524  000572                     	if	0	;tblptru may be non-zero
  6525  000572                     	endif
  6526  000572                     	if	0	;tblptru may be non-zero
  6527  000572                     	endif
  6528  000572  0008               	tblrd		*
  6529  000574  50F5               	movf	tablat,w,c
  6530  000576  0A25               	xorlw	37
  6531  000578  A4D8               	btfss	status,2,c
  6532  00057A  EFC1  F002         	goto	u1921
  6533  00057E  EFC3  F002         	goto	u1920
  6534  000582                     u1921:
  6535  000582  EFA8  F003         	goto	l2934
  6536  000586                     u1920:
  6537  000586                     
  6538                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  6539  000586  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6540  00058A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6541  00058E  2ADE               	incf	postinc2,f,c
  6542  000590  0E00               	movlw	0
  6543  000592  22DD               	addwfc	postdec2,f,c
  6544  000594                     
  6545                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  6546  000594  0E00               	movlw	0
  6547  000596  0100               	movlb	0	; () banked
  6548  000598  6FE3               	movwf	(_width+1)& (0+255),b
  6549  00059A  0E00               	movlw	0
  6550  00059C  6FE2               	movwf	_width& (0+255),b
  6551  00059E  C0E2  F0E6         	movff	_width,_flags
  6552  0005A2  C0E3  F0E7         	movff	_width+1,_flags+1
  6553  0005A6                     
  6554                           ; BSR set to: 0
  6555                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  6556  0005A6  69E4               	setf	_prec& (0+255),b
  6557  0005A8  69E5               	setf	(_prec+1)& (0+255),b
  6558  0005AA                     
  6559                           ; BSR set to: 0
  6560                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  6561  0005AA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6562  0005AE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6563  0005B2  CFDE FFF6          	movff	postinc2,tblptrl
  6564  0005B6  CFDD FFF7          	movff	postdec2,tblptrh
  6565  0005BA                     	if	0	;tblptru may be non-zero
  6566  0005BA                     	endif
  6567  0005BA                     	if	0	;tblptru may be non-zero
  6568  0005BA                     	endif
  6569  0005BA  0008               	tblrd		*
  6570  0005BC  50F5               	movf	tablat,w,c
  6571  0005BE  0A63               	xorlw	99
  6572  0005C0  A4D8               	btfss	status,2,c
  6573  0005C2  EFE5  F002         	goto	u1931
  6574  0005C6  EFE7  F002         	goto	u1930
  6575  0005CA                     u1931:
  6576  0005CA  EF0E  F003         	goto	l2908
  6577  0005CE                     u1930:
  6578  0005CE                     
  6579                           ; BSR set to: 0
  6580                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  6581  0005CE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6582  0005D2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6583  0005D6  2ADE               	incf	postinc2,f,c
  6584  0005D8  0E00               	movlw	0
  6585  0005DA  22DD               	addwfc	postdec2,f,c
  6586                           
  6587                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6588  0005DC  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6589  0005E0  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6590  0005E4  CFDF F046          	movff	indf2,??_vfpfcnvrt
  6591  0005E8  0E02               	movlw	2
  6592  0005EA  26DE               	addwf	postinc2,f,c
  6593  0005EC  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  6594  0005F0  0E00               	movlw	0
  6595  0005F2  22DD               	addwfc	postdec2,f,c
  6596  0005F4  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6597  0005F8  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6598  0005FC  50DF               	movf	indf2,w,c
  6599  0005FE  6E50               	movwf	vfpfcnvrt@c^0,c
  6600  000600                     
  6601                           ; BSR set to: 0
  6602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  6603  000600  C040  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  6604  000604  C041  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  6605  000608  C050  F01E         	movff	vfpfcnvrt@c,ctoa@c
  6606  00060C  ECC4  F010         	call	_ctoa	;wreg free
  6607  000610  C01C  F040         	movff	?_ctoa,?_vfpfcnvrt
  6608  000614  C01D  F041         	movff	?_ctoa+1,?_vfpfcnvrt+1
  6609  000618  EFC3  F003         	goto	l509
  6610  00061C                     l2908:
  6611                           
  6612                           ; BSR set to: 0
  6613                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6614  00061C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6615  000620  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6616  000624  CFDE FFF6          	movff	postinc2,tblptrl
  6617  000628  CFDD FFF7          	movff	postdec2,tblptrh
  6618  00062C                     	if	0	;tblptru may be non-zero
  6619  00062C                     	endif
  6620  00062C                     	if	0	;tblptru may be non-zero
  6621  00062C                     	endif
  6622  00062C  0008               	tblrd		*
  6623  00062E  50F5               	movf	tablat,w,c
  6624  000630  0A64               	xorlw	100
  6625  000632  B4D8               	btfsc	status,2,c
  6626  000634  EF1E  F003         	goto	u1941
  6627  000638  EF20  F003         	goto	u1940
  6628  00063C                     u1941:
  6629  00063C  EF32  F003         	goto	l2912
  6630  000640                     u1940:
  6631  000640                     
  6632                           ; BSR set to: 0
  6633  000640  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6634  000644  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6635  000648  CFDE FFF6          	movff	postinc2,tblptrl
  6636  00064C  CFDD FFF7          	movff	postdec2,tblptrh
  6637  000650                     	if	0	;tblptru may be non-zero
  6638  000650                     	endif
  6639  000650                     	if	0	;tblptru may be non-zero
  6640  000650                     	endif
  6641  000650  0008               	tblrd		*
  6642  000652  50F5               	movf	tablat,w,c
  6643  000654  0A69               	xorlw	105
  6644  000656  A4D8               	btfss	status,2,c
  6645  000658  EF30  F003         	goto	u1951
  6646  00065C  EF32  F003         	goto	u1950
  6647  000660                     u1951:
  6648  000660  EF72  F003         	goto	l2918
  6649  000664                     u1950:
  6650  000664                     l2912:
  6651                           
  6652                           ; BSR set to: 0
  6653                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  6654  000664  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6655  000668  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6656  00066C  2ADE               	incf	postinc2,f,c
  6657  00066E  0E00               	movlw	0
  6658  000670  22DD               	addwfc	postdec2,f,c
  6659                           
  6660                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6661  000672  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6662  000676  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6663  00067A  CFDF F046          	movff	indf2,??_vfpfcnvrt
  6664  00067E  0E02               	movlw	2
  6665  000680  26DE               	addwf	postinc2,f,c
  6666  000682  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  6667  000686  0E00               	movlw	0
  6668  000688  22DD               	addwfc	postdec2,f,c
  6669  00068A  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6670  00068E  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6671  000692  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  6672  000696  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  6673  00069A  0E00               	movlw	0
  6674  00069C  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  6675  00069E  0EFF               	movlw	-1
  6676  0006A0  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  6677  0006A2  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  6678  0006A4  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  6679  0006A6  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  6680  0006A8  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  6681  0006AA  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  6682  0006AC                     
  6683                           ; BSR set to: 0
  6684                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  6685  0006AC  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  6686  0006B0  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6687  0006B4  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  6688  0006B8  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  6689  0006BC  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  6690  0006C0  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  6691  0006C4  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  6692  0006C8  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  6693  0006CC  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  6694  0006D0  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  6695  0006D4  EC09  F000         	call	_dtoa	;wreg free
  6696  0006D8  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  6697  0006DC  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  6698  0006E0  EFC3  F003         	goto	l509
  6699  0006E4                     l2918:
  6700                           
  6701                           ; BSR set to: 0
  6702                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  6703  0006E4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6704  0006E8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6705  0006EC  CFDE FFF6          	movff	postinc2,tblptrl
  6706  0006F0  CFDD FFF7          	movff	postdec2,tblptrh
  6707  0006F4                     	if	0	;tblptru may be non-zero
  6708  0006F4                     	endif
  6709  0006F4                     	if	0	;tblptru may be non-zero
  6710  0006F4                     	endif
  6711  0006F4  0008               	tblrd		*
  6712  0006F6  50F5               	movf	tablat,w,c
  6713  0006F8  0A25               	xorlw	37
  6714  0006FA  A4D8               	btfss	status,2,c
  6715  0006FC  EF82  F003         	goto	u1961
  6716  000700  EF84  F003         	goto	u1960
  6717  000704                     u1961:
  6718  000704  EF9B  F003         	goto	l2928
  6719  000708                     u1960:
  6720  000708                     
  6721                           ; BSR set to: 0
  6722                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  6723  000708  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6724  00070C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6725  000710  2ADE               	incf	postinc2,f,c
  6726  000712  0E00               	movlw	0
  6727  000714  22DD               	addwfc	postdec2,f,c
  6728  000716                     
  6729                           ; BSR set to: 0
  6730                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  6731  000716  0E00               	movlw	0
  6732  000718  6E02               	movwf	(fputc@c+1)^0,c
  6733  00071A  0E25               	movlw	37
  6734  00071C  6E01               	movwf	fputc@c^0,c
  6735  00071E  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6736  000722  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6737  000726  EC4B  F00B         	call	_fputc	;wreg free
  6738  00072A                     l2924:
  6739                           
  6740                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  6741  00072A  0E00               	movlw	0
  6742  00072C  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  6743  00072E  0E01               	movlw	1
  6744  000730  6E40               	movwf	?_vfpfcnvrt^0,c
  6745  000732  EFC3  F003         	goto	l509
  6746  000736                     l2928:
  6747                           
  6748                           ; BSR set to: 0
  6749                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  6750  000736  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6751  00073A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6752  00073E  2ADE               	incf	postinc2,f,c
  6753  000740  0E00               	movlw	0
  6754  000742  22DD               	addwfc	postdec2,f,c
  6755  000744                     
  6756                           ; BSR set to: 0
  6757                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  6758  000744  0E00               	movlw	0
  6759  000746  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  6760  000748  0E00               	movlw	0
  6761  00074A  6E40               	movwf	?_vfpfcnvrt^0,c
  6762  00074C  EFC3  F003         	goto	l509
  6763  000750                     l2934:
  6764                           
  6765                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  6766  000750  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6767  000754  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6768  000758  CFDE FFF6          	movff	postinc2,tblptrl
  6769  00075C  CFDD FFF7          	movff	postdec2,tblptrh
  6770  000760                     	if	0	;tblptru may be non-zero
  6771  000760                     	endif
  6772  000760                     	if	0	;tblptru may be non-zero
  6773  000760                     	endif
  6774  000760  0008               	tblrd		*
  6775  000762  50F5               	movf	tablat,w,c
  6776  000764  6E01               	movwf	fputc@c^0,c
  6777  000766  6A02               	clrf	(fputc@c+1)^0,c
  6778  000768  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6779  00076C  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6780  000770  EC4B  F00B         	call	_fputc	;wreg free
  6781  000774                     
  6782                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  6783  000774  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6784  000778  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6785  00077C  2ADE               	incf	postinc2,f,c
  6786  00077E  0E00               	movlw	0
  6787  000780  22DD               	addwfc	postdec2,f,c
  6788  000782  EF95  F003         	goto	l2924
  6789  000786                     l509:
  6790  000786  0012               	return		;funcret
  6791  000788                     __end_of_vfpfcnvrt:
  6792                           	opt callstack 0
  6793                           
  6794 ;; *************** function _dtoa *****************
  6795 ;; Defined at:
  6796 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6797 ;; Parameters:    Size  Location     Type
  6798 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6799 ;;		 -> sprintf@f(6), 
  6800 ;;  d               8   29[COMRAM] long long 
  6801 ;; Auto vars:     Size  Location     Type
  6802 ;;  n               8   53[COMRAM] long long 
  6803 ;;  i               2   61[COMRAM] int 
  6804 ;;  s               2   51[COMRAM] int 
  6805 ;;  w               2   49[COMRAM] int 
  6806 ;;  p               2   47[COMRAM] int 
  6807 ;; Return value:  Size  Location     Type
  6808 ;;                  2   27[COMRAM] int 
  6809 ;; Registers used:
  6810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6811 ;; Tracked objects:
  6812 ;;		On entry : 0/0
  6813 ;;		On exit  : 0/0
  6814 ;;		Unchanged: 0/0
  6815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6816 ;;      Params:        10       0       0       0       0       0       0       0       0
  6817 ;;      Locals:        18       0       0       0       0       0       0       0       0
  6818 ;;      Temps:          8       0       0       0       0       0       0       0       0
  6819 ;;      Totals:        36       0       0       0       0       0       0       0       0
  6820 ;;Total ram usage:       36 bytes
  6821 ;; Hardware stack levels used:    1
  6822 ;; Hardware stack levels required when called:    5
  6823 ;; This function calls:
  6824 ;;		___aodiv
  6825 ;;		___aomod
  6826 ;;		_abs
  6827 ;;		_pad
  6828 ;; This function is called by:
  6829 ;;		_vfpfcnvrt
  6830 ;; This function uses a non-reentrant model
  6831 ;;
  6832                           
  6833                           	psect	text34
  6834  000012                     __ptext34:
  6835                           	opt callstack 0
  6836  000012                     _dtoa:
  6837                           	opt callstack 20
  6838  000012                     
  6839                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  6840  000012  C01E  F036         	movff	dtoa@d,dtoa@n
  6841  000016  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  6842  00001A  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  6843  00001E  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  6844  000022  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  6845  000026  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  6846  00002A  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  6847  00002E  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  6848  000032                     
  6849                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  6850  000032  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  6851  000034  EF1E  F000         	goto	u1741
  6852  000038  EF21  F000         	goto	u1740
  6853  00003C                     u1741:
  6854  00003C  0E01               	movlw	1
  6855  00003E  EF22  F000         	goto	u1750
  6856  000042                     u1740:
  6857  000042  0E00               	movlw	0
  6858  000044                     u1750:
  6859  000044  6E34               	movwf	dtoa@s^0,c
  6860  000046  6A35               	clrf	(dtoa@s+1)^0,c
  6861                           
  6862                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  6863  000048  5034               	movf	dtoa@s^0,w,c
  6864  00004A  1035               	iorwf	(dtoa@s+1)^0,w,c
  6865  00004C  B4D8               	btfsc	status,2,c
  6866  00004E  EF2B  F000         	goto	u1761
  6867  000052  EF2D  F000         	goto	u1760
  6868  000056                     u1761:
  6869  000056  EF3D  F000         	goto	l2828
  6870  00005A                     u1760:
  6871  00005A                     
  6872                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  6873  00005A  1E3D               	comf	(dtoa@n+7)^0,f,c
  6874  00005C  1E3C               	comf	(dtoa@n+6)^0,f,c
  6875  00005E  1E3B               	comf	(dtoa@n+5)^0,f,c
  6876  000060  1E3A               	comf	(dtoa@n+4)^0,f,c
  6877  000062  1E39               	comf	(dtoa@n+3)^0,f,c
  6878  000064  1E38               	comf	(dtoa@n+2)^0,f,c
  6879  000066  1E37               	comf	(dtoa@n+1)^0,f,c
  6880  000068  6C36               	negf	dtoa@n^0,c
  6881  00006A  0E00               	movlw	0
  6882  00006C  2237               	addwfc	(dtoa@n+1)^0,f,c
  6883  00006E  2238               	addwfc	(dtoa@n+2)^0,f,c
  6884  000070  2239               	addwfc	(dtoa@n+3)^0,f,c
  6885  000072  223A               	addwfc	(dtoa@n+4)^0,f,c
  6886  000074  223B               	addwfc	(dtoa@n+5)^0,f,c
  6887  000076  223C               	addwfc	(dtoa@n+6)^0,f,c
  6888  000078  223D               	addwfc	(dtoa@n+7)^0,f,c
  6889  00007A                     l2828:
  6890                           
  6891                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  6892  00007A  0100               	movlb	0	; () banked
  6893  00007C  BFE5               	btfsc	(_prec+1)& (0+255),7,b
  6894  00007E  EF43  F000         	goto	u1771
  6895  000082  EF45  F000         	goto	u1770
  6896  000086                     u1771:
  6897  000086  EF46  F000         	goto	l2832
  6898  00008A                     u1770:
  6899  00008A                     
  6900                           ; BSR set to: 0
  6901                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  6902  00008A  93E6               	bcf	_flags& (0+255),1,b
  6903  00008C                     l2832:
  6904                           
  6905                           ; BSR set to: 0
  6906                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  6907  00008C  BFE5               	btfsc	(_prec+1)& (0+255),7,b
  6908  00008E  EF53  F000         	goto	u1780
  6909  000092  51E5               	movf	(_prec+1)& (0+255),w,b
  6910  000094  E106               	bnz	u1781
  6911  000096  05E4               	decf	_prec& (0+255),w,b
  6912  000098  B0D8               	btfsc	status,0,c
  6913  00009A  EF51  F000         	goto	u1781
  6914  00009E  EF53  F000         	goto	u1780
  6915  0000A2                     u1781:
  6916  0000A2  EF59  F000         	goto	l484
  6917  0000A6                     u1780:
  6918  0000A6                     
  6919                           ; BSR set to: 0
  6920  0000A6  0E00               	movlw	0
  6921  0000A8  6E31               	movwf	(dtoa@p+1)^0,c
  6922  0000AA  0E01               	movlw	1
  6923  0000AC  6E30               	movwf	dtoa@p^0,c
  6924  0000AE  EF5D  F000         	goto	l486
  6925  0000B2                     l484:
  6926                           
  6927                           ; BSR set to: 0
  6928  0000B2  C0E4  F030         	movff	_prec,dtoa@p
  6929  0000B6  C0E5  F031         	movff	_prec+1,dtoa@p+1
  6930  0000BA                     l486:
  6931                           
  6932                           ; BSR set to: 0
  6933                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  6934  0000BA  C0E2  F032         	movff	_width,dtoa@w
  6935  0000BE  C0E3  F033         	movff	_width+1,dtoa@w+1
  6936  0000C2                     
  6937                           ; BSR set to: 0
  6938                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  6939  0000C2  5034               	movf	dtoa@s^0,w,c
  6940  0000C4  1035               	iorwf	(dtoa@s+1)^0,w,c
  6941  0000C6  A4D8               	btfss	status,2,c
  6942  0000C8  EF68  F000         	goto	u1791
  6943  0000CC  EF6A  F000         	goto	u1790
  6944  0000D0                     u1791:
  6945  0000D0  EF71  F000         	goto	l2840
  6946  0000D4                     u1790:
  6947  0000D4                     
  6948                           ; BSR set to: 0
  6949  0000D4  A5E6               	btfss	_flags& (0+255),2,b
  6950  0000D6  EF6F  F000         	goto	u1801
  6951  0000DA  EF71  F000         	goto	u1800
  6952  0000DE                     u1801:
  6953  0000DE  EF74  F000         	goto	l2842
  6954  0000E2                     u1800:
  6955  0000E2                     l2840:
  6956                           
  6957                           ; BSR set to: 0
  6958                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  6959  0000E2  0632               	decf	dtoa@w^0,f,c
  6960  0000E4  A0D8               	btfss	status,0,c
  6961  0000E6  0633               	decf	(dtoa@w+1)^0,f,c
  6962  0000E8                     l2842:
  6963                           
  6964                           ; BSR set to: 0
  6965                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  6966  0000E8  0E00               	movlw	0
  6967  0000EA  6E3F               	movwf	(dtoa@i+1)^0,c
  6968  0000EC  0E1F               	movlw	31
  6969  0000EE  6E3E               	movwf	dtoa@i^0,c
  6970  0000F0                     
  6971                           ; BSR set to: 0
  6972                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  6973  0000F0  0E00               	movlw	0
  6974  0000F2  0101               	movlb	1	; () banked
  6975  0000F4  6F8F               	movwf	(_dbuf+31)& (0+255),b
  6976                           
  6977                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6978  0000F6  EFF9  F000         	goto	l2856
  6979  0000FA                     l2846:
  6980                           
  6981                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  6982  0000FA  063E               	decf	dtoa@i^0,f,c
  6983  0000FC  A0D8               	btfss	status,0,c
  6984  0000FE  063F               	decf	(dtoa@i+1)^0,f,c
  6985  000100                     
  6986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  6987  000100  0E70               	movlw	low _dbuf
  6988  000102  243E               	addwf	dtoa@i^0,w,c
  6989  000104  6ED9               	movwf	fsr2l,c
  6990  000106  0E01               	movlw	high _dbuf
  6991  000108  203F               	addwfc	(dtoa@i+1)^0,w,c
  6992  00010A  6EDA               	movwf	fsr2h,c
  6993  00010C  C036  F001         	movff	dtoa@n,___aomod@dividend
  6994  000110  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  6995  000114  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  6996  000118  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  6997  00011C  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  6998  000120  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  6999  000124  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  7000  000128  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  7001  00012C  0E0A               	movlw	10
  7002  00012E  6E09               	movwf	___aomod@divisor^0,c
  7003  000130  0E00               	movlw	0
  7004  000132  6E0A               	movwf	(___aomod@divisor+1)^0,c
  7005  000134  0E00               	movlw	0
  7006  000136  6E0B               	movwf	(___aomod@divisor+2)^0,c
  7007  000138  0E00               	movlw	0
  7008  00013A  6E0C               	movwf	(___aomod@divisor+3)^0,c
  7009  00013C  0E00               	movlw	0
  7010  00013E  6E0D               	movwf	(___aomod@divisor+4)^0,c
  7011  000140  0E00               	movlw	0
  7012  000142  6E0E               	movwf	(___aomod@divisor+5)^0,c
  7013  000144  0E00               	movlw	0
  7014  000146  6E0F               	movwf	(___aomod@divisor+6)^0,c
  7015  000148  0E00               	movlw	0
  7016  00014A  6E10               	movwf	(___aomod@divisor+7)^0,c
  7017  00014C  EC4C  F006         	call	___aomod	;wreg free
  7018  000150  C001  F026         	movff	?___aomod,??_dtoa
  7019  000154  C002  F027         	movff	?___aomod+1,??_dtoa+1
  7020  000158  C003  F028         	movff	?___aomod+2,??_dtoa+2
  7021  00015C  C004  F029         	movff	?___aomod+3,??_dtoa+3
  7022  000160  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  7023  000164  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  7024  000168  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  7025  00016C  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  7026  000170  C026  F013         	movff	??_dtoa,abs@a
  7027  000174  C028  F014         	movff	??_dtoa+2,abs@a+1
  7028  000178  EC41  F012         	call	_abs	;wreg free
  7029  00017C  5013               	movf	?_abs^0,w,c
  7030  00017E  0F30               	addlw	48
  7031  000180  6EDF               	movwf	indf2,c
  7032  000182                     
  7033                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  7034  000182  0630               	decf	dtoa@p^0,f,c
  7035  000184  A0D8               	btfss	status,0,c
  7036  000186  0631               	decf	(dtoa@p+1)^0,f,c
  7037  000188                     
  7038                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  7039  000188  0632               	decf	dtoa@w^0,f,c
  7040  00018A  A0D8               	btfss	status,0,c
  7041  00018C  0633               	decf	(dtoa@w+1)^0,f,c
  7042  00018E                     
  7043                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  7044  00018E  C036  F001         	movff	dtoa@n,___aodiv@dividend
  7045  000192  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  7046  000196  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  7047  00019A  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  7048  00019E  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  7049  0001A2  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  7050  0001A6  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  7051  0001AA  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  7052  0001AE  0E0A               	movlw	10
  7053  0001B0  6E09               	movwf	___aodiv@divisor^0,c
  7054  0001B2  0E00               	movlw	0
  7055  0001B4  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  7056  0001B6  0E00               	movlw	0
  7057  0001B8  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  7058  0001BA  0E00               	movlw	0
  7059  0001BC  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  7060  0001BE  0E00               	movlw	0
  7061  0001C0  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  7062  0001C2  0E00               	movlw	0
  7063  0001C4  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  7064  0001C6  0E00               	movlw	0
  7065  0001C8  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  7066  0001CA  0E00               	movlw	0
  7067  0001CC  6E10               	movwf	(___aodiv@divisor+7)^0,c
  7068  0001CE  ECD6  F004         	call	___aodiv	;wreg free
  7069  0001D2  C001  F036         	movff	?___aodiv,dtoa@n
  7070  0001D6  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  7071  0001DA  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  7072  0001DE  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  7073  0001E2  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  7074  0001E6  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  7075  0001EA  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  7076  0001EE  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  7077  0001F2                     l2856:
  7078                           
  7079                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7080  0001F2  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  7081  0001F4  EF04  F001         	goto	u1811
  7082  0001F8  503F               	movf	(dtoa@i+1)^0,w,c
  7083  0001FA  E108               	bnz	u1810
  7084  0001FC  043E               	decf	dtoa@i^0,w,c
  7085  0001FE  A0D8               	btfss	status,0,c
  7086  000200  EF04  F001         	goto	u1811
  7087  000204  EF06  F001         	goto	u1810
  7088  000208                     u1811:
  7089  000208  EF37  F001         	goto	l2866
  7090  00020C                     u1810:
  7091  00020C  5036               	movf	dtoa@n^0,w,c
  7092  00020E  1037               	iorwf	(dtoa@n+1)^0,w,c
  7093  000210  1038               	iorwf	(dtoa@n+2)^0,w,c
  7094  000212  1039               	iorwf	(dtoa@n+3)^0,w,c
  7095  000214  103A               	iorwf	(dtoa@n+4)^0,w,c
  7096  000216  103B               	iorwf	(dtoa@n+5)^0,w,c
  7097  000218  103C               	iorwf	(dtoa@n+6)^0,w,c
  7098  00021A  103D               	iorwf	(dtoa@n+7)^0,w,c
  7099  00021C  A4D8               	btfss	status,2,c
  7100  00021E  EF13  F001         	goto	u1821
  7101  000222  EF15  F001         	goto	u1820
  7102  000226                     u1821:
  7103  000226  EF7D  F000         	goto	l2846
  7104  00022A                     u1820:
  7105  00022A  BE31               	btfsc	(dtoa@p+1)^0,7,c
  7106  00022C  EF22  F001         	goto	u1830
  7107  000230  5031               	movf	(dtoa@p+1)^0,w,c
  7108  000232  E106               	bnz	u1831
  7109  000234  0430               	decf	dtoa@p^0,w,c
  7110  000236  B0D8               	btfsc	status,0,c
  7111  000238  EF20  F001         	goto	u1831
  7112  00023C  EF22  F001         	goto	u1830
  7113  000240                     u1831:
  7114  000240  EF7D  F000         	goto	l2846
  7115  000244                     u1830:
  7116  000244  BE33               	btfsc	(dtoa@w+1)^0,7,c
  7117  000246  EF2D  F001         	goto	u1841
  7118  00024A  5033               	movf	(dtoa@w+1)^0,w,c
  7119  00024C  E108               	bnz	u1840
  7120  00024E  0432               	decf	dtoa@w^0,w,c
  7121  000250  A0D8               	btfss	status,0,c
  7122  000252  EF2D  F001         	goto	u1841
  7123  000256  EF2F  F001         	goto	u1840
  7124  00025A                     u1841:
  7125  00025A  EF37  F001         	goto	l2866
  7126  00025E                     u1840:
  7127  00025E  0100               	movlb	0	; () banked
  7128  000260  B3E6               	btfsc	_flags& (0+255),1,b
  7129  000262  EF35  F001         	goto	u1851
  7130  000266  EF37  F001         	goto	u1850
  7131  00026A                     u1851:
  7132  00026A  EF7D  F000         	goto	l2846
  7133  00026E                     u1850:
  7134  00026E                     l2866:
  7135                           
  7136                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  7137  00026E  5034               	movf	dtoa@s^0,w,c
  7138  000270  1035               	iorwf	(dtoa@s+1)^0,w,c
  7139  000272  A4D8               	btfss	status,2,c
  7140  000274  EF3E  F001         	goto	u1861
  7141  000278  EF40  F001         	goto	u1860
  7142  00027C                     u1861:
  7143  00027C  EF48  F001         	goto	l2870
  7144  000280                     u1860:
  7145  000280  0100               	movlb	0	; () banked
  7146  000282  A5E6               	btfss	_flags& (0+255),2,b
  7147  000284  EF46  F001         	goto	u1871
  7148  000288  EF48  F001         	goto	u1870
  7149  00028C                     u1871:
  7150  00028C  EF66  F001         	goto	l2880
  7151  000290                     u1870:
  7152  000290                     l2870:
  7153                           
  7154                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  7155  000290  063E               	decf	dtoa@i^0,f,c
  7156  000292  A0D8               	btfss	status,0,c
  7157  000294  063F               	decf	(dtoa@i+1)^0,f,c
  7158  000296                     
  7159                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  7160  000296  5034               	movf	dtoa@s^0,w,c
  7161  000298  1035               	iorwf	(dtoa@s+1)^0,w,c
  7162  00029A  A4D8               	btfss	status,2,c
  7163  00029C  EF52  F001         	goto	u1881
  7164  0002A0  EF54  F001         	goto	u1880
  7165  0002A4                     u1881:
  7166  0002A4  EF5A  F001         	goto	l2876
  7167  0002A8                     u1880:
  7168  0002A8  0E00               	movlw	0
  7169  0002AA  6E2F               	movwf	(_dtoa$1044+1)^0,c
  7170  0002AC  0E2B               	movlw	43
  7171  0002AE  6E2E               	movwf	_dtoa$1044^0,c
  7172  0002B0  EF5E  F001         	goto	l2878
  7173  0002B4                     l2876:
  7174  0002B4  0E00               	movlw	0
  7175  0002B6  6E2F               	movwf	(_dtoa$1044+1)^0,c
  7176  0002B8  0E2D               	movlw	45
  7177  0002BA  6E2E               	movwf	_dtoa$1044^0,c
  7178  0002BC                     l2878:
  7179  0002BC  0E70               	movlw	low _dbuf
  7180  0002BE  243E               	addwf	dtoa@i^0,w,c
  7181  0002C0  6ED9               	movwf	fsr2l,c
  7182  0002C2  0E01               	movlw	high _dbuf
  7183  0002C4  203F               	addwfc	(dtoa@i+1)^0,w,c
  7184  0002C6  6EDA               	movwf	fsr2h,c
  7185  0002C8  C02E  FFDF         	movff	_dtoa$1044,indf2
  7186  0002CC                     l2880:
  7187                           
  7188                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  7189  0002CC  C01C  F011         	movff	dtoa@fp,pad@fp
  7190  0002D0  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  7191  0002D4  0E70               	movlw	low _dbuf
  7192  0002D6  243E               	addwf	dtoa@i^0,w,c
  7193  0002D8  6E13               	movwf	pad@buf^0,c
  7194  0002DA  0E01               	movlw	high _dbuf
  7195  0002DC  203F               	addwfc	(dtoa@i+1)^0,w,c
  7196  0002DE  6E14               	movwf	(pad@buf+1)^0,c
  7197  0002E0  C032  F015         	movff	dtoa@w,pad@p
  7198  0002E4  C033  F016         	movff	dtoa@w+1,pad@p+1
  7199  0002E8  ECB0  F00B         	call	_pad	;wreg free
  7200  0002EC  C011  F01C         	movff	?_pad,?_dtoa
  7201  0002F0  C012  F01D         	movff	?_pad+1,?_dtoa+1
  7202  0002F4  0012               	return		;funcret
  7203  0002F6                     __end_of_dtoa:
  7204                           	opt callstack 0
  7205                           
  7206 ;; *************** function _abs *****************
  7207 ;; Defined at:
  7208 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  7209 ;; Parameters:    Size  Location     Type
  7210 ;;  a               2   18[COMRAM] int 
  7211 ;; Auto vars:     Size  Location     Type
  7212 ;;		None
  7213 ;; Return value:  Size  Location     Type
  7214 ;;                  2   18[COMRAM] int 
  7215 ;; Registers used:
  7216 ;;		wreg, status,2, status,0
  7217 ;; Tracked objects:
  7218 ;;		On entry : 0/0
  7219 ;;		On exit  : 0/0
  7220 ;;		Unchanged: 0/0
  7221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7222 ;;      Params:         2       0       0       0       0       0       0       0       0
  7223 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7224 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7225 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7226 ;;Total ram usage:        4 bytes
  7227 ;; Hardware stack levels used:    1
  7228 ;; Hardware stack levels required when called:    1
  7229 ;; This function calls:
  7230 ;;		Nothing
  7231 ;; This function is called by:
  7232 ;;		_dtoa
  7233 ;; This function uses a non-reentrant model
  7234 ;;
  7235                           
  7236                           	psect	text35
  7237  002482                     __ptext35:
  7238                           	opt callstack 0
  7239  002482                     _abs:
  7240                           	opt callstack 23
  7241  002482  BE14               	btfsc	(abs@a+1)^0,7,c
  7242  002484  EF4E  F012         	goto	u1590
  7243  002488  5014               	movf	(abs@a+1)^0,w,c
  7244  00248A  E106               	bnz	u1591
  7245  00248C  0413               	decf	abs@a^0,w,c
  7246  00248E  B0D8               	btfsc	status,0,c
  7247  002490  EF4C  F012         	goto	u1591
  7248  002494  EF4E  F012         	goto	u1590
  7249  002498                     u1591:
  7250  002498  EF5C  F012         	goto	l1197
  7251  00249C                     u1590:
  7252  00249C  C013  F015         	movff	abs@a,??_abs
  7253  0024A0  C014  F016         	movff	abs@a+1,??_abs+1
  7254  0024A4  1E15               	comf	??_abs^0,f,c
  7255  0024A6  1E16               	comf	(??_abs+1)^0,f,c
  7256  0024A8  4A15               	infsnz	??_abs^0,f,c
  7257  0024AA  2A16               	incf	(??_abs+1)^0,f,c
  7258  0024AC  C015  F013         	movff	??_abs,?_abs
  7259  0024B0  C016  F014         	movff	??_abs+1,?_abs+1
  7260  0024B4  EF60  F012         	goto	l1200
  7261  0024B8                     l1197:
  7262  0024B8  C013  F013         	movff	abs@a,?_abs
  7263  0024BC  C014  F014         	movff	abs@a+1,?_abs+1
  7264  0024C0                     l1200:
  7265  0024C0  0012               	return		;funcret
  7266  0024C2                     __end_of_abs:
  7267                           	opt callstack 0
  7268                           
  7269 ;; *************** function ___aomod *****************
  7270 ;; Defined at:
  7271 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  7272 ;; Parameters:    Size  Location     Type
  7273 ;;  dividend        8    0[COMRAM] long long 
  7274 ;;  divisor         8    8[COMRAM] long long 
  7275 ;; Auto vars:     Size  Location     Type
  7276 ;;  sign            1   17[COMRAM] unsigned char 
  7277 ;;  counter         1   16[COMRAM] unsigned char 
  7278 ;; Return value:  Size  Location     Type
  7279 ;;                  8    0[COMRAM] long long 
  7280 ;; Registers used:
  7281 ;;		wreg, status,2, status,0
  7282 ;; Tracked objects:
  7283 ;;		On entry : 0/0
  7284 ;;		On exit  : 0/0
  7285 ;;		Unchanged: 0/0
  7286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7287 ;;      Params:        16       0       0       0       0       0       0       0       0
  7288 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7289 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7290 ;;      Totals:        18       0       0       0       0       0       0       0       0
  7291 ;;Total ram usage:       18 bytes
  7292 ;; Hardware stack levels used:    1
  7293 ;; Hardware stack levels required when called:    1
  7294 ;; This function calls:
  7295 ;;		Nothing
  7296 ;; This function is called by:
  7297 ;;		_dtoa
  7298 ;; This function uses a non-reentrant model
  7299 ;;
  7300                           
  7301                           	psect	text36
  7302  000C98                     __ptext36:
  7303                           	opt callstack 0
  7304  000C98                     ___aomod:
  7305                           	opt callstack 23
  7306  000C98  0E00               	movlw	0
  7307  000C9A  6E12               	movwf	___aomod@sign^0,c
  7308  000C9C  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  7309  000C9E  EF55  F006         	goto	u1670
  7310  000CA2  EF53  F006         	goto	u1671
  7311  000CA6                     u1671:
  7312  000CA6  EF67  F006         	goto	l2780
  7313  000CAA                     u1670:
  7314  000CAA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  7315  000CAC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  7316  000CAE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  7317  000CB0  1E05               	comf	(___aomod@dividend+4)^0,f,c
  7318  000CB2  1E04               	comf	(___aomod@dividend+3)^0,f,c
  7319  000CB4  1E03               	comf	(___aomod@dividend+2)^0,f,c
  7320  000CB6  1E02               	comf	(___aomod@dividend+1)^0,f,c
  7321  000CB8  6C01               	negf	___aomod@dividend^0,c
  7322  000CBA  0E00               	movlw	0
  7323  000CBC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  7324  000CBE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  7325  000CC0  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  7326  000CC2  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  7327  000CC4  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  7328  000CC6  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  7329  000CC8  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  7330  000CCA  0E01               	movlw	1
  7331  000CCC  6E12               	movwf	___aomod@sign^0,c
  7332  000CCE                     l2780:
  7333  000CCE  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  7334  000CD0  EF6E  F006         	goto	u1680
  7335  000CD4  EF6C  F006         	goto	u1681
  7336  000CD8                     u1681:
  7337  000CD8  EF7E  F006         	goto	l2784
  7338  000CDC                     u1680:
  7339  000CDC  1E10               	comf	(___aomod@divisor+7)^0,f,c
  7340  000CDE  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  7341  000CE0  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  7342  000CE2  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  7343  000CE4  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  7344  000CE6  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  7345  000CE8  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  7346  000CEA  6C09               	negf	___aomod@divisor^0,c
  7347  000CEC  0E00               	movlw	0
  7348  000CEE  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  7349  000CF0  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  7350  000CF2  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  7351  000CF4  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  7352  000CF6  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  7353  000CF8  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  7354  000CFA  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  7355  000CFC                     l2784:
  7356  000CFC  5009               	movf	___aomod@divisor^0,w,c
  7357  000CFE  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  7358  000D00  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  7359  000D02  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  7360  000D04  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  7361  000D06  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  7362  000D08  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  7363  000D0A  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  7364  000D0C  B4D8               	btfsc	status,2,c
  7365  000D0E  EF8B  F006         	goto	u1691
  7366  000D12  EF8D  F006         	goto	u1690
  7367  000D16                     u1691:
  7368  000D16  EFD5  F006         	goto	l2800
  7369  000D1A                     u1690:
  7370  000D1A  0E01               	movlw	1
  7371  000D1C  6E11               	movwf	___aomod@counter^0,c
  7372  000D1E  EF9B  F006         	goto	l2790
  7373  000D22                     l2788:
  7374  000D22  90D8               	bcf	status,0,c
  7375  000D24  3609               	rlcf	___aomod@divisor^0,f,c
  7376  000D26  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  7377  000D28  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  7378  000D2A  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  7379  000D2C  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  7380  000D2E  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  7381  000D30  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  7382  000D32  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  7383  000D34  2A11               	incf	___aomod@counter^0,f,c
  7384  000D36                     l2790:
  7385  000D36  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  7386  000D38  EFA0  F006         	goto	u1701
  7387  000D3C  EFA2  F006         	goto	u1700
  7388  000D40                     u1701:
  7389  000D40  EF91  F006         	goto	l2788
  7390  000D44                     u1700:
  7391  000D44                     l2792:
  7392  000D44  5009               	movf	___aomod@divisor^0,w,c
  7393  000D46  5C01               	subwf	___aomod@dividend^0,w,c
  7394  000D48  500A               	movf	(___aomod@divisor+1)^0,w,c
  7395  000D4A  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  7396  000D4C  500B               	movf	(___aomod@divisor+2)^0,w,c
  7397  000D4E  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  7398  000D50  500C               	movf	(___aomod@divisor+3)^0,w,c
  7399  000D52  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  7400  000D54  500D               	movf	(___aomod@divisor+4)^0,w,c
  7401  000D56  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  7402  000D58  500E               	movf	(___aomod@divisor+5)^0,w,c
  7403  000D5A  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  7404  000D5C  500F               	movf	(___aomod@divisor+6)^0,w,c
  7405  000D5E  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  7406  000D60  5010               	movf	(___aomod@divisor+7)^0,w,c
  7407  000D62  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  7408  000D64  A0D8               	btfss	status,0,c
  7409  000D66  EFB7  F006         	goto	u1711
  7410  000D6A  EFB9  F006         	goto	u1710
  7411  000D6E                     u1711:
  7412  000D6E  EFC9  F006         	goto	l2796
  7413  000D72                     u1710:
  7414  000D72  5009               	movf	___aomod@divisor^0,w,c
  7415  000D74  5E01               	subwf	___aomod@dividend^0,f,c
  7416  000D76  500A               	movf	(___aomod@divisor+1)^0,w,c
  7417  000D78  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  7418  000D7A  500B               	movf	(___aomod@divisor+2)^0,w,c
  7419  000D7C  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  7420  000D7E  500C               	movf	(___aomod@divisor+3)^0,w,c
  7421  000D80  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  7422  000D82  500D               	movf	(___aomod@divisor+4)^0,w,c
  7423  000D84  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  7424  000D86  500E               	movf	(___aomod@divisor+5)^0,w,c
  7425  000D88  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  7426  000D8A  500F               	movf	(___aomod@divisor+6)^0,w,c
  7427  000D8C  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  7428  000D8E  5010               	movf	(___aomod@divisor+7)^0,w,c
  7429  000D90  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  7430  000D92                     l2796:
  7431  000D92  90D8               	bcf	status,0,c
  7432  000D94  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  7433  000D96  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  7434  000D98  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  7435  000D9A  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  7436  000D9C  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  7437  000D9E  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  7438  000DA0  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  7439  000DA2  3209               	rrcf	___aomod@divisor^0,f,c
  7440  000DA4  2E11               	decfsz	___aomod@counter^0,f,c
  7441  000DA6  EFA2  F006         	goto	l2792
  7442  000DAA                     l2800:
  7443  000DAA  5012               	movf	___aomod@sign^0,w,c
  7444  000DAC  B4D8               	btfsc	status,2,c
  7445  000DAE  EFDB  F006         	goto	u1721
  7446  000DB2  EFDD  F006         	goto	u1720
  7447  000DB6                     u1721:
  7448  000DB6  EFED  F006         	goto	l2804
  7449  000DBA                     u1720:
  7450  000DBA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  7451  000DBC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  7452  000DBE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  7453  000DC0  1E05               	comf	(___aomod@dividend+4)^0,f,c
  7454  000DC2  1E04               	comf	(___aomod@dividend+3)^0,f,c
  7455  000DC4  1E03               	comf	(___aomod@dividend+2)^0,f,c
  7456  000DC6  1E02               	comf	(___aomod@dividend+1)^0,f,c
  7457  000DC8  6C01               	negf	___aomod@dividend^0,c
  7458  000DCA  0E00               	movlw	0
  7459  000DCC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  7460  000DCE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  7461  000DD0  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  7462  000DD2  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  7463  000DD4  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  7464  000DD6  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  7465  000DD8  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  7466  000DDA                     l2804:
  7467  000DDA  C001  F001         	movff	___aomod@dividend,?___aomod
  7468  000DDE  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  7469  000DE2  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  7470  000DE6  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  7471  000DEA  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  7472  000DEE  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  7473  000DF2  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  7474  000DF6  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  7475  000DFA  0012               	return		;funcret
  7476  000DFC                     __end_of___aomod:
  7477                           	opt callstack 0
  7478                           
  7479 ;; *************** function ___aodiv *****************
  7480 ;; Defined at:
  7481 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  7482 ;; Parameters:    Size  Location     Type
  7483 ;;  dividend        8    0[COMRAM] long long 
  7484 ;;  divisor         8    8[COMRAM] long long 
  7485 ;; Auto vars:     Size  Location     Type
  7486 ;;  quotient        8   18[COMRAM] long long 
  7487 ;;  sign            1   17[COMRAM] unsigned char 
  7488 ;;  counter         1   16[COMRAM] unsigned char 
  7489 ;; Return value:  Size  Location     Type
  7490 ;;                  8    0[COMRAM] long long 
  7491 ;; Registers used:
  7492 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7493 ;; Tracked objects:
  7494 ;;		On entry : 0/0
  7495 ;;		On exit  : 0/0
  7496 ;;		Unchanged: 0/0
  7497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7498 ;;      Params:        16       0       0       0       0       0       0       0       0
  7499 ;;      Locals:        10       0       0       0       0       0       0       0       0
  7500 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7501 ;;      Totals:        26       0       0       0       0       0       0       0       0
  7502 ;;Total ram usage:       26 bytes
  7503 ;; Hardware stack levels used:    1
  7504 ;; Hardware stack levels required when called:    1
  7505 ;; This function calls:
  7506 ;;		Nothing
  7507 ;; This function is called by:
  7508 ;;		_dtoa
  7509 ;; This function uses a non-reentrant model
  7510 ;;
  7511                           
  7512                           	psect	text37
  7513  0009AC                     __ptext37:
  7514                           	opt callstack 0
  7515  0009AC                     ___aodiv:
  7516                           	opt callstack 23
  7517  0009AC  0E00               	movlw	0
  7518  0009AE  6E12               	movwf	___aodiv@sign^0,c
  7519  0009B0  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  7520  0009B2  EFDF  F004         	goto	u1600
  7521  0009B6  EFDD  F004         	goto	u1601
  7522  0009BA                     u1601:
  7523  0009BA  EFF1  F004         	goto	l2736
  7524  0009BE                     u1600:
  7525  0009BE  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  7526  0009C0  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  7527  0009C2  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  7528  0009C4  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  7529  0009C6  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  7530  0009C8  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  7531  0009CA  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  7532  0009CC  6C09               	negf	___aodiv@divisor^0,c
  7533  0009CE  0E00               	movlw	0
  7534  0009D0  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  7535  0009D2  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  7536  0009D4  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  7537  0009D6  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  7538  0009D8  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  7539  0009DA  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  7540  0009DC  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  7541  0009DE  0E01               	movlw	1
  7542  0009E0  6E12               	movwf	___aodiv@sign^0,c
  7543  0009E2                     l2736:
  7544  0009E2  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  7545  0009E4  EFF8  F004         	goto	u1610
  7546  0009E8  EFF6  F004         	goto	u1611
  7547  0009EC                     u1611:
  7548  0009EC  EF0A  F005         	goto	l2742
  7549  0009F0                     u1610:
  7550  0009F0  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  7551  0009F2  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  7552  0009F4  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  7553  0009F6  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  7554  0009F8  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  7555  0009FA  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  7556  0009FC  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  7557  0009FE  6C01               	negf	___aodiv@dividend^0,c
  7558  000A00  0E00               	movlw	0
  7559  000A02  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  7560  000A04  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  7561  000A06  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  7562  000A08  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  7563  000A0A  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  7564  000A0C  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  7565  000A0E  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  7566  000A10  0E01               	movlw	1
  7567  000A12  1A12               	xorwf	___aodiv@sign^0,f,c
  7568  000A14                     l2742:
  7569  000A14  EE20  F013         	lfsr	2,___aodiv@quotient
  7570  000A18  0E07               	movlw	7
  7571  000A1A                     u1621:
  7572  000A1A  6ADE               	clrf	postinc2,c
  7573  000A1C  06E8               	decf	wreg,f,c
  7574  000A1E  E2FD               	bc	u1621
  7575  000A20  5009               	movf	___aodiv@divisor^0,w,c
  7576  000A22  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  7577  000A24  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  7578  000A26  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  7579  000A28  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  7580  000A2A  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  7581  000A2C  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  7582  000A2E  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  7583  000A30  B4D8               	btfsc	status,2,c
  7584  000A32  EF1D  F005         	goto	u1631
  7585  000A36  EF1F  F005         	goto	u1630
  7586  000A3A                     u1631:
  7587  000A3A  EF71  F005         	goto	l2764
  7588  000A3E                     u1630:
  7589  000A3E  0E01               	movlw	1
  7590  000A40  6E11               	movwf	___aodiv@counter^0,c
  7591  000A42  EF2D  F005         	goto	l2750
  7592  000A46                     l2748:
  7593  000A46  90D8               	bcf	status,0,c
  7594  000A48  3609               	rlcf	___aodiv@divisor^0,f,c
  7595  000A4A  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  7596  000A4C  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  7597  000A4E  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  7598  000A50  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  7599  000A52  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  7600  000A54  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  7601  000A56  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  7602  000A58  2A11               	incf	___aodiv@counter^0,f,c
  7603  000A5A                     l2750:
  7604  000A5A  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  7605  000A5C  EF32  F005         	goto	u1641
  7606  000A60  EF34  F005         	goto	u1640
  7607  000A64                     u1641:
  7608  000A64  EF23  F005         	goto	l2748
  7609  000A68                     u1640:
  7610  000A68                     l2752:
  7611  000A68  90D8               	bcf	status,0,c
  7612  000A6A  3613               	rlcf	___aodiv@quotient^0,f,c
  7613  000A6C  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  7614  000A6E  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  7615  000A70  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  7616  000A72  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  7617  000A74  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  7618  000A76  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  7619  000A78  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  7620  000A7A  5009               	movf	___aodiv@divisor^0,w,c
  7621  000A7C  5C01               	subwf	___aodiv@dividend^0,w,c
  7622  000A7E  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7623  000A80  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  7624  000A82  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7625  000A84  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  7626  000A86  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7627  000A88  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  7628  000A8A  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7629  000A8C  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  7630  000A8E  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7631  000A90  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  7632  000A92  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7633  000A94  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  7634  000A96  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7635  000A98  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  7636  000A9A  A0D8               	btfss	status,0,c
  7637  000A9C  EF52  F005         	goto	u1651
  7638  000AA0  EF54  F005         	goto	u1650
  7639  000AA4                     u1651:
  7640  000AA4  EF65  F005         	goto	l2760
  7641  000AA8                     u1650:
  7642  000AA8  5009               	movf	___aodiv@divisor^0,w,c
  7643  000AAA  5E01               	subwf	___aodiv@dividend^0,f,c
  7644  000AAC  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7645  000AAE  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  7646  000AB0  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7647  000AB2  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  7648  000AB4  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7649  000AB6  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  7650  000AB8  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7651  000ABA  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  7652  000ABC  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7653  000ABE  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  7654  000AC0  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7655  000AC2  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  7656  000AC4  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7657  000AC6  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  7658  000AC8  8013               	bsf	___aodiv@quotient^0,0,c
  7659  000ACA                     l2760:
  7660  000ACA  90D8               	bcf	status,0,c
  7661  000ACC  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  7662  000ACE  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  7663  000AD0  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  7664  000AD2  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  7665  000AD4  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  7666  000AD6  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  7667  000AD8  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  7668  000ADA  3209               	rrcf	___aodiv@divisor^0,f,c
  7669  000ADC  2E11               	decfsz	___aodiv@counter^0,f,c
  7670  000ADE  EF34  F005         	goto	l2752
  7671  000AE2                     l2764:
  7672  000AE2  5012               	movf	___aodiv@sign^0,w,c
  7673  000AE4  B4D8               	btfsc	status,2,c
  7674  000AE6  EF77  F005         	goto	u1661
  7675  000AEA  EF79  F005         	goto	u1660
  7676  000AEE                     u1661:
  7677  000AEE  EF89  F005         	goto	l2768
  7678  000AF2                     u1660:
  7679  000AF2  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  7680  000AF4  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  7681  000AF6  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  7682  000AF8  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  7683  000AFA  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  7684  000AFC  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  7685  000AFE  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  7686  000B00  6C13               	negf	___aodiv@quotient^0,c
  7687  000B02  0E00               	movlw	0
  7688  000B04  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  7689  000B06  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  7690  000B08  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  7691  000B0A  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  7692  000B0C  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  7693  000B0E  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  7694  000B10  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  7695  000B12                     l2768:
  7696  000B12  C013  F001         	movff	___aodiv@quotient,?___aodiv
  7697  000B16  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  7698  000B1A  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  7699  000B1E  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  7700  000B22  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  7701  000B26  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  7702  000B2A  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  7703  000B2E  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  7704  000B32  0012               	return		;funcret
  7705  000B34                     __end_of___aodiv:
  7706                           	opt callstack 0
  7707                           
  7708 ;; *************** function _ctoa *****************
  7709 ;; Defined at:
  7710 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7711 ;; Parameters:    Size  Location     Type
  7712 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7713 ;;		 -> sprintf@f(6), 
  7714 ;;  c               1   29[COMRAM] unsigned char 
  7715 ;; Auto vars:     Size  Location     Type
  7716 ;;  w               2   30[COMRAM] int 
  7717 ;;  l               2    0        int 
  7718 ;; Return value:  Size  Location     Type
  7719 ;;                  2   27[COMRAM] int 
  7720 ;; Registers used:
  7721 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7722 ;; Tracked objects:
  7723 ;;		On entry : 0/0
  7724 ;;		On exit  : 0/0
  7725 ;;		Unchanged: 0/0
  7726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7727 ;;      Params:         3       0       0       0       0       0       0       0       0
  7728 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7729 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7730 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7731 ;;Total ram usage:        5 bytes
  7732 ;; Hardware stack levels used:    1
  7733 ;; Hardware stack levels required when called:    5
  7734 ;; This function calls:
  7735 ;;		_pad
  7736 ;; This function is called by:
  7737 ;;		_vfpfcnvrt
  7738 ;; This function uses a non-reentrant model
  7739 ;;
  7740                           
  7741                           	psect	text38
  7742  002188                     __ptext38:
  7743                           	opt callstack 0
  7744  002188                     _ctoa:
  7745                           	opt callstack 20
  7746  002188                     
  7747                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  7748  002188  0100               	movlb	0	; () banked
  7749  00218A  51E2               	movf	_width& (0+255),w,b
  7750  00218C  11E3               	iorwf	(_width+1)& (0+255),w,b
  7751  00218E  A4D8               	btfss	status,2,c
  7752  002190  EFCC  F010         	goto	u1731
  7753  002194  EFCE  F010         	goto	u1730
  7754  002198                     u1731:
  7755  002198  EFD4  F010         	goto	l2812
  7756  00219C                     u1730:
  7757  00219C                     
  7758                           ; BSR set to: 0
  7759  00219C  C0E2  F01F         	movff	_width,ctoa@w
  7760  0021A0  C0E3  F020         	movff	_width+1,ctoa@w+1
  7761  0021A4  EFDA  F010         	goto	l2814
  7762  0021A8                     l2812:
  7763                           
  7764                           ; BSR set to: 0
  7765  0021A8  0EFF               	movlw	255
  7766  0021AA  25E2               	addwf	_width& (0+255),w,b
  7767  0021AC  6E1F               	movwf	ctoa@w^0,c
  7768  0021AE  0EFF               	movlw	255
  7769  0021B0  21E3               	addwfc	(_width+1)& (0+255),w,b
  7770  0021B2  6E20               	movwf	(ctoa@w+1)^0,c
  7771  0021B4                     l2814:
  7772                           
  7773                           ; BSR set to: 0
  7774                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  7775  0021B4  C01E  F170         	movff	ctoa@c,_dbuf
  7776  0021B8                     
  7777                           ; BSR set to: 0
  7778                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  7779  0021B8  0E00               	movlw	0
  7780  0021BA  0101               	movlb	1	; () banked
  7781  0021BC  6F71               	movwf	(_dbuf+1)& (0+255),b
  7782  0021BE                     
  7783                           ; BSR set to: 1
  7784                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  7785  0021BE  C01C  F011         	movff	ctoa@fp,pad@fp
  7786  0021C2  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  7787  0021C6  0E70               	movlw	low _dbuf
  7788  0021C8  6E13               	movwf	pad@buf^0,c
  7789  0021CA  0E01               	movlw	high _dbuf
  7790  0021CC  6E14               	movwf	(pad@buf+1)^0,c
  7791  0021CE  C01F  F015         	movff	ctoa@w,pad@p
  7792  0021D2  C020  F016         	movff	ctoa@w+1,pad@p+1
  7793  0021D6  ECB0  F00B         	call	_pad	;wreg free
  7794  0021DA  C011  F01C         	movff	?_pad,?_ctoa
  7795  0021DE  C012  F01D         	movff	?_pad+1,?_ctoa+1
  7796  0021E2  0012               	return		;funcret
  7797  0021E4                     __end_of_ctoa:
  7798                           	opt callstack 0
  7799                           
  7800 ;; *************** function _pad *****************
  7801 ;; Defined at:
  7802 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7803 ;; Parameters:    Size  Location     Type
  7804 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7805 ;;		 -> sprintf@f(6), 
  7806 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7807 ;;		 -> dbuf(32), 
  7808 ;;  p               2   20[COMRAM] int 
  7809 ;; Auto vars:     Size  Location     Type
  7810 ;;  w               2   25[COMRAM] int 
  7811 ;;  i               2   23[COMRAM] int 
  7812 ;; Return value:  Size  Location     Type
  7813 ;;                  2   16[COMRAM] int 
  7814 ;; Registers used:
  7815 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7816 ;; Tracked objects:
  7817 ;;		On entry : 0/0
  7818 ;;		On exit  : 0/0
  7819 ;;		Unchanged: 0/0
  7820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7821 ;;      Params:         6       0       0       0       0       0       0       0       0
  7822 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7823 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7824 ;;      Totals:        11       0       0       0       0       0       0       0       0
  7825 ;;Total ram usage:       11 bytes
  7826 ;; Hardware stack levels used:    1
  7827 ;; Hardware stack levels required when called:    4
  7828 ;; This function calls:
  7829 ;;		_fputc
  7830 ;;		_fputs
  7831 ;;		_strlen
  7832 ;; This function is called by:
  7833 ;;		_ctoa
  7834 ;;		_dtoa
  7835 ;; This function uses a non-reentrant model
  7836 ;;
  7837                           
  7838                           	psect	text39
  7839  001760                     __ptext39:
  7840                           	opt callstack 0
  7841  001760                     _pad:
  7842                           	opt callstack 20
  7843  001760                     
  7844                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  7845  001760  0100               	movlb	0	; () banked
  7846  001762  A1E6               	btfss	_flags& (0+255),0,b
  7847  001764  EFB6  F00B         	goto	u1551
  7848  001768  EFB8  F00B         	goto	u1550
  7849  00176C                     u1551:
  7850  00176C  EFC2  F00B         	goto	l2706
  7851  001770                     u1550:
  7852  001770                     
  7853                           ; BSR set to: 0
  7854                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  7855  001770  C013  F00A         	movff	pad@buf,fputs@s
  7856  001774  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7857  001778  C011  F00C         	movff	pad@fp,fputs@fp
  7858  00177C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7859  001780  ECFF  F011         	call	_fputs	;wreg free
  7860  001784                     l2706:
  7861                           
  7862                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  7863  001784  BE16               	btfsc	(pad@p+1)^0,7,c
  7864  001786  EFC7  F00B         	goto	u1561
  7865  00178A  EFC9  F00B         	goto	u1560
  7866  00178E                     u1561:
  7867  00178E  EFCF  F00B         	goto	l2710
  7868  001792                     u1560:
  7869  001792  C015  F01A         	movff	pad@p,pad@w
  7870  001796  C016  F01B         	movff	pad@p+1,pad@w+1
  7871  00179A  EFD3  F00B         	goto	l466
  7872  00179E                     l2710:
  7873  00179E  0E00               	movlw	0
  7874  0017A0  6E1B               	movwf	(pad@w+1)^0,c
  7875  0017A2  0E00               	movlw	0
  7876  0017A4  6E1A               	movwf	pad@w^0,c
  7877  0017A6                     l466:
  7878                           
  7879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  7880  0017A6  0E00               	movlw	0
  7881  0017A8  6E19               	movwf	(pad@i+1)^0,c
  7882  0017AA  0E00               	movlw	0
  7883  0017AC  6E18               	movwf	pad@i^0,c
  7884                           
  7885                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  7886  0017AE  EFE5  F00B         	goto	l2716
  7887  0017B2                     l2712:
  7888                           
  7889                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  7890  0017B2  0E00               	movlw	0
  7891  0017B4  6E02               	movwf	(fputc@c+1)^0,c
  7892  0017B6  0E20               	movlw	32
  7893  0017B8  6E01               	movwf	fputc@c^0,c
  7894  0017BA  C011  F003         	movff	pad@fp,fputc@fp
  7895  0017BE  C012  F004         	movff	pad@fp+1,fputc@fp+1
  7896  0017C2  EC4B  F00B         	call	_fputc	;wreg free
  7897  0017C6                     
  7898                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  7899  0017C6  4A18               	infsnz	pad@i^0,f,c
  7900  0017C8  2A19               	incf	(pad@i+1)^0,f,c
  7901  0017CA                     l2716:
  7902                           
  7903                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  7904  0017CA  501A               	movf	pad@w^0,w,c
  7905  0017CC  5C18               	subwf	pad@i^0,w,c
  7906  0017CE  5019               	movf	(pad@i+1)^0,w,c
  7907  0017D0  0A80               	xorlw	128
  7908  0017D2  6E17               	movwf	??_pad^0,c
  7909  0017D4  501B               	movf	(pad@w+1)^0,w,c
  7910  0017D6  0A80               	xorlw	128
  7911  0017D8  5817               	subwfb	??_pad^0,w,c
  7912  0017DA  A0D8               	btfss	status,0,c
  7913  0017DC  EFF2  F00B         	goto	u1571
  7914  0017E0  EFF4  F00B         	goto	u1570
  7915  0017E4                     u1571:
  7916  0017E4  EFD9  F00B         	goto	l2712
  7917  0017E8                     u1570:
  7918  0017E8                     
  7919                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  7920  0017E8  0100               	movlb	0	; () banked
  7921  0017EA  B1E6               	btfsc	_flags& (0+255),0,b
  7922  0017EC  EFFA  F00B         	goto	u1581
  7923  0017F0  EFFC  F00B         	goto	u1580
  7924  0017F4                     u1581:
  7925  0017F4  EF06  F00C         	goto	l2720
  7926  0017F8                     u1580:
  7927  0017F8                     
  7928                           ; BSR set to: 0
  7929                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  7930  0017F8  C013  F00A         	movff	pad@buf,fputs@s
  7931  0017FC  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7932  001800  C011  F00C         	movff	pad@fp,fputs@fp
  7933  001804  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7934  001808  ECFF  F011         	call	_fputs	;wreg free
  7935  00180C                     l2720:
  7936                           
  7937                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  7938  00180C  C013  F001         	movff	pad@buf,strlen@s
  7939  001810  C014  F002         	movff	pad@buf+1,strlen@s+1
  7940  001814  EC7F  F012         	call	_strlen	;wreg free
  7941  001818  501A               	movf	pad@w^0,w,c
  7942  00181A  2401               	addwf	?_strlen^0,w,c
  7943  00181C  6E11               	movwf	?_pad^0,c
  7944  00181E  501B               	movf	(pad@w+1)^0,w,c
  7945  001820  2002               	addwfc	(?_strlen+1)^0,w,c
  7946  001822  6E12               	movwf	(?_pad+1)^0,c
  7947  001824  0012               	return		;funcret
  7948  001826                     __end_of_pad:
  7949                           	opt callstack 0
  7950                           
  7951 ;; *************** function _strlen *****************
  7952 ;; Defined at:
  7953 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  7954 ;; Parameters:    Size  Location     Type
  7955 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7956 ;;		 -> dbuf(32), 
  7957 ;; Auto vars:     Size  Location     Type
  7958 ;;  a               2    2[COMRAM] PTR const unsigned char 
  7959 ;;		 -> dbuf(32), 
  7960 ;; Return value:  Size  Location     Type
  7961 ;;                  2    0[COMRAM] unsigned int 
  7962 ;; Registers used:
  7963 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7964 ;; Tracked objects:
  7965 ;;		On entry : 0/0
  7966 ;;		On exit  : 0/0
  7967 ;;		Unchanged: 0/0
  7968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7969 ;;      Params:         2       0       0       0       0       0       0       0       0
  7970 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7971 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7972 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7973 ;;Total ram usage:        4 bytes
  7974 ;; Hardware stack levels used:    1
  7975 ;; Hardware stack levels required when called:    1
  7976 ;; This function calls:
  7977 ;;		Nothing
  7978 ;; This function is called by:
  7979 ;;		_pad
  7980 ;; This function uses a non-reentrant model
  7981 ;;
  7982                           
  7983                           	psect	text40
  7984  0024FE                     __ptext40:
  7985                           	opt callstack 0
  7986  0024FE                     _strlen:
  7987                           	opt callstack 22
  7988  0024FE  C001  F003         	movff	strlen@s,strlen@a
  7989  002502  C002  F004         	movff	strlen@s+1,strlen@a+1
  7990  002506  EF87  F012         	goto	l2696
  7991  00250A                     l2694:
  7992  00250A  4A01               	infsnz	strlen@s^0,f,c
  7993  00250C  2A02               	incf	(strlen@s+1)^0,f,c
  7994  00250E                     l2696:
  7995  00250E  C001  FFD9         	movff	strlen@s,fsr2l
  7996  002512  C002  FFDA         	movff	strlen@s+1,fsr2h
  7997  002516  50DF               	movf	indf2,w,c
  7998  002518  A4D8               	btfss	status,2,c
  7999  00251A  EF91  F012         	goto	u1541
  8000  00251E  EF93  F012         	goto	u1540
  8001  002522                     u1541:
  8002  002522  EF85  F012         	goto	l2694
  8003  002526                     u1540:
  8004  002526  5003               	movf	strlen@a^0,w,c
  8005  002528  5C01               	subwf	strlen@s^0,w,c
  8006  00252A  6E01               	movwf	?_strlen^0,c
  8007  00252C  5004               	movf	(strlen@a+1)^0,w,c
  8008  00252E  5802               	subwfb	(strlen@s+1)^0,w,c
  8009  002530  6E02               	movwf	(?_strlen+1)^0,c
  8010  002532  0012               	return		;funcret
  8011  002534                     __end_of_strlen:
  8012                           	opt callstack 0
  8013                           
  8014 ;; *************** function _fputs *****************
  8015 ;; Defined at:
  8016 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  8017 ;; Parameters:    Size  Location     Type
  8018 ;;  s               2    9[COMRAM] PTR const unsigned char 
  8019 ;;		 -> dbuf(32), 
  8020 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  8021 ;;		 -> sprintf@f(6), 
  8022 ;; Auto vars:     Size  Location     Type
  8023 ;;  i               2   14[COMRAM] int 
  8024 ;;  c               1   13[COMRAM] unsigned char 
  8025 ;; Return value:  Size  Location     Type
  8026 ;;                  2    9[COMRAM] int 
  8027 ;; Registers used:
  8028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8029 ;; Tracked objects:
  8030 ;;		On entry : 0/0
  8031 ;;		On exit  : 0/0
  8032 ;;		Unchanged: 0/0
  8033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8034 ;;      Params:         4       0       0       0       0       0       0       0       0
  8035 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8036 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8037 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8038 ;;Total ram usage:        7 bytes
  8039 ;; Hardware stack levels used:    1
  8040 ;; Hardware stack levels required when called:    3
  8041 ;; This function calls:
  8042 ;;		_fputc
  8043 ;; This function is called by:
  8044 ;;		_pad
  8045 ;; This function uses a non-reentrant model
  8046 ;;
  8047                           
  8048                           	psect	text41
  8049  0023FE                     __ptext41:
  8050                           	opt callstack 0
  8051  0023FE                     _fputs:
  8052                           	opt callstack 20
  8053  0023FE  0E00               	movlw	0
  8054  002400  6E10               	movwf	(fputs@i+1)^0,c
  8055  002402  0E00               	movlw	0
  8056  002404  6E0F               	movwf	fputs@i^0,c
  8057  002406  EF10  F012         	goto	l2690
  8058  00240A                     l2686:
  8059  00240A  C00E  F001         	movff	fputs@c,fputc@c
  8060  00240E  6A02               	clrf	(fputc@c+1)^0,c
  8061  002410  C00C  F003         	movff	fputs@fp,fputc@fp
  8062  002414  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  8063  002418  EC4B  F00B         	call	_fputc	;wreg free
  8064  00241C  4A0F               	infsnz	fputs@i^0,f,c
  8065  00241E  2A10               	incf	(fputs@i+1)^0,f,c
  8066  002420                     l2690:
  8067  002420  500F               	movf	fputs@i^0,w,c
  8068  002422  240A               	addwf	fputs@s^0,w,c
  8069  002424  6ED9               	movwf	fsr2l,c
  8070  002426  5010               	movf	(fputs@i+1)^0,w,c
  8071  002428  200B               	addwfc	(fputs@s+1)^0,w,c
  8072  00242A  6EDA               	movwf	fsr2h,c
  8073  00242C  50DF               	movf	indf2,w,c
  8074  00242E  6E0E               	movwf	fputs@c^0,c
  8075  002430  500E               	movf	fputs@c^0,w,c
  8076  002432  A4D8               	btfss	status,2,c
  8077  002434  EF1E  F012         	goto	u1531
  8078  002438  EF20  F012         	goto	u1530
  8079  00243C                     u1531:
  8080  00243C  EF05  F012         	goto	l2686
  8081  002440                     u1530:
  8082  002440  0012               	return		;funcret
  8083  002442                     __end_of_fputs:
  8084                           	opt callstack 0
  8085                           
  8086 ;; *************** function _fputc *****************
  8087 ;; Defined at:
  8088 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  8089 ;; Parameters:    Size  Location     Type
  8090 ;;  c               2    0[COMRAM] int 
  8091 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  8092 ;;		 -> sprintf@f(6), 
  8093 ;; Auto vars:     Size  Location     Type
  8094 ;;		None
  8095 ;; Return value:  Size  Location     Type
  8096 ;;                  2    0[COMRAM] int 
  8097 ;; Registers used:
  8098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8099 ;; Tracked objects:
  8100 ;;		On entry : 0/0
  8101 ;;		On exit  : 0/0
  8102 ;;		Unchanged: 0/0
  8103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8104 ;;      Params:         4       0       0       0       0       0       0       0       0
  8105 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8106 ;;      Temps:          5       0       0       0       0       0       0       0       0
  8107 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8108 ;;Total ram usage:        9 bytes
  8109 ;; Hardware stack levels used:    1
  8110 ;; Hardware stack levels required when called:    2
  8111 ;; This function calls:
  8112 ;;		_putch
  8113 ;; This function is called by:
  8114 ;;		_pad
  8115 ;;		_vfpfcnvrt
  8116 ;;		_fputs
  8117 ;; This function uses a non-reentrant model
  8118 ;;
  8119                           
  8120                           	psect	text42
  8121  001696                     __ptext42:
  8122                           	opt callstack 0
  8123  001696                     _fputc:
  8124                           	opt callstack 23
  8125  001696  5003               	movf	fputc@fp^0,w,c
  8126  001698  1004               	iorwf	(fputc@fp+1)^0,w,c
  8127  00169A  B4D8               	btfsc	status,2,c
  8128  00169C  EF52  F00B         	goto	u1491
  8129  0016A0  EF54  F00B         	goto	u1490
  8130  0016A4                     u1491:
  8131  0016A4  EF5D  F00B         	goto	l2674
  8132  0016A8                     u1490:
  8133  0016A8  5003               	movf	fputc@fp^0,w,c
  8134  0016AA  1004               	iorwf	(fputc@fp+1)^0,w,c
  8135  0016AC  A4D8               	btfss	status,2,c
  8136  0016AE  EF5B  F00B         	goto	u1501
  8137  0016B2  EF5D  F00B         	goto	u1500
  8138  0016B6                     u1501:
  8139  0016B6  EF62  F00B         	goto	l2676
  8140  0016BA                     u1500:
  8141  0016BA                     l2674:
  8142  0016BA  5001               	movf	fputc@c^0,w,c
  8143  0016BC  EC5F  F013         	call	_putch
  8144  0016C0  EFAF  F00B         	goto	l1212
  8145  0016C4                     l2676:
  8146  0016C4  EE20 F004          	lfsr	2,4
  8147  0016C8  5003               	movf	fputc@fp^0,w,c
  8148  0016CA  26D9               	addwf	fsr2l,f,c
  8149  0016CC  5004               	movf	(fputc@fp+1)^0,w,c
  8150  0016CE  22DA               	addwfc	fsr2h,f,c
  8151  0016D0  50DE               	movf	postinc2,w,c
  8152  0016D2  10DE               	iorwf	postinc2,w,c
  8153  0016D4  B4D8               	btfsc	status,2,c
  8154  0016D6  EF6F  F00B         	goto	u1511
  8155  0016DA  EF71  F00B         	goto	u1510
  8156  0016DE                     u1511:
  8157  0016DE  EF8C  F00B         	goto	l2680
  8158  0016E2                     u1510:
  8159  0016E2  EE20 F004          	lfsr	2,4
  8160  0016E6  5003               	movf	fputc@fp^0,w,c
  8161  0016E8  26D9               	addwf	fsr2l,f,c
  8162  0016EA  5004               	movf	(fputc@fp+1)^0,w,c
  8163  0016EC  22DA               	addwfc	fsr2h,f,c
  8164  0016EE  EE10 F002          	lfsr	1,2
  8165  0016F2  5003               	movf	fputc@fp^0,w,c
  8166  0016F4  26E1               	addwf	fsr1l,f,c
  8167  0016F6  5004               	movf	(fputc@fp+1)^0,w,c
  8168  0016F8  22E2               	addwfc	fsr1h,f,c
  8169  0016FA  50DE               	movf	postinc2,w,c
  8170  0016FC  5CE6               	subwf	postinc1,w,c
  8171  0016FE  50E6               	movf	postinc1,w,c
  8172  001700  0A80               	xorlw	128
  8173  001702  6E09               	movwf	(??_fputc+4)^0,c
  8174  001704  50DE               	movf	postinc2,w,c
  8175  001706  0A80               	xorlw	128
  8176  001708  5809               	subwfb	(??_fputc+4)^0,w,c
  8177  00170A  B0D8               	btfsc	status,0,c
  8178  00170C  EF8A  F00B         	goto	u1521
  8179  001710  EF8C  F00B         	goto	u1520
  8180  001714                     u1521:
  8181  001714  EFAF  F00B         	goto	l1212
  8182  001718                     u1520:
  8183  001718                     l2680:
  8184  001718  EE20 F002          	lfsr	2,2
  8185  00171C  5003               	movf	fputc@fp^0,w,c
  8186  00171E  26D9               	addwf	fsr2l,f,c
  8187  001720  5004               	movf	(fputc@fp+1)^0,w,c
  8188  001722  22DA               	addwfc	fsr2h,f,c
  8189  001724  CFDE F005          	movff	postinc2,??_fputc
  8190  001728  CFDD F006          	movff	postdec2,??_fputc+1
  8191  00172C  C003  FFD9         	movff	fputc@fp,fsr2l
  8192  001730  C004  FFDA         	movff	fputc@fp+1,fsr2h
  8193  001734  CFDE F007          	movff	postinc2,??_fputc+2
  8194  001738  CFDD F008          	movff	postdec2,??_fputc+3
  8195  00173C  5005               	movf	??_fputc^0,w,c
  8196  00173E  2407               	addwf	(??_fputc+2)^0,w,c
  8197  001740  6ED9               	movwf	fsr2l,c
  8198  001742  5006               	movf	(??_fputc+1)^0,w,c
  8199  001744  2008               	addwfc	(??_fputc+3)^0,w,c
  8200  001746  6EDA               	movwf	fsr2h,c
  8201  001748  C001  FFDF         	movff	fputc@c,indf2
  8202  00174C  EE20 F002          	lfsr	2,2
  8203  001750  5003               	movf	fputc@fp^0,w,c
  8204  001752  26D9               	addwf	fsr2l,f,c
  8205  001754  5004               	movf	(fputc@fp+1)^0,w,c
  8206  001756  22DA               	addwfc	fsr2h,f,c
  8207  001758  2ADE               	incf	postinc2,f,c
  8208  00175A  0E00               	movlw	0
  8209  00175C  22DD               	addwfc	postdec2,f,c
  8210  00175E                     l1212:
  8211  00175E  0012               	return		;funcret
  8212  001760                     __end_of_fputc:
  8213                           	opt callstack 0
  8214                           
  8215 ;; *************** function _putch *****************
  8216 ;; Defined at:
  8217 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  8218 ;; Parameters:    Size  Location     Type
  8219 ;;  c               1    wreg     unsigned char 
  8220 ;; Auto vars:     Size  Location     Type
  8221 ;;  c               1    0[COMRAM] unsigned char 
  8222 ;; Return value:  Size  Location     Type
  8223 ;;                  1    wreg      void 
  8224 ;; Registers used:
  8225 ;;		wreg
  8226 ;; Tracked objects:
  8227 ;;		On entry : 0/0
  8228 ;;		On exit  : 0/0
  8229 ;;		Unchanged: 0/0
  8230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8231 ;;      Params:         0       0       0       0       0       0       0       0       0
  8232 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8233 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8234 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8235 ;;Total ram usage:        0 bytes
  8236 ;; Hardware stack levels used:    1
  8237 ;; Hardware stack levels required when called:    1
  8238 ;; This function calls:
  8239 ;;		Nothing
  8240 ;; This function is called by:
  8241 ;;		_fputc
  8242 ;; This function uses a non-reentrant model
  8243 ;;
  8244                           
  8245                           	psect	text43
  8246  0026BE                     __ptext43:
  8247                           	opt callstack 0
  8248  0026BE                     _putch:
  8249                           	opt callstack 23
  8250  0026BE  0012               	return		;funcret
  8251  0026C0                     __end_of_putch:
  8252                           	opt callstack 0
  8253                           
  8254 ;; *************** function _asignarHorarios *****************
  8255 ;; Defined at:
  8256 ;;		line 346 in file "main.c"
  8257 ;; Parameters:    Size  Location     Type
  8258 ;;		None
  8259 ;; Auto vars:     Size  Location     Type
  8260 ;;  Rx              1   15[COMRAM] unsigned char 
  8261 ;;  hora            1   14[COMRAM] unsigned char 
  8262 ;; Return value:  Size  Location     Type
  8263 ;;                  1    wreg      void 
  8264 ;; Registers used:
  8265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8266 ;; Tracked objects:
  8267 ;;		On entry : 0/0
  8268 ;;		On exit  : 0/0
  8269 ;;		Unchanged: 0/0
  8270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8271 ;;      Params:         0       0       0       0       0       0       0       0       0
  8272 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8273 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8274 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8275 ;;Total ram usage:        2 bytes
  8276 ;; Hardware stack levels used:    1
  8277 ;; Hardware stack levels required when called:    5
  8278 ;; This function calls:
  8279 ;;		_UART_printf
  8280 ;;		_escribeHorariosMemoria
  8281 ;;		_getValue
  8282 ;; This function is called by:
  8283 ;;		_sistemaPrincipal
  8284 ;; This function uses a non-reentrant model
  8285 ;;
  8286                           
  8287                           	psect	text44
  8288  001CE6                     __ptext44:
  8289                           	opt callstack 0
  8290  001CE6                     _asignarHorarios:
  8291                           	opt callstack 24
  8292  001CE6                     
  8293                           ;main.c: 348:     unsigned char hora;;main.c: 349:     unsigned char Rx;;main.c: 351:   
      +                            UART_printf("\r\n OPCIONES DE REGADO \r\n");
  8294  001CE6  0E10               	movlw	low STR_5
  8295  001CE8  6E02               	movwf	UART_printf@cadena^0,c
  8296  001CEA  0E7F               	movlw	high STR_5
  8297  001CEC  6E03               	movwf	(UART_printf@cadena+1)^0,c
  8298  001CEE  EC67  F010         	call	_UART_printf	;wreg free
  8299                           
  8300                           ;main.c: 353:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  8301  001CF2  0E18               	movlw	low STR_6
  8302  001CF4  6E02               	movwf	UART_printf@cadena^0,c
  8303  001CF6  0E7C               	movlw	high STR_6
  8304  001CF8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  8305  001CFA  EC67  F010         	call	_UART_printf	;wreg free
  8306  001CFE                     
  8307                           ;main.c: 354:     hora = getValue(2);
  8308  001CFE  0E00               	movlw	0
  8309  001D00  6E05               	movwf	(getValue@numCharacters+1)^0,c
  8310  001D02  0E02               	movlw	2
  8311  001D04  6E04               	movwf	getValue@numCharacters^0,c
  8312  001D06  ECC4  F003         	call	_getValue	;wreg free
  8313  001D0A  6E0F               	movwf	asignarHorarios@hora^0,c
  8314  001D0C                     
  8315                           ;main.c: 356:     if (hora != 'F') {
  8316  001D0C  0E46               	movlw	70
  8317  001D0E  180F               	xorwf	asignarHorarios@hora^0,w,c
  8318  001D10  B4D8               	btfsc	status,2,c
  8319  001D12  EF8D  F00E         	goto	u2661
  8320  001D16  EF8F  F00E         	goto	u2660
  8321  001D1A                     u2661:
  8322  001D1A  EFB7  F00E         	goto	l289
  8323  001D1E                     u2660:
  8324  001D1E                     
  8325                           ;main.c: 358:         UART_printf("\r\n Ingrese 1 para regar || ingrese 0 para no regar:
      +                           \r\n");
  8326  001D1E  0EE1               	movlw	low STR_7
  8327  001D20  6E02               	movwf	UART_printf@cadena^0,c
  8328  001D22  0E7B               	movlw	high STR_7
  8329  001D24  6E03               	movwf	(UART_printf@cadena+1)^0,c
  8330  001D26  EC67  F010         	call	_UART_printf	;wreg free
  8331  001D2A                     
  8332                           ;main.c: 360:         Rx = getValue(1);
  8333  001D2A  0E00               	movlw	0
  8334  001D2C  6E05               	movwf	(getValue@numCharacters+1)^0,c
  8335  001D2E  0E01               	movlw	1
  8336  001D30  6E04               	movwf	getValue@numCharacters^0,c
  8337  001D32  ECC4  F003         	call	_getValue	;wreg free
  8338  001D36  6E10               	movwf	asignarHorarios@Rx^0,c
  8339  001D38                     
  8340                           ;main.c: 363:         if (Rx != 'F') {
  8341  001D38  0E46               	movlw	70
  8342  001D3A  1810               	xorwf	asignarHorarios@Rx^0,w,c
  8343  001D3C  B4D8               	btfsc	status,2,c
  8344  001D3E  EFA3  F00E         	goto	u2671
  8345  001D42  EFA5  F00E         	goto	u2670
  8346  001D46                     u2671:
  8347  001D46  EFB7  F00E         	goto	l289
  8348  001D4A                     u2670:
  8349  001D4A                     
  8350                           ;main.c: 365:             horarios[hora].regar = Rx;
  8351  001D4A  500F               	movf	asignarHorarios@hora^0,w,c
  8352  001D4C  0D04               	mullw	4
  8353  001D4E  0E01               	movlw	low (_horarios+1)
  8354  001D50  24F3               	addwf	243,w,c
  8355  001D52  6ED9               	movwf	fsr2l,c
  8356  001D54  0E01               	movlw	high (_horarios+1)
  8357  001D56  20F4               	addwfc	prodh,w,c
  8358  001D58  6EDA               	movwf	fsr2h,c
  8359  001D5A  C010  FFDF         	movff	asignarHorarios@Rx,indf2
  8360  001D5E                     
  8361                           ;main.c: 367:             escribeHorariosMemoria();
  8362  001D5E  EC07  F00A         	call	_escribeHorariosMemoria	;wreg free
  8363  001D62                     
  8364                           ;main.c: 370:             UART_printf("\r\n Horario Modificado! \r\n");
  8365  001D62  0EF6               	movlw	low STR_8
  8366  001D64  6E02               	movwf	UART_printf@cadena^0,c
  8367  001D66  0E7E               	movlw	high STR_8
  8368  001D68  6E03               	movwf	(UART_printf@cadena+1)^0,c
  8369  001D6A  EC67  F010         	call	_UART_printf	;wreg free
  8370  001D6E                     l289:
  8371  001D6E  0012               	return		;funcret
  8372  001D70                     __end_of_asignarHorarios:
  8373                           	opt callstack 0
  8374                           
  8375 ;; *************** function _getValue *****************
  8376 ;; Defined at:
  8377 ;;		line 721 in file "main.c"
  8378 ;; Parameters:    Size  Location     Type
  8379 ;;  numCharacter    2    3[COMRAM] short 
  8380 ;; Auto vars:     Size  Location     Type
  8381 ;;  i               2   10[COMRAM] int 
  8382 ;;  i               2    8[COMRAM] int 
  8383 ;;  Rx              1   13[COMRAM] unsigned char 
  8384 ;;  dato            1   12[COMRAM] unsigned char 
  8385 ;;  datoIncorrec    1    7[COMRAM] unsigned char 
  8386 ;; Return value:  Size  Location     Type
  8387 ;;                  1    wreg      unsigned char 
  8388 ;; Registers used:
  8389 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8390 ;; Tracked objects:
  8391 ;;		On entry : 0/0
  8392 ;;		On exit  : 0/0
  8393 ;;		Unchanged: 0/0
  8394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8395 ;;      Params:         2       0       0       0       0       0       0       0       0
  8396 ;;      Locals:         7       0       0       0       0       0       0       0       0
  8397 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8398 ;;      Totals:        11       0       0       0       0       0       0       0       0
  8399 ;;Total ram usage:       11 bytes
  8400 ;; Hardware stack levels used:    1
  8401 ;; Hardware stack levels required when called:    3
  8402 ;; This function calls:
  8403 ;;		_UART_printf
  8404 ;;		_UART_read
  8405 ;;		_UART_write
  8406 ;; This function is called by:
  8407 ;;		_setRtc
  8408 ;;		_asignarHorarios
  8409 ;;		_setTiempoRegar
  8410 ;;		_lecturaWifi
  8411 ;;		_regadoRapido
  8412 ;; This function uses a non-reentrant model
  8413 ;;
  8414                           
  8415                           	psect	text45
  8416  000788                     __ptext45:
  8417                           	opt callstack 0
  8418  000788                     _getValue:
  8419                           	opt callstack 25
  8420  000788                     
  8421                           ;main.c: 724:     unsigned char datoIncorrecto = 0;
  8422  000788  0E00               	movlw	0
  8423  00078A  6E08               	movwf	getValue@datoIncorrecto^0,c
  8424                           
  8425                           ;main.c: 725:     unsigned char dato = 0;
  8426  00078C  0E00               	movlw	0
  8427  00078E  6E0D               	movwf	getValue@dato^0,c
  8428                           
  8429                           ;main.c: 727:     switch (numCharacters) {
  8430  000790  EFA0  F004         	goto	l3216
  8431  000794                     l3138:
  8432                           
  8433                           ;main.c: 730:             Rx = UART_read();
  8434  000794  ECF2  F010         	call	_UART_read	;wreg free
  8435  000798  6E0E               	movwf	getValue@Rx^0,c
  8436  00079A                     
  8437                           ;main.c: 732:             if (Rx >= 48 && Rx <= 57) {
  8438  00079A  0E2F               	movlw	47
  8439  00079C  640E               	cpfsgt	getValue@Rx^0,c
  8440  00079E  EFD3  F003         	goto	u2201
  8441  0007A2  EFD5  F003         	goto	u2200
  8442  0007A6                     u2201:
  8443  0007A6  EFE3  F003         	goto	l3148
  8444  0007AA                     u2200:
  8445  0007AA  0E3A               	movlw	58
  8446  0007AC  600E               	cpfslt	getValue@Rx^0,c
  8447  0007AE  EFDB  F003         	goto	u2211
  8448  0007B2  EFDD  F003         	goto	u2210
  8449  0007B6                     u2211:
  8450  0007B6  EFE3  F003         	goto	l3148
  8451  0007BA                     u2210:
  8452  0007BA                     
  8453                           ;main.c: 733:                 Rx -= 48;
  8454  0007BA  0E30               	movlw	48
  8455  0007BC  5E0E               	subwf	getValue@Rx^0,f,c
  8456  0007BE                     
  8457                           ;main.c: 734:                 dato = Rx;
  8458  0007BE  C00E  F00D         	movff	getValue@Rx,getValue@dato
  8459                           
  8460                           ;main.c: 735:             } else {
  8461  0007C2  EFBA  F004         	goto	l3218
  8462  0007C6                     l3148:
  8463                           
  8464                           ;main.c: 736:                 UART_write('F');
  8465  0007C6  0E46               	movlw	70
  8466  0007C8  EC2B  F013         	call	_UART_write
  8467  0007CC                     
  8468                           ;main.c: 737:                 datoIncorrecto = 1;
  8469  0007CC  0E01               	movlw	1
  8470  0007CE  6E08               	movwf	getValue@datoIncorrecto^0,c
  8471  0007D0  EFBA  F004         	goto	l3218
  8472  0007D4                     l3152:
  8473                           
  8474                           ;main.c: 743:             for (int i = 0; i < 2; i++) {
  8475  0007D4  0E00               	movlw	0
  8476  0007D6  6E0A               	movwf	(getValue@i+1)^0,c
  8477  0007D8  0E00               	movlw	0
  8478  0007DA  6E09               	movwf	getValue@i^0,c
  8479  0007DC                     l3158:
  8480                           
  8481                           ;main.c: 745:                 Rx = UART_read();
  8482  0007DC  ECF2  F010         	call	_UART_read	;wreg free
  8483  0007E0  6E0E               	movwf	getValue@Rx^0,c
  8484  0007E2                     
  8485                           ;main.c: 747:                 if (Rx >= 48 && Rx <= 57) {
  8486  0007E2  0E2F               	movlw	47
  8487  0007E4  640E               	cpfsgt	getValue@Rx^0,c
  8488  0007E6  EFF7  F003         	goto	u2221
  8489  0007EA  EFF9  F003         	goto	u2220
  8490  0007EE                     u2221:
  8491  0007EE  EF27  F004         	goto	l3174
  8492  0007F2                     u2220:
  8493  0007F2  0E3A               	movlw	58
  8494  0007F4  600E               	cpfslt	getValue@Rx^0,c
  8495  0007F6  EFFF  F003         	goto	u2231
  8496  0007FA  EF01  F004         	goto	u2230
  8497  0007FE                     u2231:
  8498  0007FE  EF27  F004         	goto	l3174
  8499  000802                     u2230:
  8500  000802                     
  8501                           ;main.c: 749:                     Rx -= 48;
  8502  000802  0E30               	movlw	48
  8503  000804  5E0E               	subwf	getValue@Rx^0,f,c
  8504                           
  8505                           ;main.c: 751:                     switch (i) {
  8506  000806  EF11  F004         	goto	l3172
  8507  00080A                     l391:
  8508                           
  8509                           ;main.c: 753:                             dato = Rx;
  8510  00080A  C00E  F00D         	movff	getValue@Rx,getValue@dato
  8511  00080E                     
  8512                           ;main.c: 754:                             dato *= 10;
  8513  00080E  0E0A               	movlw	10
  8514  000810  020D               	mulwf	getValue@dato^0,c
  8515  000812  50F3               	movf	prodl,w,c
  8516  000814  6E0D               	movwf	getValue@dato^0,c
  8517                           
  8518                           ;main.c: 755:                             break;
  8519  000816  EF2E  F004         	goto	l3178
  8520  00081A                     l3168:
  8521                           
  8522                           ;main.c: 758:                             dato += Rx;
  8523  00081A  500E               	movf	getValue@Rx^0,w,c
  8524  00081C  260D               	addwf	getValue@dato^0,f,c
  8525                           
  8526                           ;main.c: 759:                             break;
  8527  00081E  EF2E  F004         	goto	l3178
  8528  000822                     l3172:
  8529  000822  C009  F006         	movff	getValue@i,??_getValue
  8530  000826  C00A  F007         	movff	getValue@i+1,??_getValue+1
  8531                           
  8532                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8533                           ; Switch size 1, requested type "simple"
  8534                           ; Number of cases is 1, Range of values is 0 to 0
  8535                           ; switch strategies available:
  8536                           ; Name         Instructions Cycles
  8537                           ; simple_byte            4     3 (average)
  8538                           ;	Chosen strategy is simple_byte
  8539  00082A  5007               	movf	(??_getValue+1)^0,w,c
  8540  00082C  0A00               	xorlw	0	; case 0
  8541  00082E  B4D8               	btfsc	status,2,c
  8542  000830  EF1C  F004         	goto	l4108
  8543  000834  EF2E  F004         	goto	l3178
  8544  000838                     l4108:
  8545                           
  8546                           ; Switch size 1, requested type "simple"
  8547                           ; Number of cases is 2, Range of values is 0 to 1
  8548                           ; switch strategies available:
  8549                           ; Name         Instructions Cycles
  8550                           ; simple_byte            7     4 (average)
  8551                           ;	Chosen strategy is simple_byte
  8552  000838  5006               	movf	??_getValue^0,w,c
  8553  00083A  0A00               	xorlw	0	; case 0
  8554  00083C  B4D8               	btfsc	status,2,c
  8555  00083E  EF05  F004         	goto	l391
  8556  000842  0A01               	xorlw	1	; case 1
  8557  000844  B4D8               	btfsc	status,2,c
  8558  000846  EF0D  F004         	goto	l3168
  8559  00084A  EF2E  F004         	goto	l3178
  8560  00084E                     l3174:
  8561                           
  8562                           ;main.c: 767:                     datoIncorrecto = 1;
  8563  00084E  0E01               	movlw	1
  8564  000850  6E08               	movwf	getValue@datoIncorrecto^0,c
  8565  000852                     
  8566                           ;main.c: 768:                     UART_write('F');
  8567  000852  0E46               	movlw	70
  8568  000854  EC2B  F013         	call	_UART_write
  8569                           
  8570                           ;main.c: 769:                     break;
  8571  000858  EFBA  F004         	goto	l3218
  8572  00085C                     l3178:
  8573                           
  8574                           ;main.c: 771:             }
  8575  00085C  4A09               	infsnz	getValue@i^0,f,c
  8576  00085E  2A0A               	incf	(getValue@i+1)^0,f,c
  8577  000860  BE0A               	btfsc	(getValue@i+1)^0,7,c
  8578  000862  EF3C  F004         	goto	u2241
  8579  000866  500A               	movf	(getValue@i+1)^0,w,c
  8580  000868  E109               	bnz	u2240
  8581  00086A  0E02               	movlw	2
  8582  00086C  5C09               	subwf	getValue@i^0,w,c
  8583  00086E  A0D8               	btfss	status,0,c
  8584  000870  EF3C  F004         	goto	u2241
  8585  000874  EF3E  F004         	goto	u2240
  8586  000878                     u2241:
  8587  000878  EFEE  F003         	goto	l3158
  8588  00087C                     u2240:
  8589  00087C  EFBA  F004         	goto	l3218
  8590  000880                     l3182:
  8591                           
  8592                           ;main.c: 775:             for (int i = 0; i < 3; i++) {
  8593  000880  0E00               	movlw	0
  8594  000882  6E0C               	movwf	(getValue@i_962+1)^0,c
  8595  000884  0E00               	movlw	0
  8596  000886  6E0B               	movwf	getValue@i_962^0,c
  8597  000888                     l3188:
  8598                           
  8599                           ;main.c: 777:                 Rx = UART_read();
  8600  000888  ECF2  F010         	call	_UART_read	;wreg free
  8601  00088C  6E0E               	movwf	getValue@Rx^0,c
  8602  00088E                     
  8603                           ;main.c: 779:                 if (Rx >= 48 && Rx <= 57) {
  8604  00088E  0E2F               	movlw	47
  8605  000890  640E               	cpfsgt	getValue@Rx^0,c
  8606  000892  EF4D  F004         	goto	u2251
  8607  000896  EF4F  F004         	goto	u2250
  8608  00089A                     u2251:
  8609  00089A  EF87  F004         	goto	l3206
  8610  00089E                     u2250:
  8611  00089E  0E3A               	movlw	58
  8612  0008A0  600E               	cpfslt	getValue@Rx^0,c
  8613  0008A2  EF55  F004         	goto	u2261
  8614  0008A6  EF57  F004         	goto	u2260
  8615  0008AA                     u2261:
  8616  0008AA  EF87  F004         	goto	l3206
  8617  0008AE                     u2260:
  8618  0008AE                     
  8619                           ;main.c: 781:                     Rx -= 48;
  8620  0008AE  0E30               	movlw	48
  8621  0008B0  5E0E               	subwf	getValue@Rx^0,f,c
  8622                           
  8623                           ;main.c: 783:                     switch (i) {
  8624  0008B2  EF6D  F004         	goto	l3204
  8625  0008B6                     l401:
  8626                           
  8627                           ;main.c: 785:                             dato = Rx;
  8628  0008B6  C00E  F00D         	movff	getValue@Rx,getValue@dato
  8629  0008BA                     
  8630                           ;main.c: 786:                             dato *= 100;
  8631  0008BA  0E64               	movlw	100
  8632  0008BC  020D               	mulwf	getValue@dato^0,c
  8633  0008BE  50F3               	movf	prodl,w,c
  8634  0008C0  6E0D               	movwf	getValue@dato^0,c
  8635                           
  8636                           ;main.c: 787:                             break;
  8637  0008C2  EF8E  F004         	goto	l3210
  8638  0008C6                     l3198:
  8639                           
  8640                           ;main.c: 790:                             dato += (Rx * 10);
  8641  0008C6  500E               	movf	getValue@Rx^0,w,c
  8642  0008C8  0D0A               	mullw	10
  8643  0008CA  50F3               	movf	243,w,c
  8644  0008CC  260D               	addwf	getValue@dato^0,f,c
  8645                           
  8646                           ;main.c: 791:                             break;
  8647  0008CE  EF8E  F004         	goto	l3210
  8648  0008D2                     l3200:
  8649                           
  8650                           ;main.c: 794:                             dato += Rx;
  8651  0008D2  500E               	movf	getValue@Rx^0,w,c
  8652  0008D4  260D               	addwf	getValue@dato^0,f,c
  8653                           
  8654                           ;main.c: 795:                             break;
  8655  0008D6  EF8E  F004         	goto	l3210
  8656  0008DA                     l3204:
  8657  0008DA  C00B  F006         	movff	getValue@i_962,??_getValue
  8658  0008DE  C00C  F007         	movff	getValue@i_962+1,??_getValue+1
  8659                           
  8660                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8661                           ; Switch size 1, requested type "simple"
  8662                           ; Number of cases is 1, Range of values is 0 to 0
  8663                           ; switch strategies available:
  8664                           ; Name         Instructions Cycles
  8665                           ; simple_byte            4     3 (average)
  8666                           ;	Chosen strategy is simple_byte
  8667  0008E2  5007               	movf	(??_getValue+1)^0,w,c
  8668  0008E4  0A00               	xorlw	0	; case 0
  8669  0008E6  B4D8               	btfsc	status,2,c
  8670  0008E8  EF78  F004         	goto	l4110
  8671  0008EC  EF8E  F004         	goto	l3210
  8672  0008F0                     l4110:
  8673                           
  8674                           ; Switch size 1, requested type "simple"
  8675                           ; Number of cases is 3, Range of values is 0 to 2
  8676                           ; switch strategies available:
  8677                           ; Name         Instructions Cycles
  8678                           ; simple_byte           10     6 (average)
  8679                           ;	Chosen strategy is simple_byte
  8680  0008F0  5006               	movf	??_getValue^0,w,c
  8681  0008F2  0A00               	xorlw	0	; case 0
  8682  0008F4  B4D8               	btfsc	status,2,c
  8683  0008F6  EF5B  F004         	goto	l401
  8684  0008FA  0A01               	xorlw	1	; case 1
  8685  0008FC  B4D8               	btfsc	status,2,c
  8686  0008FE  EF63  F004         	goto	l3198
  8687  000902  0A03               	xorlw	3	; case 2
  8688  000904  B4D8               	btfsc	status,2,c
  8689  000906  EF69  F004         	goto	l3200
  8690  00090A  EF8E  F004         	goto	l3210
  8691  00090E                     l3206:
  8692                           
  8693                           ;main.c: 803:                     datoIncorrecto = 1;
  8694  00090E  0E01               	movlw	1
  8695  000910  6E08               	movwf	getValue@datoIncorrecto^0,c
  8696  000912                     
  8697                           ;main.c: 804:                     UART_write('F');
  8698  000912  0E46               	movlw	70
  8699  000914  EC2B  F013         	call	_UART_write
  8700                           
  8701                           ;main.c: 805:                     break;
  8702  000918  EFBA  F004         	goto	l3218
  8703  00091C                     l3210:
  8704                           
  8705                           ;main.c: 807:             }
  8706  00091C  4A0B               	infsnz	getValue@i_962^0,f,c
  8707  00091E  2A0C               	incf	(getValue@i_962+1)^0,f,c
  8708  000920  BE0C               	btfsc	(getValue@i_962+1)^0,7,c
  8709  000922  EF9C  F004         	goto	u2271
  8710  000926  500C               	movf	(getValue@i_962+1)^0,w,c
  8711  000928  E109               	bnz	u2270
  8712  00092A  0E03               	movlw	3
  8713  00092C  5C0B               	subwf	getValue@i_962^0,w,c
  8714  00092E  A0D8               	btfss	status,0,c
  8715  000930  EF9C  F004         	goto	u2271
  8716  000934  EF9E  F004         	goto	u2270
  8717  000938                     u2271:
  8718  000938  EF44  F004         	goto	l3188
  8719  00093C                     u2270:
  8720  00093C  EFBA  F004         	goto	l3218
  8721  000940                     l3216:
  8722  000940  C004  F006         	movff	getValue@numCharacters,??_getValue
  8723  000944  C005  F007         	movff	getValue@numCharacters+1,??_getValue+1
  8724                           
  8725                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8726                           ; Switch size 1, requested type "simple"
  8727                           ; Number of cases is 1, Range of values is 0 to 0
  8728                           ; switch strategies available:
  8729                           ; Name         Instructions Cycles
  8730                           ; simple_byte            4     3 (average)
  8731                           ;	Chosen strategy is simple_byte
  8732  000948  5007               	movf	(??_getValue+1)^0,w,c
  8733  00094A  0A00               	xorlw	0	; case 0
  8734  00094C  B4D8               	btfsc	status,2,c
  8735  00094E  EFAB  F004         	goto	l4112
  8736  000952  EFBA  F004         	goto	l3218
  8737  000956                     l4112:
  8738                           
  8739                           ; Switch size 1, requested type "simple"
  8740                           ; Number of cases is 3, Range of values is 1 to 3
  8741                           ; switch strategies available:
  8742                           ; Name         Instructions Cycles
  8743                           ; simple_byte           10     6 (average)
  8744                           ;	Chosen strategy is simple_byte
  8745  000956  5006               	movf	??_getValue^0,w,c
  8746  000958  0A01               	xorlw	1	; case 1
  8747  00095A  B4D8               	btfsc	status,2,c
  8748  00095C  EFCA  F003         	goto	l3138
  8749  000960  0A03               	xorlw	3	; case 2
  8750  000962  B4D8               	btfsc	status,2,c
  8751  000964  EFEA  F003         	goto	l3152
  8752  000968  0A01               	xorlw	1	; case 3
  8753  00096A  B4D8               	btfsc	status,2,c
  8754  00096C  EF40  F004         	goto	l3182
  8755  000970  EFBA  F004         	goto	l3218
  8756  000974                     l3218:
  8757                           
  8758                           ;main.c: 816:     if (esperandoDatos || datoIncorrecto) {
  8759  000974  0100               	movlb	0	; () banked
  8760  000976  51F4               	movf	_esperandoDatos& (0+255),w,b
  8761  000978  A4D8               	btfss	status,2,c
  8762  00097A  EFC1  F004         	goto	u2281
  8763  00097E  EFC3  F004         	goto	u2280
  8764  000982                     u2281:
  8765  000982  EFCB  F004         	goto	l3222
  8766  000986                     u2280:
  8767  000986                     
  8768                           ; BSR set to: 0
  8769  000986  5008               	movf	getValue@datoIncorrecto^0,w,c
  8770  000988  B4D8               	btfsc	status,2,c
  8771  00098A  EFC9  F004         	goto	u2291
  8772  00098E  EFCB  F004         	goto	u2290
  8773  000992                     u2291:
  8774  000992  EFD4  F004         	goto	l3230
  8775  000996                     u2290:
  8776  000996                     l3222:
  8777                           
  8778                           ; BSR set to: 0
  8779                           ;main.c: 818:         UART_printf("\nFALLO EL SETEO\r\n");
  8780  000996  0E99               	movlw	low STR_39
  8781  000998  6E02               	movwf	UART_printf@cadena^0,c
  8782  00099A  0E7F               	movlw	high STR_39
  8783  00099C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  8784  00099E  EC67  F010         	call	_UART_printf	;wreg free
  8785  0009A2                     
  8786                           ;main.c: 819:         return 'F';
  8787  0009A2  0E46               	movlw	70
  8788  0009A4  EFD5  F004         	goto	l411
  8789  0009A8                     l3230:
  8790                           
  8791                           ; BSR set to: 0
  8792                           ;main.c: 821:         return dato;
  8793  0009A8  500D               	movf	getValue@dato^0,w,c
  8794  0009AA                     l411:
  8795  0009AA  0012               	return		;funcret
  8796  0009AC                     __end_of_getValue:
  8797                           	opt callstack 0
  8798                           
  8799 ;; *************** function _UART_read *****************
  8800 ;; Defined at:
  8801 ;;		line 34 in file "./UART.h"
  8802 ;; Parameters:    Size  Location     Type
  8803 ;;		None
  8804 ;; Auto vars:     Size  Location     Type
  8805 ;;		None
  8806 ;; Return value:  Size  Location     Type
  8807 ;;                  1    wreg      unsigned char 
  8808 ;; Registers used:
  8809 ;;		wreg, status,2
  8810 ;; Tracked objects:
  8811 ;;		On entry : 0/0
  8812 ;;		On exit  : 0/0
  8813 ;;		Unchanged: 0/0
  8814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8815 ;;      Params:         0       0       0       0       0       0       0       0       0
  8816 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8817 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8818 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8819 ;;Total ram usage:        0 bytes
  8820 ;; Hardware stack levels used:    1
  8821 ;; Hardware stack levels required when called:    1
  8822 ;; This function calls:
  8823 ;;		Nothing
  8824 ;; This function is called by:
  8825 ;;		_lecturaWifi
  8826 ;;		_getValue
  8827 ;; This function uses a non-reentrant model
  8828 ;;
  8829                           
  8830                           	psect	text46
  8831  0021E4                     __ptext46:
  8832                           	opt callstack 0
  8833  0021E4                     _UART_read:
  8834                           	opt callstack 26
  8835  0021E4                     
  8836                           ;./UART.h: 36:     TMR0 = VALOR_TIMER0UART;
  8837  0021E4  0E67               	movlw	103
  8838  0021E6  6ED7               	movwf	215,c	;volatile
  8839  0021E8  0E69               	movlw	105
  8840  0021EA  6ED6               	movwf	214,c	;volatile
  8841                           
  8842                           ;./UART.h: 37:     esperaDatoConcluida = 0;
  8843  0021EC  0E00               	movlw	0
  8844  0021EE  0100               	movlb	0	; () banked
  8845  0021F0  6FF5               	movwf	_esperaDatoConcluida& (0+255),b
  8846                           
  8847                           ;./UART.h: 38:     esperandoDatos = 1;
  8848  0021F2  0E01               	movlw	1
  8849  0021F4  6FF4               	movwf	_esperandoDatos& (0+255),b
  8850                           
  8851                           ;./UART.h: 39:     byteUart = 0;
  8852  0021F6  0E00               	movlw	0
  8853  0021F8  6FF6               	movwf	_byteUart& (0+255),b
  8854                           
  8855                           ;./UART.h: 40:     tiempoInactividadTrans = 0;
  8856  0021FA  0E00               	movlw	0
  8857  0021FC  6FF7               	movwf	_tiempoInactividadTrans& (0+255),b
  8858  0021FE                     l125:
  8859                           
  8860                           ; BSR set to: 0
  8861  0021FE  BA9E               	btfsc	158,5,c	;volatile
  8862  002200  EF04  F011         	goto	u1971
  8863  002204  EF06  F011         	goto	u1970
  8864  002208                     u1971:
  8865  002208  EF0E  F011         	goto	l2962
  8866  00220C                     u1970:
  8867  00220C                     
  8868                           ; BSR set to: 0
  8869  00220C  51F5               	movf	_esperaDatoConcluida& (0+255),w,b
  8870  00220E  B4D8               	btfsc	status,2,c
  8871  002210  EF0C  F011         	goto	u1981
  8872  002214  EF0E  F011         	goto	u1980
  8873  002218                     u1981:
  8874  002218  EFFF  F010         	goto	l125
  8875  00221C                     u1980:
  8876  00221C                     l2962:
  8877                           
  8878                           ; BSR set to: 0
  8879                           ;./UART.h: 44:     if (!esperaDatoConcluida) {
  8880  00221C  51F5               	movf	_esperaDatoConcluida& (0+255),w,b
  8881  00221E  A4D8               	btfss	status,2,c
  8882  002220  EF14  F011         	goto	u1991
  8883  002224  EF16  F011         	goto	u1990
  8884  002228                     u1991:
  8885  002228  EF1A  F011         	goto	l130
  8886  00222C                     u1990:
  8887  00222C                     
  8888                           ; BSR set to: 0
  8889                           ;./UART.h: 45:         byteUart = RCREG;
  8890  00222C  CFAE F0F6          	movff	4014,_byteUart	;volatile
  8891  002230                     
  8892                           ; BSR set to: 0
  8893                           ;./UART.h: 46:         esperandoDatos = 0;
  8894  002230  0E00               	movlw	0
  8895  002232  6FF4               	movwf	_esperandoDatos& (0+255),b
  8896  002234                     l130:
  8897                           
  8898                           ; BSR set to: 0
  8899                           ;./UART.h: 49:     return byteUart;
  8900  002234  51F6               	movf	_byteUart& (0+255),w,b
  8901  002236                     
  8902                           ; BSR set to: 0
  8903  002236  0012               	return		;funcret
  8904  002238                     __end_of_UART_read:
  8905                           	opt callstack 0
  8906                           
  8907 ;; *************** function _UART_printf *****************
  8908 ;; Defined at:
  8909 ;;		line 57 in file "./UART.h"
  8910 ;; Parameters:    Size  Location     Type
  8911 ;;  cadena          2    1[COMRAM] PTR unsigned char 
  8912 ;;		 -> STR_43(58), STR_42(57), STR_41(57), STR_40(20), 
  8913 ;;		 -> STR_39(18), STR_38(11), STR_37(9), STR_36(17), 
  8914 ;;		 -> mostrarDatosSensoresWIFI@buffer(50), mostrarDatosSensores@buffer(50), STR_29(21), STR_28(25), 
  8915 ;;		 -> dameDatosSistema@buffer(50), STR_26(50), STR_25(42), STR_24(3), 
  8916 ;;		 -> STR_23(14), STR_22(23), STR_21(34), STR_20(32), 
  8917 ;;		 -> STR_19(49), STR_18(37), STR_17(27), STR_16(37), 
  8918 ;;		 -> STR_15(32), lecturaWifi@buffer(50), STR_13(38), STR_12(37), 
  8919 ;;		 -> STR_11(72), STR_10(51), STR_9(23), STR_8(26), 
  8920 ;;		 -> STR_7(55), STR_6(51), STR_5(25), STR_4(37), 
  8921 ;;		 -> STR_3(31), STR_2(43), STR_1(16), 
  8922 ;; Auto vars:     Size  Location     Type
  8923 ;;		None
  8924 ;; Return value:  Size  Location     Type
  8925 ;;                  1    wreg      void 
  8926 ;; Registers used:
  8927 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8928 ;; Tracked objects:
  8929 ;;		On entry : 0/0
  8930 ;;		On exit  : 0/0
  8931 ;;		Unchanged: 0/0
  8932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8933 ;;      Params:         2       0       0       0       0       0       0       0       0
  8934 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8935 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8936 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8937 ;;Total ram usage:        2 bytes
  8938 ;; Hardware stack levels used:    1
  8939 ;; Hardware stack levels required when called:    2
  8940 ;; This function calls:
  8941 ;;		_UART_write
  8942 ;; This function is called by:
  8943 ;;		_fijaHoraRtc
  8944 ;;		_asignarHorarios
  8945 ;;		_setTiempoRegar
  8946 ;;		_lecturaWifi
  8947 ;;		_mostrarMenu
  8948 ;;		_sistemaPrincipal
  8949 ;;		_dameDatosSistema
  8950 ;;		_dameTemperaturaHumedad
  8951 ;;		_mostrarDatosSensores
  8952 ;;		_mostrarDatosSensoresWIFI
  8953 ;;		_getValue
  8954 ;;		_regadoRapido
  8955 ;;		_configBluetoothHC_06
  8956 ;; This function uses a non-reentrant model
  8957 ;;
  8958                           
  8959                           	psect	text47
  8960  0020CE                     __ptext47:
  8961                           	opt callstack 0
  8962  0020CE                     _UART_printf:
  8963                           	opt callstack 26
  8964  0020CE                     
  8965                           ;./UART.h: 58:     while (*cadena) {
  8966  0020CE  EF7D  F010         	goto	l2976
  8967  0020D2                     l2972:
  8968                           
  8969                           ;./UART.h: 59:         UART_write(*cadena++);
  8970  0020D2  C002  FFF6         	movff	UART_printf@cadena,tblptrl
  8971  0020D6  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
  8972  0020DA  6AF8               	clrf	tblptru,c
  8973  0020DC  0E07               	movlw	(high __ramtop+-1)
  8974  0020DE  64F7               	cpfsgt	tblptrh,c
  8975  0020E0  D003               	bra	u2007
  8976  0020E2  0008               	tblrd		*
  8977  0020E4  50F5               	movf	tablat,w,c
  8978  0020E6  D005               	bra	u2000
  8979  0020E8                     u2007:
  8980  0020E8  CFF6 FFE1          	movff	tblptrl,fsr1l
  8981  0020EC  CFF7 FFE2          	movff	tblptrh,fsr1h
  8982  0020F0  50E7               	movf	indf1,w,c
  8983  0020F2                     u2000:
  8984  0020F2  EC2B  F013         	call	_UART_write
  8985  0020F6  4A02               	infsnz	UART_printf@cadena^0,f,c
  8986  0020F8  2A03               	incf	(UART_printf@cadena+1)^0,f,c
  8987  0020FA                     l2976:
  8988                           
  8989                           ;./UART.h: 58:     while (*cadena) {
  8990  0020FA  C002  FFF6         	movff	UART_printf@cadena,tblptrl
  8991  0020FE  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
  8992  002102  6AF8               	clrf	tblptru,c
  8993  002104  0E07               	movlw	(high __ramtop+-1)
  8994  002106  64F7               	cpfsgt	tblptrh,c
  8995  002108  D003               	bra	u2017
  8996  00210A  0008               	tblrd		*
  8997  00210C  50F5               	movf	tablat,w,c
  8998  00210E  D005               	bra	u2010
  8999  002110                     u2017:
  9000  002110  CFF6 FFE1          	movff	tblptrl,fsr1l
  9001  002114  CFF7 FFE2          	movff	tblptrh,fsr1h
  9002  002118  50E7               	movf	indf1,w,c
  9003  00211A                     u2010:
  9004  00211A  0900               	iorlw	0
  9005  00211C  A4D8               	btfss	status,2,c
  9006  00211E  EF93  F010         	goto	u2021
  9007  002122  EF95  F010         	goto	u2020
  9008  002126                     u2021:
  9009  002126  EF69  F010         	goto	l2972
  9010  00212A                     u2020:
  9011  00212A  0012               	return		;funcret
  9012  00212C                     __end_of_UART_printf:
  9013                           	opt callstack 0
  9014                           
  9015 ;; *************** function _UART_write *****************
  9016 ;; Defined at:
  9017 ;;		line 52 in file "./UART.h"
  9018 ;; Parameters:    Size  Location     Type
  9019 ;;  dato            1    wreg     unsigned char 
  9020 ;; Auto vars:     Size  Location     Type
  9021 ;;  dato            1    0[COMRAM] unsigned char 
  9022 ;; Return value:  Size  Location     Type
  9023 ;;                  1    wreg      void 
  9024 ;; Registers used:
  9025 ;;		wreg
  9026 ;; Tracked objects:
  9027 ;;		On entry : 0/0
  9028 ;;		On exit  : 0/0
  9029 ;;		Unchanged: 0/0
  9030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9031 ;;      Params:         0       0       0       0       0       0       0       0       0
  9032 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9033 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9034 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9035 ;;Total ram usage:        1 bytes
  9036 ;; Hardware stack levels used:    1
  9037 ;; Hardware stack levels required when called:    1
  9038 ;; This function calls:
  9039 ;;		Nothing
  9040 ;; This function is called by:
  9041 ;;		_UART_printf
  9042 ;;		_lecturaWifi
  9043 ;;		_dameDatosSistema
  9044 ;;		_mostrarDatosSensores
  9045 ;;		_mostrarDatosSensoresWIFI
  9046 ;;		_getValue
  9047 ;; This function uses a non-reentrant model
  9048 ;;
  9049                           
  9050                           	psect	text48
  9051  002656                     __ptext48:
  9052                           	opt callstack 0
  9053  002656                     _UART_write:
  9054                           	opt callstack 26
  9055                           
  9056                           ;incstack = 0
  9057                           ;UART_write@dato stored from wreg
  9058  002656  6E01               	movwf	UART_write@dato^0,c
  9059  002658                     
  9060                           ;./UART.h: 53:     TXREG = dato;
  9061  002658  C001  FFAD         	movff	UART_write@dato,4013	;volatile
  9062  00265C                     l134:
  9063  00265C  A2AC               	btfss	172,1,c	;volatile
  9064  00265E  EF33  F013         	goto	u1911
  9065  002662  EF35  F013         	goto	u1910
  9066  002666                     u1911:
  9067  002666  EF2E  F013         	goto	l134
  9068  00266A                     u1910:
  9069  00266A  0012               	return		;funcret
  9070  00266C                     __end_of_UART_write:
  9071                           	opt callstack 0
  9072                           
  9073 ;; *************** function _escribeHorariosMemoria *****************
  9074 ;; Defined at:
  9075 ;;		line 218 in file "main.c"
  9076 ;; Parameters:    Size  Location     Type
  9077 ;;		None
  9078 ;; Auto vars:     Size  Location     Type
  9079 ;;  i               2   10[COMRAM] int 
  9080 ;;  contMemoria     2    8[COMRAM] int 
  9081 ;; Return value:  Size  Location     Type
  9082 ;;                  1    wreg      void 
  9083 ;; Registers used:
  9084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9085 ;; Tracked objects:
  9086 ;;		On entry : 0/0
  9087 ;;		On exit  : 0/0
  9088 ;;		Unchanged: 0/0
  9089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9090 ;;      Params:         0       0       0       0       0       0       0       0       0
  9091 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9092 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9093 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9094 ;;Total ram usage:        6 bytes
  9095 ;; Hardware stack levels used:    1
  9096 ;; Hardware stack levels required when called:    4
  9097 ;; This function calls:
  9098 ;;		_escribe_eeprom
  9099 ;; This function is called by:
  9100 ;;		_asignarHorarios
  9101 ;;		_setTiempoRegar
  9102 ;; This function uses a non-reentrant model
  9103 ;;
  9104                           
  9105                           	psect	text49
  9106  00140E                     __ptext49:
  9107                           	opt callstack 0
  9108  00140E                     _escribeHorariosMemoria:
  9109                           	opt callstack 24
  9110  00140E                     
  9111                           ;main.c: 220:     int contMemoria = 0;
  9112  00140E  0E00               	movlw	0
  9113  001410  6E0A               	movwf	(escribeHorariosMemoria@contMemoria+1)^0,c
  9114  001412  0E00               	movlw	0
  9115  001414  6E09               	movwf	escribeHorariosMemoria@contMemoria^0,c
  9116                           
  9117                           ;main.c: 221:     for (int i = 0; i < 24; i++) {
  9118  001416  0E00               	movlw	0
  9119  001418  6E0C               	movwf	(escribeHorariosMemoria@i+1)^0,c
  9120  00141A  0E00               	movlw	0
  9121  00141C  6E0B               	movwf	escribeHorariosMemoria@i^0,c
  9122  00141E                     l3418:
  9123                           
  9124                           ;main.c: 222:         escribe_eeprom(contMemoria++, horarios[i].hora);
  9125  00141E  C009  F003         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  9126  001422  C00A  F004         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  9127  001426  0E00               	movlw	low _horarios
  9128  001428  6E07               	movwf	??_escribeHorariosMemoria^0,c
  9129  00142A  0E01               	movlw	high _horarios
  9130  00142C  6E08               	movwf	(??_escribeHorariosMemoria+1)^0,c
  9131  00142E  90D8               	bcf	status,0,c
  9132  001430  340B               	rlcf	escribeHorariosMemoria@i^0,w,c
  9133  001432  6ED9               	movwf	fsr2l,c
  9134  001434  340C               	rlcf	(escribeHorariosMemoria@i+1)^0,w,c
  9135  001436  6EDA               	movwf	fsr2h,c
  9136  001438  90D8               	bcf	status,0,c
  9137  00143A  36D9               	rlcf	fsr2l,f,c
  9138  00143C  36DA               	rlcf	fsr2h,f,c
  9139  00143E  5007               	movf	??_escribeHorariosMemoria^0,w,c
  9140  001440  26D9               	addwf	fsr2l,f,c
  9141  001442  5008               	movf	(??_escribeHorariosMemoria+1)^0,w,c
  9142  001444  22DA               	addwfc	fsr2h,f,c
  9143  001446  50DF               	movf	indf2,w,c
  9144  001448  6E05               	movwf	escribe_eeprom@dato^0,c
  9145  00144A  EC9A  F012         	call	_escribe_eeprom	;wreg free
  9146  00144E  4A09               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  9147  001450  2A0A               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  9148  001452                     
  9149                           ;main.c: 223:         escribe_eeprom(contMemoria++, horarios[i].regar);
  9150  001452  C009  F003         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  9151  001456  C00A  F004         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  9152  00145A  0E00               	movlw	low _horarios
  9153  00145C  6E07               	movwf	??_escribeHorariosMemoria^0,c
  9154  00145E  0E01               	movlw	high _horarios
  9155  001460  6E08               	movwf	(??_escribeHorariosMemoria+1)^0,c
  9156  001462  0E01               	movlw	1
  9157  001464  2607               	addwf	??_escribeHorariosMemoria^0,f,c
  9158  001466  0E00               	movlw	0
  9159  001468  2208               	addwfc	(??_escribeHorariosMemoria+1)^0,f,c
  9160  00146A  90D8               	bcf	status,0,c
  9161  00146C  340B               	rlcf	escribeHorariosMemoria@i^0,w,c
  9162  00146E  6ED9               	movwf	fsr2l,c
  9163  001470  340C               	rlcf	(escribeHorariosMemoria@i+1)^0,w,c
  9164  001472  6EDA               	movwf	fsr2h,c
  9165  001474  90D8               	bcf	status,0,c
  9166  001476  36D9               	rlcf	fsr2l,f,c
  9167  001478  36DA               	rlcf	fsr2h,f,c
  9168  00147A  5007               	movf	??_escribeHorariosMemoria^0,w,c
  9169  00147C  26D9               	addwf	fsr2l,f,c
  9170  00147E  5008               	movf	(??_escribeHorariosMemoria+1)^0,w,c
  9171  001480  22DA               	addwfc	fsr2h,f,c
  9172  001482  50DF               	movf	indf2,w,c
  9173  001484  6E05               	movwf	escribe_eeprom@dato^0,c
  9174  001486  EC9A  F012         	call	_escribe_eeprom	;wreg free
  9175  00148A  4A09               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  9176  00148C  2A0A               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  9177  00148E                     
  9178                           ;main.c: 224:         escribe_eeprom(contMemoria++, horarios[i].tiempoRegar);
  9179  00148E  C009  F003         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
  9180  001492  C00A  F004         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
  9181  001496  0E00               	movlw	low _horarios
  9182  001498  6E07               	movwf	??_escribeHorariosMemoria^0,c
  9183  00149A  0E01               	movlw	high _horarios
  9184  00149C  6E08               	movwf	(??_escribeHorariosMemoria+1)^0,c
  9185  00149E  0E03               	movlw	3
  9186  0014A0  2607               	addwf	??_escribeHorariosMemoria^0,f,c
  9187  0014A2  0E00               	movlw	0
  9188  0014A4  2208               	addwfc	(??_escribeHorariosMemoria+1)^0,f,c
  9189  0014A6  90D8               	bcf	status,0,c
  9190  0014A8  340B               	rlcf	escribeHorariosMemoria@i^0,w,c
  9191  0014AA  6ED9               	movwf	fsr2l,c
  9192  0014AC  340C               	rlcf	(escribeHorariosMemoria@i+1)^0,w,c
  9193  0014AE  6EDA               	movwf	fsr2h,c
  9194  0014B0  90D8               	bcf	status,0,c
  9195  0014B2  36D9               	rlcf	fsr2l,f,c
  9196  0014B4  36DA               	rlcf	fsr2h,f,c
  9197  0014B6  5007               	movf	??_escribeHorariosMemoria^0,w,c
  9198  0014B8  26D9               	addwf	fsr2l,f,c
  9199  0014BA  5008               	movf	(??_escribeHorariosMemoria+1)^0,w,c
  9200  0014BC  22DA               	addwfc	fsr2h,f,c
  9201  0014BE  50DF               	movf	indf2,w,c
  9202  0014C0  6E05               	movwf	escribe_eeprom@dato^0,c
  9203  0014C2  EC9A  F012         	call	_escribe_eeprom	;wreg free
  9204  0014C6  4A09               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
  9205  0014C8  2A0A               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
  9206  0014CA                     
  9207                           ;main.c: 225:     }
  9208  0014CA  4A0B               	infsnz	escribeHorariosMemoria@i^0,f,c
  9209  0014CC  2A0C               	incf	(escribeHorariosMemoria@i+1)^0,f,c
  9210  0014CE  BE0C               	btfsc	(escribeHorariosMemoria@i+1)^0,7,c
  9211  0014D0  EF73  F00A         	goto	u2471
  9212  0014D4  500C               	movf	(escribeHorariosMemoria@i+1)^0,w,c
  9213  0014D6  E109               	bnz	u2470
  9214  0014D8  0E18               	movlw	24
  9215  0014DA  5C0B               	subwf	escribeHorariosMemoria@i^0,w,c
  9216  0014DC  A0D8               	btfss	status,0,c
  9217  0014DE  EF73  F00A         	goto	u2471
  9218  0014E2  EF75  F00A         	goto	u2470
  9219  0014E6                     u2471:
  9220  0014E6  EF0F  F00A         	goto	l3418
  9221  0014EA                     u2470:
  9222  0014EA  0012               	return		;funcret
  9223  0014EC                     __end_of_escribeHorariosMemoria:
  9224                           	opt callstack 0
  9225                           
  9226 ;; *************** function _escribe_eeprom *****************
  9227 ;; Defined at:
  9228 ;;		line 189 in file "main.c"
  9229 ;; Parameters:    Size  Location     Type
  9230 ;;  direccion       2    2[COMRAM] unsigned short 
  9231 ;;  dato            1    4[COMRAM] unsigned char 
  9232 ;; Auto vars:     Size  Location     Type
  9233 ;;		None
  9234 ;; Return value:  Size  Location     Type
  9235 ;;                  1    wreg      void 
  9236 ;; Registers used:
  9237 ;;		wreg, status,2, status,0, cstack
  9238 ;; Tracked objects:
  9239 ;;		On entry : 0/0
  9240 ;;		On exit  : 0/0
  9241 ;;		Unchanged: 0/0
  9242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9243 ;;      Params:         3       0       0       0       0       0       0       0       0
  9244 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9245 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9246 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9247 ;;Total ram usage:        4 bytes
  9248 ;; Hardware stack levels used:    1
  9249 ;; Hardware stack levels required when called:    3
  9250 ;; This function calls:
  9251 ;;		_i2c_detener
  9252 ;;		_i2c_envia_dato
  9253 ;;		_i2c_inicia_com
  9254 ;; This function is called by:
  9255 ;;		_escribeHorariosMemoria
  9256 ;; This function uses a non-reentrant model
  9257 ;;
  9258                           
  9259                           	psect	text50
  9260  002534                     __ptext50:
  9261                           	opt callstack 0
  9262  002534                     _escribe_eeprom:
  9263                           	opt callstack 24
  9264  002534                     
  9265                           ;main.c: 190:     i2c_inicia_com();
  9266  002534  EC55  F013         	call	_i2c_inicia_com	;wreg free
  9267                           
  9268                           ;main.c: 191:     i2c_envia_dato(0xAE);
  9269  002538  0EAE               	movlw	174
  9270  00253A  EC41  F013         	call	_i2c_envia_dato
  9271                           
  9272                           ;main.c: 192:     i2c_envia_dato(direccion >> 8);
  9273  00253E  5004               	movf	(escribe_eeprom@direccion+1)^0,w,c
  9274  002540  EC41  F013         	call	_i2c_envia_dato
  9275                           
  9276                           ;main.c: 194:     i2c_envia_dato(direccion);
  9277  002544  5003               	movf	escribe_eeprom@direccion^0,w,c
  9278  002546  EC41  F013         	call	_i2c_envia_dato
  9279                           
  9280                           ;main.c: 196:     i2c_envia_dato(dato);
  9281  00254A  5005               	movf	escribe_eeprom@dato^0,w,c
  9282  00254C  EC41  F013         	call	_i2c_envia_dato
  9283                           
  9284                           ;main.c: 197:     i2c_detener();
  9285  002550  EC59  F013         	call	_i2c_detener	;wreg free
  9286  002554                     
  9287                           ;main.c: 198:     _delay((unsigned long)((10)*(4000000/4000.0)));
  9288  002554  0E0D               	movlw	13
  9289  002556  6E06               	movwf	??_escribe_eeprom^0,c
  9290  002558  0EFC               	movlw	252
  9291  00255A                     u3057:
  9292  00255A  2EE8               	decfsz	wreg,f,c
  9293  00255C  D7FE               	bra	u3057
  9294  00255E  2E06               	decfsz	??_escribe_eeprom^0,f,c
  9295  002560  D7FC               	bra	u3057
  9296  002562  0012               	return		;funcret
  9297  002564                     __end_of_escribe_eeprom:
  9298                           	opt callstack 0
  9299                           
  9300 ;; *************** function _leeHorariosMemoria *****************
  9301 ;; Defined at:
  9302 ;;		line 228 in file "main.c"
  9303 ;; Parameters:    Size  Location     Type
  9304 ;;		None
  9305 ;; Auto vars:     Size  Location     Type
  9306 ;;  i               2   10[COMRAM] int 
  9307 ;;  contMemoria     2    8[COMRAM] int 
  9308 ;; Return value:  Size  Location     Type
  9309 ;;                  1    wreg      void 
  9310 ;; Registers used:
  9311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9312 ;; Tracked objects:
  9313 ;;		On entry : 0/0
  9314 ;;		On exit  : 0/0
  9315 ;;		Unchanged: 0/0
  9316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9317 ;;      Params:         0       0       0       0       0       0       0       0       0
  9318 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9319 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9320 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9321 ;;Total ram usage:        6 bytes
  9322 ;; Hardware stack levels used:    1
  9323 ;; Hardware stack levels required when called:    4
  9324 ;; This function calls:
  9325 ;;		_leer_eeprom
  9326 ;; This function is called by:
  9327 ;;		_main
  9328 ;; This function uses a non-reentrant model
  9329 ;;
  9330                           
  9331                           	psect	text51
  9332  0014EC                     __ptext51:
  9333                           	opt callstack 0
  9334  0014EC                     _leeHorariosMemoria:
  9335                           	opt callstack 26
  9336  0014EC                     
  9337                           ;main.c: 230:     int contMemoria = 0;
  9338  0014EC  0E00               	movlw	0
  9339  0014EE  6E0A               	movwf	(leeHorariosMemoria@contMemoria+1)^0,c
  9340  0014F0  0E00               	movlw	0
  9341  0014F2  6E09               	movwf	leeHorariosMemoria@contMemoria^0,c
  9342                           
  9343                           ;main.c: 232:     for (int i = 0; i < 24; i++) {
  9344  0014F4  0E00               	movlw	0
  9345  0014F6  6E0C               	movwf	(leeHorariosMemoria@i+1)^0,c
  9346  0014F8  0E00               	movlw	0
  9347  0014FA  6E0B               	movwf	leeHorariosMemoria@i^0,c
  9348  0014FC                     l3794:
  9349                           
  9350                           ;main.c: 233:         horarios[i].hora = leer_eeprom(contMemoria++);
  9351  0014FC  0E00               	movlw	low _horarios
  9352  0014FE  6E07               	movwf	??_leeHorariosMemoria^0,c
  9353  001500  0E01               	movlw	high _horarios
  9354  001502  6E08               	movwf	(??_leeHorariosMemoria+1)^0,c
  9355  001504  90D8               	bcf	status,0,c
  9356  001506  340B               	rlcf	leeHorariosMemoria@i^0,w,c
  9357  001508  6ED9               	movwf	fsr2l,c
  9358  00150A  340C               	rlcf	(leeHorariosMemoria@i+1)^0,w,c
  9359  00150C  6EDA               	movwf	fsr2h,c
  9360  00150E  90D8               	bcf	status,0,c
  9361  001510  36D9               	rlcf	fsr2l,f,c
  9362  001512  36DA               	rlcf	fsr2h,f,c
  9363  001514  5007               	movf	??_leeHorariosMemoria^0,w,c
  9364  001516  26D9               	addwf	fsr2l,f,c
  9365  001518  5008               	movf	(??_leeHorariosMemoria+1)^0,w,c
  9366  00151A  22DA               	addwfc	fsr2h,f,c
  9367  00151C  C009  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  9368  001520  C00A  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  9369  001524  EC61  F012         	call	_leer_eeprom	;wreg free
  9370  001528  6EDF               	movwf	indf2,c
  9371  00152A  4A09               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  9372  00152C  2A0A               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  9373  00152E                     
  9374                           ;main.c: 234:         horarios[i].regar = leer_eeprom(contMemoria++);
  9375  00152E  0E00               	movlw	low _horarios
  9376  001530  6E07               	movwf	??_leeHorariosMemoria^0,c
  9377  001532  0E01               	movlw	high _horarios
  9378  001534  6E08               	movwf	(??_leeHorariosMemoria+1)^0,c
  9379  001536  0E01               	movlw	1
  9380  001538  2607               	addwf	??_leeHorariosMemoria^0,f,c
  9381  00153A  0E00               	movlw	0
  9382  00153C  2208               	addwfc	(??_leeHorariosMemoria+1)^0,f,c
  9383  00153E  90D8               	bcf	status,0,c
  9384  001540  340B               	rlcf	leeHorariosMemoria@i^0,w,c
  9385  001542  6ED9               	movwf	fsr2l,c
  9386  001544  340C               	rlcf	(leeHorariosMemoria@i+1)^0,w,c
  9387  001546  6EDA               	movwf	fsr2h,c
  9388  001548  90D8               	bcf	status,0,c
  9389  00154A  36D9               	rlcf	fsr2l,f,c
  9390  00154C  36DA               	rlcf	fsr2h,f,c
  9391  00154E  5007               	movf	??_leeHorariosMemoria^0,w,c
  9392  001550  26D9               	addwf	fsr2l,f,c
  9393  001552  5008               	movf	(??_leeHorariosMemoria+1)^0,w,c
  9394  001554  22DA               	addwfc	fsr2h,f,c
  9395  001556  C009  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  9396  00155A  C00A  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  9397  00155E  EC61  F012         	call	_leer_eeprom	;wreg free
  9398  001562  6EDF               	movwf	indf2,c
  9399  001564  4A09               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  9400  001566  2A0A               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  9401  001568                     
  9402                           ;main.c: 235:         horarios[i].tiempoRegar = leer_eeprom(contMemoria++);
  9403  001568  0E00               	movlw	low _horarios
  9404  00156A  6E07               	movwf	??_leeHorariosMemoria^0,c
  9405  00156C  0E01               	movlw	high _horarios
  9406  00156E  6E08               	movwf	(??_leeHorariosMemoria+1)^0,c
  9407  001570  0E03               	movlw	3
  9408  001572  2607               	addwf	??_leeHorariosMemoria^0,f,c
  9409  001574  0E00               	movlw	0
  9410  001576  2208               	addwfc	(??_leeHorariosMemoria+1)^0,f,c
  9411  001578  90D8               	bcf	status,0,c
  9412  00157A  340B               	rlcf	leeHorariosMemoria@i^0,w,c
  9413  00157C  6ED9               	movwf	fsr2l,c
  9414  00157E  340C               	rlcf	(leeHorariosMemoria@i+1)^0,w,c
  9415  001580  6EDA               	movwf	fsr2h,c
  9416  001582  90D8               	bcf	status,0,c
  9417  001584  36D9               	rlcf	fsr2l,f,c
  9418  001586  36DA               	rlcf	fsr2h,f,c
  9419  001588  5007               	movf	??_leeHorariosMemoria^0,w,c
  9420  00158A  26D9               	addwf	fsr2l,f,c
  9421  00158C  5008               	movf	(??_leeHorariosMemoria+1)^0,w,c
  9422  00158E  22DA               	addwfc	fsr2h,f,c
  9423  001590  C009  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
  9424  001594  C00A  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
  9425  001598  EC61  F012         	call	_leer_eeprom	;wreg free
  9426  00159C  6EDF               	movwf	indf2,c
  9427  00159E  4A09               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
  9428  0015A0  2A0A               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
  9429  0015A2                     
  9430                           ;main.c: 236:     }
  9431  0015A2  4A0B               	infsnz	leeHorariosMemoria@i^0,f,c
  9432  0015A4  2A0C               	incf	(leeHorariosMemoria@i+1)^0,f,c
  9433  0015A6  BE0C               	btfsc	(leeHorariosMemoria@i+1)^0,7,c
  9434  0015A8  EFDF  F00A         	goto	u2781
  9435  0015AC  500C               	movf	(leeHorariosMemoria@i+1)^0,w,c
  9436  0015AE  E109               	bnz	u2780
  9437  0015B0  0E18               	movlw	24
  9438  0015B2  5C0B               	subwf	leeHorariosMemoria@i^0,w,c
  9439  0015B4  A0D8               	btfss	status,0,c
  9440  0015B6  EFDF  F00A         	goto	u2781
  9441  0015BA  EFE1  F00A         	goto	u2780
  9442  0015BE                     u2781:
  9443  0015BE  EF7E  F00A         	goto	l3794
  9444  0015C2                     u2780:
  9445  0015C2  0012               	return		;funcret
  9446  0015C4                     __end_of_leeHorariosMemoria:
  9447                           	opt callstack 0
  9448                           
  9449 ;; *************** function _leer_eeprom *****************
  9450 ;; Defined at:
  9451 ;;		line 201 in file "main.c"
  9452 ;; Parameters:    Size  Location     Type
  9453 ;;  direccion       2    2[COMRAM] unsigned short 
  9454 ;; Auto vars:     Size  Location     Type
  9455 ;;  dato            1    5[COMRAM] unsigned char 
  9456 ;; Return value:  Size  Location     Type
  9457 ;;                  1    wreg      unsigned char 
  9458 ;; Registers used:
  9459 ;;		wreg, status,2, status,0, cstack
  9460 ;; Tracked objects:
  9461 ;;		On entry : 0/0
  9462 ;;		On exit  : 0/0
  9463 ;;		Unchanged: 0/0
  9464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9465 ;;      Params:         2       0       0       0       0       0       0       0       0
  9466 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9467 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9468 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9469 ;;Total ram usage:        4 bytes
  9470 ;; Hardware stack levels used:    1
  9471 ;; Hardware stack levels required when called:    3
  9472 ;; This function calls:
  9473 ;;		_i2c_detener
  9474 ;;		_i2c_envia_dato
  9475 ;;		_i2c_inicia_com
  9476 ;;		_i2c_recibe_dato
  9477 ;;		_i2c_reinicia_com
  9478 ;; This function is called by:
  9479 ;;		_leeHorariosMemoria
  9480 ;; This function uses a non-reentrant model
  9481 ;;
  9482                           
  9483                           	psect	text52
  9484  0024C2                     __ptext52:
  9485                           	opt callstack 0
  9486  0024C2                     _leer_eeprom:
  9487                           	opt callstack 26
  9488  0024C2                     
  9489                           ;main.c: 203:     unsigned char dato;;main.c: 205:     i2c_inicia_com();
  9490  0024C2  EC55  F013         	call	_i2c_inicia_com	;wreg free
  9491                           
  9492                           ;main.c: 206:     i2c_envia_dato(0xAE);
  9493  0024C6  0EAE               	movlw	174
  9494  0024C8  EC41  F013         	call	_i2c_envia_dato
  9495                           
  9496                           ;main.c: 207:     i2c_envia_dato(direccion >> 8);
  9497  0024CC  5004               	movf	(leer_eeprom@direccion+1)^0,w,c
  9498  0024CE  EC41  F013         	call	_i2c_envia_dato
  9499                           
  9500                           ;main.c: 208:     i2c_envia_dato(direccion);
  9501  0024D2  5003               	movf	leer_eeprom@direccion^0,w,c
  9502  0024D4  EC41  F013         	call	_i2c_envia_dato
  9503                           
  9504                           ;main.c: 209:     i2c_reinicia_com();
  9505  0024D8  EC51  F013         	call	_i2c_reinicia_com	;wreg free
  9506                           
  9507                           ;main.c: 210:     i2c_envia_dato(0xAF);
  9508  0024DC  0EAF               	movlw	175
  9509  0024DE  EC41  F013         	call	_i2c_envia_dato
  9510                           
  9511                           ;main.c: 211:     dato = i2c_recibe_dato();
  9512  0024E2  EC1E  F013         	call	_i2c_recibe_dato	;wreg free
  9513  0024E6  6E06               	movwf	leer_eeprom@dato^0,c
  9514                           
  9515                           ;main.c: 212:     i2c_detener();
  9516  0024E8  EC59  F013         	call	_i2c_detener	;wreg free
  9517  0024EC                     
  9518                           ;main.c: 213:     _delay((unsigned long)((10)*(4000000/4000.0)));
  9519  0024EC  0E0D               	movlw	13
  9520  0024EE  6E05               	movwf	??_leer_eeprom^0,c
  9521  0024F0  0EFC               	movlw	252
  9522  0024F2                     u3067:
  9523  0024F2  2EE8               	decfsz	wreg,f,c
  9524  0024F4  D7FE               	bra	u3067
  9525  0024F6  2E05               	decfsz	??_leer_eeprom^0,f,c
  9526  0024F8  D7FC               	bra	u3067
  9527  0024FA                     
  9528                           ;main.c: 215:     return dato;
  9529  0024FA  5006               	movf	leer_eeprom@dato^0,w,c
  9530  0024FC  0012               	return		;funcret
  9531  0024FE                     __end_of_leer_eeprom:
  9532                           	opt callstack 0
  9533                           
  9534 ;; *************** function _i2c_reinicia_com *****************
  9535 ;; Defined at:
  9536 ;;		line 37 in file "./I2C.h"
  9537 ;; Parameters:    Size  Location     Type
  9538 ;;		None
  9539 ;; Auto vars:     Size  Location     Type
  9540 ;;		None
  9541 ;; Return value:  Size  Location     Type
  9542 ;;                  1    wreg      void 
  9543 ;; Registers used:
  9544 ;;		wreg, status,2, status,0, cstack
  9545 ;; Tracked objects:
  9546 ;;		On entry : 0/0
  9547 ;;		On exit  : 0/0
  9548 ;;		Unchanged: 0/0
  9549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9550 ;;      Params:         0       0       0       0       0       0       0       0       0
  9551 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9552 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9553 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9554 ;;Total ram usage:        0 bytes
  9555 ;; Hardware stack levels used:    1
  9556 ;; Hardware stack levels required when called:    2
  9557 ;; This function calls:
  9558 ;;		_i2c_espera
  9559 ;; This function is called by:
  9560 ;;		_leer_rtc
  9561 ;;		_leer_eeprom
  9562 ;; This function uses a non-reentrant model
  9563 ;;
  9564                           
  9565                           	psect	text53
  9566  0026A2                     __ptext53:
  9567                           	opt callstack 0
  9568  0026A2                     _i2c_reinicia_com:
  9569                           	opt callstack 25
  9570  0026A2                     
  9571                           ;./I2C.h: 38:     i2c_espera();
  9572  0026A2  ECDC  F012         	call	_i2c_espera	;wreg free
  9573  0026A6                     
  9574                           ;./I2C.h: 39:     SSPCON2bits.RSEN = 1;
  9575  0026A6  82C5               	bsf	197,1,c	;volatile
  9576  0026A8  0012               	return		;funcret
  9577  0026AA                     __end_of_i2c_reinicia_com:
  9578                           	opt callstack 0
  9579                           
  9580 ;; *************** function _i2c_recibe_dato *****************
  9581 ;; Defined at:
  9582 ;;		line 68 in file "./I2C.h"
  9583 ;; Parameters:    Size  Location     Type
  9584 ;;		None
  9585 ;; Auto vars:     Size  Location     Type
  9586 ;;  datoleido       1    1[COMRAM] unsigned char 
  9587 ;; Return value:  Size  Location     Type
  9588 ;;                  1    wreg      unsigned char 
  9589 ;; Registers used:
  9590 ;;		wreg, status,2, status,0, cstack
  9591 ;; Tracked objects:
  9592 ;;		On entry : 0/0
  9593 ;;		On exit  : 0/0
  9594 ;;		Unchanged: 0/0
  9595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9596 ;;      Params:         0       0       0       0       0       0       0       0       0
  9597 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9598 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9599 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9600 ;;Total ram usage:        1 bytes
  9601 ;; Hardware stack levels used:    1
  9602 ;; Hardware stack levels required when called:    2
  9603 ;; This function calls:
  9604 ;;		_i2c_espera
  9605 ;; This function is called by:
  9606 ;;		_leer_rtc
  9607 ;;		_leer_eeprom
  9608 ;; This function uses a non-reentrant model
  9609 ;;
  9610                           
  9611                           	psect	text54
  9612  00263C                     __ptext54:
  9613                           	opt callstack 0
  9614  00263C                     _i2c_recibe_dato:
  9615                           	opt callstack 25
  9616  00263C                     
  9617                           ;./I2C.h: 70:     unsigned char datoleido;;./I2C.h: 73:     i2c_espera();
  9618  00263C  ECDC  F012         	call	_i2c_espera	;wreg free
  9619  002640                     
  9620                           ;./I2C.h: 74:     SSPCON2bits.RCEN = 1;
  9621  002640  86C5               	bsf	197,3,c	;volatile
  9622                           
  9623                           ;./I2C.h: 76:     i2c_espera();
  9624  002642  ECDC  F012         	call	_i2c_espera	;wreg free
  9625  002646                     
  9626                           ;./I2C.h: 77:     datoleido = SSPBUF;
  9627  002646  CFC9 F002          	movff	4041,i2c_recibe_dato@datoleido	;volatile
  9628                           
  9629                           ;./I2C.h: 80:     i2c_espera();
  9630  00264A  ECDC  F012         	call	_i2c_espera	;wreg free
  9631  00264E                     
  9632                           ;./I2C.h: 82:     SSPCON2bits.ACKDT = 1;
  9633  00264E  8AC5               	bsf	197,5,c	;volatile
  9634  002650                     
  9635                           ;./I2C.h: 87:     SSPCON2bits.ACKEN = 1;
  9636  002650  88C5               	bsf	197,4,c	;volatile
  9637  002652                     
  9638                           ;./I2C.h: 91:     return datoleido;
  9639  002652  5002               	movf	i2c_recibe_dato@datoleido^0,w,c
  9640  002654  0012               	return		;funcret
  9641  002656                     __end_of_i2c_recibe_dato:
  9642                           	opt callstack 0
  9643                           
  9644 ;; *************** function _i2c_inicia_com *****************
  9645 ;; Defined at:
  9646 ;;		line 28 in file "./I2C.h"
  9647 ;; Parameters:    Size  Location     Type
  9648 ;;		None
  9649 ;; Auto vars:     Size  Location     Type
  9650 ;;		None
  9651 ;; Return value:  Size  Location     Type
  9652 ;;                  1    wreg      void 
  9653 ;; Registers used:
  9654 ;;		wreg, status,2, status,0, cstack
  9655 ;; Tracked objects:
  9656 ;;		On entry : 0/0
  9657 ;;		On exit  : 0/0
  9658 ;;		Unchanged: 0/0
  9659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9660 ;;      Params:         0       0       0       0       0       0       0       0       0
  9661 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9662 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9663 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9664 ;;Total ram usage:        0 bytes
  9665 ;; Hardware stack levels used:    1
  9666 ;; Hardware stack levels required when called:    2
  9667 ;; This function calls:
  9668 ;;		_i2c_espera
  9669 ;; This function is called by:
  9670 ;;		_escribe_rtc
  9671 ;;		_leer_rtc
  9672 ;;		_escribe_eeprom
  9673 ;;		_leer_eeprom
  9674 ;; This function uses a non-reentrant model
  9675 ;;
  9676                           
  9677                           	psect	text55
  9678  0026AA                     __ptext55:
  9679                           	opt callstack 0
  9680  0026AA                     _i2c_inicia_com:
  9681                           	opt callstack 25
  9682  0026AA                     
  9683                           ;./I2C.h: 29:     i2c_espera();
  9684  0026AA  ECDC  F012         	call	_i2c_espera	;wreg free
  9685  0026AE                     
  9686                           ;./I2C.h: 30:     SSPCON2bits.SEN = 1;
  9687  0026AE  80C5               	bsf	197,0,c	;volatile
  9688  0026B0  0012               	return		;funcret
  9689  0026B2                     __end_of_i2c_inicia_com:
  9690                           	opt callstack 0
  9691                           
  9692 ;; *************** function _i2c_envia_dato *****************
  9693 ;; Defined at:
  9694 ;;		line 57 in file "./I2C.h"
  9695 ;; Parameters:    Size  Location     Type
  9696 ;;  dato            1    wreg     unsigned char 
  9697 ;; Auto vars:     Size  Location     Type
  9698 ;;  dato            1    1[COMRAM] unsigned char 
  9699 ;; Return value:  Size  Location     Type
  9700 ;;                  1    wreg      unsigned char 
  9701 ;; Registers used:
  9702 ;;		wreg, status,2, status,0, cstack
  9703 ;; Tracked objects:
  9704 ;;		On entry : 0/0
  9705 ;;		On exit  : 0/0
  9706 ;;		Unchanged: 0/0
  9707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9708 ;;      Params:         0       0       0       0       0       0       0       0       0
  9709 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9710 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9711 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9712 ;;Total ram usage:        1 bytes
  9713 ;; Hardware stack levels used:    1
  9714 ;; Hardware stack levels required when called:    2
  9715 ;; This function calls:
  9716 ;;		_i2c_espera
  9717 ;; This function is called by:
  9718 ;;		_escribe_rtc
  9719 ;;		_leer_rtc
  9720 ;;		_escribe_eeprom
  9721 ;;		_leer_eeprom
  9722 ;; This function uses a non-reentrant model
  9723 ;;
  9724                           
  9725                           	psect	text56
  9726  002682                     __ptext56:
  9727                           	opt callstack 0
  9728  002682                     _i2c_envia_dato:
  9729                           	opt callstack 25
  9730                           
  9731                           ;incstack = 0
  9732                           ;i2c_envia_dato@dato stored from wreg
  9733  002682  6E02               	movwf	i2c_envia_dato@dato^0,c
  9734  002684                     
  9735                           ;./I2C.h: 58:     i2c_espera();
  9736  002684  ECDC  F012         	call	_i2c_espera	;wreg free
  9737  002688                     
  9738                           ;./I2C.h: 59:     SSPBUF = dato;
  9739  002688  C002  FFC9         	movff	i2c_envia_dato@dato,4041	;volatile
  9740  00268C  0012               	return		;funcret
  9741  00268E                     __end_of_i2c_envia_dato:
  9742                           	opt callstack 0
  9743                           
  9744 ;; *************** function _i2c_detener *****************
  9745 ;; Defined at:
  9746 ;;		line 46 in file "./I2C.h"
  9747 ;; Parameters:    Size  Location     Type
  9748 ;;		None
  9749 ;; Auto vars:     Size  Location     Type
  9750 ;;		None
  9751 ;; Return value:  Size  Location     Type
  9752 ;;                  1    wreg      void 
  9753 ;; Registers used:
  9754 ;;		wreg, status,2, status,0, cstack
  9755 ;; Tracked objects:
  9756 ;;		On entry : 0/0
  9757 ;;		On exit  : 0/0
  9758 ;;		Unchanged: 0/0
  9759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9760 ;;      Params:         0       0       0       0       0       0       0       0       0
  9761 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9762 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9763 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9764 ;;Total ram usage:        0 bytes
  9765 ;; Hardware stack levels used:    1
  9766 ;; Hardware stack levels required when called:    2
  9767 ;; This function calls:
  9768 ;;		_i2c_espera
  9769 ;; This function is called by:
  9770 ;;		_escribe_rtc
  9771 ;;		_leer_rtc
  9772 ;;		_escribe_eeprom
  9773 ;;		_leer_eeprom
  9774 ;; This function uses a non-reentrant model
  9775 ;;
  9776                           
  9777                           	psect	text57
  9778  0026B2                     __ptext57:
  9779                           	opt callstack 0
  9780  0026B2                     _i2c_detener:
  9781                           	opt callstack 25
  9782  0026B2                     
  9783                           ;./I2C.h: 47:     i2c_espera();
  9784  0026B2  ECDC  F012         	call	_i2c_espera	;wreg free
  9785  0026B6                     
  9786                           ;./I2C.h: 48:     SSPCON2bits.PEN = 1;
  9787  0026B6  84C5               	bsf	197,2,c	;volatile
  9788  0026B8  0012               	return		;funcret
  9789  0026BA                     __end_of_i2c_detener:
  9790                           	opt callstack 0
  9791                           
  9792 ;; *************** function _i2c_espera *****************
  9793 ;; Defined at:
  9794 ;;		line 20 in file "./I2C.h"
  9795 ;; Parameters:    Size  Location     Type
  9796 ;;		None
  9797 ;; Auto vars:     Size  Location     Type
  9798 ;;		None
  9799 ;; Return value:  Size  Location     Type
  9800 ;;                  1    wreg      void 
  9801 ;; Registers used:
  9802 ;;		wreg, status,2, status,0
  9803 ;; Tracked objects:
  9804 ;;		On entry : 0/0
  9805 ;;		On exit  : 0/0
  9806 ;;		Unchanged: 0/0
  9807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9808 ;;      Params:         0       0       0       0       0       0       0       0       0
  9809 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9810 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9811 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9812 ;;Total ram usage:        1 bytes
  9813 ;; Hardware stack levels used:    1
  9814 ;; Hardware stack levels required when called:    1
  9815 ;; This function calls:
  9816 ;;		Nothing
  9817 ;; This function is called by:
  9818 ;;		_i2c_inicia_com
  9819 ;;		_i2c_reinicia_com
  9820 ;;		_i2c_detener
  9821 ;;		_i2c_envia_dato
  9822 ;;		_i2c_recibe_dato
  9823 ;; This function uses a non-reentrant model
  9824 ;;
  9825                           
  9826                           	psect	text58
  9827  0025B8                     __ptext58:
  9828                           	opt callstack 0
  9829  0025B8                     _i2c_espera:
  9830                           	opt callstack 25
  9831  0025B8                     l2886:
  9832  0025B8  CFC5 F001          	movff	4037,??_i2c_espera	;volatile
  9833  0025BC  0E1F               	movlw	31
  9834  0025BE  1601               	andwf	??_i2c_espera^0,f,c
  9835  0025C0  A4D8               	btfss	status,2,c
  9836  0025C2  EFE5  F012         	goto	u1891
  9837  0025C6  EFE7  F012         	goto	u1890
  9838  0025CA                     u1891:
  9839  0025CA  EFDC  F012         	goto	l2886
  9840  0025CE                     u1890:
  9841  0025CE  B4C7               	btfsc	199,2,c	;volatile
  9842  0025D0  EFEC  F012         	goto	u1901
  9843  0025D4  EFEE  F012         	goto	u1900
  9844  0025D8                     u1901:
  9845  0025D8  EFDC  F012         	goto	l2886
  9846  0025DC                     u1900:
  9847  0025DC  0012               	return		;funcret
  9848  0025DE                     __end_of_i2c_espera:
  9849                           	opt callstack 0
  9850                           
  9851 ;; *************** function _inicializarObjetos *****************
  9852 ;; Defined at:
  9853 ;;		line 152 in file "main.c"
  9854 ;; Parameters:    Size  Location     Type
  9855 ;;		None
  9856 ;; Auto vars:     Size  Location     Type
  9857 ;;  i               2    2[COMRAM] int 
  9858 ;; Return value:  Size  Location     Type
  9859 ;;                  1    wreg      void 
  9860 ;; Registers used:
  9861 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9862 ;; Tracked objects:
  9863 ;;		On entry : 0/0
  9864 ;;		On exit  : 0/0
  9865 ;;		Unchanged: 0/0
  9866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9867 ;;      Params:         0       0       0       0       0       0       0       0       0
  9868 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9869 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9870 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9871 ;;Total ram usage:        4 bytes
  9872 ;; Hardware stack levels used:    1
  9873 ;; Hardware stack levels required when called:    1
  9874 ;; This function calls:
  9875 ;;		Nothing
  9876 ;; This function is called by:
  9877 ;;		_main
  9878 ;; This function uses a non-reentrant model
  9879 ;;
  9880                           
  9881                           	psect	text59
  9882  0015C4                     __ptext59:
  9883                           	opt callstack 0
  9884  0015C4                     _inicializarObjetos:
  9885                           	opt callstack 29
  9886  0015C4                     
  9887                           ;main.c: 154:     for (int i = 0; i < 24; i++) {
  9888  0015C4  0E00               	movlw	0
  9889  0015C6  6E04               	movwf	(inicializarObjetos@i+1)^0,c
  9890  0015C8  0E00               	movlw	0
  9891  0015CA  6E03               	movwf	inicializarObjetos@i^0,c
  9892  0015CC                     l3782:
  9893                           
  9894                           ;main.c: 155:         horarios[i].hora = i;
  9895  0015CC  0E00               	movlw	low _horarios
  9896  0015CE  6E01               	movwf	??_inicializarObjetos^0,c
  9897  0015D0  0E01               	movlw	high _horarios
  9898  0015D2  6E02               	movwf	(??_inicializarObjetos+1)^0,c
  9899  0015D4  90D8               	bcf	status,0,c
  9900  0015D6  3403               	rlcf	inicializarObjetos@i^0,w,c
  9901  0015D8  6ED9               	movwf	fsr2l,c
  9902  0015DA  3404               	rlcf	(inicializarObjetos@i+1)^0,w,c
  9903  0015DC  6EDA               	movwf	fsr2h,c
  9904  0015DE  90D8               	bcf	status,0,c
  9905  0015E0  36D9               	rlcf	fsr2l,f,c
  9906  0015E2  36DA               	rlcf	fsr2h,f,c
  9907  0015E4  5001               	movf	??_inicializarObjetos^0,w,c
  9908  0015E6  26D9               	addwf	fsr2l,f,c
  9909  0015E8  5002               	movf	(??_inicializarObjetos+1)^0,w,c
  9910  0015EA  22DA               	addwfc	fsr2h,f,c
  9911  0015EC  C003  FFDF         	movff	inicializarObjetos@i,indf2
  9912                           
  9913                           ;main.c: 156:         horarios[i].regar = 0;
  9914  0015F0  0E00               	movlw	low _horarios
  9915  0015F2  6E01               	movwf	??_inicializarObjetos^0,c
  9916  0015F4  0E01               	movlw	high _horarios
  9917  0015F6  6E02               	movwf	(??_inicializarObjetos+1)^0,c
  9918  0015F8  0E01               	movlw	1
  9919  0015FA  2601               	addwf	??_inicializarObjetos^0,f,c
  9920  0015FC  0E00               	movlw	0
  9921  0015FE  2202               	addwfc	(??_inicializarObjetos+1)^0,f,c
  9922  001600  90D8               	bcf	status,0,c
  9923  001602  3403               	rlcf	inicializarObjetos@i^0,w,c
  9924  001604  6ED9               	movwf	fsr2l,c
  9925  001606  3404               	rlcf	(inicializarObjetos@i+1)^0,w,c
  9926  001608  6EDA               	movwf	fsr2h,c
  9927  00160A  90D8               	bcf	status,0,c
  9928  00160C  36D9               	rlcf	fsr2l,f,c
  9929  00160E  36DA               	rlcf	fsr2h,f,c
  9930  001610  5001               	movf	??_inicializarObjetos^0,w,c
  9931  001612  26D9               	addwf	fsr2l,f,c
  9932  001614  5002               	movf	(??_inicializarObjetos+1)^0,w,c
  9933  001616  22DA               	addwfc	fsr2h,f,c
  9934  001618  0E00               	movlw	0
  9935  00161A  6EDF               	movwf	indf2,c
  9936                           
  9937                           ;main.c: 157:         horarios[i].regado = 0;
  9938  00161C  0E00               	movlw	low _horarios
  9939  00161E  6E01               	movwf	??_inicializarObjetos^0,c
  9940  001620  0E01               	movlw	high _horarios
  9941  001622  6E02               	movwf	(??_inicializarObjetos+1)^0,c
  9942  001624  0E02               	movlw	2
  9943  001626  2601               	addwf	??_inicializarObjetos^0,f,c
  9944  001628  0E00               	movlw	0
  9945  00162A  2202               	addwfc	(??_inicializarObjetos+1)^0,f,c
  9946  00162C  90D8               	bcf	status,0,c
  9947  00162E  3403               	rlcf	inicializarObjetos@i^0,w,c
  9948  001630  6ED9               	movwf	fsr2l,c
  9949  001632  3404               	rlcf	(inicializarObjetos@i+1)^0,w,c
  9950  001634  6EDA               	movwf	fsr2h,c
  9951  001636  90D8               	bcf	status,0,c
  9952  001638  36D9               	rlcf	fsr2l,f,c
  9953  00163A  36DA               	rlcf	fsr2h,f,c
  9954  00163C  5001               	movf	??_inicializarObjetos^0,w,c
  9955  00163E  26D9               	addwf	fsr2l,f,c
  9956  001640  5002               	movf	(??_inicializarObjetos+1)^0,w,c
  9957  001642  22DA               	addwfc	fsr2h,f,c
  9958  001644  0E00               	movlw	0
  9959  001646  6EDF               	movwf	indf2,c
  9960                           
  9961                           ;main.c: 158:         horarios[i].tiempoRegar = 15;
  9962  001648  0E00               	movlw	low _horarios
  9963  00164A  6E01               	movwf	??_inicializarObjetos^0,c
  9964  00164C  0E01               	movlw	high _horarios
  9965  00164E  6E02               	movwf	(??_inicializarObjetos+1)^0,c
  9966  001650  0E03               	movlw	3
  9967  001652  2601               	addwf	??_inicializarObjetos^0,f,c
  9968  001654  0E00               	movlw	0
  9969  001656  2202               	addwfc	(??_inicializarObjetos+1)^0,f,c
  9970  001658  90D8               	bcf	status,0,c
  9971  00165A  3403               	rlcf	inicializarObjetos@i^0,w,c
  9972  00165C  6ED9               	movwf	fsr2l,c
  9973  00165E  3404               	rlcf	(inicializarObjetos@i+1)^0,w,c
  9974  001660  6EDA               	movwf	fsr2h,c
  9975  001662  90D8               	bcf	status,0,c
  9976  001664  36D9               	rlcf	fsr2l,f,c
  9977  001666  36DA               	rlcf	fsr2h,f,c
  9978  001668  5001               	movf	??_inicializarObjetos^0,w,c
  9979  00166A  26D9               	addwf	fsr2l,f,c
  9980  00166C  5002               	movf	(??_inicializarObjetos+1)^0,w,c
  9981  00166E  22DA               	addwfc	fsr2h,f,c
  9982  001670  0E0F               	movlw	15
  9983  001672  6EDF               	movwf	indf2,c
  9984  001674                     
  9985                           ;main.c: 159:     }
  9986  001674  4A03               	infsnz	inicializarObjetos@i^0,f,c
  9987  001676  2A04               	incf	(inicializarObjetos@i+1)^0,f,c
  9988  001678  BE04               	btfsc	(inicializarObjetos@i+1)^0,7,c
  9989  00167A  EF48  F00B         	goto	u2771
  9990  00167E  5004               	movf	(inicializarObjetos@i+1)^0,w,c
  9991  001680  E109               	bnz	u2770
  9992  001682  0E18               	movlw	24
  9993  001684  5C03               	subwf	inicializarObjetos@i^0,w,c
  9994  001686  A0D8               	btfss	status,0,c
  9995  001688  EF48  F00B         	goto	u2771
  9996  00168C  EF4A  F00B         	goto	u2770
  9997  001690                     u2771:
  9998  001690  EFE6  F00A         	goto	l3782
  9999  001694                     u2770:
 10000  001694  0012               	return		;funcret
 10001  001696                     __end_of_inicializarObjetos:
 10002                           	opt callstack 0
 10003                           
 10004 ;; *************** function _i2c_iniciar *****************
 10005 ;; Defined at:
 10006 ;;		line 4 in file "./I2C.h"
 10007 ;; Parameters:    Size  Location     Type
 10008 ;;		None
 10009 ;; Auto vars:     Size  Location     Type
 10010 ;;		None
 10011 ;; Return value:  Size  Location     Type
 10012 ;;                  1    wreg      void 
 10013 ;; Registers used:
 10014 ;;		wreg, status,2
 10015 ;; Tracked objects:
 10016 ;;		On entry : 0/0
 10017 ;;		On exit  : 0/0
 10018 ;;		Unchanged: 0/0
 10019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10020 ;;      Params:         0       0       0       0       0       0       0       0       0
 10021 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10022 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10023 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10024 ;;Total ram usage:        0 bytes
 10025 ;; Hardware stack levels used:    1
 10026 ;; Hardware stack levels required when called:    1
 10027 ;; This function calls:
 10028 ;;		Nothing
 10029 ;; This function is called by:
 10030 ;;		_main
 10031 ;; This function uses a non-reentrant model
 10032 ;;
 10033                           
 10034                           	psect	text60
 10035  00266C                     __ptext60:
 10036                           	opt callstack 0
 10037  00266C                     _i2c_iniciar:
 10038                           	opt callstack 29
 10039  00266C                     
 10040                           ;./I2C.h: 5:     TRISBbits.RB0 = 1;
 10041  00266C  8093               	bsf	147,0,c	;volatile
 10042                           
 10043                           ;./I2C.h: 6:     TRISBbits.RB1 = 1;
 10044  00266E  8293               	bsf	147,1,c	;volatile
 10045  002670                     
 10046                           ;./I2C.h: 7:     SSPSTAT = 0b10000000;
 10047  002670  0E80               	movlw	128
 10048  002672  6EC7               	movwf	199,c	;volatile
 10049                           
 10050                           ;./I2C.h: 8:     SSPCON1 = 0b00101000;
 10051  002674  0E28               	movlw	40
 10052  002676  6EC6               	movwf	198,c	;volatile
 10053                           
 10054                           ;./I2C.h: 9:     SSPCON2 = 0b00000000;
 10055  002678  0E00               	movlw	0
 10056  00267A  6EC5               	movwf	197,c	;volatile
 10057                           
 10058                           ;./I2C.h: 10:     SSPADD = 9;
 10059  00267C  0E09               	movlw	9
 10060  00267E  6EC8               	movwf	200,c	;volatile
 10061  002680  0012               	return		;funcret
 10062  002682                     __end_of_i2c_iniciar:
 10063                           	opt callstack 0
 10064                           
 10065 ;; *************** function _configurarAdc *****************
 10066 ;; Defined at:
 10067 ;;		line 133 in file "main.c"
 10068 ;; Parameters:    Size  Location     Type
 10069 ;;		None
 10070 ;; Auto vars:     Size  Location     Type
 10071 ;;		None
 10072 ;; Return value:  Size  Location     Type
 10073 ;;                  1    wreg      void 
 10074 ;; Registers used:
 10075 ;;		wreg, status,2
 10076 ;; Tracked objects:
 10077 ;;		On entry : 0/0
 10078 ;;		On exit  : 0/0
 10079 ;;		Unchanged: 0/0
 10080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10081 ;;      Params:         0       0       0       0       0       0       0       0       0
 10082 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10083 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10084 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10085 ;;Total ram usage:        0 bytes
 10086 ;; Hardware stack levels used:    1
 10087 ;; Hardware stack levels required when called:    1
 10088 ;; This function calls:
 10089 ;;		Nothing
 10090 ;; This function is called by:
 10091 ;;		_main
 10092 ;; This function uses a non-reentrant model
 10093 ;;
 10094                           
 10095                           	psect	text61
 10096  002698                     __ptext61:
 10097                           	opt callstack 0
 10098  002698                     _configurarAdc:
 10099                           	opt callstack 29
 10100  002698                     
 10101                           ;main.c: 134:     ADCON1 = 0b00000000;
 10102  002698  0E00               	movlw	0
 10103  00269A  6EC1               	movwf	193,c	;volatile
 10104                           
 10105                           ;main.c: 135:     ADCON2 = 0b10100101;
 10106  00269C  0EA5               	movlw	165
 10107  00269E  6EC0               	movwf	192,c	;volatile
 10108  0026A0  0012               	return		;funcret
 10109  0026A2                     __end_of_configurarAdc:
 10110                           	opt callstack 0
 10111                           
 10112 ;; *************** function _UART_init *****************
 10113 ;; Defined at:
 10114 ;;		line 12 in file "./UART.h"
 10115 ;; Parameters:    Size  Location     Type
 10116 ;;  BAUD            4   26[COMRAM] long 
 10117 ;; Auto vars:     Size  Location     Type
 10118 ;;  frecuenciaCr    4    0        long 
 10119 ;; Return value:  Size  Location     Type
 10120 ;;                  1    wreg      void 
 10121 ;; Registers used:
 10122 ;;		wreg, status,2, status,0, cstack
 10123 ;; Tracked objects:
 10124 ;;		On entry : 0/0
 10125 ;;		On exit  : 0/0
 10126 ;;		Unchanged: 0/0
 10127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10128 ;;      Params:         4       0       0       0       0       0       0       0       0
 10129 ;;      Locals:         8       0       0       0       0       0       0       0       0
 10130 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10131 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10132 ;;Total ram usage:       12 bytes
 10133 ;; Hardware stack levels used:    1
 10134 ;; Hardware stack levels required when called:    2
 10135 ;; This function calls:
 10136 ;;		___aldiv
 10137 ;; This function is called by:
 10138 ;;		_main
 10139 ;; This function uses a non-reentrant model
 10140 ;;
 10141                           
 10142                           	psect	text62
 10143  001E5A                     __ptext62:
 10144                           	opt callstack 0
 10145  001E5A                     _UART_init:
 10146                           	opt callstack 28
 10147  001E5A                     
 10148                           ;./UART.h: 14:     TRISCbits.TRISC6 = 0;
 10149  001E5A  9C94               	bcf	148,6,c	;volatile
 10150  001E5C                     
 10151                           ;./UART.h: 15:     TRISCbits.TRISC7 = 1;
 10152  001E5C  8E94               	bsf	148,7,c	;volatile
 10153  001E5E                     
 10154                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 10155  001E5E  0E10               	movlw	16
 10156  001E60  6E11               	movwf	___aldiv@divisor^0,c
 10157  001E62  0E00               	movlw	0
 10158  001E64  6E12               	movwf	(___aldiv@divisor+1)^0,c
 10159  001E66  0E00               	movlw	0
 10160  001E68  6E13               	movwf	(___aldiv@divisor+2)^0,c
 10161  001E6A  0E00               	movlw	0
 10162  001E6C  6E14               	movwf	(___aldiv@divisor+3)^0,c
 10163  001E6E  0E00               	movlw	0
 10164  001E70  6E0D               	movwf	___aldiv@dividend^0,c
 10165  001E72  0E09               	movlw	9
 10166  001E74  6E0E               	movwf	(___aldiv@dividend+1)^0,c
 10167  001E76  0E3D               	movlw	61
 10168  001E78  6E0F               	movwf	(___aldiv@dividend+2)^0,c
 10169  001E7A  0E00               	movlw	0
 10170  001E7C  6E10               	movwf	(___aldiv@dividend+3)^0,c
 10171  001E7E  EC99  F007         	call	___aldiv	;wreg free
 10172  001E82  C00D  F023         	movff	?___aldiv,_UART_init$1824
 10173  001E86  C00E  F024         	movff	?___aldiv+1,_UART_init$1824+1
 10174  001E8A  C00F  F025         	movff	?___aldiv+2,_UART_init$1824+2
 10175  001E8E  C010  F026         	movff	?___aldiv+3,_UART_init$1824+3
 10176  001E92                     
 10177                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 10178  001E92  C023  F00D         	movff	_UART_init$1824,___aldiv@dividend
 10179  001E96  C024  F00E         	movff	_UART_init$1824+1,___aldiv@dividend+1
 10180  001E9A  C025  F00F         	movff	_UART_init$1824+2,___aldiv@dividend+2
 10181  001E9E  C026  F010         	movff	_UART_init$1824+3,___aldiv@dividend+3
 10182  001EA2  C01B  F011         	movff	UART_init@BAUD,___aldiv@divisor
 10183  001EA6  C01C  F012         	movff	UART_init@BAUD+1,___aldiv@divisor+1
 10184  001EAA  C01D  F013         	movff	UART_init@BAUD+2,___aldiv@divisor+2
 10185  001EAE  C01E  F014         	movff	UART_init@BAUD+3,___aldiv@divisor+3
 10186  001EB2  EC99  F007         	call	___aldiv	;wreg free
 10187  001EB6  040D               	decf	?___aldiv^0,w,c
 10188  001EB8  6EAF               	movwf	175,c	;volatile
 10189  001EBA                     
 10190                           ;./UART.h: 21:     TXSTAbits.BRGH = 1;
 10191  001EBA  84AC               	bsf	172,2,c	;volatile
 10192  001EBC                     
 10193                           ;./UART.h: 22:     TXSTAbits.SYNC = 0;
 10194  001EBC  98AC               	bcf	172,4,c	;volatile
 10195  001EBE                     
 10196                           ;./UART.h: 23:     RCSTAbits.SPEN = 1;
 10197  001EBE  8EAB               	bsf	171,7,c	;volatile
 10198  001EC0                     
 10199                           ;./UART.h: 26:     TXSTAbits.TX9 = 0;
 10200  001EC0  9CAC               	bcf	172,6,c	;volatile
 10201  001EC2                     
 10202                           ;./UART.h: 27:     TXSTAbits.TXEN = 1;
 10203  001EC2  8AAC               	bsf	172,5,c	;volatile
 10204  001EC4                     
 10205                           ;./UART.h: 30:     RCSTAbits.RC9 = 0;
 10206  001EC4  9CAB               	bcf	171,6,c	;volatile
 10207  001EC6                     
 10208                           ;./UART.h: 31:     RCSTAbits.CREN = 1;
 10209  001EC6  88AB               	bsf	171,4,c	;volatile
 10210  001EC8  0012               	return		;funcret
 10211  001ECA                     __end_of_UART_init:
 10212                           	opt callstack 0
 10213                           
 10214 ;; *************** function ___aldiv *****************
 10215 ;; Defined at:
 10216 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 10217 ;; Parameters:    Size  Location     Type
 10218 ;;  dividend        4   12[COMRAM] long 
 10219 ;;  divisor         4   16[COMRAM] long 
 10220 ;; Auto vars:     Size  Location     Type
 10221 ;;  quotient        4   22[COMRAM] long 
 10222 ;;  sign            1   21[COMRAM] unsigned char 
 10223 ;;  counter         1   20[COMRAM] unsigned char 
 10224 ;; Return value:  Size  Location     Type
 10225 ;;                  4   12[COMRAM] long 
 10226 ;; Registers used:
 10227 ;;		wreg, status,2, status,0
 10228 ;; Tracked objects:
 10229 ;;		On entry : 0/0
 10230 ;;		On exit  : 0/0
 10231 ;;		Unchanged: 0/0
 10232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10233 ;;      Params:         8       0       0       0       0       0       0       0       0
 10234 ;;      Locals:         6       0       0       0       0       0       0       0       0
 10235 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10236 ;;      Totals:        14       0       0       0       0       0       0       0       0
 10237 ;;Total ram usage:       14 bytes
 10238 ;; Hardware stack levels used:    1
 10239 ;; Hardware stack levels required when called:    1
 10240 ;; This function calls:
 10241 ;;		Nothing
 10242 ;; This function is called by:
 10243 ;;		_UART_init
 10244 ;;		_map
 10245 ;; This function uses a non-reentrant model
 10246 ;;
 10247                           
 10248                           	psect	text63
 10249  000F32                     __ptext63:
 10250                           	opt callstack 0
 10251  000F32                     ___aldiv:
 10252                           	opt callstack 26
 10253  000F32  0E00               	movlw	0
 10254  000F34  6E16               	movwf	___aldiv@sign^0,c
 10255  000F36  BE14               	btfsc	(___aldiv@divisor+3)^0,7,c
 10256  000F38  EFA2  F007         	goto	u2120
 10257  000F3C  EFA0  F007         	goto	u2121
 10258  000F40                     u2121:
 10259  000F40  EFAC  F007         	goto	l3054
 10260  000F44                     u2120:
 10261  000F44  1E14               	comf	(___aldiv@divisor+3)^0,f,c
 10262  000F46  1E13               	comf	(___aldiv@divisor+2)^0,f,c
 10263  000F48  1E12               	comf	(___aldiv@divisor+1)^0,f,c
 10264  000F4A  6C11               	negf	___aldiv@divisor^0,c
 10265  000F4C  0E00               	movlw	0
 10266  000F4E  2212               	addwfc	(___aldiv@divisor+1)^0,f,c
 10267  000F50  2213               	addwfc	(___aldiv@divisor+2)^0,f,c
 10268  000F52  2214               	addwfc	(___aldiv@divisor+3)^0,f,c
 10269  000F54  0E01               	movlw	1
 10270  000F56  6E16               	movwf	___aldiv@sign^0,c
 10271  000F58                     l3054:
 10272  000F58  BE10               	btfsc	(___aldiv@dividend+3)^0,7,c
 10273  000F5A  EFB3  F007         	goto	u2130
 10274  000F5E  EFB1  F007         	goto	u2131
 10275  000F62                     u2131:
 10276  000F62  EFBD  F007         	goto	l3060
 10277  000F66                     u2130:
 10278  000F66  1E10               	comf	(___aldiv@dividend+3)^0,f,c
 10279  000F68  1E0F               	comf	(___aldiv@dividend+2)^0,f,c
 10280  000F6A  1E0E               	comf	(___aldiv@dividend+1)^0,f,c
 10281  000F6C  6C0D               	negf	___aldiv@dividend^0,c
 10282  000F6E  0E00               	movlw	0
 10283  000F70  220E               	addwfc	(___aldiv@dividend+1)^0,f,c
 10284  000F72  220F               	addwfc	(___aldiv@dividend+2)^0,f,c
 10285  000F74  2210               	addwfc	(___aldiv@dividend+3)^0,f,c
 10286  000F76  0E01               	movlw	1
 10287  000F78  1A16               	xorwf	___aldiv@sign^0,f,c
 10288  000F7A                     l3060:
 10289  000F7A  0E00               	movlw	0
 10290  000F7C  6E17               	movwf	___aldiv@quotient^0,c
 10291  000F7E  0E00               	movlw	0
 10292  000F80  6E18               	movwf	(___aldiv@quotient+1)^0,c
 10293  000F82  0E00               	movlw	0
 10294  000F84  6E19               	movwf	(___aldiv@quotient+2)^0,c
 10295  000F86  0E00               	movlw	0
 10296  000F88  6E1A               	movwf	(___aldiv@quotient+3)^0,c
 10297  000F8A  5011               	movf	___aldiv@divisor^0,w,c
 10298  000F8C  1012               	iorwf	(___aldiv@divisor+1)^0,w,c
 10299  000F8E  1013               	iorwf	(___aldiv@divisor+2)^0,w,c
 10300  000F90  1014               	iorwf	(___aldiv@divisor+3)^0,w,c
 10301  000F92  B4D8               	btfsc	status,2,c
 10302  000F94  EFCE  F007         	goto	u2141
 10303  000F98  EFD0  F007         	goto	u2140
 10304  000F9C                     u2141:
 10305  000F9C  EF06  F008         	goto	l3082
 10306  000FA0                     u2140:
 10307  000FA0  0E01               	movlw	1
 10308  000FA2  6E15               	movwf	___aldiv@counter^0,c
 10309  000FA4  EFDA  F007         	goto	l3068
 10310  000FA8                     l3066:
 10311  000FA8  90D8               	bcf	status,0,c
 10312  000FAA  3611               	rlcf	___aldiv@divisor^0,f,c
 10313  000FAC  3612               	rlcf	(___aldiv@divisor+1)^0,f,c
 10314  000FAE  3613               	rlcf	(___aldiv@divisor+2)^0,f,c
 10315  000FB0  3614               	rlcf	(___aldiv@divisor+3)^0,f,c
 10316  000FB2  2A15               	incf	___aldiv@counter^0,f,c
 10317  000FB4                     l3068:
 10318  000FB4  AE14               	btfss	(___aldiv@divisor+3)^0,7,c
 10319  000FB6  EFDF  F007         	goto	u2151
 10320  000FBA  EFE1  F007         	goto	u2150
 10321  000FBE                     u2151:
 10322  000FBE  EFD4  F007         	goto	l3066
 10323  000FC2                     u2150:
 10324  000FC2                     l3070:
 10325  000FC2  90D8               	bcf	status,0,c
 10326  000FC4  3617               	rlcf	___aldiv@quotient^0,f,c
 10327  000FC6  3618               	rlcf	(___aldiv@quotient+1)^0,f,c
 10328  000FC8  3619               	rlcf	(___aldiv@quotient+2)^0,f,c
 10329  000FCA  361A               	rlcf	(___aldiv@quotient+3)^0,f,c
 10330  000FCC  5011               	movf	___aldiv@divisor^0,w,c
 10331  000FCE  5C0D               	subwf	___aldiv@dividend^0,w,c
 10332  000FD0  5012               	movf	(___aldiv@divisor+1)^0,w,c
 10333  000FD2  580E               	subwfb	(___aldiv@dividend+1)^0,w,c
 10334  000FD4  5013               	movf	(___aldiv@divisor+2)^0,w,c
 10335  000FD6  580F               	subwfb	(___aldiv@dividend+2)^0,w,c
 10336  000FD8  5014               	movf	(___aldiv@divisor+3)^0,w,c
 10337  000FDA  5810               	subwfb	(___aldiv@dividend+3)^0,w,c
 10338  000FDC  A0D8               	btfss	status,0,c
 10339  000FDE  EFF3  F007         	goto	u2161
 10340  000FE2  EFF5  F007         	goto	u2160
 10341  000FE6                     u2161:
 10342  000FE6  EFFE  F007         	goto	l3078
 10343  000FEA                     u2160:
 10344  000FEA  5011               	movf	___aldiv@divisor^0,w,c
 10345  000FEC  5E0D               	subwf	___aldiv@dividend^0,f,c
 10346  000FEE  5012               	movf	(___aldiv@divisor+1)^0,w,c
 10347  000FF0  5A0E               	subwfb	(___aldiv@dividend+1)^0,f,c
 10348  000FF2  5013               	movf	(___aldiv@divisor+2)^0,w,c
 10349  000FF4  5A0F               	subwfb	(___aldiv@dividend+2)^0,f,c
 10350  000FF6  5014               	movf	(___aldiv@divisor+3)^0,w,c
 10351  000FF8  5A10               	subwfb	(___aldiv@dividend+3)^0,f,c
 10352  000FFA  8017               	bsf	___aldiv@quotient^0,0,c
 10353  000FFC                     l3078:
 10354  000FFC  90D8               	bcf	status,0,c
 10355  000FFE  3214               	rrcf	(___aldiv@divisor+3)^0,f,c
 10356  001000  3213               	rrcf	(___aldiv@divisor+2)^0,f,c
 10357  001002  3212               	rrcf	(___aldiv@divisor+1)^0,f,c
 10358  001004  3211               	rrcf	___aldiv@divisor^0,f,c
 10359  001006  2E15               	decfsz	___aldiv@counter^0,f,c
 10360  001008  EFE1  F007         	goto	l3070
 10361  00100C                     l3082:
 10362  00100C  5016               	movf	___aldiv@sign^0,w,c
 10363  00100E  B4D8               	btfsc	status,2,c
 10364  001010  EF0C  F008         	goto	u2171
 10365  001014  EF0E  F008         	goto	u2170
 10366  001018                     u2171:
 10367  001018  EF16  F008         	goto	l3086
 10368  00101C                     u2170:
 10369  00101C  1E1A               	comf	(___aldiv@quotient+3)^0,f,c
 10370  00101E  1E19               	comf	(___aldiv@quotient+2)^0,f,c
 10371  001020  1E18               	comf	(___aldiv@quotient+1)^0,f,c
 10372  001022  6C17               	negf	___aldiv@quotient^0,c
 10373  001024  0E00               	movlw	0
 10374  001026  2218               	addwfc	(___aldiv@quotient+1)^0,f,c
 10375  001028  2219               	addwfc	(___aldiv@quotient+2)^0,f,c
 10376  00102A  221A               	addwfc	(___aldiv@quotient+3)^0,f,c
 10377  00102C                     l3086:
 10378  00102C  C017  F00D         	movff	___aldiv@quotient,?___aldiv
 10379  001030  C018  F00E         	movff	___aldiv@quotient+1,?___aldiv+1
 10380  001034  C019  F00F         	movff	___aldiv@quotient+2,?___aldiv+2
 10381  001038  C01A  F010         	movff	___aldiv@quotient+3,?___aldiv+3
 10382  00103C  0012               	return		;funcret
 10383  00103E                     __end_of___aldiv:
 10384                           	opt callstack 0
 10385                           
 10386 ;; *************** function _desbordamiento *****************
 10387 ;; Defined at:
 10388 ;;		line 95 in file "main.c"
 10389 ;; Parameters:    Size  Location     Type
 10390 ;;		None
 10391 ;; Auto vars:     Size  Location     Type
 10392 ;;		None
 10393 ;; Return value:  Size  Location     Type
 10394 ;;                  1    wreg      void 
 10395 ;; Registers used:
 10396 ;;		wreg, status,2, status,0
 10397 ;; Tracked objects:
 10398 ;;		On entry : 0/0
 10399 ;;		On exit  : 0/0
 10400 ;;		Unchanged: 0/0
 10401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10402 ;;      Params:         0       0       0       0       0       0       0       0       0
 10403 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10404 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10405 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10406 ;;Total ram usage:        0 bytes
 10407 ;; Hardware stack levels used:    1
 10408 ;; This function calls:
 10409 ;;		Nothing
 10410 ;; This function is called by:
 10411 ;;		Interrupt level 2
 10412 ;; This function uses a non-reentrant model
 10413 ;;
 10414                           
 10415                           	psect	intcode
 10416  000008                     __pintcode:
 10417                           	opt callstack 0
 10418  000008                     _desbordamiento:
 10419                           	opt callstack 19
 10420                           
 10421                           ;incstack = 0
 10422  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10423  00000A  ED36  F010         	call	int_func,f	;refresh shadow registers
 10424                           
 10425                           	psect	intcode_body
 10426  00206C                     __pintcode_body:
 10427                           	opt callstack 19
 10428  00206C                     int_func:
 10429                           	opt callstack 19
 10430  00206C  0006               	pop		; remove dummy address from shadow register refresh
 10431  00206E                     
 10432                           ;main.c: 97:     if (INTCONbits.TMR0IF) {
 10433  00206E  A4F2               	btfss	242,2,c	;volatile
 10434  002070  EF3C  F010         	goto	i2u291_41
 10435  002074  EF3E  F010         	goto	i2u291_40
 10436  002078                     i2u291_41:
 10437  002078  EF59  F010         	goto	i2l3910
 10438  00207C                     i2u291_40:
 10439  00207C                     
 10440                           ;main.c: 99:         if (esperandoDatos) {
 10441  00207C  0100               	movlb	0	; () banked
 10442  00207E  51F4               	movf	_esperandoDatos& (0+255),w,b
 10443  002080  B4D8               	btfsc	status,2,c
 10444  002082  EF45  F010         	goto	i2u292_41
 10445  002086  EF47  F010         	goto	i2u292_40
 10446  00208A                     i2u292_41:
 10447  00208A  EF52  F010         	goto	i2l3906
 10448  00208E                     i2u292_40:
 10449  00208E                     
 10450                           ; BSR set to: 0
 10451                           ;main.c: 101:             tiempoInactividadTrans++;
 10452  00208E  2BF7               	incf	_tiempoInactividadTrans& (0+255),f,b
 10453  002090                     
 10454                           ; BSR set to: 0
 10455                           ;main.c: 103:             if (tiempoInactividadTrans == 1)
 10456  002090  05F7               	decf	_tiempoInactividadTrans& (0+255),w,b
 10457  002092  A4D8               	btfss	status,2,c
 10458  002094  EF4E  F010         	goto	i2u293_41
 10459  002098  EF50  F010         	goto	i2u293_40
 10460  00209C                     i2u293_41:
 10461  00209C  EF52  F010         	goto	i2l3906
 10462  0020A0                     i2u293_40:
 10463  0020A0                     
 10464                           ; BSR set to: 0
 10465                           ;main.c: 104:                 esperaDatoConcluida = 1;
 10466  0020A0  0E01               	movlw	1
 10467  0020A2  6FF5               	movwf	_esperaDatoConcluida& (0+255),b
 10468  0020A4                     i2l3906:
 10469                           
 10470                           ; BSR set to: 0
 10471                           ;main.c: 109:         INTCONbits.TMR0IF = 0;
 10472  0020A4  94F2               	bcf	242,2,c	;volatile
 10473  0020A6                     
 10474                           ; BSR set to: 0
 10475                           ;main.c: 110:         TMR0 = VALOR_TIMER0;
 10476  0020A6  C0F8  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
 10477  0020AA  C0F9  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
 10478                           
 10479                           ;main.c: 111:         overflowTimer = 1;
 10480  0020AE  0E01               	movlw	1
 10481  0020B0  6FF0               	movwf	_overflowTimer& (0+255),b
 10482  0020B2                     i2l3910:
 10483                           
 10484                           ;main.c: 115:     if (PIR1bits.RCIF) {
 10485  0020B2  AA9E               	btfss	158,5,c	;volatile
 10486  0020B4  EF5E  F010         	goto	i2u294_41
 10487  0020B8  EF60  F010         	goto	i2u294_40
 10488  0020BC                     i2u294_41:
 10489  0020BC  EF65  F010         	goto	i2l205
 10490  0020C0                     i2u294_40:
 10491  0020C0                     
 10492                           ;main.c: 117:         byteUart = RCREG;
 10493  0020C0  CFAE F0F6          	movff	4014,_byteUart	;volatile
 10494  0020C4                     
 10495                           ;main.c: 118:         datoRecibido = 1;
 10496  0020C4  0E01               	movlw	1
 10497  0020C6  0100               	movlb	0	; () banked
 10498  0020C8  6FF1               	movwf	_datoRecibido& (0+255),b
 10499  0020CA                     i2l205:
 10500  0020CA  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10501  0020CC  0011               	retfie		f
 10502  0020CE                     __end_of_desbordamiento:
 10503                           	opt callstack 0
 10504                           
 10505                           	psect	rparam
 10506  0000                     
 10507                           	psect	temp
 10508  00005F                     btemp:
 10509                           	opt callstack 0
 10510  00005F                     	ds	1
 10511  0000                     int$flags	set	btemp
 10512  0000                     wtemp8	set	btemp+1
 10513  0000                     ttemp5	set	btemp+1
 10514  0000                     ttemp6	set	btemp+4
 10515  0000                     ttemp7	set	btemp+8
 10516                           tosu	equ	0xFFF
 10517                           tosh	equ	0xFFE
 10518                           tosl	equ	0xFFD
 10519                           stkptr	equ	0xFFC
 10520                           pclatu	equ	0xFFB
 10521                           pclath	equ	0xFFA
 10522                           pcl	equ	0xFF9
 10523                           tblptru	equ	0xFF8
 10524                           tblptrh	equ	0xFF7
 10525                           tblptrl	equ	0xFF6
 10526                           tablat	equ	0xFF5
 10527                           prodh	equ	0xFF4
 10528                           prodl	equ	0xFF3
 10529                           indf0	equ	0xFEF
 10530                           postinc0	equ	0xFEE
 10531                           postdec0	equ	0xFED
 10532                           preinc0	equ	0xFEC
 10533                           plusw0	equ	0xFEB
 10534                           fsr0h	equ	0xFEA
 10535                           fsr0l	equ	0xFE9
 10536                           wreg	equ	0xFE8
 10537                           indf1	equ	0xFE7
 10538                           postinc1	equ	0xFE6
 10539                           postdec1	equ	0xFE5
 10540                           preinc1	equ	0xFE4
 10541                           plusw1	equ	0xFE3
 10542                           fsr1h	equ	0xFE2
 10543                           fsr1l	equ	0xFE1
 10544                           bsr	equ	0xFE0
 10545                           indf2	equ	0xFDF
 10546                           postinc2	equ	0xFDE
 10547                           postdec2	equ	0xFDD
 10548                           preinc2	equ	0xFDC
 10549                           plusw2	equ	0xFDB
 10550                           fsr2h	equ	0xFDA
 10551                           fsr2l	equ	0xFD9
 10552                           status	equ	0xFD8


Data Sizes:
    Strings     1297
    Constant    0
    Data        4
    BSS         170
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     92      94
    BANK0           160    128     156
    BANK1           256      0     144
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_35(CODE[29]), STR_34(CODE[32]), STR_33(CODE[45]), STR_32(CODE[45]), 
		 -> STR_31(CODE[29]), STR_30(CODE[32]), STR_27(CODE[16]), STR_14(CODE[51]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), lecturaWifi@buffer(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), lecturaWifi@buffer(BANK0[50]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1505_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), lecturaWifi@buffer(BANK0[50]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), lecturaWifi@buffer(BANK0[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_35(CODE[29]), STR_34(CODE[32]), STR_33(CODE[45]), STR_32(CODE[45]), 
		 -> STR_31(CODE[29]), STR_30(CODE[32]), STR_27(CODE[16]), STR_14(CODE[51]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 51
		 -> STR_35(CODE[29]), STR_34(CODE[32]), STR_33(CODE[45]), STR_32(CODE[45]), 
		 -> STR_31(CODE[29]), STR_30(CODE[32]), STR_27(CODE[16]), STR_14(CODE[51]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    dameTemperaturaHumedad@Temperatura	PTR unsigned char  size(2) Largest target is 1
		 -> mostrarDatosSensoresWIFI@temperatura(BANK0[1]), mostrarDatosSensores@temperatura(BANK0[1]), estaSeco@temperatura(COMRAM[1]), 

    dameTemperaturaHumedad@Humedad	PTR unsigned char  size(2) Largest target is 1
		 -> mostrarDatosSensoresWIFI@humedad(BANK0[1]), mostrarDatosSensores@humedad(BANK0[1]), NULL(NULL[0]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 72
		 -> STR_43(CODE[58]), STR_42(CODE[57]), STR_41(CODE[57]), STR_40(CODE[20]), 
		 -> STR_39(CODE[18]), STR_38(CODE[11]), STR_37(CODE[9]), STR_36(CODE[17]), 
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), STR_29(CODE[21]), STR_28(CODE[25]), 
		 -> dameDatosSistema@buffer(BANK0[50]), STR_26(CODE[50]), STR_25(CODE[42]), STR_24(CODE[3]), 
		 -> STR_23(CODE[14]), STR_22(CODE[23]), STR_21(CODE[34]), STR_20(CODE[32]), 
		 -> STR_19(CODE[49]), STR_18(CODE[37]), STR_17(CODE[27]), STR_16(CODE[37]), 
		 -> STR_15(CODE[32]), lecturaWifi@buffer(BANK0[50]), STR_13(CODE[38]), STR_12(CODE[37]), 
		 -> STR_11(CODE[72]), STR_10(CODE[51]), STR_9(CODE[23]), STR_8(CODE[26]), 
		 -> STR_7(CODE[55]), STR_6(CODE[51]), STR_5(CODE[25]), STR_4(CODE[37]), 
		 -> STR_3(CODE[31]), STR_2(CODE[43]), STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_sistemaPrincipal
    _encenderBombas->_estaSeco
    _estaSeco->_dameTemperaturaHumedad
    _dameHoraActual->_leer_rtc
    _leer_rtc->_i2c_envia_dato
    _leer_rtc->_i2c_recibe_dato
    _sistemaPrincipal->_mostrarDatosSensores
    _sistemaPrincipal->_mostrarDatosSensoresWIFI
    _setTiempoRegar->_getValue
    _regadoRapido->_getValue
    _mostrarMenu->_UART_printf
    _restablecerDatosSensor->_constructorSensor
    _lecturaAnalogaSensores->_map
    _map->___aldiv
    _dameTemperaturaHumedad->_UART_printf
    _fijaHoraRtc->_setRtc
    _setRtc->_getValue
    _escribe_rtc->_i2c_envia_dato
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _asignarHorarios->_getValue
    _getValue->_UART_printf
    _UART_printf->_UART_write
    _escribeHorariosMemoria->_escribe_eeprom
    _escribe_eeprom->_i2c_envia_dato
    _leeHorariosMemoria->_leer_eeprom
    _leer_eeprom->_i2c_envia_dato
    _leer_eeprom->_i2c_recibe_dato
    _i2c_reinicia_com->_i2c_espera
    _i2c_recibe_dato->_i2c_espera
    _i2c_inicia_com->_i2c_espera
    _i2c_envia_dato->_i2c_espera
    _i2c_detener->_i2c_espera
    _UART_init->___aldiv
    ___aldiv->___lmul

Critical Paths under _desbordamiento in COMRAM

    None.

Critical Paths under _main in BANK0

    _sistemaRegado->_lecturaWifi
    _sistemaPrincipal->_mostrarDatosSensoresWIFI
    _mostrarDatosSensoresWIFI->_lecturaWifi
    _lecturaWifi->_sprintf
    _mostrarDatosSensores->_sprintf
    _dameDatosSistema->_sprintf

Critical Paths under _desbordamiento in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _desbordamiento in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _desbordamiento in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _desbordamiento in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _desbordamiento in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _desbordamiento in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _desbordamiento in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _desbordamiento in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  150103
                          _UART_init
                      _configurarAdc
                        _i2c_iniciar
                 _inicializarObjetos
                 _leeHorariosMemoria
                        _mostrarMenu
             _restablecerDatosSensor
                   _sistemaPrincipal
                      _sistemaRegado
 ---------------------------------------------------------------------------------
 (1) _sistemaRegado                                        0     0      0   29868
                     _dameHoraActual
                     _encenderBombas
                          _horaRegar
             _lecturaAnalogaSensores
                        _lecturaWifi
                        _mostrarMenu
 ---------------------------------------------------------------------------------
 (2) _horaRegar                                            3     1      2      24
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _encenderBombas                                       5     5      0    5109
                                             19 COMRAM     5     5      0
                           _estaSeco
 ---------------------------------------------------------------------------------
 (3) _estaSeco                                             4     2      2    4834
                                             15 COMRAM     4     2      2
             _dameTemperaturaHumedad
 ---------------------------------------------------------------------------------
 (2) _dameHoraActual                                       0     0      0     181
                      _convertirDato
                           _leer_rtc
 ---------------------------------------------------------------------------------
 (3) _leer_rtc                                             2     2      0      90
                                              2 COMRAM     2     2      0
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (3) _convertirDato                                        3     3      0      91
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _sistemaPrincipal                                     3     3      0  114935
                                             89 COMRAM     3     3      0
                        _UART_printf
                    _asignarHorarios
                   _dameDatosSistema
                        _fijaHoraRtc
               _mostrarDatosSensores
           _mostrarDatosSensoresWIFI
                        _mostrarMenu
                       _regadoRapido
                     _setTiempoRegar
 ---------------------------------------------------------------------------------
 (2) _setTiempoRegar                                       2     2      0    8624
                                             14 COMRAM     2     2      0
                        _UART_printf
             _escribeHorariosMemoria
                           _getValue
 ---------------------------------------------------------------------------------
 (2) _regadoRapido                                         4     4      0    7877
                                             14 COMRAM     4     4      0
                        _UART_printf
                           _getValue
 ---------------------------------------------------------------------------------
 (2) _mostrarMenu                                          0     0      0    3335
                        _UART_printf
 ---------------------------------------------------------------------------------
 (2) _mostrarDatosSensoresWIFI                            55    55      0   38279
                                             88 COMRAM     1     1      0
                                             74 BANK0     54    54      0
                        _UART_printf
                         _UART_write
             _dameTemperaturaHumedad
                        _lecturaWifi
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lecturaWifi                                         54    54      0   19447
                                             20 BANK0     54    54      0
                        _UART_printf
                          _UART_read
                         _UART_write
                           _getValue
             _restablecerDatosSensor
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _restablecerDatosSensor                               2     2      0     387
                                              4 COMRAM     2     2      0
                  _constructorSensor
 ---------------------------------------------------------------------------------
 (4) _constructorSensor                                    4     0      4     297
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _mostrarDatosSensores                                55    55      0   20604
                                             88 COMRAM     1     1      0
                                             20 BANK0     54    54      0
                        _UART_printf
                         _UART_write
             _dameTemperaturaHumedad
             _lecturaAnalogaSensores
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lecturaAnalogaSensores                               3     3      0    1772
                                             46 COMRAM     3     3      0
                   _dameHumedadSuelo
                                _map
 ---------------------------------------------------------------------------------
 (3) _map                                                 20     0     20    1660
                                             26 COMRAM    20     0     20
                            ___aldiv
                             ___lmul
                   _dameHumedadSuelo (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _dameHumedadSuelo                                     5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _dameTemperaturaHumedad                              12     8      4    4134
                                              3 COMRAM    12     8      4
                     _DHT11_ReadData
                        _DHT11_Start
                        _UART_printf
                     _check_response
 ---------------------------------------------------------------------------------
 (5) _check_response                                       1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _DHT11_ReadData                                       2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fijaHoraRtc                                          0     0      0    9717
                        _UART_printf
                        _escribe_rtc
                             _setRtc
 ---------------------------------------------------------------------------------
 (3) _setRtc                                               4     4      0    5936
                                             14 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
                        _escribe_rtc
                           _getValue
 ---------------------------------------------------------------------------------
 (4) _escribe_rtc                                          2     1      1     446
                                              2 COMRAM     2     1      1
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _dameDatosSistema                                    61    61      0   14540
                                             20 BANK0     61    61      0
                        _UART_printf
                         _UART_write
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             20    10     10   11021
                                              0 BANK0     20    10     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    9604
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    9247
                                             63 COMRAM    17    11      6
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4586
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 7     4      3    3157
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2937
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _asignarHorarios                                      2     2      0    8602
                                             14 COMRAM     2     2      0
                        _UART_printf
             _escribeHorariosMemoria
                           _getValue
 ---------------------------------------------------------------------------------
 (3) _getValue                                            11     9      2    4451
                                              3 COMRAM    11     9      2
                        _UART_printf
                          _UART_read
                         _UART_write
 ---------------------------------------------------------------------------------
 (4) _UART_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART_printf                                          2     0      2    3335
                                              1 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (4) _UART_write                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _escribeHorariosMemoria                               6     6      0     726
                                              6 COMRAM     6     6      0
                     _escribe_eeprom
 ---------------------------------------------------------------------------------
 (4) _escribe_eeprom                                       4     1      3     544
                                              2 COMRAM     4     1      3
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (1) _leeHorariosMemoria                                   6     6      0     522
                                              6 COMRAM     6     6      0
                        _leer_eeprom
 ---------------------------------------------------------------------------------
 (2) _leer_eeprom                                          4     2      2     340
                                              2 COMRAM     4     2      2
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (4) _i2c_reinicia_com                                     0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_recibe_dato                                      1     1      0      23
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_inicia_com                                       0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_envia_dato                                       1     1      0      22
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_detener                                          0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (5) _i2c_espera                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _inicializarObjetos                                   4     4      0     156
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _i2c_iniciar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4     900
                                             26 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     756
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _desbordamiento                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
       ___lmul (ARG)
   _configurarAdc
   _i2c_iniciar
   _inicializarObjetos
   _leeHorariosMemoria
     _leer_eeprom
       _i2c_detener
         _i2c_espera
       _i2c_envia_dato
         _i2c_espera
       _i2c_inicia_com
         _i2c_espera
       _i2c_recibe_dato
         _i2c_espera
       _i2c_reinicia_com
         _i2c_espera
   _mostrarMenu
     _UART_printf
       _UART_write
   _restablecerDatosSensor
     _constructorSensor
   _sistemaPrincipal
     _UART_printf
       _UART_write
     _asignarHorarios
       _UART_printf
         _UART_write
       _escribeHorariosMemoria
         _escribe_eeprom
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
       _getValue
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
     _dameDatosSistema
       _UART_printf
         _UART_write
       _UART_write
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
     _fijaHoraRtc
       _UART_printf
         _UART_write
       _escribe_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
       _setRtc
         ___awdiv
         ___awmod
         _escribe_rtc
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
         _getValue
           _UART_printf
             _UART_write
           _UART_read
           _UART_write
     _mostrarDatosSensores
       _UART_printf
         _UART_write
       _UART_write
       _dameTemperaturaHumedad
         _DHT11_ReadData
         _DHT11_Start
         _UART_printf
           _UART_write
         _check_response
       _lecturaAnalogaSensores
         _dameHumedadSuelo
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
           _dameHumedadSuelo (ARG)
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
     _mostrarDatosSensoresWIFI
       _UART_printf
         _UART_write
       _UART_write
       _dameTemperaturaHumedad
         _DHT11_ReadData
         _DHT11_Start
         _UART_printf
           _UART_write
         _check_response
       _lecturaWifi
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
         _getValue
           _UART_printf
             _UART_write
           _UART_read
           _UART_write
         _restablecerDatosSensor
           _constructorSensor
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
     _mostrarMenu
       _UART_printf
         _UART_write
     _regadoRapido
       _UART_printf
         _UART_write
       _getValue
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
     _setTiempoRegar
       _UART_printf
         _UART_write
       _escribeHorariosMemoria
         _escribe_eeprom
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
       _getValue
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
   _sistemaRegado
     _dameHoraActual
       _convertirDato
       _leer_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _encenderBombas
       _estaSeco
         _dameTemperaturaHumedad
           _DHT11_ReadData
           _DHT11_Start
           _UART_printf
             _UART_write
           _check_response
     _horaRegar
     _lecturaAnalogaSensores
       _dameHumedadSuelo
       _map
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _dameHumedadSuelo (ARG)
     _lecturaWifi
       _UART_printf
         _UART_write
       _UART_read
       _UART_write
       _getValue
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
       _restablecerDatosSensor
         _constructorSensor
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
     _mostrarMenu
       _UART_printf
         _UART_write

 _desbordamiento (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      90       7       56.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     80      9C       5       97.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5C      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     18A      20        0.0%
DATA                 0      0     18A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Jun 13 13:43:16 2020

                 __size_of_escribe_eeprom 0030                                        l91 26A8  
                                      l85 25DC                                        l94 26B8  
                                      l79 2680                                        l88 26B0  
                                      l97 268C                              ___awdiv@sign 0006  
                          ?_configurarAdc 0001                               __CFG_BORV$3 000000  
          __end_of_dameTemperaturaHumedad 199E                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                   regadoRapido@tiempoRegar 0011  
                                     l100 2654                                       l103 263A  
                                     l122 1EC8                                       l130 2234  
                                     l106 25B6                                       l131 2236  
                                     l211 2696                                       l300 23B8  
                                     l125 21FE                                       l109 25FC  
                                     l214 26A0                                       l134 265C  
                                     l143 212A                                       l208 1DE8  
                                     l232 258C                                       l224 22D8  
                                     l137 266A                                       l401 08B6  
                                     l153 2164                                       l305 2328  
                                     l242 24FC                                       l314 131E  
                                     l322 1F36                                       l411 09AA  
                                     l219 23FC                                       l252 15C2  
                                     l236 1E58                                       l156 2186  
                                     l148 2134                                       l164 2480  
                                     l229 1694                                       l421 0E7E  
                                     l422 0E84                                       l239 2562  
                                     l247 14EA                                       l159 261C  
                                     l319 1BAA                                       l423 0E8A  
                                     l504 02F4                                       l424 0E90  
                                     l336 1A4E                                       l352 0C96  
                                     l601 103C                                       l425 0E96  
                                     l426 0E9C                                       l427 0EA2  
                                     l419 0E78                                       l284 2008  
                                     l364 199C                                       l509 0786  
                                     l357 122E                                       l533 1F90  
                                     l429 0F30                                       l518 2062  
                                     l534 1FA0                                       l294 1C4A  
                                     l391 080A                                       l471 1824  
                                     l519 206A                                       l375 113A  
                                     l279 0560                                       l289 1D6E  
                                     l297 2396                                       l369 140C  
                                     l466 17A6                                       l299 23A4  
                                     l636 0B32                                       l484 00B2  
                                     l469 17E8                                       l478 21E2  
                                     l486 00BA                                       l649 0DFA  
                                     l753 18E8                                       l766 1AFE  
                            __CFG_CPB$OFF 000000                              __CFG_CPD$OFF 000000  
                            __CFG_BOR$OFF 000000                                       _abs 2482  
                                     _pad 1760                                       _map 1D70  
                            ___awmod@sign 0006                                       prod 000FF3  
                                     wreg 000FE8                  __end_of_dameDatosSistema 1230  
                            __CFG_LVP$OFF 000000                         ?_i2c_reinicia_com 0001  
                            ?_escribe_rtc 0003                              __CFG_WDT$OFF 000000  
                                    l1200 24C0                                      ?_abs 0013  
                                    l1212 175E                                      l1220 2440  
                                    l1230 26BE                                      l3000 25FE  
                                    l3002 2602                                      l3010 2446  
                                    l1227 2288                                      l3100 264E  
                                    l1236 2532                                      l3004 2612  
                                    l3020 247A                                      l3012 244E  
                                    l3102 2650                                      l3030 2012  
                                    l3006 261A                                      l3014 245C  
                                    l3022 247E                                      l3110 1D70  
                                    l3104 2652                                      l3200 08D2  
                                    l3032 2020                                      l3016 2464  
                                    l3008 2442                                      l3120 18F2  
                                    l3040 1F56                                      l3050 0F44  
                                    l3210 091C                                      l3034 2046  
                                    l3018 2472                                      l3122 1906  
                                    l3130 198C                                      l3114 18EA  
                                    l3042 1F66                                      l3026 268E  
                                    l3060 0F7A                                      l3052 0F54  
                                    l3220 0986                                      l3212 0920  
                                    l3204 08DA                                      l3140 079A  
                                    l3028 200A                                      l3300 185A  
                                    l3108 2620                                      l3132 1998  
                                    l3124 192A                                      l3116 18EE  
                                    l3044 1F70                                      l3036 1F38  
                                    l1197 24B8                                      l3070 0FC2  
                                    l3062 0F8A                                      l3054 0F58  
                                    l3046 0F32                                      l3230 09A8  
                                    l3222 0996                                      l4110 08F0  
                                    l3206 090E                                      l3150 07CC  
                                    l3142 07AA                                      l3310 1888  
                                    l3302 185E                                      l3134 199A  
                                    l3126 1960                                      l3118 18EE  
                                    l3038 1F48                                      l4102 04D0  
                                    l3080 1006                                      l3072 0FCC  
                                    l3064 0FA0                                      l3056 0F66  
                                    l3048 0F36                                      l3224 09A2  
                                    l4112 0956                                      l3208 0912  
                                    l3160 07E2                                      l3152 07D4  
                                    l3144 07BA                                      l3216 0940  
                                    l3136 0788                                      l3320 18BC  
                                    l3312 1896                                      l3304 1866  
                                    l3400 1DF4                                      l3128 1970  
                                    l4104 1A12                                      l3074 0FEA  
                                    l3066 0FA8                                      l3082 100C  
                                    l3058 0F76                                      l3090 26A2  
                                    l3162 07F2                                      l3218 0974  
                                    l3146 07BE                                      l3138 0794  
                                    l3322 18C2                                      l3314 189C  
                                    l3306 1878                                      l3402 1E02  
                                    l3250 2376                                      l4106 0EBC  
                                    l3084 101C                                      l3076 0FFA  
                                    l3068 0FB4                                      l3092 26A6  
                                    l3420 144E                                      l3412 140E  
                                    l3180 0860                                      l4108 0838  
                                    l3172 0822                                      l3164 0802  
                                    l3148 07C6                                      l3316 18B2  
                                    l3308 1880                                      l3324 18C8  
                                    l3340 1A6E                                      l3332 1A50  
                                    l3404 1E14                                      l3260 23A6  
                                    l3252 237E                                      l3500 2564  
                                    l3086 102C                                      l3078 0FFC  
                                    l3094 263C                                      l3502 24C2  
                                    l3246 2534                                      l3430 14CE  
                                    l3422 1452                                      l3190 088E  
                                    l3182 0880                                      l3166 080E  
                                    l3174 084E                                      l3158 07DC  
                                    l2710 179E                                      l2702 1760  
                                    l3326 18D8                                      l3318 18BA  
                                    l3350 1AA6                                      l3342 1A7C  
                                    l3334 1A54                                      l3406 1E52  
                                    l3254 2380                                      l3270 22E2  
                                    l3510 02F6                                      l3096 2640  
                                    l3504 24EC                                      l3248 2554  
                                    l3424 148E                                      l3192 089E  
                                    l3176 0852                                      l3168 081A  
                                    l3600 1D1E                                      l2720 180C  
                                    l2712 17B2                                      l2704 1770  
                                    l2800 0DAA                                      l3280 2252  
                                    l3328 18E0                                      l3352 1AB4  
                                    l3360 1ADE                                      l3344 1A84  
                                    l3336 1A62                                      l3408 1E56  
                                    l3256 2392                                      l3272 2308  
                                    l3264 22DA                                      l3440 123C  
                                    l3432 1230                                      l3520 0338  
                                    l3098 2646                                      l3506 24FA  
                                    l3426 14C6                                      l3418 141E  
                                    l3194 08AE                                      l3178 085C  
                                    l3610 1D62                                      l3602 1D2A  
                                    l2714 17C6                                      l2706 1784  
                                    l2810 219C                                      l2730 09B0  
                                    l2802 0DBA                                      l3282 225A  
                                    l3290 182A                                      l3362 1AEE  
                                    l3354 1ACA                                      l3346 1A96  
                                    l3338 1A6A                                      l3258 2394  
                                    l3274 230C                                      l3442 1248  
                                    l3434 1232                                      l3370 25B4  
                                    l3530 03A6                                      l3522 0340  
                                    l3428 14CA                                      l3196 08BA  
                                    l3188 0888                                      l3604 1D38  
                                    l2716 17CA                                      l2708 1792  
                                    l2812 21A8                                      l2740 0A10  
                                    l2732 09BE                                      l2804 0DDA  
                                    l2724 2482                                      l2900 05AA  
                                    l3284 2276                                      l3276 2238  
                                    l3292 1838                                      l3364 1AF6  
                                    l3356 1AD2                                      l3348 1A9E  
                                    l3460 12B8                                      l3452 126E  
                                    l3444 1250                                      l3436 1232  
                                    l3620 1BF0                                      l3612 1BAC  
                                    l3380 25FA                                      l3540 03E2  
                                    l3524 0370                                      l3516 0306  
                                    l3198 08C6                                      l3606 1D4A  
                                    l2670 1696                                      l2718 17F8  
                                    l2814 21B4                                      l2750 0A5A  
                                    l2742 0A14                                      l2734 09DE  
                                    l2726 249C                                      l2830 008A  
                                    l2822 0012                                      l2910 0640  
                                    l2902 05CE                                      l3278 224A  
                                    l3294 1840                                      l3358 1AD8  
                                    l3710 1406                                      l3702 1398  
                                    l3462 12D2                                      l3454 128A  
                                    l3446 1262                                      l3470 1318  
                                    l3438 1236                                      l3630 1C46  
                                    l3622 1BFE                                      l3614 1BC4  
                                    l3374 25E0                                      l3390 23E2  
                                    l3542 0412                                      l3534 03AC  
                                    l3518 0336                                      l3800 1568  
                                    l3608 1D5E                                      l2680 1718  
                                    l2672 16A8                                      l2816 21B8  
                                    l2808 2188                                      l2760 0ACA  
                                    l2752 0A68                                      l2744 0A20  
                                    l2736 09E2                                      l2728 09AC  
                                    l2840 00E2                                      l2832 008C  
                                    l2824 0032                                      l2920 0708  
                                    l2912 0664                                      l2904 0600  
                                    l3296 1844                                      l3288 1826  
                                    l3480 1B08                                      l3704 13D8  
                                    l3472 131C                                      l3464 12E8  
                                    l3456 1296                                      l3632 1ECA  
                                    l3720 0E34                                      l3712 0DFC  
                                    l3624 1C10                                      l3616 1BD2  
                                    l3376 25E0                                      l3368 2590  
                                    l3392 23F2                                      l3384 23BA  
                                    l3560 04B4                                      l3552 044E  
                                    l3536 03DC                                      l3528 0376  
                                    l3802 159E                                      l2674 16BA  
                                    l2690 2420                                      l2818 21BE  
                                    l2762 0ADC                                      l2754 0A7A  
                                    l2746 0A3E                                      l2738 09F0  
                                    l2850 0182                                      l2842 00E8  
                                    l2834 00A6                                      l2826 005A  
                                    l2930 0744                                      l2922 0716  
                                    l2914 06AC                                      l3650 120C  
                                    l3634 113C                                      l3298 1852  
                                    l3482 1B7A                                      l3474 1B00  
                                    l3706 13E4                                      l3466 12EC  
                                    l3458 12A6                                      l3722 0E46  
                                    l3714 0E08                                      l3626 1C1C  
                                    l3618 1BE4                                      l3810 19A6  
                                    l3378 25E8                                      l3394 23F6  
                                    l3386 23CE                                      l3570 051A  
                                    l3554 047E                                      l3546 0418  
                                    l3490 228E                                      l3804 15A2  
                                    l2676 16C4                                      l2684 23FE  
                                    l2692 24FE                                      l2756 0AA8  
                                    l2748 0A46                                      l2764 0AE2  
                                    l2780 0CCE                                      l2772 0C98  
                                    l2860 022A                                      l2852 0188  
                                    l2844 00F0                                      l2836 00C2  
                                    l2828 007A                                      l2924 072A  
                                    l2908 061C                                      l3652 1228  
                                    l3644 1158                                      l3636 1142  
                                    l3484 1B8A                                      l3708 13EA  
                                    l3468 1308                                      l3660 105A  
                                    l3732 0EA8                                      l3724 0E52  
                                    l3716 0E1A                                      l3740 0F24  
                                    l3628 1C30                                      l3820 19D6  
                                    l3812 19AE                                      l3388 23D2  
                                    l3572 0536                                      l3548 0448  
                                    l3492 22AE                                      l3750 1E5A  
                                    l2950 2684                                      l2942 26AA  
                                    l3806 15A6                                      l2678 16E2  
                                    l2686 240A                                      l2694 250A  
                                    l2766 0AF2                                      l2758 0AC8  
                                    l2790 0D36                                      l2782 0CDC  
                                    l2774 0C9C                                      l2870 0290  
                                    l2862 0244                                      l2854 018E  
                                    l2846 00FA                                      l2838 00D4  
                                    l2918 06E4                                      l2934 0750  
                                    l3646 11FA                                      l3638 114E  
                                    l3398 1DEC                                      l3590 1FF2  
                                    l3582 1FA2                                      l3486 1B8E  
                                    l3670 10AE                                      l3654 103E  
                                    l3734 0F02                                      l3726 0E60  
                                    l3718 0E26                                      l3822 19DE  
                                    l3814 19B6                                      l3830 19FE  
                                    l3574 0546                                      l3558 0484  
                                    l3566 04BA                                      l3494 22CE  
                                    ?_map 001B                                      ?_pad 0011  
                                    l3760 1EBA                                      l3752 1E5A  
                                    l2952 2688                                      l2944 26AE  
                                    l2960 220C                                      l2688 241C  
                                    l2696 250E                                      l2768 0B12  
                                    l2792 0D44                                      l2784 0CFC  
                                    l2776 0CAA                                      l2872 0296  
                                    l2880 02CC                                      l2864 025E  
                                    l2848 0100                                      l2856 01F2  
                                    l2936 0774                                      l2928 0736  
                                    l3648 1206                                      l3592 1FFE  
                                    l3584 1FBA                                      l3680 1134  
                                    l3672 10B4                                      l3656 1042  
                                    l3736 0F08                                      l3728 0E72  
                                    l3824 19E6                                      l3816 19BE  
                                    l3832 1A48                                      l3808 19A0  
                                    l3576 054C                                      l3568 0516  
                                    l3496 22D2                                      l3488 228A  
                                    l3840 0B34                                      l3770 1EC4  
                                    l3762 1EBC                                      l3754 1E5C  
                                    l3746 266C                                      l2946 26B2  
                                    l2954 268C                                      l2890 2658  
                                    l2970 20CE                                      l2962 221C  
                                    l3594 1CE6                                      l2698 2526  
                                    l2794 0D72                                      l2786 0D1A  
                                    l2778 0CCA                                      l2874 02A8  
                                    l2858 020C                                      l2866 026E  
                                    l3586 1FD0                                      l3690 1362  
                                    l3682 1320                                      l3666 1062  
                                    l3674 10D0                                      l3658 1048  
                                    l3738 0F1C                                      l3834 1A4C  
                                    l3826 19EE                                      l3818 19C6  
                                    l3850 0B68                                      l3842 0B46  
                                    l3772 1EC6                                      l3764 1EBE  
                                    l3756 1E5E                                      l3748 2670  
                                    l2884 25B8                                      l2948 26B6  
                                    l2972 20D2                                      l2964 222C  
                                    l3596 1CFE                                      l2796 0D92  
                                    l2788 0D22                                      l2876 02B4  
                                    l2868 0280                                      l2892 0562  
                                    l3588 1FDC                                      l3692 137E  
                                    l3684 1334                                      l3676 1100  
                                    l3668 10A2                                      l3852 0B7A  
                                    l3844 0B4A                                      l3860 0BA6  
                                    l3940 1C5A                                      l3766 1EC0  
                                    l3758 1E92                                      l3774 2698  
                                    l3782 15CC                                      l2886 25B8  
                                    l2974 20F6                                      l2966 2230  
                                    l2958 21E4                                      l3598 1D0C  
                                    l2798 0DA4                                      l2878 02BC  
                                    l2894 0586                                      l2990 215E  
                                    l3694 138A                                      l3686 133A  
                                    l3678 110C                                      l3870 0BE6  
                                    l3862 0BAA                                      l3854 0B86  
                                    l3846 0B5E                                      l3950 1C7C  
                                    l3942 1C5C                                      l3768 1EC2  
                                    l3784 1674                                      l3776 15C4  
                                    l2888 25CE                                      l2976 20FA  
                                    l2896 0594                                      l2992 2172  
                                    l2984 2142                                      l3696 138E  
                                    l3688 1356                                      l3880 0C42  
                                    l3872 0BF6                                      l3864 0BBE  
                                    l3856 0B9A                                      l3848 0B66  
                                    l3960 1C94                                      l3952 1C80  
                                    l3944 1C60                                      l3936 1C4C  
                                    l3786 1678                                      l3794 14FC  
                                    l2898 05A6                                      l2994 2174  
                                    l2986 2148                                      l2978 212C  
                                    l3882 0C46                                      l3890 0C78  
                                    l3874 0C0C                                      l3866 0BCE  
                                    l3858 0B9E                                      l3970 1CB2  
                                    l3962 1C96                                      l3954 1C84  
                                    l3946 1C74                                      l3938 1C56  
                                    l3796 152A                                      l3788 14EC  
                                    l2996 2184                                      l2988 2156  
                                    l3892 0C7C                                      l3884 0C58  
                                    l3876 0C1C                                      l3868 0BE2  
                                    l3980 1CDA                                      l3972 1CB6  
                                    l3964 1C98                                      l3956 1C88  
                                    l3948 1C78                                      l3798 152E  
                                    l3894 0C92                                      l3886 0C6C  
                                    l3878 0C32                                      l3974 1CBA  
                                    l3966 1C9C                                      l3958 1C8C  
                                    l3888 0C70                                      l3976 1CC0  
                                    l3968 1CA0                                      l3978 1CD2  
                            ?_leer_eeprom 0003                                      STR_1 7FBC  
                                    STR_2 7D0E                                      STR_3 7E9F  
                                    STR_4 7DD3                                      STR_5 7F10  
                                    STR_6 7C18                                      STR_7 7BE1  
                                    STR_8 7EF6                                      STR_9 7F42  
                                    u2000 20F2                                      u2010 211A  
                                    u2020 212A                                      u2100 1F56  
                                    u2021 2126                                      u2101 1F52  
                                    u2030 2142                                      u2110 1F90  
                                    u2007 20E8                                      u2031 213E  
                                    u2111 1F8C                                      u2120 0F44  
                                    u2200 07AA                                      u2040 2156  
                                    u2121 0F40                                      u2017 2110  
                                    u2201 07A6                                      u2041 2152  
                                    u2130 0F66                                      u2210 07BA  
                                    u2050 2172                                      u2131 0F62  
                                    u2211 07B6                                      u2051 216E  
                                    u2140 0FA0                                      u2220 07F2  
                                    u1500 16BA                                      u2060 2184  
                                    u2300 23A4                                      u2141 0F9C  
                                    u2221 07EE                                      u1501 16B6  
                                    u2061 2180                                      u2301 23A0  
                                    u2150 0FC2                                      u2230 0802  
                                    u1510 16E2                                      u2070 245C  
                                    u2310 2328                                      u2151 0FBE  
                                    u2231 07FE                                      u1511 16DE  
                                    u3007 245E                                      u2071 2458  
                                    u2311 2324                                      u2160 0FEA  
                                    u2240 087C                                      u1520 1718  
                                    u1600 09BE                                      u2320 1838  
                                    u2400 1A96                                      u2080 2472  
                                    _LATD 000F8C                                      u2161 0FE6  
                                    u2241 0878                                      u1521 1714  
                                    u1601 09BA                                      u2321 1834  
                                    u2401 1A92                                      u3017 2474  
                                    u2081 246E                                      u2170 101C  
                                    u2250 089E                                      u1530 2440  
                                    u1610 09F0                                      u2090 2062  
                                    u2330 1852                                      u2410 1AB4  
                                    u2171 1018                                      u2251 089A  
                                    u1531 243C                                      u1611 09EC  
                                    u2091 205E                                      u2331 184E  
                                    u2411 1AB0                                      u3027 2608  
                                    u2260 08AE                                      u1540 2526  
                                    u1700 0D44                                      u2340 1878  
                                    u2420 1ACA                                      u2180 1906  
                                    u2500 1308                                      u2261 08AA  
                                    u1541 2522                                      u1621 0A1A  
                                    u1701 0D40                                      u2341 1874  
                                    u2421 1AC6                                      u3037 2616  
                                    u2181 1902                                      u2501 1304  
                                    u2270 093C                                      u1550 1770  
                                    u1630 0A3E                                      u1710 0D72  
                                    u2350 1896                                      u2430 1AEE  
                                    u2190 1960                                      u2510 1BAA  
                                    u2271 0938                                      u1551 176C  
                                    u1631 0A3A                                      u1711 0D6E  
                                    u2351 1892                                      u2431 1AEA  
                                    u3047 2144                                      u2191 195C  
                                    u2511 1BA6                                      u2280 0986  
                                    u1560 1792                                      u1640 0A68  
                                    u1720 0DBA                                      u1800 00E2  
                                    u2360 18B2                                      u2440 23E2  
                                    u2600 047E                                      u2520 22AE  
                                    u3057 255A                                      u2281 0982  
                                    u1561 178E                                      u1641 0A64  
                                    u1721 0DB6                                      u1801 00DE  
                                    u2361 18AE                                      u2441 23DE  
                                    u2601 047A                                      u2521 22AA  
                                    u2290 0996                                      u1490 16A8  
                                    u1570 17E8                                      u1730 219C  
                                    u1650 0AA8                                      u1810 020C  
                                    u2370 18D8                                      u2450 23F2  
                                    u2610 04B4                                      u2530 22CE  
                                    u3067 24F2                                      u2291 0992  
                                    u1491 16A4                                      u1571 17E4  
                                    u1731 2198                                      u1651 0AA4  
                                    u1811 0208                                      u2371 18D4  
                                    u2451 23EE                                      u2611 04B0  
                                    u2531 22CA                                      u1900 25DC  
                                    u1580 17F8                                      u1660 0AF2  
                                    u1820 022A                                      u1740 0042  
                                    u2700 1228                                      u2380 1A62  
                                    u2460 1E14                                      u2620 0536  
                                    u2540 0336                                      u1901 25D8  
                                    u1581 17F4                                      u1661 0AEE  
                                    u1821 0226                                      u1741 003C  
                                    u2701 1224                                      u2381 1A5E  
                                    u2461 1E10                                      u2621 0532  
                                    u2541 0332                                      u2470 14EA  
                                    u1910 266A                                      u1670 0CAA  
                                    u1590 249C                                      u1830 0244  
                                    u1750 0044                                      u2390 1A7C  
                                    u2710 105A                                      u2630 0546  
                                    u2550 0370                                      u2471 14E6  
                                    u1911 2666                                      u1671 0CA6  
                                    u1591 2498                                      u1831 0240  
                                    u2391 1A78                                      u2711 1056  
                                    u2631 0542                                      u2551 036C  
                                    u1680 0CDC                                      u1840 025E  
                                    u1760 005A                                      u1920 0586  
                                    u2640 1FD0                                      u2480 1262  
                                    u2720 10D0                                      u2560 03A6  
                                    u2800 0B46                                      u1681 0CD8  
                                    u1841 025A                                      u1761 0056  
                                    u1921 0582                                      u2641 1FCC  
                                    u2481 125E                                      u2721 10CC  
                                    u2561 03A2                                      u2801 0B42  
                                    u1690 0D1A                                      u1850 026E  
                                    u1770 008A                                      u1930 05CE  
                                    u2650 1FF2                                      u2730 1406  
                                    u2490 12B8                                      u2570 03DC  
                                    u2810 0B5E                                      u1691 0D16  
                                    u1851 026A                                      u1771 0086  
                                    u1931 05CA                                      u2651 1FEE  
                                    u2731 1402                                      u2491 12B4  
                                    u2571 03D8                                      u2811 0B5A  
                                    u2660 1D1E                                      u1860 0280  
                                    u1780 00A6                                      u1940 0640  
                                    u2740 0E1A                                      u2580 0412  
                                    u2900 0C58                                      u2820 0B7A  
                                    u2661 1D1A                                      u1861 027C  
                                    u1781 00A2                                      u1941 063C  
                                    u2741 0E16                                      u2581 040E  
                                    u2901 0C54                                      u2821 0B76  
                                    u2670 1D4A                                      u1870 0290  
                                    u1790 00D4                                      u1950 0664  
                                    u2750 0E46                                      u2590 0448  
                                    u2830 0BBE                                      u2671 1D46  
                                    u1871 028C                                      u1791 00D0  
                                    u1951 0660                                      u2751 0E42  
                                    u2591 0444                                      u2831 0BBA  
                                    u1880 02A8                                      u1960 0708  
                                    u2760 0E72                                      u2680 1BE4  
                                    u2840 0BCE                                      u1881 02A4  
                                    u1961 0704                                      u2761 0E6E  
                                    u2681 1BE0                                      u2841 0BCA  
                                    u2770 1694                                      u1890 25CE  
                                    u1970 220C                                      u2690 1C10  
                                    u2850 0BF6                                      u2771 1690  
                                    u1891 25CA                                      u1971 2208  
                                    u2691 1C0C                                      u2851 0BF2  
                                    u2780 15C2                                      u1980 221C  
                                    u2860 0C0C                                      u2781 15BE  
                                    u1981 2218                                      u2861 0C08  
                                    u1990 222C                                      u2790 19D6  
                                    u2870 0C1C                                      u2950 1CB2  
                                    u1991 2228                                      u2791 19D2  
                                    u2871 0C18                                      u2951 1CAE  
                                    u2880 0C32                                      u2960 1CD2  
                                    u2881 0C2E                                      u2961 1CCE  
                                    u2890 0C42                                      u2891 0C3E  
                                    u2977 1B80                                      u2987 2378  
                                    u2997 2448                                      _TMR0 000FD6  
                    _minutosTranscurridos 00EC                        ??_i2c_reinicia_com 0002  
                          _check_response 2442                   escribeHorariosMemoria@i 000B  
                           ??_i2c_detener 0002                                      abs@a 0013  
                                    _dbuf 0170                                      _ctoa 2188  
                                    _main 1C4C                                      _dtoa 0012  
                                    _hora 005D                                      _prec 00E4  
                                    _nout 00E0                                      pad@i 0018  
                                    pad@p 0015                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      indf1 000FE7  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    pad@w 001A                                      map@x 001B  
                                    fsr2l 000FD9                                      btemp 005F  
                          ?_sistemaRegado 0001                  __size_of_asignarHorarios 008A  
                           ??_i2c_iniciar 0001                                      prodl 000FF3  
                                    start 000E                  ??_restablecerDatosSensor 0005  
                           __CFG_IESO$OFF 000000                          ??_DHT11_ReadData 0001  
                       _constructorSensor 268E                      __size_of_DHT11_Start 0020  
                            ?_lecturaWifi 0001                   __size_of_setTiempoRegar 00A0  
                            ___param_bank 000000                        ?_constructorSensor 0001  
                      setTiempoRegar@hora 0010                        _leeHorariosMemoria 14EC  
                        ??_encenderBombas 0014                                     ??_abs 0015  
                                   ??_map 002F                                     ??_pad 0017  
                          _i2c_envia_dato 2682                             __CFG_PLLDIV$1 000000  
                          _i2c_inicia_com 26AA                           __end_of___aldiv 103E  
                         __end_of___aodiv 0B34                                     ?_ctoa 001C  
                                   ?_main 0001                                     ?_dtoa 001C  
                         __end_of___aomod 0DFC                             _convertirDato 25DE  
                         __end_of___awdiv 18EA                                     STR_10 7C18  
                                   STR_11 7AED                                     STR_20 7E5F  
                                   STR_12 7D89                                     STR_21 7E1D  
                                   STR_13 7D63                                     STR_22 7F59  
                                   STR_30 7E7F                                     STR_14 7C4B  
                                   STR_23 7FDC                                     STR_31 7EBE  
                                   STR_15 7E3F                                     STR_24 7F0D  
                                   STR_40 7F85                                     STR_16 7DAE  
                                   STR_32 7CE1                                     STR_33 7CE1  
                                   STR_17 7EDB                                     STR_25 7D39  
                                   STR_41 7BA8                                     STR_34 7E7F  
                                   STR_18 7DF8                                     STR_26 7C7E  
                                   STR_42 7B6F                                     STR_35 7EBE  
                                   STR_27 7FCC                                     STR_19 7CB0  
                                   STR_43 7B35                                     STR_36 7FAB  
                                   STR_28 7F29                           __end_of___awmod 1B00  
                                   STR_37 7FF5                                     STR_29 7F70  
                                   STR_38 7FEA                                     STR_39 7F99  
                     ??_constructorSensor 0005                         convertirDato@dato 0002  
                                   _T0CON 000FD5                           ___awdiv@divisor 0003  
                                   i2l205 20CA                       ?_leeHorariosMemoria 0001  
                         ___awdiv@counter 0005                                     _RCREG 000FAE  
                            vfpfcnvrt@fmt 0042                                     _SPBRG 000FAF  
                           __CFG_USBDIV$1 000000                                     _TRISD 000F95  
                                   _TXREG 000FAD                             __CFG_PWRT$OFF 000000  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                       ___lmul@multiplicand 0005  
                           __CFG_WRT3$OFF 000000                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            __CFG_EBTRB$OFF 000000  
                      __size_of_UART_init 0070                        __size_of_UART_read 0054  
                                   _flags 00E6                                     _fputc 1696  
                                   _fputs 23FE                    __end_of_check_response 2482  
                             ?_UART_write 0001                                     pad@fp 0011  
                                   _width 00E2                                     ctoa@c 001E  
                                   _putch 26BE                                     ctoa@w 001F  
                                   dtoa@d 001E                                     dtoa@i 003E  
                                   dtoa@n 0036                                     dtoa@p 0030  
                                   dtoa@s 0034                                     dtoa@w 0032  
                                   tablat 000FF5         __size_of_mostrarDatosSensoresWIFI 00FE  
                                   ttemp5 0060                                     ttemp6 0063  
                                   ttemp7 0067                                     status 000FD8  
               ?_mostrarDatosSensoresWIFI 0001                                     wtemp8 0060  
                         __end_of_sprintf 228A                        escribe_eeprom@dato 0005  
               __end_of_constructorSensor 2698                      ??_leeHorariosMemoria 0007  
                          __CFG_ICPRT$OFF 000000                                _i2c_espera 25B8  
                        ??_dameHoraActual 0005                            __CFG_MCLRE$OFF 000000  
                         __initialization 232A                       __end_of_i2c_detener 26BA  
         __size_of_lecturaAnalogaSensores 00AC                    __end_of_i2c_envia_dato 268E  
                            __end_of_ctoa 21E4                              __end_of_main 1CE6  
                            __end_of_dtoa 02F6                  ??_escribeHorariosMemoria 0007  
                         ??_configurarAdc 0001                    __end_of_i2c_inicia_com 26B2  
                      _inicializarObjetos 15C4                       __end_of_i2c_iniciar 2682  
                  sistemaPrincipal@opcion 005C                          _dameHumedadSuelo 2374  
                          ?_convertirDato 0001                      __size_of_fijaHoraRtc 0068  
                                  ??_ctoa 001F                                    ??_main 005D  
                                  ??_dtoa 0026                 setTiempoRegar@tiempoRegar 000F  
                           __activetblptr 000002                       ?_inicializarObjetos 0001  
                      i2c_envia_dato@dato 0002                           __CFG_CCP2MX$OFF 000000  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                                  ?_fputc 0001                                    ?_fputs 000A  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                         ?_check_response 0001                          ___awdiv@dividend 0001  
                  encenderBombas@flagSeco 0016                                    ?_putch 0001  
                      convertirDato@datoR 0003                             _horaRegar$795 0003  
                                  i2l3900 208E                                    i2l3902 2090  
                                  i2l3910 20B2                                    i2l3912 20C0  
                                  i2l3904 20A0                                    i2l3914 20C4  
                                  i2l3906 20A4                                    i2l3908 20A6  
                                  i2l3896 206E                                    i2l3898 207C  
                         ??_sistemaRegado 0059                                    _SSPADD 000FC8  
                                  _SSPBUF 000FC9                      ??_inicializarObjetos 0001  
         __size_of_restablecerDatosSensor 0050                            __CFG_XINST$OFF 000000  
                        __end_of_getValue 09AC                              vfprintf@cfmt 0057  
                __end_of_sistemaPrincipal 1A50                            _escribe_eeprom 2534  
                                  ___lmul 1F38                           ?_i2c_envia_dato 0001  
                               ??___aldiv 0015                                 ??___aodiv 0011  
                               ??___aomod 0011                         __end_of_UART_init 1ECA  
                       __end_of_UART_read 2238                                 ??___awdiv 0005  
                               ??___awmod 0005                         ??_asignarHorarios 000F  
                        __end_of_leer_rtc 25B8                           ?_i2c_inicia_com 0001  
                        __end_of_estaSeco 23FE                       __size_of_UART_write 0016  
                            ?_UART_printf 0002                                    clear_0 2350  
                                  clear_1 235C                          ___awdiv@quotient 0007  
                         ___awmod@divisor 0003                                    _setRtc 1DEA  
                         ___awmod@counter 0005                                    pad@buf 0013  
                                  ctoa@fp 001C       mostrarDatosSensoresWIFI@temperatura 00DC  
                                  dtoa@fp 001C                                    _strlen 24FE  
                         _i2c_recibe_dato 263C                              ?_mostrarMenu 0001  
                                  fputc@c 0001                                    fputs@c 000E  
                                  fputs@i 000F                                    fputs@s 000A  
                    escribe_rtc@direccion 0004                              __mediumconst 7AEC  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                    _lecturaAnalogaSensores 1B00  
            __end_of_mostrarDatosSensores 140E                                    putch@c 0001  
                        __end_of_vfprintf 206C                                 ??_sprintf 0059  
                           ?_regadoRapido 0001                                __accesstop 0060  
                 __end_of__initialization 2366                      __size_of_escribe_rtc 001E  
                         __CFG_PBADEN$OFF 000000                      __size_of_leer_eeprom 003C  
                         __CFG_FOSC$XT_XT 000000                               _i2c_detener 26B2  
              __size_of_constructorSensor 000A                             ___rparam_used 000001  
                             _i2c_iniciar 266C                    __end_of_escribe_eeprom 2564  
                             ?_i2c_espera 0001                            _setTiempoRegar 1BAC  
                          __pcstackCOMRAM 0001                              leer_rtc@dato 0004  
                            __pidataBANK0 26BA                      __size_of_lecturaWifi 00F0  
         __size_of_escribeHorariosMemoria 00DE                           ??_convertirDato 0001  
                           __end_of_fputc 1760                             __end_of_fputs 2442  
                     estaSeco@temperatura 0013                             __end_of_putch 26C0  
                  _restablecerDatosSensor 22DA                              _datoRecibido 00F1  
                       ?_dameDatosSistema 0001                            ??_regadoRapido 000F  
                                 ??_fputc 0005                                   ??_fputs 000E  
                                 ??_putch 0001                                __pbssBANK0 00E0  
                              __pbssBANK1 0100                        ??_dameDatosSistema 0074  
                 __size_of_desbordamiento 20C6                        __size_of_horaRegar 0050  
                  __end_of_setTiempoRegar 1C4C         constructorSensor@porcientoHumedad 0003  
                            lecturaWifi@i 00A8                           ?_escribe_eeprom 0003  
           dameTemperaturaHumedad@Humedad 0004                        _contInterrupciones 00E8  
               __size_of_i2c_reinicia_com 0008                                   ?___lmul 0001  
                              _flagRegado 00EE                mostrarDatosSensores@buffer 0074  
                 __end_of_i2c_recibe_dato 2656                                   _ACKSTAT 007E2E  
                          ___lmul@product 0009                                   ?_setRtc 0001  
                                 ?_strlen 0001           mostrarDatosSensores@temperatura 00A6  
           dameTemperaturaHumedad@humedad 000E                        __size_of_vfpfcnvrt 0226  
                     __size_of_i2c_espera 0026                                 ?_getValue 0004  
                  _escribeHorariosMemoria 140E                                   _SSPCON1 000FC6  
                                 _SSPCON2 000FC5                              ??_UART_write 0001  
                                 _SSPSTAT 000FC7                  __end_of_dameHumedadSuelo 23BA  
                               ?_leer_rtc 0001                                 ?_estaSeco 0010  
                         __CFG_VREGEN$OFF 000000                             ??_DHT11_Start 0001  
                         ?_setTiempoRegar 0001                                   __Hparam 0000  
                                 __Lparam 0000         dameTemperaturaHumedad@Temperatura 0006  
                                 ___aldiv 0F32                                   ___aodiv 09AC  
                                 ___aomod 0C98                                   ___awdiv 1826  
                         __size_of___lmul 006A                      _mostrarDatosSensores 1320  
                                 ___awmod 1A50                                 ?_vfprintf 0051  
                         __CFG_STVREN$OFF 000000                                   __pcinit 232A  
                                 __ramtop 0800                        __end_of_UART_write 266C  
                         __size_of_setRtc 0070                                   __ptext0 1C4C  
                                 __ptext1 0B34                                   __ptext2 228A  
                                 __ptext3 02F6                                   __ptext4 23BA  
                                 __ptext5 2564                                   __ptext6 258E  
                                 __ptext7 25DE                                   __ptext8 199E  
                                 __ptext9 1BAC                   check_response@respuesta 0001  
                       __end_of_horaRegar 22DA                                 _T0CONbits 000FD5  
                         __size_of_strlen 0036                      __size_of_UART_printf 005E  
                            __size_of_abs 0040                              __size_of_pad 00C6  
                            __size_of_map 007A                          ??_check_response 0001  
                        ___awmod@dividend 0001                                   _regando 00EB  
                   regadoRapido@areaRegar 0012                          ___aldiv@dividend 000D  
                                 _minutos 00F3                      __size_of_mostrarMenu 006E  
                              ??_getValue 0006                                   _sprintf 2238  
                          __pintcode_body 206C                      end_of_initialization 2366  
          mostrarDatosSensoresWIFI@buffer 00AA                                ??_leer_rtc 0003  
                              ??_estaSeco 0012                                   fputc@fp 0003  
                         _asignarHorarios 1CE6                             __Lmediumconst 7AEC  
                                 int_func 206C                                   fputs@fp 000C  
                        ??_i2c_envia_dato 0002               __size_of_leeHorariosMemoria 00D8  
                        ??_i2c_inicia_com 0002                          _VALOR_TIMER0UART 00FA  
                       __end_of_vfpfcnvrt 0788                  ??_dameTemperaturaHumedad 0008  
                               _RCSTAbits 000FAB                          ___aldiv@quotient 0017  
                   ?_mostrarDatosSensores 0001                       __end_of_DHT11_Start 261E  
                                 postdec1 000FE5                                   postdec2 000FDD  
                       ?_sistemaPrincipal 0001                   _peticionLecturaSensores 00EA  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                             ??_fijaHoraRtc 0013  
                    __end_of_regadoRapido 0F32                          ?_i2c_recibe_dato 0001  
                              ??_vfprintf 0057                             setRtc@datoRtc 0011  
                   __end_of_configurarAdc 26A2                        ??_sistemaPrincipal 005A  
                                 strlen@a 0003                                   strlen@s 0001  
                               _UART_init 1E5A                                getValue@Rx 000E  
                               _UART_read 21E4                                 _PORTDbits 000F83  
                 __size_of_DHT11_ReadData 005C                   ?_lecturaAnalogaSensores 0001  
                           setRtc@seteado 0010                 dameHumedadSuelo@canalLeer 0005  
                 lecturaAnalogaSensores@i 0030                                 _TRISBbits 000F93  
                               _TRISCbits 000F94                                 _TRISDbits 000F95  
                 __size_of_encenderBombas 026C                  _mostrarDatosSensoresWIFI 103E  
                       lecturaWifi@buffer 0074                                map@out_max 002B  
                              map@out_min 0027                            _desbordamiento 0008  
                          _esperandoDatos 00F4                            _UART_init$1824 0023  
                            ?_i2c_detener 0001                     __end_of_sistemaRegado 0C98  
                               _TXSTAbits 000FAC                         dameDatosSistema@i 00AF  
             __size_of_inicializarObjetos 00D2                              ?_i2c_iniciar 0001  
                            ??_i2c_espera 0001                         _MODO_COMUNICACION 005E  
                      DHT11_ReadData@data 0002                          _i2c_reinicia_com 26A2  
                          __end_of___lmul 1FA2                               vfpfcnvrt@ap 0044  
                             vfpfcnvrt@fp 0040                               vfpfcnvrt@ll 0048  
                 ?_restablecerDatosSensor 0001            __end_of_lecturaAnalogaSensores 1BAC  
                              ?_UART_init 001B                                ?_UART_read 0001  
                 __size_of_dameHoraActual 002A                            __end_of_setRtc 1E5A  
                     __end_of_fijaHoraRtc 200A                            __end_of_strlen 2534  
                     start_initialization 232A                              _estaSeco$789 0012  
                             __end_of_abs 24C2                   __end_of_asignarHorarios 1D70  
                             __end_of_pad 1826                               __end_of_map 1DEA  
       escribeHorariosMemoria@contMemoria 0009                    __end_of_desbordamiento 20CE  
                      __end_of_i2c_espera 25DE                             ??_escribe_rtc 0004  
                           ??_leer_eeprom 0005                          ??_escribe_eeprom 0006  
                     leeHorariosMemoria@i 000B                      constructorSensor@pin 0004  
                             _DHT11_Start 25FE                             ??_lecturaWifi 0059  
                  ??_mostrarDatosSensores 0059                               vfprintf@fmt 0053  
               __size_of_dameDatosSistema 00F4           __size_of_dameTemperaturaHumedad 00B4  
                                ??___lmul 0009            __end_of_restablecerDatosSensor 232A  
                             __pdataBANK0 00F8                          __CFG_LPT1OSC$OFF 000000  
                       leer_rtc@direccion 0003                                  ??_setRtc 000F  
                   __end_of_convertirDato 25FE                                  ??_strlen 0003  
                 ?_escribeHorariosMemoria 0001                               __pbssCOMRAM 005D  
                           __pcstackBANK0 0060                          ___aodiv@dividend 0001  
                         ?_desbordamiento 0001                          ??_setTiempoRegar 000F  
                       __size_of_getValue 0224                         ?_dameHumedadSuelo 0001  
                  getValue@datoIncorrecto 0008                         UART_printf@cadena 0002  
                           lecturaWifi@Rx 00A6                        ??_dameHumedadSuelo 0003  
                       __size_of_leer_rtc 002A                         __size_of_estaSeco 0044  
                     __end_of_escribe_rtc 263C                       __end_of_leer_eeprom 24FE  
                   __size_of_regadoRapido 0136                                 _dtoa$1044 002E  
                               __pintcode 0008                             __pmediumconst 7AEC  
                                ?___aldiv 000D                                  ?___aodiv 0001  
                                ?___aomod 0001                                  ?___awdiv 0001  
                        ___aodiv@quotient 0013                                  ?___awmod 0001  
                             _fijaHoraRtc 1FA2                       __end_of_lecturaWifi 1320  
                          _DHT11_ReadData 212C                                setRtc@dato 0012  
                             ??_UART_init 001F                               ??_UART_read 0001  
                       __size_of_vfprintf 0062               mostrarDatosSensores@humedad 00A7  
          __end_of_escribeHorariosMemoria 14EC                            _encenderBombas 02F6  
                               _horaRegar 228A            dameTemperaturaHumedad@checkSum 000A  
                  _dameTemperaturaHumedad 18EA                          ?_asignarHorarios 0001  
                                ?_sprintf 0060                            __size_of_fputc 00CA  
                          __size_of_fputs 0044                              _regadoRapido 0DFC  
                          __size_of_putch 0002                           ___aldiv@divisor 0011  
                         ___aldiv@counter 0015                                  _LATDbits 000F8C  
                                _PIE1bits 000F9D                      __size_of_i2c_detener 0008  
                                _PIR1bits 000F9E                                  i2u291_40 207C  
                                i2u291_41 2078                                  i2u292_40 208E  
                                i2u292_41 208A                                  i2u293_40 20A0  
                                i2u293_41 209C                                  i2u294_40 20C0  
                                i2u294_41 20BC                   restablecerDatosSensor@i 0005  
                    __size_of_i2c_iniciar 0016                          __CFG_WDTPS$32768 000000  
                  _tiempoInactividadTrans 00F7             leeHorariosMemoria@contMemoria 0009  
                     asignarHorarios@hora 000F                    __end_of_DHT11_ReadData 2188  
                               getValue@i 0009                             ??_UART_printf 0004  
                  dameDatosSistema@buffer 007D                                 _vfpfcnvrt 0562  
                               map@in_max 0023                                 map@in_min 001F  
                              _ADCON0bits 000FC2                            _dameHoraActual 2564  
              ??_mostrarDatosSensoresWIFI 0059                    __end_of_encenderBombas 0562  
                           ??_mostrarMenu 0004                            UART_write@dato 0001  
                              ?_horaRegar 0001                     mostrarDatosSensores@i 00A8  
               __size_of_sistemaPrincipal 00B2                  __end_of_i2c_reinicia_com 26AA  
                              vfpfcnvrt@c 0050                         ___lmul@multiplier 0001  
                               copy_data0 233E                               _escribe_rtc 261E  
                             _leer_eeprom 24C2                              _VALOR_TIMER0 00F8  
              __end_of_leeHorariosMemoria 15C4                                 estaSeco@s 0010  
                                __Hrparam 0000                     getValue@numCharacters 0004  
                            _minutosRegar 00ED                               _lecturaWifi 1230  
                           UART_init@BAUD 001B                                vfprintf@ap 0055  
                                __Lrparam 0000                                vfprintf@fp 0051  
                        _dameDatosSistema 113C  dameTemperaturaHumedad@temperaturaDecimal 000D  
                     _esperaDatoConcluida 00F5                          __size_of___aldiv 010C  
                         ?_DHT11_ReadData 0001                          __size_of___aodiv 0188  
                        __size_of___aomod 0164                          __size_of___awdiv 00C4  
                  __end_of_dameHoraActual 258E                          __size_of___awmod 00B0  
                              ?_vfpfcnvrt 0040                           DHT11_ReadData@i 0001  
                         ___aodiv@divisor 0009                           ___aodiv@counter 0011  
                         ?_encenderBombas 0001                                sprintf@fmt 0062  
                __size_of_i2c_recibe_dato 001A                       __end_of_UART_printf 212C  
                                __ptext10 0DFC                                  __ptext11 1ECA  
                                __ptext20 2374                                  __ptext12 103E  
                                __ptext21 18EA                                  __ptext13 1230  
                                __ptext30 113C                                  __ptext22 2442  
                                __ptext14 22DA                                  __ptext31 2238  
                                __ptext23 25FE                                  __ptext15 268E  
                                __ptext40 24FE                                  __ptext32 200A  
                                __ptext24 212C                                  __ptext16 1320  
                                __ptext41 23FE                                  __ptext33 0562  
                                __ptext25 1FA2                                  __ptext17 1B00  
                                __ptext50 2534                                  __ptext42 1696  
                                __ptext34 0012                                  __ptext26 1DEA  
                                __ptext18 1D70                                  __ptext51 14EC  
                                __ptext43 26BE                                  __ptext35 2482  
                                __ptext27 261E                                  __ptext19 1F38  
                                __ptext60 266C                                  __ptext52 24C2  
                                __ptext44 1CE6                                  __ptext36 0C98  
                                __ptext28 1A50                                  __ptext61 2698  
                                __ptext53 26A2                                  __ptext45 0788  
                                __ptext37 09AC                                  __ptext29 1826  
                                __ptext62 1E5A                                  __ptext54 263C  
                                __ptext46 21E4                                  __ptext38 2188  
                                __ptext63 0F32                                  __ptext55 26AA  
                                __ptext47 20CE                                  __ptext39 1760  
                                __ptext56 2682                                  __ptext48 2656  
                                __ptext57 26B2                                  __ptext49 140E  
                                __ptext58 25B8                                  __ptext59 15C4  
                                _getValue 0788                       __end_of_mostrarMenu 1F38  
                        __size_of_sprintf 0052                                  _leer_rtc 258E  
                                _estaSeco 23BA                __end_of_inicializarObjetos 1696  
                                _byteUart 00F6                    __size_of_configurarAdc 000A  
                lecturaWifi@humedadMedida 00A7                   __size_of_check_response 0040  
                     inicializarObjetos@i 0003                             __size_of_ctoa 005C  
                           __size_of_main 009A                             __size_of_dtoa 02E4  
                                _horarios 0100                              ?_DHT11_Start 0001  
    dameTemperaturaHumedad@humedadDecimal 000C                                  _tempHora 00EF  
                                _segundos 00F2                           encenderBombas@i 0017  
                                _sensores 0160                 mostrarDatosSensoresWIFI@i 00DE  
                                int$flags 005F                                  _vfprintf 200A  
                         ?_dameHoraActual 0001                   __size_of_i2c_envia_dato 000C  
                           getValue@i_962 000B                   __size_of_i2c_inicia_com 0008  
                i2c_recibe_dato@datoleido 0002                          ___aomod@dividend 0001  
                   __CFG_CPUDIV$OSC1_PLL2 000000                          ??_desbordamiento 0001  
                  __size_of_sistemaRegado 0164                                _INTCONbits 000FF2  
                      constructorSensor@s 0001                               ??_horaRegar 0003  
         mostrarDatosSensoresWIFI@humedad 00DD                   escribe_eeprom@direccion 0003  
                                intlevel2 0000                                 sprintf@ap 006C  
                         escribe_rtc@dato 0003                           setRtc@direccion 000F  
                       asignarHorarios@Rx 0010             __size_of_mostrarDatosSensores 00EE  
                           _overflowTimer 00F0                              ?_fijaHoraRtc 0001  
       dameTemperaturaHumedad@temperatura 000F                           ___aomod@divisor 0009  
                            getValue@dato 000D                 __size_of_dameHumedadSuelo 0046  
                             ??_vfpfcnvrt 0046                           ___aomod@counter 0011  
                             _UART_printf 20CE                             _configurarAdc 2698  
        __end_of_mostrarDatosSensoresWIFI 113C                                  sprintf@f 006E  
                                sprintf@s 0060                   ?_dameTemperaturaHumedad 0004  
                             _mostrarMenu 1ECA                              ___aldiv@sign 0016  
                        _sistemaPrincipal 199E                           leer_eeprom@dato 0006  
                             _SSPCON2bits 000FC5                                _UART_write 2656  
                            ___aodiv@sign 0012                         ??_i2c_recibe_dato 0002  
                  __size_of_convertirDato 0020                      leer_eeprom@direccion 0003  
                           _sistemaRegado 0B34                              ___aomod@sign 0012  
                ??_lecturaAnalogaSensores 002F  
