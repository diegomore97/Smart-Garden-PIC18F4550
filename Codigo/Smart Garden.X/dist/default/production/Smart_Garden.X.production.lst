

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Jun 17 01:05:54 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    86                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    87                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    88                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    89                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    90  0000                     
    91                           ; Version 2.10
    92                           ; Generated 31/07/2019 GMT
    93                           ; 
    94                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    95                           ; All rights reserved.
    96                           ; 
    97                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    98                           ; 
    99                           ; Redistribution and use in source and binary forms, with or without modification, are
   100                           ; permitted provided that the following conditions are met:
   101                           ; 
   102                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   103                           ;        conditions and the following disclaimer.
   104                           ; 
   105                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   106                           ;        of conditions and the following disclaimer in the documentation and/or other
   107                           ;        materials provided with the distribution.
   108                           ; 
   109                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   110                           ;        software without specific prior written permission.
   111                           ; 
   112                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   113                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   114                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   115                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   116                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   117                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   118                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   119                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   120                           ; 
   121                           ; 
   122                           ; Code-generator required, PIC18F4550 Definitions
   123                           ; 
   124                           ; SFR Addresses
   125  0000                     
   126                           	psect	idataBANK1
   127  002FA6                     __pidataBANK1:
   128                           	opt callstack 0
   129                           
   130                           ;initializer for stoa@F1144
   131  002FA6  28                 	db	40
   132  002FA7  6E                 	db	110
   133  002FA8  75                 	db	117
   134  002FA9  6C                 	db	108
   135  002FAA  6C                 	db	108
   136  002FAB  29                 	db	41
   137  002FAC  00                 	db	0
   138                           
   139                           ;initializer for _VALOR_TIMER0
   140  002FAD  6769               	dw	26473
   141                           
   142                           ;initializer for _VALOR_TIMER0UART
   143  002FAF  6769               	dw	26473
   144  0000                     _TMR0	set	4054
   145  0000                     _TRISD	set	3989
   146  0000                     _T0CON	set	4053
   147  0000                     _T0CONbits	set	4053
   148  0000                     _LATD	set	3980
   149  0000                     _PIE1bits	set	3997
   150  0000                     _ADRESL	set	4035
   151  0000                     _ADRESH	set	4036
   152  0000                     _ADCON0bits	set	4034
   153  0000                     _ADCON2	set	4032
   154  0000                     _ADCON1	set	4033
   155  0000                     _INTCONbits	set	4082
   156  0000                     _LATDbits	set	3980
   157  0000                     _TRISDbits	set	3989
   158  0000                     _PORTDbits	set	3971
   159  0000                     _TXREG	set	4013
   160  0000                     _RCREG	set	4014
   161  0000                     _PIR1bits	set	3998
   162  0000                     _RCSTAbits	set	4011
   163  0000                     _TXSTAbits	set	4012
   164  0000                     _SPBRG	set	4015
   165  0000                     _TRISCbits	set	3988
   166  0000                     _SSPBUF	set	4041
   167  0000                     _SSPCON2bits	set	4037
   168  0000                     _SSPADD	set	4040
   169  0000                     _SSPCON2	set	4037
   170  0000                     _SSPCON1	set	4038
   171  0000                     _SSPSTAT	set	4039
   172  0000                     _TRISBbits	set	3987
   173  0000                     _ACKSTAT	set	32302
   174                           
   175                           	psect	mediumconst
   176  0079D4                     __pmediumconst:
   177                           	opt callstack 0
   178  0079D4  00                 	db	0
   179  0079D5                     STR_16:
   180  0079D5  0D                 	db	13
   181  0079D6  0A                 	db	10
   182  0079D7  20                 	db	32
   183  0079D8  49                 	db	73	;'I'
   184  0079D9  6E                 	db	110	;'n'
   185  0079DA  67                 	db	103	;'g'
   186  0079DB  72                 	db	114	;'r'
   187  0079DC  65                 	db	101	;'e'
   188  0079DD  73                 	db	115	;'s'
   189  0079DE  65                 	db	101	;'e'
   190  0079DF  20                 	db	32
   191  0079E0  6C                 	db	108	;'l'
   192  0079E1  6F                 	db	111	;'o'
   193  0079E2  73                 	db	115	;'s'
   194  0079E3  20                 	db	32
   195  0079E4  6D                 	db	109	;'m'
   196  0079E5  69                 	db	105	;'i'
   197  0079E6  6E                 	db	110	;'n'
   198  0079E7  75                 	db	117	;'u'
   199  0079E8  74                 	db	116	;'t'
   200  0079E9  6F                 	db	111	;'o'
   201  0079EA  73                 	db	115	;'s'
   202  0079EB  20                 	db	32
   203  0079EC  71                 	db	113	;'q'
   204  0079ED  75                 	db	117	;'u'
   205  0079EE  65                 	db	101	;'e'
   206  0079EF  20                 	db	32
   207  0079F0  64                 	db	100	;'d'
   208  0079F1  65                 	db	101	;'e'
   209  0079F2  73                 	db	115	;'s'
   210  0079F3  65                 	db	101	;'e'
   211  0079F4  65                 	db	101	;'e'
   212  0079F5  20                 	db	32
   213  0079F6  71                 	db	113	;'q'
   214  0079F7  75                 	db	117	;'u'
   215  0079F8  65                 	db	101	;'e'
   216  0079F9  20                 	db	32
   217  0079FA  73                 	db	115	;'s'
   218  0079FB  65                 	db	101	;'e'
   219  0079FC  20                 	db	32
   220  0079FD  72                 	db	114	;'r'
   221  0079FE  69                 	db	105	;'i'
   222  0079FF  65                 	db	101	;'e'
   223  007A00  67                 	db	103	;'g'
   224  007A01  75                 	db	117	;'u'
   225  007A02  65                 	db	101	;'e'
   226  007A03  20                 	db	32
   227  007A04  65                 	db	101	;'e'
   228  007A05  6E                 	db	110	;'n'
   229  007A06  20                 	db	32
   230  007A07  65                 	db	101	;'e'
   231  007A08  73                 	db	115	;'s'
   232  007A09  65                 	db	101	;'e'
   233  007A0A  20                 	db	32
   234  007A0B  68                 	db	104	;'h'
   235  007A0C  6F                 	db	111	;'o'
   236  007A0D  72                 	db	114	;'r'
   237  007A0E  61                 	db	97	;'a'
   238  007A0F  72                 	db	114	;'r'
   239  007A10  69                 	db	105	;'i'
   240  007A11  6F                 	db	111	;'o'
   241  007A12  20                 	db	32
   242  007A13  65                 	db	101	;'e'
   243  007A14  6A                 	db	106	;'j'
   244  007A15  3A                 	db	58	;':'
   245  007A16  20                 	db	32
   246  007A17  31                 	db	49	;'1'
   247  007A18  35                 	db	53	;'5'
   248  007A19  20                 	db	32
   249  007A1A  0D                 	db	13
   250  007A1B  0A                 	db	10
   251  007A1C  00                 	db	0
   252  007A1D                     STR_1:
   253  007A1D  0D                 	db	13
   254  007A1E  0A                 	db	10
   255  007A1F  20                 	db	32
   256  007A20  45                 	db	69	;'E'
   257  007A21  6E                 	db	110	;'n'
   258  007A22  76                 	db	118	;'v'
   259  007A23  69                 	db	105	;'i'
   260  007A24  65                 	db	101	;'e'
   261  007A25  20                 	db	32
   262  007A26  65                 	db	101	;'e'
   263  007A27  6C                 	db	108	;'l'
   264  007A28  20                 	db	32
   265  007A29  64                 	db	100	;'d'
   266  007A2A  69                 	db	105	;'i'
   267  007A2B  61                 	db	97	;'a'
   268  007A2C  20                 	db	32
   269  007A2D  64                 	db	100	;'d'
   270  007A2E  65                 	db	101	;'e'
   271  007A2F  20                 	db	32
   272  007A30  6C                 	db	108	;'l'
   273  007A31  61                 	db	97	;'a'
   274  007A32  20                 	db	32
   275  007A33  73                 	db	115	;'s'
   276  007A34  65                 	db	101	;'e'
   277  007A35  6D                 	db	109	;'m'
   278  007A36  61                 	db	97	;'a'
   279  007A37  6E                 	db	110	;'n'
   280  007A38  61                 	db	97	;'a'
   281  007A39  20                 	db	32
   282  007A3A  45                 	db	69	;'E'
   283  007A3B  6A                 	db	106	;'j'
   284  007A3C  3A                 	db	58	;':'
   285  007A3D  20                 	db	32
   286  007A3E  30                 	db	48	;'0'
   287  007A3F  31                 	db	49	;'1'
   288  007A40  20                 	db	32
   289  007A41  3D                 	db	61	;'='
   290  007A42  20                 	db	32
   291  007A43  44                 	db	68	;'D'
   292  007A44  4F                 	db	79	;'O'
   293  007A45  4D                 	db	77	;'M'
   294  007A46  49                 	db	73	;'I'
   295  007A47  4E                 	db	78	;'N'
   296  007A48  47                 	db	71	;'G'
   297  007A49  4F                 	db	79	;'O'
   298  007A4A  20                 	db	32
   299  007A4B  2E                 	db	46
   300  007A4C  2E                 	db	46
   301  007A4D  2E                 	db	46
   302  007A4E  20                 	db	32
   303  007A4F  30                 	db	48	;'0'
   304  007A50  37                 	db	55	;'7'
   305  007A51  20                 	db	32
   306  007A52  3D                 	db	61	;'='
   307  007A53  20                 	db	32
   308  007A54  53                 	db	83	;'S'
   309  007A55  41                 	db	65	;'A'
   310  007A56  42                 	db	66	;'B'
   311  007A57  41                 	db	65	;'A'
   312  007A58  44                 	db	68	;'D'
   313  007A59  4F                 	db	79	;'O'
   314  007A5A  20                 	db	32
   315  007A5B  0D                 	db	13
   316  007A5C  0A                 	db	10
   317  007A5D  00                 	db	0
   318  007A5E                     STR_32:
   319  007A5E  0D                 	db	13
   320  007A5F  0A                 	db	10
   321  007A60  0A                 	db	10
   322  007A61  48                 	db	72	;'H'
   323  007A62  6F                 	db	111	;'o'
   324  007A63  72                 	db	114	;'r'
   325  007A64  61                 	db	97	;'a'
   326  007A65  20                 	db	32
   327  007A66  7C                 	db	124
   328  007A67  20                 	db	32
   329  007A68  52                 	db	82	;'R'
   330  007A69  65                 	db	101	;'e'
   331  007A6A  67                 	db	103	;'g'
   332  007A6B  61                 	db	97	;'a'
   333  007A6C  72                 	db	114	;'r'
   334  007A6D  28                 	db	40
   335  007A6E  31                 	db	49	;'1'
   336  007A6F  20                 	db	32
   337  007A70  73                 	db	115	;'s'
   338  007A71  69                 	db	105	;'i'
   339  007A72  20                 	db	32
   340  007A73  30                 	db	48	;'0'
   341  007A74  20                 	db	32
   342  007A75  6E                 	db	110	;'n'
   343  007A76  6F                 	db	111	;'o'
   344  007A77  29                 	db	41
   345  007A78  20                 	db	32
   346  007A79  7C                 	db	124
   347  007A7A  20                 	db	32
   348  007A7B  4D                 	db	77	;'M'
   349  007A7C  69                 	db	105	;'i'
   350  007A7D  6E                 	db	110	;'n'
   351  007A7E  75                 	db	117	;'u'
   352  007A7F  74                 	db	116	;'t'
   353  007A80  6F                 	db	111	;'o'
   354  007A81  73                 	db	115	;'s'
   355  007A82  20                 	db	32
   356  007A83  64                 	db	100	;'d'
   357  007A84  65                 	db	101	;'e'
   358  007A85  20                 	db	32
   359  007A86  72                 	db	114	;'r'
   360  007A87  69                 	db	105	;'i'
   361  007A88  65                 	db	101	;'e'
   362  007A89  67                 	db	103	;'g'
   363  007A8A  6F                 	db	111	;'o'
   364  007A8B  20                 	db	32
   365  007A8C  7C                 	db	124
   366  007A8D  20                 	db	32
   367  007A8E  44                 	db	68	;'D'
   368  007A8F  49                 	db	73	;'I'
   369  007A90  41                 	db	65	;'A'
   370  007A91  53                 	db	83	;'S'
   371  007A92  20                 	db	32
   372  007A93  52                 	db	82	;'R'
   373  007A94  45                 	db	69	;'E'
   374  007A95  47                 	db	71	;'G'
   375  007A96  41                 	db	65	;'A'
   376  007A97  52                 	db	82	;'R'
   377  007A98  0D                 	db	13
   378  007A99  0A                 	db	10
   379  007A9A  0A                 	db	10
   380  007A9B  00                 	db	0
   381  007A9C                     STR_9:
   382  007A9C  0D                 	db	13
   383  007A9D  0A                 	db	10
   384  007A9E  20                 	db	32
   385  007A9F  49                 	db	73	;'I'
   386  007AA0  6E                 	db	110	;'n'
   387  007AA1  67                 	db	103	;'g'
   388  007AA2  72                 	db	114	;'r'
   389  007AA3  65                 	db	101	;'e'
   390  007AA4  73                 	db	115	;'s'
   391  007AA5  65                 	db	101	;'e'
   392  007AA6  20                 	db	32
   393  007AA7  31                 	db	49	;'1'
   394  007AA8  20                 	db	32
   395  007AA9  70                 	db	112	;'p'
   396  007AAA  61                 	db	97	;'a'
   397  007AAB  72                 	db	114	;'r'
   398  007AAC  61                 	db	97	;'a'
   399  007AAD  20                 	db	32
   400  007AAE  61                 	db	97	;'a'
   401  007AAF  63                 	db	99	;'c'
   402  007AB0  74                 	db	116	;'t'
   403  007AB1  69                 	db	105	;'i'
   404  007AB2  76                 	db	118	;'v'
   405  007AB3  61                 	db	97	;'a'
   406  007AB4  72                 	db	114	;'r'
   407  007AB5  20                 	db	32
   408  007AB6  7C                 	db	124
   409  007AB7  7C                 	db	124
   410  007AB8  20                 	db	32
   411  007AB9  69                 	db	105	;'i'
   412  007ABA  6E                 	db	110	;'n'
   413  007ABB  67                 	db	103	;'g'
   414  007ABC  72                 	db	114	;'r'
   415  007ABD  65                 	db	101	;'e'
   416  007ABE  73                 	db	115	;'s'
   417  007ABF  65                 	db	101	;'e'
   418  007AC0  20                 	db	32
   419  007AC1  30                 	db	48	;'0'
   420  007AC2  20                 	db	32
   421  007AC3  70                 	db	112	;'p'
   422  007AC4  61                 	db	97	;'a'
   423  007AC5  72                 	db	114	;'r'
   424  007AC6  61                 	db	97	;'a'
   425  007AC7  20                 	db	32
   426  007AC8  64                 	db	100	;'d'
   427  007AC9  65                 	db	101	;'e'
   428  007ACA  73                 	db	115	;'s'
   429  007ACB  61                 	db	97	;'a'
   430  007ACC  63                 	db	99	;'c'
   431  007ACD  74                 	db	116	;'t'
   432  007ACE  69                 	db	105	;'i'
   433  007ACF  76                 	db	118	;'v'
   434  007AD0  61                 	db	97	;'a'
   435  007AD1  72                 	db	114	;'r'
   436  007AD2  3A                 	db	58	;':'
   437  007AD3  20                 	db	32
   438  007AD4  0D                 	db	13
   439  007AD5  0A                 	db	10
   440  007AD6  00                 	db	0
   441  007AD7                     STR_50:
   442  007AD7  0D                 	db	13
   443  007AD8  0A                 	db	10
   444  007AD9  20                 	db	32
   445  007ADA  59                 	db	89	;'Y'
   446  007ADB  61                 	db	97	;'a'
   447  007ADC  20                 	db	32
   448  007ADD  73                 	db	115	;'s'
   449  007ADE  65                 	db	101	;'e'
   450  007ADF  20                 	db	32
   451  007AE0  65                 	db	101	;'e'
   452  007AE1  73                 	db	115	;'s'
   453  007AE2  74                 	db	116	;'t'
   454  007AE3  61                 	db	97	;'a'
   455  007AE4  20                 	db	32
   456  007AE5  65                 	db	101	;'e'
   457  007AE6  66                 	db	102	;'f'
   458  007AE7  65                 	db	101	;'e'
   459  007AE8  63                 	db	99	;'c'
   460  007AE9  74                 	db	116	;'t'
   461  007AEA  75                 	db	117	;'u'
   462  007AEB  61                 	db	97	;'a'
   463  007AEC  6E                 	db	110	;'n'
   464  007AED  64                 	db	100	;'d'
   465  007AEE  6F                 	db	111	;'o'
   466  007AEF  20                 	db	32
   467  007AF0  75                 	db	117	;'u'
   468  007AF1  6E                 	db	110	;'n'
   469  007AF2  20                 	db	32
   470  007AF3  72                 	db	114	;'r'
   471  007AF4  69                 	db	105	;'i'
   472  007AF5  65                 	db	101	;'e'
   473  007AF6  67                 	db	103	;'g'
   474  007AF7  6F                 	db	111	;'o'
   475  007AF8  2C                 	db	44
   476  007AF9  20                 	db	32
   477  007AFA  69                 	db	105	;'i'
   478  007AFB  6E                 	db	110	;'n'
   479  007AFC  74                 	db	116	;'t'
   480  007AFD  65                 	db	101	;'e'
   481  007AFE  6E                 	db	110	;'n'
   482  007AFF  74                 	db	116	;'t'
   483  007B00  65                 	db	101	;'e'
   484  007B01  6C                 	db	108	;'l'
   485  007B02  6F                 	db	111	;'o'
   486  007B03  20                 	db	32
   487  007B04  6D                 	db	109	;'m'
   488  007B05  61                 	db	97	;'a'
   489  007B06  73                 	db	115	;'s'
   490  007B07  20                 	db	32
   491  007B08  74                 	db	116	;'t'
   492  007B09  61                 	db	97	;'a'
   493  007B0A  72                 	db	114	;'r'
   494  007B0B  64                 	db	100	;'d'
   495  007B0C  65                 	db	101	;'e'
   496  007B0D  20                 	db	32
   497  007B0E  0D                 	db	13
   498  007B0F  0A                 	db	10
   499  007B10  00                 	db	0
   500  007B11                     STR_49:
   501  007B11  0D                 	db	13
   502  007B12  0A                 	db	10
   503  007B13  20                 	db	32
   504  007B14  49                 	db	73	;'I'
   505  007B15  6E                 	db	110	;'n'
   506  007B16  67                 	db	103	;'g'
   507  007B17  72                 	db	114	;'r'
   508  007B18  65                 	db	101	;'e'
   509  007B19  73                 	db	115	;'s'
   510  007B1A  65                 	db	101	;'e'
   511  007B1B  20                 	db	32
   512  007B1C  65                 	db	101	;'e'
   513  007B1D  6C                 	db	108	;'l'
   514  007B1E  20                 	db	32
   515  007B1F  6E                 	db	110	;'n'
   516  007B20  75                 	db	117	;'u'
   517  007B21  6D                 	db	109	;'m'
   518  007B22  65                 	db	101	;'e'
   519  007B23  72                 	db	114	;'r'
   520  007B24  6F                 	db	111	;'o'
   521  007B25  20                 	db	32
   522  007B26  64                 	db	100	;'d'
   523  007B27  65                 	db	101	;'e'
   524  007B28  20                 	db	32
   525  007B29  73                 	db	115	;'s'
   526  007B2A  65                 	db	101	;'e'
   527  007B2B  6E                 	db	110	;'n'
   528  007B2C  73                 	db	115	;'s'
   529  007B2D  6F                 	db	111	;'o'
   530  007B2E  72                 	db	114	;'r'
   531  007B2F  20                 	db	32
   532  007B30  64                 	db	100	;'d'
   533  007B31  65                 	db	101	;'e'
   534  007B32  6C                 	db	108	;'l'
   535  007B33  20                 	db	32
   536  007B34  61                 	db	97	;'a'
   537  007B35  72                 	db	114	;'r'
   538  007B36  65                 	db	101	;'e'
   539  007B37  61                 	db	97	;'a'
   540  007B38  20                 	db	32
   541  007B39  61                 	db	97	;'a'
   542  007B3A  20                 	db	32
   543  007B3B  72                 	db	114	;'r'
   544  007B3C  65                 	db	101	;'e'
   545  007B3D  67                 	db	103	;'g'
   546  007B3E  61                 	db	97	;'a'
   547  007B3F  72                 	db	114	;'r'
   548  007B40  20                 	db	32
   549  007B41  65                 	db	101	;'e'
   550  007B42  6A                 	db	106	;'j'
   551  007B43  3A                 	db	58	;':'
   552  007B44  20                 	db	32
   553  007B45  35                 	db	53	;'5'
   554  007B46  20                 	db	32
   555  007B47  0D                 	db	13
   556  007B48  0A                 	db	10
   557  007B49  00                 	db	0
   558  007B4A                     STR_48:
   559  007B4A  0D                 	db	13
   560  007B4B  0A                 	db	10
   561  007B4C  20                 	db	32
   562  007B4D  49                 	db	73	;'I'
   563  007B4E  6E                 	db	110	;'n'
   564  007B4F  67                 	db	103	;'g'
   565  007B50  72                 	db	114	;'r'
   566  007B51  65                 	db	101	;'e'
   567  007B52  73                 	db	115	;'s'
   568  007B53  65                 	db	101	;'e'
   569  007B54  20                 	db	32
   570  007B55  6C                 	db	108	;'l'
   571  007B56  6F                 	db	111	;'o'
   572  007B57  73                 	db	115	;'s'
   573  007B58  20                 	db	32
   574  007B59  6D                 	db	109	;'m'
   575  007B5A  69                 	db	105	;'i'
   576  007B5B  6E                 	db	110	;'n'
   577  007B5C  75                 	db	117	;'u'
   578  007B5D  74                 	db	116	;'t'
   579  007B5E  6F                 	db	111	;'o'
   580  007B5F  73                 	db	115	;'s'
   581  007B60  20                 	db	32
   582  007B61  71                 	db	113	;'q'
   583  007B62  75                 	db	117	;'u'
   584  007B63  65                 	db	101	;'e'
   585  007B64  20                 	db	32
   586  007B65  64                 	db	100	;'d'
   587  007B66  65                 	db	101	;'e'
   588  007B67  73                 	db	115	;'s'
   589  007B68  65                 	db	101	;'e'
   590  007B69  65                 	db	101	;'e'
   591  007B6A  20                 	db	32
   592  007B6B  71                 	db	113	;'q'
   593  007B6C  75                 	db	117	;'u'
   594  007B6D  65                 	db	101	;'e'
   595  007B6E  20                 	db	32
   596  007B6F  73                 	db	115	;'s'
   597  007B70  65                 	db	101	;'e'
   598  007B71  20                 	db	32
   599  007B72  72                 	db	114	;'r'
   600  007B73  69                 	db	105	;'i'
   601  007B74  65                 	db	101	;'e'
   602  007B75  67                 	db	103	;'g'
   603  007B76  75                 	db	117	;'u'
   604  007B77  65                 	db	101	;'e'
   605  007B78  20                 	db	32
   606  007B79  65                 	db	101	;'e'
   607  007B7A  6A                 	db	106	;'j'
   608  007B7B  3A                 	db	58	;':'
   609  007B7C  20                 	db	32
   610  007B7D  31                 	db	49	;'1'
   611  007B7E  35                 	db	53	;'5'
   612  007B7F  20                 	db	32
   613  007B80  0D                 	db	13
   614  007B81  0A                 	db	10
   615  007B82  00                 	db	0
   616  007B83                     STR_33:
   617  007B83  20                 	db	32
   618  007B84  20                 	db	32
   619  007B85  20                 	db	32
   620  007B86  20                 	db	32
   621  007B87  20                 	db	32
   622  007B88  20                 	db	32
   623  007B89  20                 	db	32
   624  007B8A  20                 	db	32
   625  007B8B  20                 	db	32
   626  007B8C  20                 	db	32
   627  007B8D  20                 	db	32
   628  007B8E  20                 	db	32
   629  007B8F  20                 	db	32
   630  007B90  20                 	db	32
   631  007B91  20                 	db	32
   632  007B92  20                 	db	32
   633  007B93  20                 	db	32
   634  007B94  20                 	db	32
   635  007B95  20                 	db	32
   636  007B96  20                 	db	32
   637  007B97  20                 	db	32
   638  007B98  20                 	db	32
   639  007B99  20                 	db	32
   640  007B9A  20                 	db	32
   641  007B9B  20                 	db	32
   642  007B9C  20                 	db	32
   643  007B9D  20                 	db	32
   644  007B9E  20                 	db	32
   645  007B9F  20                 	db	32
   646  007BA0  20                 	db	32
   647  007BA1  20                 	db	32
   648  007BA2  20                 	db	32
   649  007BA3  20                 	db	32
   650  007BA4  20                 	db	32
   651  007BA5  20                 	db	32
   652  007BA6  20                 	db	32
   653  007BA7  20                 	db	32
   654  007BA8  20                 	db	32
   655  007BA9  20                 	db	32
   656  007BAA  20                 	db	32
   657  007BAB  20                 	db	32
   658  007BAC  20                 	db	32
   659  007BAD  20                 	db	32
   660  007BAE  20                 	db	32
   661  007BAF  20                 	db	32
   662  007BB0  44                 	db	68	;'D'
   663  007BB1  4C                 	db	76	;'L'
   664  007BB2  4D                 	db	77	;'M'
   665  007BB3  49                 	db	73	;'I'
   666  007BB4  4A                 	db	74	;'J'
   667  007BB5  56                 	db	86	;'V'
   668  007BB6  53                 	db	83	;'S'
   669  007BB7  0D                 	db	13
   670  007BB8  0A                 	db	10
   671  007BB9  00                 	db	0
   672  007BBA                     STR_34:
   673  007BBA  20                 	db	32
   674  007BBB  25                 	db	37
   675  007BBC  32                 	db	50	;'2'
   676  007BBD  64                 	db	100	;'d'
   677  007BBE  20                 	db	32
   678  007BBF  20                 	db	32
   679  007BC0  7C                 	db	124
   680  007BC1  20                 	db	32
   681  007BC2  20                 	db	32
   682  007BC3  20                 	db	32
   683  007BC4  20                 	db	32
   684  007BC5  20                 	db	32
   685  007BC6  20                 	db	32
   686  007BC7  20                 	db	32
   687  007BC8  20                 	db	32
   688  007BC9  20                 	db	32
   689  007BCA  20                 	db	32
   690  007BCB  25                 	db	37
   691  007BCC  64                 	db	100	;'d'
   692  007BCD  20                 	db	32
   693  007BCE  20                 	db	32
   694  007BCF  20                 	db	32
   695  007BD0  20                 	db	32
   696  007BD1  20                 	db	32
   697  007BD2  20                 	db	32
   698  007BD3  20                 	db	32
   699  007BD4  7C                 	db	124
   700  007BD5  20                 	db	32
   701  007BD6  20                 	db	32
   702  007BD7  20                 	db	32
   703  007BD8  20                 	db	32
   704  007BD9  20                 	db	32
   705  007BDA  20                 	db	32
   706  007BDB  20                 	db	32
   707  007BDC  20                 	db	32
   708  007BDD  20                 	db	32
   709  007BDE  25                 	db	37
   710  007BDF  32                 	db	50	;'2'
   711  007BE0  64                 	db	100	;'d'
   712  007BE1  20                 	db	32
   713  007BE2  20                 	db	32
   714  007BE3  20                 	db	32
   715  007BE4  20                 	db	32
   716  007BE5  20                 	db	32
   717  007BE6  20                 	db	32
   718  007BE7  20                 	db	32
   719  007BE8  7C                 	db	124
   720  007BE9  20                 	db	32
   721  007BEA  25                 	db	37
   722  007BEB  73                 	db	115	;'s'
   723  007BEC  0D                 	db	13
   724  007BED  0A                 	db	10
   725  007BEE  00                 	db	0
   726  007BEF                     STR_8:
   727  007BEF  0D                 	db	13
   728  007BF0  0A                 	db	10
   729  007BF1  20                 	db	32
   730  007BF2  49                 	db	73	;'I'
   731  007BF3  6E                 	db	110	;'n'
   732  007BF4  67                 	db	103	;'g'
   733  007BF5  72                 	db	114	;'r'
   734  007BF6  65                 	db	101	;'e'
   735  007BF7  73                 	db	115	;'s'
   736  007BF8  65                 	db	101	;'e'
   737  007BF9  20                 	db	32
   738  007BFA  75                 	db	117	;'u'
   739  007BFB  6E                 	db	110	;'n'
   740  007BFC  61                 	db	97	;'a'
   741  007BFD  20                 	db	32
   742  007BFE  68                 	db	104	;'h'
   743  007BFF  6F                 	db	111	;'o'
   744  007C00  72                 	db	114	;'r'
   745  007C01  61                 	db	97	;'a'
   746  007C02  20                 	db	32
   747  007C03  65                 	db	101	;'e'
   748  007C04  6E                 	db	110	;'n'
   749  007C05  20                 	db	32
   750  007C06  66                 	db	102	;'f'
   751  007C07  6F                 	db	111	;'o'
   752  007C08  72                 	db	114	;'r'
   753  007C09  6D                 	db	109	;'m'
   754  007C0A  61                 	db	97	;'a'
   755  007C0B  74                 	db	116	;'t'
   756  007C0C  6F                 	db	111	;'o'
   757  007C0D  20                 	db	32
   758  007C0E  64                 	db	100	;'d'
   759  007C0F  65                 	db	101	;'e'
   760  007C10  20                 	db	32
   761  007C11  32                 	db	50	;'2'
   762  007C12  34                 	db	52	;'4'
   763  007C13  20                 	db	32
   764  007C14  68                 	db	104	;'h'
   765  007C15  72                 	db	114	;'r'
   766  007C16  73                 	db	115	;'s'
   767  007C17  20                 	db	32
   768  007C18  65                 	db	101	;'e'
   769  007C19  6A                 	db	106	;'j'
   770  007C1A  3A                 	db	58	;':'
   771  007C1B  20                 	db	32
   772  007C1C  31                 	db	49	;'1'
   773  007C1D  35                 	db	53	;'5'
   774  007C1E  20                 	db	32
   775  007C1F  0D                 	db	13
   776  007C20  0A                 	db	10
   777  007C21  00                 	db	0
   778  007C22                     STR_19:
   779  007C22  0D                 	db	13
   780  007C23  0A                 	db	10
   781  007C24  49                 	db	73	;'I'
   782  007C25  6E                 	db	110	;'n'
   783  007C26  67                 	db	103	;'g'
   784  007C27  72                 	db	114	;'r'
   785  007C28  65                 	db	101	;'e'
   786  007C29  73                 	db	115	;'s'
   787  007C2A  65                 	db	101	;'e'
   788  007C2B  20                 	db	32
   789  007C2C  65                 	db	101	;'e'
   790  007C2D  6C                 	db	108	;'l'
   791  007C2E  20                 	db	32
   792  007C2F  70                 	db	112	;'p'
   793  007C30  6F                 	db	111	;'o'
   794  007C31  72                 	db	114	;'r'
   795  007C32  63                 	db	99	;'c'
   796  007C33  65                 	db	101	;'e'
   797  007C34  6E                 	db	110	;'n'
   798  007C35  74                 	db	116	;'t'
   799  007C36  61                 	db	97	;'a'
   800  007C37  6A                 	db	106	;'j'
   801  007C38  65                 	db	101	;'e'
   802  007C39  20                 	db	32
   803  007C3A  64                 	db	100	;'d'
   804  007C3B  65                 	db	101	;'e'
   805  007C3C  20                 	db	32
   806  007C3D  68                 	db	104	;'h'
   807  007C3E  75                 	db	117	;'u'
   808  007C3F  6D                 	db	109	;'m'
   809  007C40  65                 	db	101	;'e'
   810  007C41  64                 	db	100	;'d'
   811  007C42  61                 	db	97	;'a'
   812  007C43  64                 	db	100	;'d'
   813  007C44  20                 	db	32
   814  007C45  64                 	db	100	;'d'
   815  007C46  65                 	db	101	;'e'
   816  007C47  6C                 	db	108	;'l'
   817  007C48  20                 	db	32
   818  007C49  73                 	db	115	;'s'
   819  007C4A  65                 	db	101	;'e'
   820  007C4B  6E                 	db	110	;'n'
   821  007C4C  73                 	db	115	;'s'
   822  007C4D  6F                 	db	111	;'o'
   823  007C4E  72                 	db	114	;'r'
   824  007C4F  20                 	db	32
   825  007C50  25                 	db	37
   826  007C51  64                 	db	100	;'d'
   827  007C52  0D                 	db	13
   828  007C53  0A                 	db	10
   829  007C54  00                 	db	0
   830  007C55                     STR_24:
   831  007C55  0D                 	db	13
   832  007C56  0A                 	db	10
   833  007C57  20                 	db	32
   834  007C58  33                 	db	51	;'3'
   835  007C59  2E                 	db	46
   836  007C5A  20                 	db	32
   837  007C5B  50                 	db	80	;'P'
   838  007C5C  72                 	db	114	;'r'
   839  007C5D  6F                 	db	111	;'o'
   840  007C5E  67                 	db	103	;'g'
   841  007C5F  72                 	db	114	;'r'
   842  007C60  61                 	db	97	;'a'
   843  007C61  6D                 	db	109	;'m'
   844  007C62  61                 	db	97	;'a'
   845  007C63  72                 	db	114	;'r'
   846  007C64  20                 	db	32
   847  007C65  74                 	db	116	;'t'
   848  007C66  69                 	db	105	;'i'
   849  007C67  65                 	db	101	;'e'
   850  007C68  6D                 	db	109	;'m'
   851  007C69  70                 	db	112	;'p'
   852  007C6A  6F                 	db	111	;'o'
   853  007C6B  20                 	db	32
   854  007C6C  64                 	db	100	;'d'
   855  007C6D  65                 	db	101	;'e'
   856  007C6E  20                 	db	32
   857  007C6F  72                 	db	114	;'r'
   858  007C70  69                 	db	105	;'i'
   859  007C71  65                 	db	101	;'e'
   860  007C72  67                 	db	103	;'g'
   861  007C73  6F                 	db	111	;'o'
   862  007C74  20                 	db	32
   863  007C75  65                 	db	101	;'e'
   864  007C76  6E                 	db	110	;'n'
   865  007C77  20                 	db	32
   866  007C78  75                 	db	117	;'u'
   867  007C79  6E                 	db	110	;'n'
   868  007C7A  20                 	db	32
   869  007C7B  68                 	db	104	;'h'
   870  007C7C  6F                 	db	111	;'o'
   871  007C7D  72                 	db	114	;'r'
   872  007C7E  61                 	db	97	;'a'
   873  007C7F  72                 	db	114	;'r'
   874  007C80  69                 	db	105	;'i'
   875  007C81  6F                 	db	111	;'o'
   876  007C82  20                 	db	32
   877  007C83  0D                 	db	13
   878  007C84  0A                 	db	10
   879  007C85  00                 	db	0
   880  007C86                     STR_39:
   881  007C86  0D                 	db	13
   882  007C87  0A                 	db	10
   883  007C88  0A                 	db	10
   884  007C89  50                 	db	80	;'P'
   885  007C8A  6F                 	db	111	;'o'
   886  007C8B  72                 	db	114	;'r'
   887  007C8C  63                 	db	99	;'c'
   888  007C8D  65                 	db	101	;'e'
   889  007C8E  6E                 	db	110	;'n'
   890  007C8F  74                 	db	116	;'t'
   891  007C90  61                 	db	97	;'a'
   892  007C91  6A                 	db	106	;'j'
   893  007C92  65                 	db	101	;'e'
   894  007C93  20                 	db	32
   895  007C94  48                 	db	72	;'H'
   896  007C95  75                 	db	117	;'u'
   897  007C96  6D                 	db	109	;'m'
   898  007C97  65                 	db	101	;'e'
   899  007C98  64                 	db	100	;'d'
   900  007C99  61                 	db	97	;'a'
   901  007C9A  64                 	db	100	;'d'
   902  007C9B  20                 	db	32
   903  007C9C  64                 	db	100	;'d'
   904  007C9D  65                 	db	101	;'e'
   905  007C9E  6C                 	db	108	;'l'
   906  007C9F  20                 	db	32
   907  007CA0  73                 	db	115	;'s'
   908  007CA1  65                 	db	101	;'e'
   909  007CA2  6E                 	db	110	;'n'
   910  007CA3  73                 	db	115	;'s'
   911  007CA4  6F                 	db	111	;'o'
   912  007CA5  72                 	db	114	;'r'
   913  007CA6  20                 	db	32
   914  007CA7  25                 	db	37
   915  007CA8  64                 	db	100	;'d'
   916  007CA9  3A                 	db	58	;':'
   917  007CAA  20                 	db	32
   918  007CAB  25                 	db	37
   919  007CAC  64                 	db	100	;'d'
   920  007CAD  20                 	db	32
   921  007CAE  25                 	db	37
   922  007CAF  63                 	db	99	;'c'
   923  007CB0  0D                 	db	13
   924  007CB1  0A                 	db	10
   925  007CB2  00                 	db	0
   926  007CB3                     STR_4:
   927  007CB3  0D                 	db	13
   928  007CB4  0A                 	db	10
   929  007CB5  20                 	db	32
   930  007CB6  45                 	db	69	;'E'
   931  007CB7  6E                 	db	110	;'n'
   932  007CB8  76                 	db	118	;'v'
   933  007CB9  69                 	db	105	;'i'
   934  007CBA  65                 	db	101	;'e'
   935  007CBB  20                 	db	32
   936  007CBC  6C                 	db	108	;'l'
   937  007CBD  61                 	db	97	;'a'
   938  007CBE  73                 	db	115	;'s'
   939  007CBF  20                 	db	32
   940  007CC0  48                 	db	72	;'H'
   941  007CC1  6F                 	db	111	;'o'
   942  007CC2  72                 	db	114	;'r'
   943  007CC3  61                 	db	97	;'a'
   944  007CC4  73                 	db	115	;'s'
   945  007CC5  20                 	db	32
   946  007CC6  65                 	db	101	;'e'
   947  007CC7  6E                 	db	110	;'n'
   948  007CC8  20                 	db	32
   949  007CC9  66                 	db	102	;'f'
   950  007CCA  6F                 	db	111	;'o'
   951  007CCB  72                 	db	114	;'r'
   952  007CCC  6D                 	db	109	;'m'
   953  007CCD  61                 	db	97	;'a'
   954  007CCE  74                 	db	116	;'t'
   955  007CCF  6F                 	db	111	;'o'
   956  007CD0  20                 	db	32
   957  007CD1  32                 	db	50	;'2'
   958  007CD2  34                 	db	52	;'4'
   959  007CD3  20                 	db	32
   960  007CD4  45                 	db	69	;'E'
   961  007CD5  6A                 	db	106	;'j'
   962  007CD6  3A                 	db	58	;':'
   963  007CD7  20                 	db	32
   964  007CD8  31                 	db	49	;'1'
   965  007CD9  35                 	db	53	;'5'
   966  007CDA  20                 	db	32
   967  007CDB  0D                 	db	13
   968  007CDC  0A                 	db	10
   969  007CDD  00                 	db	0
   970  007CDE                     STR_31:
   971  007CDE  0D                 	db	13
   972  007CDF  0A                 	db	10
   973  007CE0  20                 	db	32
   974  007CE1  53                 	db	83	;'S'
   975  007CE2  6F                 	db	111	;'o'
   976  007CE3  6C                 	db	108	;'l'
   977  007CE4  6F                 	db	111	;'o'
   978  007CE5  20                 	db	32
   979  007CE6  73                 	db	115	;'s'
   980  007CE7  65                 	db	101	;'e'
   981  007CE8  20                 	db	32
   982  007CE9  70                 	db	112	;'p'
   983  007CEA  65                 	db	101	;'e'
   984  007CEB  72                 	db	114	;'r'
   985  007CEC  6D                 	db	109	;'m'
   986  007CED  69                 	db	105	;'i'
   987  007CEE  74                 	db	116	;'t'
   988  007CEF  65                 	db	101	;'e'
   989  007CF0  6E                 	db	110	;'n'
   990  007CF1  20                 	db	32
   991  007CF2  6E                 	db	110	;'n'
   992  007CF3  75                 	db	117	;'u'
   993  007CF4  6D                 	db	109	;'m'
   994  007CF5  65                 	db	101	;'e'
   995  007CF6  72                 	db	114	;'r'
   996  007CF7  6F                 	db	111	;'o'
   997  007CF8  73                 	db	115	;'s'
   998  007CF9  20                 	db	32
   999  007CFA  64                 	db	100	;'d'
  1000  007CFB  65                 	db	101	;'e'
  1001  007CFC  6C                 	db	108	;'l'
  1002  007CFD  20                 	db	32
  1003  007CFE  31                 	db	49	;'1'
  1004  007CFF  20                 	db	32
  1005  007D00  61                 	db	97	;'a'
  1006  007D01  6C                 	db	108	;'l'
  1007  007D02  20                 	db	32
  1008  007D03  33                 	db	51	;'3'
  1009  007D04  20                 	db	32
  1010  007D05  0D                 	db	13
  1011  007D06  0A                 	db	10
  1012  007D07  00                 	db	0
  1013  007D08                     STR_18:
  1014  007D08  0D                 	db	13
  1015  007D09  0A                 	db	10
  1016  007D0A  53                 	db	83	;'S'
  1017  007D0B  6F                 	db	111	;'o'
  1018  007D0C  6C                 	db	108	;'l'
  1019  007D0D  69                 	db	105	;'i'
  1020  007D0E  63                 	db	99	;'c'
  1021  007D0F  69                 	db	105	;'i'
  1022  007D10  74                 	db	116	;'t'
  1023  007D11  61                 	db	97	;'a'
  1024  007D12  6E                 	db	110	;'n'
  1025  007D13  64                 	db	100	;'d'
  1026  007D14  6F                 	db	111	;'o'
  1027  007D15  20                 	db	32
  1028  007D16  4D                 	db	77	;'M'
  1029  007D17  75                 	db	117	;'u'
  1030  007D18  65                 	db	101	;'e'
  1031  007D19  73                 	db	115	;'s'
  1032  007D1A  74                 	db	116	;'t'
  1033  007D1B  72                 	db	114	;'r'
  1034  007D1C  65                 	db	101	;'e'
  1035  007D1D  6F                 	db	111	;'o'
  1036  007D1E  20                 	db	32
  1037  007D1F  64                 	db	100	;'d'
  1038  007D20  65                 	db	101	;'e'
  1039  007D21  20                 	db	32
  1040  007D22  73                 	db	115	;'s'
  1041  007D23  65                 	db	101	;'e'
  1042  007D24  6E                 	db	110	;'n'
  1043  007D25  73                 	db	115	;'s'
  1044  007D26  6F                 	db	111	;'o'
  1045  007D27  72                 	db	114	;'r'
  1046  007D28  65                 	db	101	;'e'
  1047  007D29  73                 	db	115	;'s'
  1048  007D2A  0D                 	db	13
  1049  007D2B  0A                 	db	10
  1050  007D2C  0A                 	db	10
  1051  007D2D  00                 	db	0
  1052  007D2E                     STR_17:
  1053  007D2E  0D                 	db	13
  1054  007D2F  0A                 	db	10
  1055  007D30  20                 	db	32
  1056  007D31  4D                 	db	77	;'M'
  1057  007D32  69                 	db	105	;'i'
  1058  007D33  6E                 	db	110	;'n'
  1059  007D34  75                 	db	117	;'u'
  1060  007D35  74                 	db	116	;'t'
  1061  007D36  6F                 	db	111	;'o'
  1062  007D37  73                 	db	115	;'s'
  1063  007D38  20                 	db	32
  1064  007D39  64                 	db	100	;'d'
  1065  007D3A  65                 	db	101	;'e'
  1066  007D3B  20                 	db	32
  1067  007D3C  72                 	db	114	;'r'
  1068  007D3D  69                 	db	105	;'i'
  1069  007D3E  65                 	db	101	;'e'
  1070  007D3F  67                 	db	103	;'g'
  1071  007D40  6F                 	db	111	;'o'
  1072  007D41  20                 	db	32
  1073  007D42  65                 	db	101	;'e'
  1074  007D43  73                 	db	115	;'s'
  1075  007D44  74                 	db	116	;'t'
  1076  007D45  61                 	db	97	;'a'
  1077  007D46  62                 	db	98	;'b'
  1078  007D47  6C                 	db	108	;'l'
  1079  007D48  65                 	db	101	;'e'
  1080  007D49  63                 	db	99	;'c'
  1081  007D4A  69                 	db	105	;'i'
  1082  007D4B  64                 	db	100	;'d'
  1083  007D4C  6F                 	db	111	;'o'
  1084  007D4D  73                 	db	115	;'s'
  1085  007D4E  21                 	db	33
  1086  007D4F  20                 	db	32
  1087  007D50  0D                 	db	13
  1088  007D51  0A                 	db	10
  1089  007D52  00                 	db	0
  1090  007D53                     STR_21:
  1091  007D53  0D                 	db	13
  1092  007D54  0A                 	db	10
  1093  007D55  20                 	db	32
  1094  007D56  49                 	db	73	;'I'
  1095  007D57  6E                 	db	110	;'n'
  1096  007D58  67                 	db	103	;'g'
  1097  007D59  72                 	db	114	;'r'
  1098  007D5A  65                 	db	101	;'e'
  1099  007D5B  73                 	db	115	;'s'
  1100  007D5C  61                 	db	97	;'a'
  1101  007D5D  20                 	db	32
  1102  007D5E  75                 	db	117	;'u'
  1103  007D5F  6E                 	db	110	;'n'
  1104  007D60  61                 	db	97	;'a'
  1105  007D61  20                 	db	32
  1106  007D62  6F                 	db	111	;'o'
  1107  007D63  70                 	db	112	;'p'
  1108  007D64  63                 	db	99	;'c'
  1109  007D65  69                 	db	105	;'i'
  1110  007D66  6F                 	db	111	;'o'
  1111  007D67  6E                 	db	110	;'n'
  1112  007D68  20                 	db	32
  1113  007D69  61                 	db	97	;'a'
  1114  007D6A  20                 	db	32
  1115  007D6B  52                 	db	82	;'R'
  1116  007D6C  65                 	db	101	;'e'
  1117  007D6D  61                 	db	97	;'a'
  1118  007D6E  6C                 	db	108	;'l'
  1119  007D6F  69                 	db	105	;'i'
  1120  007D70  7A                 	db	122	;'z'
  1121  007D71  61                 	db	97	;'a'
  1122  007D72  72                 	db	114	;'r'
  1123  007D73  3A                 	db	58	;':'
  1124  007D74  20                 	db	32
  1125  007D75  0D                 	db	13
  1126  007D76  0A                 	db	10
  1127  007D77  00                 	db	0
  1128  007D78                     STR_6:
  1129  007D78  0D                 	db	13
  1130  007D79  0A                 	db	10
  1131  007D7A  20                 	db	32
  1132  007D7B  48                 	db	72	;'H'
  1133  007D7C  4F                 	db	79	;'O'
  1134  007D7D  52                 	db	82	;'R'
  1135  007D7E  41                 	db	65	;'A'
  1136  007D7F  20                 	db	32
  1137  007D80  45                 	db	69	;'E'
  1138  007D81  53                 	db	83	;'S'
  1139  007D82  54                 	db	84	;'T'
  1140  007D83  41                 	db	65	;'A'
  1141  007D84  42                 	db	66	;'B'
  1142  007D85  4C                 	db	76	;'L'
  1143  007D86  45                 	db	69	;'E'
  1144  007D87  43                 	db	67	;'C'
  1145  007D88  49                 	db	73	;'I'
  1146  007D89  44                 	db	68	;'D'
  1147  007D8A  41                 	db	65	;'A'
  1148  007D8B  20                 	db	32
  1149  007D8C  43                 	db	67	;'C'
  1150  007D8D  4F                 	db	79	;'O'
  1151  007D8E  52                 	db	82	;'R'
  1152  007D8F  52                 	db	82	;'R'
  1153  007D90  45                 	db	69	;'E'
  1154  007D91  43                 	db	67	;'C'
  1155  007D92  54                 	db	84	;'T'
  1156  007D93  41                 	db	65	;'A'
  1157  007D94  4D                 	db	77	;'M'
  1158  007D95  45                 	db	69	;'E'
  1159  007D96  4E                 	db	78	;'N'
  1160  007D97  54                 	db	84	;'T'
  1161  007D98  45                 	db	69	;'E'
  1162  007D99  20                 	db	32
  1163  007D9A  0D                 	db	13
  1164  007D9B  0A                 	db	10
  1165  007D9C  00                 	db	0
  1166  007D9D                     STR_11:
  1167  007D9D  0D                 	db	13
  1168  007D9E  0A                 	db	10
  1169  007D9F  20                 	db	32
  1170  007DA0  44                 	db	68	;'D'
  1171  007DA1  4F                 	db	79	;'O'
  1172  007DA2  4D                 	db	77	;'M'
  1173  007DA3  49                 	db	73	;'I'
  1174  007DA4  4E                 	db	78	;'N'
  1175  007DA5  47                 	db	71	;'G'
  1176  007DA6  4F                 	db	79	;'O'
  1177  007DA7  20                 	db	32
  1178  007DA8  3D                 	db	61	;'='
  1179  007DA9  20                 	db	32
  1180  007DAA  5B                 	db	91	;'['
  1181  007DAB  31                 	db	49	;'1'
  1182  007DAC  5D                 	db	93	;']'
  1183  007DAD  20                 	db	32
  1184  007DAE  2E                 	db	46
  1185  007DAF  2E                 	db	46
  1186  007DB0  2E                 	db	46
  1187  007DB1  20                 	db	32
  1188  007DB2  53                 	db	83	;'S'
  1189  007DB3  41                 	db	65	;'A'
  1190  007DB4  42                 	db	66	;'B'
  1191  007DB5  41                 	db	65	;'A'
  1192  007DB6  44                 	db	68	;'D'
  1193  007DB7  4F                 	db	79	;'O'
  1194  007DB8  20                 	db	32
  1195  007DB9  3D                 	db	61	;'='
  1196  007DBA  20                 	db	32
  1197  007DBB  5B                 	db	91	;'['
  1198  007DBC  37                 	db	55	;'7'
  1199  007DBD  5D                 	db	93	;']'
  1200  007DBE  20                 	db	32
  1201  007DBF  0D                 	db	13
  1202  007DC0  0A                 	db	10
  1203  007DC1  00                 	db	0
  1204  007DC2                     STR_23:
  1205  007DC2  0D                 	db	13
  1206  007DC3  0A                 	db	10
  1207  007DC4  20                 	db	32
  1208  007DC5  32                 	db	50	;'2'
  1209  007DC6  2E                 	db	46
  1210  007DC7  20                 	db	32
  1211  007DC8  41                 	db	65	;'A'
  1212  007DC9  73                 	db	115	;'s'
  1213  007DCA  69                 	db	105	;'i'
  1214  007DCB  67                 	db	103	;'g'
  1215  007DCC  6E                 	db	110	;'n'
  1216  007DCD  61                 	db	97	;'a'
  1217  007DCE  72                 	db	114	;'r'
  1218  007DCF  20                 	db	32
  1219  007DD0  48                 	db	72	;'H'
  1220  007DD1  6F                 	db	111	;'o'
  1221  007DD2  72                 	db	114	;'r'
  1222  007DD3  61                 	db	97	;'a'
  1223  007DD4  72                 	db	114	;'r'
  1224  007DD5  69                 	db	105	;'i'
  1225  007DD6  6F                 	db	111	;'o'
  1226  007DD7  73                 	db	115	;'s'
  1227  007DD8  20                 	db	32
  1228  007DD9  70                 	db	112	;'p'
  1229  007DDA  61                 	db	97	;'a'
  1230  007DDB  72                 	db	114	;'r'
  1231  007DDC  61                 	db	97	;'a'
  1232  007DDD  20                 	db	32
  1233  007DDE  72                 	db	114	;'r'
  1234  007DDF  65                 	db	101	;'e'
  1235  007DE0  67                 	db	103	;'g'
  1236  007DE1  61                 	db	97	;'a'
  1237  007DE2  72                 	db	114	;'r'
  1238  007DE3  20                 	db	32
  1239  007DE4  0D                 	db	13
  1240  007DE5  0A                 	db	10
  1241  007DE6  00                 	db	0
  1242  007DE7                     STR_2:
  1243  007DE7  0D                 	db	13
  1244  007DE8  0A                 	db	10
  1245  007DE9  20                 	db	32
  1246  007DEA  44                 	db	68	;'D'
  1247  007DEB  49                 	db	73	;'I'
  1248  007DEC  41                 	db	65	;'A'
  1249  007DED  20                 	db	32
  1250  007DEE  45                 	db	69	;'E'
  1251  007DEF  53                 	db	83	;'S'
  1252  007DF0  54                 	db	84	;'T'
  1253  007DF1  41                 	db	65	;'A'
  1254  007DF2  42                 	db	66	;'B'
  1255  007DF3  4C                 	db	76	;'L'
  1256  007DF4  45                 	db	69	;'E'
  1257  007DF5  43                 	db	67	;'C'
  1258  007DF6  49                 	db	73	;'I'
  1259  007DF7  44                 	db	68	;'D'
  1260  007DF8  4F                 	db	79	;'O'
  1261  007DF9  20                 	db	32
  1262  007DFA  43                 	db	67	;'C'
  1263  007DFB  4F                 	db	79	;'O'
  1264  007DFC  52                 	db	82	;'R'
  1265  007DFD  52                 	db	82	;'R'
  1266  007DFE  45                 	db	69	;'E'
  1267  007DFF  43                 	db	67	;'C'
  1268  007E00  54                 	db	84	;'T'
  1269  007E01  41                 	db	65	;'A'
  1270  007E02  4D                 	db	77	;'M'
  1271  007E03  45                 	db	69	;'E'
  1272  007E04  4E                 	db	78	;'N'
  1273  007E05  54                 	db	84	;'T'
  1274  007E06  45                 	db	69	;'E'
  1275  007E07  20                 	db	32
  1276  007E08  0D                 	db	13
  1277  007E09  0A                 	db	10
  1278  007E0A  00                 	db	0
  1279  007E0B                     STR_26:
  1280  007E0B  0D                 	db	13
  1281  007E0C  0A                 	db	10
  1282  007E0D  20                 	db	32
  1283  007E0E  35                 	db	53	;'5'
  1284  007E0F  2E                 	db	46
  1285  007E10  20                 	db	32
  1286  007E11  4D                 	db	77	;'M'
  1287  007E12  6F                 	db	111	;'o'
  1288  007E13  73                 	db	115	;'s'
  1289  007E14  74                 	db	116	;'t'
  1290  007E15  72                 	db	114	;'r'
  1291  007E16  61                 	db	97	;'a'
  1292  007E17  72                 	db	114	;'r'
  1293  007E18  20                 	db	32
  1294  007E19  76                 	db	118	;'v'
  1295  007E1A  61                 	db	97	;'a'
  1296  007E1B  6C                 	db	108	;'l'
  1297  007E1C  6F                 	db	111	;'o'
  1298  007E1D  72                 	db	114	;'r'
  1299  007E1E  65                 	db	101	;'e'
  1300  007E1F  73                 	db	115	;'s'
  1301  007E20  20                 	db	32
  1302  007E21  73                 	db	115	;'s'
  1303  007E22  65                 	db	101	;'e'
  1304  007E23  6E                 	db	110	;'n'
  1305  007E24  73                 	db	115	;'s'
  1306  007E25  6F                 	db	111	;'o'
  1307  007E26  72                 	db	114	;'r'
  1308  007E27  65                 	db	101	;'e'
  1309  007E28  73                 	db	115	;'s'
  1310  007E29  20                 	db	32
  1311  007E2A  0D                 	db	13
  1312  007E2B  0A                 	db	10
  1313  007E2C  00                 	db	0
  1314  007E2D                     STR_20:
  1315  007E2D  0D                 	db	13
  1316  007E2E  0A                 	db	10
  1317  007E2F  53                 	db	83	;'S'
  1318  007E30  65                 	db	101	;'e'
  1319  007E31  6E                 	db	110	;'n'
  1320  007E32  73                 	db	115	;'s'
  1321  007E33  6F                 	db	111	;'o'
  1322  007E34  72                 	db	114	;'r'
  1323  007E35  65                 	db	101	;'e'
  1324  007E36  73                 	db	115	;'s'
  1325  007E37  20                 	db	32
  1326  007E38  4C                 	db	76	;'L'
  1327  007E39  65                 	db	101	;'e'
  1328  007E3A  69                 	db	105	;'i'
  1329  007E3B  64                 	db	100	;'d'
  1330  007E3C  6F                 	db	111	;'o'
  1331  007E3D  73                 	db	115	;'s'
  1332  007E3E  20                 	db	32
  1333  007E3F  63                 	db	99	;'c'
  1334  007E40  6F                 	db	111	;'o'
  1335  007E41  6E                 	db	110	;'n'
  1336  007E42  20                 	db	32
  1337  007E43  45                 	db	69	;'E'
  1338  007E44  78                 	db	120	;'x'
  1339  007E45  69                 	db	105	;'i'
  1340  007E46  74                 	db	116	;'t'
  1341  007E47  6F                 	db	111	;'o'
  1342  007E48  21                 	db	33
  1343  007E49  0D                 	db	13
  1344  007E4A  0A                 	db	10
  1345  007E4B  0A                 	db	10
  1346  007E4C  00                 	db	0
  1347  007E4D                     STR_25:
  1348  007E4D  0D                 	db	13
  1349  007E4E  0A                 	db	10
  1350  007E4F  20                 	db	32
  1351  007E50  34                 	db	52	;'4'
  1352  007E51  2E                 	db	46
  1353  007E52  20                 	db	32
  1354  007E53  44                 	db	68	;'D'
  1355  007E54  61                 	db	97	;'a'
  1356  007E55  6D                 	db	109	;'m'
  1357  007E56  65                 	db	101	;'e'
  1358  007E57  20                 	db	32
  1359  007E58  64                 	db	100	;'d'
  1360  007E59  61                 	db	97	;'a'
  1361  007E5A  74                 	db	116	;'t'
  1362  007E5B  6F                 	db	111	;'o'
  1363  007E5C  73                 	db	115	;'s'
  1364  007E5D  20                 	db	32
  1365  007E5E  64                 	db	100	;'d'
  1366  007E5F  65                 	db	101	;'e'
  1367  007E60  6C                 	db	108	;'l'
  1368  007E61  20                 	db	32
  1369  007E62  73                 	db	115	;'s'
  1370  007E63  69                 	db	105	;'i'
  1371  007E64  73                 	db	115	;'s'
  1372  007E65  74                 	db	116	;'t'
  1373  007E66  65                 	db	101	;'e'
  1374  007E67  6D                 	db	109	;'m'
  1375  007E68  61                 	db	97	;'a'
  1376  007E69  20                 	db	32
  1377  007E6A  0D                 	db	13
  1378  007E6B  0A                 	db	10
  1379  007E6C  00                 	db	0
  1380  007E6D                     STR_37:
  1381  007E6D  0D                 	db	13
  1382  007E6E  0A                 	db	10
  1383  007E6F  0A                 	db	10
  1384  007E70  4C                 	db	76	;'L'
  1385  007E71  61                 	db	97	;'a'
  1386  007E72  20                 	db	32
  1387  007E73  48                 	db	72	;'H'
  1388  007E74  75                 	db	117	;'u'
  1389  007E75  6D                 	db	109	;'m'
  1390  007E76  65                 	db	101	;'e'
  1391  007E77  64                 	db	100	;'d'
  1392  007E78  61                 	db	97	;'a'
  1393  007E79  64                 	db	100	;'d'
  1394  007E7A  20                 	db	32
  1395  007E7B  41                 	db	65	;'A'
  1396  007E7C  6D                 	db	109	;'m'
  1397  007E7D  62                 	db	98	;'b'
  1398  007E7E  69                 	db	105	;'i'
  1399  007E7F  65                 	db	101	;'e'
  1400  007E80  6E                 	db	110	;'n'
  1401  007E81  74                 	db	116	;'t'
  1402  007E82  65                 	db	101	;'e'
  1403  007E83  20                 	db	32
  1404  007E84  65                 	db	101	;'e'
  1405  007E85  73                 	db	115	;'s'
  1406  007E86  3A                 	db	58	;':'
  1407  007E87  20                 	db	32
  1408  007E88  25                 	db	37
  1409  007E89  64                 	db	100	;'d'
  1410  007E8A  0D                 	db	13
  1411  007E8B  0A                 	db	10
  1412  007E8C  00                 	db	0
  1413  007E8D                     STR_5:
  1414  007E8D  0D                 	db	13
  1415  007E8E  0A                 	db	10
  1416  007E8F  20                 	db	32
  1417  007E90  45                 	db	69	;'E'
  1418  007E91  6E                 	db	110	;'n'
  1419  007E92  76                 	db	118	;'v'
  1420  007E93  69                 	db	105	;'i'
  1421  007E94  65                 	db	101	;'e'
  1422  007E95  20                 	db	32
  1423  007E96  6C                 	db	108	;'l'
  1424  007E97  6F                 	db	111	;'o'
  1425  007E98  73                 	db	115	;'s'
  1426  007E99  20                 	db	32
  1427  007E9A  4D                 	db	77	;'M'
  1428  007E9B  69                 	db	105	;'i'
  1429  007E9C  6E                 	db	110	;'n'
  1430  007E9D  75                 	db	117	;'u'
  1431  007E9E  74                 	db	116	;'t'
  1432  007E9F  6F                 	db	111	;'o'
  1433  007EA0  73                 	db	115	;'s'
  1434  007EA1  20                 	db	32
  1435  007EA2  45                 	db	69	;'E'
  1436  007EA3  6A                 	db	106	;'j'
  1437  007EA4  3A                 	db	58	;':'
  1438  007EA5  20                 	db	32
  1439  007EA6  32                 	db	50	;'2'
  1440  007EA7  35                 	db	53	;'5'
  1441  007EA8  20                 	db	32
  1442  007EA9  0D                 	db	13
  1443  007EAA  0A                 	db	10
  1444  007EAB  00                 	db	0
  1445  007EAC                     STR_38:
  1446  007EAC  0D                 	db	13
  1447  007EAD  0A                 	db	10
  1448  007EAE  0A                 	db	10
  1449  007EAF  4C                 	db	76	;'L'
  1450  007EB0  61                 	db	97	;'a'
  1451  007EB1  20                 	db	32
  1452  007EB2  54                 	db	84	;'T'
  1453  007EB3  65                 	db	101	;'e'
  1454  007EB4  6D                 	db	109	;'m'
  1455  007EB5  70                 	db	112	;'p'
  1456  007EB6  65                 	db	101	;'e'
  1457  007EB7  72                 	db	114	;'r'
  1458  007EB8  61                 	db	97	;'a'
  1459  007EB9  74                 	db	116	;'t'
  1460  007EBA  75                 	db	117	;'u'
  1461  007EBB  72                 	db	114	;'r'
  1462  007EBC  61                 	db	97	;'a'
  1463  007EBD  20                 	db	32
  1464  007EBE  65                 	db	101	;'e'
  1465  007EBF  73                 	db	115	;'s'
  1466  007EC0  3A                 	db	58	;':'
  1467  007EC1  20                 	db	32
  1468  007EC2  25                 	db	37
  1469  007EC3  64                 	db	100	;'d'
  1470  007EC4  20                 	db	32
  1471  007EC5  43                 	db	67	;'C'
  1472  007EC6  0D                 	db	13
  1473  007EC7  0A                 	db	10
  1474  007EC8  00                 	db	0
  1475  007EC9                     STR_22:
  1476  007EC9  0D                 	db	13
  1477  007ECA  0A                 	db	10
  1478  007ECB  20                 	db	32
  1479  007ECC  31                 	db	49	;'1'
  1480  007ECD  2E                 	db	46
  1481  007ECE  20                 	db	32
  1482  007ECF  46                 	db	70	;'F'
  1483  007ED0  69                 	db	105	;'i'
  1484  007ED1  6A                 	db	106	;'j'
  1485  007ED2  61                 	db	97	;'a'
  1486  007ED3  72                 	db	114	;'r'
  1487  007ED4  20                 	db	32
  1488  007ED5  48                 	db	72	;'H'
  1489  007ED6  6F                 	db	111	;'o'
  1490  007ED7  72                 	db	114	;'r'
  1491  007ED8  61                 	db	97	;'a'
  1492  007ED9  20                 	db	32
  1493  007EDA  41                 	db	65	;'A'
  1494  007EDB  63                 	db	99	;'c'
  1495  007EDC  74                 	db	116	;'t'
  1496  007EDD  75                 	db	117	;'u'
  1497  007EDE  61                 	db	97	;'a'
  1498  007EDF  6C                 	db	108	;'l'
  1499  007EE0  20                 	db	32
  1500  007EE1  0D                 	db	13
  1501  007EE2  0A                 	db	10
  1502  007EE3  00                 	db	0
  1503  007EE4                     STR_13:
  1504  007EE4  0D                 	db	13
  1505  007EE5  0A                 	db	10
  1506  007EE6  20                 	db	32
  1507  007EE7  48                 	db	72	;'H'
  1508  007EE8  6F                 	db	111	;'o'
  1509  007EE9  72                 	db	114	;'r'
  1510  007EEA  61                 	db	97	;'a'
  1511  007EEB  72                 	db	114	;'r'
  1512  007EEC  69                 	db	105	;'i'
  1513  007EED  6F                 	db	111	;'o'
  1514  007EEE  20                 	db	32
  1515  007EEF  4D                 	db	77	;'M'
  1516  007EF0  6F                 	db	111	;'o'
  1517  007EF1  64                 	db	100	;'d'
  1518  007EF2  69                 	db	105	;'i'
  1519  007EF3  66                 	db	102	;'f'
  1520  007EF4  69                 	db	105	;'i'
  1521  007EF5  63                 	db	99	;'c'
  1522  007EF6  61                 	db	97	;'a'
  1523  007EF7  64                 	db	100	;'d'
  1524  007EF8  6F                 	db	111	;'o'
  1525  007EF9  21                 	db	33
  1526  007EFA  20                 	db	32
  1527  007EFB  0D                 	db	13
  1528  007EFC  0A                 	db	10
  1529  007EFD  00                 	db	0
  1530  007EFE                     STR_28:
  1531  007EFE  0D                 	db	13
  1532  007EFF  0A                 	db	10
  1533  007F00  20                 	db	32
  1534  007F01  37                 	db	55	;'7'
  1535  007F02  2E                 	db	46
  1536  007F03  20                 	db	32
  1537  007F04  46                 	db	70	;'F'
  1538  007F05  69                 	db	105	;'i'
  1539  007F06  6A                 	db	106	;'j'
  1540  007F07  61                 	db	97	;'a'
  1541  007F08  72                 	db	114	;'r'
  1542  007F09  20                 	db	32
  1543  007F0A  44                 	db	68	;'D'
  1544  007F0B  69                 	db	105	;'i'
  1545  007F0C  61                 	db	97	;'a'
  1546  007F0D  20                 	db	32
  1547  007F0E  41                 	db	65	;'A'
  1548  007F0F  63                 	db	99	;'c'
  1549  007F10  74                 	db	116	;'t'
  1550  007F11  75                 	db	117	;'u'
  1551  007F12  61                 	db	97	;'a'
  1552  007F13  6C                 	db	108	;'l'
  1553  007F14  20                 	db	32
  1554  007F15  0D                 	db	13
  1555  007F16  0A                 	db	10
  1556  007F17  00                 	db	0
  1557  007F18                     STR_7:
  1558  007F18  0D                 	db	13
  1559  007F19  0A                 	db	10
  1560  007F1A  20                 	db	32
  1561  007F1B  4F                 	db	79	;'O'
  1562  007F1C  50                 	db	80	;'P'
  1563  007F1D  43                 	db	67	;'C'
  1564  007F1E  49                 	db	73	;'I'
  1565  007F1F  4F                 	db	79	;'O'
  1566  007F20  4E                 	db	78	;'N'
  1567  007F21  45                 	db	69	;'E'
  1568  007F22  53                 	db	83	;'S'
  1569  007F23  20                 	db	32
  1570  007F24  44                 	db	68	;'D'
  1571  007F25  45                 	db	69	;'E'
  1572  007F26  20                 	db	32
  1573  007F27  52                 	db	82	;'R'
  1574  007F28  45                 	db	69	;'E'
  1575  007F29  47                 	db	71	;'G'
  1576  007F2A  41                 	db	65	;'A'
  1577  007F2B  44                 	db	68	;'D'
  1578  007F2C  4F                 	db	79	;'O'
  1579  007F2D  20                 	db	32
  1580  007F2E  0D                 	db	13
  1581  007F2F  0A                 	db	10
  1582  007F30  00                 	db	0
  1583  007F31                     STR_35:
  1584  007F31  45                 	db	69	;'E'
  1585  007F32  72                 	db	114	;'r'
  1586  007F33  72                 	db	114	;'r'
  1587  007F34  6F                 	db	111	;'o'
  1588  007F35  72                 	db	114	;'r'
  1589  007F36  20                 	db	32
  1590  007F37  64                 	db	100	;'d'
  1591  007F38  65                 	db	101	;'e'
  1592  007F39  20                 	db	32
  1593  007F3A  6C                 	db	108	;'l'
  1594  007F3B  65                 	db	101	;'e'
  1595  007F3C  63                 	db	99	;'c'
  1596  007F3D  74                 	db	116	;'t'
  1597  007F3E  75                 	db	117	;'u'
  1598  007F3F  72                 	db	114	;'r'
  1599  007F40  61                 	db	97	;'a'
  1600  007F41  20                 	db	32
  1601  007F42  44                 	db	68	;'D'
  1602  007F43  48                 	db	72	;'H'
  1603  007F44  54                 	db	84	;'T'
  1604  007F45  31                 	db	49	;'1'
  1605  007F46  31                 	db	49	;'1'
  1606  007F47  0D                 	db	13
  1607  007F48  0A                 	db	10
  1608  007F49  00                 	db	0
  1609  007F4A                     STR_14:
  1610  007F4A  0D                 	db	13
  1611  007F4B  0A                 	db	10
  1612  007F4C  20                 	db	32
  1613  007F4D  54                 	db	84	;'T'
  1614  007F4E  49                 	db	73	;'I'
  1615  007F4F  45                 	db	69	;'E'
  1616  007F50  4D                 	db	77	;'M'
  1617  007F51  50                 	db	80	;'P'
  1618  007F52  4F                 	db	79	;'O'
  1619  007F53  20                 	db	32
  1620  007F54  44                 	db	68	;'D'
  1621  007F55  45                 	db	69	;'E'
  1622  007F56  20                 	db	32
  1623  007F57  52                 	db	82	;'R'
  1624  007F58  45                 	db	69	;'E'
  1625  007F59  47                 	db	71	;'G'
  1626  007F5A  41                 	db	65	;'A'
  1627  007F5B  44                 	db	68	;'D'
  1628  007F5C  4F                 	db	79	;'O'
  1629  007F5D  20                 	db	32
  1630  007F5E  0D                 	db	13
  1631  007F5F  0A                 	db	10
  1632  007F60  00                 	db	0
  1633  007F61                     STR_27:
  1634  007F61  0D                 	db	13
  1635  007F62  0A                 	db	10
  1636  007F63  20                 	db	32
  1637  007F64  36                 	db	54	;'6'
  1638  007F65  2E                 	db	46
  1639  007F66  20                 	db	32
  1640  007F67  52                 	db	82	;'R'
  1641  007F68  65                 	db	101	;'e'
  1642  007F69  67                 	db	103	;'g'
  1643  007F6A  61                 	db	97	;'a'
  1644  007F6B  64                 	db	100	;'d'
  1645  007F6C  6F                 	db	111	;'o'
  1646  007F6D  20                 	db	32
  1647  007F6E  72                 	db	114	;'r'
  1648  007F6F  61                 	db	97	;'a'
  1649  007F70  70                 	db	112	;'p'
  1650  007F71  69                 	db	105	;'i'
  1651  007F72  64                 	db	100	;'d'
  1652  007F73  6F                 	db	111	;'o'
  1653  007F74  20                 	db	32
  1654  007F75  0D                 	db	13
  1655  007F76  0A                 	db	10
  1656  007F77  00                 	db	0
  1657  007F78                     STR_36:
  1658  007F78  44                 	db	68	;'D'
  1659  007F79  48                 	db	72	;'H'
  1660  007F7A  54                 	db	84	;'T'
  1661  007F7B  31                 	db	49	;'1'
  1662  007F7C  31                 	db	49	;'1'
  1663  007F7D  20                 	db	32
  1664  007F7E  4E                 	db	78	;'N'
  1665  007F7F  4F                 	db	79	;'O'
  1666  007F80  20                 	db	32
  1667  007F81  52                 	db	82	;'R'
  1668  007F82  45                 	db	69	;'E'
  1669  007F83  53                 	db	83	;'S'
  1670  007F84  50                 	db	80	;'P'
  1671  007F85  4F                 	db	79	;'O'
  1672  007F86  4E                 	db	78	;'N'
  1673  007F87  44                 	db	68	;'D'
  1674  007F88  49                 	db	73	;'I'
  1675  007F89  4F                 	db	79	;'O'
  1676  007F8A  0D                 	db	13
  1677  007F8B  0A                 	db	10
  1678  007F8C  00                 	db	0
  1679  007F8D                     STR_47:
  1680  007F8D  0D                 	db	13
  1681  007F8E  0A                 	db	10
  1682  007F8F  20                 	db	32
  1683  007F90  52                 	db	82	;'R'
  1684  007F91  45                 	db	69	;'E'
  1685  007F92  47                 	db	71	;'G'
  1686  007F93  41                 	db	65	;'A'
  1687  007F94  44                 	db	68	;'D'
  1688  007F95  4F                 	db	79	;'O'
  1689  007F96  20                 	db	32
  1690  007F97  52                 	db	82	;'R'
  1691  007F98  41                 	db	65	;'A'
  1692  007F99  50                 	db	80	;'P'
  1693  007F9A  49                 	db	73	;'I'
  1694  007F9B  44                 	db	68	;'D'
  1695  007F9C  4F                 	db	79	;'O'
  1696  007F9D  20                 	db	32
  1697  007F9E  0D                 	db	13
  1698  007F9F  0A                 	db	10
  1699  007FA0  00                 	db	0
  1700  007FA1                     STR_46:
  1701  007FA1  0A                 	db	10
  1702  007FA2  46                 	db	70	;'F'
  1703  007FA3  41                 	db	65	;'A'
  1704  007FA4  4C                 	db	76	;'L'
  1705  007FA5  4C                 	db	76	;'L'
  1706  007FA6  4F                 	db	79	;'O'
  1707  007FA7  20                 	db	32
  1708  007FA8  45                 	db	69	;'E'
  1709  007FA9  4C                 	db	76	;'L'
  1710  007FAA  20                 	db	32
  1711  007FAB  53                 	db	83	;'S'
  1712  007FAC  45                 	db	69	;'E'
  1713  007FAD  54                 	db	84	;'T'
  1714  007FAE  45                 	db	69	;'E'
  1715  007FAF  4F                 	db	79	;'O'
  1716  007FB0  0D                 	db	13
  1717  007FB1  0A                 	db	10
  1718  007FB2  00                 	db	0
  1719  007FB3  41                 	db	65	;'A'
  1720  007FB4  54                 	db	84	;'T'
  1721  007FB5  2B                 	db	43
  1722  007FB6  4E                 	db	78	;'N'
  1723  007FB7  41                 	db	65	;'A'
  1724  007FB8  4D                 	db	77	;'M'
  1725  007FB9  45                 	db	69	;'E'
  1726  007FBA  53                 	db	83	;'S'
  1727  007FBB  4D                 	db	77	;'M'
  1728  007FBC  41                 	db	65	;'A'
  1729  007FBD  52                 	db	82	;'R'
  1730  007FBE  54                 	db	84	;'T'
  1731  007FBF  48                 	db	72	;'H'
  1732  007FC0  4F                 	db	79	;'O'
  1733  007FC1  4D                 	db	77	;'M'
  1734  007FC2  45                 	db	69	;'E'
  1735  007FC3  00                 	db	0
  1736  007FC4                     STR_3:
  1737  007FC4  0D                 	db	13
  1738  007FC5  0A                 	db	10
  1739  007FC6  20                 	db	32
  1740  007FC7  46                 	db	70	;'F'
  1741  007FC8  49                 	db	73	;'I'
  1742  007FC9  4A                 	db	74	;'J'
  1743  007FCA  41                 	db	65	;'A'
  1744  007FCB  20                 	db	32
  1745  007FCC  48                 	db	72	;'H'
  1746  007FCD  4F                 	db	79	;'O'
  1747  007FCE  52                 	db	82	;'R'
  1748  007FCF  41                 	db	65	;'A'
  1749  007FD0  20                 	db	32
  1750  007FD1  0D                 	db	13
  1751  007FD2  0A                 	db	10
  1752  007FD3  00                 	db	0
  1753  007FD4                     STR_29:
  1754  007FD4  0D                 	db	13
  1755  007FD5  0A                 	db	10
  1756  007FD6  20                 	db	32
  1757  007FD7  4F                 	db	79	;'O'
  1758  007FD8  70                 	db	112	;'p'
  1759  007FD9  63                 	db	99	;'c'
  1760  007FDA  69                 	db	105	;'i'
  1761  007FDB  6F                 	db	111	;'o'
  1762  007FDC  6E                 	db	110	;'n'
  1763  007FDD  3A                 	db	58	;':'
  1764  007FDE  20                 	db	32
  1765  007FDF  20                 	db	32
  1766  007FE0  0D                 	db	13
  1767  007FE1  00                 	db	0
  1768  007FE2  41                 	db	65	;'A'
  1769  007FE3  54                 	db	84	;'T'
  1770  007FE4  2B                 	db	43
  1771  007FE5  50                 	db	80	;'P'
  1772  007FE6  49                 	db	73	;'I'
  1773  007FE7  4E                 	db	78	;'N'
  1774  007FE8  32                 	db	50	;'2'
  1775  007FE9  35                 	db	53	;'5'
  1776  007FEA  30                 	db	48	;'0'
  1777  007FEB  31                 	db	49	;'1'
  1778  007FEC  00                 	db	0
  1779  007FED                     STR_12:
  1780  007FED  0D                 	db	13
  1781  007FEE  0A                 	db	10
  1782  007FEF  5B                 	db	91	;'['
  1783  007FF0  25                 	db	37
  1784  007FF1  64                 	db	100	;'d'
  1785  007FF2  5D                 	db	93	;']'
  1786  007FF3  3A                 	db	58	;':'
  1787  007FF4  20                 	db	32
  1788  007FF5  00                 	db	0
  1789  007FF6  41                 	db	65	;'A'
  1790  007FF7  54                 	db	84	;'T'
  1791  007FF8  2B                 	db	43
  1792  007FF9  42                 	db	66	;'B'
  1793  007FFA  41                 	db	65	;'A'
  1794  007FFB  55                 	db	85	;'U'
  1795  007FFC  44                 	db	68	;'D'
  1796  007FFD  34                 	db	52	;'4'
  1797  007FFE  00                 	db	0
  1798  0000                     
  1799                           ; #config settings
  1800  007FFF  00                 	db	0	; dummy byte at the end
  1801  0000                     
  1802                           	psect	cinit
  1803  002A4A                     __pcinit:
  1804                           	opt callstack 0
  1805  002A4A                     start_initialization:
  1806                           	opt callstack 0
  1807  002A4A                     __initialization:
  1808                           	opt callstack 0
  1809                           
  1810                           ; Initialize objects allocated to BANK1 (11 bytes)
  1811                           ; load TBLPTR registers with __pidataBANK1
  1812  002A4A  0EA6               	movlw	low __pidataBANK1
  1813  002A4C  6EF6               	movwf	tblptrl,c
  1814  002A4E  0E2F               	movlw	high __pidataBANK1
  1815  002A50  6EF7               	movwf	tblptrh,c
  1816  002A52  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1817  002A54  6EF8               	movwf	tblptru,c
  1818  002A56  EE01  F036         	lfsr	0,__pdataBANK1
  1819  002A5A  EE10 F00B          	lfsr	1,11
  1820  002A5E                     copy_data0:
  1821  002A5E  0009               	tblrd		*+
  1822  002A60  CFF5 FFEE          	movff	tablat,postinc0
  1823  002A64  50E5               	movf	postdec1,w,c
  1824  002A66  50E1               	movf	fsr1l,w,c
  1825  002A68  E1FA               	bnz	copy_data0
  1826                           
  1827                           ; Clear objects allocated to BIGRAM (288 bytes)
  1828  002A6A  EE06  F0E0         	lfsr	0,__pbssBIGRAM
  1829  002A6E  EE11 F020          	lfsr	1,288
  1830  002A72                     clear_0:
  1831  002A72  6AEE               	clrf	postinc0,c
  1832  002A74  50E5               	movf	postdec1,w,c
  1833  002A76  50E1               	movf	fsr1l,w,c
  1834  002A78  E1FC               	bnz	clear_0
  1835  002A7A  50E2               	movf	fsr1h,w,c
  1836  002A7C  E1FA               	bnz	clear_0
  1837                           
  1838                           ; Clear objects allocated to BANK1 (54 bytes)
  1839  002A7E  EE01  F000         	lfsr	0,__pbssBANK1
  1840  002A82  0E36               	movlw	54
  1841  002A84                     clear_1:
  1842  002A84  6AEE               	clrf	postinc0,c
  1843  002A86  06E8               	decf	wreg,f,c
  1844  002A88  E1FD               	bnz	clear_1
  1845                           
  1846                           ; Clear objects allocated to BANK0 (21 bytes)
  1847  002A8A  EE00  F0EB         	lfsr	0,__pbssBANK0
  1848  002A8E  0E15               	movlw	21
  1849  002A90                     clear_2:
  1850  002A90  6AEE               	clrf	postinc0,c
  1851  002A92  06E8               	decf	wreg,f,c
  1852  002A94  E1FD               	bnz	clear_2
  1853  002A96                     end_of_initialization:
  1854                           	opt callstack 0
  1855  002A96                     __end_of__initialization:
  1856                           	opt callstack 0
  1857  002A96  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1858  002A98  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1859  002A9A  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1860  002A9C  6EF8               	movwf	tblptru,c
  1861  002A9E  0100               	movlb	0
  1862  002AA0  EF56  F012         	goto	_main	;jump to C main() function
  1863                           
  1864                           	psect	bssBANK0
  1865  0000EB                     __pbssBANK0:
  1866                           	opt callstack 0
  1867  0000EB                     _width:
  1868                           	opt callstack 0
  1869  0000EB                     	ds	2
  1870  0000ED                     _prec:
  1871                           	opt callstack 0
  1872  0000ED                     	ds	2
  1873  0000EF                     _flags:
  1874                           	opt callstack 0
  1875  0000EF                     	ds	2
  1876  0000F1                     _peticionLecturaSensores:
  1877                           	opt callstack 0
  1878  0000F1                     	ds	1
  1879  0000F2                     _regando:
  1880                           	opt callstack 0
  1881  0000F2                     	ds	1
  1882  0000F3                     _minutosTranscurridos:
  1883                           	opt callstack 0
  1884  0000F3                     	ds	1
  1885  0000F4                     _minutosRegar:
  1886                           	opt callstack 0
  1887  0000F4                     	ds	1
  1888  0000F5                     _flagRegado:
  1889                           	opt callstack 0
  1890  0000F5                     	ds	1
  1891  0000F6                     _tempHora:
  1892                           	opt callstack 0
  1893  0000F6                     	ds	1
  1894  0000F7                     _overflowTimer:
  1895                           	opt callstack 0
  1896  0000F7                     	ds	1
  1897  0000F8                     _datoRecibido:
  1898                           	opt callstack 0
  1899  0000F8                     	ds	1
  1900  0000F9                     _diaActual:
  1901                           	opt callstack 0
  1902  0000F9                     	ds	1
  1903  0000FA                     _hora:
  1904                           	opt callstack 0
  1905  0000FA                     	ds	1
  1906  0000FB                     _MODO_COMUNICACION:
  1907                           	opt callstack 0
  1908  0000FB                     	ds	1
  1909  0000FC                     _esperandoDatos:
  1910                           	opt callstack 0
  1911  0000FC                     	ds	1
  1912  0000FD                     _esperaDatoConcluida:
  1913                           	opt callstack 0
  1914  0000FD                     	ds	1
  1915  0000FE                     _byteUart:
  1916                           	opt callstack 0
  1917  0000FE                     	ds	1
  1918  0000FF                     _tiempoInactividadTrans:
  1919                           	opt callstack 0
  1920  0000FF                     	ds	1
  1921                           
  1922                           	psect	bssBANK1
  1923  000100                     __pbssBANK1:
  1924                           	opt callstack 0
  1925  000100                     _sensores:
  1926                           	opt callstack 0
  1927  000100                     	ds	16
  1928  000110                     _nout:
  1929                           	opt callstack 0
  1930  000110                     	ds	2
  1931  000112                     _contInterrupciones:
  1932                           	opt callstack 0
  1933  000112                     	ds	2
  1934  000114                     _segundos:
  1935                           	opt callstack 0
  1936  000114                     	ds	1
  1937  000115                     _minutos:
  1938                           	opt callstack 0
  1939  000115                     	ds	1
  1940  000116                     _dbuf:
  1941                           	opt callstack 0
  1942  000116                     	ds	32
  1943                           
  1944                           	psect	dataBANK1
  1945  000136                     __pdataBANK1:
  1946                           	opt callstack 0
  1947  000136                     stoa@F1144:
  1948                           	opt callstack 0
  1949  000136                     	ds	7
  1950  00013D                     _VALOR_TIMER0:
  1951                           	opt callstack 0
  1952  00013D                     	ds	2
  1953  00013F                     _VALOR_TIMER0UART:
  1954                           	opt callstack 0
  1955  00013F                     	ds	2
  1956                           
  1957                           	psect	bssBIGRAM
  1958  0006E0                     __pbssBIGRAM:
  1959                           	opt callstack 0
  1960  0006E0                     _horarios:
  1961                           	opt callstack 0
  1962  0006E0                     	ds	288
  1963                           
  1964                           	psect	cstackBANK0
  1965  000060                     __pcstackBANK0:
  1966                           	opt callstack 0
  1967  000060                     ?_sprintf:
  1968                           	opt callstack 0
  1969  000060                     sprintf@s:
  1970                           	opt callstack 0
  1971                           
  1972                           ; 2 bytes @ 0x0
  1973  000060                     	ds	2
  1974  000062                     sprintf@fmt:
  1975                           	opt callstack 0
  1976                           
  1977                           ; 2 bytes @ 0x2
  1978  000062                     	ds	12
  1979  00006E                     sprintf@ap:
  1980                           	opt callstack 0
  1981                           
  1982                           ; 2 bytes @ 0xE
  1983  00006E                     	ds	2
  1984  000070                     sprintf@f:
  1985                           	opt callstack 0
  1986                           
  1987                           ; 6 bytes @ 0x10
  1988  000070                     	ds	6
  1989  000076                     ??_dameDatosSistema:
  1990  000076                     ??_mostrarDatosSensores:
  1991  000076                     ??_asignarHorarios:
  1992  000076                     lecturaWifi@buffer:
  1993                           	opt callstack 0
  1994                           
  1995                           ; 50 bytes @ 0x16
  1996  000076                     	ds	1
  1997  000077                     mostrarDatosSensores@buffer:
  1998                           	opt callstack 0
  1999                           
  2000                           ; 50 bytes @ 0x17
  2001  000077                     	ds	1
  2002  000078                     asignarHorarios@buffer:
  2003                           	opt callstack 0
  2004                           
  2005                           ; 50 bytes @ 0x18
  2006  000078                     	ds	2
  2007  00007A                     dameDatosSistema@buffer:
  2008                           	opt callstack 0
  2009                           
  2010                           ; 50 bytes @ 0x1A
  2011  00007A                     	ds	46
  2012  0000A8                     lecturaWifi@Rx:
  2013                           	opt callstack 0
  2014                           
  2015                           ; 1 bytes @ 0x48
  2016  0000A8                     	ds	1
  2017  0000A9                     lecturaWifi@humedadMedida:
  2018                           	opt callstack 0
  2019  0000A9                     mostrarDatosSensores@temperatura:
  2020                           	opt callstack 0
  2021                           
  2022                           ; 1 bytes @ 0x49
  2023  0000A9                     	ds	1
  2024  0000AA                     asignarHorarios@Rx:
  2025                           	opt callstack 0
  2026  0000AA                     mostrarDatosSensores@humedad:
  2027                           	opt callstack 0
  2028  0000AA                     lecturaWifi@i:
  2029                           	opt callstack 0
  2030                           
  2031                           ; 2 bytes @ 0x4A
  2032  0000AA                     	ds	1
  2033  0000AB                     asignarHorarios@diaRegar:
  2034                           	opt callstack 0
  2035  0000AB                     mostrarDatosSensores@i:
  2036                           	opt callstack 0
  2037                           
  2038                           ; 2 bytes @ 0x4B
  2039  0000AB                     	ds	1
  2040  0000AC                     ??_mostrarDatosSensoresWIFI:
  2041  0000AC                     asignarHorarios@hora:
  2042                           	opt callstack 0
  2043  0000AC                     dameDatosSistema@diasRegar:
  2044                           	opt callstack 0
  2045                           
  2046                           ; 50 bytes @ 0x4C
  2047  0000AC                     	ds	1
  2048  0000AD                     asignarHorarios@i:
  2049                           	opt callstack 0
  2050  0000AD                     mostrarDatosSensoresWIFI@buffer:
  2051                           	opt callstack 0
  2052                           
  2053                           ; 50 bytes @ 0x4D
  2054  0000AD                     	ds	49
  2055  0000DE                     _dameDatosSistema$1916:
  2056                           	opt callstack 0
  2057                           
  2058                           ; 2 bytes @ 0x7E
  2059  0000DE                     	ds	1
  2060  0000DF                     mostrarDatosSensoresWIFI@temperatura:
  2061                           	opt callstack 0
  2062                           
  2063                           ; 1 bytes @ 0x7F
  2064  0000DF                     	ds	1
  2065  0000E0                     mostrarDatosSensoresWIFI@humedad:
  2066                           	opt callstack 0
  2067  0000E0                     _dameDatosSistema$1917:
  2068                           	opt callstack 0
  2069                           
  2070                           ; 2 bytes @ 0x80
  2071  0000E0                     	ds	1
  2072  0000E1                     mostrarDatosSensoresWIFI@i:
  2073                           	opt callstack 0
  2074                           
  2075                           ; 2 bytes @ 0x81
  2076  0000E1                     	ds	1
  2077  0000E2                     _dameDatosSistema$1918:
  2078                           	opt callstack 0
  2079                           
  2080                           ; 2 bytes @ 0x82
  2081  0000E2                     	ds	2
  2082  0000E4                     dameDatosSistema@j:
  2083                           	opt callstack 0
  2084                           
  2085                           ; 2 bytes @ 0x84
  2086  0000E4                     	ds	2
  2087  0000E6                     dameDatosSistema@i:
  2088                           	opt callstack 0
  2089                           
  2090                           ; 2 bytes @ 0x86
  2091  0000E6                     	ds	2
  2092  0000E8                     ??_sistemaPrincipal:
  2093                           
  2094                           ; 1 bytes @ 0x88
  2095  0000E8                     	ds	2
  2096  0000EA                     sistemaPrincipal@opcion:
  2097                           	opt callstack 0
  2098                           
  2099                           ; 1 bytes @ 0x8A
  2100  0000EA                     	ds	1
  2101                           
  2102                           	psect	cstackCOMRAM
  2103  000001                     __pcstackCOMRAM:
  2104                           	opt callstack 0
  2105  000001                     ??_i2c_espera:
  2106  000001                     ??_convertirDato:
  2107  000001                     ??_DHT11_Start:
  2108  000001                     ?_strlen:
  2109                           	opt callstack 0
  2110  000001                     ?_isdigit:
  2111                           	opt callstack 0
  2112  000001                     ?_isspace:
  2113                           	opt callstack 0
  2114  000001                     ?_horaRegar:
  2115                           	opt callstack 0
  2116  000001                     ?_dameHumedadSuelo:
  2117                           	opt callstack 0
  2118  000001                     ?___wmul:
  2119                           	opt callstack 0
  2120  000001                     ?___awdiv:
  2121                           	opt callstack 0
  2122  000001                     ?___awmod:
  2123                           	opt callstack 0
  2124  000001                     ?___lmul:
  2125                           	opt callstack 0
  2126  000001                     ?___aodiv:
  2127                           	opt callstack 0
  2128  000001                     ?___aomod:
  2129                           	opt callstack 0
  2130  000001                     UART_write@dato:
  2131                           	opt callstack 0
  2132  000001                     DHT11_ReadData@i:
  2133                           	opt callstack 0
  2134  000001                     check_response@respuesta:
  2135                           	opt callstack 0
  2136  000001                     constructorSensor@s:
  2137                           	opt callstack 0
  2138  000001                     ___wmul@multiplier:
  2139                           	opt callstack 0
  2140  000001                     ___awdiv@dividend:
  2141                           	opt callstack 0
  2142  000001                     ___awmod@dividend:
  2143                           	opt callstack 0
  2144  000001                     isdigit@c:
  2145                           	opt callstack 0
  2146  000001                     isspace@c:
  2147                           	opt callstack 0
  2148  000001                     fputc@c:
  2149                           	opt callstack 0
  2150  000001                     strlen@s:
  2151                           	opt callstack 0
  2152  000001                     ___lmul@multiplier:
  2153                           	opt callstack 0
  2154  000001                     ___aodiv@dividend:
  2155                           	opt callstack 0
  2156  000001                     ___aomod@dividend:
  2157                           	opt callstack 0
  2158                           
  2159                           ; 8 bytes @ 0x0
  2160  000001                     	ds	1
  2161  000002                     i2c_envia_dato@dato:
  2162                           	opt callstack 0
  2163  000002                     i2c_recibe_dato@datoleido:
  2164                           	opt callstack 0
  2165  000002                     convertirDato@dato:
  2166                           	opt callstack 0
  2167  000002                     DHT11_ReadData@data:
  2168                           	opt callstack 0
  2169  000002                     UART_printf@cadena:
  2170                           	opt callstack 0
  2171                           
  2172                           ; 2 bytes @ 0x1
  2173  000002                     	ds	1
  2174  000003                     ??_isdigit:
  2175  000003                     ??_isspace:
  2176  000003                     ??_horaRegar:
  2177  000003                     ??_dameHumedadSuelo:
  2178  000003                     escribe_rtc@dato:
  2179                           	opt callstack 0
  2180  000003                     leer_rtc@direccion:
  2181                           	opt callstack 0
  2182  000003                     convertirDato@datoR:
  2183                           	opt callstack 0
  2184  000003                     constructorSensor@porcientoHumedad:
  2185                           	opt callstack 0
  2186  000003                     leer_eeprom@direccion:
  2187                           	opt callstack 0
  2188  000003                     ___wmul@multiplicand:
  2189                           	opt callstack 0
  2190  000003                     ___awdiv@divisor:
  2191                           	opt callstack 0
  2192  000003                     ___awmod@divisor:
  2193                           	opt callstack 0
  2194  000003                     fputc@fp:
  2195                           	opt callstack 0
  2196  000003                     strlen@a:
  2197                           	opt callstack 0
  2198                           
  2199                           ; 2 bytes @ 0x2
  2200  000003                     	ds	1
  2201  000004                     escribe_rtc@direccion:
  2202                           	opt callstack 0
  2203  000004                     leer_rtc@dato:
  2204                           	opt callstack 0
  2205  000004                     constructorSensor@pin:
  2206                           	opt callstack 0
  2207  000004                     dameTemperaturaHumedad@Humedad:
  2208                           	opt callstack 0
  2209  000004                     getValue@numCharacters:
  2210                           	opt callstack 0
  2211                           
  2212                           ; 2 bytes @ 0x3
  2213  000004                     	ds	1
  2214  000005                     ??_fputc:
  2215  000005                     ??_leer_eeprom:
  2216  000005                     _horaRegar$803:
  2217                           	opt callstack 0
  2218  000005                     dameHumedadSuelo@canalLeer:
  2219                           	opt callstack 0
  2220  000005                     ___awdiv@counter:
  2221                           	opt callstack 0
  2222  000005                     ___awmod@counter:
  2223                           	opt callstack 0
  2224  000005                     restablecerDatosSensor@i:
  2225                           	opt callstack 0
  2226  000005                     ___wmul@product:
  2227                           	opt callstack 0
  2228  000005                     ___lmul@multiplicand:
  2229                           	opt callstack 0
  2230                           
  2231                           ; 4 bytes @ 0x4
  2232  000005                     	ds	1
  2233  000006                     ??_getValue:
  2234  000006                     leer_eeprom@dato:
  2235                           	opt callstack 0
  2236  000006                     ___awdiv@sign:
  2237                           	opt callstack 0
  2238  000006                     ___awmod@sign:
  2239                           	opt callstack 0
  2240  000006                     dameTemperaturaHumedad@Temperatura:
  2241                           	opt callstack 0
  2242                           
  2243                           ; 2 bytes @ 0x5
  2244  000006                     	ds	1
  2245  000007                     ??_inicializarObjetos:
  2246  000007                     ??_leeHorariosMemoria:
  2247  000007                     _isspace$1582:
  2248                           	opt callstack 0
  2249  000007                     escribe_eeprom@direccion:
  2250                           	opt callstack 0
  2251  000007                     ___awdiv@quotient:
  2252                           	opt callstack 0
  2253                           
  2254                           ; 2 bytes @ 0x6
  2255  000007                     	ds	1
  2256  000008                     ??_dameTemperaturaHumedad:
  2257  000008                     ?_atoi:
  2258                           	opt callstack 0
  2259  000008                     getValue@datoIncorrecto:
  2260                           	opt callstack 0
  2261  000008                     atoi@s:
  2262                           	opt callstack 0
  2263                           
  2264                           ; 2 bytes @ 0x7
  2265  000008                     	ds	1
  2266  000009                     escribe_eeprom@dato:
  2267                           	opt callstack 0
  2268  000009                     inicializarObjetos@j:
  2269                           	opt callstack 0
  2270  000009                     leeHorariosMemoria@j:
  2271                           	opt callstack 0
  2272  000009                     getValue@i:
  2273                           	opt callstack 0
  2274  000009                     ___lmul@product:
  2275                           	opt callstack 0
  2276  000009                     ___aodiv@divisor:
  2277                           	opt callstack 0
  2278  000009                     ___aomod@divisor:
  2279                           	opt callstack 0
  2280                           
  2281                           ; 8 bytes @ 0x8
  2282  000009                     	ds	1
  2283  00000A                     ??_atoi:
  2284  00000A                     ??_escribe_eeprom:
  2285  00000A                     ?_stoa:
  2286                           	opt callstack 0
  2287  00000A                     dameTemperaturaHumedad@checkSum:
  2288                           	opt callstack 0
  2289  00000A                     stoa@fp:
  2290                           	opt callstack 0
  2291  00000A                     fputs@s:
  2292                           	opt callstack 0
  2293                           
  2294                           ; 2 bytes @ 0x9
  2295  00000A                     	ds	1
  2296  00000B                     ??_escribeHorariosMemoria:
  2297  00000B                     inicializarObjetos@i_806:
  2298                           	opt callstack 0
  2299  00000B                     leeHorariosMemoria@contMemoria:
  2300                           	opt callstack 0
  2301  00000B                     getValue@i_989:
  2302                           	opt callstack 0
  2303                           
  2304                           ; 2 bytes @ 0xA
  2305  00000B                     	ds	1
  2306  00000C                     dameTemperaturaHumedad@humedadDecimal:
  2307                           	opt callstack 0
  2308  00000C                     stoa@s:
  2309                           	opt callstack 0
  2310  00000C                     fputs@fp:
  2311                           	opt callstack 0
  2312                           
  2313                           ; 2 bytes @ 0xB
  2314  00000C                     	ds	1
  2315  00000D                     ?___aldiv:
  2316                           	opt callstack 0
  2317  00000D                     dameTemperaturaHumedad@temperaturaDecimal:
  2318                           	opt callstack 0
  2319  00000D                     getValue@dato:
  2320                           	opt callstack 0
  2321  00000D                     inicializarObjetos@i:
  2322                           	opt callstack 0
  2323  00000D                     escribeHorariosMemoria@j:
  2324                           	opt callstack 0
  2325  00000D                     leeHorariosMemoria@i:
  2326                           	opt callstack 0
  2327  00000D                     ___aldiv@dividend:
  2328                           	opt callstack 0
  2329                           
  2330                           ; 4 bytes @ 0xC
  2331  00000D                     	ds	1
  2332  00000E                     ??_stoa:
  2333  00000E                     dameTemperaturaHumedad@humedad:
  2334                           	opt callstack 0
  2335  00000E                     getValue@Rx:
  2336                           	opt callstack 0
  2337  00000E                     fputs@c:
  2338                           	opt callstack 0
  2339  00000E                     atoi@neg:
  2340                           	opt callstack 0
  2341                           
  2342                           ; 2 bytes @ 0xD
  2343  00000E                     	ds	1
  2344  00000F                     ??_regadoRapido:
  2345  00000F                     setRtc@direccion:
  2346                           	opt callstack 0
  2347  00000F                     dameTemperaturaHumedad@temperatura:
  2348                           	opt callstack 0
  2349  00000F                     escribeHorariosMemoria@contMemoria:
  2350                           	opt callstack 0
  2351  00000F                     fputs@i:
  2352                           	opt callstack 0
  2353  00000F                     stoa@nuls:
  2354                           	opt callstack 0
  2355                           
  2356                           ; 7 bytes @ 0xE
  2357  00000F                     	ds	1
  2358  000010                     ?_estaSeco:
  2359                           	opt callstack 0
  2360  000010                     setRtc@seteado:
  2361                           	opt callstack 0
  2362  000010                     estaSeco@s:
  2363                           	opt callstack 0
  2364  000010                     _atoi$1564:
  2365                           	opt callstack 0
  2366                           
  2367                           ; 2 bytes @ 0xF
  2368  000010                     	ds	1
  2369  000011                     ?_pad:
  2370                           	opt callstack 0
  2371  000011                     setRtc@datoRtc:
  2372                           	opt callstack 0
  2373  000011                     regadoRapido@tiempoRegar:
  2374                           	opt callstack 0
  2375  000011                     ___aodiv@counter:
  2376                           	opt callstack 0
  2377  000011                     ___aomod@counter:
  2378                           	opt callstack 0
  2379  000011                     escribeHorariosMemoria@i:
  2380                           	opt callstack 0
  2381  000011                     pad@fp:
  2382                           	opt callstack 0
  2383  000011                     ___aldiv@divisor:
  2384                           	opt callstack 0
  2385                           
  2386                           ; 4 bytes @ 0x10
  2387  000011                     	ds	1
  2388  000012                     _estaSeco$796:
  2389                           	opt callstack 0
  2390  000012                     setRtc@dato:
  2391                           	opt callstack 0
  2392  000012                     regadoRapido@areaRegar:
  2393                           	opt callstack 0
  2394  000012                     ___aodiv@sign:
  2395                           	opt callstack 0
  2396  000012                     ___aomod@sign:
  2397                           	opt callstack 0
  2398  000012                     _atoi$1566:
  2399                           	opt callstack 0
  2400                           
  2401                           ; 2 bytes @ 0x11
  2402  000012                     	ds	1
  2403  000013                     ?_abs:
  2404                           	opt callstack 0
  2405  000013                     estaSeco@temperatura:
  2406                           	opt callstack 0
  2407  000013                     setTiempoRegar@tiempoRegar:
  2408                           	opt callstack 0
  2409  000013                     pad@buf:
  2410                           	opt callstack 0
  2411  000013                     abs@a:
  2412                           	opt callstack 0
  2413  000013                     ___aodiv@quotient:
  2414                           	opt callstack 0
  2415                           
  2416                           ; 8 bytes @ 0x12
  2417  000013                     	ds	1
  2418  000014                     ??_encenderBombas:
  2419  000014                     setTiempoRegar@hora:
  2420                           	opt callstack 0
  2421  000014                     _atoi$1565:
  2422                           	opt callstack 0
  2423                           
  2424                           ; 1 bytes @ 0x13
  2425  000014                     	ds	1
  2426  000015                     ??_abs:
  2427  000015                     ___aldiv@counter:
  2428                           	opt callstack 0
  2429  000015                     pad@p:
  2430                           	opt callstack 0
  2431  000015                     atoi@n:
  2432                           	opt callstack 0
  2433                           
  2434                           ; 2 bytes @ 0x14
  2435  000015                     	ds	1
  2436  000016                     encenderBombas@flagSeco:
  2437                           	opt callstack 0
  2438  000016                     ___aldiv@sign:
  2439                           	opt callstack 0
  2440  000016                     stoa@i:
  2441                           	opt callstack 0
  2442                           
  2443                           ; 2 bytes @ 0x15
  2444  000016                     	ds	1
  2445  000017                     ??_pad:
  2446  000017                     encenderBombas@i:
  2447                           	opt callstack 0
  2448  000017                     ___aldiv@quotient:
  2449                           	opt callstack 0
  2450                           
  2451                           ; 4 bytes @ 0x16
  2452  000017                     	ds	1
  2453  000018                     pad@i:
  2454                           	opt callstack 0
  2455  000018                     stoa@w:
  2456                           	opt callstack 0
  2457                           
  2458                           ; 2 bytes @ 0x17
  2459  000018                     	ds	2
  2460  00001A                     pad@w:
  2461                           	opt callstack 0
  2462  00001A                     stoa@cp:
  2463                           	opt callstack 0
  2464                           
  2465                           ; 2 bytes @ 0x19
  2466  00001A                     	ds	1
  2467  00001B                     ?_map:
  2468                           	opt callstack 0
  2469  00001B                     UART_init@BAUD:
  2470                           	opt callstack 0
  2471  00001B                     map@x:
  2472                           	opt callstack 0
  2473                           
  2474                           ; 4 bytes @ 0x1A
  2475  00001B                     	ds	1
  2476  00001C                     ?_ctoa:
  2477                           	opt callstack 0
  2478  00001C                     ?_dtoa:
  2479                           	opt callstack 0
  2480  00001C                     ctoa@fp:
  2481                           	opt callstack 0
  2482  00001C                     dtoa@fp:
  2483                           	opt callstack 0
  2484  00001C                     stoa@p:
  2485                           	opt callstack 0
  2486                           
  2487                           ; 2 bytes @ 0x1B
  2488  00001C                     	ds	2
  2489  00001E                     ctoa@c:
  2490                           	opt callstack 0
  2491  00001E                     stoa@l:
  2492                           	opt callstack 0
  2493  00001E                     dtoa@d:
  2494                           	opt callstack 0
  2495                           
  2496                           ; 8 bytes @ 0x1D
  2497  00001E                     	ds	1
  2498  00001F                     ctoa@w:
  2499                           	opt callstack 0
  2500  00001F                     map@in_min:
  2501                           	opt callstack 0
  2502                           
  2503                           ; 4 bytes @ 0x1E
  2504  00001F                     	ds	4
  2505  000023                     map@in_max:
  2506                           	opt callstack 0
  2507  000023                     _UART_init$1915:
  2508                           	opt callstack 0
  2509                           
  2510                           ; 4 bytes @ 0x22
  2511  000023                     	ds	3
  2512  000026                     ??_dtoa:
  2513                           
  2514                           ; 1 bytes @ 0x25
  2515  000026                     	ds	1
  2516  000027                     map@out_min:
  2517                           	opt callstack 0
  2518                           
  2519                           ; 4 bytes @ 0x26
  2520  000027                     	ds	4
  2521  00002B                     map@out_max:
  2522                           	opt callstack 0
  2523                           
  2524                           ; 4 bytes @ 0x2A
  2525  00002B                     	ds	3
  2526  00002E                     _dtoa$1081:
  2527                           	opt callstack 0
  2528                           
  2529                           ; 2 bytes @ 0x2D
  2530  00002E                     	ds	1
  2531  00002F                     ??_lecturaAnalogaSensores:
  2532                           
  2533                           ; 1 bytes @ 0x2E
  2534  00002F                     	ds	1
  2535  000030                     lecturaAnalogaSensores@i:
  2536                           	opt callstack 0
  2537  000030                     dtoa@p:
  2538                           	opt callstack 0
  2539                           
  2540                           ; 2 bytes @ 0x2F
  2541  000030                     	ds	2
  2542  000032                     dtoa@w:
  2543                           	opt callstack 0
  2544                           
  2545                           ; 2 bytes @ 0x31
  2546  000032                     	ds	2
  2547  000034                     dtoa@s:
  2548                           	opt callstack 0
  2549                           
  2550                           ; 2 bytes @ 0x33
  2551  000034                     	ds	2
  2552  000036                     dtoa@n:
  2553                           	opt callstack 0
  2554                           
  2555                           ; 8 bytes @ 0x35
  2556  000036                     	ds	8
  2557  00003E                     dtoa@i:
  2558                           	opt callstack 0
  2559                           
  2560                           ; 2 bytes @ 0x3D
  2561  00003E                     	ds	2
  2562  000040                     ?_vfpfcnvrt:
  2563                           	opt callstack 0
  2564  000040                     vfpfcnvrt@fp:
  2565                           	opt callstack 0
  2566                           
  2567                           ; 2 bytes @ 0x3F
  2568  000040                     	ds	2
  2569  000042                     vfpfcnvrt@fmt:
  2570                           	opt callstack 0
  2571                           
  2572                           ; 2 bytes @ 0x41
  2573  000042                     	ds	2
  2574  000044                     vfpfcnvrt@ap:
  2575                           	opt callstack 0
  2576                           
  2577                           ; 2 bytes @ 0x43
  2578  000044                     	ds	2
  2579  000046                     ??_vfpfcnvrt:
  2580                           
  2581                           ; 1 bytes @ 0x45
  2582  000046                     	ds	4
  2583  00004A                     vfpfcnvrt@ll:
  2584                           	opt callstack 0
  2585                           
  2586                           ; 8 bytes @ 0x49
  2587  00004A                     	ds	8
  2588  000052                     vfpfcnvrt@cp:
  2589                           	opt callstack 0
  2590                           
  2591                           ; 2 bytes @ 0x51
  2592  000052                     	ds	2
  2593  000054                     _vfpfcnvrt$1105:
  2594                           	opt callstack 0
  2595                           
  2596                           ; 2 bytes @ 0x53
  2597  000054                     	ds	2
  2598  000056                     vfpfcnvrt@c:
  2599                           	opt callstack 0
  2600                           
  2601                           ; 1 bytes @ 0x55
  2602  000056                     	ds	1
  2603  000057                     ?_vfprintf:
  2604                           	opt callstack 0
  2605  000057                     vfprintf@fp:
  2606                           	opt callstack 0
  2607                           
  2608                           ; 2 bytes @ 0x56
  2609  000057                     	ds	2
  2610  000059                     vfprintf@fmt:
  2611                           	opt callstack 0
  2612                           
  2613                           ; 2 bytes @ 0x58
  2614  000059                     	ds	2
  2615  00005B                     vfprintf@ap:
  2616                           	opt callstack 0
  2617                           
  2618                           ; 2 bytes @ 0x5A
  2619  00005B                     	ds	2
  2620  00005D                     vfprintf@cfmt:
  2621                           	opt callstack 0
  2622                           
  2623                           ; 2 bytes @ 0x5C
  2624  00005D                     	ds	2
  2625  00005F                     
  2626                           ; 1 bytes @ 0x5E
  2627 ;;
  2628 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2629 ;;
  2630 ;; *************** function _main *****************
  2631 ;; Defined at:
  2632 ;;		line 978 in file "main.c"
  2633 ;; Parameters:    Size  Location     Type
  2634 ;;		None
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;		None
  2637 ;; Return value:  Size  Location     Type
  2638 ;;                  1    wreg      void 
  2639 ;; Registers used:
  2640 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2646 ;;      Params:         0       0       0       0       0       0       0       0       0
  2647 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2648 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2649 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2650 ;;Total ram usage:        0 bytes
  2651 ;; Hardware stack levels required when called:   12
  2652 ;; This function calls:
  2653 ;;		_UART_init
  2654 ;;		_configurarAdc
  2655 ;;		_i2c_iniciar
  2656 ;;		_inicializarObjetos
  2657 ;;		_leeHorariosMemoria
  2658 ;;		_mostrarMenu
  2659 ;;		_restablecerDatosSensor
  2660 ;;		_sistemaPrincipal
  2661 ;;		_sistemaRegado
  2662 ;; This function is called by:
  2663 ;;		Startup code after reset
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667                           	psect	text0
  2668  0024AC                     __ptext0:
  2669                           	opt callstack 0
  2670  0024AC                     _main:
  2671                           	opt callstack 19
  2672  0024AC                     
  2673                           ;main.c: 980:     INTCONbits.GIE = 1;
  2674  0024AC  8EF2               	bsf	242,7,c	;volatile
  2675                           
  2676                           ;main.c: 981:     INTCONbits.PEIE = 1;
  2677  0024AE  8CF2               	bsf	242,6,c	;volatile
  2678                           
  2679                           ;main.c: 982:     INTCONbits.TMR0IE = 0;
  2680  0024B0  9AF2               	bcf	242,5,c	;volatile
  2681                           
  2682                           ;main.c: 983:     INTCONbits.TMR0IF = 0;
  2683  0024B2  94F2               	bcf	242,2,c	;volatile
  2684                           
  2685                           ;main.c: 984:     PIE1bits.RCIE = 1;
  2686  0024B4  8A9D               	bsf	157,5,c	;volatile
  2687  0024B6                     
  2688                           ;main.c: 986:     T0CON = 0b00000111;
  2689  0024B6  0E07               	movlw	7
  2690  0024B8  6ED5               	movwf	213,c	;volatile
  2691  0024BA                     
  2692                           ;main.c: 988:     INTCONbits.TMR0IE = 1;
  2693  0024BA  8AF2               	bsf	242,5,c	;volatile
  2694  0024BC                     
  2695                           ;main.c: 993:     restablecerDatosSensor();
  2696  0024BC  ECCE  F015         	call	_restablecerDatosSensor	;wreg free
  2697  0024C0                     
  2698                           ;main.c: 995:     UART_init(9600);
  2699  0024C0  0E80               	movlw	128
  2700  0024C2  6E1B               	movwf	UART_init@BAUD^0,c
  2701  0024C4  0E25               	movlw	37
  2702  0024C6  6E1C               	movwf	(UART_init@BAUD+1)^0,c
  2703  0024C8  0E00               	movlw	0
  2704  0024CA  6E1D               	movwf	(UART_init@BAUD+2)^0,c
  2705  0024CC  0E00               	movlw	0
  2706  0024CE  6E1E               	movwf	(UART_init@BAUD+3)^0,c
  2707  0024D0  EC97  F013         	call	_UART_init	;wreg free
  2708  0024D4                     
  2709                           ;main.c: 996:     i2c_iniciar();
  2710  0024D4  ECBA  F017         	call	_i2c_iniciar	;wreg free
  2711  0024D8                     
  2712                           ;main.c: 997:     configurarAdc();
  2713  0024D8  ECDE  F017         	call	_configurarAdc	;wreg free
  2714  0024DC                     
  2715                           ;main.c: 998:     inicializarObjetos();
  2716  0024DC  EC98  F009         	call	_inicializarObjetos	;wreg free
  2717  0024E0                     
  2718                           ;main.c: 1000:     leeHorariosMemoria();
  2719  0024E0  EC45  F00C         	call	_leeHorariosMemoria	;wreg free
  2720  0024E4                     
  2721                           ;main.c: 1004:     TRISD = 0;
  2722  0024E4  0E00               	movlw	0
  2723  0024E6  6E95               	movwf	149,c	;volatile
  2724  0024E8                     
  2725                           ;main.c: 1005:     LATD = 0;
  2726  0024E8  0E00               	movlw	0
  2727  0024EA  6E8C               	movwf	140,c	;volatile
  2728  0024EC                     
  2729                           ;main.c: 1007:     TMR0 = VALOR_TIMER0;
  2730  0024EC  C13D  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
  2731  0024F0  C13E  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
  2732  0024F4                     
  2733                           ;main.c: 1009:     INTCONbits.TMR0IF = 1;
  2734  0024F4  84F2               	bsf	242,2,c	;volatile
  2735  0024F6                     
  2736                           ;main.c: 1011:     T0CONbits.TMR0ON = 1;
  2737  0024F6  8ED5               	bsf	213,7,c	;volatile
  2738  0024F8                     
  2739                           ;main.c: 1013:     mostrarMenu();
  2740  0024F8  ECE5  F012         	call	_mostrarMenu	;wreg free
  2741  0024FC                     
  2742                           ;main.c: 1015:     MODO_COMUNICACION = 0;
  2743  0024FC  0E00               	movlw	0
  2744  0024FE  0100               	movlb	0	; () banked
  2745  002500  6FFB               	movwf	_MODO_COMUNICACION& (0+255),b
  2746  002502                     l4613:
  2747                           
  2748                           ;main.c: 1020:         if (datoRecibido) {
  2749  002502  0100               	movlb	0	; () banked
  2750  002504  51F8               	movf	_datoRecibido& (0+255),w,b
  2751  002506  B4D8               	btfsc	status,2,c
  2752  002508  EF88  F012         	goto	u3671
  2753  00250C  EF8A  F012         	goto	u3670
  2754  002510                     u3671:
  2755  002510  EF91  F012         	goto	l4621
  2756  002514                     u3670:
  2757  002514                     
  2758                           ; BSR set to: 0
  2759                           ;main.c: 1022:             datoRecibido = 0;
  2760  002514  0E00               	movlw	0
  2761  002516  6FF8               	movwf	_datoRecibido& (0+255),b
  2762  002518                     
  2763                           ; BSR set to: 0
  2764                           ;main.c: 1023:             byteUart -= 48;
  2765  002518  0E30               	movlw	48
  2766  00251A  5FFE               	subwf	_byteUart& (0+255),f,b
  2767  00251C                     
  2768                           ; BSR set to: 0
  2769                           ;main.c: 1024:             sistemaPrincipal(byteUart);
  2770  00251C  51FE               	movf	_byteUart& (0+255),w,b
  2771  00251E  ECD6  F00F         	call	_sistemaPrincipal
  2772  002522                     l4621:
  2773                           
  2774                           ;main.c: 1028:         if (overflowTimer) {
  2775  002522  0100               	movlb	0	; () banked
  2776  002524  51F7               	movf	_overflowTimer& (0+255),w,b
  2777  002526  B4D8               	btfsc	status,2,c
  2778  002528  EF98  F012         	goto	u3681
  2779  00252C  EF9A  F012         	goto	u3680
  2780  002530                     u3681:
  2781  002530  EF81  F012         	goto	l4613
  2782  002534                     u3680:
  2783  002534                     
  2784                           ; BSR set to: 0
  2785                           ;main.c: 1030:             esperandoDatos = 0;
  2786  002534  0E00               	movlw	0
  2787  002536  6FFC               	movwf	_esperandoDatos& (0+255),b
  2788                           
  2789                           ;main.c: 1031:             overflowTimer = 0;
  2790  002538  0E00               	movlw	0
  2791  00253A  6FF7               	movwf	_overflowTimer& (0+255),b
  2792  00253C                     
  2793                           ; BSR set to: 0
  2794                           ;main.c: 1032:             sistemaRegado();
  2795  00253C  ECE0  F008         	call	_sistemaRegado	;wreg free
  2796  002540  EF81  F012         	goto	l4613
  2797  002544  EF07  F000         	goto	start
  2798  002548                     __end_of_main:
  2799                           	opt callstack 0
  2800                           
  2801 ;; *************** function _sistemaRegado *****************
  2802 ;; Defined at:
  2803 ;;		line 600 in file "main.c"
  2804 ;; Parameters:    Size  Location     Type
  2805 ;;		None
  2806 ;; Auto vars:     Size  Location     Type
  2807 ;;		None
  2808 ;; Return value:  Size  Location     Type
  2809 ;;                  1    wreg      void 
  2810 ;; Registers used:
  2811 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2812 ;; Tracked objects:
  2813 ;;		On entry : 0/0
  2814 ;;		On exit  : 0/0
  2815 ;;		Unchanged: 0/0
  2816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2817 ;;      Params:         0       0       0       0       0       0       0       0       0
  2818 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2819 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2820 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2821 ;;Total ram usage:        0 bytes
  2822 ;; Hardware stack levels used:    1
  2823 ;; Hardware stack levels required when called:   10
  2824 ;; This function calls:
  2825 ;;		_dameDiaActual
  2826 ;;		_dameHoraActual
  2827 ;;		_encenderBombas
  2828 ;;		_horaRegar
  2829 ;;		_lecturaAnalogaSensores
  2830 ;;		_lecturaWifi
  2831 ;;		_mostrarMenu
  2832 ;; This function is called by:
  2833 ;;		_main
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837                           	psect	text1
  2838  0011C0                     __ptext1:
  2839                           	opt callstack 0
  2840  0011C0                     _sistemaRegado:
  2841                           	opt callstack 20
  2842  0011C0                     
  2843                           ;main.c: 604:     if (regando) {
  2844  0011C0  0100               	movlb	0	; () banked
  2845  0011C2  51F2               	movf	_regando& (0+255),w,b
  2846  0011C4  B4D8               	btfsc	status,2,c
  2847  0011C6  EFE7  F008         	goto	u3521
  2848  0011CA  EFE9  F008         	goto	u3520
  2849  0011CE                     u3521:
  2850  0011CE  EF1B  F009         	goto	l4505
  2851  0011D2                     u3520:
  2852  0011D2                     
  2853                           ; BSR set to: 0
  2854                           ;main.c: 606:         contInterrupciones++;
  2855  0011D2  0101               	movlb	1	; () banked
  2856  0011D4  4B12               	infsnz	_contInterrupciones& (0+255),f,b
  2857  0011D6  2B13               	incf	(_contInterrupciones+1)& (0+255),f,b
  2858  0011D8                     
  2859                           ; BSR set to: 1
  2860                           ;main.c: 608:         if (contInterrupciones == 6) {
  2861  0011D8  0E06               	movlw	6
  2862  0011DA  1912               	xorwf	_contInterrupciones& (0+255),w,b
  2863  0011DC  1113               	iorwf	(_contInterrupciones+1)& (0+255),w,b
  2864  0011DE  A4D8               	btfss	status,2,c
  2865  0011E0  EFF4  F008         	goto	u3531
  2866  0011E4  EFF6  F008         	goto	u3530
  2867  0011E8                     u3531:
  2868  0011E8  EF97  F009         	goto	l375
  2869  0011EC                     u3530:
  2870  0011EC                     
  2871                           ; BSR set to: 1
  2872                           ;main.c: 609:             contInterrupciones = 0;
  2873  0011EC  0E00               	movlw	0
  2874  0011EE  6F13               	movwf	(_contInterrupciones+1)& (0+255),b
  2875  0011F0  0E00               	movlw	0
  2876  0011F2  6F12               	movwf	_contInterrupciones& (0+255),b
  2877  0011F4                     
  2878                           ; BSR set to: 1
  2879                           ;main.c: 610:             minutosTranscurridos++;
  2880  0011F4  0100               	movlb	0	; () banked
  2881  0011F6  2BF3               	incf	_minutosTranscurridos& (0+255),f,b
  2882  0011F8                     
  2883                           ; BSR set to: 0
  2884                           ;main.c: 613:             if (minutosTranscurridos >= minutosRegar) {
  2885  0011F8  51F4               	movf	_minutosRegar& (0+255),w,b
  2886  0011FA  5DF3               	subwf	_minutosTranscurridos& (0+255),w,b
  2887  0011FC  A0D8               	btfss	status,0,c
  2888  0011FE  EF03  F009         	goto	u3541
  2889  001202  EF05  F009         	goto	u3540
  2890  001206                     u3541:
  2891  001206  EF97  F009         	goto	l375
  2892  00120A                     u3540:
  2893  00120A                     
  2894                           ; BSR set to: 0
  2895                           ;main.c: 615:                 LATD = 0;
  2896  00120A  0E00               	movlw	0
  2897  00120C  6E8C               	movwf	140,c	;volatile
  2898                           
  2899                           ;main.c: 616:                 minutosTranscurridos = 0;
  2900  00120E  0E00               	movlw	0
  2901  001210  6FF3               	movwf	_minutosTranscurridos& (0+255),b
  2902                           
  2903                           ;main.c: 617:                 regando = 0;
  2904  001212  0E00               	movlw	0
  2905  001214  6FF2               	movwf	_regando& (0+255),b
  2906  001216                     
  2907                           ; BSR set to: 0
  2908                           ;main.c: 618:                 horarios[hora].regado = 1;
  2909  001216  51FA               	movf	_hora& (0+255),w,b
  2910  001218  0D0C               	mullw	12
  2911  00121A  0EEA               	movlw	low (_horarios+10)
  2912  00121C  24F3               	addwf	243,w,c
  2913  00121E  6ED9               	movwf	fsr2l,c
  2914  001220  0E06               	movlw	high (_horarios+10)
  2915  001222  20F4               	addwfc	prodh,w,c
  2916  001224  6EDA               	movwf	fsr2h,c
  2917  001226  0E01               	movlw	1
  2918  001228  6EDF               	movwf	indf2,c
  2919  00122A                     
  2920                           ; BSR set to: 0
  2921                           ;main.c: 619:                 tempHora = hora;
  2922  00122A  C0FA  F0F6         	movff	_hora,_tempHora
  2923  00122E                     
  2924                           ; BSR set to: 0
  2925                           ;main.c: 620:                 flagRegado = 0;
  2926  00122E  0E00               	movlw	0
  2927  001230  6FF5               	movwf	_flagRegado& (0+255),b
  2928  001232  EF97  F009         	goto	l375
  2929  001236                     l4505:
  2930                           
  2931                           ; BSR set to: 0
  2932                           ;main.c: 626:         dameHoraActual();
  2933  001236  EC22  F017         	call	_dameHoraActual	;wreg free
  2934                           
  2935                           ;main.c: 627:         dameDiaActual();
  2936  00123A  ECC5  F017         	call	_dameDiaActual	;wreg free
  2937  00123E                     
  2938                           ;main.c: 629:         if (hora != tempHora && !flagRegado) {
  2939  00123E  0100               	movlb	0	; () banked
  2940  001240  51F6               	movf	_tempHora& (0+255),w,b
  2941  001242  19FA               	xorwf	_hora& (0+255),w,b
  2942  001244  B4D8               	btfsc	status,2,c
  2943  001246  EF27  F009         	goto	u3551
  2944  00124A  EF29  F009         	goto	u3550
  2945  00124E                     u3551:
  2946  00124E  EF3D  F009         	goto	l4515
  2947  001252                     u3550:
  2948  001252                     
  2949                           ; BSR set to: 0
  2950  001252  51F5               	movf	_flagRegado& (0+255),w,b
  2951  001254  A4D8               	btfss	status,2,c
  2952  001256  EF2F  F009         	goto	u3561
  2953  00125A  EF31  F009         	goto	u3560
  2954  00125E                     u3561:
  2955  00125E  EF3D  F009         	goto	l4515
  2956  001262                     u3560:
  2957  001262                     
  2958                           ; BSR set to: 0
  2959                           ;main.c: 630:             horarios[tempHora].regado = 0;
  2960  001262  51F6               	movf	_tempHora& (0+255),w,b
  2961  001264  0D0C               	mullw	12
  2962  001266  0EEA               	movlw	low (_horarios+10)
  2963  001268  24F3               	addwf	243,w,c
  2964  00126A  6ED9               	movwf	fsr2l,c
  2965  00126C  0E06               	movlw	high (_horarios+10)
  2966  00126E  20F4               	addwfc	prodh,w,c
  2967  001270  6EDA               	movwf	fsr2h,c
  2968  001272  0E00               	movlw	0
  2969  001274  6EDF               	movwf	indf2,c
  2970  001276                     
  2971                           ; BSR set to: 0
  2972                           ;main.c: 631:             flagRegado = 1;
  2973  001276  0E01               	movlw	1
  2974  001278  6FF5               	movwf	_flagRegado& (0+255),b
  2975  00127A                     l4515:
  2976                           
  2977                           ; BSR set to: 0
  2978                           ;main.c: 634:         if ((!MODO_COMUNICACION && horaRegar()) || (MODO_COMUNICACION
  2979  00127A  51FB               	movf	_MODO_COMUNICACION& (0+255),w,b
  2980  00127C  A4D8               	btfss	status,2,c
  2981  00127E  EF43  F009         	goto	u3571
  2982  001282  EF45  F009         	goto	u3570
  2983  001286                     u3571:
  2984  001286  EF50  F009         	goto	l4519
  2985  00128A                     u3570:
  2986  00128A                     
  2987                           ; BSR set to: 0
  2988  00128A  ECA4  F012         	call	_horaRegar	;wreg free
  2989  00128E  5001               	movf	?_horaRegar^0,w,c
  2990  001290  1002               	iorwf	(?_horaRegar+1)^0,w,c
  2991  001292  A4D8               	btfss	status,2,c
  2992  001294  EF4E  F009         	goto	u3581
  2993  001298  EF50  F009         	goto	u3580
  2994  00129C                     u3581:
  2995  00129C  EF64  F009         	goto	l4523
  2996  0012A0                     u3580:
  2997  0012A0                     l4519:
  2998  0012A0  0100               	movlb	0	; () banked
  2999  0012A2  51FB               	movf	_MODO_COMUNICACION& (0+255),w,b
  3000  0012A4  B4D8               	btfsc	status,2,c
  3001  0012A6  EF57  F009         	goto	u3591
  3002  0012AA  EF59  F009         	goto	u3590
  3003  0012AE                     u3591:
  3004  0012AE  EF97  F009         	goto	l375
  3005  0012B2                     u3590:
  3006  0012B2                     
  3007                           ; BSR set to: 0
  3008  0012B2  ECA4  F012         	call	_horaRegar	;wreg free
  3009  0012B6  5001               	movf	?_horaRegar^0,w,c
  3010  0012B8  1002               	iorwf	(?_horaRegar+1)^0,w,c
  3011  0012BA  B4D8               	btfsc	status,2,c
  3012  0012BC  EF62  F009         	goto	u3601
  3013  0012C0  EF64  F009         	goto	u3600
  3014  0012C4                     u3601:
  3015  0012C4  EF97  F009         	goto	l375
  3016  0012C8                     u3600:
  3017  0012C8                     l4523:
  3018                           
  3019                           ;main.c: 635:                 && horaRegar())) {;main.c: 639:             if (MODO_COMUN
      +                          ICACION) {
  3020  0012C8  0100               	movlb	0	; () banked
  3021  0012CA  51FB               	movf	_MODO_COMUNICACION& (0+255),w,b
  3022  0012CC  B4D8               	btfsc	status,2,c
  3023  0012CE  EF6B  F009         	goto	u3611
  3024  0012D2  EF6D  F009         	goto	u3610
  3025  0012D6                     u3611:
  3026  0012D6  EF88  F009         	goto	l4535
  3027  0012DA                     u3610:
  3028  0012DA                     
  3029                           ; BSR set to: 0
  3030                           ;main.c: 640:                 lecturaWifi();
  3031  0012DA  EC82  F00E         	call	_lecturaWifi	;wreg free
  3032  0012DE                     
  3033                           ;main.c: 641:                 if (peticionLecturaSensores) {
  3034  0012DE  0100               	movlb	0	; () banked
  3035  0012E0  51F1               	movf	_peticionLecturaSensores& (0+255),w,b
  3036  0012E2  B4D8               	btfsc	status,2,c
  3037  0012E4  EF76  F009         	goto	u3621
  3038  0012E8  EF78  F009         	goto	u3620
  3039  0012EC                     u3621:
  3040  0012EC  EF84  F009         	goto	l4533
  3041  0012F0                     u3620:
  3042  0012F0                     
  3043                           ; BSR set to: 0
  3044                           ;main.c: 642:                     minutosRegar = horarios[hora].tiempoRegar;
  3045  0012F0  51FA               	movf	_hora& (0+255),w,b
  3046  0012F2  0D0C               	mullw	12
  3047  0012F4  0EEB               	movlw	low (_horarios+11)
  3048  0012F6  24F3               	addwf	243,w,c
  3049  0012F8  6ED9               	movwf	fsr2l,c
  3050  0012FA  0E06               	movlw	high (_horarios+11)
  3051  0012FC  20F4               	addwfc	prodh,w,c
  3052  0012FE  6EDA               	movwf	fsr2h,c
  3053  001300  50DF               	movf	indf2,w,c
  3054  001302  6FF4               	movwf	_minutosRegar& (0+255),b
  3055  001304                     
  3056                           ; BSR set to: 0
  3057                           ;main.c: 643:                     encenderBombas();
  3058  001304  EC49  F003         	call	_encenderBombas	;wreg free
  3059  001308                     l4533:
  3060                           
  3061                           ;main.c: 645:                 mostrarMenu();
  3062  001308  ECE5  F012         	call	_mostrarMenu	;wreg free
  3063                           
  3064                           ;main.c: 646:             } else {
  3065  00130C  EF97  F009         	goto	l375
  3066  001310                     l4535:
  3067                           
  3068                           ; BSR set to: 0
  3069                           ;main.c: 647:                 lecturaAnalogaSensores();
  3070  001310  ECB0  F011         	call	_lecturaAnalogaSensores	;wreg free
  3071  001314                     
  3072                           ;main.c: 648:                 minutosRegar = horarios[hora].tiempoRegar;
  3073  001314  0100               	movlb	0	; () banked
  3074  001316  51FA               	movf	_hora& (0+255),w,b
  3075  001318  0D0C               	mullw	12
  3076  00131A  0EEB               	movlw	low (_horarios+11)
  3077  00131C  24F3               	addwf	243,w,c
  3078  00131E  6ED9               	movwf	fsr2l,c
  3079  001320  0E06               	movlw	high (_horarios+11)
  3080  001322  20F4               	addwfc	prodh,w,c
  3081  001324  6EDA               	movwf	fsr2h,c
  3082  001326  50DF               	movf	indf2,w,c
  3083  001328  6FF4               	movwf	_minutosRegar& (0+255),b
  3084  00132A                     
  3085                           ; BSR set to: 0
  3086                           ;main.c: 649:                 encenderBombas();
  3087  00132A  EC49  F003         	call	_encenderBombas	;wreg free
  3088  00132E                     l375:
  3089  00132E  0012               	return		;funcret
  3090  001330                     __end_of_sistemaRegado:
  3091                           	opt callstack 0
  3092                           
  3093 ;; *************** function _horaRegar *****************
  3094 ;; Defined at:
  3095 ;;		line 152 in file "main.c"
  3096 ;; Parameters:    Size  Location     Type
  3097 ;;		None
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;		None
  3100 ;; Return value:  Size  Location     Type
  3101 ;;                  2    0[COMRAM] int 
  3102 ;; Registers used:
  3103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3104 ;; Tracked objects:
  3105 ;;		On entry : 0/0
  3106 ;;		On exit  : 0/0
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3109 ;;      Params:         2       0       0       0       0       0       0       0       0
  3110 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3111 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3112 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3113 ;;Total ram usage:        5 bytes
  3114 ;; Hardware stack levels used:    1
  3115 ;; Hardware stack levels required when called:    1
  3116 ;; This function calls:
  3117 ;;		Nothing
  3118 ;; This function is called by:
  3119 ;;		_sistemaRegado
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123                           	psect	text2
  3124  002548                     __ptext2:
  3125                           	opt callstack 0
  3126  002548                     _horaRegar:
  3127                           	opt callstack 28
  3128  002548                     
  3129                           ;main.c: 154:     return (horarios[hora].regar) && (!horarios[hora].regado) &&
  3130  002548  0E00               	movlw	0
  3131  00254A  6E05               	movwf	_horaRegar$803^0,c
  3132  00254C  0100               	movlb	0	; () banked
  3133  00254E  51FA               	movf	_hora& (0+255),w,b
  3134  002550  0D0C               	mullw	12
  3135  002552  0EE9               	movlw	low (_horarios+9)
  3136  002554  24F3               	addwf	243,w,c
  3137  002556  6ED9               	movwf	fsr2l,c
  3138  002558  0E06               	movlw	high (_horarios+9)
  3139  00255A  20F4               	addwfc	prodh,w,c
  3140  00255C  6EDA               	movwf	fsr2h,c
  3141  00255E  50DF               	movf	indf2,w,c
  3142  002560  B4D8               	btfsc	status,2,c
  3143  002562  EFB5  F012         	goto	u3151
  3144  002566  EFB7  F012         	goto	u3150
  3145  00256A                     u3151:
  3146  00256A  EFE1  F012         	goto	l4041
  3147  00256E                     u3150:
  3148  00256E                     
  3149                           ; BSR set to: 0
  3150  00256E  51FA               	movf	_hora& (0+255),w,b
  3151  002570  0D0C               	mullw	12
  3152  002572  0EEA               	movlw	low (_horarios+10)
  3153  002574  24F3               	addwf	243,w,c
  3154  002576  6ED9               	movwf	fsr2l,c
  3155  002578  0E06               	movlw	high (_horarios+10)
  3156  00257A  20F4               	addwfc	prodh,w,c
  3157  00257C  6EDA               	movwf	fsr2h,c
  3158  00257E  50DF               	movf	indf2,w,c
  3159  002580  A4D8               	btfss	status,2,c
  3160  002582  EFC5  F012         	goto	u3161
  3161  002586  EFC7  F012         	goto	u3160
  3162  00258A                     u3161:
  3163  00258A  EFE1  F012         	goto	l4041
  3164  00258E                     u3160:
  3165  00258E                     
  3166                           ; BSR set to: 0
  3167  00258E  51FA               	movf	_hora& (0+255),w,b
  3168  002590  0D0C               	mullw	12
  3169  002592  0EE0               	movlw	low _horarios
  3170  002594  6E03               	movwf	??_horaRegar^0,c
  3171  002596  0E06               	movlw	high _horarios
  3172  002598  6E04               	movwf	(??_horaRegar+1)^0,c
  3173  00259A  50F3               	movf	243,w,c
  3174  00259C  2603               	addwf	??_horaRegar^0,f,c
  3175  00259E  50F4               	movf	244,w,c
  3176  0025A0  2204               	addwfc	(??_horaRegar+1)^0,f,c
  3177  0025A2  51F9               	movf	_diaActual& (0+255),w,b
  3178  0025A4  2403               	addwf	??_horaRegar^0,w,c
  3179  0025A6  6ED9               	movwf	fsr2l,c
  3180  0025A8  0E00               	movlw	0
  3181  0025AA  2004               	addwfc	(??_horaRegar+1)^0,w,c
  3182  0025AC  6EDA               	movwf	fsr2h,c
  3183  0025AE  50DF               	movf	indf2,w,c
  3184  0025B0  B4D8               	btfsc	status,2,c
  3185  0025B2  EFDD  F012         	goto	u3171
  3186  0025B6  EFDF  F012         	goto	u3170
  3187  0025BA                     u3171:
  3188  0025BA  EFE1  F012         	goto	l4041
  3189  0025BE                     u3170:
  3190  0025BE                     
  3191                           ; BSR set to: 0
  3192  0025BE  0E01               	movlw	1
  3193  0025C0  6E05               	movwf	_horaRegar$803^0,c
  3194  0025C2                     l4041:
  3195                           
  3196                           ; BSR set to: 0
  3197  0025C2  C005  F001         	movff	_horaRegar$803,?_horaRegar
  3198  0025C6  6A02               	clrf	(?_horaRegar+1)^0,c
  3199  0025C8                     
  3200                           ; BSR set to: 0
  3201  0025C8  0012               	return		;funcret
  3202  0025CA                     __end_of_horaRegar:
  3203                           	opt callstack 0
  3204                           
  3205 ;; *************** function _encenderBombas *****************
  3206 ;; Defined at:
  3207 ;;		line 292 in file "main.c"
  3208 ;; Parameters:    Size  Location     Type
  3209 ;;		None
  3210 ;; Auto vars:     Size  Location     Type
  3211 ;;  i               2   22[COMRAM] int 
  3212 ;;  flagSeco        1   21[COMRAM] unsigned char 
  3213 ;; Return value:  Size  Location     Type
  3214 ;;                  1    wreg      void 
  3215 ;; Registers used:
  3216 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 0/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3222 ;;      Params:         0       0       0       0       0       0       0       0       0
  3223 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3224 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3225 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3226 ;;Total ram usage:        5 bytes
  3227 ;; Hardware stack levels used:    1
  3228 ;; Hardware stack levels required when called:    5
  3229 ;; This function calls:
  3230 ;;		_estaSeco
  3231 ;; This function is called by:
  3232 ;;		_sistemaRegado
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           	psect	text3
  3237  000692                     __ptext3:
  3238                           	opt callstack 0
  3239  000692                     _encenderBombas:
  3240                           	opt callstack 24
  3241  000692                     
  3242                           ;main.c: 294:     char flagSeco = 0;
  3243  000692  0E00               	movlw	0
  3244  000694  6E16               	movwf	encenderBombas@flagSeco^0,c
  3245                           
  3246                           ;main.c: 296:     for (int i = 0; i < 3; i++) {
  3247  000696  0E00               	movlw	0
  3248  000698  6E18               	movwf	(encenderBombas@i+1)^0,c
  3249  00069A  0E00               	movlw	0
  3250  00069C  6E17               	movwf	encenderBombas@i^0,c
  3251  00069E  EF2B  F004         	goto	l4119
  3252  0006A2                     l4069:
  3253                           
  3254                           ;main.c: 301:                 if (estaSeco(sensores[i])) {
  3255  0006A2  90D8               	bcf	status,0,c
  3256  0006A4  3417               	rlcf	encenderBombas@i^0,w,c
  3257  0006A6  6ED9               	movwf	fsr2l,c
  3258  0006A8  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  3259  0006AA  6EDA               	movwf	fsr2h,c
  3260  0006AC  0E00               	movlw	low _sensores
  3261  0006AE  26D9               	addwf	fsr2l,f,c
  3262  0006B0  0E01               	movlw	high _sensores
  3263  0006B2  22DA               	addwfc	fsr2h,f,c
  3264  0006B4  CFDE F010          	movff	postinc2,estaSeco@s
  3265  0006B8  CFDD F011          	movff	postdec2,estaSeco@s+1
  3266  0006BC  EC19  F016         	call	_estaSeco	;wreg free
  3267  0006C0  5010               	movf	?_estaSeco^0,w,c
  3268  0006C2  1011               	iorwf	(?_estaSeco+1)^0,w,c
  3269  0006C4  B4D8               	btfsc	status,2,c
  3270  0006C6  EF67  F003         	goto	u3191
  3271  0006CA  EF69  F003         	goto	u3190
  3272  0006CE                     u3191:
  3273  0006CE  EF59  F004         	goto	l4121
  3274  0006D2                     u3190:
  3275  0006D2                     
  3276                           ;main.c: 302:                     LATDbits.LATD0 = 1;
  3277  0006D2  808C               	bsf	140,0,c	;volatile
  3278  0006D4                     l4073:
  3279                           
  3280                           ;main.c: 303:                     flagSeco = 1;
  3281  0006D4  0E01               	movlw	1
  3282  0006D6  6E16               	movwf	encenderBombas@flagSeco^0,c
  3283  0006D8  EF59  F004         	goto	l4121
  3284  0006DC                     l4075:
  3285                           
  3286                           ;main.c: 308:                 if (estaSeco(sensores[i])) {
  3287  0006DC  90D8               	bcf	status,0,c
  3288  0006DE  3417               	rlcf	encenderBombas@i^0,w,c
  3289  0006E0  6ED9               	movwf	fsr2l,c
  3290  0006E2  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  3291  0006E4  6EDA               	movwf	fsr2h,c
  3292  0006E6  0E00               	movlw	low _sensores
  3293  0006E8  26D9               	addwf	fsr2l,f,c
  3294  0006EA  0E01               	movlw	high _sensores
  3295  0006EC  22DA               	addwfc	fsr2h,f,c
  3296  0006EE  CFDE F010          	movff	postinc2,estaSeco@s
  3297  0006F2  CFDD F011          	movff	postdec2,estaSeco@s+1
  3298  0006F6  EC19  F016         	call	_estaSeco	;wreg free
  3299  0006FA  5010               	movf	?_estaSeco^0,w,c
  3300  0006FC  1011               	iorwf	(?_estaSeco+1)^0,w,c
  3301  0006FE  B4D8               	btfsc	status,2,c
  3302  000700  EF84  F003         	goto	u3201
  3303  000704  EF86  F003         	goto	u3200
  3304  000708                     u3201:
  3305  000708  EF59  F004         	goto	l4121
  3306  00070C                     u3200:
  3307  00070C                     
  3308                           ;main.c: 309:                     LATDbits.LATD1 = 1;
  3309  00070C  828C               	bsf	140,1,c	;volatile
  3310  00070E  EF6A  F003         	goto	l4073
  3311  000712                     l4081:
  3312                           
  3313                           ;main.c: 315:                 if (estaSeco(sensores[i])) {
  3314  000712  90D8               	bcf	status,0,c
  3315  000714  3417               	rlcf	encenderBombas@i^0,w,c
  3316  000716  6ED9               	movwf	fsr2l,c
  3317  000718  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  3318  00071A  6EDA               	movwf	fsr2h,c
  3319  00071C  0E00               	movlw	low _sensores
  3320  00071E  26D9               	addwf	fsr2l,f,c
  3321  000720  0E01               	movlw	high _sensores
  3322  000722  22DA               	addwfc	fsr2h,f,c
  3323  000724  CFDE F010          	movff	postinc2,estaSeco@s
  3324  000728  CFDD F011          	movff	postdec2,estaSeco@s+1
  3325  00072C  EC19  F016         	call	_estaSeco	;wreg free
  3326  000730  5010               	movf	?_estaSeco^0,w,c
  3327  000732  1011               	iorwf	(?_estaSeco+1)^0,w,c
  3328  000734  B4D8               	btfsc	status,2,c
  3329  000736  EF9F  F003         	goto	u3211
  3330  00073A  EFA1  F003         	goto	u3210
  3331  00073E                     u3211:
  3332  00073E  EF59  F004         	goto	l4121
  3333  000742                     u3210:
  3334  000742                     
  3335                           ;main.c: 316:                     LATDbits.LATD2 = 1;
  3336  000742  848C               	bsf	140,2,c	;volatile
  3337  000744  EF6A  F003         	goto	l4073
  3338  000748                     l4087:
  3339                           
  3340                           ;main.c: 322:                 if (estaSeco(sensores[i])) {
  3341  000748  90D8               	bcf	status,0,c
  3342  00074A  3417               	rlcf	encenderBombas@i^0,w,c
  3343  00074C  6ED9               	movwf	fsr2l,c
  3344  00074E  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  3345  000750  6EDA               	movwf	fsr2h,c
  3346  000752  0E00               	movlw	low _sensores
  3347  000754  26D9               	addwf	fsr2l,f,c
  3348  000756  0E01               	movlw	high _sensores
  3349  000758  22DA               	addwfc	fsr2h,f,c
  3350  00075A  CFDE F010          	movff	postinc2,estaSeco@s
  3351  00075E  CFDD F011          	movff	postdec2,estaSeco@s+1
  3352  000762  EC19  F016         	call	_estaSeco	;wreg free
  3353  000766  5010               	movf	?_estaSeco^0,w,c
  3354  000768  1011               	iorwf	(?_estaSeco+1)^0,w,c
  3355  00076A  B4D8               	btfsc	status,2,c
  3356  00076C  EFBA  F003         	goto	u3221
  3357  000770  EFBC  F003         	goto	u3220
  3358  000774                     u3221:
  3359  000774  EF59  F004         	goto	l4121
  3360  000778                     u3220:
  3361  000778                     
  3362                           ;main.c: 323:                     LATDbits.LATD3 = 1;
  3363  000778  868C               	bsf	140,3,c	;volatile
  3364  00077A  EF6A  F003         	goto	l4073
  3365  00077E                     l4093:
  3366                           
  3367                           ;main.c: 329:                 if (estaSeco(sensores[i])) {
  3368  00077E  90D8               	bcf	status,0,c
  3369  000780  3417               	rlcf	encenderBombas@i^0,w,c
  3370  000782  6ED9               	movwf	fsr2l,c
  3371  000784  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  3372  000786  6EDA               	movwf	fsr2h,c
  3373  000788  0E00               	movlw	low _sensores
  3374  00078A  26D9               	addwf	fsr2l,f,c
  3375  00078C  0E01               	movlw	high _sensores
  3376  00078E  22DA               	addwfc	fsr2h,f,c
  3377  000790  CFDE F010          	movff	postinc2,estaSeco@s
  3378  000794  CFDD F011          	movff	postdec2,estaSeco@s+1
  3379  000798  EC19  F016         	call	_estaSeco	;wreg free
  3380  00079C  5010               	movf	?_estaSeco^0,w,c
  3381  00079E  1011               	iorwf	(?_estaSeco+1)^0,w,c
  3382  0007A0  B4D8               	btfsc	status,2,c
  3383  0007A2  EFD5  F003         	goto	u3231
  3384  0007A6  EFD7  F003         	goto	u3230
  3385  0007AA                     u3231:
  3386  0007AA  EF59  F004         	goto	l4121
  3387  0007AE                     u3230:
  3388  0007AE                     
  3389                           ;main.c: 330:                     LATDbits.LATD4 = 1;
  3390  0007AE  888C               	bsf	140,4,c	;volatile
  3391  0007B0  EF6A  F003         	goto	l4073
  3392  0007B4                     l4099:
  3393                           
  3394                           ;main.c: 336:                 if (estaSeco(sensores[i])) {
  3395  0007B4  90D8               	bcf	status,0,c
  3396  0007B6  3417               	rlcf	encenderBombas@i^0,w,c
  3397  0007B8  6ED9               	movwf	fsr2l,c
  3398  0007BA  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  3399  0007BC  6EDA               	movwf	fsr2h,c
  3400  0007BE  0E00               	movlw	low _sensores
  3401  0007C0  26D9               	addwf	fsr2l,f,c
  3402  0007C2  0E01               	movlw	high _sensores
  3403  0007C4  22DA               	addwfc	fsr2h,f,c
  3404  0007C6  CFDE F010          	movff	postinc2,estaSeco@s
  3405  0007CA  CFDD F011          	movff	postdec2,estaSeco@s+1
  3406  0007CE  EC19  F016         	call	_estaSeco	;wreg free
  3407  0007D2  5010               	movf	?_estaSeco^0,w,c
  3408  0007D4  1011               	iorwf	(?_estaSeco+1)^0,w,c
  3409  0007D6  B4D8               	btfsc	status,2,c
  3410  0007D8  EFF0  F003         	goto	u3241
  3411  0007DC  EFF2  F003         	goto	u3240
  3412  0007E0                     u3241:
  3413  0007E0  EF59  F004         	goto	l4121
  3414  0007E4                     u3240:
  3415  0007E4                     
  3416                           ;main.c: 337:                     LATDbits.LATD5 = 1;
  3417  0007E4  8A8C               	bsf	140,5,c	;volatile
  3418  0007E6  EF6A  F003         	goto	l4073
  3419  0007EA                     l4105:
  3420                           
  3421                           ;main.c: 343:                 if (estaSeco(sensores[i])) {
  3422  0007EA  90D8               	bcf	status,0,c
  3423  0007EC  3417               	rlcf	encenderBombas@i^0,w,c
  3424  0007EE  6ED9               	movwf	fsr2l,c
  3425  0007F0  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  3426  0007F2  6EDA               	movwf	fsr2h,c
  3427  0007F4  0E00               	movlw	low _sensores
  3428  0007F6  26D9               	addwf	fsr2l,f,c
  3429  0007F8  0E01               	movlw	high _sensores
  3430  0007FA  22DA               	addwfc	fsr2h,f,c
  3431  0007FC  CFDE F010          	movff	postinc2,estaSeco@s
  3432  000800  CFDD F011          	movff	postdec2,estaSeco@s+1
  3433  000804  EC19  F016         	call	_estaSeco	;wreg free
  3434  000808  5010               	movf	?_estaSeco^0,w,c
  3435  00080A  1011               	iorwf	(?_estaSeco+1)^0,w,c
  3436  00080C  B4D8               	btfsc	status,2,c
  3437  00080E  EF0B  F004         	goto	u3251
  3438  000812  EF0D  F004         	goto	u3250
  3439  000816                     u3251:
  3440  000816  EF59  F004         	goto	l4121
  3441  00081A                     u3250:
  3442  00081A                     
  3443                           ;main.c: 344:                     LATDbits.LATD6 = 1;
  3444  00081A  8C8C               	bsf	140,6,c	;volatile
  3445  00081C  EF6A  F003         	goto	l4073
  3446  000820                     l4111:
  3447                           
  3448                           ;main.c: 350:                 if (estaSeco(sensores[i])) {
  3449  000820  90D8               	bcf	status,0,c
  3450  000822  3417               	rlcf	encenderBombas@i^0,w,c
  3451  000824  6ED9               	movwf	fsr2l,c
  3452  000826  3418               	rlcf	(encenderBombas@i+1)^0,w,c
  3453  000828  6EDA               	movwf	fsr2h,c
  3454  00082A  0E00               	movlw	low _sensores
  3455  00082C  26D9               	addwf	fsr2l,f,c
  3456  00082E  0E01               	movlw	high _sensores
  3457  000830  22DA               	addwfc	fsr2h,f,c
  3458  000832  CFDE F010          	movff	postinc2,estaSeco@s
  3459  000836  CFDD F011          	movff	postdec2,estaSeco@s+1
  3460  00083A  EC19  F016         	call	_estaSeco	;wreg free
  3461  00083E  5010               	movf	?_estaSeco^0,w,c
  3462  000840  1011               	iorwf	(?_estaSeco+1)^0,w,c
  3463  000842  B4D8               	btfsc	status,2,c
  3464  000844  EF26  F004         	goto	u3261
  3465  000848  EF28  F004         	goto	u3260
  3466  00084C                     u3261:
  3467  00084C  EF59  F004         	goto	l4121
  3468  000850                     u3260:
  3469  000850                     
  3470                           ;main.c: 351:                     LATDbits.LATD7 = 1;
  3471  000850  8E8C               	bsf	140,7,c	;volatile
  3472  000852  EF6A  F003         	goto	l4073
  3473  000856                     l4119:
  3474  000856  C017  F014         	movff	encenderBombas@i,??_encenderBombas
  3475  00085A  C018  F015         	movff	encenderBombas@i+1,??_encenderBombas+1
  3476                           
  3477                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3478                           ; Switch size 1, requested type "simple"
  3479                           ; Number of cases is 1, Range of values is 0 to 0
  3480                           ; switch strategies available:
  3481                           ; Name         Instructions Cycles
  3482                           ; simple_byte            4     3 (average)
  3483                           ;	Chosen strategy is simple_byte
  3484  00085E  5015               	movf	(??_encenderBombas+1)^0,w,c
  3485  000860  0A00               	xorlw	0	; case 0
  3486  000862  B4D8               	btfsc	status,2,c
  3487  000864  EF36  F004         	goto	l4787
  3488  000868  EF59  F004         	goto	l4121
  3489  00086C                     l4787:
  3490                           
  3491                           ; Switch size 1, requested type "simple"
  3492                           ; Number of cases is 8, Range of values is 0 to 7
  3493                           ; switch strategies available:
  3494                           ; Name         Instructions Cycles
  3495                           ; simple_byte           25    13 (average)
  3496                           ;	Chosen strategy is simple_byte
  3497  00086C  5014               	movf	??_encenderBombas^0,w,c
  3498  00086E  0A00               	xorlw	0	; case 0
  3499  000870  B4D8               	btfsc	status,2,c
  3500  000872  EF51  F003         	goto	l4069
  3501  000876  0A01               	xorlw	1	; case 1
  3502  000878  B4D8               	btfsc	status,2,c
  3503  00087A  EF6E  F003         	goto	l4075
  3504  00087E  0A03               	xorlw	3	; case 2
  3505  000880  B4D8               	btfsc	status,2,c
  3506  000882  EF89  F003         	goto	l4081
  3507  000886  0A01               	xorlw	1	; case 3
  3508  000888  B4D8               	btfsc	status,2,c
  3509  00088A  EFA4  F003         	goto	l4087
  3510  00088E  0A07               	xorlw	7	; case 4
  3511  000890  B4D8               	btfsc	status,2,c
  3512  000892  EFBF  F003         	goto	l4093
  3513  000896  0A01               	xorlw	1	; case 5
  3514  000898  B4D8               	btfsc	status,2,c
  3515  00089A  EFDA  F003         	goto	l4099
  3516  00089E  0A03               	xorlw	3	; case 6
  3517  0008A0  B4D8               	btfsc	status,2,c
  3518  0008A2  EFF5  F003         	goto	l4105
  3519  0008A6  0A01               	xorlw	1	; case 7
  3520  0008A8  B4D8               	btfsc	status,2,c
  3521  0008AA  EF10  F004         	goto	l4111
  3522  0008AE  EF59  F004         	goto	l4121
  3523  0008B2                     l4121:
  3524                           
  3525                           ;main.c: 357:     }
  3526  0008B2  4A17               	infsnz	encenderBombas@i^0,f,c
  3527  0008B4  2A18               	incf	(encenderBombas@i+1)^0,f,c
  3528  0008B6  BE18               	btfsc	(encenderBombas@i+1)^0,7,c
  3529  0008B8  EF67  F004         	goto	u3271
  3530  0008BC  5018               	movf	(encenderBombas@i+1)^0,w,c
  3531  0008BE  E109               	bnz	u3270
  3532  0008C0  0E03               	movlw	3
  3533  0008C2  5C17               	subwf	encenderBombas@i^0,w,c
  3534  0008C4  A0D8               	btfss	status,0,c
  3535  0008C6  EF67  F004         	goto	u3271
  3536  0008CA  EF69  F004         	goto	u3270
  3537  0008CE                     u3271:
  3538  0008CE  EF2B  F004         	goto	l4119
  3539  0008D2                     u3270:
  3540  0008D2                     
  3541                           ;main.c: 359:     if (flagSeco) {
  3542  0008D2  5016               	movf	encenderBombas@flagSeco^0,w,c
  3543  0008D4  B4D8               	btfsc	status,2,c
  3544  0008D6  EF6F  F004         	goto	u3281
  3545  0008DA  EF71  F004         	goto	u3280
  3546  0008DE                     u3281:
  3547  0008DE  EF7E  F004         	goto	l298
  3548  0008E2                     u3280:
  3549  0008E2                     
  3550                           ;main.c: 360:         regando = 1;
  3551  0008E2  0E01               	movlw	1
  3552  0008E4  0100               	movlb	0	; () banked
  3553  0008E6  6FF2               	movwf	_regando& (0+255),b
  3554  0008E8                     
  3555                           ; BSR set to: 0
  3556                           ;main.c: 361:         horarios[hora].regado = 0;
  3557  0008E8  51FA               	movf	_hora& (0+255),w,b
  3558  0008EA  0D0C               	mullw	12
  3559  0008EC  0EEA               	movlw	low (_horarios+10)
  3560  0008EE  24F3               	addwf	243,w,c
  3561  0008F0  6ED9               	movwf	fsr2l,c
  3562  0008F2  0E06               	movlw	high (_horarios+10)
  3563  0008F4  20F4               	addwfc	prodh,w,c
  3564  0008F6  6EDA               	movwf	fsr2h,c
  3565  0008F8  0E00               	movlw	0
  3566  0008FA  6EDF               	movwf	indf2,c
  3567  0008FC                     l298:
  3568  0008FC  0012               	return		;funcret
  3569  0008FE                     __end_of_encenderBombas:
  3570                           	opt callstack 0
  3571                           
  3572 ;; *************** function _estaSeco *****************
  3573 ;; Defined at:
  3574 ;;		line 143 in file "main.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;  s               2   15[COMRAM] struct .
  3577 ;; Auto vars:     Size  Location     Type
  3578 ;;  temperatura     1   18[COMRAM] unsigned char 
  3579 ;; Return value:  Size  Location     Type
  3580 ;;                  2   15[COMRAM] int 
  3581 ;; Registers used:
  3582 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3583 ;; Tracked objects:
  3584 ;;		On entry : 0/0
  3585 ;;		On exit  : 0/0
  3586 ;;		Unchanged: 0/0
  3587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3588 ;;      Params:         2       0       0       0       0       0       0       0       0
  3589 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3590 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3591 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3592 ;;Total ram usage:        4 bytes
  3593 ;; Hardware stack levels used:    1
  3594 ;; Hardware stack levels required when called:    4
  3595 ;; This function calls:
  3596 ;;		_dameTemperaturaHumedad
  3597 ;; This function is called by:
  3598 ;;		_encenderBombas
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602                           	psect	text4
  3603  002C32                     __ptext4:
  3604                           	opt callstack 0
  3605  002C32                     _estaSeco:
  3606                           	opt callstack 24
  3607  002C32                     
  3608                           ;main.c: 144:     unsigned char temperatura;;main.c: 146:     dameTemperaturaHumedad(((v
      +                          oid*)0), &temperatura);
  3609  002C32  0E00               	movlw	0
  3610  002C34  6E04               	movwf	dameTemperaturaHumedad@Humedad^0,c
  3611  002C36  0E00               	movlw	0
  3612  002C38  6E05               	movwf	(dameTemperaturaHumedad@Humedad+1)^0,c
  3613  002C3A  0E13               	movlw	low estaSeco@temperatura
  3614  002C3C  6E06               	movwf	dameTemperaturaHumedad@Temperatura^0,c
  3615  002C3E  0E00               	movlw	high estaSeco@temperatura
  3616  002C40  6E07               	movwf	(dameTemperaturaHumedad@Temperatura+1)^0,c
  3617  002C42  ECFE  F010         	call	_dameTemperaturaHumedad	;wreg free
  3618  002C46                     
  3619                           ;main.c: 149:     return (s.porcientoHumedad < 94) && (temperatura < 34);
  3620  002C46  0E00               	movlw	0
  3621  002C48  6E12               	movwf	_estaSeco$796^0,c
  3622  002C4A  0E5E               	movlw	94
  3623  002C4C  6010               	cpfslt	estaSeco@s^0,c
  3624  002C4E  EF2B  F016         	goto	u3061
  3625  002C52  EF2D  F016         	goto	u3060
  3626  002C56                     u3061:
  3627  002C56  EF37  F016         	goto	l3925
  3628  002C5A                     u3060:
  3629  002C5A  0E22               	movlw	34
  3630  002C5C  6013               	cpfslt	estaSeco@temperatura^0,c
  3631  002C5E  EF33  F016         	goto	u3071
  3632  002C62  EF35  F016         	goto	u3070
  3633  002C66                     u3071:
  3634  002C66  EF37  F016         	goto	l3925
  3635  002C6A                     u3070:
  3636  002C6A  0E01               	movlw	1
  3637  002C6C  6E12               	movwf	_estaSeco$796^0,c
  3638  002C6E                     l3925:
  3639  002C6E  C012  F010         	movff	_estaSeco$796,?_estaSeco
  3640  002C72  6A11               	clrf	(?_estaSeco+1)^0,c
  3641  002C74  0012               	return		;funcret
  3642  002C76                     __end_of_estaSeco:
  3643                           	opt callstack 0
  3644                           
  3645 ;; *************** function _dameHoraActual *****************
  3646 ;; Defined at:
  3647 ;;		line 177 in file "main.c"
  3648 ;; Parameters:    Size  Location     Type
  3649 ;;		None
  3650 ;; Auto vars:     Size  Location     Type
  3651 ;;		None
  3652 ;; Return value:  Size  Location     Type
  3653 ;;                  1    wreg      void 
  3654 ;; Registers used:
  3655 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3656 ;; Tracked objects:
  3657 ;;		On entry : 0/0
  3658 ;;		On exit  : 0/0
  3659 ;;		Unchanged: 0/0
  3660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3661 ;;      Params:         0       0       0       0       0       0       0       0       0
  3662 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3663 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3664 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3665 ;;Total ram usage:        0 bytes
  3666 ;; Hardware stack levels used:    1
  3667 ;; Hardware stack levels required when called:    4
  3668 ;; This function calls:
  3669 ;;		_convertirDato
  3670 ;;		_leer_rtc
  3671 ;; This function is called by:
  3672 ;;		_sistemaRegado
  3673 ;; This function uses a non-reentrant model
  3674 ;;
  3675                           
  3676                           	psect	text5
  3677  002E44                     __ptext5:
  3678                           	opt callstack 0
  3679  002E44                     _dameHoraActual:
  3680                           	opt callstack 25
  3681  002E44                     
  3682                           ;main.c: 179:     segundos = convertirDato(leer_rtc(0x00));
  3683  002E44  0E00               	movlw	0
  3684  002E46  EC38  F017         	call	_leer_rtc
  3685  002E4A  EC73  F017         	call	_convertirDato
  3686  002E4E  0101               	movlb	1	; () banked
  3687  002E50  6F14               	movwf	_segundos& (0+255),b
  3688                           
  3689                           ;main.c: 180:     minutos = convertirDato(leer_rtc(0x01));
  3690  002E52  0E01               	movlw	1
  3691  002E54  EC38  F017         	call	_leer_rtc
  3692  002E58  EC73  F017         	call	_convertirDato
  3693  002E5C  0101               	movlb	1	; () banked
  3694  002E5E  6F15               	movwf	_minutos& (0+255),b
  3695                           
  3696                           ;main.c: 181:     hora = convertirDato(leer_rtc(0x02));
  3697  002E60  0E02               	movlw	2
  3698  002E62  EC38  F017         	call	_leer_rtc
  3699  002E66  EC73  F017         	call	_convertirDato
  3700  002E6A  0100               	movlb	0	; () banked
  3701  002E6C  6FFA               	movwf	_hora& (0+255),b
  3702  002E6E                     
  3703                           ; BSR set to: 0
  3704  002E6E  0012               	return		;funcret
  3705  002E70                     __end_of_dameHoraActual:
  3706                           	opt callstack 0
  3707                           
  3708 ;; *************** function _dameDiaActual *****************
  3709 ;; Defined at:
  3710 ;;		line 184 in file "main.c"
  3711 ;; Parameters:    Size  Location     Type
  3712 ;;		None
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;		None
  3715 ;; Return value:  Size  Location     Type
  3716 ;;                  1    wreg      void 
  3717 ;; Registers used:
  3718 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3719 ;; Tracked objects:
  3720 ;;		On entry : 0/0
  3721 ;;		On exit  : 0/0
  3722 ;;		Unchanged: 0/0
  3723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3724 ;;      Params:         0       0       0       0       0       0       0       0       0
  3725 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3726 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3727 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3728 ;;Total ram usage:        0 bytes
  3729 ;; Hardware stack levels used:    1
  3730 ;; Hardware stack levels required when called:    4
  3731 ;; This function calls:
  3732 ;;		_convertirDato
  3733 ;;		_leer_rtc
  3734 ;; This function is called by:
  3735 ;;		_sistemaRegado
  3736 ;; This function uses a non-reentrant model
  3737 ;;
  3738                           
  3739                           	psect	text6
  3740  002F8A                     __ptext6:
  3741                           	opt callstack 0
  3742  002F8A                     _dameDiaActual:
  3743                           	opt callstack 25
  3744  002F8A                     
  3745                           ;main.c: 186:     diaActual = convertirDato(leer_rtc(0x03));
  3746  002F8A  0E03               	movlw	3
  3747  002F8C  EC38  F017         	call	_leer_rtc
  3748  002F90  EC73  F017         	call	_convertirDato
  3749  002F94  0100               	movlb	0	; () banked
  3750  002F96  6FF9               	movwf	_diaActual& (0+255),b
  3751  002F98                     
  3752                           ; BSR set to: 0
  3753  002F98  0012               	return		;funcret
  3754  002F9A                     __end_of_dameDiaActual:
  3755                           	opt callstack 0
  3756                           
  3757 ;; *************** function _leer_rtc *****************
  3758 ;; Defined at:
  3759 ;;		line 13 in file "./RTC.h"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;  direccion       1    wreg     unsigned char 
  3762 ;; Auto vars:     Size  Location     Type
  3763 ;;  direccion       1    2[COMRAM] unsigned char 
  3764 ;;  dato            1    3[COMRAM] unsigned char 
  3765 ;; Return value:  Size  Location     Type
  3766 ;;                  1    wreg      unsigned char 
  3767 ;; Registers used:
  3768 ;;		wreg, status,2, status,0, cstack
  3769 ;; Tracked objects:
  3770 ;;		On entry : 0/0
  3771 ;;		On exit  : 0/0
  3772 ;;		Unchanged: 0/0
  3773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3774 ;;      Params:         0       0       0       0       0       0       0       0       0
  3775 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3776 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3777 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3778 ;;Total ram usage:        2 bytes
  3779 ;; Hardware stack levels used:    1
  3780 ;; Hardware stack levels required when called:    3
  3781 ;; This function calls:
  3782 ;;		_i2c_detener
  3783 ;;		_i2c_envia_dato
  3784 ;;		_i2c_inicia_com
  3785 ;;		_i2c_recibe_dato
  3786 ;;		_i2c_reinicia_com
  3787 ;; This function is called by:
  3788 ;;		_dameHoraActual
  3789 ;;		_dameDiaActual
  3790 ;; This function uses a non-reentrant model
  3791 ;;
  3792                           
  3793                           	psect	text7
  3794  002E70                     __ptext7:
  3795                           	opt callstack 0
  3796  002E70                     _leer_rtc:
  3797                           	opt callstack 25
  3798                           
  3799                           ; BSR set to: 0
  3800                           ;incstack = 0
  3801                           ;leer_rtc@direccion stored from wreg
  3802  002E70  6E03               	movwf	leer_rtc@direccion^0,c
  3803  002E72                     
  3804                           ;./RTC.h: 14:     unsigned char dato;;./RTC.h: 15:     i2c_inicia_com();
  3805  002E72  ECE7  F017         	call	_i2c_inicia_com	;wreg free
  3806                           
  3807                           ;./RTC.h: 16:     i2c_envia_dato(0xD0);
  3808  002E76  0ED0               	movlw	208
  3809  002E78  ECCD  F017         	call	_i2c_envia_dato
  3810                           
  3811                           ;./RTC.h: 17:     i2c_envia_dato(direccion);
  3812  002E7C  5003               	movf	leer_rtc@direccion^0,w,c
  3813  002E7E  ECCD  F017         	call	_i2c_envia_dato
  3814                           
  3815                           ;./RTC.h: 18:     i2c_reinicia_com();
  3816  002E82  ECE3  F017         	call	_i2c_reinicia_com	;wreg free
  3817                           
  3818                           ;./RTC.h: 19:     i2c_envia_dato(0xD1);
  3819  002E86  0ED1               	movlw	209
  3820  002E88  ECCD  F017         	call	_i2c_envia_dato
  3821                           
  3822                           ;./RTC.h: 20:     dato = i2c_recibe_dato();
  3823  002E8C  ECA2  F017         	call	_i2c_recibe_dato	;wreg free
  3824  002E90  6E04               	movwf	leer_rtc@dato^0,c
  3825                           
  3826                           ;./RTC.h: 21:     i2c_detener();
  3827  002E92  ECEB  F017         	call	_i2c_detener	;wreg free
  3828  002E96                     
  3829                           ;./RTC.h: 22:     return dato;
  3830  002E96  5004               	movf	leer_rtc@dato^0,w,c
  3831  002E98  0012               	return		;funcret
  3832  002E9A                     __end_of_leer_rtc:
  3833                           	opt callstack 0
  3834                           
  3835 ;; *************** function _convertirDato *****************
  3836 ;; Defined at:
  3837 ;;		line 28 in file "./RTC.h"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;  dato            1    wreg     unsigned char 
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;  dato            1    1[COMRAM] unsigned char 
  3842 ;;  datoR           1    2[COMRAM] unsigned char 
  3843 ;; Return value:  Size  Location     Type
  3844 ;;                  1    wreg      unsigned char 
  3845 ;; Registers used:
  3846 ;;		wreg, status,2, status,0, prodl, prodh
  3847 ;; Tracked objects:
  3848 ;;		On entry : 0/0
  3849 ;;		On exit  : 0/0
  3850 ;;		Unchanged: 0/0
  3851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3852 ;;      Params:         0       0       0       0       0       0       0       0       0
  3853 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3854 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3855 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3856 ;;Total ram usage:        3 bytes
  3857 ;; Hardware stack levels used:    1
  3858 ;; Hardware stack levels required when called:    1
  3859 ;; This function calls:
  3860 ;;		Nothing
  3861 ;; This function is called by:
  3862 ;;		_dameHoraActual
  3863 ;;		_dameDiaActual
  3864 ;; This function uses a non-reentrant model
  3865 ;;
  3866                           
  3867                           	psect	text8
  3868  002EE6                     __ptext8:
  3869                           	opt callstack 0
  3870  002EE6                     _convertirDato:
  3871                           	opt callstack 27
  3872                           
  3873                           ;incstack = 0
  3874                           ;convertirDato@dato stored from wreg
  3875  002EE6  6E02               	movwf	convertirDato@dato^0,c
  3876  002EE8                     
  3877                           ;./RTC.h: 30:     datoR = (dato & 0xF0) >> 4;
  3878  002EE8  3802               	swapf	convertirDato@dato^0,w,c
  3879  002EEA  0B0F               	andlw	15
  3880  002EEC  0B0F               	andlw	15
  3881  002EEE  6E03               	movwf	convertirDato@datoR^0,c
  3882  002EF0                     
  3883                           ;./RTC.h: 31:     datoR = (datoR * 10) + (dato & 0x0F);
  3884  002EF0  C002  F001         	movff	convertirDato@dato,??_convertirDato
  3885  002EF4  0E0F               	movlw	15
  3886  002EF6  1601               	andwf	??_convertirDato^0,f,c
  3887  002EF8  5003               	movf	convertirDato@datoR^0,w,c
  3888  002EFA  0D0A               	mullw	10
  3889  002EFC  50F3               	movf	243,w,c
  3890  002EFE  2401               	addwf	??_convertirDato^0,w,c
  3891  002F00  6E03               	movwf	convertirDato@datoR^0,c
  3892  002F02                     
  3893                           ;./RTC.h: 32:     return datoR;
  3894  002F02  5003               	movf	convertirDato@datoR^0,w,c
  3895  002F04  0012               	return		;funcret
  3896  002F06                     __end_of_convertirDato:
  3897                           	opt callstack 0
  3898                           
  3899 ;; *************** function _sistemaPrincipal *****************
  3900 ;; Defined at:
  3901 ;;		line 553 in file "main.c"
  3902 ;; Parameters:    Size  Location     Type
  3903 ;;  opcion          1    wreg     unsigned char 
  3904 ;; Auto vars:     Size  Location     Type
  3905 ;;  opcion          1  138[BANK0 ] unsigned char 
  3906 ;; Return value:  Size  Location     Type
  3907 ;;                  1    wreg      void 
  3908 ;; Registers used:
  3909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3910 ;; Tracked objects:
  3911 ;;		On entry : 0/0
  3912 ;;		On exit  : 0/0
  3913 ;;		Unchanged: 0/0
  3914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3915 ;;      Params:         0       0       0       0       0       0       0       0       0
  3916 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3917 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3918 ;;      Totals:         0       3       0       0       0       0       0       0       0
  3919 ;;Total ram usage:        3 bytes
  3920 ;; Hardware stack levels used:    1
  3921 ;; Hardware stack levels required when called:   11
  3922 ;; This function calls:
  3923 ;;		_UART_printf
  3924 ;;		_asignarHorarios
  3925 ;;		_dameDatosSistema
  3926 ;;		_fijaDiaRtc
  3927 ;;		_fijaHoraRtc
  3928 ;;		_mostrarDatosSensores
  3929 ;;		_mostrarDatosSensoresWIFI
  3930 ;;		_mostrarMenu
  3931 ;;		_regadoRapido
  3932 ;;		_setTiempoRegar
  3933 ;; This function is called by:
  3934 ;;		_main
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           	psect	text9
  3939  001FAC                     __ptext9:
  3940                           	opt callstack 0
  3941  001FAC                     _sistemaPrincipal:
  3942                           	opt callstack 19
  3943                           
  3944                           ;incstack = 0
  3945                           ;sistemaPrincipal@opcion stored from wreg
  3946  001FAC  0100               	movlb	0	; () banked
  3947  001FAE  6FEA               	movwf	sistemaPrincipal@opcion& (0+255),b
  3948  001FB0                     
  3949                           ;main.c: 555:     PIE1bits.RCIE = 0;
  3950  001FB0  9A9D               	bcf	157,5,c	;volatile
  3951                           
  3952                           ;main.c: 557:     switch (opcion) {
  3953  001FB2  EF0B  F010         	goto	l4475
  3954  001FB6                     l4453:
  3955                           
  3956                           ; BSR set to: 0
  3957                           ;main.c: 560:             fijaHoraRtc();
  3958  001FB6  EC04  F014         	call	_fijaHoraRtc	;wreg free
  3959                           
  3960                           ;main.c: 561:             break;
  3961  001FBA  EF35  F010         	goto	l4477
  3962  001FBE                     l4455:
  3963                           
  3964                           ; BSR set to: 0
  3965                           ;main.c: 564:             asignarHorarios();
  3966  001FBE  ECFF  F00A         	call	_asignarHorarios	;wreg free
  3967                           
  3968                           ;main.c: 565:             break;
  3969  001FC2  EF35  F010         	goto	l4477
  3970  001FC6                     l4457:
  3971                           
  3972                           ; BSR set to: 0
  3973                           ;main.c: 568:             setTiempoRegar();
  3974  001FC6  EC06  F012         	call	_setTiempoRegar	;wreg free
  3975                           
  3976                           ;main.c: 569:             break;
  3977  001FCA  EF35  F010         	goto	l4477
  3978  001FCE                     l4459:
  3979                           
  3980                           ; BSR set to: 0
  3981                           ;main.c: 572:             dameDatosSistema();
  3982  001FCE  EC91  F005         	call	_dameDatosSistema	;wreg free
  3983                           
  3984                           ;main.c: 573:             break;
  3985  001FD2  EF35  F010         	goto	l4477
  3986  001FD6                     l4461:
  3987                           
  3988                           ; BSR set to: 0
  3989                           ;main.c: 576:             if (MODO_COMUNICACION)
  3990  001FD6  51FB               	movf	_MODO_COMUNICACION& (0+255),w,b
  3991  001FD8  B4D8               	btfsc	status,2,c
  3992  001FDA  EFF1  F00F         	goto	u3511
  3993  001FDE  EFF3  F00F         	goto	u3510
  3994  001FE2                     u3511:
  3995  001FE2  EFF7  F00F         	goto	l4465
  3996  001FE6                     u3510:
  3997  001FE6                     
  3998                           ; BSR set to: 0
  3999                           ;main.c: 577:                 mostrarDatosSensoresWIFI();
  4000  001FE6  EC03  F00E         	call	_mostrarDatosSensoresWIFI	;wreg free
  4001  001FEA  EF35  F010         	goto	l4477
  4002  001FEE                     l4465:
  4003                           
  4004                           ; BSR set to: 0
  4005                           ;main.c: 579:                 mostrarDatosSensores();
  4006  001FEE  ECFA  F00E         	call	_mostrarDatosSensores	;wreg free
  4007  001FF2  EF35  F010         	goto	l4477
  4008  001FF6                     l4467:
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;main.c: 583:             regadoRapido();
  4012  001FF6  ECE2  F00C         	call	_regadoRapido	;wreg free
  4013                           
  4014                           ;main.c: 584:             break;
  4015  001FFA  EF35  F010         	goto	l4477
  4016  001FFE                     l4469:
  4017                           
  4018                           ; BSR set to: 0
  4019                           ;main.c: 587:             fijaDiaRtc();
  4020  001FFE  ECF2  F016         	call	_fijaDiaRtc	;wreg free
  4021                           
  4022                           ;main.c: 588:             break;
  4023  002002  EF35  F010         	goto	l4477
  4024  002006                     l4471:
  4025                           
  4026                           ; BSR set to: 0
  4027                           ;main.c: 591:             UART_printf("\r\n Solo se permiten numeros del 1 al 3 \r\n");
  4028  002006  0EDE               	movlw	low STR_31
  4029  002008  6E02               	movwf	UART_printf@cadena^0,c
  4030  00200A  0E7C               	movlw	high STR_31
  4031  00200C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4032  00200E  EC9A  F014         	call	_UART_printf	;wreg free
  4033                           
  4034                           ;main.c: 592:             break;
  4035  002012  EF35  F010         	goto	l4477
  4036  002016                     l4475:
  4037  002016  0100               	movlb	0	; () banked
  4038  002018  51EA               	movf	sistemaPrincipal@opcion& (0+255),w,b
  4039  00201A  6FE8               	movwf	??_sistemaPrincipal& (0+255),b
  4040  00201C  6BE9               	clrf	(??_sistemaPrincipal+1)& (0+255),b
  4041                           
  4042                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4043                           ; Switch size 1, requested type "simple"
  4044                           ; Number of cases is 1, Range of values is 0 to 0
  4045                           ; switch strategies available:
  4046                           ; Name         Instructions Cycles
  4047                           ; simple_byte            4     3 (average)
  4048                           ;	Chosen strategy is simple_byte
  4049  00201E  51E9               	movf	(??_sistemaPrincipal+1)& (0+255),w,b
  4050  002020  0A00               	xorlw	0	; case 0
  4051  002022  B4D8               	btfsc	status,2,c
  4052  002024  EF16  F010         	goto	l4789
  4053  002028  EF03  F010         	goto	l4471
  4054  00202C                     l4789:
  4055                           
  4056                           ; BSR set to: 0
  4057                           ; Switch size 1, requested type "simple"
  4058                           ; Number of cases is 7, Range of values is 1 to 7
  4059                           ; switch strategies available:
  4060                           ; Name         Instructions Cycles
  4061                           ; simple_byte           22    12 (average)
  4062                           ;	Chosen strategy is simple_byte
  4063  00202C  51E8               	movf	??_sistemaPrincipal& (0+255),w,b
  4064  00202E  0A01               	xorlw	1	; case 1
  4065  002030  B4D8               	btfsc	status,2,c
  4066  002032  EFDB  F00F         	goto	l4453
  4067  002036  0A03               	xorlw	3	; case 2
  4068  002038  B4D8               	btfsc	status,2,c
  4069  00203A  EFDF  F00F         	goto	l4455
  4070  00203E  0A01               	xorlw	1	; case 3
  4071  002040  B4D8               	btfsc	status,2,c
  4072  002042  EFE3  F00F         	goto	l4457
  4073  002046  0A07               	xorlw	7	; case 4
  4074  002048  B4D8               	btfsc	status,2,c
  4075  00204A  EFE7  F00F         	goto	l4459
  4076  00204E  0A01               	xorlw	1	; case 5
  4077  002050  B4D8               	btfsc	status,2,c
  4078  002052  EFEB  F00F         	goto	l4461
  4079  002056  0A03               	xorlw	3	; case 6
  4080  002058  B4D8               	btfsc	status,2,c
  4081  00205A  EFFB  F00F         	goto	l4467
  4082  00205E  0A01               	xorlw	1	; case 7
  4083  002060  B4D8               	btfsc	status,2,c
  4084  002062  EFFF  F00F         	goto	l4469
  4085  002066  EF03  F010         	goto	l4471
  4086  00206A                     l4477:
  4087                           
  4088                           ;main.c: 595:     mostrarMenu();
  4089  00206A  ECE5  F012         	call	_mostrarMenu	;wreg free
  4090  00206E                     
  4091                           ;main.c: 596:     PIE1bits.RCIE = 1;
  4092  00206E  8A9D               	bsf	157,5,c	;volatile
  4093  002070  0012               	return		;funcret
  4094  002072                     __end_of_sistemaPrincipal:
  4095                           	opt callstack 0
  4096                           
  4097 ;; *************** function _setTiempoRegar *****************
  4098 ;; Defined at:
  4099 ;;		line 434 in file "main.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;		None
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;  hora            1   19[COMRAM] unsigned char 
  4104 ;;  tiempoRegar     1   18[COMRAM] unsigned char 
  4105 ;; Return value:  Size  Location     Type
  4106 ;;                  1    wreg      void 
  4107 ;; Registers used:
  4108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4109 ;; Tracked objects:
  4110 ;;		On entry : 0/0
  4111 ;;		On exit  : 0/0
  4112 ;;		Unchanged: 0/0
  4113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4114 ;;      Params:         0       0       0       0       0       0       0       0       0
  4115 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4116 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4117 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4118 ;;Total ram usage:        2 bytes
  4119 ;; Hardware stack levels used:    1
  4120 ;; Hardware stack levels required when called:    5
  4121 ;; This function calls:
  4122 ;;		_UART_printf
  4123 ;;		_escribeHorariosMemoria
  4124 ;;		_getValue
  4125 ;; This function is called by:
  4126 ;;		_sistemaPrincipal
  4127 ;; This function uses a non-reentrant model
  4128 ;;
  4129                           
  4130                           	psect	text10
  4131  00240C                     __ptext10:
  4132                           	opt callstack 0
  4133  00240C                     _setTiempoRegar:
  4134                           	opt callstack 24
  4135  00240C                     
  4136                           ;main.c: 436:     unsigned char hora;;main.c: 437:     unsigned char tiempoRegar;;main.c
      +                          : 439:     UART_printf("\r\n TIEMPO DE REGADO \r\n");
  4137  00240C  0E4A               	movlw	low STR_14
  4138  00240E  6E02               	movwf	UART_printf@cadena^0,c
  4139  002410  0E7F               	movlw	high STR_14
  4140  002412  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4141  002414  EC9A  F014         	call	_UART_printf	;wreg free
  4142                           
  4143                           ;main.c: 441:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  4144  002418  0EEF               	movlw	low STR_8
  4145  00241A  6E02               	movwf	UART_printf@cadena^0,c
  4146  00241C  0E7B               	movlw	high STR_8
  4147  00241E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4148  002420  EC9A  F014         	call	_UART_printf	;wreg free
  4149  002424                     
  4150                           ;main.c: 442:     hora = getValue(2);
  4151  002424  0E00               	movlw	0
  4152  002426  6E05               	movwf	(getValue@numCharacters+1)^0,c
  4153  002428  0E02               	movlw	2
  4154  00242A  6E04               	movwf	getValue@numCharacters^0,c
  4155  00242C  EC7F  F004         	call	_getValue	;wreg free
  4156  002430  6E14               	movwf	setTiempoRegar@hora^0,c
  4157  002432                     
  4158                           ;main.c: 444:     if (hora != 'F') {
  4159  002432  0E46               	movlw	70
  4160  002434  1814               	xorwf	setTiempoRegar@hora^0,w,c
  4161  002436  B4D8               	btfsc	status,2,c
  4162  002438  EF20  F012         	goto	u3351
  4163  00243C  EF22  F012         	goto	u3350
  4164  002440                     u3351:
  4165  002440  EF55  F012         	goto	l316
  4166  002444                     u3350:
  4167  002444                     
  4168                           ;main.c: 446:         UART_printf("\r\n Ingrese los minutos que desee que se riegue en e
      +                          se horario ej: 15 \r\n");
  4169  002444  0ED5               	movlw	low STR_16
  4170  002446  6E02               	movwf	UART_printf@cadena^0,c
  4171  002448  0E79               	movlw	high STR_16
  4172  00244A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4173  00244C  EC9A  F014         	call	_UART_printf	;wreg free
  4174  002450                     
  4175                           ;main.c: 447:         tiempoRegar = getValue(2);
  4176  002450  0E00               	movlw	0
  4177  002452  6E05               	movwf	(getValue@numCharacters+1)^0,c
  4178  002454  0E02               	movlw	2
  4179  002456  6E04               	movwf	getValue@numCharacters^0,c
  4180  002458  EC7F  F004         	call	_getValue	;wreg free
  4181  00245C  6E13               	movwf	setTiempoRegar@tiempoRegar^0,c
  4182  00245E                     
  4183                           ;main.c: 449:         if (tiempoRegar != 'F') {
  4184  00245E  0E46               	movlw	70
  4185  002460  1813               	xorwf	setTiempoRegar@tiempoRegar^0,w,c
  4186  002462  B4D8               	btfsc	status,2,c
  4187  002464  EF36  F012         	goto	u3361
  4188  002468  EF38  F012         	goto	u3360
  4189  00246C                     u3361:
  4190  00246C  EF55  F012         	goto	l316
  4191  002470                     u3360:
  4192  002470                     
  4193                           ;main.c: 453:             UART_printf("\r\n Minutos de riego establecidos! \r\n");
  4194  002470  0E2E               	movlw	low STR_17
  4195  002472  6E02               	movwf	UART_printf@cadena^0,c
  4196  002474  0E7D               	movlw	high STR_17
  4197  002476  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4198  002478  EC9A  F014         	call	_UART_printf	;wreg free
  4199  00247C                     
  4200                           ;main.c: 455:             horarios[hora].tiempoRegar = tiempoRegar;
  4201  00247C  5014               	movf	setTiempoRegar@hora^0,w,c
  4202  00247E  0D0C               	mullw	12
  4203  002480  0EEB               	movlw	low (_horarios+11)
  4204  002482  24F3               	addwf	243,w,c
  4205  002484  6ED9               	movwf	fsr2l,c
  4206  002486  0E06               	movlw	high (_horarios+11)
  4207  002488  20F4               	addwfc	prodh,w,c
  4208  00248A  6EDA               	movwf	fsr2h,c
  4209  00248C  C013  FFDF         	movff	setTiempoRegar@tiempoRegar,indf2
  4210  002490                     
  4211                           ;main.c: 456:             minutosRegar = horarios[hora].tiempoRegar;
  4212  002490  5014               	movf	setTiempoRegar@hora^0,w,c
  4213  002492  0D0C               	mullw	12
  4214  002494  0EEB               	movlw	low (_horarios+11)
  4215  002496  24F3               	addwf	243,w,c
  4216  002498  6ED9               	movwf	fsr2l,c
  4217  00249A  0E06               	movlw	high (_horarios+11)
  4218  00249C  20F4               	addwfc	prodh,w,c
  4219  00249E  6EDA               	movwf	fsr2h,c
  4220  0024A0  50DF               	movf	indf2,w,c
  4221  0024A2  0100               	movlb	0	; () banked
  4222  0024A4  6FF4               	movwf	_minutosRegar& (0+255),b
  4223  0024A6                     
  4224                           ; BSR set to: 0
  4225                           ;main.c: 458:             escribeHorariosMemoria();
  4226  0024A6  ECA4  F00B         	call	_escribeHorariosMemoria	;wreg free
  4227  0024AA                     l316:
  4228  0024AA  0012               	return		;funcret
  4229  0024AC                     __end_of_setTiempoRegar:
  4230                           	opt callstack 0
  4231                           
  4232 ;; *************** function _regadoRapido *****************
  4233 ;; Defined at:
  4234 ;;		line 908 in file "main.c"
  4235 ;; Parameters:    Size  Location     Type
  4236 ;;		None
  4237 ;; Auto vars:     Size  Location     Type
  4238 ;;  areaRegar       1   17[COMRAM] unsigned char 
  4239 ;;  tiempoRegar     1   16[COMRAM] unsigned char 
  4240 ;; Return value:  Size  Location     Type
  4241 ;;                  1    wreg      void 
  4242 ;; Registers used:
  4243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4244 ;; Tracked objects:
  4245 ;;		On entry : 0/0
  4246 ;;		On exit  : 0/0
  4247 ;;		Unchanged: 0/0
  4248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4249 ;;      Params:         0       0       0       0       0       0       0       0       0
  4250 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4251 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4252 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4253 ;;Total ram usage:        4 bytes
  4254 ;; Hardware stack levels used:    1
  4255 ;; Hardware stack levels required when called:    4
  4256 ;; This function calls:
  4257 ;;		_UART_printf
  4258 ;;		_getValue
  4259 ;; This function is called by:
  4260 ;;		_sistemaPrincipal
  4261 ;; This function uses a non-reentrant model
  4262 ;;
  4263                           
  4264                           	psect	text11
  4265  0019C4                     __ptext11:
  4266                           	opt callstack 0
  4267  0019C4                     _regadoRapido:
  4268                           	opt callstack 25
  4269  0019C4                     
  4270                           ;main.c: 910:     unsigned char tiempoRegar;;main.c: 911:     unsigned char areaRegar;;m
      +                          ain.c: 913:     UART_printf("\r\n REGADO RAPIDO \r\n");
  4271  0019C4  0E8D               	movlw	low STR_47
  4272  0019C6  6E02               	movwf	UART_printf@cadena^0,c
  4273  0019C8  0E7F               	movlw	high STR_47
  4274  0019CA  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4275  0019CC  EC9A  F014         	call	_UART_printf	;wreg free
  4276  0019D0                     
  4277                           ;main.c: 915:     if (!regando) {
  4278  0019D0  0100               	movlb	0	; () banked
  4279  0019D2  51F2               	movf	_regando& (0+255),w,b
  4280  0019D4  A4D8               	btfss	status,2,c
  4281  0019D6  EFEF  F00C         	goto	u3431
  4282  0019DA  EFF1  F00C         	goto	u3430
  4283  0019DE                     u3431:
  4284  0019DE  EF76  F00D         	goto	l4347
  4285  0019E2                     u3430:
  4286  0019E2                     
  4287                           ; BSR set to: 0
  4288                           ;main.c: 916:         UART_printf("\r\n Ingrese los minutos que desee que se riegue ej: 
      +                          15 \r\n");
  4289  0019E2  0E4A               	movlw	low STR_48
  4290  0019E4  6E02               	movwf	UART_printf@cadena^0,c
  4291  0019E6  0E7B               	movlw	high STR_48
  4292  0019E8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4293  0019EA  EC9A  F014         	call	_UART_printf	;wreg free
  4294  0019EE                     
  4295                           ;main.c: 917:         tiempoRegar = getValue(2);
  4296  0019EE  0E00               	movlw	0
  4297  0019F0  6E05               	movwf	(getValue@numCharacters+1)^0,c
  4298  0019F2  0E02               	movlw	2
  4299  0019F4  6E04               	movwf	getValue@numCharacters^0,c
  4300  0019F6  EC7F  F004         	call	_getValue	;wreg free
  4301  0019FA  6E11               	movwf	regadoRapido@tiempoRegar^0,c
  4302  0019FC                     
  4303                           ;main.c: 919:         if (tiempoRegar != 'F') {
  4304  0019FC  0E46               	movlw	70
  4305  0019FE  1811               	xorwf	regadoRapido@tiempoRegar^0,w,c
  4306  001A00  B4D8               	btfsc	status,2,c
  4307  001A02  EF05  F00D         	goto	u3441
  4308  001A06  EF07  F00D         	goto	u3440
  4309  001A0A                     u3441:
  4310  001A0A  EF7C  F00D         	goto	l459
  4311  001A0E                     u3440:
  4312  001A0E                     
  4313                           ;main.c: 921:             UART_printf("\r\n Ingrese el numero de sensor del area a regar
      +                           ej: 5 \r\n");
  4314  001A0E  0E11               	movlw	low STR_49
  4315  001A10  6E02               	movwf	UART_printf@cadena^0,c
  4316  001A12  0E7B               	movlw	high STR_49
  4317  001A14  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4318  001A16  EC9A  F014         	call	_UART_printf	;wreg free
  4319  001A1A                     
  4320                           ;main.c: 922:             areaRegar = getValue(1);
  4321  001A1A  0E00               	movlw	0
  4322  001A1C  6E05               	movwf	(getValue@numCharacters+1)^0,c
  4323  001A1E  0E01               	movlw	1
  4324  001A20  6E04               	movwf	getValue@numCharacters^0,c
  4325  001A22  EC7F  F004         	call	_getValue	;wreg free
  4326  001A26  6E12               	movwf	regadoRapido@areaRegar^0,c
  4327  001A28                     
  4328                           ;main.c: 924:             if (areaRegar != 'F') {
  4329  001A28  0E46               	movlw	70
  4330  001A2A  1812               	xorwf	regadoRapido@areaRegar^0,w,c
  4331  001A2C  B4D8               	btfsc	status,2,c
  4332  001A2E  EF1B  F00D         	goto	u3451
  4333  001A32  EF1D  F00D         	goto	u3450
  4334  001A36                     u3451:
  4335  001A36  EF7C  F00D         	goto	l459
  4336  001A3A                     u3450:
  4337  001A3A                     
  4338                           ;main.c: 926:                 areaRegar--;
  4339  001A3A  0612               	decf	regadoRapido@areaRegar^0,f,c
  4340                           
  4341                           ;main.c: 928:                 switch (areaRegar) {
  4342  001A3C  EF38  F00D         	goto	l4339
  4343  001A40                     l449:
  4344                           
  4345                           ;main.c: 931:                         LATDbits.LATD0 = 1;
  4346  001A40  808C               	bsf	140,0,c	;volatile
  4347                           
  4348                           ;main.c: 932:                         break;
  4349  001A42  EF65  F00D         	goto	l4341
  4350  001A46                     l451:
  4351                           
  4352                           ;main.c: 935:                         LATDbits.LATD1 = 1;
  4353  001A46  828C               	bsf	140,1,c	;volatile
  4354                           
  4355                           ;main.c: 936:                         break;
  4356  001A48  EF65  F00D         	goto	l4341
  4357  001A4C                     l452:
  4358                           
  4359                           ;main.c: 939:                         LATDbits.LATD2 = 1;
  4360  001A4C  848C               	bsf	140,2,c	;volatile
  4361                           
  4362                           ;main.c: 940:                         break;
  4363  001A4E  EF65  F00D         	goto	l4341
  4364  001A52                     l453:
  4365                           
  4366                           ;main.c: 943:                         LATDbits.LATD3 = 1;
  4367  001A52  868C               	bsf	140,3,c	;volatile
  4368                           
  4369                           ;main.c: 944:                         break;
  4370  001A54  EF65  F00D         	goto	l4341
  4371  001A58                     l454:
  4372                           
  4373                           ;main.c: 947:                         LATDbits.LATD4 = 1;
  4374  001A58  888C               	bsf	140,4,c	;volatile
  4375                           
  4376                           ;main.c: 948:                         break;
  4377  001A5A  EF65  F00D         	goto	l4341
  4378  001A5E                     l455:
  4379                           
  4380                           ;main.c: 951:                         LATDbits.LATD5 = 1;
  4381  001A5E  8A8C               	bsf	140,5,c	;volatile
  4382                           
  4383                           ;main.c: 952:                         break;
  4384  001A60  EF65  F00D         	goto	l4341
  4385  001A64                     l456:
  4386                           
  4387                           ;main.c: 955:                         LATDbits.LATD6 = 1;
  4388  001A64  8C8C               	bsf	140,6,c	;volatile
  4389                           
  4390                           ;main.c: 956:                         break;
  4391  001A66  EF65  F00D         	goto	l4341
  4392  001A6A                     l457:
  4393                           
  4394                           ;main.c: 959:                         LATDbits.LATD7 = 1;
  4395  001A6A  8E8C               	bsf	140,7,c	;volatile
  4396                           
  4397                           ;main.c: 960:                         break;
  4398  001A6C  EF65  F00D         	goto	l4341
  4399  001A70                     l4339:
  4400  001A70  5012               	movf	regadoRapido@areaRegar^0,w,c
  4401  001A72  6E0F               	movwf	??_regadoRapido^0,c
  4402  001A74  6A10               	clrf	(??_regadoRapido+1)^0,c
  4403                           
  4404                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4405                           ; Switch size 1, requested type "simple"
  4406                           ; Number of cases is 1, Range of values is 0 to 0
  4407                           ; switch strategies available:
  4408                           ; Name         Instructions Cycles
  4409                           ; simple_byte            4     3 (average)
  4410                           ;	Chosen strategy is simple_byte
  4411  001A76  5010               	movf	(??_regadoRapido+1)^0,w,c
  4412  001A78  0A00               	xorlw	0	; case 0
  4413  001A7A  B4D8               	btfsc	status,2,c
  4414  001A7C  EF42  F00D         	goto	l4791
  4415  001A80  EF65  F00D         	goto	l4341
  4416  001A84                     l4791:
  4417                           
  4418                           ; Switch size 1, requested type "simple"
  4419                           ; Number of cases is 8, Range of values is 0 to 7
  4420                           ; switch strategies available:
  4421                           ; Name         Instructions Cycles
  4422                           ; simple_byte           25    13 (average)
  4423                           ;	Chosen strategy is simple_byte
  4424  001A84  500F               	movf	??_regadoRapido^0,w,c
  4425  001A86  0A00               	xorlw	0	; case 0
  4426  001A88  B4D8               	btfsc	status,2,c
  4427  001A8A  EF20  F00D         	goto	l449
  4428  001A8E  0A01               	xorlw	1	; case 1
  4429  001A90  B4D8               	btfsc	status,2,c
  4430  001A92  EF23  F00D         	goto	l451
  4431  001A96  0A03               	xorlw	3	; case 2
  4432  001A98  B4D8               	btfsc	status,2,c
  4433  001A9A  EF26  F00D         	goto	l452
  4434  001A9E  0A01               	xorlw	1	; case 3
  4435  001AA0  B4D8               	btfsc	status,2,c
  4436  001AA2  EF29  F00D         	goto	l453
  4437  001AA6  0A07               	xorlw	7	; case 4
  4438  001AA8  B4D8               	btfsc	status,2,c
  4439  001AAA  EF2C  F00D         	goto	l454
  4440  001AAE  0A01               	xorlw	1	; case 5
  4441  001AB0  B4D8               	btfsc	status,2,c
  4442  001AB2  EF2F  F00D         	goto	l455
  4443  001AB6  0A03               	xorlw	3	; case 6
  4444  001AB8  B4D8               	btfsc	status,2,c
  4445  001ABA  EF32  F00D         	goto	l456
  4446  001ABE  0A01               	xorlw	1	; case 7
  4447  001AC0  B4D8               	btfsc	status,2,c
  4448  001AC2  EF35  F00D         	goto	l457
  4449  001AC6  EF65  F00D         	goto	l4341
  4450  001ACA                     l4341:
  4451                           
  4452                           ;main.c: 964:                 regando = 1;
  4453  001ACA  0E01               	movlw	1
  4454  001ACC  0100               	movlb	0	; () banked
  4455  001ACE  6FF2               	movwf	_regando& (0+255),b
  4456  001AD0                     
  4457                           ; BSR set to: 0
  4458                           ;main.c: 965:                 horarios[hora].regado = 0;
  4459  001AD0  51FA               	movf	_hora& (0+255),w,b
  4460  001AD2  0D0C               	mullw	12
  4461  001AD4  0EEA               	movlw	low (_horarios+10)
  4462  001AD6  24F3               	addwf	243,w,c
  4463  001AD8  6ED9               	movwf	fsr2l,c
  4464  001ADA  0E06               	movlw	high (_horarios+10)
  4465  001ADC  20F4               	addwfc	prodh,w,c
  4466  001ADE  6EDA               	movwf	fsr2h,c
  4467  001AE0  0E00               	movlw	0
  4468  001AE2  6EDF               	movwf	indf2,c
  4469  001AE4                     
  4470                           ; BSR set to: 0
  4471                           ;main.c: 966:                 minutosRegar = tiempoRegar;
  4472  001AE4  C011  F0F4         	movff	regadoRapido@tiempoRegar,_minutosRegar
  4473  001AE8  EF7C  F00D         	goto	l459
  4474  001AEC                     l4347:
  4475                           
  4476                           ; BSR set to: 0
  4477                           ;main.c: 973:         UART_printf("\r\n Ya se esta efectuando un riego, intentelo mas ta
      +                          rde \r\n");
  4478  001AEC  0ED7               	movlw	low STR_50
  4479  001AEE  6E02               	movwf	UART_printf@cadena^0,c
  4480  001AF0  0E7A               	movlw	high STR_50
  4481  001AF2  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4482  001AF4  EC9A  F014         	call	_UART_printf	;wreg free
  4483  001AF8                     l459:
  4484  001AF8  0012               	return		;funcret
  4485  001AFA                     __end_of_regadoRapido:
  4486                           	opt callstack 0
  4487                           
  4488 ;; *************** function _mostrarMenu *****************
  4489 ;; Defined at:
  4490 ;;		line 539 in file "main.c"
  4491 ;; Parameters:    Size  Location     Type
  4492 ;;		None
  4493 ;; Auto vars:     Size  Location     Type
  4494 ;;		None
  4495 ;; Return value:  Size  Location     Type
  4496 ;;                  1    wreg      void 
  4497 ;; Registers used:
  4498 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4499 ;; Tracked objects:
  4500 ;;		On entry : 0/0
  4501 ;;		On exit  : 0/0
  4502 ;;		Unchanged: 0/0
  4503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4504 ;;      Params:         0       0       0       0       0       0       0       0       0
  4505 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4506 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4507 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4508 ;;Total ram usage:        0 bytes
  4509 ;; Hardware stack levels used:    1
  4510 ;; Hardware stack levels required when called:    3
  4511 ;; This function calls:
  4512 ;;		_UART_printf
  4513 ;; This function is called by:
  4514 ;;		_sistemaPrincipal
  4515 ;;		_sistemaRegado
  4516 ;;		_main
  4517 ;; This function uses a non-reentrant model
  4518 ;;
  4519                           
  4520                           	psect	text12
  4521  0025CA                     __ptext12:
  4522                           	opt callstack 0
  4523  0025CA                     _mostrarMenu:
  4524                           	opt callstack 26
  4525  0025CA                     
  4526                           ;main.c: 541:     UART_printf("\r\n Ingresa una opcion a Realizar: \r\n");
  4527  0025CA  0E53               	movlw	low STR_21
  4528  0025CC  6E02               	movwf	UART_printf@cadena^0,c
  4529  0025CE  0E7D               	movlw	high STR_21
  4530  0025D0  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4531  0025D2  EC9A  F014         	call	_UART_printf	;wreg free
  4532                           
  4533                           ;main.c: 542:     UART_printf("\r\n 1. Fijar Hora Actual \r\n");
  4534  0025D6  0EC9               	movlw	low STR_22
  4535  0025D8  6E02               	movwf	UART_printf@cadena^0,c
  4536  0025DA  0E7E               	movlw	high STR_22
  4537  0025DC  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4538  0025DE  EC9A  F014         	call	_UART_printf	;wreg free
  4539                           
  4540                           ;main.c: 543:     UART_printf("\r\n 2. Asignar Horarios para regar \r\n");
  4541  0025E2  0EC2               	movlw	low STR_23
  4542  0025E4  6E02               	movwf	UART_printf@cadena^0,c
  4543  0025E6  0E7D               	movlw	high STR_23
  4544  0025E8  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4545  0025EA  EC9A  F014         	call	_UART_printf	;wreg free
  4546                           
  4547                           ;main.c: 544:     UART_printf("\r\n 3. Programar tiempo de riego en un horario \r\n");
  4548  0025EE  0E55               	movlw	low STR_24
  4549  0025F0  6E02               	movwf	UART_printf@cadena^0,c
  4550  0025F2  0E7C               	movlw	high STR_24
  4551  0025F4  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4552  0025F6  EC9A  F014         	call	_UART_printf	;wreg free
  4553                           
  4554                           ;main.c: 545:     UART_printf("\r\n 4. Dame datos del sistema \r\n");
  4555  0025FA  0E4D               	movlw	low STR_25
  4556  0025FC  6E02               	movwf	UART_printf@cadena^0,c
  4557  0025FE  0E7E               	movlw	high STR_25
  4558  002600  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4559  002602  EC9A  F014         	call	_UART_printf	;wreg free
  4560                           
  4561                           ;main.c: 546:     UART_printf("\r\n 5. Mostrar valores sensores \r\n");
  4562  002606  0E0B               	movlw	low STR_26
  4563  002608  6E02               	movwf	UART_printf@cadena^0,c
  4564  00260A  0E7E               	movlw	high STR_26
  4565  00260C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4566  00260E  EC9A  F014         	call	_UART_printf	;wreg free
  4567                           
  4568                           ;main.c: 547:     UART_printf("\r\n 6. Regado rapido \r\n");
  4569  002612  0E61               	movlw	low STR_27
  4570  002614  6E02               	movwf	UART_printf@cadena^0,c
  4571  002616  0E7F               	movlw	high STR_27
  4572  002618  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4573  00261A  EC9A  F014         	call	_UART_printf	;wreg free
  4574                           
  4575                           ;main.c: 548:     UART_printf("\r\n 7. Fijar Dia Actual \r\n");
  4576  00261E  0EFE               	movlw	low STR_28
  4577  002620  6E02               	movwf	UART_printf@cadena^0,c
  4578  002622  0E7E               	movlw	high STR_28
  4579  002624  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4580  002626  EC9A  F014         	call	_UART_printf	;wreg free
  4581                           
  4582                           ;main.c: 549:     UART_printf("\r\n Opcion:  \r");
  4583  00262A  0ED4               	movlw	low STR_29
  4584  00262C  6E02               	movwf	UART_printf@cadena^0,c
  4585  00262E  0E7F               	movlw	high STR_29
  4586  002630  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4587  002632  EC9A  F014         	call	_UART_printf	;wreg free
  4588                           
  4589                           ;main.c: 550:     UART_printf("\r\n");
  4590  002636  0EFB               	movlw	low (STR_13+23)
  4591  002638  6E02               	movwf	UART_printf@cadena^0,c
  4592  00263A  0E7E               	movlw	high (STR_13+23)
  4593  00263C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4594  00263E  EC9A  F014         	call	_UART_printf	;wreg free
  4595  002642  0012               	return		;funcret
  4596  002644                     __end_of_mostrarMenu:
  4597                           	opt callstack 0
  4598                           
  4599 ;; *************** function _mostrarDatosSensoresWIFI *****************
  4600 ;; Defined at:
  4601 ;;		line 760 in file "main.c"
  4602 ;; Parameters:    Size  Location     Type
  4603 ;;		None
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;  i               2  129[BANK0 ] int 
  4606 ;;  buffer         50   77[BANK0 ] unsigned char [50]
  4607 ;;  humedad         1  128[BANK0 ] unsigned char 
  4608 ;;  temperatura     1  127[BANK0 ] unsigned char 
  4609 ;; Return value:  Size  Location     Type
  4610 ;;                  1    wreg      void 
  4611 ;; Registers used:
  4612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4613 ;; Tracked objects:
  4614 ;;		On entry : 0/0
  4615 ;;		On exit  : 0/0
  4616 ;;		Unchanged: 0/0
  4617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4618 ;;      Params:         0       0       0       0       0       0       0       0       0
  4619 ;;      Locals:         0      54       0       0       0       0       0       0       0
  4620 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4621 ;;      Totals:         0      55       0       0       0       0       0       0       0
  4622 ;;Total ram usage:       55 bytes
  4623 ;; Hardware stack levels used:    1
  4624 ;; Hardware stack levels required when called:   10
  4625 ;; This function calls:
  4626 ;;		_UART_printf
  4627 ;;		_UART_write
  4628 ;;		_dameTemperaturaHumedad
  4629 ;;		_lecturaWifi
  4630 ;;		_sprintf
  4631 ;; This function is called by:
  4632 ;;		_sistemaPrincipal
  4633 ;; This function uses a non-reentrant model
  4634 ;;
  4635                           
  4636                           	psect	text13
  4637  001C06                     __ptext13:
  4638                           	opt callstack 0
  4639  001C06                     _mostrarDatosSensoresWIFI:
  4640                           	opt callstack 19
  4641  001C06                     
  4642                           ;main.c: 763:     char buffer[50];;main.c: 764:     unsigned char temperatura, humedad;;
      +                          main.c: 766:     lecturaWifi();
  4643  001C06  EC82  F00E         	call	_lecturaWifi	;wreg free
  4644  001C0A                     
  4645                           ;main.c: 768:     UART_write('I');
  4646  001C0A  0E49               	movlw	73
  4647  001C0C  ECAF  F017         	call	_UART_write
  4648  001C10                     
  4649                           ;main.c: 771:     if (peticionLecturaSensores) {
  4650  001C10  0100               	movlb	0	; () banked
  4651  001C12  51F1               	movf	_peticionLecturaSensores& (0+255),w,b
  4652  001C14  B4D8               	btfsc	status,2,c
  4653  001C16  EF0F  F00E         	goto	u3401
  4654  001C1A  EF11  F00E         	goto	u3400
  4655  001C1E                     u3401:
  4656  001C1E  EF4C  F00E         	goto	l4277
  4657  001C22                     u3400:
  4658  001C22                     
  4659                           ; BSR set to: 0
  4660                           ;main.c: 773:         for (int i = 0; i < 3; i++) {
  4661  001C22  0E00               	movlw	0
  4662  001C24  6FE2               	movwf	(mostrarDatosSensoresWIFI@i+1)& (0+255),b
  4663  001C26  0E00               	movlw	0
  4664  001C28  6FE1               	movwf	mostrarDatosSensoresWIFI@i& (0+255),b
  4665  001C2A                     l4269:
  4666                           
  4667                           ; BSR set to: 0
  4668                           ;main.c: 775:             sprintf(buffer, "\r\n\nPorcentaje Humedad del sensor %d: %d %c
      +                          \r\n"
  4669  001C2A  0EAD               	movlw	low mostrarDatosSensoresWIFI@buffer
  4670  001C2C  6F60               	movwf	sprintf@s& (0+255),b
  4671  001C2E  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  4672  001C30  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4673  001C32  0E86               	movlw	low STR_39
  4674  001C34  6F62               	movwf	sprintf@fmt& (0+255),b
  4675  001C36  0E7C               	movlw	high STR_39
  4676  001C38  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4677  001C3A  C0E1  F064         	movff	mostrarDatosSensoresWIFI@i,?_sprintf+4
  4678  001C3E  C0E2  F065         	movff	mostrarDatosSensoresWIFI@i+1,?_sprintf+5
  4679  001C42  90D8               	bcf	status,0,c
  4680  001C44  35E1               	rlcf	mostrarDatosSensoresWIFI@i& (0+255),w,b
  4681  001C46  6ED9               	movwf	fsr2l,c
  4682  001C48  35E2               	rlcf	(mostrarDatosSensoresWIFI@i+1)& (0+255),w,b
  4683  001C4A  6EDA               	movwf	fsr2h,c
  4684  001C4C  0E00               	movlw	low _sensores
  4685  001C4E  26D9               	addwf	fsr2l,f,c
  4686  001C50  0E01               	movlw	high _sensores
  4687  001C52  22DA               	addwfc	fsr2h,f,c
  4688  001C54  50DF               	movf	indf2,w,c
  4689  001C56  6FAC               	movwf	??_mostrarDatosSensoresWIFI& (0+255),b
  4690  001C58  51AC               	movf	??_mostrarDatosSensoresWIFI& (0+255),w,b
  4691  001C5A  6F66               	movwf	(?_sprintf+6)& (0+255),b
  4692  001C5C  6B67               	clrf	(?_sprintf+7)& (0+255),b
  4693  001C5E  0E00               	movlw	0
  4694  001C60  6F69               	movwf	(?_sprintf+9)& (0+255),b
  4695  001C62  0E25               	movlw	37
  4696  001C64  6F68               	movwf	(?_sprintf+8)& (0+255),b
  4697  001C66  EC7C  F015         	call	_sprintf	;wreg free
  4698  001C6A                     
  4699                           ;main.c: 777:             UART_printf(buffer);
  4700  001C6A  0EAD               	movlw	low mostrarDatosSensoresWIFI@buffer
  4701  001C6C  6E02               	movwf	UART_printf@cadena^0,c
  4702  001C6E  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  4703  001C70  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4704  001C72  EC9A  F014         	call	_UART_printf	;wreg free
  4705  001C76                     
  4706                           ;main.c: 779:         }
  4707  001C76  0100               	movlb	0	; () banked
  4708  001C78  4BE1               	infsnz	mostrarDatosSensoresWIFI@i& (0+255),f,b
  4709  001C7A  2BE2               	incf	(mostrarDatosSensoresWIFI@i+1)& (0+255),f,b
  4710  001C7C                     
  4711                           ; BSR set to: 0
  4712  001C7C  BFE2               	btfsc	(mostrarDatosSensoresWIFI@i+1)& (0+255),7,b
  4713  001C7E  EF4A  F00E         	goto	u3411
  4714  001C82  51E2               	movf	(mostrarDatosSensoresWIFI@i+1)& (0+255),w,b
  4715  001C84  E109               	bnz	u3410
  4716  001C86  0E03               	movlw	3
  4717  001C88  5DE1               	subwf	mostrarDatosSensoresWIFI@i& (0+255),w,b
  4718  001C8A  A0D8               	btfss	status,0,c
  4719  001C8C  EF4A  F00E         	goto	u3411
  4720  001C90  EF4C  F00E         	goto	u3410
  4721  001C94                     u3411:
  4722  001C94  EF15  F00E         	goto	l4269
  4723  001C98                     u3410:
  4724  001C98                     l4277:
  4725                           
  4726                           ; BSR set to: 0
  4727                           ;main.c: 783:     dameTemperaturaHumedad(&humedad, &temperatura);
  4728  001C98  0EE0               	movlw	low mostrarDatosSensoresWIFI@humedad
  4729  001C9A  6E04               	movwf	dameTemperaturaHumedad@Humedad^0,c
  4730  001C9C  0E00               	movlw	high mostrarDatosSensoresWIFI@humedad
  4731  001C9E  6E05               	movwf	(dameTemperaturaHumedad@Humedad+1)^0,c
  4732  001CA0  0EDF               	movlw	low mostrarDatosSensoresWIFI@temperatura
  4733  001CA2  6E06               	movwf	dameTemperaturaHumedad@Temperatura^0,c
  4734  001CA4  0E00               	movlw	high mostrarDatosSensoresWIFI@temperatura
  4735  001CA6  6E07               	movwf	(dameTemperaturaHumedad@Temperatura+1)^0,c
  4736  001CA8  ECFE  F010         	call	_dameTemperaturaHumedad	;wreg free
  4737  001CAC                     
  4738                           ;main.c: 785:     sprintf(buffer, "\r\n\nLa Humedad Ambiente es: %d\r\n", humedad);
  4739  001CAC  0EAD               	movlw	low mostrarDatosSensoresWIFI@buffer
  4740  001CAE  0100               	movlb	0	; () banked
  4741  001CB0  6F60               	movwf	sprintf@s& (0+255),b
  4742  001CB2  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  4743  001CB4  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4744  001CB6  0E6D               	movlw	low STR_37
  4745  001CB8  6F62               	movwf	sprintf@fmt& (0+255),b
  4746  001CBA  0E7E               	movlw	high STR_37
  4747  001CBC  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4748  001CBE  C0E0  F064         	movff	mostrarDatosSensoresWIFI@humedad,?_sprintf+4
  4749  001CC2  6B65               	clrf	(?_sprintf+5)& (0+255),b
  4750  001CC4  EC7C  F015         	call	_sprintf	;wreg free
  4751  001CC8                     
  4752                           ;main.c: 786:     UART_printf(buffer);
  4753  001CC8  0EAD               	movlw	low mostrarDatosSensoresWIFI@buffer
  4754  001CCA  6E02               	movwf	UART_printf@cadena^0,c
  4755  001CCC  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  4756  001CCE  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4757  001CD0  EC9A  F014         	call	_UART_printf	;wreg free
  4758  001CD4                     
  4759                           ;main.c: 787:     sprintf(buffer, "\r\n\nLa Temperatura es: %d C\r\n", temperatura);
  4760  001CD4  0EAD               	movlw	low mostrarDatosSensoresWIFI@buffer
  4761  001CD6  0100               	movlb	0	; () banked
  4762  001CD8  6F60               	movwf	sprintf@s& (0+255),b
  4763  001CDA  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  4764  001CDC  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4765  001CDE  0EAC               	movlw	low STR_38
  4766  001CE0  6F62               	movwf	sprintf@fmt& (0+255),b
  4767  001CE2  0E7E               	movlw	high STR_38
  4768  001CE4  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4769  001CE6  C0DF  F064         	movff	mostrarDatosSensoresWIFI@temperatura,?_sprintf+4
  4770  001CEA  6B65               	clrf	(?_sprintf+5)& (0+255),b
  4771  001CEC  EC7C  F015         	call	_sprintf	;wreg free
  4772  001CF0                     
  4773                           ;main.c: 788:     UART_printf(buffer);
  4774  001CF0  0EAD               	movlw	low mostrarDatosSensoresWIFI@buffer
  4775  001CF2  6E02               	movwf	UART_printf@cadena^0,c
  4776  001CF4  0E00               	movlw	high mostrarDatosSensoresWIFI@buffer
  4777  001CF6  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4778  001CF8  EC9A  F014         	call	_UART_printf	;wreg free
  4779  001CFC                     
  4780                           ;main.c: 790:     UART_write('I');
  4781  001CFC  0E49               	movlw	73
  4782  001CFE  ECAF  F017         	call	_UART_write
  4783  001D02  0012               	return		;funcret
  4784  001D04                     __end_of_mostrarDatosSensoresWIFI:
  4785                           	opt callstack 0
  4786                           
  4787 ;; *************** function _lecturaWifi *****************
  4788 ;; Defined at:
  4789 ;;		line 487 in file "main.c"
  4790 ;; Parameters:    Size  Location     Type
  4791 ;;		None
  4792 ;; Auto vars:     Size  Location     Type
  4793 ;;  i               2   74[BANK0 ] int 
  4794 ;;  buffer         50   22[BANK0 ] unsigned char [50]
  4795 ;;  humedadMedid    1   73[BANK0 ] unsigned char 
  4796 ;;  Rx              1   72[BANK0 ] unsigned char 
  4797 ;; Return value:  Size  Location     Type
  4798 ;;                  1    wreg      void 
  4799 ;; Registers used:
  4800 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4801 ;; Tracked objects:
  4802 ;;		On entry : 0/0
  4803 ;;		On exit  : 0/0
  4804 ;;		Unchanged: 0/0
  4805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4806 ;;      Params:         0       0       0       0       0       0       0       0       0
  4807 ;;      Locals:         0      54       0       0       0       0       0       0       0
  4808 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4809 ;;      Totals:         0      54       0       0       0       0       0       0       0
  4810 ;;Total ram usage:       54 bytes
  4811 ;; Hardware stack levels used:    1
  4812 ;; Hardware stack levels required when called:    9
  4813 ;; This function calls:
  4814 ;;		_UART_printf
  4815 ;;		_UART_read
  4816 ;;		_UART_write
  4817 ;;		_getValue
  4818 ;;		_restablecerDatosSensor
  4819 ;;		_sprintf
  4820 ;; This function is called by:
  4821 ;;		_sistemaRegado
  4822 ;;		_mostrarDatosSensoresWIFI
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826                           	psect	text14
  4827  001D04                     __ptext14:
  4828                           	opt callstack 0
  4829  001D04                     _lecturaWifi:
  4830                           	opt callstack 20
  4831  001D04                     
  4832                           ;main.c: 489:     PIE1bits.RCIE = 0;
  4833  001D04  9A9D               	bcf	157,5,c	;volatile
  4834  001D06                     
  4835                           ;main.c: 492:     char buffer[50];;main.c: 494:     restablecerDatosSensor();
  4836  001D06  ECCE  F015         	call	_restablecerDatosSensor	;wreg free
  4837  001D0A                     
  4838                           ;main.c: 496:     UART_write('R');
  4839  001D0A  0E52               	movlw	82
  4840  001D0C  ECAF  F017         	call	_UART_write
  4841  001D10                     
  4842                           ;main.c: 498:     UART_printf("\r\nSolicitando Muestreo de sensores\r\n\n");
  4843  001D10  0E08               	movlw	low STR_18
  4844  001D12  6E02               	movwf	UART_printf@cadena^0,c
  4845  001D14  0E7D               	movlw	high STR_18
  4846  001D16  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4847  001D18  EC9A  F014         	call	_UART_printf	;wreg free
  4848  001D1C                     
  4849                           ;main.c: 500:     Rx = UART_read();
  4850  001D1C  EC52  F015         	call	_UART_read	;wreg free
  4851  001D20  0100               	movlb	0	; () banked
  4852  001D22  6FA8               	movwf	lecturaWifi@Rx& (0+255),b
  4853  001D24                     
  4854                           ; BSR set to: 0
  4855                           ;main.c: 502:     if (Rx == 'O') {
  4856  001D24  0E4F               	movlw	79
  4857  001D26  19A8               	xorwf	lecturaWifi@Rx& (0+255),w,b
  4858  001D28  A4D8               	btfss	status,2,c
  4859  001D2A  EF99  F00E         	goto	u3111
  4860  001D2E  EF9B  F00E         	goto	u3110
  4861  001D32                     u3111:
  4862  001D32  EFF6  F00E         	goto	l4013
  4863  001D36                     u3110:
  4864  001D36                     
  4865                           ; BSR set to: 0
  4866                           ;main.c: 504:         peticionLecturaSensores = 1;
  4867  001D36  0E01               	movlw	1
  4868  001D38  6FF1               	movwf	_peticionLecturaSensores& (0+255),b
  4869                           
  4870                           ;main.c: 506:         for (int i = 0; i < 3; i++) {
  4871  001D3A  0E00               	movlw	0
  4872  001D3C  6FAB               	movwf	(lecturaWifi@i+1)& (0+255),b
  4873  001D3E  0E00               	movlw	0
  4874  001D40  6FAA               	movwf	lecturaWifi@i& (0+255),b
  4875  001D42                     l3995:
  4876                           
  4877                           ; BSR set to: 0
  4878                           ;main.c: 508:             sprintf(buffer, "\r\nIngrese el porcentaje de humedad del sens
      +                          or %d\r\n", i);
  4879  001D42  0E76               	movlw	low lecturaWifi@buffer
  4880  001D44  6F60               	movwf	sprintf@s& (0+255),b
  4881  001D46  0E00               	movlw	high lecturaWifi@buffer
  4882  001D48  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4883  001D4A  0E22               	movlw	low STR_19
  4884  001D4C  6F62               	movwf	sprintf@fmt& (0+255),b
  4885  001D4E  0E7C               	movlw	high STR_19
  4886  001D50  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4887  001D52  C0AA  F064         	movff	lecturaWifi@i,?_sprintf+4
  4888  001D56  C0AB  F065         	movff	lecturaWifi@i+1,?_sprintf+5
  4889  001D5A  EC7C  F015         	call	_sprintf	;wreg free
  4890  001D5E                     
  4891                           ;main.c: 509:             UART_printf(buffer);
  4892  001D5E  0E76               	movlw	low lecturaWifi@buffer
  4893  001D60  6E02               	movwf	UART_printf@cadena^0,c
  4894  001D62  0E00               	movlw	high lecturaWifi@buffer
  4895  001D64  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4896  001D66  EC9A  F014         	call	_UART_printf	;wreg free
  4897  001D6A                     
  4898                           ;main.c: 511:             humedadMedida = getValue(3);
  4899  001D6A  0E00               	movlw	0
  4900  001D6C  6E05               	movwf	(getValue@numCharacters+1)^0,c
  4901  001D6E  0E03               	movlw	3
  4902  001D70  6E04               	movwf	getValue@numCharacters^0,c
  4903  001D72  EC7F  F004         	call	_getValue	;wreg free
  4904  001D76  0100               	movlb	0	; () banked
  4905  001D78  6FA9               	movwf	lecturaWifi@humedadMedida& (0+255),b
  4906  001D7A                     
  4907                           ; BSR set to: 0
  4908                           ;main.c: 513:             if (humedadMedida != 'F')
  4909  001D7A  0E46               	movlw	70
  4910  001D7C  19A9               	xorwf	lecturaWifi@humedadMedida& (0+255),w,b
  4911  001D7E  B4D8               	btfsc	status,2,c
  4912  001D80  EFC4  F00E         	goto	u3121
  4913  001D84  EFC6  F00E         	goto	u3120
  4914  001D88                     u3121:
  4915  001D88  EFD3  F00E         	goto	l4005
  4916  001D8C                     u3120:
  4917  001D8C                     
  4918                           ; BSR set to: 0
  4919                           ;main.c: 514:                 sensores[i].porcientoHumedad = humedadMedida;
  4920  001D8C  90D8               	bcf	status,0,c
  4921  001D8E  35AA               	rlcf	lecturaWifi@i& (0+255),w,b
  4922  001D90  6ED9               	movwf	fsr2l,c
  4923  001D92  35AB               	rlcf	(lecturaWifi@i+1)& (0+255),w,b
  4924  001D94  6EDA               	movwf	fsr2h,c
  4925  001D96  0E00               	movlw	low _sensores
  4926  001D98  26D9               	addwf	fsr2l,f,c
  4927  001D9A  0E01               	movlw	high _sensores
  4928  001D9C  22DA               	addwfc	fsr2h,f,c
  4929  001D9E  C0A9  FFDF         	movff	lecturaWifi@humedadMedida,indf2
  4930  001DA2  EFDE  F00E         	goto	l4007
  4931  001DA6                     l4005:
  4932                           
  4933                           ; BSR set to: 0
  4934                           ;main.c: 516:                 sensores[i].porcientoHumedad = 100;
  4935  001DA6  90D8               	bcf	status,0,c
  4936  001DA8  35AA               	rlcf	lecturaWifi@i& (0+255),w,b
  4937  001DAA  6ED9               	movwf	fsr2l,c
  4938  001DAC  35AB               	rlcf	(lecturaWifi@i+1)& (0+255),w,b
  4939  001DAE  6EDA               	movwf	fsr2h,c
  4940  001DB0  0E00               	movlw	low _sensores
  4941  001DB2  26D9               	addwf	fsr2l,f,c
  4942  001DB4  0E01               	movlw	high _sensores
  4943  001DB6  22DA               	addwfc	fsr2h,f,c
  4944  001DB8  0E64               	movlw	100
  4945  001DBA  6EDF               	movwf	indf2,c
  4946  001DBC                     l4007:
  4947                           
  4948                           ; BSR set to: 0
  4949                           ;main.c: 518:         }
  4950  001DBC  4BAA               	infsnz	lecturaWifi@i& (0+255),f,b
  4951  001DBE  2BAB               	incf	(lecturaWifi@i+1)& (0+255),f,b
  4952  001DC0                     
  4953                           ; BSR set to: 0
  4954  001DC0  BFAB               	btfsc	(lecturaWifi@i+1)& (0+255),7,b
  4955  001DC2  EFEC  F00E         	goto	u3131
  4956  001DC6  51AB               	movf	(lecturaWifi@i+1)& (0+255),w,b
  4957  001DC8  E109               	bnz	u3130
  4958  001DCA  0E03               	movlw	3
  4959  001DCC  5DAA               	subwf	lecturaWifi@i& (0+255),w,b
  4960  001DCE  A0D8               	btfss	status,0,c
  4961  001DD0  EFEC  F00E         	goto	u3131
  4962  001DD4  EFEE  F00E         	goto	u3130
  4963  001DD8                     u3131:
  4964  001DD8  EFA1  F00E         	goto	l3995
  4965  001DDC                     u3130:
  4966  001DDC                     
  4967                           ; BSR set to: 0
  4968                           ;main.c: 520:         UART_printf("\r\nSensores Leidos con Exito!\r\n\n");
  4969  001DDC  0E2D               	movlw	low STR_20
  4970  001DDE  6E02               	movwf	UART_printf@cadena^0,c
  4971  001DE0  0E7E               	movlw	high STR_20
  4972  001DE2  6E03               	movwf	(UART_printf@cadena+1)^0,c
  4973  001DE4  EC9A  F014         	call	_UART_printf	;wreg free
  4974                           
  4975                           ;main.c: 522:     } else {
  4976  001DE8  EFF8  F00E         	goto	l4015
  4977  001DEC                     l4013:
  4978                           
  4979                           ; BSR set to: 0
  4980                           ;main.c: 523:         peticionLecturaSensores = 0;
  4981  001DEC  0E00               	movlw	0
  4982  001DEE  6FF1               	movwf	_peticionLecturaSensores& (0+255),b
  4983  001DF0                     l4015:
  4984                           
  4985                           ;main.c: 526:     PIE1bits.RCIE = 1;
  4986  001DF0  8A9D               	bsf	157,5,c	;volatile
  4987  001DF2  0012               	return		;funcret
  4988  001DF4                     __end_of_lecturaWifi:
  4989                           	opt callstack 0
  4990                           
  4991 ;; *************** function _restablecerDatosSensor *****************
  4992 ;; Defined at:
  4993 ;;		line 482 in file "main.c"
  4994 ;; Parameters:    Size  Location     Type
  4995 ;;		None
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;  i               2    4[COMRAM] int 
  4998 ;; Return value:  Size  Location     Type
  4999 ;;                  1    wreg      void 
  5000 ;; Registers used:
  5001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5002 ;; Tracked objects:
  5003 ;;		On entry : 0/0
  5004 ;;		On exit  : 0/0
  5005 ;;		Unchanged: 0/0
  5006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5007 ;;      Params:         0       0       0       0       0       0       0       0       0
  5008 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5009 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5010 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5011 ;;Total ram usage:        2 bytes
  5012 ;; Hardware stack levels used:    1
  5013 ;; Hardware stack levels required when called:    2
  5014 ;; This function calls:
  5015 ;;		_constructorSensor
  5016 ;; This function is called by:
  5017 ;;		_lecturaWifi
  5018 ;;		_main
  5019 ;; This function uses a non-reentrant model
  5020 ;;
  5021                           
  5022                           	psect	text15
  5023  002B9C                     __ptext15:
  5024                           	opt callstack 0
  5025  002B9C                     _restablecerDatosSensor:
  5026                           	opt callstack 26
  5027  002B9C                     
  5028                           ;main.c: 483:     for (int i = 0; i < 3; i++)
  5029  002B9C  0E00               	movlw	0
  5030  002B9E  6E06               	movwf	(restablecerDatosSensor@i+1)^0,c
  5031  002BA0  0E00               	movlw	0
  5032  002BA2  6E05               	movwf	restablecerDatosSensor@i^0,c
  5033  002BA4                     l3813:
  5034                           
  5035                           ;main.c: 484:         constructorSensor(sensores[i], 0, i);
  5036  002BA4  90D8               	bcf	status,0,c
  5037  002BA6  3405               	rlcf	restablecerDatosSensor@i^0,w,c
  5038  002BA8  6ED9               	movwf	fsr2l,c
  5039  002BAA  3406               	rlcf	(restablecerDatosSensor@i+1)^0,w,c
  5040  002BAC  6EDA               	movwf	fsr2h,c
  5041  002BAE  0E00               	movlw	low _sensores
  5042  002BB0  26D9               	addwf	fsr2l,f,c
  5043  002BB2  0E01               	movlw	high _sensores
  5044  002BB4  22DA               	addwfc	fsr2h,f,c
  5045  002BB6  CFDE F001          	movff	postinc2,constructorSensor@s
  5046  002BBA  CFDD F002          	movff	postdec2,constructorSensor@s+1
  5047  002BBE  0E00               	movlw	0
  5048  002BC0  6E03               	movwf	constructorSensor@porcientoHumedad^0,c
  5049  002BC2  C005  F004         	movff	restablecerDatosSensor@i,constructorSensor@pin
  5050  002BC6  ECD9  F017         	call	_constructorSensor	;wreg free
  5051  002BCA  4A05               	infsnz	restablecerDatosSensor@i^0,f,c
  5052  002BCC  2A06               	incf	(restablecerDatosSensor@i+1)^0,f,c
  5053  002BCE  BE06               	btfsc	(restablecerDatosSensor@i+1)^0,7,c
  5054  002BD0  EFF3  F015         	goto	u2931
  5055  002BD4  5006               	movf	(restablecerDatosSensor@i+1)^0,w,c
  5056  002BD6  E109               	bnz	u2930
  5057  002BD8  0E03               	movlw	3
  5058  002BDA  5C05               	subwf	restablecerDatosSensor@i^0,w,c
  5059  002BDC  A0D8               	btfss	status,0,c
  5060  002BDE  EFF3  F015         	goto	u2931
  5061  002BE2  EFF5  F015         	goto	u2930
  5062  002BE6                     u2931:
  5063  002BE6  EFD2  F015         	goto	l3813
  5064  002BEA                     u2930:
  5065  002BEA  0012               	return		;funcret
  5066  002BEC                     __end_of_restablecerDatosSensor:
  5067                           	opt callstack 0
  5068                           
  5069 ;; *************** function _constructorSensor *****************
  5070 ;; Defined at:
  5071 ;;		line 133 in file "main.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;  s               2    0[COMRAM] struct .
  5074 ;;  porcientoHum    1    2[COMRAM] unsigned char 
  5075 ;;  pin             1    3[COMRAM] unsigned char 
  5076 ;; Auto vars:     Size  Location     Type
  5077 ;;		None
  5078 ;; Return value:  Size  Location     Type
  5079 ;;                  1    wreg      void 
  5080 ;; Registers used:
  5081 ;;		None
  5082 ;; Tracked objects:
  5083 ;;		On entry : 0/0
  5084 ;;		On exit  : 0/0
  5085 ;;		Unchanged: 0/0
  5086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5087 ;;      Params:         4       0       0       0       0       0       0       0       0
  5088 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5089 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5090 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5091 ;;Total ram usage:        4 bytes
  5092 ;; Hardware stack levels used:    1
  5093 ;; Hardware stack levels required when called:    1
  5094 ;; This function calls:
  5095 ;;		Nothing
  5096 ;; This function is called by:
  5097 ;;		_restablecerDatosSensor
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101                           	psect	text16
  5102  002FB2                     __ptext16:
  5103                           	opt callstack 0
  5104  002FB2                     _constructorSensor:
  5105                           	opt callstack 26
  5106  002FB2                     
  5107                           ;main.c: 134:     s.porcientoHumedad = porcientoHumedad;
  5108  002FB2  C003  F001         	movff	constructorSensor@porcientoHumedad,constructorSensor@s
  5109                           
  5110                           ;main.c: 135:     s.pinSensor = pin;
  5111  002FB6  C004  F002         	movff	constructorSensor@pin,constructorSensor@s+1
  5112  002FBA  0012               	return		;funcret
  5113  002FBC                     __end_of_constructorSensor:
  5114                           	opt callstack 0
  5115                           
  5116 ;; *************** function _mostrarDatosSensores *****************
  5117 ;; Defined at:
  5118 ;;		line 731 in file "main.c"
  5119 ;; Parameters:    Size  Location     Type
  5120 ;;		None
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;  i               2   75[BANK0 ] int 
  5123 ;;  buffer         50   23[BANK0 ] unsigned char [50]
  5124 ;;  humedad         1   74[BANK0 ] unsigned char 
  5125 ;;  temperatura     1   73[BANK0 ] unsigned char 
  5126 ;; Return value:  Size  Location     Type
  5127 ;;                  1    wreg      void 
  5128 ;; Registers used:
  5129 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5130 ;; Tracked objects:
  5131 ;;		On entry : 0/0
  5132 ;;		On exit  : 0/0
  5133 ;;		Unchanged: 0/0
  5134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5135 ;;      Params:         0       0       0       0       0       0       0       0       0
  5136 ;;      Locals:         0      54       0       0       0       0       0       0       0
  5137 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5138 ;;      Totals:         0      55       0       0       0       0       0       0       0
  5139 ;;Total ram usage:       55 bytes
  5140 ;; Hardware stack levels used:    1
  5141 ;; Hardware stack levels required when called:    9
  5142 ;; This function calls:
  5143 ;;		_UART_printf
  5144 ;;		_UART_write
  5145 ;;		_dameTemperaturaHumedad
  5146 ;;		_lecturaAnalogaSensores
  5147 ;;		_sprintf
  5148 ;; This function is called by:
  5149 ;;		_sistemaPrincipal
  5150 ;; This function uses a non-reentrant model
  5151 ;;
  5152                           
  5153                           	psect	text17
  5154  001DF4                     __ptext17:
  5155                           	opt callstack 0
  5156  001DF4                     _mostrarDatosSensores:
  5157                           	opt callstack 20
  5158  001DF4                     
  5159                           ;main.c: 733:     char buffer[50];;main.c: 734:     unsigned char temperatura, humedad;;
      +                          main.c: 736:     dameTemperaturaHumedad(&humedad, &temperatura);
  5160  001DF4  0EAA               	movlw	low mostrarDatosSensores@humedad
  5161  001DF6  6E04               	movwf	dameTemperaturaHumedad@Humedad^0,c
  5162  001DF8  0E00               	movlw	high mostrarDatosSensores@humedad
  5163  001DFA  6E05               	movwf	(dameTemperaturaHumedad@Humedad+1)^0,c
  5164  001DFC  0EA9               	movlw	low mostrarDatosSensores@temperatura
  5165  001DFE  6E06               	movwf	dameTemperaturaHumedad@Temperatura^0,c
  5166  001E00  0E00               	movlw	high mostrarDatosSensores@temperatura
  5167  001E02  6E07               	movwf	(dameTemperaturaHumedad@Temperatura+1)^0,c
  5168  001E04  ECFE  F010         	call	_dameTemperaturaHumedad	;wreg free
  5169  001E08                     
  5170                           ;main.c: 738:     UART_write('I');
  5171  001E08  0E49               	movlw	73
  5172  001E0A  ECAF  F017         	call	_UART_write
  5173  001E0E                     
  5174                           ;main.c: 741:     sprintf(buffer, "\r\n\nLa Humedad Ambiente es: %d\r\n", humedad);
  5175  001E0E  0E77               	movlw	low mostrarDatosSensores@buffer
  5176  001E10  0100               	movlb	0	; () banked
  5177  001E12  6F60               	movwf	sprintf@s& (0+255),b
  5178  001E14  0E00               	movlw	high mostrarDatosSensores@buffer
  5179  001E16  6F61               	movwf	(sprintf@s+1)& (0+255),b
  5180  001E18  0E6D               	movlw	low STR_37
  5181  001E1A  6F62               	movwf	sprintf@fmt& (0+255),b
  5182  001E1C  0E7E               	movlw	high STR_37
  5183  001E1E  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  5184  001E20  C0AA  F064         	movff	mostrarDatosSensores@humedad,?_sprintf+4
  5185  001E24  6B65               	clrf	(?_sprintf+5)& (0+255),b
  5186  001E26  EC7C  F015         	call	_sprintf	;wreg free
  5187  001E2A                     
  5188                           ;main.c: 742:     UART_printf(buffer);
  5189  001E2A  0E77               	movlw	low mostrarDatosSensores@buffer
  5190  001E2C  6E02               	movwf	UART_printf@cadena^0,c
  5191  001E2E  0E00               	movlw	high mostrarDatosSensores@buffer
  5192  001E30  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5193  001E32  EC9A  F014         	call	_UART_printf	;wreg free
  5194  001E36                     
  5195                           ;main.c: 743:     sprintf(buffer, "\r\n\nLa Temperatura es: %d C\r\n", temperatura);
  5196  001E36  0E77               	movlw	low mostrarDatosSensores@buffer
  5197  001E38  0100               	movlb	0	; () banked
  5198  001E3A  6F60               	movwf	sprintf@s& (0+255),b
  5199  001E3C  0E00               	movlw	high mostrarDatosSensores@buffer
  5200  001E3E  6F61               	movwf	(sprintf@s+1)& (0+255),b
  5201  001E40  0EAC               	movlw	low STR_38
  5202  001E42  6F62               	movwf	sprintf@fmt& (0+255),b
  5203  001E44  0E7E               	movlw	high STR_38
  5204  001E46  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  5205  001E48  C0A9  F064         	movff	mostrarDatosSensores@temperatura,?_sprintf+4
  5206  001E4C  6B65               	clrf	(?_sprintf+5)& (0+255),b
  5207  001E4E  EC7C  F015         	call	_sprintf	;wreg free
  5208  001E52                     
  5209                           ;main.c: 744:     UART_printf(buffer);
  5210  001E52  0E77               	movlw	low mostrarDatosSensores@buffer
  5211  001E54  6E02               	movwf	UART_printf@cadena^0,c
  5212  001E56  0E00               	movlw	high mostrarDatosSensores@buffer
  5213  001E58  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5214  001E5A  EC9A  F014         	call	_UART_printf	;wreg free
  5215  001E5E                     
  5216                           ;main.c: 746:     lecturaAnalogaSensores();
  5217  001E5E  ECB0  F011         	call	_lecturaAnalogaSensores	;wreg free
  5218  001E62                     
  5219                           ;main.c: 749:     for (int i = 0; i < 3; i++) {
  5220  001E62  0E00               	movlw	0
  5221  001E64  0100               	movlb	0	; () banked
  5222  001E66  6FAC               	movwf	(mostrarDatosSensores@i+1)& (0+255),b
  5223  001E68  0E00               	movlw	0
  5224  001E6A  6FAB               	movwf	mostrarDatosSensores@i& (0+255),b
  5225  001E6C                     l4309:
  5226                           
  5227                           ; BSR set to: 0
  5228                           ;main.c: 751:         sprintf(buffer, "\r\n\nPorcentaje Humedad del sensor %d: %d %c\r\n
      +                          "
  5229  001E6C  0E77               	movlw	low mostrarDatosSensores@buffer
  5230  001E6E  6F60               	movwf	sprintf@s& (0+255),b
  5231  001E70  0E00               	movlw	high mostrarDatosSensores@buffer
  5232  001E72  6F61               	movwf	(sprintf@s+1)& (0+255),b
  5233  001E74  0E86               	movlw	low STR_39
  5234  001E76  6F62               	movwf	sprintf@fmt& (0+255),b
  5235  001E78  0E7C               	movlw	high STR_39
  5236  001E7A  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  5237  001E7C  C0AB  F064         	movff	mostrarDatosSensores@i,?_sprintf+4
  5238  001E80  C0AC  F065         	movff	mostrarDatosSensores@i+1,?_sprintf+5
  5239  001E84  90D8               	bcf	status,0,c
  5240  001E86  35AB               	rlcf	mostrarDatosSensores@i& (0+255),w,b
  5241  001E88  6ED9               	movwf	fsr2l,c
  5242  001E8A  35AC               	rlcf	(mostrarDatosSensores@i+1)& (0+255),w,b
  5243  001E8C  6EDA               	movwf	fsr2h,c
  5244  001E8E  0E00               	movlw	low _sensores
  5245  001E90  26D9               	addwf	fsr2l,f,c
  5246  001E92  0E01               	movlw	high _sensores
  5247  001E94  22DA               	addwfc	fsr2h,f,c
  5248  001E96  50DF               	movf	indf2,w,c
  5249  001E98  6F76               	movwf	??_mostrarDatosSensores& (0+255),b
  5250  001E9A  5176               	movf	??_mostrarDatosSensores& (0+255),w,b
  5251  001E9C  6F66               	movwf	(?_sprintf+6)& (0+255),b
  5252  001E9E  6B67               	clrf	(?_sprintf+7)& (0+255),b
  5253  001EA0  0E00               	movlw	0
  5254  001EA2  6F69               	movwf	(?_sprintf+9)& (0+255),b
  5255  001EA4  0E25               	movlw	37
  5256  001EA6  6F68               	movwf	(?_sprintf+8)& (0+255),b
  5257  001EA8  EC7C  F015         	call	_sprintf	;wreg free
  5258  001EAC                     
  5259                           ;main.c: 753:         UART_printf(buffer);
  5260  001EAC  0E77               	movlw	low mostrarDatosSensores@buffer
  5261  001EAE  6E02               	movwf	UART_printf@cadena^0,c
  5262  001EB0  0E00               	movlw	high mostrarDatosSensores@buffer
  5263  001EB2  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5264  001EB4  EC9A  F014         	call	_UART_printf	;wreg free
  5265  001EB8                     
  5266                           ;main.c: 754:     }
  5267  001EB8  0100               	movlb	0	; () banked
  5268  001EBA  4BAB               	infsnz	mostrarDatosSensores@i& (0+255),f,b
  5269  001EBC  2BAC               	incf	(mostrarDatosSensores@i+1)& (0+255),f,b
  5270  001EBE                     
  5271                           ; BSR set to: 0
  5272  001EBE  BFAC               	btfsc	(mostrarDatosSensores@i+1)& (0+255),7,b
  5273  001EC0  EF6B  F00F         	goto	u3421
  5274  001EC4  51AC               	movf	(mostrarDatosSensores@i+1)& (0+255),w,b
  5275  001EC6  E109               	bnz	u3420
  5276  001EC8  0E03               	movlw	3
  5277  001ECA  5DAB               	subwf	mostrarDatosSensores@i& (0+255),w,b
  5278  001ECC  A0D8               	btfss	status,0,c
  5279  001ECE  EF6B  F00F         	goto	u3421
  5280  001ED2  EF6D  F00F         	goto	u3420
  5281  001ED6                     u3421:
  5282  001ED6  EF36  F00F         	goto	l4309
  5283  001EDA                     u3420:
  5284  001EDA                     
  5285                           ; BSR set to: 0
  5286                           ;main.c: 756:     UART_write('I');
  5287  001EDA  0E49               	movlw	73
  5288  001EDC  ECAF  F017         	call	_UART_write
  5289  001EE0  0012               	return		;funcret
  5290  001EE2                     __end_of_mostrarDatosSensores:
  5291                           	opt callstack 0
  5292                           
  5293 ;; *************** function _lecturaAnalogaSensores *****************
  5294 ;; Defined at:
  5295 ;;		line 530 in file "main.c"
  5296 ;; Parameters:    Size  Location     Type
  5297 ;;		None
  5298 ;; Auto vars:     Size  Location     Type
  5299 ;;  i               2   47[COMRAM] int 
  5300 ;; Return value:  Size  Location     Type
  5301 ;;                  1    wreg      void 
  5302 ;; Registers used:
  5303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5304 ;; Tracked objects:
  5305 ;;		On entry : 0/0
  5306 ;;		On exit  : 0/0
  5307 ;;		Unchanged: 0/0
  5308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5309 ;;      Params:         0       0       0       0       0       0       0       0       0
  5310 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5311 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5312 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5313 ;;Total ram usage:        3 bytes
  5314 ;; Hardware stack levels used:    1
  5315 ;; Hardware stack levels required when called:    3
  5316 ;; This function calls:
  5317 ;;		_dameHumedadSuelo
  5318 ;;		_map
  5319 ;; This function is called by:
  5320 ;;		_sistemaRegado
  5321 ;;		_mostrarDatosSensores
  5322 ;; This function uses a non-reentrant model
  5323 ;;
  5324                           
  5325                           	psect	text18
  5326  002360                     __ptext18:
  5327                           	opt callstack 0
  5328  002360                     _lecturaAnalogaSensores:
  5329                           	opt callstack 26
  5330  002360                     
  5331                           ;main.c: 532:     for (int i = 0; i < 3; i++) {
  5332  002360  0E00               	movlw	0
  5333  002362  6E31               	movwf	(lecturaAnalogaSensores@i+1)^0,c
  5334  002364  0E00               	movlw	0
  5335  002366  6E30               	movwf	lecturaAnalogaSensores@i^0,c
  5336  002368                     l4023:
  5337                           
  5338                           ;main.c: 533:         sensores[i].porcientoHumedad = map(dameHumedadSuelo(i), 0, 1023, 1
      +                          00, 0);
  5339  002368  90D8               	bcf	status,0,c
  5340  00236A  3430               	rlcf	lecturaAnalogaSensores@i^0,w,c
  5341  00236C  6ED9               	movwf	fsr2l,c
  5342  00236E  3431               	rlcf	(lecturaAnalogaSensores@i+1)^0,w,c
  5343  002370  6EDA               	movwf	fsr2h,c
  5344  002372  0E00               	movlw	low _sensores
  5345  002374  26D9               	addwf	fsr2l,f,c
  5346  002376  0E01               	movlw	high _sensores
  5347  002378  22DA               	addwfc	fsr2h,f,c
  5348  00237A  5030               	movf	lecturaAnalogaSensores@i^0,w,c
  5349  00237C  ECF6  F015         	call	_dameHumedadSuelo
  5350  002380  C001  F01B         	movff	?_dameHumedadSuelo,map@x
  5351  002384  C002  F01C         	movff	?_dameHumedadSuelo+1,map@x+1
  5352  002388  0E00               	movlw	0
  5353  00238A  BE1C               	btfsc	(map@x+1)^0,7,c
  5354  00238C  0EFF               	movlw	-1
  5355  00238E  6E1D               	movwf	(map@x+2)^0,c
  5356  002390  6E1E               	movwf	(map@x+3)^0,c
  5357  002392  0E00               	movlw	0
  5358  002394  6E1F               	movwf	map@in_min^0,c
  5359  002396  0E00               	movlw	0
  5360  002398  6E20               	movwf	(map@in_min+1)^0,c
  5361  00239A  0E00               	movlw	0
  5362  00239C  6E21               	movwf	(map@in_min+2)^0,c
  5363  00239E  0E00               	movlw	0
  5364  0023A0  6E22               	movwf	(map@in_min+3)^0,c
  5365  0023A2  0EFF               	movlw	255
  5366  0023A4  6E23               	movwf	map@in_max^0,c
  5367  0023A6  0E03               	movlw	3
  5368  0023A8  6E24               	movwf	(map@in_max+1)^0,c
  5369  0023AA  0E00               	movlw	0
  5370  0023AC  6E25               	movwf	(map@in_max+2)^0,c
  5371  0023AE  0E00               	movlw	0
  5372  0023B0  6E26               	movwf	(map@in_max+3)^0,c
  5373  0023B2  0E64               	movlw	100
  5374  0023B4  6E27               	movwf	map@out_min^0,c
  5375  0023B6  0E00               	movlw	0
  5376  0023B8  6E28               	movwf	(map@out_min+1)^0,c
  5377  0023BA  0E00               	movlw	0
  5378  0023BC  6E29               	movwf	(map@out_min+2)^0,c
  5379  0023BE  0E00               	movlw	0
  5380  0023C0  6E2A               	movwf	(map@out_min+3)^0,c
  5381  0023C2  0E00               	movlw	0
  5382  0023C4  6E2B               	movwf	map@out_max^0,c
  5383  0023C6  0E00               	movlw	0
  5384  0023C8  6E2C               	movwf	(map@out_max+1)^0,c
  5385  0023CA  0E00               	movlw	0
  5386  0023CC  6E2D               	movwf	(map@out_max+2)^0,c
  5387  0023CE  0E00               	movlw	0
  5388  0023D0  6E2E               	movwf	(map@out_max+3)^0,c
  5389  0023D2  EC22  F013         	call	_map	;wreg free
  5390  0023D6  501B               	movf	?_map^0,w,c
  5391  0023D8  6EDF               	movwf	indf2,c
  5392  0023DA                     
  5393                           ;main.c: 534:         _delay((unsigned long)((5)*(4000000/4000.0)));
  5394  0023DA  0E07               	movlw	7
  5395  0023DC  6E2F               	movwf	??_lecturaAnalogaSensores^0,c
  5396  0023DE  0E7D               	movlw	125
  5397  0023E0                     u3697:
  5398  0023E0  2EE8               	decfsz	wreg,f,c
  5399  0023E2  D7FE               	bra	u3697
  5400  0023E4  2E2F               	decfsz	??_lecturaAnalogaSensores^0,f,c
  5401  0023E6  D7FC               	bra	u3697
  5402  0023E8  F000               	nop	
  5403  0023EA                     
  5404                           ;main.c: 535:     }
  5405  0023EA  4A30               	infsnz	lecturaAnalogaSensores@i^0,f,c
  5406  0023EC  2A31               	incf	(lecturaAnalogaSensores@i+1)^0,f,c
  5407  0023EE  BE31               	btfsc	(lecturaAnalogaSensores@i+1)^0,7,c
  5408  0023F0  EF03  F012         	goto	u3141
  5409  0023F4  5031               	movf	(lecturaAnalogaSensores@i+1)^0,w,c
  5410  0023F6  E109               	bnz	u3140
  5411  0023F8  0E03               	movlw	3
  5412  0023FA  5C30               	subwf	lecturaAnalogaSensores@i^0,w,c
  5413  0023FC  A0D8               	btfss	status,0,c
  5414  0023FE  EF03  F012         	goto	u3141
  5415  002402  EF05  F012         	goto	u3140
  5416  002406                     u3141:
  5417  002406  EFB4  F011         	goto	l4023
  5418  00240A                     u3140:
  5419  00240A  0012               	return		;funcret
  5420  00240C                     __end_of_lecturaAnalogaSensores:
  5421                           	opt callstack 0
  5422                           
  5423 ;; *************** function _map *****************
  5424 ;; Defined at:
  5425 ;;		line 129 in file "main.c"
  5426 ;; Parameters:    Size  Location     Type
  5427 ;;  x               4   26[COMRAM] long 
  5428 ;;  in_min          4   30[COMRAM] long 
  5429 ;;  in_max          4   34[COMRAM] long 
  5430 ;;  out_min         4   38[COMRAM] long 
  5431 ;;  out_max         4   42[COMRAM] long 
  5432 ;; Auto vars:     Size  Location     Type
  5433 ;;		None
  5434 ;; Return value:  Size  Location     Type
  5435 ;;                  4   26[COMRAM] long 
  5436 ;; Registers used:
  5437 ;;		wreg, status,2, status,0, cstack
  5438 ;; Tracked objects:
  5439 ;;		On entry : 0/0
  5440 ;;		On exit  : 0/0
  5441 ;;		Unchanged: 0/0
  5442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5443 ;;      Params:        20       0       0       0       0       0       0       0       0
  5444 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5445 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5446 ;;      Totals:        20       0       0       0       0       0       0       0       0
  5447 ;;Total ram usage:       20 bytes
  5448 ;; Hardware stack levels used:    1
  5449 ;; Hardware stack levels required when called:    2
  5450 ;; This function calls:
  5451 ;;		___aldiv
  5452 ;;		___lmul
  5453 ;; This function is called by:
  5454 ;;		_lecturaAnalogaSensores
  5455 ;; This function uses a non-reentrant model
  5456 ;;
  5457                           
  5458                           	psect	text19
  5459  002644                     __ptext19:
  5460                           	opt callstack 0
  5461  002644                     _map:
  5462                           	opt callstack 26
  5463  002644                     
  5464                           ;main.c: 130:     return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_mi
      +                          n;
  5465  002644  501F               	movf	map@in_min^0,w,c
  5466  002646  5C1B               	subwf	map@x^0,w,c
  5467  002648  6E01               	movwf	___lmul@multiplier^0,c
  5468  00264A  5020               	movf	(map@in_min+1)^0,w,c
  5469  00264C  581C               	subwfb	(map@x+1)^0,w,c
  5470  00264E  6E02               	movwf	(___lmul@multiplier+1)^0,c
  5471  002650  5021               	movf	(map@in_min+2)^0,w,c
  5472  002652  581D               	subwfb	(map@x+2)^0,w,c
  5473  002654  6E03               	movwf	(___lmul@multiplier+2)^0,c
  5474  002656  5022               	movf	(map@in_min+3)^0,w,c
  5475  002658  581E               	subwfb	(map@x+3)^0,w,c
  5476  00265A  6E04               	movwf	(___lmul@multiplier+3)^0,c
  5477  00265C  5027               	movf	map@out_min^0,w,c
  5478  00265E  5C2B               	subwf	map@out_max^0,w,c
  5479  002660  6E05               	movwf	___lmul@multiplicand^0,c
  5480  002662  5028               	movf	(map@out_min+1)^0,w,c
  5481  002664  582C               	subwfb	(map@out_max+1)^0,w,c
  5482  002666  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5483  002668  5029               	movf	(map@out_min+2)^0,w,c
  5484  00266A  582D               	subwfb	(map@out_max+2)^0,w,c
  5485  00266C  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5486  00266E  502A               	movf	(map@out_min+3)^0,w,c
  5487  002670  582E               	subwfb	(map@out_max+3)^0,w,c
  5488  002672  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5489  002674  ECCF  F013         	call	___lmul	;wreg free
  5490  002678  C001  F00D         	movff	?___lmul,___aldiv@dividend
  5491  00267C  C002  F00E         	movff	?___lmul+1,___aldiv@dividend+1
  5492  002680  C003  F00F         	movff	?___lmul+2,___aldiv@dividend+2
  5493  002684  C004  F010         	movff	?___lmul+3,___aldiv@dividend+3
  5494  002688  501F               	movf	map@in_min^0,w,c
  5495  00268A  5C23               	subwf	map@in_max^0,w,c
  5496  00268C  6E11               	movwf	___aldiv@divisor^0,c
  5497  00268E  5020               	movf	(map@in_min+1)^0,w,c
  5498  002690  5824               	subwfb	(map@in_max+1)^0,w,c
  5499  002692  6E12               	movwf	(___aldiv@divisor+1)^0,c
  5500  002694  5021               	movf	(map@in_min+2)^0,w,c
  5501  002696  5825               	subwfb	(map@in_max+2)^0,w,c
  5502  002698  6E13               	movwf	(___aldiv@divisor+2)^0,c
  5503  00269A  5022               	movf	(map@in_min+3)^0,w,c
  5504  00269C  5826               	subwfb	(map@in_max+3)^0,w,c
  5505  00269E  6E14               	movwf	(___aldiv@divisor+3)^0,c
  5506  0026A0  EC7D  F00D         	call	___aldiv	;wreg free
  5507  0026A4  5027               	movf	map@out_min^0,w,c
  5508  0026A6  240D               	addwf	?___aldiv^0,w,c
  5509  0026A8  6E1B               	movwf	?_map^0,c
  5510  0026AA  5028               	movf	(map@out_min+1)^0,w,c
  5511  0026AC  200E               	addwfc	(?___aldiv+1)^0,w,c
  5512  0026AE  6E1C               	movwf	(?_map+1)^0,c
  5513  0026B0  5029               	movf	(map@out_min+2)^0,w,c
  5514  0026B2  200F               	addwfc	(?___aldiv+2)^0,w,c
  5515  0026B4  6E1D               	movwf	(?_map+2)^0,c
  5516  0026B6  502A               	movf	(map@out_min+3)^0,w,c
  5517  0026B8  2010               	addwfc	(?___aldiv+3)^0,w,c
  5518  0026BA  6E1E               	movwf	(?_map+3)^0,c
  5519  0026BC  0012               	return		;funcret
  5520  0026BE                     __end_of_map:
  5521                           	opt callstack 0
  5522                           
  5523 ;; *************** function ___lmul *****************
  5524 ;; Defined at:
  5525 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  5526 ;; Parameters:    Size  Location     Type
  5527 ;;  multiplier      4    0[COMRAM] unsigned long 
  5528 ;;  multiplicand    4    4[COMRAM] unsigned long 
  5529 ;; Auto vars:     Size  Location     Type
  5530 ;;  product         4    8[COMRAM] unsigned long 
  5531 ;; Return value:  Size  Location     Type
  5532 ;;                  4    0[COMRAM] unsigned long 
  5533 ;; Registers used:
  5534 ;;		wreg, status,2, status,0
  5535 ;; Tracked objects:
  5536 ;;		On entry : 0/0
  5537 ;;		On exit  : 0/0
  5538 ;;		Unchanged: 0/0
  5539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5540 ;;      Params:         8       0       0       0       0       0       0       0       0
  5541 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5542 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5543 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5544 ;;Total ram usage:       12 bytes
  5545 ;; Hardware stack levels used:    1
  5546 ;; Hardware stack levels required when called:    1
  5547 ;; This function calls:
  5548 ;;		Nothing
  5549 ;; This function is called by:
  5550 ;;		_map
  5551 ;; This function uses a non-reentrant model
  5552 ;;
  5553                           
  5554                           	psect	text20
  5555  00279E                     __ptext20:
  5556                           	opt callstack 0
  5557  00279E                     ___lmul:
  5558                           	opt callstack 26
  5559  00279E  0E00               	movlw	0
  5560  0027A0  6E09               	movwf	___lmul@product^0,c
  5561  0027A2  0E00               	movlw	0
  5562  0027A4  6E0A               	movwf	(___lmul@product+1)^0,c
  5563  0027A6  0E00               	movlw	0
  5564  0027A8  6E0B               	movwf	(___lmul@product+2)^0,c
  5565  0027AA  0E00               	movlw	0
  5566  0027AC  6E0C               	movwf	(___lmul@product+3)^0,c
  5567  0027AE                     l3569:
  5568  0027AE  A001               	btfss	___lmul@multiplier^0,0,c
  5569  0027B0  EFDC  F013         	goto	u2721
  5570  0027B4  EFDE  F013         	goto	u2720
  5571  0027B8                     u2721:
  5572  0027B8  EFE6  F013         	goto	l3573
  5573  0027BC                     u2720:
  5574  0027BC  5005               	movf	___lmul@multiplicand^0,w,c
  5575  0027BE  2609               	addwf	___lmul@product^0,f,c
  5576  0027C0  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  5577  0027C2  220A               	addwfc	(___lmul@product+1)^0,f,c
  5578  0027C4  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  5579  0027C6  220B               	addwfc	(___lmul@product+2)^0,f,c
  5580  0027C8  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  5581  0027CA  220C               	addwfc	(___lmul@product+3)^0,f,c
  5582  0027CC                     l3573:
  5583  0027CC  90D8               	bcf	status,0,c
  5584  0027CE  3605               	rlcf	___lmul@multiplicand^0,f,c
  5585  0027D0  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  5586  0027D2  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  5587  0027D4  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  5588  0027D6  90D8               	bcf	status,0,c
  5589  0027D8  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  5590  0027DA  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  5591  0027DC  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  5592  0027DE  3201               	rrcf	___lmul@multiplier^0,f,c
  5593  0027E0  5001               	movf	___lmul@multiplier^0,w,c
  5594  0027E2  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  5595  0027E4  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  5596  0027E6  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  5597  0027E8  A4D8               	btfss	status,2,c
  5598  0027EA  EFF9  F013         	goto	u2731
  5599  0027EE  EFFB  F013         	goto	u2730
  5600  0027F2                     u2731:
  5601  0027F2  EFD7  F013         	goto	l3569
  5602  0027F6                     u2730:
  5603  0027F6  C009  F001         	movff	___lmul@product,?___lmul
  5604  0027FA  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  5605  0027FE  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  5606  002802  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  5607  002806  0012               	return		;funcret
  5608  002808                     __end_of___lmul:
  5609                           	opt callstack 0
  5610                           
  5611 ;; *************** function _dameHumedadSuelo *****************
  5612 ;; Defined at:
  5613 ;;		line 465 in file "main.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;  canalLeer       1    wreg     unsigned char 
  5616 ;; Auto vars:     Size  Location     Type
  5617 ;;  canalLeer       1    4[COMRAM] unsigned char 
  5618 ;; Return value:  Size  Location     Type
  5619 ;;                  2    0[COMRAM] short 
  5620 ;; Registers used:
  5621 ;;		wreg, status,2, status,0
  5622 ;; Tracked objects:
  5623 ;;		On entry : 0/0
  5624 ;;		On exit  : 0/0
  5625 ;;		Unchanged: 0/0
  5626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5627 ;;      Params:         2       0       0       0       0       0       0       0       0
  5628 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5629 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5630 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5631 ;;Total ram usage:        5 bytes
  5632 ;; Hardware stack levels used:    1
  5633 ;; Hardware stack levels required when called:    1
  5634 ;; This function calls:
  5635 ;;		Nothing
  5636 ;; This function is called by:
  5637 ;;		_lecturaAnalogaSensores
  5638 ;; This function uses a non-reentrant model
  5639 ;;
  5640                           
  5641                           	psect	text21
  5642  002BEC                     __ptext21:
  5643                           	opt callstack 0
  5644  002BEC                     _dameHumedadSuelo:
  5645                           	opt callstack 27
  5646                           
  5647                           ;incstack = 0
  5648                           ;dameHumedadSuelo@canalLeer stored from wreg
  5649  002BEC  6E05               	movwf	dameHumedadSuelo@canalLeer^0,c
  5650  002BEE                     
  5651                           ;main.c: 467:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  5652  002BEE  0E06               	movlw	6
  5653  002BF0                     u3707:
  5654  002BF0  2EE8               	decfsz	wreg,f,c
  5655  002BF2  D7FE               	bra	u3707
  5656  002BF4  D000               	nop2	
  5657  002BF6                     
  5658                           ;main.c: 469:     ADCON0bits.ADON = 1;
  5659  002BF6  80C2               	bsf	194,0,c	;volatile
  5660  002BF8                     
  5661                           ;main.c: 470:     ADCON0bits.CHS = canalLeer;
  5662  002BF8  C005  F003         	movff	dameHumedadSuelo@canalLeer,??_dameHumedadSuelo
  5663  002BFC  4603               	rlncf	??_dameHumedadSuelo^0,f,c
  5664  002BFE  4603               	rlncf	??_dameHumedadSuelo^0,f,c
  5665  002C00  50C2               	movf	194,w,c	;volatile
  5666  002C02  1803               	xorwf	??_dameHumedadSuelo^0,w,c
  5667  002C04  0BC3               	andlw	-61
  5668  002C06  1803               	xorwf	??_dameHumedadSuelo^0,w,c
  5669  002C08  6EC2               	movwf	194,c	;volatile
  5670  002C0A                     
  5671                           ;main.c: 471:     ADCON0bits.GO = 1;
  5672  002C0A  82C2               	bsf	194,1,c	;volatile
  5673  002C0C                     
  5674                           ;main.c: 472:     ADCON0bits.GO_DONE = 1;
  5675  002C0C  82C2               	bsf	194,1,c	;volatile
  5676  002C0E                     l319:
  5677  002C0E  B2C2               	btfsc	194,1,c	;volatile
  5678  002C10  EF0C  F016         	goto	u2921
  5679  002C14  EF0E  F016         	goto	u2920
  5680  002C18                     u2921:
  5681  002C18  EF07  F016         	goto	l319
  5682  002C1C                     u2920:
  5683  002C1C                     
  5684                           ;main.c: 476:     ADCON0bits.ADON = 0;
  5685  002C1C  90C2               	bcf	194,0,c	;volatile
  5686  002C1E                     
  5687                           ;main.c: 478:     return (ADRESH << 8) +ADRESL;
  5688  002C1E  50C4               	movf	196,w,c	;volatile
  5689  002C20  6E04               	movwf	(??_dameHumedadSuelo+1)^0,c
  5690  002C22  6A03               	clrf	??_dameHumedadSuelo^0,c
  5691  002C24  50C3               	movf	195,w,c	;volatile
  5692  002C26  2403               	addwf	??_dameHumedadSuelo^0,w,c
  5693  002C28  6E01               	movwf	?_dameHumedadSuelo^0,c
  5694  002C2A  0E00               	movlw	0
  5695  002C2C  2004               	addwfc	(??_dameHumedadSuelo+1)^0,w,c
  5696  002C2E  6E02               	movwf	(?_dameHumedadSuelo+1)^0,c
  5697  002C30  0012               	return		;funcret
  5698  002C32                     __end_of_dameHumedadSuelo:
  5699                           	opt callstack 0
  5700                           
  5701 ;; *************** function _dameTemperaturaHumedad *****************
  5702 ;; Defined at:
  5703 ;;		line 696 in file "main.c"
  5704 ;; Parameters:    Size  Location     Type
  5705 ;;  Humedad         2    3[COMRAM] PTR unsigned char 
  5706 ;;		 -> mostrarDatosSensoresWIFI@humedad(1), mostrarDatosSensores@humedad(1), NULL(0), 
  5707 ;;  Temperatura     2    5[COMRAM] PTR unsigned char 
  5708 ;;		 -> mostrarDatosSensoresWIFI@temperatura(1), mostrarDatosSensores@temperatura(1), estaSeco@temperatura(1), 
  5709 ;; Auto vars:     Size  Location     Type
  5710 ;;  checkSum        2    9[COMRAM] unsigned int 
  5711 ;;  temperatura     1   14[COMRAM] unsigned char 
  5712 ;;  humedad         1   13[COMRAM] unsigned char 
  5713 ;;  temperaturaD    1   12[COMRAM] unsigned char 
  5714 ;;  humedadDecim    1   11[COMRAM] unsigned char 
  5715 ;; Return value:  Size  Location     Type
  5716 ;;                  1    wreg      void 
  5717 ;; Registers used:
  5718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5719 ;; Tracked objects:
  5720 ;;		On entry : 0/0
  5721 ;;		On exit  : 0/0
  5722 ;;		Unchanged: 0/0
  5723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5724 ;;      Params:         4       0       0       0       0       0       0       0       0
  5725 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5726 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5727 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5728 ;;Total ram usage:       12 bytes
  5729 ;; Hardware stack levels used:    1
  5730 ;; Hardware stack levels required when called:    3
  5731 ;; This function calls:
  5732 ;;		_DHT11_ReadData
  5733 ;;		_DHT11_Start
  5734 ;;		_UART_printf
  5735 ;;		_check_response
  5736 ;; This function is called by:
  5737 ;;		_estaSeco
  5738 ;;		_mostrarDatosSensores
  5739 ;;		_mostrarDatosSensoresWIFI
  5740 ;; This function uses a non-reentrant model
  5741 ;;
  5742                           
  5743                           	psect	text22
  5744  0021FC                     __ptext22:
  5745                           	opt callstack 0
  5746  0021FC                     _dameTemperaturaHumedad:
  5747                           	opt callstack 24
  5748  0021FC                     
  5749                           ;main.c: 698:     PIE1bits.RCIE = 0;
  5750  0021FC  9A9D               	bcf	157,5,c	;volatile
  5751                           
  5752                           ;main.c: 699:     T0CONbits.TMR0ON = 0;
  5753  0021FE  9ED5               	bcf	213,7,c	;volatile
  5754  002200                     
  5755                           ;main.c: 705:     DHT11_Start();
  5756  002200  EC83  F017         	call	_DHT11_Start	;wreg free
  5757  002204                     
  5758                           ;main.c: 707:     if (check_response()) {
  5759  002204  EC5D  F016         	call	_check_response	;wreg free
  5760  002208  0900               	iorlw	0
  5761  00220A  B4D8               	btfsc	status,2,c
  5762  00220C  EF0A  F011         	goto	u2801
  5763  002210  EF0C  F011         	goto	u2800
  5764  002214                     u2801:
  5765  002214  EF4F  F011         	goto	l3661
  5766  002218                     u2800:
  5767  002218                     
  5768                           ;main.c: 710:         humedad = DHT11_ReadData();
  5769  002218  ECC9  F014         	call	_DHT11_ReadData	;wreg free
  5770  00221C  6E0E               	movwf	dameTemperaturaHumedad@humedad^0,c
  5771                           
  5772                           ;main.c: 711:         humedadDecimal = DHT11_ReadData();
  5773  00221E  ECC9  F014         	call	_DHT11_ReadData	;wreg free
  5774  002222  6E0C               	movwf	dameTemperaturaHumedad@humedadDecimal^0,c
  5775                           
  5776                           ;main.c: 712:         temperatura = DHT11_ReadData();
  5777  002224  ECC9  F014         	call	_DHT11_ReadData	;wreg free
  5778  002228  6E0F               	movwf	dameTemperaturaHumedad@temperatura^0,c
  5779                           
  5780                           ;main.c: 713:         temperaturaDecimal = DHT11_ReadData();
  5781  00222A  ECC9  F014         	call	_DHT11_ReadData	;wreg free
  5782  00222E  6E0D               	movwf	dameTemperaturaHumedad@temperaturaDecimal^0,c
  5783                           
  5784                           ;main.c: 714:         checkSum = DHT11_ReadData();
  5785  002230  ECC9  F014         	call	_DHT11_ReadData	;wreg free
  5786  002234  6E08               	movwf	??_dameTemperaturaHumedad^0,c
  5787  002236  5008               	movf	??_dameTemperaturaHumedad^0,w,c
  5788  002238  6E0A               	movwf	dameTemperaturaHumedad@checkSum^0,c
  5789  00223A  6A0B               	clrf	(dameTemperaturaHumedad@checkSum+1)^0,c
  5790  00223C                     
  5791                           ;main.c: 716:         if (checkSum != (humedad + humedadDecimal + temperatura + temperat
      +                          uraDecimal))
  5792  00223C  500C               	movf	dameTemperaturaHumedad@humedadDecimal^0,w,c
  5793  00223E  C00E  F008         	movff	dameTemperaturaHumedad@humedad,??_dameTemperaturaHumedad
  5794  002242  6A09               	clrf	(??_dameTemperaturaHumedad+1)^0,c
  5795  002244  2608               	addwf	??_dameTemperaturaHumedad^0,f,c
  5796  002246  0E00               	movlw	0
  5797  002248  2209               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  5798  00224A  500F               	movf	dameTemperaturaHumedad@temperatura^0,w,c
  5799  00224C  2608               	addwf	??_dameTemperaturaHumedad^0,f,c
  5800  00224E  0E00               	movlw	0
  5801  002250  2209               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  5802  002252  500D               	movf	dameTemperaturaHumedad@temperaturaDecimal^0,w,c
  5803  002254  2608               	addwf	??_dameTemperaturaHumedad^0,f,c
  5804  002256  0E00               	movlw	0
  5805  002258  2209               	addwfc	(??_dameTemperaturaHumedad+1)^0,f,c
  5806  00225A  500A               	movf	dameTemperaturaHumedad@checkSum^0,w,c
  5807  00225C  1808               	xorwf	??_dameTemperaturaHumedad^0,w,c
  5808  00225E  E109               	bnz	u2810
  5809  002260  500B               	movf	(dameTemperaturaHumedad@checkSum+1)^0,w,c
  5810  002262  1809               	xorwf	(??_dameTemperaturaHumedad+1)^0,w,c
  5811  002264  B4D8               	btfsc	status,2,c
  5812  002266  EF37  F011         	goto	u2811
  5813  00226A  EF39  F011         	goto	u2810
  5814  00226E                     u2811:
  5815  00226E  EF41  F011         	goto	l3659
  5816  002272                     u2810:
  5817  002272                     
  5818                           ;main.c: 717:             UART_printf("Error de lectura DHT11\r\n");
  5819  002272  0E31               	movlw	low STR_35
  5820  002274  6E02               	movwf	UART_printf@cadena^0,c
  5821  002276  0E7F               	movlw	high STR_35
  5822  002278  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5823  00227A  EC9A  F014         	call	_UART_printf	;wreg free
  5824  00227E  EF55  F011         	goto	l3663
  5825  002282                     l3659:
  5826                           
  5827                           ;main.c: 719:             *Humedad = humedad;
  5828  002282  C004  FFD9         	movff	dameTemperaturaHumedad@Humedad,fsr2l
  5829  002286  C005  FFDA         	movff	dameTemperaturaHumedad@Humedad+1,fsr2h
  5830  00228A  C00E  FFDF         	movff	dameTemperaturaHumedad@humedad,indf2
  5831                           
  5832                           ;main.c: 720:             *Temperatura = temperatura;
  5833  00228E  C006  FFD9         	movff	dameTemperaturaHumedad@Temperatura,fsr2l
  5834  002292  C007  FFDA         	movff	dameTemperaturaHumedad@Temperatura+1,fsr2h
  5835  002296  C00F  FFDF         	movff	dameTemperaturaHumedad@temperatura,indf2
  5836  00229A  EF55  F011         	goto	l3663
  5837  00229E                     l3661:
  5838                           
  5839                           ;main.c: 724:         UART_printf("DHT11 NO RESPONDIO\r\n");
  5840  00229E  0E78               	movlw	low STR_36
  5841  0022A0  6E02               	movwf	UART_printf@cadena^0,c
  5842  0022A2  0E7F               	movlw	high STR_36
  5843  0022A4  6E03               	movwf	(UART_printf@cadena+1)^0,c
  5844  0022A6  EC9A  F014         	call	_UART_printf	;wreg free
  5845  0022AA                     l3663:
  5846                           
  5847                           ;main.c: 727:     PIE1bits.RCIE = 1;
  5848  0022AA  8A9D               	bsf	157,5,c	;volatile
  5849  0022AC                     
  5850                           ;main.c: 728:     T0CONbits.TMR0ON = 1;
  5851  0022AC  8ED5               	bsf	213,7,c	;volatile
  5852  0022AE  0012               	return		;funcret
  5853  0022B0                     __end_of_dameTemperaturaHumedad:
  5854                           	opt callstack 0
  5855                           
  5856 ;; *************** function _check_response *****************
  5857 ;; Defined at:
  5858 ;;		line 38 in file "./DHT11.h"
  5859 ;; Parameters:    Size  Location     Type
  5860 ;;		None
  5861 ;; Auto vars:     Size  Location     Type
  5862 ;;  respuesta       1    0[COMRAM] unsigned char 
  5863 ;; Return value:  Size  Location     Type
  5864 ;;                  1    wreg      unsigned char 
  5865 ;; Registers used:
  5866 ;;		wreg, status,2
  5867 ;; Tracked objects:
  5868 ;;		On entry : 0/0
  5869 ;;		On exit  : 0/0
  5870 ;;		Unchanged: 0/0
  5871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5872 ;;      Params:         0       0       0       0       0       0       0       0       0
  5873 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5874 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5875 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5876 ;;Total ram usage:        1 bytes
  5877 ;; Hardware stack levels used:    1
  5878 ;; Hardware stack levels required when called:    1
  5879 ;; This function calls:
  5880 ;;		Nothing
  5881 ;; This function is called by:
  5882 ;;		_dameTemperaturaHumedad
  5883 ;; This function uses a non-reentrant model
  5884 ;;
  5885                           
  5886                           	psect	text23
  5887  002CBA                     __ptext23:
  5888                           	opt callstack 0
  5889  002CBA                     _check_response:
  5890                           	opt callstack 25
  5891  002CBA                     
  5892                           ;./DHT11.h: 40:     unsigned char respuesta = 0;
  5893  002CBA  0E00               	movlw	0
  5894  002CBC  6E01               	movwf	check_response@respuesta^0,c
  5895  002CBE                     
  5896                           ;./DHT11.h: 41:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  5897  002CBE  0E0D               	movlw	13
  5898  002CC0                     u3717:
  5899  002CC0  2EE8               	decfsz	wreg,f,c
  5900  002CC2  D7FE               	bra	u3717
  5901  002CC4  F000               	nop	
  5902  002CC6                     
  5903                           ;./DHT11.h: 42:     if (!PORTDbits.RD7) {
  5904  002CC6  BE83               	btfsc	131,7,c	;volatile
  5905  002CC8  EF68  F016         	goto	u2691
  5906  002CCC  EF6A  F016         	goto	u2690
  5907  002CD0                     u2691:
  5908  002CD0  EF7B  F016         	goto	l3553
  5909  002CD4                     u2690:
  5910  002CD4                     
  5911                           ;./DHT11.h: 43:         _delay((unsigned long)((80)*(4000000/4000000.0)));
  5912  002CD4  0E1A               	movlw	26
  5913  002CD6                     u3727:
  5914  002CD6  2EE8               	decfsz	wreg,f,c
  5915  002CD8  D7FE               	bra	u3727
  5916  002CDA  D000               	nop2	
  5917  002CDC                     
  5918                           ;./DHT11.h: 44:         if (PORTDbits.RD7) {
  5919  002CDC  AE83               	btfss	131,7,c	;volatile
  5920  002CDE  EF73  F016         	goto	u2701
  5921  002CE2  EF75  F016         	goto	u2700
  5922  002CE6                     u2701:
  5923  002CE6  EF7B  F016         	goto	l3553
  5924  002CEA                     u2700:
  5925  002CEA                     
  5926                           ;./DHT11.h: 45:             _delay((unsigned long)((50)*(4000000/4000000.0)));
  5927  002CEA  0E10               	movlw	16
  5928  002CEC                     u3737:
  5929  002CEC  2EE8               	decfsz	wreg,f,c
  5930  002CEE  D7FE               	bra	u3737
  5931  002CF0  D000               	nop2	
  5932  002CF2                     
  5933                           ;./DHT11.h: 46:             respuesta = 1;
  5934  002CF2  0E01               	movlw	1
  5935  002CF4  6E01               	movwf	check_response@respuesta^0,c
  5936  002CF6                     l3553:
  5937                           
  5938                           ;./DHT11.h: 50:     return respuesta;
  5939  002CF6  5001               	movf	check_response@respuesta^0,w,c
  5940  002CF8  0012               	return		;funcret
  5941  002CFA                     __end_of_check_response:
  5942                           	opt callstack 0
  5943                           
  5944 ;; *************** function _DHT11_Start *****************
  5945 ;; Defined at:
  5946 ;;		line 23 in file "./DHT11.h"
  5947 ;; Parameters:    Size  Location     Type
  5948 ;;		None
  5949 ;; Auto vars:     Size  Location     Type
  5950 ;;		None
  5951 ;; Return value:  Size  Location     Type
  5952 ;;                  1    wreg      void 
  5953 ;; Registers used:
  5954 ;;		wreg
  5955 ;; Tracked objects:
  5956 ;;		On entry : 0/0
  5957 ;;		On exit  : 0/0
  5958 ;;		Unchanged: 0/0
  5959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5960 ;;      Params:         0       0       0       0       0       0       0       0       0
  5961 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5962 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5963 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5964 ;;Total ram usage:        1 bytes
  5965 ;; Hardware stack levels used:    1
  5966 ;; Hardware stack levels required when called:    1
  5967 ;; This function calls:
  5968 ;;		Nothing
  5969 ;; This function is called by:
  5970 ;;		_dameTemperaturaHumedad
  5971 ;; This function uses a non-reentrant model
  5972 ;;
  5973                           
  5974                           	psect	text24
  5975  002F06                     __ptext24:
  5976                           	opt callstack 0
  5977  002F06                     _DHT11_Start:
  5978                           	opt callstack 25
  5979  002F06                     
  5980                           ;./DHT11.h: 24:     TRISDbits.RD7 = 0;
  5981  002F06  9E95               	bcf	149,7,c	;volatile
  5982                           
  5983                           ;./DHT11.h: 26:     LATDbits.LATD7 = 0;
  5984  002F08  9E8C               	bcf	140,7,c	;volatile
  5985  002F0A                     
  5986                           ;./DHT11.h: 28:     _delay((unsigned long)((20)*(4000000/4000.0)));
  5987  002F0A  0E1A               	movlw	26
  5988  002F0C  6E01               	movwf	??_DHT11_Start^0,c
  5989  002F0E  0EF8               	movlw	248
  5990  002F10                     u3747:
  5991  002F10  2EE8               	decfsz	wreg,f,c
  5992  002F12  D7FE               	bra	u3747
  5993  002F14  2E01               	decfsz	??_DHT11_Start^0,f,c
  5994  002F16  D7FC               	bra	u3747
  5995  002F18  D000               	nop2	
  5996  002F1A                     
  5997                           ;./DHT11.h: 30:     LATDbits.LATD7 = 1;
  5998  002F1A  8E8C               	bsf	140,7,c	;volatile
  5999                           
  6000                           ;./DHT11.h: 32:     _delay((unsigned long)((30)*(4000000/4000000.0)));
  6001  002F1C  0E0A               	movlw	10
  6002  002F1E                     u3757:
  6003  002F1E  2EE8               	decfsz	wreg,f,c
  6004  002F20  D7FE               	bra	u3757
  6005  002F22                     
  6006                           ;./DHT11.h: 34:     TRISDbits.RD7 = 1;
  6007  002F22  8E95               	bsf	149,7,c	;volatile
  6008  002F24  0012               	return		;funcret
  6009  002F26                     __end_of_DHT11_Start:
  6010                           	opt callstack 0
  6011                           
  6012 ;; *************** function _DHT11_ReadData *****************
  6013 ;; Defined at:
  6014 ;;		line 9 in file "./DHT11.h"
  6015 ;; Parameters:    Size  Location     Type
  6016 ;;		None
  6017 ;; Auto vars:     Size  Location     Type
  6018 ;;  data            1    1[COMRAM] unsigned char 
  6019 ;;  i               1    0[COMRAM] unsigned char 
  6020 ;; Return value:  Size  Location     Type
  6021 ;;                  1    wreg      unsigned char 
  6022 ;; Registers used:
  6023 ;;		wreg, status,2, status,0
  6024 ;; Tracked objects:
  6025 ;;		On entry : 0/0
  6026 ;;		On exit  : 0/0
  6027 ;;		Unchanged: 0/0
  6028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6029 ;;      Params:         0       0       0       0       0       0       0       0       0
  6030 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6031 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6032 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6033 ;;Total ram usage:        2 bytes
  6034 ;; Hardware stack levels used:    1
  6035 ;; Hardware stack levels required when called:    1
  6036 ;; This function calls:
  6037 ;;		Nothing
  6038 ;; This function is called by:
  6039 ;;		_dameTemperaturaHumedad
  6040 ;; This function uses a non-reentrant model
  6041 ;;
  6042                           
  6043                           	psect	text25
  6044  002992                     __ptext25:
  6045                           	opt callstack 0
  6046  002992                     _DHT11_ReadData:
  6047                           	opt callstack 25
  6048  002992                     
  6049                           ;./DHT11.h: 10:     char i, data = 0;
  6050  002992  0E00               	movlw	0
  6051  002994  6E02               	movwf	DHT11_ReadData@data^0,c
  6052                           
  6053                           ;./DHT11.h: 11:     for (i = 0; i < 8; i++) {
  6054  002996  0E00               	movlw	0
  6055  002998  6E01               	movwf	DHT11_ReadData@i^0,c
  6056  00299A                     l150:
  6057  00299A  AE83               	btfss	131,7,c	;volatile
  6058  00299C  EFD2  F014         	goto	u2651
  6059  0029A0  EFD4  F014         	goto	u2650
  6060  0029A4                     u2651:
  6061  0029A4  EFCD  F014         	goto	l150
  6062  0029A8                     u2650:
  6063  0029A8                     
  6064                           ;./DHT11.h: 13:         _delay((unsigned long)((30)*(4000000/4000000.0)));
  6065  0029A8  0E0A               	movlw	10
  6066  0029AA                     u3767:
  6067  0029AA  2EE8               	decfsz	wreg,f,c
  6068  0029AC  D7FE               	bra	u3767
  6069  0029AE                     
  6070                           ;./DHT11.h: 14:         if (PORTDbits.RD7 & 1)
  6071  0029AE  AE83               	btfss	131,7,c	;volatile
  6072  0029B0  EFDC  F014         	goto	u2661
  6073  0029B4  EFDE  F014         	goto	u2660
  6074  0029B8                     u2661:
  6075  0029B8  EFE2  F014         	goto	l3521
  6076  0029BC                     u2660:
  6077  0029BC                     
  6078                           ;./DHT11.h: 15:             data = ((data << 1) | 1);
  6079  0029BC  80D8               	bsf	status,0,c
  6080  0029BE  3602               	rlcf	DHT11_ReadData@data^0,f,c
  6081  0029C0  EFE5  F014         	goto	l155
  6082  0029C4                     l3521:
  6083                           
  6084                           ;./DHT11.h: 17:             data = (data << 1);
  6085  0029C4  5002               	movf	DHT11_ReadData@data^0,w,c
  6086  0029C6  2402               	addwf	DHT11_ReadData@data^0,w,c
  6087  0029C8  6E02               	movwf	DHT11_ReadData@data^0,c
  6088  0029CA                     l155:
  6089  0029CA  BE83               	btfsc	131,7,c	;volatile
  6090  0029CC  EFEA  F014         	goto	u2671
  6091  0029D0  EFEC  F014         	goto	u2670
  6092  0029D4                     u2671:
  6093  0029D4  EFE5  F014         	goto	l155
  6094  0029D8                     u2670:
  6095  0029D8                     
  6096                           ;./DHT11.h: 19:     }
  6097  0029D8  2A01               	incf	DHT11_ReadData@i^0,f,c
  6098  0029DA  0E07               	movlw	7
  6099  0029DC  6401               	cpfsgt	DHT11_ReadData@i^0,c
  6100  0029DE  EFF3  F014         	goto	u2681
  6101  0029E2  EFF5  F014         	goto	u2680
  6102  0029E6                     u2681:
  6103  0029E6  EFCD  F014         	goto	l150
  6104  0029EA                     u2680:
  6105  0029EA                     
  6106                           ;./DHT11.h: 20:     return data;
  6107  0029EA  5002               	movf	DHT11_ReadData@data^0,w,c
  6108  0029EC  0012               	return		;funcret
  6109  0029EE                     __end_of_DHT11_ReadData:
  6110                           	opt callstack 0
  6111                           
  6112 ;; *************** function _fijaHoraRtc *****************
  6113 ;; Defined at:
  6114 ;;		line 366 in file "main.c"
  6115 ;; Parameters:    Size  Location     Type
  6116 ;;		None
  6117 ;; Auto vars:     Size  Location     Type
  6118 ;;		None
  6119 ;; Return value:  Size  Location     Type
  6120 ;;                  1    wreg      void 
  6121 ;; Registers used:
  6122 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6123 ;; Tracked objects:
  6124 ;;		On entry : 0/0
  6125 ;;		On exit  : 0/0
  6126 ;;		Unchanged: 0/0
  6127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6128 ;;      Params:         0       0       0       0       0       0       0       0       0
  6129 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6130 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6131 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6132 ;;Total ram usage:        0 bytes
  6133 ;; Hardware stack levels used:    1
  6134 ;; Hardware stack levels required when called:    5
  6135 ;; This function calls:
  6136 ;;		_UART_printf
  6137 ;;		_escribe_rtc
  6138 ;;		_setRtc
  6139 ;; This function is called by:
  6140 ;;		_sistemaPrincipal
  6141 ;; This function uses a non-reentrant model
  6142 ;;
  6143                           
  6144                           	psect	text26
  6145  002808                     __ptext26:
  6146                           	opt callstack 0
  6147  002808                     _fijaHoraRtc:
  6148                           	opt callstack 24
  6149  002808                     
  6150                           ;main.c: 368:     UART_printf("\r\n FIJA HORA \r\n");
  6151  002808  0EC4               	movlw	low STR_3
  6152  00280A  6E02               	movwf	UART_printf@cadena^0,c
  6153  00280C  0E7F               	movlw	high STR_3
  6154  00280E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6155  002810  EC9A  F014         	call	_UART_printf	;wreg free
  6156                           
  6157                           ;main.c: 371:     UART_printf("\r\n Envie las Horas en formato 24 Ej: 15 \r\n");
  6158  002814  0EB3               	movlw	low STR_4
  6159  002816  6E02               	movwf	UART_printf@cadena^0,c
  6160  002818  0E7C               	movlw	high STR_4
  6161  00281A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6162  00281C  EC9A  F014         	call	_UART_printf	;wreg free
  6163  002820                     
  6164                           ;main.c: 374:     if (setRtc(0x02)) {
  6165  002820  0E02               	movlw	2
  6166  002822  EC5F  F013         	call	_setRtc
  6167  002826  0900               	iorlw	0
  6168  002828  B4D8               	btfsc	status,2,c
  6169  00282A  EF19  F014         	goto	u3291
  6170  00282E  EF1B  F014         	goto	u3290
  6171  002832                     u3291:
  6172  002832  EF37  F014         	goto	l303
  6173  002836                     u3290:
  6174  002836                     
  6175                           ;main.c: 375:         UART_printf("\r\n Envie los Minutos Ej: 25 \r\n");
  6176  002836  0E8D               	movlw	low STR_5
  6177  002838  6E02               	movwf	UART_printf@cadena^0,c
  6178  00283A  0E7E               	movlw	high STR_5
  6179  00283C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6180  00283E  EC9A  F014         	call	_UART_printf	;wreg free
  6181  002842                     
  6182                           ;main.c: 376:         if (setRtc(0x01)) {
  6183  002842  0E01               	movlw	1
  6184  002844  EC5F  F013         	call	_setRtc
  6185  002848  0900               	iorlw	0
  6186  00284A  B4D8               	btfsc	status,2,c
  6187  00284C  EF2A  F014         	goto	u3301
  6188  002850  EF2C  F014         	goto	u3300
  6189  002854                     u3301:
  6190  002854  EF37  F014         	goto	l303
  6191  002858                     u3300:
  6192  002858                     
  6193                           ;main.c: 377:             UART_printf("\r\n HORA ESTABLECIDA CORRECTAMENTE \r\n");
  6194  002858  0E78               	movlw	low STR_6
  6195  00285A  6E02               	movwf	UART_printf@cadena^0,c
  6196  00285C  0E7D               	movlw	high STR_6
  6197  00285E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6198  002860  EC9A  F014         	call	_UART_printf	;wreg free
  6199  002864                     
  6200                           ;main.c: 378:             escribe_rtc(0x00, 0);
  6201  002864  0E00               	movlw	0
  6202  002866  6E03               	movwf	escribe_rtc@dato^0,c
  6203  002868  0E00               	movlw	0
  6204  00286A  EC93  F017         	call	_escribe_rtc
  6205  00286E                     l303:
  6206  00286E  0012               	return		;funcret
  6207  002870                     __end_of_fijaHoraRtc:
  6208                           	opt callstack 0
  6209                           
  6210 ;; *************** function _fijaDiaRtc *****************
  6211 ;; Defined at:
  6212 ;;		line 189 in file "main.c"
  6213 ;; Parameters:    Size  Location     Type
  6214 ;;		None
  6215 ;; Auto vars:     Size  Location     Type
  6216 ;;		None
  6217 ;; Return value:  Size  Location     Type
  6218 ;;                  1    wreg      void 
  6219 ;; Registers used:
  6220 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6221 ;; Tracked objects:
  6222 ;;		On entry : 0/0
  6223 ;;		On exit  : 0/0
  6224 ;;		Unchanged: 0/0
  6225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6226 ;;      Params:         0       0       0       0       0       0       0       0       0
  6227 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6228 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6229 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6230 ;;Total ram usage:        0 bytes
  6231 ;; Hardware stack levels used:    1
  6232 ;; Hardware stack levels required when called:    5
  6233 ;; This function calls:
  6234 ;;		_UART_printf
  6235 ;;		_setRtc
  6236 ;; This function is called by:
  6237 ;;		_sistemaPrincipal
  6238 ;; This function uses a non-reentrant model
  6239 ;;
  6240                           
  6241                           	psect	text27
  6242  002DE4                     __ptext27:
  6243                           	opt callstack 0
  6244  002DE4                     _fijaDiaRtc:
  6245                           	opt callstack 24
  6246  002DE4                     
  6247                           ;main.c: 191:     UART_printf("\r\n Envie el dia de la semana Ej: 01 = DOMINGO ... 07 = 
      +                          SABADO \r\n");
  6248  002DE4  0E1D               	movlw	low STR_1
  6249  002DE6  6E02               	movwf	UART_printf@cadena^0,c
  6250  002DE8  0E7A               	movlw	high STR_1
  6251  002DEA  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6252  002DEC  EC9A  F014         	call	_UART_printf	;wreg free
  6253  002DF0                     
  6254                           ;main.c: 193:     if (setRtc(0x03)) {
  6255  002DF0  0E03               	movlw	3
  6256  002DF2  EC5F  F013         	call	_setRtc
  6257  002DF6  0900               	iorlw	0
  6258  002DF8  B4D8               	btfsc	status,2,c
  6259  002DFA  EF01  F017         	goto	u3181
  6260  002DFE  EF03  F017         	goto	u3180
  6261  002E02                     u3181:
  6262  002E02  EF09  F017         	goto	l247
  6263  002E06                     u3180:
  6264  002E06                     
  6265                           ;main.c: 194:         UART_printf("\r\n DIA ESTABLECIDO CORRECTAMENTE \r\n");
  6266  002E06  0EE7               	movlw	low STR_2
  6267  002E08  6E02               	movwf	UART_printf@cadena^0,c
  6268  002E0A  0E7D               	movlw	high STR_2
  6269  002E0C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6270  002E0E  EC9A  F014         	call	_UART_printf	;wreg free
  6271  002E12                     l247:
  6272  002E12  0012               	return		;funcret
  6273  002E14                     __end_of_fijaDiaRtc:
  6274                           	opt callstack 0
  6275                           
  6276 ;; *************** function _setRtc *****************
  6277 ;; Defined at:
  6278 ;;		line 199 in file "main.c"
  6279 ;; Parameters:    Size  Location     Type
  6280 ;;  direccion       1    wreg     unsigned char 
  6281 ;; Auto vars:     Size  Location     Type
  6282 ;;  direccion       1   14[COMRAM] unsigned char 
  6283 ;;  dato            1   17[COMRAM] unsigned char 
  6284 ;;  datoRtc         1   16[COMRAM] unsigned char 
  6285 ;;  seteado         1   15[COMRAM] unsigned char 
  6286 ;; Return value:  Size  Location     Type
  6287 ;;                  1    wreg      unsigned char 
  6288 ;; Registers used:
  6289 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6290 ;; Tracked objects:
  6291 ;;		On entry : 0/0
  6292 ;;		On exit  : 0/0
  6293 ;;		Unchanged: 0/0
  6294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6295 ;;      Params:         0       0       0       0       0       0       0       0       0
  6296 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6297 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6298 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6299 ;;Total ram usage:        4 bytes
  6300 ;; Hardware stack levels used:    1
  6301 ;; Hardware stack levels required when called:    4
  6302 ;; This function calls:
  6303 ;;		___awdiv
  6304 ;;		___awmod
  6305 ;;		_escribe_rtc
  6306 ;;		_getValue
  6307 ;; This function is called by:
  6308 ;;		_fijaDiaRtc
  6309 ;;		_fijaHoraRtc
  6310 ;; This function uses a non-reentrant model
  6311 ;;
  6312                           
  6313                           	psect	text28
  6314  0026BE                     __ptext28:
  6315                           	opt callstack 0
  6316  0026BE                     _setRtc:
  6317                           	opt callstack 24
  6318                           
  6319                           ;incstack = 0
  6320                           ;setRtc@direccion stored from wreg
  6321  0026BE  6E0F               	movwf	setRtc@direccion^0,c
  6322  0026C0                     
  6323                           ;main.c: 202:     unsigned char seteado = 0;
  6324  0026C0  0E00               	movlw	0
  6325  0026C2  6E10               	movwf	setRtc@seteado^0,c
  6326                           
  6327                           ;main.c: 203:     unsigned char datoRtc = 0;
  6328  0026C4  0E00               	movlw	0
  6329  0026C6  6E11               	movwf	setRtc@datoRtc^0,c
  6330  0026C8                     
  6331                           ;main.c: 205:     dato = getValue(2);
  6332  0026C8  0E00               	movlw	0
  6333  0026CA  6E05               	movwf	(getValue@numCharacters+1)^0,c
  6334  0026CC  0E02               	movlw	2
  6335  0026CE  6E04               	movwf	getValue@numCharacters^0,c
  6336  0026D0  EC7F  F004         	call	_getValue	;wreg free
  6337  0026D4  6E12               	movwf	setRtc@dato^0,c
  6338  0026D6                     
  6339                           ;main.c: 207:     if (dato != 'F') {
  6340  0026D6  0E46               	movlw	70
  6341  0026D8  1812               	xorwf	setRtc@dato^0,w,c
  6342  0026DA  B4D8               	btfsc	status,2,c
  6343  0026DC  EF72  F013         	goto	u3081
  6344  0026E0  EF74  F013         	goto	u3080
  6345  0026E4                     u3081:
  6346  0026E4  EF95  F013         	goto	l3939
  6347  0026E8                     u3080:
  6348  0026E8                     
  6349                           ;main.c: 209:         datoRtc = ((dato / 10) & 0x0F) << 4;
  6350  0026E8  C012  F001         	movff	setRtc@dato,___awdiv@dividend
  6351  0026EC  6A02               	clrf	(___awdiv@dividend+1)^0,c
  6352  0026EE  0E00               	movlw	0
  6353  0026F0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6354  0026F2  0E0A               	movlw	10
  6355  0026F4  6E03               	movwf	___awdiv@divisor^0,c
  6356  0026F6  EC9C  F010         	call	___awdiv	;wreg free
  6357  0026FA  0E0F               	movlw	15
  6358  0026FC  1601               	andwf	?___awdiv^0,f,c
  6359  0026FE  3801               	swapf	?___awdiv^0,w,c
  6360  002700  0BF0               	andlw	240
  6361  002702  6E11               	movwf	setRtc@datoRtc^0,c
  6362                           
  6363                           ;main.c: 210:         datoRtc |= (dato % 10) & 0x0F;
  6364  002704  C012  F001         	movff	setRtc@dato,___awmod@dividend
  6365  002708  6A02               	clrf	(___awmod@dividend+1)^0,c
  6366  00270A  0E00               	movlw	0
  6367  00270C  6E04               	movwf	(___awmod@divisor+1)^0,c
  6368  00270E  0E0A               	movlw	10
  6369  002710  6E03               	movwf	___awmod@divisor^0,c
  6370  002712  EC58  F011         	call	___awmod	;wreg free
  6371  002716  5001               	movf	?___awmod^0,w,c
  6372  002718  0B0F               	andlw	15
  6373  00271A  1211               	iorwf	setRtc@datoRtc^0,f,c
  6374                           
  6375                           ;main.c: 211:         escribe_rtc(direccion, datoRtc);
  6376  00271C  C011  F003         	movff	setRtc@datoRtc,escribe_rtc@dato
  6377  002720  500F               	movf	setRtc@direccion^0,w,c
  6378  002722  EC93  F017         	call	_escribe_rtc
  6379  002726                     
  6380                           ;main.c: 212:         seteado = 1;
  6381  002726  0E01               	movlw	1
  6382  002728  6E10               	movwf	setRtc@seteado^0,c
  6383  00272A                     l3939:
  6384                           
  6385                           ;main.c: 215:     return seteado;
  6386  00272A  5010               	movf	setRtc@seteado^0,w,c
  6387  00272C  0012               	return		;funcret
  6388  00272E                     __end_of_setRtc:
  6389                           	opt callstack 0
  6390                           
  6391 ;; *************** function _escribe_rtc *****************
  6392 ;; Defined at:
  6393 ;;		line 2 in file "./RTC.h"
  6394 ;; Parameters:    Size  Location     Type
  6395 ;;  direccion       1    wreg     unsigned char 
  6396 ;;  dato            1    2[COMRAM] unsigned char 
  6397 ;; Auto vars:     Size  Location     Type
  6398 ;;  direccion       1    3[COMRAM] unsigned char 
  6399 ;; Return value:  Size  Location     Type
  6400 ;;                  1    wreg      void 
  6401 ;; Registers used:
  6402 ;;		wreg, status,2, status,0, cstack
  6403 ;; Tracked objects:
  6404 ;;		On entry : 0/0
  6405 ;;		On exit  : 0/0
  6406 ;;		Unchanged: 0/0
  6407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6408 ;;      Params:         1       0       0       0       0       0       0       0       0
  6409 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6410 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6411 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6412 ;;Total ram usage:        2 bytes
  6413 ;; Hardware stack levels used:    1
  6414 ;; Hardware stack levels required when called:    3
  6415 ;; This function calls:
  6416 ;;		_i2c_detener
  6417 ;;		_i2c_envia_dato
  6418 ;;		_i2c_inicia_com
  6419 ;; This function is called by:
  6420 ;;		_setRtc
  6421 ;;		_fijaHoraRtc
  6422 ;;		_setRtcDefault
  6423 ;; This function uses a non-reentrant model
  6424 ;;
  6425                           
  6426                           	psect	text29
  6427  002F26                     __ptext29:
  6428                           	opt callstack 0
  6429  002F26                     _escribe_rtc:
  6430                           	opt callstack 24
  6431                           
  6432                           ;incstack = 0
  6433                           ;escribe_rtc@direccion stored from wreg
  6434  002F26  6E04               	movwf	escribe_rtc@direccion^0,c
  6435  002F28                     
  6436                           ;./RTC.h: 3:     i2c_inicia_com();
  6437  002F28  ECE7  F017         	call	_i2c_inicia_com	;wreg free
  6438                           
  6439                           ;./RTC.h: 4:     i2c_envia_dato(0xD0);
  6440  002F2C  0ED0               	movlw	208
  6441  002F2E  ECCD  F017         	call	_i2c_envia_dato
  6442                           
  6443                           ;./RTC.h: 5:     i2c_envia_dato(direccion);
  6444  002F32  5004               	movf	escribe_rtc@direccion^0,w,c
  6445  002F34  ECCD  F017         	call	_i2c_envia_dato
  6446                           
  6447                           ;./RTC.h: 6:     i2c_envia_dato(dato);
  6448  002F38  5003               	movf	escribe_rtc@dato^0,w,c
  6449  002F3A  ECCD  F017         	call	_i2c_envia_dato
  6450                           
  6451                           ;./RTC.h: 7:     i2c_detener();
  6452  002F3E  ECEB  F017         	call	_i2c_detener	;wreg free
  6453  002F42  0012               	return		;funcret
  6454  002F44                     __end_of_escribe_rtc:
  6455                           	opt callstack 0
  6456                           
  6457 ;; *************** function ___awmod *****************
  6458 ;; Defined at:
  6459 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  6460 ;; Parameters:    Size  Location     Type
  6461 ;;  dividend        2    0[COMRAM] int 
  6462 ;;  divisor         2    2[COMRAM] int 
  6463 ;; Auto vars:     Size  Location     Type
  6464 ;;  sign            1    5[COMRAM] unsigned char 
  6465 ;;  counter         1    4[COMRAM] unsigned char 
  6466 ;; Return value:  Size  Location     Type
  6467 ;;                  2    0[COMRAM] int 
  6468 ;; Registers used:
  6469 ;;		wreg, status,2, status,0
  6470 ;; Tracked objects:
  6471 ;;		On entry : 0/0
  6472 ;;		On exit  : 0/0
  6473 ;;		Unchanged: 0/0
  6474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6475 ;;      Params:         4       0       0       0       0       0       0       0       0
  6476 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6477 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6478 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6479 ;;Total ram usage:        6 bytes
  6480 ;; Hardware stack levels used:    1
  6481 ;; Hardware stack levels required when called:    1
  6482 ;; This function calls:
  6483 ;;		Nothing
  6484 ;; This function is called by:
  6485 ;;		_setRtc
  6486 ;; This function uses a non-reentrant model
  6487 ;;
  6488                           
  6489                           	psect	text30
  6490  0022B0                     __ptext30:
  6491                           	opt callstack 0
  6492  0022B0                     ___awmod:
  6493                           	opt callstack 26
  6494  0022B0  0E00               	movlw	0
  6495  0022B2  6E06               	movwf	___awmod@sign^0,c
  6496  0022B4  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  6497  0022B6  EF61  F011         	goto	u3000
  6498  0022BA  EF5F  F011         	goto	u3001
  6499  0022BE                     u3001:
  6500  0022BE  EF67  F011         	goto	l3871
  6501  0022C2                     u3000:
  6502  0022C2  6C01               	negf	___awmod@dividend^0,c
  6503  0022C4  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6504  0022C6  B0D8               	btfsc	status,0,c
  6505  0022C8  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6506  0022CA  0E01               	movlw	1
  6507  0022CC  6E06               	movwf	___awmod@sign^0,c
  6508  0022CE                     l3871:
  6509  0022CE  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  6510  0022D0  EF6E  F011         	goto	u3010
  6511  0022D4  EF6C  F011         	goto	u3011
  6512  0022D8                     u3011:
  6513  0022D8  EF72  F011         	goto	l3875
  6514  0022DC                     u3010:
  6515  0022DC  6C03               	negf	___awmod@divisor^0,c
  6516  0022DE  1E04               	comf	(___awmod@divisor+1)^0,f,c
  6517  0022E0  B0D8               	btfsc	status,0,c
  6518  0022E2  2A04               	incf	(___awmod@divisor+1)^0,f,c
  6519  0022E4                     l3875:
  6520  0022E4  5003               	movf	___awmod@divisor^0,w,c
  6521  0022E6  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  6522  0022E8  B4D8               	btfsc	status,2,c
  6523  0022EA  EF79  F011         	goto	u3021
  6524  0022EE  EF7B  F011         	goto	u3020
  6525  0022F2                     u3021:
  6526  0022F2  EF9F  F011         	goto	l3891
  6527  0022F6                     u3020:
  6528  0022F6  0E01               	movlw	1
  6529  0022F8  6E05               	movwf	___awmod@counter^0,c
  6530  0022FA  EF83  F011         	goto	l3881
  6531  0022FE                     l3879:
  6532  0022FE  90D8               	bcf	status,0,c
  6533  002300  3603               	rlcf	___awmod@divisor^0,f,c
  6534  002302  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  6535  002304  2A05               	incf	___awmod@counter^0,f,c
  6536  002306                     l3881:
  6537  002306  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6538  002308  EF88  F011         	goto	u3031
  6539  00230C  EF8A  F011         	goto	u3030
  6540  002310                     u3031:
  6541  002310  EF7F  F011         	goto	l3879
  6542  002314                     u3030:
  6543  002314                     l3883:
  6544  002314  5003               	movf	___awmod@divisor^0,w,c
  6545  002316  5C01               	subwf	___awmod@dividend^0,w,c
  6546  002318  5004               	movf	(___awmod@divisor+1)^0,w,c
  6547  00231A  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  6548  00231C  A0D8               	btfss	status,0,c
  6549  00231E  EF93  F011         	goto	u3041
  6550  002322  EF95  F011         	goto	u3040
  6551  002326                     u3041:
  6552  002326  EF99  F011         	goto	l3887
  6553  00232A                     u3040:
  6554  00232A  5003               	movf	___awmod@divisor^0,w,c
  6555  00232C  5E01               	subwf	___awmod@dividend^0,f,c
  6556  00232E  5004               	movf	(___awmod@divisor+1)^0,w,c
  6557  002330  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  6558  002332                     l3887:
  6559  002332  90D8               	bcf	status,0,c
  6560  002334  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  6561  002336  3203               	rrcf	___awmod@divisor^0,f,c
  6562  002338  2E05               	decfsz	___awmod@counter^0,f,c
  6563  00233A  EF8A  F011         	goto	l3883
  6564  00233E                     l3891:
  6565  00233E  5006               	movf	___awmod@sign^0,w,c
  6566  002340  B4D8               	btfsc	status,2,c
  6567  002342  EFA5  F011         	goto	u3051
  6568  002346  EFA7  F011         	goto	u3050
  6569  00234A                     u3051:
  6570  00234A  EFAB  F011         	goto	l3895
  6571  00234E                     u3050:
  6572  00234E  6C01               	negf	___awmod@dividend^0,c
  6573  002350  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6574  002352  B0D8               	btfsc	status,0,c
  6575  002354  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6576  002356                     l3895:
  6577  002356  C001  F001         	movff	___awmod@dividend,?___awmod
  6578  00235A  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6579  00235E  0012               	return		;funcret
  6580  002360                     __end_of___awmod:
  6581                           	opt callstack 0
  6582                           
  6583 ;; *************** function ___awdiv *****************
  6584 ;; Defined at:
  6585 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  6586 ;; Parameters:    Size  Location     Type
  6587 ;;  dividend        2    0[COMRAM] int 
  6588 ;;  divisor         2    2[COMRAM] int 
  6589 ;; Auto vars:     Size  Location     Type
  6590 ;;  quotient        2    6[COMRAM] int 
  6591 ;;  sign            1    5[COMRAM] unsigned char 
  6592 ;;  counter         1    4[COMRAM] unsigned char 
  6593 ;; Return value:  Size  Location     Type
  6594 ;;                  2    0[COMRAM] int 
  6595 ;; Registers used:
  6596 ;;		wreg, status,2, status,0
  6597 ;; Tracked objects:
  6598 ;;		On entry : 0/0
  6599 ;;		On exit  : 0/0
  6600 ;;		Unchanged: 0/0
  6601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6602 ;;      Params:         4       0       0       0       0       0       0       0       0
  6603 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6604 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6605 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6606 ;;Total ram usage:        8 bytes
  6607 ;; Hardware stack levels used:    1
  6608 ;; Hardware stack levels required when called:    1
  6609 ;; This function calls:
  6610 ;;		Nothing
  6611 ;; This function is called by:
  6612 ;;		_setRtc
  6613 ;; This function uses a non-reentrant model
  6614 ;;
  6615                           
  6616                           	psect	text31
  6617  002138                     __ptext31:
  6618                           	opt callstack 0
  6619  002138                     ___awdiv:
  6620                           	opt callstack 26
  6621  002138  0E00               	movlw	0
  6622  00213A  6E06               	movwf	___awdiv@sign^0,c
  6623  00213C  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  6624  00213E  EFA5  F010         	goto	u2940
  6625  002142  EFA3  F010         	goto	u2941
  6626  002146                     u2941:
  6627  002146  EFAB  F010         	goto	l3827
  6628  00214A                     u2940:
  6629  00214A  6C03               	negf	___awdiv@divisor^0,c
  6630  00214C  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  6631  00214E  B0D8               	btfsc	status,0,c
  6632  002150  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  6633  002152  0E01               	movlw	1
  6634  002154  6E06               	movwf	___awdiv@sign^0,c
  6635  002156                     l3827:
  6636  002156  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  6637  002158  EFB2  F010         	goto	u2950
  6638  00215C  EFB0  F010         	goto	u2951
  6639  002160                     u2951:
  6640  002160  EFB8  F010         	goto	l3833
  6641  002164                     u2950:
  6642  002164  6C01               	negf	___awdiv@dividend^0,c
  6643  002166  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  6644  002168  B0D8               	btfsc	status,0,c
  6645  00216A  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  6646  00216C  0E01               	movlw	1
  6647  00216E  1A06               	xorwf	___awdiv@sign^0,f,c
  6648  002170                     l3833:
  6649  002170  0E00               	movlw	0
  6650  002172  6E08               	movwf	(___awdiv@quotient+1)^0,c
  6651  002174  0E00               	movlw	0
  6652  002176  6E07               	movwf	___awdiv@quotient^0,c
  6653  002178  5003               	movf	___awdiv@divisor^0,w,c
  6654  00217A  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  6655  00217C  B4D8               	btfsc	status,2,c
  6656  00217E  EFC3  F010         	goto	u2961
  6657  002182  EFC5  F010         	goto	u2960
  6658  002186                     u2961:
  6659  002186  EFED  F010         	goto	l3855
  6660  00218A                     u2960:
  6661  00218A  0E01               	movlw	1
  6662  00218C  6E05               	movwf	___awdiv@counter^0,c
  6663  00218E  EFCD  F010         	goto	l3841
  6664  002192                     l3839:
  6665  002192  90D8               	bcf	status,0,c
  6666  002194  3603               	rlcf	___awdiv@divisor^0,f,c
  6667  002196  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  6668  002198  2A05               	incf	___awdiv@counter^0,f,c
  6669  00219A                     l3841:
  6670  00219A  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  6671  00219C  EFD2  F010         	goto	u2971
  6672  0021A0  EFD4  F010         	goto	u2970
  6673  0021A4                     u2971:
  6674  0021A4  EFC9  F010         	goto	l3839
  6675  0021A8                     u2970:
  6676  0021A8                     l3843:
  6677  0021A8  90D8               	bcf	status,0,c
  6678  0021AA  3607               	rlcf	___awdiv@quotient^0,f,c
  6679  0021AC  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  6680  0021AE  5003               	movf	___awdiv@divisor^0,w,c
  6681  0021B0  5C01               	subwf	___awdiv@dividend^0,w,c
  6682  0021B2  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6683  0021B4  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  6684  0021B6  A0D8               	btfss	status,0,c
  6685  0021B8  EFE0  F010         	goto	u2981
  6686  0021BC  EFE2  F010         	goto	u2980
  6687  0021C0                     u2981:
  6688  0021C0  EFE7  F010         	goto	l3851
  6689  0021C4                     u2980:
  6690  0021C4  5003               	movf	___awdiv@divisor^0,w,c
  6691  0021C6  5E01               	subwf	___awdiv@dividend^0,f,c
  6692  0021C8  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6693  0021CA  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  6694  0021CC  8007               	bsf	___awdiv@quotient^0,0,c
  6695  0021CE                     l3851:
  6696  0021CE  90D8               	bcf	status,0,c
  6697  0021D0  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  6698  0021D2  3203               	rrcf	___awdiv@divisor^0,f,c
  6699  0021D4  2E05               	decfsz	___awdiv@counter^0,f,c
  6700  0021D6  EFD4  F010         	goto	l3843
  6701  0021DA                     l3855:
  6702  0021DA  5006               	movf	___awdiv@sign^0,w,c
  6703  0021DC  B4D8               	btfsc	status,2,c
  6704  0021DE  EFF3  F010         	goto	u2991
  6705  0021E2  EFF5  F010         	goto	u2990
  6706  0021E6                     u2991:
  6707  0021E6  EFF9  F010         	goto	l3859
  6708  0021EA                     u2990:
  6709  0021EA  6C07               	negf	___awdiv@quotient^0,c
  6710  0021EC  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  6711  0021EE  B0D8               	btfsc	status,0,c
  6712  0021F0  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  6713  0021F2                     l3859:
  6714  0021F2  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6715  0021F6  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6716  0021FA  0012               	return		;funcret
  6717  0021FC                     __end_of___awdiv:
  6718                           	opt callstack 0
  6719                           
  6720 ;; *************** function _dameDatosSistema *****************
  6721 ;; Defined at:
  6722 ;;		line 656 in file "main.c"
  6723 ;; Parameters:    Size  Location     Type
  6724 ;;		None
  6725 ;; Auto vars:     Size  Location     Type
  6726 ;;  j               2  132[BANK0 ] int 
  6727 ;;  i               2  134[BANK0 ] int 
  6728 ;;  diasRegar      50   76[BANK0 ] unsigned char [50]
  6729 ;;  buffer         50   26[BANK0 ] unsigned char [50]
  6730 ;; Return value:  Size  Location     Type
  6731 ;;                  1    wreg      void 
  6732 ;; Registers used:
  6733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6734 ;; Tracked objects:
  6735 ;;		On entry : 0/0
  6736 ;;		On exit  : 0/0
  6737 ;;		Unchanged: 0/0
  6738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6739 ;;      Params:         0       0       0       0       0       0       0       0       0
  6740 ;;      Locals:         0     110       0       0       0       0       0       0       0
  6741 ;;      Temps:          0       4       0       0       0       0       0       0       0
  6742 ;;      Totals:         0     114       0       0       0       0       0       0       0
  6743 ;;Total ram usage:      114 bytes
  6744 ;; Hardware stack levels used:    1
  6745 ;; Hardware stack levels required when called:    9
  6746 ;; This function calls:
  6747 ;;		_UART_printf
  6748 ;;		_UART_write
  6749 ;;		___wmul
  6750 ;;		_sprintf
  6751 ;; This function is called by:
  6752 ;;		_sistemaPrincipal
  6753 ;; This function uses a non-reentrant model
  6754 ;;
  6755                           
  6756                           	psect	text32
  6757  000B22                     __ptext32:
  6758                           	opt callstack 0
  6759  000B22                     _dameDatosSistema:
  6760                           	opt callstack 20
  6761  000B22                     
  6762                           ;main.c: 658:     char buffer[50];;main.c: 659:     char diasRegar[50];;main.c: 661:    
      +                           UART_write('I');
  6763  000B22  0E49               	movlw	73
  6764  000B24  ECAF  F017         	call	_UART_write
  6765  000B28                     
  6766                           ;main.c: 663:     UART_printf("\r\n\nHora | Regar(1 si 0 no) | Minutos de riego | DIAS R
      +                          EGAR\r\n\n");
  6767  000B28  0E5E               	movlw	low STR_32
  6768  000B2A  6E02               	movwf	UART_printf@cadena^0,c
  6769  000B2C  0E7A               	movlw	high STR_32
  6770  000B2E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6771  000B30  EC9A  F014         	call	_UART_printf	;wreg free
  6772  000B34                     
  6773                           ;main.c: 664:     UART_printf("                                             DLMIJVS\r\n"
      +                          );
  6774  000B34  0E83               	movlw	low STR_33
  6775  000B36  6E02               	movwf	UART_printf@cadena^0,c
  6776  000B38  0E7B               	movlw	high STR_33
  6777  000B3A  6E03               	movwf	(UART_printf@cadena+1)^0,c
  6778  000B3C  EC9A  F014         	call	_UART_printf	;wreg free
  6779  000B40                     
  6780                           ;main.c: 666:     for (int i = 0; i < 24; i++) {
  6781  000B40  0E00               	movlw	0
  6782  000B42  0100               	movlb	0	; () banked
  6783  000B44  6FE7               	movwf	(dameDatosSistema@i+1)& (0+255),b
  6784  000B46  0E00               	movlw	0
  6785  000B48  6FE6               	movwf	dameDatosSistema@i& (0+255),b
  6786  000B4A                     l4221:
  6787                           
  6788                           ; BSR set to: 0
  6789                           ;main.c: 668:         if (horarios[i].regar) {
  6790  000B4A  C0E6  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  6791  000B4E  C0E7  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  6792  000B52  0E00               	movlw	0
  6793  000B54  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6794  000B56  0E0C               	movlw	12
  6795  000B58  6E03               	movwf	___wmul@multiplicand^0,c
  6796  000B5A  EC60  F017         	call	___wmul	;wreg free
  6797  000B5E  0EE9               	movlw	low (_horarios+9)
  6798  000B60  2401               	addwf	?___wmul^0,w,c
  6799  000B62  6ED9               	movwf	fsr2l,c
  6800  000B64  0E06               	movlw	high (_horarios+9)
  6801  000B66  2002               	addwfc	(?___wmul+1)^0,w,c
  6802  000B68  6EDA               	movwf	fsr2h,c
  6803  000B6A  50DF               	movf	indf2,w,c
  6804  000B6C  B4D8               	btfsc	status,2,c
  6805  000B6E  EFBB  F005         	goto	u3371
  6806  000B72  EFBD  F005         	goto	u3370
  6807  000B76                     u3371:
  6808  000B76  EF7C  F006         	goto	l4247
  6809  000B7A                     u3370:
  6810  000B7A                     
  6811                           ;main.c: 670:             for (int j = 0; j < 7; j++) {
  6812  000B7A  0E00               	movlw	0
  6813  000B7C  0100               	movlb	0	; () banked
  6814  000B7E  6FE5               	movwf	(dameDatosSistema@j+1)& (0+255),b
  6815  000B80  0E00               	movlw	0
  6816  000B82  6FE4               	movwf	dameDatosSistema@j& (0+255),b
  6817  000B84  EFD8  F005         	goto	l4235
  6818  000B88                     l4229:
  6819                           
  6820                           ; BSR set to: 0
  6821                           ;main.c: 673:                         diasRegar[j] = '0';
  6822  000B88  0EAC               	movlw	low dameDatosSistema@diasRegar
  6823  000B8A  25E4               	addwf	dameDatosSistema@j& (0+255),w,b
  6824  000B8C  6ED9               	movwf	fsr2l,c
  6825  000B8E  0E00               	movlw	high dameDatosSistema@diasRegar
  6826  000B90  21E5               	addwfc	(dameDatosSistema@j+1)& (0+255),w,b
  6827  000B92  6EDA               	movwf	fsr2h,c
  6828  000B94  0E30               	movlw	48
  6829  000B96  6EDF               	movwf	indf2,c
  6830                           
  6831                           ;main.c: 674:                         break;
  6832  000B98  EF0A  F006         	goto	l4237
  6833  000B9C                     l4231:
  6834                           
  6835                           ; BSR set to: 0
  6836                           ;main.c: 677:                         diasRegar[j] = '1';
  6837  000B9C  0EAC               	movlw	low dameDatosSistema@diasRegar
  6838  000B9E  25E4               	addwf	dameDatosSistema@j& (0+255),w,b
  6839  000BA0  6ED9               	movwf	fsr2l,c
  6840  000BA2  0E00               	movlw	high dameDatosSistema@diasRegar
  6841  000BA4  21E5               	addwfc	(dameDatosSistema@j+1)& (0+255),w,b
  6842  000BA6  6EDA               	movwf	fsr2h,c
  6843  000BA8  0E31               	movlw	49
  6844  000BAA  6EDF               	movwf	indf2,c
  6845                           
  6846                           ;main.c: 678:                         break;
  6847  000BAC  EF0A  F006         	goto	l4237
  6848  000BB0                     l4235:
  6849                           
  6850                           ; BSR set to: 0
  6851  000BB0  C0E6  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  6852  000BB4  C0E7  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  6853  000BB8  0E00               	movlw	0
  6854  000BBA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6855  000BBC  0E0C               	movlw	12
  6856  000BBE  6E03               	movwf	___wmul@multiplicand^0,c
  6857  000BC0  EC60  F017         	call	___wmul	;wreg free
  6858  000BC4  0EE0               	movlw	low _horarios
  6859  000BC6  0100               	movlb	0	; () banked
  6860  000BC8  6F76               	movwf	??_dameDatosSistema& (0+255),b
  6861  000BCA  0E06               	movlw	high _horarios
  6862  000BCC  6F77               	movwf	(??_dameDatosSistema+1)& (0+255),b
  6863  000BCE  0E01               	movlw	1
  6864  000BD0  2776               	addwf	??_dameDatosSistema& (0+255),f,b
  6865  000BD2  0E00               	movlw	0
  6866  000BD4  2377               	addwfc	(??_dameDatosSistema+1)& (0+255),f,b
  6867  000BD6  5001               	movf	?___wmul^0,w,c
  6868  000BD8  2776               	addwf	??_dameDatosSistema& (0+255),f,b
  6869  000BDA  5002               	movf	(?___wmul+1)^0,w,c
  6870  000BDC  2377               	addwfc	(??_dameDatosSistema+1)& (0+255),f,b
  6871  000BDE  51E4               	movf	dameDatosSistema@j& (0+255),w,b
  6872  000BE0  2576               	addwf	??_dameDatosSistema& (0+255),w,b
  6873  000BE2  6ED9               	movwf	fsr2l,c
  6874  000BE4  51E5               	movf	(dameDatosSistema@j+1)& (0+255),w,b
  6875  000BE6  2177               	addwfc	(??_dameDatosSistema+1)& (0+255),w,b
  6876  000BE8  6EDA               	movwf	fsr2h,c
  6877  000BEA  50DF               	movf	indf2,w,c
  6878  000BEC  6F78               	movwf	(??_dameDatosSistema+2)& (0+255),b
  6879  000BEE  6B79               	clrf	(??_dameDatosSistema+3)& (0+255),b
  6880                           
  6881                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6882                           ; Switch size 1, requested type "simple"
  6883                           ; Number of cases is 1, Range of values is 0 to 0
  6884                           ; switch strategies available:
  6885                           ; Name         Instructions Cycles
  6886                           ; simple_byte            4     3 (average)
  6887                           ;	Chosen strategy is simple_byte
  6888  000BF0  5179               	movf	(??_dameDatosSistema+3)& (0+255),w,b
  6889  000BF2  0A00               	xorlw	0	; case 0
  6890  000BF4  B4D8               	btfsc	status,2,c
  6891  000BF6  EFFF  F005         	goto	l4793
  6892  000BFA  EF0A  F006         	goto	l4237
  6893  000BFE                     l4793:
  6894                           
  6895                           ; BSR set to: 0
  6896                           ; Switch size 1, requested type "simple"
  6897                           ; Number of cases is 2, Range of values is 0 to 1
  6898                           ; switch strategies available:
  6899                           ; Name         Instructions Cycles
  6900                           ; simple_byte            7     4 (average)
  6901                           ;	Chosen strategy is simple_byte
  6902  000BFE  5178               	movf	(??_dameDatosSistema+2)& (0+255),w,b
  6903  000C00  0A00               	xorlw	0	; case 0
  6904  000C02  B4D8               	btfsc	status,2,c
  6905  000C04  EFC4  F005         	goto	l4229
  6906  000C08  0A01               	xorlw	1	; case 1
  6907  000C0A  B4D8               	btfsc	status,2,c
  6908  000C0C  EFCE  F005         	goto	l4231
  6909  000C10  EF0A  F006         	goto	l4237
  6910  000C14                     l4237:
  6911                           
  6912                           ; BSR set to: 0
  6913                           ;main.c: 680:             }
  6914  000C14  4BE4               	infsnz	dameDatosSistema@j& (0+255),f,b
  6915  000C16  2BE5               	incf	(dameDatosSistema@j+1)& (0+255),f,b
  6916  000C18                     
  6917                           ; BSR set to: 0
  6918  000C18  BFE5               	btfsc	(dameDatosSistema@j+1)& (0+255),7,b
  6919  000C1A  EF18  F006         	goto	u3381
  6920  000C1E  51E5               	movf	(dameDatosSistema@j+1)& (0+255),w,b
  6921  000C20  E109               	bnz	u3380
  6922  000C22  0E07               	movlw	7
  6923  000C24  5DE4               	subwf	dameDatosSistema@j& (0+255),w,b
  6924  000C26  A0D8               	btfss	status,0,c
  6925  000C28  EF18  F006         	goto	u3381
  6926  000C2C  EF1A  F006         	goto	u3380
  6927  000C30                     u3381:
  6928  000C30  EFD8  F005         	goto	l4235
  6929  000C34                     u3380:
  6930  000C34                     
  6931                           ; BSR set to: 0
  6932                           ;main.c: 682:             sprintf(buffer, " %2d  |          %d       |         %2d      
      +                           | %s\r\n",
  6933  000C34  C0E6  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  6934  000C38  C0E7  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  6935  000C3C  0E00               	movlw	0
  6936  000C3E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6937  000C40  0E0C               	movlw	12
  6938  000C42  6E03               	movwf	___wmul@multiplicand^0,c
  6939  000C44  EC60  F017         	call	___wmul	;wreg free
  6940  000C48  0EE0               	movlw	low _horarios
  6941  000C4A  2401               	addwf	?___wmul^0,w,c
  6942  000C4C  6ED9               	movwf	fsr2l,c
  6943  000C4E  0E06               	movlw	high _horarios
  6944  000C50  2002               	addwfc	(?___wmul+1)^0,w,c
  6945  000C52  6EDA               	movwf	fsr2h,c
  6946  000C54  50DF               	movf	indf2,w,c
  6947  000C56  0100               	movlb	0	; () banked
  6948  000C58  6F76               	movwf	??_dameDatosSistema& (0+255),b
  6949  000C5A  5176               	movf	??_dameDatosSistema& (0+255),w,b
  6950  000C5C  6FDE               	movwf	_dameDatosSistema$1916& (0+255),b
  6951  000C5E  6BDF               	clrf	(_dameDatosSistema$1916+1)& (0+255),b
  6952                           
  6953                           ;main.c: 682:             sprintf(buffer, " %2d  |          %d       |         %2d      
      +                           | %s\r\n",
  6954  000C60  C0E6  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  6955  000C64  C0E7  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  6956  000C68  0E00               	movlw	0
  6957  000C6A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6958  000C6C  0E0C               	movlw	12
  6959  000C6E  6E03               	movwf	___wmul@multiplicand^0,c
  6960  000C70  EC60  F017         	call	___wmul	;wreg free
  6961  000C74  0EE9               	movlw	low (_horarios+9)
  6962  000C76  2401               	addwf	?___wmul^0,w,c
  6963  000C78  6ED9               	movwf	fsr2l,c
  6964  000C7A  0E06               	movlw	high (_horarios+9)
  6965  000C7C  2002               	addwfc	(?___wmul+1)^0,w,c
  6966  000C7E  6EDA               	movwf	fsr2h,c
  6967  000C80  50DF               	movf	indf2,w,c
  6968  000C82  0100               	movlb	0	; () banked
  6969  000C84  6F76               	movwf	??_dameDatosSistema& (0+255),b
  6970  000C86  5176               	movf	??_dameDatosSistema& (0+255),w,b
  6971  000C88  6FE0               	movwf	_dameDatosSistema$1917& (0+255),b
  6972  000C8A  6BE1               	clrf	(_dameDatosSistema$1917+1)& (0+255),b
  6973                           
  6974                           ;main.c: 682:             sprintf(buffer, " %2d  |          %d       |         %2d      
      +                           | %s\r\n",
  6975  000C8C  C0E6  F001         	movff	dameDatosSistema@i,___wmul@multiplier
  6976  000C90  C0E7  F002         	movff	dameDatosSistema@i+1,___wmul@multiplier+1
  6977  000C94  0E00               	movlw	0
  6978  000C96  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6979  000C98  0E0C               	movlw	12
  6980  000C9A  6E03               	movwf	___wmul@multiplicand^0,c
  6981  000C9C  EC60  F017         	call	___wmul	;wreg free
  6982  000CA0  0EEB               	movlw	low (_horarios+11)
  6983  000CA2  2401               	addwf	?___wmul^0,w,c
  6984  000CA4  6ED9               	movwf	fsr2l,c
  6985  000CA6  0E06               	movlw	high (_horarios+11)
  6986  000CA8  2002               	addwfc	(?___wmul+1)^0,w,c
  6987  000CAA  6EDA               	movwf	fsr2h,c
  6988  000CAC  50DF               	movf	indf2,w,c
  6989  000CAE  0100               	movlb	0	; () banked
  6990  000CB0  6F76               	movwf	??_dameDatosSistema& (0+255),b
  6991  000CB2  5176               	movf	??_dameDatosSistema& (0+255),w,b
  6992  000CB4  6FE2               	movwf	_dameDatosSistema$1918& (0+255),b
  6993  000CB6  6BE3               	clrf	(_dameDatosSistema$1918+1)& (0+255),b
  6994  000CB8                     
  6995                           ; BSR set to: 0
  6996                           ;main.c: 682:             sprintf(buffer, " %2d  |          %d       |         %2d      
      +                           | %s\r\n",
  6997  000CB8  0E7A               	movlw	low dameDatosSistema@buffer
  6998  000CBA  6F60               	movwf	sprintf@s& (0+255),b
  6999  000CBC  0E00               	movlw	high dameDatosSistema@buffer
  7000  000CBE  6F61               	movwf	(sprintf@s+1)& (0+255),b
  7001  000CC0  0EBA               	movlw	low STR_34
  7002  000CC2  6F62               	movwf	sprintf@fmt& (0+255),b
  7003  000CC4  0E7B               	movlw	high STR_34
  7004  000CC6  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  7005  000CC8  C0DE  F064         	movff	_dameDatosSistema$1916,?_sprintf+4
  7006  000CCC  C0DF  F065         	movff	_dameDatosSistema$1916+1,?_sprintf+5
  7007  000CD0  C0E0  F066         	movff	_dameDatosSistema$1917,?_sprintf+6
  7008  000CD4  C0E1  F067         	movff	_dameDatosSistema$1917+1,?_sprintf+7
  7009  000CD8  C0E2  F068         	movff	_dameDatosSistema$1918,?_sprintf+8
  7010  000CDC  C0E3  F069         	movff	_dameDatosSistema$1918+1,?_sprintf+9
  7011  000CE0  0EAC               	movlw	low dameDatosSistema@diasRegar
  7012  000CE2  6F6A               	movwf	(?_sprintf+10)& (0+255),b
  7013  000CE4  0E00               	movlw	high dameDatosSistema@diasRegar
  7014  000CE6  6F6B               	movwf	(?_sprintf+11)& (0+255),b
  7015  000CE8  EC7C  F015         	call	_sprintf	;wreg free
  7016  000CEC                     
  7017                           ;main.c: 686:             UART_printf(buffer);
  7018  000CEC  0E7A               	movlw	low dameDatosSistema@buffer
  7019  000CEE  6E02               	movwf	UART_printf@cadena^0,c
  7020  000CF0  0E00               	movlw	high dameDatosSistema@buffer
  7021  000CF2  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7022  000CF4  EC9A  F014         	call	_UART_printf	;wreg free
  7023  000CF8                     l4247:
  7024                           
  7025                           ;main.c: 690:     }
  7026  000CF8  0100               	movlb	0	; () banked
  7027  000CFA  4BE6               	infsnz	dameDatosSistema@i& (0+255),f,b
  7028  000CFC  2BE7               	incf	(dameDatosSistema@i+1)& (0+255),f,b
  7029  000CFE                     
  7030                           ; BSR set to: 0
  7031  000CFE  BFE7               	btfsc	(dameDatosSistema@i+1)& (0+255),7,b
  7032  000D00  EF8B  F006         	goto	u3391
  7033  000D04  51E7               	movf	(dameDatosSistema@i+1)& (0+255),w,b
  7034  000D06  E109               	bnz	u3390
  7035  000D08  0E18               	movlw	24
  7036  000D0A  5DE6               	subwf	dameDatosSistema@i& (0+255),w,b
  7037  000D0C  A0D8               	btfss	status,0,c
  7038  000D0E  EF8B  F006         	goto	u3391
  7039  000D12  EF8D  F006         	goto	u3390
  7040  000D16                     u3391:
  7041  000D16  EFA5  F005         	goto	l4221
  7042  000D1A                     u3390:
  7043  000D1A                     
  7044                           ; BSR set to: 0
  7045                           ;main.c: 692:     UART_write('I');
  7046  000D1A  0E49               	movlw	73
  7047  000D1C  ECAF  F017         	call	_UART_write
  7048  000D20  0012               	return		;funcret
  7049  000D22                     __end_of_dameDatosSistema:
  7050                           	opt callstack 0
  7051                           
  7052 ;; *************** function _asignarHorarios *****************
  7053 ;; Defined at:
  7054 ;;		line 385 in file "main.c"
  7055 ;; Parameters:    Size  Location     Type
  7056 ;;		None
  7057 ;; Auto vars:     Size  Location     Type
  7058 ;;  i               2   77[BANK0 ] int 
  7059 ;;  buffer         50   24[BANK0 ] unsigned char [50]
  7060 ;;  hora            1   76[BANK0 ] unsigned char 
  7061 ;;  diaRegar        1   75[BANK0 ] unsigned char 
  7062 ;;  Rx              1   74[BANK0 ] unsigned char 
  7063 ;; Return value:  Size  Location     Type
  7064 ;;                  1    wreg      void 
  7065 ;; Registers used:
  7066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7067 ;; Tracked objects:
  7068 ;;		On entry : 0/0
  7069 ;;		On exit  : 0/0
  7070 ;;		Unchanged: 0/0
  7071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7072 ;;      Params:         0       0       0       0       0       0       0       0       0
  7073 ;;      Locals:         0      55       0       0       0       0       0       0       0
  7074 ;;      Temps:          0       2       0       0       0       0       0       0       0
  7075 ;;      Totals:         0      57       0       0       0       0       0       0       0
  7076 ;;Total ram usage:       57 bytes
  7077 ;; Hardware stack levels used:    1
  7078 ;; Hardware stack levels required when called:    9
  7079 ;; This function calls:
  7080 ;;		_UART_printf
  7081 ;;		_escribeHorariosMemoria
  7082 ;;		_getValue
  7083 ;;		_sprintf
  7084 ;; This function is called by:
  7085 ;;		_sistemaPrincipal
  7086 ;; This function uses a non-reentrant model
  7087 ;;
  7088                           
  7089                           	psect	text33
  7090  0015FE                     __ptext33:
  7091                           	opt callstack 0
  7092  0015FE                     _asignarHorarios:
  7093                           	opt callstack 20
  7094  0015FE                     
  7095                           ;main.c: 387:     unsigned char hora;;main.c: 388:     unsigned char Rx;;main.c: 389:   
      +                            unsigned char diaRegar;;main.c: 390:     char buffer[50];;main.c: 392:     UART_printf
      +                          ("\r\n OPCIONES DE REGADO \r\n");
  7096  0015FE  0E18               	movlw	low STR_7
  7097  001600  6E02               	movwf	UART_printf@cadena^0,c
  7098  001602  0E7F               	movlw	high STR_7
  7099  001604  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7100  001606  EC9A  F014         	call	_UART_printf	;wreg free
  7101                           
  7102                           ;main.c: 394:     UART_printf("\r\n Ingrese una hora en formato de 24 hrs ej: 15 \r\n");
  7103  00160A  0EEF               	movlw	low STR_8
  7104  00160C  6E02               	movwf	UART_printf@cadena^0,c
  7105  00160E  0E7B               	movlw	high STR_8
  7106  001610  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7107  001612  EC9A  F014         	call	_UART_printf	;wreg free
  7108  001616                     
  7109                           ;main.c: 395:     hora = getValue(2);
  7110  001616  0E00               	movlw	0
  7111  001618  6E05               	movwf	(getValue@numCharacters+1)^0,c
  7112  00161A  0E02               	movlw	2
  7113  00161C  6E04               	movwf	getValue@numCharacters^0,c
  7114  00161E  EC7F  F004         	call	_getValue	;wreg free
  7115  001622  0100               	movlb	0	; () banked
  7116  001624  6FAC               	movwf	asignarHorarios@hora& (0+255),b
  7117  001626                     
  7118                           ; BSR set to: 0
  7119                           ;main.c: 397:     if (hora != 'F') {
  7120  001626  0E46               	movlw	70
  7121  001628  19AC               	xorwf	asignarHorarios@hora& (0+255),w,b
  7122  00162A  B4D8               	btfsc	status,2,c
  7123  00162C  EF1A  F00B         	goto	u3311
  7124  001630  EF1C  F00B         	goto	u3310
  7125  001634                     u3311:
  7126  001634  EFA3  F00B         	goto	l311
  7127  001638                     u3310:
  7128  001638                     
  7129                           ; BSR set to: 0
  7130                           ;main.c: 399:         UART_printf("\r\n Ingrese 1 para activar || ingrese 0 para desacti
      +                          var: \r\n");
  7131  001638  0E9C               	movlw	low STR_9
  7132  00163A  6E02               	movwf	UART_printf@cadena^0,c
  7133  00163C  0E7A               	movlw	high STR_9
  7134  00163E  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7135  001640  EC9A  F014         	call	_UART_printf	;wreg free
  7136  001644                     
  7137                           ;main.c: 401:         Rx = getValue(1);
  7138  001644  0E00               	movlw	0
  7139  001646  6E05               	movwf	(getValue@numCharacters+1)^0,c
  7140  001648  0E01               	movlw	1
  7141  00164A  6E04               	movwf	getValue@numCharacters^0,c
  7142  00164C  EC7F  F004         	call	_getValue	;wreg free
  7143  001650  0100               	movlb	0	; () banked
  7144  001652  6FAA               	movwf	asignarHorarios@Rx& (0+255),b
  7145  001654                     
  7146                           ; BSR set to: 0
  7147                           ;main.c: 404:         if (Rx != 'F') {
  7148  001654  0E46               	movlw	70
  7149  001656  19AA               	xorwf	asignarHorarios@Rx& (0+255),w,b
  7150  001658  B4D8               	btfsc	status,2,c
  7151  00165A  EF31  F00B         	goto	u3321
  7152  00165E  EF33  F00B         	goto	u3320
  7153  001662                     u3321:
  7154  001662  EFA3  F00B         	goto	l311
  7155  001666                     u3320:
  7156  001666                     
  7157                           ; BSR set to: 0
  7158                           ;main.c: 406:             UART_printf("\r\n Ingrese 1 para activar || ingrese 0 para des
      +                          activar: \r\n");
  7159  001666  0E9C               	movlw	low STR_9
  7160  001668  6E02               	movwf	UART_printf@cadena^0,c
  7161  00166A  0E7A               	movlw	high STR_9
  7162  00166C  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7163  00166E  EC9A  F014         	call	_UART_printf	;wreg free
  7164                           
  7165                           ;main.c: 407:             UART_printf("\r\n DOMINGO = [1] ... SABADO = [7] \r\n");
  7166  001672  0E9D               	movlw	low STR_11
  7167  001674  6E02               	movwf	UART_printf@cadena^0,c
  7168  001676  0E7D               	movlw	high STR_11
  7169  001678  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7170  00167A  EC9A  F014         	call	_UART_printf	;wreg free
  7171  00167E                     
  7172                           ;main.c: 409:             for (int i = 0; i < 7; i++) {
  7173  00167E  0E00               	movlw	0
  7174  001680  0100               	movlb	0	; () banked
  7175  001682  6FAE               	movwf	(asignarHorarios@i+1)& (0+255),b
  7176  001684  0E00               	movlw	0
  7177  001686  6FAD               	movwf	asignarHorarios@i& (0+255),b
  7178  001688                     l4167:
  7179                           
  7180                           ; BSR set to: 0
  7181                           ;main.c: 410:                 sprintf(buffer, "\r\n[%d]: ", i + 1);
  7182  001688  0E78               	movlw	low asignarHorarios@buffer
  7183  00168A  6F60               	movwf	sprintf@s& (0+255),b
  7184  00168C  0E00               	movlw	high asignarHorarios@buffer
  7185  00168E  6F61               	movwf	(sprintf@s+1)& (0+255),b
  7186  001690  0EED               	movlw	low STR_12
  7187  001692  6F62               	movwf	sprintf@fmt& (0+255),b
  7188  001694  0E7F               	movlw	high STR_12
  7189  001696  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  7190  001698  0E01               	movlw	1
  7191  00169A  25AD               	addwf	asignarHorarios@i& (0+255),w,b
  7192  00169C  6F64               	movwf	(?_sprintf+4)& (0+255),b
  7193  00169E  0E00               	movlw	0
  7194  0016A0  21AE               	addwfc	(asignarHorarios@i+1)& (0+255),w,b
  7195  0016A2  6F65               	movwf	(?_sprintf+5)& (0+255),b
  7196  0016A4  EC7C  F015         	call	_sprintf	;wreg free
  7197  0016A8                     
  7198                           ;main.c: 411:                 UART_printf(buffer);
  7199  0016A8  0E78               	movlw	low asignarHorarios@buffer
  7200  0016AA  6E02               	movwf	UART_printf@cadena^0,c
  7201  0016AC  0E00               	movlw	high asignarHorarios@buffer
  7202  0016AE  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7203  0016B0  EC9A  F014         	call	_UART_printf	;wreg free
  7204  0016B4                     
  7205                           ;main.c: 412:                 diaRegar = getValue(1);
  7206  0016B4  0E00               	movlw	0
  7207  0016B6  6E05               	movwf	(getValue@numCharacters+1)^0,c
  7208  0016B8  0E01               	movlw	1
  7209  0016BA  6E04               	movwf	getValue@numCharacters^0,c
  7210  0016BC  EC7F  F004         	call	_getValue	;wreg free
  7211  0016C0  0100               	movlb	0	; () banked
  7212  0016C2  6FAB               	movwf	asignarHorarios@diaRegar& (0+255),b
  7213  0016C4                     
  7214                           ; BSR set to: 0
  7215                           ;main.c: 414:                 if (diaRegar != 'F') {
  7216  0016C4  0E46               	movlw	70
  7217  0016C6  19AB               	xorwf	asignarHorarios@diaRegar& (0+255),w,b
  7218  0016C8  B4D8               	btfsc	status,2,c
  7219  0016CA  EF69  F00B         	goto	u3331
  7220  0016CE  EF6B  F00B         	goto	u3330
  7221  0016D2                     u3331:
  7222  0016D2  EF81  F00B         	goto	l4177
  7223  0016D6                     u3330:
  7224  0016D6                     
  7225                           ; BSR set to: 0
  7226                           ;main.c: 416:                     horarios[hora].dias[i] = diaRegar;
  7227  0016D6  51AC               	movf	asignarHorarios@hora& (0+255),w,b
  7228  0016D8  0D0C               	mullw	12
  7229  0016DA  0EE0               	movlw	low _horarios
  7230  0016DC  6F76               	movwf	??_asignarHorarios& (0+255),b
  7231  0016DE  0E06               	movlw	high _horarios
  7232  0016E0  6F77               	movwf	(??_asignarHorarios+1)& (0+255),b
  7233  0016E2  0E01               	movlw	1
  7234  0016E4  2776               	addwf	??_asignarHorarios& (0+255),f,b
  7235  0016E6  0E00               	movlw	0
  7236  0016E8  2377               	addwfc	(??_asignarHorarios+1)& (0+255),f,b
  7237  0016EA  50F3               	movf	243,w,c
  7238  0016EC  2776               	addwf	??_asignarHorarios& (0+255),f,b
  7239  0016EE  50F4               	movf	244,w,c
  7240  0016F0  2377               	addwfc	(??_asignarHorarios+1)& (0+255),f,b
  7241  0016F2  51AD               	movf	asignarHorarios@i& (0+255),w,b
  7242  0016F4  2576               	addwf	??_asignarHorarios& (0+255),w,b
  7243  0016F6  6ED9               	movwf	fsr2l,c
  7244  0016F8  51AE               	movf	(asignarHorarios@i+1)& (0+255),w,b
  7245  0016FA  2177               	addwfc	(??_asignarHorarios+1)& (0+255),w,b
  7246  0016FC  6EDA               	movwf	fsr2h,c
  7247  0016FE  C0AB  FFDF         	movff	asignarHorarios@diaRegar,indf2
  7248  001702                     l4177:
  7249                           
  7250                           ; BSR set to: 0
  7251                           ;main.c: 419:             }
  7252  001702  4BAD               	infsnz	asignarHorarios@i& (0+255),f,b
  7253  001704  2BAE               	incf	(asignarHorarios@i+1)& (0+255),f,b
  7254  001706                     
  7255                           ; BSR set to: 0
  7256  001706  BFAE               	btfsc	(asignarHorarios@i+1)& (0+255),7,b
  7257  001708  EF8F  F00B         	goto	u3341
  7258  00170C  51AE               	movf	(asignarHorarios@i+1)& (0+255),w,b
  7259  00170E  E109               	bnz	u3340
  7260  001710  0E07               	movlw	7
  7261  001712  5DAD               	subwf	asignarHorarios@i& (0+255),w,b
  7262  001714  A0D8               	btfss	status,0,c
  7263  001716  EF8F  F00B         	goto	u3341
  7264  00171A  EF91  F00B         	goto	u3340
  7265  00171E                     u3341:
  7266  00171E  EF44  F00B         	goto	l4167
  7267  001722                     u3340:
  7268  001722                     
  7269                           ; BSR set to: 0
  7270                           ;main.c: 421:             horarios[hora].regar = Rx;
  7271  001722  51AC               	movf	asignarHorarios@hora& (0+255),w,b
  7272  001724  0D0C               	mullw	12
  7273  001726  0EE9               	movlw	low (_horarios+9)
  7274  001728  24F3               	addwf	243,w,c
  7275  00172A  6ED9               	movwf	fsr2l,c
  7276  00172C  0E06               	movlw	high (_horarios+9)
  7277  00172E  20F4               	addwfc	prodh,w,c
  7278  001730  6EDA               	movwf	fsr2h,c
  7279  001732  C0AA  FFDF         	movff	asignarHorarios@Rx,indf2
  7280  001736                     
  7281                           ; BSR set to: 0
  7282                           ;main.c: 423:             escribeHorariosMemoria();
  7283  001736  ECA4  F00B         	call	_escribeHorariosMemoria	;wreg free
  7284  00173A                     
  7285                           ;main.c: 426:             UART_printf("\r\n Horario Modificado! \r\n");
  7286  00173A  0EE4               	movlw	low STR_13
  7287  00173C  6E02               	movwf	UART_printf@cadena^0,c
  7288  00173E  0E7E               	movlw	high STR_13
  7289  001740  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7290  001742  EC9A  F014         	call	_UART_printf	;wreg free
  7291  001746                     l311:
  7292  001746  0012               	return		;funcret
  7293  001748                     __end_of_asignarHorarios:
  7294                           	opt callstack 0
  7295                           
  7296 ;; *************** function _sprintf *****************
  7297 ;; Defined at:
  7298 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  7299 ;; Parameters:    Size  Location     Type
  7300 ;;  s               2    0[BANK0 ] PTR unsigned char 
  7301 ;;		 -> mostrarDatosSensoresWIFI@buffer(50), mostrarDatosSensores@buffer(50), dameDatosSistema@buffer(50), lecturaWifi@b
      +uffer(50), 
  7302 ;;		 -> asignarHorarios@buffer(50), 
  7303 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  7304 ;;		 -> STR_42(29), STR_41(32), STR_40(45), STR_39(45), 
  7305 ;;		 -> STR_38(29), STR_37(32), STR_34(53), STR_19(51), 
  7306 ;;		 -> STR_12(9), 
  7307 ;; Auto vars:     Size  Location     Type
  7308 ;;  f               6   16[BANK0 ] struct _IO_FILE
  7309 ;;  ap              2   14[BANK0 ] PTR void [1]
  7310 ;;		 -> ?_sprintf(2), 
  7311 ;;  ret             2    0        int 
  7312 ;; Return value:  Size  Location     Type
  7313 ;;                  2    0[BANK0 ] int 
  7314 ;; Registers used:
  7315 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7316 ;; Tracked objects:
  7317 ;;		On entry : 0/0
  7318 ;;		On exit  : 0/0
  7319 ;;		Unchanged: 0/0
  7320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7321 ;;      Params:         0      12       0       0       0       0       0       0       0
  7322 ;;      Locals:         0      10       0       0       0       0       0       0       0
  7323 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7324 ;;      Totals:         0      22       0       0       0       0       0       0       0
  7325 ;;Total ram usage:       22 bytes
  7326 ;; Hardware stack levels used:    1
  7327 ;; Hardware stack levels required when called:    8
  7328 ;; This function calls:
  7329 ;;		_vfprintf
  7330 ;; This function is called by:
  7331 ;;		_asignarHorarios
  7332 ;;		_lecturaWifi
  7333 ;;		_dameDatosSistema
  7334 ;;		_mostrarDatosSensores
  7335 ;;		_mostrarDatosSensoresWIFI
  7336 ;; This function uses a non-reentrant model
  7337 ;;
  7338                           
  7339                           	psect	text34
  7340  002AF8                     __ptext34:
  7341                           	opt callstack 0
  7342  002AF8                     _sprintf:
  7343                           	opt callstack 20
  7344  002AF8  0E64               	movlw	low (?_sprintf+4)
  7345  002AFA  0100               	movlb	0	; () banked
  7346  002AFC  6F6E               	movwf	sprintf@ap& (0+255),b
  7347  002AFE  0E00               	movlw	high (?_sprintf+4)
  7348  002B00  6F6F               	movwf	(sprintf@ap+1)& (0+255),b
  7349  002B02  C060  F070         	movff	sprintf@s,sprintf@f
  7350  002B06  C061  F071         	movff	sprintf@s+1,sprintf@f+1
  7351  002B0A                     
  7352                           ; BSR set to: 0
  7353  002B0A  0E00               	movlw	0
  7354  002B0C  6F73               	movwf	(sprintf@f+3)& (0+255),b
  7355  002B0E  0E00               	movlw	0
  7356  002B10  6F72               	movwf	(sprintf@f+2)& (0+255),b
  7357  002B12                     
  7358                           ; BSR set to: 0
  7359  002B12  0E00               	movlw	0
  7360  002B14  6F75               	movwf	(sprintf@f+5)& (0+255),b
  7361  002B16  0E00               	movlw	0
  7362  002B18  6F74               	movwf	(sprintf@f+4)& (0+255),b
  7363  002B1A                     
  7364                           ; BSR set to: 0
  7365  002B1A  0E70               	movlw	low sprintf@f
  7366  002B1C  6E57               	movwf	vfprintf@fp^0,c
  7367  002B1E  0E00               	movlw	high sprintf@f
  7368  002B20  6E58               	movwf	(vfprintf@fp+1)^0,c
  7369  002B22  C062  F059         	movff	sprintf@fmt,vfprintf@fmt
  7370  002B26  C063  F05A         	movff	sprintf@fmt+1,vfprintf@fmt+1
  7371  002B2A  0E6E               	movlw	low sprintf@ap
  7372  002B2C  6E5B               	movwf	vfprintf@ap^0,c
  7373  002B2E  0E00               	movlw	high sprintf@ap
  7374  002B30  6E5C               	movwf	(vfprintf@ap+1)^0,c
  7375  002B32  EC38  F014         	call	_vfprintf	;wreg free
  7376  002B36  0100               	movlb	0	; () banked
  7377  002B38  5172               	movf	(sprintf@f+2)& (0+255),w,b
  7378  002B3A  2560               	addwf	sprintf@s& (0+255),w,b
  7379  002B3C  6ED9               	movwf	fsr2l,c
  7380  002B3E  5173               	movf	(sprintf@f+3)& (0+255),w,b
  7381  002B40  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  7382  002B42  6EDA               	movwf	fsr2h,c
  7383  002B44  0E00               	movlw	0
  7384  002B46  6EDF               	movwf	indf2,c
  7385  002B48                     
  7386                           ; BSR set to: 0
  7387  002B48  0012               	return		;funcret
  7388  002B4A                     __end_of_sprintf:
  7389                           	opt callstack 0
  7390                           
  7391 ;; *************** function _vfprintf *****************
  7392 ;; Defined at:
  7393 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7394 ;; Parameters:    Size  Location     Type
  7395 ;;  fp              2   86[COMRAM] PTR struct _IO_FILE
  7396 ;;		 -> sprintf@f(6), 
  7397 ;;  fmt             2   88[COMRAM] PTR const unsigned char 
  7398 ;;		 -> STR_42(29), STR_41(32), STR_40(45), STR_39(45), 
  7399 ;;		 -> STR_38(29), STR_37(32), STR_34(53), STR_19(51), 
  7400 ;;		 -> STR_12(9), 
  7401 ;;  ap              2   90[COMRAM] PTR PTR void 
  7402 ;;		 -> sprintf@ap(2), 
  7403 ;; Auto vars:     Size  Location     Type
  7404 ;;  cfmt            2   92[COMRAM] PTR unsigned char 
  7405 ;;		 -> STR_42(29), STR_41(32), STR_40(45), STR_39(45), 
  7406 ;;		 -> STR_38(29), STR_37(32), STR_34(53), STR_19(51), 
  7407 ;;		 -> STR_12(9), 
  7408 ;; Return value:  Size  Location     Type
  7409 ;;                  2   86[COMRAM] int 
  7410 ;; Registers used:
  7411 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7412 ;; Tracked objects:
  7413 ;;		On entry : 0/0
  7414 ;;		On exit  : 0/0
  7415 ;;		Unchanged: 0/0
  7416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7417 ;;      Params:         6       0       0       0       0       0       0       0       0
  7418 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7419 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7420 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7421 ;;Total ram usage:        8 bytes
  7422 ;; Hardware stack levels used:    1
  7423 ;; Hardware stack levels required when called:    7
  7424 ;; This function calls:
  7425 ;;		_vfpfcnvrt
  7426 ;; This function is called by:
  7427 ;;		_sprintf
  7428 ;; This function uses a non-reentrant model
  7429 ;;
  7430                           
  7431                           	psect	text35
  7432  002870                     __ptext35:
  7433                           	opt callstack 0
  7434  002870                     _vfprintf:
  7435                           	opt callstack 20
  7436  002870                     
  7437                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  7438  002870  C059  F05D         	movff	vfprintf@fmt,vfprintf@cfmt
  7439  002874  C05A  F05E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  7440  002878                     
  7441                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  7442  002878  0E00               	movlw	0
  7443  00287A  0101               	movlb	1	; () banked
  7444  00287C  6F11               	movwf	(_nout+1)& (0+255),b
  7445  00287E  0E00               	movlw	0
  7446  002880  6F10               	movwf	_nout& (0+255),b
  7447                           
  7448                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  7449  002882  EF56  F014         	goto	l3565
  7450  002886                     l3563:
  7451                           
  7452                           ; BSR set to: 1
  7453                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  7454  002886  C057  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  7455  00288A  C058  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  7456  00288E  0E5D               	movlw	low vfprintf@cfmt
  7457  002890  6E42               	movwf	vfpfcnvrt@fmt^0,c
  7458  002892  0E00               	movlw	high vfprintf@cfmt
  7459  002894  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  7460  002896  C05B  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  7461  00289A  C05C  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  7462  00289E  EC09  F000         	call	_vfpfcnvrt	;wreg free
  7463  0028A2  5040               	movf	?_vfpfcnvrt^0,w,c
  7464  0028A4  0101               	movlb	1	; () banked
  7465  0028A6  2710               	addwf	_nout& (0+255),f,b
  7466  0028A8  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  7467  0028AA  2311               	addwfc	(_nout+1)& (0+255),f,b
  7468  0028AC                     l3565:
  7469                           
  7470                           ; BSR set to: 1
  7471                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  7472  0028AC  C05D  FFF6         	movff	vfprintf@cfmt,tblptrl
  7473  0028B0  C05E  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  7474  0028B4                     	if	0	;tblptru may be non-zero
  7475  0028B4                     	endif
  7476  0028B4                     	if	0	;tblptru may be non-zero
  7477  0028B4                     	endif
  7478  0028B4  0008               	tblrd		*
  7479  0028B6  50F5               	movf	tablat,w,c
  7480  0028B8  0900               	iorlw	0
  7481  0028BA  A4D8               	btfss	status,2,c
  7482  0028BC  EF62  F014         	goto	u2711
  7483  0028C0  EF64  F014         	goto	u2710
  7484  0028C4                     u2711:
  7485  0028C4  EF43  F014         	goto	l3563
  7486  0028C8                     u2710:
  7487  0028C8                     
  7488                           ; BSR set to: 1
  7489                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  7490  0028C8  C110  F057         	movff	_nout,?_vfprintf
  7491  0028CC  C111  F058         	movff	_nout+1,?_vfprintf+1
  7492  0028D0                     
  7493                           ; BSR set to: 1
  7494  0028D0  0012               	return		;funcret
  7495  0028D2                     __end_of_vfprintf:
  7496                           	opt callstack 0
  7497                           
  7498 ;; *************** function _vfpfcnvrt *****************
  7499 ;; Defined at:
  7500 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7501 ;; Parameters:    Size  Location     Type
  7502 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  7503 ;;		 -> sprintf@f(6), 
  7504 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  7505 ;;		 -> vfprintf@cfmt(2), 
  7506 ;;  ap              2   67[COMRAM] PTR PTR void 
  7507 ;;		 -> sprintf@ap(2), 
  7508 ;; Auto vars:     Size  Location     Type
  7509 ;;  ll              8   73[COMRAM] long long 
  7510 ;;  llu             8    0        unsigned long long 
  7511 ;;  f               4    0        unsigned long long 
  7512 ;;  vp              3    0        PTR void 
  7513 ;;  ct              3    0        unsigned char [3]
  7514 ;;  cp              2   81[COMRAM] PTR unsigned char 
  7515 ;;		 -> ?_sprintf(2), dameDatosSistema@diasRegar(50), 
  7516 ;;  i               2    0        int 
  7517 ;;  done            2    0        int 
  7518 ;;  c               1   85[COMRAM] unsigned char 
  7519 ;; Return value:  Size  Location     Type
  7520 ;;                  2   63[COMRAM] int 
  7521 ;; Registers used:
  7522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7523 ;; Tracked objects:
  7524 ;;		On entry : 0/0
  7525 ;;		On exit  : 0/0
  7526 ;;		Unchanged: 0/0
  7527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7528 ;;      Params:         6       0       0       0       0       0       0       0       0
  7529 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7530 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7531 ;;      Totals:        23       0       0       0       0       0       0       0       0
  7532 ;;Total ram usage:       23 bytes
  7533 ;; Hardware stack levels used:    1
  7534 ;; Hardware stack levels required when called:    6
  7535 ;; This function calls:
  7536 ;;		_atoi
  7537 ;;		_ctoa
  7538 ;;		_dtoa
  7539 ;;		_fputc
  7540 ;;		_isdigit
  7541 ;;		_stoa
  7542 ;; This function is called by:
  7543 ;;		_vfprintf
  7544 ;; This function uses a non-reentrant model
  7545 ;;
  7546                           
  7547                           	psect	text36
  7548  000012                     __ptext36:
  7549                           	opt callstack 0
  7550  000012                     _vfpfcnvrt:
  7551                           	opt callstack 20
  7552  000012                     
  7553                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  7554  000012  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7555  000016  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7556  00001A  CFDE FFF6          	movff	postinc2,tblptrl
  7557  00001E  CFDD FFF7          	movff	postdec2,tblptrh
  7558  000022                     	if	0	;tblptru may be non-zero
  7559  000022                     	endif
  7560  000022                     	if	0	;tblptru may be non-zero
  7561  000022                     	endif
  7562  000022  0008               	tblrd		*
  7563  000024  50F5               	movf	tablat,w,c
  7564  000026  0A25               	xorlw	37
  7565  000028  A4D8               	btfss	status,2,c
  7566  00002A  EF19  F000         	goto	u2481
  7567  00002E  EF1B  F000         	goto	u2480
  7568  000032                     u2481:
  7569  000032  EFBB  F001         	goto	l3465
  7570  000036                     u2480:
  7571  000036                     
  7572                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  7573  000036  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7574  00003A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7575  00003E  2ADE               	incf	postinc2,f,c
  7576  000040  0E00               	movlw	0
  7577  000042  22DD               	addwfc	postdec2,f,c
  7578  000044                     
  7579                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  7580  000044  0E00               	movlw	0
  7581  000046  0100               	movlb	0	; () banked
  7582  000048  6FEC               	movwf	(_width+1)& (0+255),b
  7583  00004A  0E00               	movlw	0
  7584  00004C  6FEB               	movwf	_width& (0+255),b
  7585  00004E  C0EB  F0EF         	movff	_width,_flags
  7586  000052  C0EC  F0F0         	movff	_width+1,_flags+1
  7587  000056                     
  7588                           ; BSR set to: 0
  7589                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  7590  000056  69ED               	setf	_prec& (0+255),b
  7591  000058  69EE               	setf	(_prec+1)& (0+255),b
  7592  00005A                     
  7593                           ; BSR set to: 0
  7594                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  7595  00005A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7596  00005E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7597  000062  CFDE FFF6          	movff	postinc2,tblptrl
  7598  000066  CFDD FFF7          	movff	postdec2,tblptrh
  7599  00006A                     	if	0	;tblptru may be non-zero
  7600  00006A                     	endif
  7601  00006A                     	if	0	;tblptru may be non-zero
  7602  00006A                     	endif
  7603  00006A  0008               	tblrd		*
  7604  00006C  50F5               	movf	tablat,w,c
  7605  00006E  0A2A               	xorlw	42
  7606  000070  A4D8               	btfss	status,2,c
  7607  000072  EF3D  F000         	goto	u2491
  7608  000076  EF3F  F000         	goto	u2490
  7609  00007A                     u2491:
  7610  00007A  EF68  F000         	goto	l3413
  7611  00007E                     u2490:
  7612  00007E                     
  7613                           ; BSR set to: 0
  7614                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  7615  00007E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7616  000082  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7617  000086  2ADE               	incf	postinc2,f,c
  7618  000088  0E00               	movlw	0
  7619  00008A  22DD               	addwfc	postdec2,f,c
  7620                           
  7621                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  7622  00008C  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7623  000090  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7624  000094  CFDF F046          	movff	indf2,??_vfpfcnvrt
  7625  000098  0E02               	movlw	2
  7626  00009A  26DE               	addwf	postinc2,f,c
  7627  00009C  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  7628  0000A0  0E00               	movlw	0
  7629  0000A2  22DD               	addwfc	postdec2,f,c
  7630  0000A4  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7631  0000A8  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7632  0000AC  CFDE F0EB          	movff	postinc2,_width
  7633  0000B0  CFDD F0EC          	movff	postdec2,_width+1
  7634  0000B4                     
  7635                           ; BSR set to: 0
  7636                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  7637  0000B4  BFEC               	btfsc	(_width+1)& (0+255),7,b
  7638  0000B6  EF61  F000         	goto	u2500
  7639  0000BA  EF5F  F000         	goto	u2501
  7640  0000BE                     u2501:
  7641  0000BE  EFAB  F000         	goto	l3423
  7642  0000C2                     u2500:
  7643  0000C2                     
  7644                           ; BSR set to: 0
  7645                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  7646  0000C2  81EF               	bsf	_flags& (0+255),0,b
  7647                           
  7648                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  7649  0000C4  6DEB               	negf	_width& (0+255),b
  7650  0000C6  1FEC               	comf	(_width+1)& (0+255),f,b
  7651  0000C8  B0D8               	btfsc	status,0,c
  7652  0000CA  2BEC               	incf	(_width+1)& (0+255),f,b
  7653  0000CC  EFAB  F000         	goto	l3423
  7654  0000D0                     l3413:
  7655                           
  7656                           ; BSR set to: 0
  7657                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  7658  0000D0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7659  0000D4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7660  0000D8  CFDE F008          	movff	postinc2,atoi@s
  7661  0000DC  CFDD F009          	movff	postdec2,atoi@s+1
  7662  0000E0  EC91  F006         	call	_atoi	;wreg free
  7663  0000E4  C008  F0EB         	movff	?_atoi,_width
  7664  0000E8  C009  F0EC         	movff	?_atoi+1,_width+1
  7665                           
  7666                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7667  0000EC  EF7F  F000         	goto	l3417
  7668  0000F0                     l3415:
  7669                           
  7670                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  7671  0000F0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7672  0000F4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7673  0000F8  2ADE               	incf	postinc2,f,c
  7674  0000FA  0E00               	movlw	0
  7675  0000FC  22DD               	addwfc	postdec2,f,c
  7676  0000FE                     l3417:
  7677  0000FE  0ED0               	movlw	208
  7678  000100  6E46               	movwf	??_vfpfcnvrt^0,c
  7679  000102  0EFF               	movlw	255
  7680  000104  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  7681  000106  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7682  00010A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7683  00010E  CFDE FFF6          	movff	postinc2,tblptrl
  7684  000112  CFDD FFF7          	movff	postdec2,tblptrh
  7685  000116                     	if	0	;tblptru may be non-zero
  7686  000116                     	endif
  7687  000116                     	if	0	;tblptru may be non-zero
  7688  000116                     	endif
  7689  000116  0008               	tblrd		*
  7690  000118  50F5               	movf	tablat,w,c
  7691  00011A  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  7692  00011C  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  7693  00011E  5046               	movf	??_vfpfcnvrt^0,w,c
  7694  000120  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  7695  000122  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  7696  000124  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  7697  000126  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  7698  000128  E10A               	bnz	u2510
  7699  00012A  0E0A               	movlw	10
  7700  00012C  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  7701  00012E  A0D8               	btfss	status,0,c
  7702  000130  EF9C  F000         	goto	u2511
  7703  000134  EF9F  F000         	goto	u2510
  7704  000138                     u2511:
  7705  000138  0E01               	movlw	1
  7706  00013A  EFA0  F000         	goto	u2520
  7707  00013E                     u2510:
  7708  00013E  0E00               	movlw	0
  7709  000140                     u2520:
  7710  000140  6E54               	movwf	_vfpfcnvrt$1105^0,c
  7711  000142  6A55               	clrf	(_vfpfcnvrt$1105+1)^0,c
  7712  000144  5054               	movf	_vfpfcnvrt$1105^0,w,c
  7713  000146  1055               	iorwf	(_vfpfcnvrt$1105+1)^0,w,c
  7714  000148  A4D8               	btfss	status,2,c
  7715  00014A  EFA9  F000         	goto	u2531
  7716  00014E  EFAB  F000         	goto	u2530
  7717  000152                     u2531:
  7718  000152  EF78  F000         	goto	l3415
  7719  000156                     u2530:
  7720  000156                     l3423:
  7721                           
  7722                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  7723  000156  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7724  00015A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7725  00015E  CFDE FFF6          	movff	postinc2,tblptrl
  7726  000162  CFDD FFF7          	movff	postdec2,tblptrh
  7727  000166                     	if	0	;tblptru may be non-zero
  7728  000166                     	endif
  7729  000166                     	if	0	;tblptru may be non-zero
  7730  000166                     	endif
  7731  000166  0008               	tblrd		*
  7732  000168  50F5               	movf	tablat,w,c
  7733  00016A  0A63               	xorlw	99
  7734  00016C  A4D8               	btfss	status,2,c
  7735  00016E  EFBB  F000         	goto	u2541
  7736  000172  EFBD  F000         	goto	u2540
  7737  000176                     u2541:
  7738  000176  EFE4  F000         	goto	l3431
  7739  00017A                     u2540:
  7740  00017A                     
  7741                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  7742  00017A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7743  00017E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7744  000182  2ADE               	incf	postinc2,f,c
  7745  000184  0E00               	movlw	0
  7746  000186  22DD               	addwfc	postdec2,f,c
  7747                           
  7748                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7749  000188  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7750  00018C  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7751  000190  CFDF F046          	movff	indf2,??_vfpfcnvrt
  7752  000194  0E02               	movlw	2
  7753  000196  26DE               	addwf	postinc2,f,c
  7754  000198  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  7755  00019C  0E00               	movlw	0
  7756  00019E  22DD               	addwfc	postdec2,f,c
  7757  0001A0  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7758  0001A4  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7759  0001A8  50DF               	movf	indf2,w,c
  7760  0001AA  6E56               	movwf	vfpfcnvrt@c^0,c
  7761  0001AC                     
  7762                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  7763  0001AC  C040  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  7764  0001B0  C041  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  7765  0001B4  C056  F01E         	movff	vfpfcnvrt@c,ctoa@c
  7766  0001B8  ECF7  F014         	call	_ctoa	;wreg free
  7767  0001BC  C01C  F040         	movff	?_ctoa,?_vfpfcnvrt
  7768  0001C0  C01D  F041         	movff	?_ctoa+1,?_vfpfcnvrt+1
  7769  0001C4  EFD6  F001         	goto	l576
  7770  0001C8                     l3431:
  7771                           
  7772                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  7773  0001C8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7774  0001CC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7775  0001D0  CFDE FFF6          	movff	postinc2,tblptrl
  7776  0001D4  CFDD FFF7          	movff	postdec2,tblptrh
  7777  0001D8                     	if	0	;tblptru may be non-zero
  7778  0001D8                     	endif
  7779  0001D8                     	if	0	;tblptru may be non-zero
  7780  0001D8                     	endif
  7781  0001D8  0008               	tblrd		*
  7782  0001DA  50F5               	movf	tablat,w,c
  7783  0001DC  0A64               	xorlw	100
  7784  0001DE  B4D8               	btfsc	status,2,c
  7785  0001E0  EFF4  F000         	goto	u2551
  7786  0001E4  EFF6  F000         	goto	u2550
  7787  0001E8                     u2551:
  7788  0001E8  EF08  F001         	goto	l3435
  7789  0001EC                     u2550:
  7790  0001EC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7791  0001F0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7792  0001F4  CFDE FFF6          	movff	postinc2,tblptrl
  7793  0001F8  CFDD FFF7          	movff	postdec2,tblptrh
  7794  0001FC                     	if	0	;tblptru may be non-zero
  7795  0001FC                     	endif
  7796  0001FC                     	if	0	;tblptru may be non-zero
  7797  0001FC                     	endif
  7798  0001FC  0008               	tblrd		*
  7799  0001FE  50F5               	movf	tablat,w,c
  7800  000200  0A69               	xorlw	105
  7801  000202  A4D8               	btfss	status,2,c
  7802  000204  EF06  F001         	goto	u2561
  7803  000208  EF08  F001         	goto	u2560
  7804  00020C                     u2561:
  7805  00020C  EF48  F001         	goto	l3441
  7806  000210                     u2560:
  7807  000210                     l3435:
  7808                           
  7809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  7810  000210  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7811  000214  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7812  000218  2ADE               	incf	postinc2,f,c
  7813  00021A  0E00               	movlw	0
  7814  00021C  22DD               	addwfc	postdec2,f,c
  7815                           
  7816                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  7817  00021E  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7818  000222  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7819  000226  CFDF F046          	movff	indf2,??_vfpfcnvrt
  7820  00022A  0E02               	movlw	2
  7821  00022C  26DE               	addwf	postinc2,f,c
  7822  00022E  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  7823  000232  0E00               	movlw	0
  7824  000234  22DD               	addwfc	postdec2,f,c
  7825  000236  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7826  00023A  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7827  00023E  CFDE F04A          	movff	postinc2,vfpfcnvrt@ll
  7828  000242  CFDD F04B          	movff	postdec2,vfpfcnvrt@ll+1
  7829  000246  0E00               	movlw	0
  7830  000248  BE4B               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  7831  00024A  0EFF               	movlw	-1
  7832  00024C  6E4C               	movwf	(vfpfcnvrt@ll+2)^0,c
  7833  00024E  6E4D               	movwf	(vfpfcnvrt@ll+3)^0,c
  7834  000250  6E4E               	movwf	(vfpfcnvrt@ll+4)^0,c
  7835  000252  6E4F               	movwf	(vfpfcnvrt@ll+5)^0,c
  7836  000254  6E50               	movwf	(vfpfcnvrt@ll+6)^0,c
  7837  000256  6E51               	movwf	(vfpfcnvrt@ll+7)^0,c
  7838  000258                     
  7839                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  7840  000258  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  7841  00025C  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  7842  000260  C04A  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  7843  000264  C04B  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  7844  000268  C04C  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  7845  00026C  C04D  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  7846  000270  C04E  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  7847  000274  C04F  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  7848  000278  C050  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  7849  00027C  C051  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  7850  000280  ECD7  F001         	call	_dtoa	;wreg free
  7851  000284  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  7852  000288  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  7853  00028C  EFD6  F001         	goto	l576
  7854  000290                     l3441:
  7855                           
  7856                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  7857  000290  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7858  000294  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7859  000298  CFDE FFF6          	movff	postinc2,tblptrl
  7860  00029C  CFDD FFF7          	movff	postdec2,tblptrh
  7861  0002A0                     	if	0	;tblptru may be non-zero
  7862  0002A0                     	endif
  7863  0002A0                     	if	0	;tblptru may be non-zero
  7864  0002A0                     	endif
  7865  0002A0  0008               	tblrd		*
  7866  0002A2  50F5               	movf	tablat,w,c
  7867  0002A4  0A73               	xorlw	115
  7868  0002A6  A4D8               	btfss	status,2,c
  7869  0002A8  EF58  F001         	goto	u2571
  7870  0002AC  EF5A  F001         	goto	u2570
  7871  0002B0                     u2571:
  7872  0002B0  EF85  F001         	goto	l3449
  7873  0002B4                     u2570:
  7874  0002B4                     
  7875                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  7876  0002B4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7877  0002B8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7878  0002BC  2ADE               	incf	postinc2,f,c
  7879  0002BE  0E00               	movlw	0
  7880  0002C0  22DD               	addwfc	postdec2,f,c
  7881                           
  7882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  7883  0002C2  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7884  0002C6  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7885  0002CA  CFDF F046          	movff	indf2,??_vfpfcnvrt
  7886  0002CE  0E02               	movlw	2
  7887  0002D0  26DE               	addwf	postinc2,f,c
  7888  0002D2  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  7889  0002D6  0E00               	movlw	0
  7890  0002D8  22DD               	addwfc	postdec2,f,c
  7891  0002DA  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7892  0002DE  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7893  0002E2  CFDE F052          	movff	postinc2,vfpfcnvrt@cp
  7894  0002E6  CFDD F053          	movff	postdec2,vfpfcnvrt@cp+1
  7895  0002EA                     
  7896                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  7897  0002EA  C040  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  7898  0002EE  C041  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  7899  0002F2  C052  F00C         	movff	vfpfcnvrt@cp,stoa@s
  7900  0002F6  C053  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  7901  0002FA  EC1D  F008         	call	_stoa	;wreg free
  7902  0002FE  C00A  F040         	movff	?_stoa,?_vfpfcnvrt
  7903  000302  C00B  F041         	movff	?_stoa+1,?_vfpfcnvrt+1
  7904  000306  EFD6  F001         	goto	l576
  7905  00030A                     l3449:
  7906                           
  7907                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  7908  00030A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7909  00030E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7910  000312  CFDE FFF6          	movff	postinc2,tblptrl
  7911  000316  CFDD FFF7          	movff	postdec2,tblptrh
  7912  00031A                     	if	0	;tblptru may be non-zero
  7913  00031A                     	endif
  7914  00031A                     	if	0	;tblptru may be non-zero
  7915  00031A                     	endif
  7916  00031A  0008               	tblrd		*
  7917  00031C  50F5               	movf	tablat,w,c
  7918  00031E  0A25               	xorlw	37
  7919  000320  A4D8               	btfss	status,2,c
  7920  000322  EF95  F001         	goto	u2581
  7921  000326  EF97  F001         	goto	u2580
  7922  00032A                     u2581:
  7923  00032A  EFAE  F001         	goto	l3459
  7924  00032E                     u2580:
  7925  00032E                     
  7926                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  7927  00032E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7928  000332  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7929  000336  2ADE               	incf	postinc2,f,c
  7930  000338  0E00               	movlw	0
  7931  00033A  22DD               	addwfc	postdec2,f,c
  7932  00033C                     
  7933                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  7934  00033C  0E00               	movlw	0
  7935  00033E  6E02               	movwf	(fputc@c+1)^0,c
  7936  000340  0E25               	movlw	37
  7937  000342  6E01               	movwf	fputc@c^0,c
  7938  000344  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7939  000348  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7940  00034C  EC71  F00F         	call	_fputc	;wreg free
  7941  000350                     l3455:
  7942                           
  7943                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  7944  000350  0E00               	movlw	0
  7945  000352  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  7946  000354  0E01               	movlw	1
  7947  000356  6E40               	movwf	?_vfpfcnvrt^0,c
  7948  000358  EFD6  F001         	goto	l576
  7949  00035C                     l3459:
  7950                           
  7951                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  7952  00035C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7953  000360  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7954  000364  2ADE               	incf	postinc2,f,c
  7955  000366  0E00               	movlw	0
  7956  000368  22DD               	addwfc	postdec2,f,c
  7957  00036A                     
  7958                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  7959  00036A  0E00               	movlw	0
  7960  00036C  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  7961  00036E  0E00               	movlw	0
  7962  000370  6E40               	movwf	?_vfpfcnvrt^0,c
  7963  000372  EFD6  F001         	goto	l576
  7964  000376                     l3465:
  7965                           
  7966                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  7967  000376  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7968  00037A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7969  00037E  CFDE FFF6          	movff	postinc2,tblptrl
  7970  000382  CFDD FFF7          	movff	postdec2,tblptrh
  7971  000386                     	if	0	;tblptru may be non-zero
  7972  000386                     	endif
  7973  000386                     	if	0	;tblptru may be non-zero
  7974  000386                     	endif
  7975  000386  0008               	tblrd		*
  7976  000388  50F5               	movf	tablat,w,c
  7977  00038A  6E01               	movwf	fputc@c^0,c
  7978  00038C  6A02               	clrf	(fputc@c+1)^0,c
  7979  00038E  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7980  000392  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7981  000396  EC71  F00F         	call	_fputc	;wreg free
  7982  00039A                     
  7983                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  7984  00039A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7985  00039E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7986  0003A2  2ADE               	incf	postinc2,f,c
  7987  0003A4  0E00               	movlw	0
  7988  0003A6  22DD               	addwfc	postdec2,f,c
  7989  0003A8  EFA8  F001         	goto	l3455
  7990  0003AC                     l576:
  7991  0003AC  0012               	return		;funcret
  7992  0003AE                     __end_of_vfpfcnvrt:
  7993                           	opt callstack 0
  7994                           
  7995 ;; *************** function _stoa *****************
  7996 ;; Defined at:
  7997 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7998 ;; Parameters:    Size  Location     Type
  7999 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  8000 ;;		 -> sprintf@f(6), 
  8001 ;;  s               2   11[COMRAM] PTR unsigned char 
  8002 ;;		 -> ?_sprintf(2), dameDatosSistema@diasRegar(50), 
  8003 ;; Auto vars:     Size  Location     Type
  8004 ;;  nuls            7   14[COMRAM] unsigned char [7]
  8005 ;;  l               2   29[COMRAM] int 
  8006 ;;  p               2   27[COMRAM] int 
  8007 ;;  cp              2   25[COMRAM] PTR unsigned char 
  8008 ;;		 -> ?_sprintf(2), stoa@nuls(7), dameDatosSistema@diasRegar(50), 
  8009 ;;  w               2   23[COMRAM] int 
  8010 ;;  i               2   21[COMRAM] int 
  8011 ;; Return value:  Size  Location     Type
  8012 ;;                  2    9[COMRAM] int 
  8013 ;; Registers used:
  8014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8015 ;; Tracked objects:
  8016 ;;		On entry : 0/0
  8017 ;;		On exit  : 0/0
  8018 ;;		Unchanged: 0/0
  8019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8020 ;;      Params:         4       0       0       0       0       0       0       0       0
  8021 ;;      Locals:        17       0       0       0       0       0       0       0       0
  8022 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8023 ;;      Totals:        22       0       0       0       0       0       0       0       0
  8024 ;;Total ram usage:       22 bytes
  8025 ;; Hardware stack levels used:    1
  8026 ;; Hardware stack levels required when called:    3
  8027 ;; This function calls:
  8028 ;;		_fputc
  8029 ;;		_strlen
  8030 ;; This function is called by:
  8031 ;;		_vfpfcnvrt
  8032 ;; This function uses a non-reentrant model
  8033 ;;
  8034                           
  8035                           	psect	text37
  8036  00103A                     __ptext37:
  8037                           	opt callstack 0
  8038  00103A                     _stoa:
  8039                           	opt callstack 22
  8040  00103A                     
  8041                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8042  00103A  EE21  F036         	lfsr	2,stoa@F1144
  8043  00103E  EE10  F00F         	lfsr	1,stoa@nuls
  8044  001042  0E06               	movlw	6
  8045  001044                     u2291:
  8046  001044  CFDB FFE3          	movff	plusw2,plusw1
  8047  001048  06E8               	decf	wreg,f,c
  8048  00104A  E2FC               	bc	u2291
  8049  00104C                     
  8050                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  8051  00104C  C00C  F01A         	movff	stoa@s,stoa@cp
  8052  001050  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  8053  001054                     
  8054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  8055  001054  501A               	movf	stoa@cp^0,w,c
  8056  001056  101B               	iorwf	(stoa@cp+1)^0,w,c
  8057  001058  A4D8               	btfss	status,2,c
  8058  00105A  EF31  F008         	goto	u2301
  8059  00105E  EF33  F008         	goto	u2300
  8060  001062                     u2301:
  8061  001062  EF37  F008         	goto	l3313
  8062  001066                     u2300:
  8063  001066                     
  8064                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  8065  001066  0E0F               	movlw	low stoa@nuls
  8066  001068  6E1A               	movwf	stoa@cp^0,c
  8067  00106A  0E00               	movlw	high stoa@nuls
  8068  00106C  6E1B               	movwf	(stoa@cp+1)^0,c
  8069  00106E                     l3313:
  8070                           
  8071                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  8072  00106E  C01A  F001         	movff	stoa@cp,strlen@s
  8073  001072  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  8074  001076  ECD7  F016         	call	_strlen	;wreg free
  8075  00107A  C001  F01E         	movff	?_strlen,stoa@l
  8076  00107E  C002  F01F         	movff	?_strlen+1,stoa@l+1
  8077  001082                     
  8078                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  8079  001082  C0ED  F01C         	movff	_prec,stoa@p
  8080  001086  C0EE  F01D         	movff	_prec+1,stoa@p+1
  8081  00108A                     
  8082                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  8083  00108A  BE1D               	btfsc	(stoa@p+1)^0,7,c
  8084  00108C  EF4A  F008         	goto	u2311
  8085  001090  EF4C  F008         	goto	u2310
  8086  001094                     u2311:
  8087  001094  EF61  F008         	goto	l547
  8088  001098                     u2310:
  8089  001098  501E               	movf	stoa@l^0,w,c
  8090  00109A  5C1C               	subwf	stoa@p^0,w,c
  8091  00109C  501D               	movf	(stoa@p+1)^0,w,c
  8092  00109E  0A80               	xorlw	128
  8093  0010A0  6E0E               	movwf	??_stoa^0,c
  8094  0010A2  501F               	movf	(stoa@l+1)^0,w,c
  8095  0010A4  0A80               	xorlw	128
  8096  0010A6  580E               	subwfb	??_stoa^0,w,c
  8097  0010A8  A0D8               	btfss	status,0,c
  8098  0010AA  EF59  F008         	goto	u2321
  8099  0010AE  EF5B  F008         	goto	u2320
  8100  0010B2                     u2321:
  8101  0010B2  EF5D  F008         	goto	l545
  8102  0010B6                     u2320:
  8103  0010B6  EF61  F008         	goto	l547
  8104  0010BA                     l545:
  8105  0010BA  C01C  F01E         	movff	stoa@p,stoa@l
  8106  0010BE  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  8107  0010C2                     l547:
  8108                           
  8109                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  8110  0010C2  C01E  F01C         	movff	stoa@l,stoa@p
  8111  0010C6  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  8112                           
  8113                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  8114  0010CA  C0EB  F018         	movff	_width,stoa@w
  8115  0010CE  C0EC  F019         	movff	_width+1,stoa@w+1
  8116                           
  8117                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  8118  0010D2  0100               	movlb	0	; () banked
  8119  0010D4  B1EF               	btfsc	_flags& (0+255),0,b
  8120  0010D6  EF6F  F008         	goto	u2331
  8121  0010DA  EF71  F008         	goto	u2330
  8122  0010DE                     u2331:
  8123  0010DE  EF8E  F008         	goto	l3329
  8124  0010E2                     u2330:
  8125  0010E2  EF7F  F008         	goto	l3327
  8126  0010E6                     l3323:
  8127                           
  8128                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  8129  0010E6  0E00               	movlw	0
  8130  0010E8  6E02               	movwf	(fputc@c+1)^0,c
  8131  0010EA  0E20               	movlw	32
  8132  0010EC  6E01               	movwf	fputc@c^0,c
  8133  0010EE  C00A  F003         	movff	stoa@fp,fputc@fp
  8134  0010F2  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  8135  0010F6  EC71  F00F         	call	_fputc	;wreg free
  8136  0010FA                     
  8137                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  8138  0010FA  4A1E               	infsnz	stoa@l^0,f,c
  8139  0010FC  2A1F               	incf	(stoa@l+1)^0,f,c
  8140  0010FE                     l3327:
  8141                           
  8142                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  8143  0010FE  5018               	movf	stoa@w^0,w,c
  8144  001100  5C1E               	subwf	stoa@l^0,w,c
  8145  001102  501F               	movf	(stoa@l+1)^0,w,c
  8146  001104  0A80               	xorlw	128
  8147  001106  6E0E               	movwf	??_stoa^0,c
  8148  001108  5019               	movf	(stoa@w+1)^0,w,c
  8149  00110A  0A80               	xorlw	128
  8150  00110C  580E               	subwfb	??_stoa^0,w,c
  8151  00110E  A0D8               	btfss	status,0,c
  8152  001110  EF8C  F008         	goto	u2341
  8153  001114  EF8E  F008         	goto	u2340
  8154  001118                     u2341:
  8155  001118  EF73  F008         	goto	l3323
  8156  00111C                     u2340:
  8157  00111C                     l3329:
  8158                           
  8159                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  8160  00111C  0E00               	movlw	0
  8161  00111E  6E17               	movwf	(stoa@i+1)^0,c
  8162  001120  0E00               	movlw	0
  8163  001122  6E16               	movwf	stoa@i^0,c
  8164                           
  8165                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8166  001124  EFA7  F008         	goto	l3337
  8167  001128                     l3331:
  8168                           
  8169                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  8170  001128  C01A  FFD9         	movff	stoa@cp,fsr2l
  8171  00112C  C01B  FFDA         	movff	stoa@cp+1,fsr2h
  8172  001130  50DF               	movf	indf2,w,c
  8173  001132  6E0E               	movwf	??_stoa^0,c
  8174  001134  500E               	movf	??_stoa^0,w,c
  8175  001136  6E01               	movwf	fputc@c^0,c
  8176  001138  6A02               	clrf	(fputc@c+1)^0,c
  8177  00113A  C00A  F003         	movff	stoa@fp,fputc@fp
  8178  00113E  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  8179  001142  EC71  F00F         	call	_fputc	;wreg free
  8180  001146                     
  8181                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  8182  001146  4A1A               	infsnz	stoa@cp^0,f,c
  8183  001148  2A1B               	incf	(stoa@cp+1)^0,f,c
  8184  00114A                     
  8185                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  8186  00114A  4A16               	infsnz	stoa@i^0,f,c
  8187  00114C  2A17               	incf	(stoa@i+1)^0,f,c
  8188  00114E                     l3337:
  8189                           
  8190                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8191  00114E  501C               	movf	stoa@p^0,w,c
  8192  001150  5C16               	subwf	stoa@i^0,w,c
  8193  001152  5017               	movf	(stoa@i+1)^0,w,c
  8194  001154  0A80               	xorlw	128
  8195  001156  6E0E               	movwf	??_stoa^0,c
  8196  001158  501D               	movf	(stoa@p+1)^0,w,c
  8197  00115A  0A80               	xorlw	128
  8198  00115C  580E               	subwfb	??_stoa^0,w,c
  8199  00115E  A0D8               	btfss	status,0,c
  8200  001160  EFB4  F008         	goto	u2351
  8201  001164  EFB6  F008         	goto	u2350
  8202  001168                     u2351:
  8203  001168  EF94  F008         	goto	l3331
  8204  00116C                     u2350:
  8205  00116C                     
  8206                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  8207  00116C  0100               	movlb	0	; () banked
  8208  00116E  A1EF               	btfss	_flags& (0+255),0,b
  8209  001170  EFBC  F008         	goto	u2361
  8210  001174  EFBE  F008         	goto	u2360
  8211  001178                     u2361:
  8212  001178  EFDB  F008         	goto	l557
  8213  00117C                     u2360:
  8214  00117C  EFCC  F008         	goto	l3345
  8215  001180                     l3341:
  8216                           
  8217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  8218  001180  0E00               	movlw	0
  8219  001182  6E02               	movwf	(fputc@c+1)^0,c
  8220  001184  0E20               	movlw	32
  8221  001186  6E01               	movwf	fputc@c^0,c
  8222  001188  C00A  F003         	movff	stoa@fp,fputc@fp
  8223  00118C  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  8224  001190  EC71  F00F         	call	_fputc	;wreg free
  8225  001194                     
  8226                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  8227  001194  4A1E               	infsnz	stoa@l^0,f,c
  8228  001196  2A1F               	incf	(stoa@l+1)^0,f,c
  8229  001198                     l3345:
  8230                           
  8231                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  8232  001198  5018               	movf	stoa@w^0,w,c
  8233  00119A  5C1E               	subwf	stoa@l^0,w,c
  8234  00119C  501F               	movf	(stoa@l+1)^0,w,c
  8235  00119E  0A80               	xorlw	128
  8236  0011A0  6E0E               	movwf	??_stoa^0,c
  8237  0011A2  5019               	movf	(stoa@w+1)^0,w,c
  8238  0011A4  0A80               	xorlw	128
  8239  0011A6  580E               	subwfb	??_stoa^0,w,c
  8240  0011A8  A0D8               	btfss	status,0,c
  8241  0011AA  EFD9  F008         	goto	u2371
  8242  0011AE  EFDB  F008         	goto	u2370
  8243  0011B2                     u2371:
  8244  0011B2  EFC0  F008         	goto	l3341
  8245  0011B6                     u2370:
  8246  0011B6                     l557:
  8247                           
  8248                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  8249  0011B6  C01E  F00A         	movff	stoa@l,?_stoa
  8250  0011BA  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  8251  0011BE  0012               	return		;funcret
  8252  0011C0                     __end_of_stoa:
  8253                           	opt callstack 0
  8254                           
  8255 ;; *************** function _dtoa *****************
  8256 ;; Defined at:
  8257 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8258 ;; Parameters:    Size  Location     Type
  8259 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8260 ;;		 -> sprintf@f(6), 
  8261 ;;  d               8   29[COMRAM] long long 
  8262 ;; Auto vars:     Size  Location     Type
  8263 ;;  n               8   53[COMRAM] long long 
  8264 ;;  i               2   61[COMRAM] int 
  8265 ;;  s               2   51[COMRAM] int 
  8266 ;;  w               2   49[COMRAM] int 
  8267 ;;  p               2   47[COMRAM] int 
  8268 ;; Return value:  Size  Location     Type
  8269 ;;                  2   27[COMRAM] int 
  8270 ;; Registers used:
  8271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8272 ;; Tracked objects:
  8273 ;;		On entry : 0/0
  8274 ;;		On exit  : 0/0
  8275 ;;		Unchanged: 0/0
  8276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8277 ;;      Params:        10       0       0       0       0       0       0       0       0
  8278 ;;      Locals:        18       0       0       0       0       0       0       0       0
  8279 ;;      Temps:          8       0       0       0       0       0       0       0       0
  8280 ;;      Totals:        36       0       0       0       0       0       0       0       0
  8281 ;;Total ram usage:       36 bytes
  8282 ;; Hardware stack levels used:    1
  8283 ;; Hardware stack levels required when called:    5
  8284 ;; This function calls:
  8285 ;;		___aodiv
  8286 ;;		___aomod
  8287 ;;		_abs
  8288 ;;		_pad
  8289 ;; This function is called by:
  8290 ;;		_vfpfcnvrt
  8291 ;; This function uses a non-reentrant model
  8292 ;;
  8293                           
  8294                           	psect	text38
  8295  0003AE                     __ptext38:
  8296                           	opt callstack 0
  8297  0003AE                     _dtoa:
  8298                           	opt callstack 20
  8299  0003AE                     
  8300                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  8301  0003AE  C01E  F036         	movff	dtoa@d,dtoa@n
  8302  0003B2  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  8303  0003B6  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  8304  0003BA  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  8305  0003BE  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  8306  0003C2  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  8307  0003C6  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  8308  0003CA  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  8309  0003CE                     
  8310                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  8311  0003CE  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  8312  0003D0  EFEC  F001         	goto	u2141
  8313  0003D4  EFEF  F001         	goto	u2140
  8314  0003D8                     u2141:
  8315  0003D8  0E01               	movlw	1
  8316  0003DA  EFF0  F001         	goto	u2150
  8317  0003DE                     u2140:
  8318  0003DE  0E00               	movlw	0
  8319  0003E0                     u2150:
  8320  0003E0  6E34               	movwf	dtoa@s^0,c
  8321  0003E2  6A35               	clrf	(dtoa@s+1)^0,c
  8322                           
  8323                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  8324  0003E4  5034               	movf	dtoa@s^0,w,c
  8325  0003E6  1035               	iorwf	(dtoa@s+1)^0,w,c
  8326  0003E8  B4D8               	btfsc	status,2,c
  8327  0003EA  EFF9  F001         	goto	u2161
  8328  0003EE  EFFB  F001         	goto	u2160
  8329  0003F2                     u2161:
  8330  0003F2  EF0B  F002         	goto	l3249
  8331  0003F6                     u2160:
  8332  0003F6                     
  8333                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  8334  0003F6  1E3D               	comf	(dtoa@n+7)^0,f,c
  8335  0003F8  1E3C               	comf	(dtoa@n+6)^0,f,c
  8336  0003FA  1E3B               	comf	(dtoa@n+5)^0,f,c
  8337  0003FC  1E3A               	comf	(dtoa@n+4)^0,f,c
  8338  0003FE  1E39               	comf	(dtoa@n+3)^0,f,c
  8339  000400  1E38               	comf	(dtoa@n+2)^0,f,c
  8340  000402  1E37               	comf	(dtoa@n+1)^0,f,c
  8341  000404  6C36               	negf	dtoa@n^0,c
  8342  000406  0E00               	movlw	0
  8343  000408  2237               	addwfc	(dtoa@n+1)^0,f,c
  8344  00040A  2238               	addwfc	(dtoa@n+2)^0,f,c
  8345  00040C  2239               	addwfc	(dtoa@n+3)^0,f,c
  8346  00040E  223A               	addwfc	(dtoa@n+4)^0,f,c
  8347  000410  223B               	addwfc	(dtoa@n+5)^0,f,c
  8348  000412  223C               	addwfc	(dtoa@n+6)^0,f,c
  8349  000414  223D               	addwfc	(dtoa@n+7)^0,f,c
  8350  000416                     l3249:
  8351                           
  8352                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  8353  000416  0100               	movlb	0	; () banked
  8354  000418  BFEE               	btfsc	(_prec+1)& (0+255),7,b
  8355  00041A  EF11  F002         	goto	u2171
  8356  00041E  EF13  F002         	goto	u2170
  8357  000422                     u2171:
  8358  000422  EF14  F002         	goto	l3253
  8359  000426                     u2170:
  8360  000426                     
  8361                           ; BSR set to: 0
  8362                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  8363  000426  93EF               	bcf	_flags& (0+255),1,b
  8364  000428                     l3253:
  8365                           
  8366                           ; BSR set to: 0
  8367                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  8368  000428  BFEE               	btfsc	(_prec+1)& (0+255),7,b
  8369  00042A  EF21  F002         	goto	u2180
  8370  00042E  51EE               	movf	(_prec+1)& (0+255),w,b
  8371  000430  E106               	bnz	u2181
  8372  000432  05ED               	decf	_prec& (0+255),w,b
  8373  000434  B0D8               	btfsc	status,0,c
  8374  000436  EF1F  F002         	goto	u2181
  8375  00043A  EF21  F002         	goto	u2180
  8376  00043E                     u2181:
  8377  00043E  EF27  F002         	goto	l518
  8378  000442                     u2180:
  8379  000442                     
  8380                           ; BSR set to: 0
  8381  000442  0E00               	movlw	0
  8382  000444  6E31               	movwf	(dtoa@p+1)^0,c
  8383  000446  0E01               	movlw	1
  8384  000448  6E30               	movwf	dtoa@p^0,c
  8385  00044A  EF2B  F002         	goto	l520
  8386  00044E                     l518:
  8387                           
  8388                           ; BSR set to: 0
  8389  00044E  C0ED  F030         	movff	_prec,dtoa@p
  8390  000452  C0EE  F031         	movff	_prec+1,dtoa@p+1
  8391  000456                     l520:
  8392                           
  8393                           ; BSR set to: 0
  8394                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  8395  000456  C0EB  F032         	movff	_width,dtoa@w
  8396  00045A  C0EC  F033         	movff	_width+1,dtoa@w+1
  8397  00045E                     
  8398                           ; BSR set to: 0
  8399                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  8400  00045E  5034               	movf	dtoa@s^0,w,c
  8401  000460  1035               	iorwf	(dtoa@s+1)^0,w,c
  8402  000462  A4D8               	btfss	status,2,c
  8403  000464  EF36  F002         	goto	u2191
  8404  000468  EF38  F002         	goto	u2190
  8405  00046C                     u2191:
  8406  00046C  EF3F  F002         	goto	l3261
  8407  000470                     u2190:
  8408  000470                     
  8409                           ; BSR set to: 0
  8410  000470  A5EF               	btfss	_flags& (0+255),2,b
  8411  000472  EF3D  F002         	goto	u2201
  8412  000476  EF3F  F002         	goto	u2200
  8413  00047A                     u2201:
  8414  00047A  EF42  F002         	goto	l3263
  8415  00047E                     u2200:
  8416  00047E                     l3261:
  8417                           
  8418                           ; BSR set to: 0
  8419                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  8420  00047E  0632               	decf	dtoa@w^0,f,c
  8421  000480  A0D8               	btfss	status,0,c
  8422  000482  0633               	decf	(dtoa@w+1)^0,f,c
  8423  000484                     l3263:
  8424                           
  8425                           ; BSR set to: 0
  8426                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  8427  000484  0E00               	movlw	0
  8428  000486  6E3F               	movwf	(dtoa@i+1)^0,c
  8429  000488  0E1F               	movlw	31
  8430  00048A  6E3E               	movwf	dtoa@i^0,c
  8431  00048C                     
  8432                           ; BSR set to: 0
  8433                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  8434  00048C  0E00               	movlw	0
  8435  00048E  0101               	movlb	1	; () banked
  8436  000490  6F35               	movwf	(_dbuf+31)& (0+255),b
  8437                           
  8438                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8439  000492  EFC7  F002         	goto	l3277
  8440  000496                     l3267:
  8441                           
  8442                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  8443  000496  063E               	decf	dtoa@i^0,f,c
  8444  000498  A0D8               	btfss	status,0,c
  8445  00049A  063F               	decf	(dtoa@i+1)^0,f,c
  8446  00049C                     
  8447                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  8448  00049C  0E16               	movlw	low _dbuf
  8449  00049E  243E               	addwf	dtoa@i^0,w,c
  8450  0004A0  6ED9               	movwf	fsr2l,c
  8451  0004A2  0E01               	movlw	high _dbuf
  8452  0004A4  203F               	addwfc	(dtoa@i+1)^0,w,c
  8453  0004A6  6EDA               	movwf	fsr2h,c
  8454  0004A8  C036  F001         	movff	dtoa@n,___aomod@dividend
  8455  0004AC  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  8456  0004B0  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  8457  0004B4  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  8458  0004B8  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  8459  0004BC  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  8460  0004C0  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  8461  0004C4  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  8462  0004C8  0E0A               	movlw	10
  8463  0004CA  6E09               	movwf	___aomod@divisor^0,c
  8464  0004CC  0E00               	movlw	0
  8465  0004CE  6E0A               	movwf	(___aomod@divisor+1)^0,c
  8466  0004D0  0E00               	movlw	0
  8467  0004D2  6E0B               	movwf	(___aomod@divisor+2)^0,c
  8468  0004D4  0E00               	movlw	0
  8469  0004D6  6E0C               	movwf	(___aomod@divisor+3)^0,c
  8470  0004D8  0E00               	movlw	0
  8471  0004DA  6E0D               	movwf	(___aomod@divisor+4)^0,c
  8472  0004DC  0E00               	movlw	0
  8473  0004DE  6E0E               	movwf	(___aomod@divisor+5)^0,c
  8474  0004E0  0E00               	movlw	0
  8475  0004E2  6E0F               	movwf	(___aomod@divisor+6)^0,c
  8476  0004E4  0E00               	movlw	0
  8477  0004E6  6E10               	movwf	(___aomod@divisor+7)^0,c
  8478  0004E8  EC4D  F00A         	call	___aomod	;wreg free
  8479  0004EC  C001  F026         	movff	?___aomod,??_dtoa
  8480  0004F0  C002  F027         	movff	?___aomod+1,??_dtoa+1
  8481  0004F4  C003  F028         	movff	?___aomod+2,??_dtoa+2
  8482  0004F8  C004  F029         	movff	?___aomod+3,??_dtoa+3
  8483  0004FC  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  8484  000500  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  8485  000504  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  8486  000508  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  8487  00050C  C026  F013         	movff	??_dtoa,abs@a
  8488  000510  C028  F014         	movff	??_dtoa+2,abs@a+1
  8489  000514  EC7D  F016         	call	_abs	;wreg free
  8490  000518  5013               	movf	?_abs^0,w,c
  8491  00051A  0F30               	addlw	48
  8492  00051C  6EDF               	movwf	indf2,c
  8493  00051E                     
  8494                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  8495  00051E  0630               	decf	dtoa@p^0,f,c
  8496  000520  A0D8               	btfss	status,0,c
  8497  000522  0631               	decf	(dtoa@p+1)^0,f,c
  8498  000524                     
  8499                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  8500  000524  0632               	decf	dtoa@w^0,f,c
  8501  000526  A0D8               	btfss	status,0,c
  8502  000528  0633               	decf	(dtoa@w+1)^0,f,c
  8503  00052A                     
  8504                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  8505  00052A  C036  F001         	movff	dtoa@n,___aodiv@dividend
  8506  00052E  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  8507  000532  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  8508  000536  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  8509  00053A  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  8510  00053E  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  8511  000542  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  8512  000546  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  8513  00054A  0E0A               	movlw	10
  8514  00054C  6E09               	movwf	___aodiv@divisor^0,c
  8515  00054E  0E00               	movlw	0
  8516  000550  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  8517  000552  0E00               	movlw	0
  8518  000554  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  8519  000556  0E00               	movlw	0
  8520  000558  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  8521  00055A  0E00               	movlw	0
  8522  00055C  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  8523  00055E  0E00               	movlw	0
  8524  000560  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  8525  000562  0E00               	movlw	0
  8526  000564  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  8527  000566  0E00               	movlw	0
  8528  000568  6E10               	movwf	(___aodiv@divisor+7)^0,c
  8529  00056A  EC59  F007         	call	___aodiv	;wreg free
  8530  00056E  C001  F036         	movff	?___aodiv,dtoa@n
  8531  000572  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  8532  000576  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  8533  00057A  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  8534  00057E  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  8535  000582  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  8536  000586  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  8537  00058A  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  8538  00058E                     l3277:
  8539                           
  8540                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8541  00058E  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  8542  000590  EFD2  F002         	goto	u2211
  8543  000594  503F               	movf	(dtoa@i+1)^0,w,c
  8544  000596  E108               	bnz	u2210
  8545  000598  043E               	decf	dtoa@i^0,w,c
  8546  00059A  A0D8               	btfss	status,0,c
  8547  00059C  EFD2  F002         	goto	u2211
  8548  0005A0  EFD4  F002         	goto	u2210
  8549  0005A4                     u2211:
  8550  0005A4  EF05  F003         	goto	l3287
  8551  0005A8                     u2210:
  8552  0005A8  5036               	movf	dtoa@n^0,w,c
  8553  0005AA  1037               	iorwf	(dtoa@n+1)^0,w,c
  8554  0005AC  1038               	iorwf	(dtoa@n+2)^0,w,c
  8555  0005AE  1039               	iorwf	(dtoa@n+3)^0,w,c
  8556  0005B0  103A               	iorwf	(dtoa@n+4)^0,w,c
  8557  0005B2  103B               	iorwf	(dtoa@n+5)^0,w,c
  8558  0005B4  103C               	iorwf	(dtoa@n+6)^0,w,c
  8559  0005B6  103D               	iorwf	(dtoa@n+7)^0,w,c
  8560  0005B8  A4D8               	btfss	status,2,c
  8561  0005BA  EFE1  F002         	goto	u2221
  8562  0005BE  EFE3  F002         	goto	u2220
  8563  0005C2                     u2221:
  8564  0005C2  EF4B  F002         	goto	l3267
  8565  0005C6                     u2220:
  8566  0005C6  BE31               	btfsc	(dtoa@p+1)^0,7,c
  8567  0005C8  EFF0  F002         	goto	u2230
  8568  0005CC  5031               	movf	(dtoa@p+1)^0,w,c
  8569  0005CE  E106               	bnz	u2231
  8570  0005D0  0430               	decf	dtoa@p^0,w,c
  8571  0005D2  B0D8               	btfsc	status,0,c
  8572  0005D4  EFEE  F002         	goto	u2231
  8573  0005D8  EFF0  F002         	goto	u2230
  8574  0005DC                     u2231:
  8575  0005DC  EF4B  F002         	goto	l3267
  8576  0005E0                     u2230:
  8577  0005E0  BE33               	btfsc	(dtoa@w+1)^0,7,c
  8578  0005E2  EFFB  F002         	goto	u2241
  8579  0005E6  5033               	movf	(dtoa@w+1)^0,w,c
  8580  0005E8  E108               	bnz	u2240
  8581  0005EA  0432               	decf	dtoa@w^0,w,c
  8582  0005EC  A0D8               	btfss	status,0,c
  8583  0005EE  EFFB  F002         	goto	u2241
  8584  0005F2  EFFD  F002         	goto	u2240
  8585  0005F6                     u2241:
  8586  0005F6  EF05  F003         	goto	l3287
  8587  0005FA                     u2240:
  8588  0005FA  0100               	movlb	0	; () banked
  8589  0005FC  B3EF               	btfsc	_flags& (0+255),1,b
  8590  0005FE  EF03  F003         	goto	u2251
  8591  000602  EF05  F003         	goto	u2250
  8592  000606                     u2251:
  8593  000606  EF4B  F002         	goto	l3267
  8594  00060A                     u2250:
  8595  00060A                     l3287:
  8596                           
  8597                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  8598  00060A  5034               	movf	dtoa@s^0,w,c
  8599  00060C  1035               	iorwf	(dtoa@s+1)^0,w,c
  8600  00060E  A4D8               	btfss	status,2,c
  8601  000610  EF0C  F003         	goto	u2261
  8602  000614  EF0E  F003         	goto	u2260
  8603  000618                     u2261:
  8604  000618  EF16  F003         	goto	l3291
  8605  00061C                     u2260:
  8606  00061C  0100               	movlb	0	; () banked
  8607  00061E  A5EF               	btfss	_flags& (0+255),2,b
  8608  000620  EF14  F003         	goto	u2271
  8609  000624  EF16  F003         	goto	u2270
  8610  000628                     u2271:
  8611  000628  EF34  F003         	goto	l3301
  8612  00062C                     u2270:
  8613  00062C                     l3291:
  8614                           
  8615                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  8616  00062C  063E               	decf	dtoa@i^0,f,c
  8617  00062E  A0D8               	btfss	status,0,c
  8618  000630  063F               	decf	(dtoa@i+1)^0,f,c
  8619  000632                     
  8620                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  8621  000632  5034               	movf	dtoa@s^0,w,c
  8622  000634  1035               	iorwf	(dtoa@s+1)^0,w,c
  8623  000636  A4D8               	btfss	status,2,c
  8624  000638  EF20  F003         	goto	u2281
  8625  00063C  EF22  F003         	goto	u2280
  8626  000640                     u2281:
  8627  000640  EF28  F003         	goto	l3297
  8628  000644                     u2280:
  8629  000644  0E00               	movlw	0
  8630  000646  6E2F               	movwf	(_dtoa$1081+1)^0,c
  8631  000648  0E2B               	movlw	43
  8632  00064A  6E2E               	movwf	_dtoa$1081^0,c
  8633  00064C  EF2C  F003         	goto	l3299
  8634  000650                     l3297:
  8635  000650  0E00               	movlw	0
  8636  000652  6E2F               	movwf	(_dtoa$1081+1)^0,c
  8637  000654  0E2D               	movlw	45
  8638  000656  6E2E               	movwf	_dtoa$1081^0,c
  8639  000658                     l3299:
  8640  000658  0E16               	movlw	low _dbuf
  8641  00065A  243E               	addwf	dtoa@i^0,w,c
  8642  00065C  6ED9               	movwf	fsr2l,c
  8643  00065E  0E01               	movlw	high _dbuf
  8644  000660  203F               	addwfc	(dtoa@i+1)^0,w,c
  8645  000662  6EDA               	movwf	fsr2h,c
  8646  000664  C02E  FFDF         	movff	_dtoa$1081,indf2
  8647  000668                     l3301:
  8648                           
  8649                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  8650  000668  C01C  F011         	movff	dtoa@fp,pad@fp
  8651  00066C  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  8652  000670  0E16               	movlw	low _dbuf
  8653  000672  243E               	addwf	dtoa@i^0,w,c
  8654  000674  6E13               	movwf	pad@buf^0,c
  8655  000676  0E01               	movlw	high _dbuf
  8656  000678  203F               	addwfc	(dtoa@i+1)^0,w,c
  8657  00067A  6E14               	movwf	(pad@buf+1)^0,c
  8658  00067C  C032  F015         	movff	dtoa@w,pad@p
  8659  000680  C033  F016         	movff	dtoa@w+1,pad@p+1
  8660  000684  EC39  F010         	call	_pad	;wreg free
  8661  000688  C011  F01C         	movff	?_pad,?_dtoa
  8662  00068C  C012  F01D         	movff	?_pad+1,?_dtoa+1
  8663  000690  0012               	return		;funcret
  8664  000692                     __end_of_dtoa:
  8665                           	opt callstack 0
  8666                           
  8667 ;; *************** function _abs *****************
  8668 ;; Defined at:
  8669 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  8670 ;; Parameters:    Size  Location     Type
  8671 ;;  a               2   18[COMRAM] int 
  8672 ;; Auto vars:     Size  Location     Type
  8673 ;;		None
  8674 ;; Return value:  Size  Location     Type
  8675 ;;                  2   18[COMRAM] int 
  8676 ;; Registers used:
  8677 ;;		wreg, status,2, status,0
  8678 ;; Tracked objects:
  8679 ;;		On entry : 0/0
  8680 ;;		On exit  : 0/0
  8681 ;;		Unchanged: 0/0
  8682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8683 ;;      Params:         2       0       0       0       0       0       0       0       0
  8684 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8685 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8686 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8687 ;;Total ram usage:        4 bytes
  8688 ;; Hardware stack levels used:    1
  8689 ;; Hardware stack levels required when called:    1
  8690 ;; This function calls:
  8691 ;;		Nothing
  8692 ;; This function is called by:
  8693 ;;		_dtoa
  8694 ;; This function uses a non-reentrant model
  8695 ;;
  8696                           
  8697                           	psect	text39
  8698  002CFA                     __ptext39:
  8699                           	opt callstack 0
  8700  002CFA                     _abs:
  8701                           	opt callstack 23
  8702  002CFA  BE14               	btfsc	(abs@a+1)^0,7,c
  8703  002CFC  EF8A  F016         	goto	u1950
  8704  002D00  5014               	movf	(abs@a+1)^0,w,c
  8705  002D02  E106               	bnz	u1951
  8706  002D04  0413               	decf	abs@a^0,w,c
  8707  002D06  B0D8               	btfsc	status,0,c
  8708  002D08  EF88  F016         	goto	u1951
  8709  002D0C  EF8A  F016         	goto	u1950
  8710  002D10                     u1951:
  8711  002D10  EF98  F016         	goto	l1265
  8712  002D14                     u1950:
  8713  002D14  C013  F015         	movff	abs@a,??_abs
  8714  002D18  C014  F016         	movff	abs@a+1,??_abs+1
  8715  002D1C  1E15               	comf	??_abs^0,f,c
  8716  002D1E  1E16               	comf	(??_abs+1)^0,f,c
  8717  002D20  4A15               	infsnz	??_abs^0,f,c
  8718  002D22  2A16               	incf	(??_abs+1)^0,f,c
  8719  002D24  C015  F013         	movff	??_abs,?_abs
  8720  002D28  C016  F014         	movff	??_abs+1,?_abs+1
  8721  002D2C  EF9C  F016         	goto	l1268
  8722  002D30                     l1265:
  8723  002D30  C013  F013         	movff	abs@a,?_abs
  8724  002D34  C014  F014         	movff	abs@a+1,?_abs+1
  8725  002D38                     l1268:
  8726  002D38  0012               	return		;funcret
  8727  002D3A                     __end_of_abs:
  8728                           	opt callstack 0
  8729                           
  8730 ;; *************** function ___aomod *****************
  8731 ;; Defined at:
  8732 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  8733 ;; Parameters:    Size  Location     Type
  8734 ;;  dividend        8    0[COMRAM] long long 
  8735 ;;  divisor         8    8[COMRAM] long long 
  8736 ;; Auto vars:     Size  Location     Type
  8737 ;;  sign            1   17[COMRAM] unsigned char 
  8738 ;;  counter         1   16[COMRAM] unsigned char 
  8739 ;; Return value:  Size  Location     Type
  8740 ;;                  8    0[COMRAM] long long 
  8741 ;; Registers used:
  8742 ;;		wreg, status,2, status,0
  8743 ;; Tracked objects:
  8744 ;;		On entry : 0/0
  8745 ;;		On exit  : 0/0
  8746 ;;		Unchanged: 0/0
  8747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8748 ;;      Params:        16       0       0       0       0       0       0       0       0
  8749 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8750 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8751 ;;      Totals:        18       0       0       0       0       0       0       0       0
  8752 ;;Total ram usage:       18 bytes
  8753 ;; Hardware stack levels used:    1
  8754 ;; Hardware stack levels required when called:    1
  8755 ;; This function calls:
  8756 ;;		Nothing
  8757 ;; This function is called by:
  8758 ;;		_dtoa
  8759 ;; This function uses a non-reentrant model
  8760 ;;
  8761                           
  8762                           	psect	text40
  8763  00149A                     __ptext40:
  8764                           	opt callstack 0
  8765  00149A                     ___aomod:
  8766                           	opt callstack 23
  8767  00149A  0E00               	movlw	0
  8768  00149C  6E12               	movwf	___aomod@sign^0,c
  8769  00149E  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  8770  0014A0  EF56  F00A         	goto	u2050
  8771  0014A4  EF54  F00A         	goto	u2051
  8772  0014A8                     u2051:
  8773  0014A8  EF68  F00A         	goto	l3189
  8774  0014AC                     u2050:
  8775  0014AC  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8776  0014AE  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8777  0014B0  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8778  0014B2  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8779  0014B4  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8780  0014B6  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8781  0014B8  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8782  0014BA  6C01               	negf	___aomod@dividend^0,c
  8783  0014BC  0E00               	movlw	0
  8784  0014BE  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8785  0014C0  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8786  0014C2  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8787  0014C4  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8788  0014C6  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8789  0014C8  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8790  0014CA  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8791  0014CC  0E01               	movlw	1
  8792  0014CE  6E12               	movwf	___aomod@sign^0,c
  8793  0014D0                     l3189:
  8794  0014D0  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  8795  0014D2  EF6F  F00A         	goto	u2060
  8796  0014D6  EF6D  F00A         	goto	u2061
  8797  0014DA                     u2061:
  8798  0014DA  EF7F  F00A         	goto	l3193
  8799  0014DE                     u2060:
  8800  0014DE  1E10               	comf	(___aomod@divisor+7)^0,f,c
  8801  0014E0  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  8802  0014E2  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  8803  0014E4  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  8804  0014E6  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  8805  0014E8  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  8806  0014EA  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  8807  0014EC  6C09               	negf	___aomod@divisor^0,c
  8808  0014EE  0E00               	movlw	0
  8809  0014F0  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  8810  0014F2  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  8811  0014F4  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  8812  0014F6  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  8813  0014F8  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  8814  0014FA  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  8815  0014FC  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  8816  0014FE                     l3193:
  8817  0014FE  5009               	movf	___aomod@divisor^0,w,c
  8818  001500  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  8819  001502  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  8820  001504  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  8821  001506  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  8822  001508  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  8823  00150A  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  8824  00150C  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  8825  00150E  B4D8               	btfsc	status,2,c
  8826  001510  EF8C  F00A         	goto	u2071
  8827  001514  EF8E  F00A         	goto	u2070
  8828  001518                     u2071:
  8829  001518  EFD6  F00A         	goto	l3209
  8830  00151C                     u2070:
  8831  00151C  0E01               	movlw	1
  8832  00151E  6E11               	movwf	___aomod@counter^0,c
  8833  001520  EF9C  F00A         	goto	l3199
  8834  001524                     l3197:
  8835  001524  90D8               	bcf	status,0,c
  8836  001526  3609               	rlcf	___aomod@divisor^0,f,c
  8837  001528  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  8838  00152A  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  8839  00152C  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  8840  00152E  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  8841  001530  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  8842  001532  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  8843  001534  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  8844  001536  2A11               	incf	___aomod@counter^0,f,c
  8845  001538                     l3199:
  8846  001538  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  8847  00153A  EFA1  F00A         	goto	u2081
  8848  00153E  EFA3  F00A         	goto	u2080
  8849  001542                     u2081:
  8850  001542  EF92  F00A         	goto	l3197
  8851  001546                     u2080:
  8852  001546                     l3201:
  8853  001546  5009               	movf	___aomod@divisor^0,w,c
  8854  001548  5C01               	subwf	___aomod@dividend^0,w,c
  8855  00154A  500A               	movf	(___aomod@divisor+1)^0,w,c
  8856  00154C  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  8857  00154E  500B               	movf	(___aomod@divisor+2)^0,w,c
  8858  001550  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  8859  001552  500C               	movf	(___aomod@divisor+3)^0,w,c
  8860  001554  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  8861  001556  500D               	movf	(___aomod@divisor+4)^0,w,c
  8862  001558  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  8863  00155A  500E               	movf	(___aomod@divisor+5)^0,w,c
  8864  00155C  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  8865  00155E  500F               	movf	(___aomod@divisor+6)^0,w,c
  8866  001560  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  8867  001562  5010               	movf	(___aomod@divisor+7)^0,w,c
  8868  001564  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  8869  001566  A0D8               	btfss	status,0,c
  8870  001568  EFB8  F00A         	goto	u2091
  8871  00156C  EFBA  F00A         	goto	u2090
  8872  001570                     u2091:
  8873  001570  EFCA  F00A         	goto	l3205
  8874  001574                     u2090:
  8875  001574  5009               	movf	___aomod@divisor^0,w,c
  8876  001576  5E01               	subwf	___aomod@dividend^0,f,c
  8877  001578  500A               	movf	(___aomod@divisor+1)^0,w,c
  8878  00157A  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  8879  00157C  500B               	movf	(___aomod@divisor+2)^0,w,c
  8880  00157E  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  8881  001580  500C               	movf	(___aomod@divisor+3)^0,w,c
  8882  001582  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  8883  001584  500D               	movf	(___aomod@divisor+4)^0,w,c
  8884  001586  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  8885  001588  500E               	movf	(___aomod@divisor+5)^0,w,c
  8886  00158A  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  8887  00158C  500F               	movf	(___aomod@divisor+6)^0,w,c
  8888  00158E  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  8889  001590  5010               	movf	(___aomod@divisor+7)^0,w,c
  8890  001592  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  8891  001594                     l3205:
  8892  001594  90D8               	bcf	status,0,c
  8893  001596  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  8894  001598  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  8895  00159A  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  8896  00159C  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  8897  00159E  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  8898  0015A0  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  8899  0015A2  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  8900  0015A4  3209               	rrcf	___aomod@divisor^0,f,c
  8901  0015A6  2E11               	decfsz	___aomod@counter^0,f,c
  8902  0015A8  EFA3  F00A         	goto	l3201
  8903  0015AC                     l3209:
  8904  0015AC  5012               	movf	___aomod@sign^0,w,c
  8905  0015AE  B4D8               	btfsc	status,2,c
  8906  0015B0  EFDC  F00A         	goto	u2101
  8907  0015B4  EFDE  F00A         	goto	u2100
  8908  0015B8                     u2101:
  8909  0015B8  EFEE  F00A         	goto	l3213
  8910  0015BC                     u2100:
  8911  0015BC  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8912  0015BE  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8913  0015C0  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8914  0015C2  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8915  0015C4  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8916  0015C6  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8917  0015C8  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8918  0015CA  6C01               	negf	___aomod@dividend^0,c
  8919  0015CC  0E00               	movlw	0
  8920  0015CE  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8921  0015D0  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8922  0015D2  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8923  0015D4  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8924  0015D6  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8925  0015D8  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8926  0015DA  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8927  0015DC                     l3213:
  8928  0015DC  C001  F001         	movff	___aomod@dividend,?___aomod
  8929  0015E0  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8930  0015E4  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8931  0015E8  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8932  0015EC  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8933  0015F0  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8934  0015F4  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8935  0015F8  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8936  0015FC  0012               	return		;funcret
  8937  0015FE                     __end_of___aomod:
  8938                           	opt callstack 0
  8939                           
  8940 ;; *************** function ___aodiv *****************
  8941 ;; Defined at:
  8942 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  8943 ;; Parameters:    Size  Location     Type
  8944 ;;  dividend        8    0[COMRAM] long long 
  8945 ;;  divisor         8    8[COMRAM] long long 
  8946 ;; Auto vars:     Size  Location     Type
  8947 ;;  quotient        8   18[COMRAM] long long 
  8948 ;;  sign            1   17[COMRAM] unsigned char 
  8949 ;;  counter         1   16[COMRAM] unsigned char 
  8950 ;; Return value:  Size  Location     Type
  8951 ;;                  8    0[COMRAM] long long 
  8952 ;; Registers used:
  8953 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8954 ;; Tracked objects:
  8955 ;;		On entry : 0/0
  8956 ;;		On exit  : 0/0
  8957 ;;		Unchanged: 0/0
  8958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8959 ;;      Params:        16       0       0       0       0       0       0       0       0
  8960 ;;      Locals:        10       0       0       0       0       0       0       0       0
  8961 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8962 ;;      Totals:        26       0       0       0       0       0       0       0       0
  8963 ;;Total ram usage:       26 bytes
  8964 ;; Hardware stack levels used:    1
  8965 ;; Hardware stack levels required when called:    1
  8966 ;; This function calls:
  8967 ;;		Nothing
  8968 ;; This function is called by:
  8969 ;;		_dtoa
  8970 ;; This function uses a non-reentrant model
  8971 ;;
  8972                           
  8973                           	psect	text41
  8974  000EB2                     __ptext41:
  8975                           	opt callstack 0
  8976  000EB2                     ___aodiv:
  8977                           	opt callstack 23
  8978  000EB2  0E00               	movlw	0
  8979  000EB4  6E12               	movwf	___aodiv@sign^0,c
  8980  000EB6  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  8981  000EB8  EF62  F007         	goto	u1980
  8982  000EBC  EF60  F007         	goto	u1981
  8983  000EC0                     u1981:
  8984  000EC0  EF74  F007         	goto	l3145
  8985  000EC4                     u1980:
  8986  000EC4  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  8987  000EC6  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  8988  000EC8  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  8989  000ECA  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  8990  000ECC  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  8991  000ECE  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  8992  000ED0  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  8993  000ED2  6C09               	negf	___aodiv@divisor^0,c
  8994  000ED4  0E00               	movlw	0
  8995  000ED6  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  8996  000ED8  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  8997  000EDA  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  8998  000EDC  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  8999  000EDE  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  9000  000EE0  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  9001  000EE2  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  9002  000EE4  0E01               	movlw	1
  9003  000EE6  6E12               	movwf	___aodiv@sign^0,c
  9004  000EE8                     l3145:
  9005  000EE8  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  9006  000EEA  EF7B  F007         	goto	u1990
  9007  000EEE  EF79  F007         	goto	u1991
  9008  000EF2                     u1991:
  9009  000EF2  EF8D  F007         	goto	l3151
  9010  000EF6                     u1990:
  9011  000EF6  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  9012  000EF8  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  9013  000EFA  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  9014  000EFC  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  9015  000EFE  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  9016  000F00  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  9017  000F02  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  9018  000F04  6C01               	negf	___aodiv@dividend^0,c
  9019  000F06  0E00               	movlw	0
  9020  000F08  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  9021  000F0A  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  9022  000F0C  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  9023  000F0E  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  9024  000F10  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  9025  000F12  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  9026  000F14  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  9027  000F16  0E01               	movlw	1
  9028  000F18  1A12               	xorwf	___aodiv@sign^0,f,c
  9029  000F1A                     l3151:
  9030  000F1A  EE20  F013         	lfsr	2,___aodiv@quotient
  9031  000F1E  0E07               	movlw	7
  9032  000F20                     u2001:
  9033  000F20  6ADE               	clrf	postinc2,c
  9034  000F22  06E8               	decf	wreg,f,c
  9035  000F24  E2FD               	bc	u2001
  9036  000F26  5009               	movf	___aodiv@divisor^0,w,c
  9037  000F28  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  9038  000F2A  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  9039  000F2C  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  9040  000F2E  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  9041  000F30  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  9042  000F32  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  9043  000F34  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  9044  000F36  B4D8               	btfsc	status,2,c
  9045  000F38  EFA0  F007         	goto	u2011
  9046  000F3C  EFA2  F007         	goto	u2010
  9047  000F40                     u2011:
  9048  000F40  EFF4  F007         	goto	l3173
  9049  000F44                     u2010:
  9050  000F44  0E01               	movlw	1
  9051  000F46  6E11               	movwf	___aodiv@counter^0,c
  9052  000F48  EFB0  F007         	goto	l3159
  9053  000F4C                     l3157:
  9054  000F4C  90D8               	bcf	status,0,c
  9055  000F4E  3609               	rlcf	___aodiv@divisor^0,f,c
  9056  000F50  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  9057  000F52  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  9058  000F54  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  9059  000F56  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  9060  000F58  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  9061  000F5A  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  9062  000F5C  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  9063  000F5E  2A11               	incf	___aodiv@counter^0,f,c
  9064  000F60                     l3159:
  9065  000F60  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  9066  000F62  EFB5  F007         	goto	u2021
  9067  000F66  EFB7  F007         	goto	u2020
  9068  000F6A                     u2021:
  9069  000F6A  EFA6  F007         	goto	l3157
  9070  000F6E                     u2020:
  9071  000F6E                     l3161:
  9072  000F6E  90D8               	bcf	status,0,c
  9073  000F70  3613               	rlcf	___aodiv@quotient^0,f,c
  9074  000F72  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  9075  000F74  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  9076  000F76  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  9077  000F78  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  9078  000F7A  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  9079  000F7C  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  9080  000F7E  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  9081  000F80  5009               	movf	___aodiv@divisor^0,w,c
  9082  000F82  5C01               	subwf	___aodiv@dividend^0,w,c
  9083  000F84  500A               	movf	(___aodiv@divisor+1)^0,w,c
  9084  000F86  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  9085  000F88  500B               	movf	(___aodiv@divisor+2)^0,w,c
  9086  000F8A  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  9087  000F8C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  9088  000F8E  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  9089  000F90  500D               	movf	(___aodiv@divisor+4)^0,w,c
  9090  000F92  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  9091  000F94  500E               	movf	(___aodiv@divisor+5)^0,w,c
  9092  000F96  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  9093  000F98  500F               	movf	(___aodiv@divisor+6)^0,w,c
  9094  000F9A  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  9095  000F9C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  9096  000F9E  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  9097  000FA0  A0D8               	btfss	status,0,c
  9098  000FA2  EFD5  F007         	goto	u2031
  9099  000FA6  EFD7  F007         	goto	u2030
  9100  000FAA                     u2031:
  9101  000FAA  EFE8  F007         	goto	l3169
  9102  000FAE                     u2030:
  9103  000FAE  5009               	movf	___aodiv@divisor^0,w,c
  9104  000FB0  5E01               	subwf	___aodiv@dividend^0,f,c
  9105  000FB2  500A               	movf	(___aodiv@divisor+1)^0,w,c
  9106  000FB4  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  9107  000FB6  500B               	movf	(___aodiv@divisor+2)^0,w,c
  9108  000FB8  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  9109  000FBA  500C               	movf	(___aodiv@divisor+3)^0,w,c
  9110  000FBC  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  9111  000FBE  500D               	movf	(___aodiv@divisor+4)^0,w,c
  9112  000FC0  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  9113  000FC2  500E               	movf	(___aodiv@divisor+5)^0,w,c
  9114  000FC4  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  9115  000FC6  500F               	movf	(___aodiv@divisor+6)^0,w,c
  9116  000FC8  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  9117  000FCA  5010               	movf	(___aodiv@divisor+7)^0,w,c
  9118  000FCC  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  9119  000FCE  8013               	bsf	___aodiv@quotient^0,0,c
  9120  000FD0                     l3169:
  9121  000FD0  90D8               	bcf	status,0,c
  9122  000FD2  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  9123  000FD4  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  9124  000FD6  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  9125  000FD8  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  9126  000FDA  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  9127  000FDC  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  9128  000FDE  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  9129  000FE0  3209               	rrcf	___aodiv@divisor^0,f,c
  9130  000FE2  2E11               	decfsz	___aodiv@counter^0,f,c
  9131  000FE4  EFB7  F007         	goto	l3161
  9132  000FE8                     l3173:
  9133  000FE8  5012               	movf	___aodiv@sign^0,w,c
  9134  000FEA  B4D8               	btfsc	status,2,c
  9135  000FEC  EFFA  F007         	goto	u2041
  9136  000FF0  EFFC  F007         	goto	u2040
  9137  000FF4                     u2041:
  9138  000FF4  EF0C  F008         	goto	l3177
  9139  000FF8                     u2040:
  9140  000FF8  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  9141  000FFA  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  9142  000FFC  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  9143  000FFE  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  9144  001000  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  9145  001002  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  9146  001004  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  9147  001006  6C13               	negf	___aodiv@quotient^0,c
  9148  001008  0E00               	movlw	0
  9149  00100A  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  9150  00100C  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  9151  00100E  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  9152  001010  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  9153  001012  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  9154  001014  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  9155  001016  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  9156  001018                     l3177:
  9157  001018  C013  F001         	movff	___aodiv@quotient,?___aodiv
  9158  00101C  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  9159  001020  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  9160  001024  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  9161  001028  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  9162  00102C  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  9163  001030  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  9164  001034  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  9165  001038  0012               	return		;funcret
  9166  00103A                     __end_of___aodiv:
  9167                           	opt callstack 0
  9168                           
  9169 ;; *************** function _ctoa *****************
  9170 ;; Defined at:
  9171 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9172 ;; Parameters:    Size  Location     Type
  9173 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  9174 ;;		 -> sprintf@f(6), 
  9175 ;;  c               1   29[COMRAM] unsigned char 
  9176 ;; Auto vars:     Size  Location     Type
  9177 ;;  w               2   30[COMRAM] int 
  9178 ;;  l               2    0        int 
  9179 ;; Return value:  Size  Location     Type
  9180 ;;                  2   27[COMRAM] int 
  9181 ;; Registers used:
  9182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9183 ;; Tracked objects:
  9184 ;;		On entry : 0/0
  9185 ;;		On exit  : 0/0
  9186 ;;		Unchanged: 0/0
  9187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9188 ;;      Params:         3       0       0       0       0       0       0       0       0
  9189 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9190 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9191 ;;      Totals:         5       0       0       0       0       0       0       0       0
  9192 ;;Total ram usage:        5 bytes
  9193 ;; Hardware stack levels used:    1
  9194 ;; Hardware stack levels required when called:    5
  9195 ;; This function calls:
  9196 ;;		_pad
  9197 ;; This function is called by:
  9198 ;;		_vfpfcnvrt
  9199 ;; This function uses a non-reentrant model
  9200 ;;
  9201                           
  9202                           	psect	text42
  9203  0029EE                     __ptext42:
  9204                           	opt callstack 0
  9205  0029EE                     _ctoa:
  9206                           	opt callstack 20
  9207  0029EE                     
  9208                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  9209  0029EE  0100               	movlb	0	; () banked
  9210  0029F0  51EB               	movf	_width& (0+255),w,b
  9211  0029F2  11EC               	iorwf	(_width+1)& (0+255),w,b
  9212  0029F4  A4D8               	btfss	status,2,c
  9213  0029F6  EFFF  F014         	goto	u2131
  9214  0029FA  EF01  F015         	goto	u2130
  9215  0029FE                     u2131:
  9216  0029FE  EF07  F015         	goto	l3233
  9217  002A02                     u2130:
  9218  002A02                     
  9219                           ; BSR set to: 0
  9220  002A02  C0EB  F01F         	movff	_width,ctoa@w
  9221  002A06  C0EC  F020         	movff	_width+1,ctoa@w+1
  9222  002A0A  EF0D  F015         	goto	l3235
  9223  002A0E                     l3233:
  9224                           
  9225                           ; BSR set to: 0
  9226  002A0E  0EFF               	movlw	255
  9227  002A10  25EB               	addwf	_width& (0+255),w,b
  9228  002A12  6E1F               	movwf	ctoa@w^0,c
  9229  002A14  0EFF               	movlw	255
  9230  002A16  21EC               	addwfc	(_width+1)& (0+255),w,b
  9231  002A18  6E20               	movwf	(ctoa@w+1)^0,c
  9232  002A1A                     l3235:
  9233                           
  9234                           ; BSR set to: 0
  9235                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  9236  002A1A  C01E  F116         	movff	ctoa@c,_dbuf
  9237  002A1E                     
  9238                           ; BSR set to: 0
  9239                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  9240  002A1E  0E00               	movlw	0
  9241  002A20  0101               	movlb	1	; () banked
  9242  002A22  6F17               	movwf	(_dbuf+1)& (0+255),b
  9243  002A24                     
  9244                           ; BSR set to: 1
  9245                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  9246  002A24  C01C  F011         	movff	ctoa@fp,pad@fp
  9247  002A28  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  9248  002A2C  0E16               	movlw	low _dbuf
  9249  002A2E  6E13               	movwf	pad@buf^0,c
  9250  002A30  0E01               	movlw	high _dbuf
  9251  002A32  6E14               	movwf	(pad@buf+1)^0,c
  9252  002A34  C01F  F015         	movff	ctoa@w,pad@p
  9253  002A38  C020  F016         	movff	ctoa@w+1,pad@p+1
  9254  002A3C  EC39  F010         	call	_pad	;wreg free
  9255  002A40  C011  F01C         	movff	?_pad,?_ctoa
  9256  002A44  C012  F01D         	movff	?_pad+1,?_ctoa+1
  9257  002A48  0012               	return		;funcret
  9258  002A4A                     __end_of_ctoa:
  9259                           	opt callstack 0
  9260                           
  9261 ;; *************** function _pad *****************
  9262 ;; Defined at:
  9263 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9264 ;; Parameters:    Size  Location     Type
  9265 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  9266 ;;		 -> sprintf@f(6), 
  9267 ;;  buf             2   18[COMRAM] PTR unsigned char 
  9268 ;;		 -> dbuf(32), 
  9269 ;;  p               2   20[COMRAM] int 
  9270 ;; Auto vars:     Size  Location     Type
  9271 ;;  w               2   25[COMRAM] int 
  9272 ;;  i               2   23[COMRAM] int 
  9273 ;; Return value:  Size  Location     Type
  9274 ;;                  2   16[COMRAM] int 
  9275 ;; Registers used:
  9276 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9277 ;; Tracked objects:
  9278 ;;		On entry : 0/0
  9279 ;;		On exit  : 0/0
  9280 ;;		Unchanged: 0/0
  9281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9282 ;;      Params:         6       0       0       0       0       0       0       0       0
  9283 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9284 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9285 ;;      Totals:        11       0       0       0       0       0       0       0       0
  9286 ;;Total ram usage:       11 bytes
  9287 ;; Hardware stack levels used:    1
  9288 ;; Hardware stack levels required when called:    4
  9289 ;; This function calls:
  9290 ;;		_fputc
  9291 ;;		_fputs
  9292 ;;		_strlen
  9293 ;; This function is called by:
  9294 ;;		_ctoa
  9295 ;;		_dtoa
  9296 ;; This function uses a non-reentrant model
  9297 ;;
  9298                           
  9299                           	psect	text43
  9300  002072                     __ptext43:
  9301                           	opt callstack 0
  9302  002072                     _pad:
  9303                           	opt callstack 20
  9304  002072                     
  9305                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  9306  002072  0100               	movlb	0	; () banked
  9307  002074  A1EF               	btfss	_flags& (0+255),0,b
  9308  002076  EF3F  F010         	goto	u1911
  9309  00207A  EF41  F010         	goto	u1910
  9310  00207E                     u1911:
  9311  00207E  EF4B  F010         	goto	l3105
  9312  002082                     u1910:
  9313  002082                     
  9314                           ; BSR set to: 0
  9315                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  9316  002082  C013  F00A         	movff	pad@buf,fputs@s
  9317  002086  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9318  00208A  C011  F00C         	movff	pad@fp,fputs@fp
  9319  00208E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9320  002092  EC3B  F016         	call	_fputs	;wreg free
  9321  002096                     l3105:
  9322                           
  9323                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  9324  002096  BE16               	btfsc	(pad@p+1)^0,7,c
  9325  002098  EF50  F010         	goto	u1921
  9326  00209C  EF52  F010         	goto	u1920
  9327  0020A0                     u1921:
  9328  0020A0  EF58  F010         	goto	l3109
  9329  0020A4                     u1920:
  9330  0020A4  C015  F01A         	movff	pad@p,pad@w
  9331  0020A8  C016  F01B         	movff	pad@p+1,pad@w+1
  9332  0020AC  EF5C  F010         	goto	l500
  9333  0020B0                     l3109:
  9334  0020B0  0E00               	movlw	0
  9335  0020B2  6E1B               	movwf	(pad@w+1)^0,c
  9336  0020B4  0E00               	movlw	0
  9337  0020B6  6E1A               	movwf	pad@w^0,c
  9338  0020B8                     l500:
  9339                           
  9340                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  9341  0020B8  0E00               	movlw	0
  9342  0020BA  6E19               	movwf	(pad@i+1)^0,c
  9343  0020BC  0E00               	movlw	0
  9344  0020BE  6E18               	movwf	pad@i^0,c
  9345                           
  9346                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9347  0020C0  EF6E  F010         	goto	l3115
  9348  0020C4                     l3111:
  9349                           
  9350                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  9351  0020C4  0E00               	movlw	0
  9352  0020C6  6E02               	movwf	(fputc@c+1)^0,c
  9353  0020C8  0E20               	movlw	32
  9354  0020CA  6E01               	movwf	fputc@c^0,c
  9355  0020CC  C011  F003         	movff	pad@fp,fputc@fp
  9356  0020D0  C012  F004         	movff	pad@fp+1,fputc@fp+1
  9357  0020D4  EC71  F00F         	call	_fputc	;wreg free
  9358  0020D8                     
  9359                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  9360  0020D8  4A18               	infsnz	pad@i^0,f,c
  9361  0020DA  2A19               	incf	(pad@i+1)^0,f,c
  9362  0020DC                     l3115:
  9363                           
  9364                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9365  0020DC  501A               	movf	pad@w^0,w,c
  9366  0020DE  5C18               	subwf	pad@i^0,w,c
  9367  0020E0  5019               	movf	(pad@i+1)^0,w,c
  9368  0020E2  0A80               	xorlw	128
  9369  0020E4  6E17               	movwf	??_pad^0,c
  9370  0020E6  501B               	movf	(pad@w+1)^0,w,c
  9371  0020E8  0A80               	xorlw	128
  9372  0020EA  5817               	subwfb	??_pad^0,w,c
  9373  0020EC  A0D8               	btfss	status,0,c
  9374  0020EE  EF7B  F010         	goto	u1931
  9375  0020F2  EF7D  F010         	goto	u1930
  9376  0020F6                     u1931:
  9377  0020F6  EF62  F010         	goto	l3111
  9378  0020FA                     u1930:
  9379  0020FA                     
  9380                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  9381  0020FA  0100               	movlb	0	; () banked
  9382  0020FC  B1EF               	btfsc	_flags& (0+255),0,b
  9383  0020FE  EF83  F010         	goto	u1941
  9384  002102  EF85  F010         	goto	u1940
  9385  002106                     u1941:
  9386  002106  EF8F  F010         	goto	l3119
  9387  00210A                     u1940:
  9388  00210A                     
  9389                           ; BSR set to: 0
  9390                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  9391  00210A  C013  F00A         	movff	pad@buf,fputs@s
  9392  00210E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9393  002112  C011  F00C         	movff	pad@fp,fputs@fp
  9394  002116  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9395  00211A  EC3B  F016         	call	_fputs	;wreg free
  9396  00211E                     l3119:
  9397                           
  9398                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  9399  00211E  C013  F001         	movff	pad@buf,strlen@s
  9400  002122  C014  F002         	movff	pad@buf+1,strlen@s+1
  9401  002126  ECD7  F016         	call	_strlen	;wreg free
  9402  00212A  501A               	movf	pad@w^0,w,c
  9403  00212C  2401               	addwf	?_strlen^0,w,c
  9404  00212E  6E11               	movwf	?_pad^0,c
  9405  002130  501B               	movf	(pad@w+1)^0,w,c
  9406  002132  2002               	addwfc	(?_strlen+1)^0,w,c
  9407  002134  6E12               	movwf	(?_pad+1)^0,c
  9408  002136  0012               	return		;funcret
  9409  002138                     __end_of_pad:
  9410                           	opt callstack 0
  9411                           
  9412 ;; *************** function _strlen *****************
  9413 ;; Defined at:
  9414 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  9415 ;; Parameters:    Size  Location     Type
  9416 ;;  s               2    0[COMRAM] PTR const unsigned char 
  9417 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(32), dameDatosSistema@diasRegar(50), 
  9418 ;; Auto vars:     Size  Location     Type
  9419 ;;  a               2    2[COMRAM] PTR const unsigned char 
  9420 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(32), dameDatosSistema@diasRegar(50), 
  9421 ;; Return value:  Size  Location     Type
  9422 ;;                  2    0[COMRAM] unsigned int 
  9423 ;; Registers used:
  9424 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9425 ;; Tracked objects:
  9426 ;;		On entry : 0/0
  9427 ;;		On exit  : 0/0
  9428 ;;		Unchanged: 0/0
  9429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9430 ;;      Params:         2       0       0       0       0       0       0       0       0
  9431 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9432 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9433 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9434 ;;Total ram usage:        4 bytes
  9435 ;; Hardware stack levels used:    1
  9436 ;; Hardware stack levels required when called:    1
  9437 ;; This function calls:
  9438 ;;		Nothing
  9439 ;; This function is called by:
  9440 ;;		_pad
  9441 ;;		_stoa
  9442 ;; This function uses a non-reentrant model
  9443 ;;
  9444                           
  9445                           	psect	text44
  9446  002DAE                     __ptext44:
  9447                           	opt callstack 0
  9448  002DAE                     _strlen:
  9449                           	opt callstack 23
  9450  002DAE  C001  F003         	movff	strlen@s,strlen@a
  9451  002DB2  C002  F004         	movff	strlen@s+1,strlen@a+1
  9452  002DB6  EFDF  F016         	goto	l3095
  9453  002DBA                     l3093:
  9454  002DBA  4A01               	infsnz	strlen@s^0,f,c
  9455  002DBC  2A02               	incf	(strlen@s+1)^0,f,c
  9456  002DBE                     l3095:
  9457  002DBE  C001  FFD9         	movff	strlen@s,fsr2l
  9458  002DC2  C002  FFDA         	movff	strlen@s+1,fsr2h
  9459  002DC6  50DF               	movf	indf2,w,c
  9460  002DC8  A4D8               	btfss	status,2,c
  9461  002DCA  EFE9  F016         	goto	u1901
  9462  002DCE  EFEB  F016         	goto	u1900
  9463  002DD2                     u1901:
  9464  002DD2  EFDD  F016         	goto	l3093
  9465  002DD6                     u1900:
  9466  002DD6  5003               	movf	strlen@a^0,w,c
  9467  002DD8  5C01               	subwf	strlen@s^0,w,c
  9468  002DDA  6E01               	movwf	?_strlen^0,c
  9469  002DDC  5004               	movf	(strlen@a+1)^0,w,c
  9470  002DDE  5802               	subwfb	(strlen@s+1)^0,w,c
  9471  002DE0  6E02               	movwf	(?_strlen+1)^0,c
  9472  002DE2  0012               	return		;funcret
  9473  002DE4                     __end_of_strlen:
  9474                           	opt callstack 0
  9475                           
  9476 ;; *************** function _fputs *****************
  9477 ;; Defined at:
  9478 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  9479 ;; Parameters:    Size  Location     Type
  9480 ;;  s               2    9[COMRAM] PTR const unsigned char 
  9481 ;;		 -> dbuf(32), 
  9482 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  9483 ;;		 -> sprintf@f(6), 
  9484 ;; Auto vars:     Size  Location     Type
  9485 ;;  i               2   14[COMRAM] int 
  9486 ;;  c               1   13[COMRAM] unsigned char 
  9487 ;; Return value:  Size  Location     Type
  9488 ;;                  2    9[COMRAM] int 
  9489 ;; Registers used:
  9490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9491 ;; Tracked objects:
  9492 ;;		On entry : 0/0
  9493 ;;		On exit  : 0/0
  9494 ;;		Unchanged: 0/0
  9495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9496 ;;      Params:         4       0       0       0       0       0       0       0       0
  9497 ;;      Locals:         3       0       0       0       0       0       0       0       0
  9498 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9499 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9500 ;;Total ram usage:        7 bytes
  9501 ;; Hardware stack levels used:    1
  9502 ;; Hardware stack levels required when called:    3
  9503 ;; This function calls:
  9504 ;;		_fputc
  9505 ;; This function is called by:
  9506 ;;		_pad
  9507 ;; This function uses a non-reentrant model
  9508 ;;
  9509                           
  9510                           	psect	text45
  9511  002C76                     __ptext45:
  9512                           	opt callstack 0
  9513  002C76                     _fputs:
  9514                           	opt callstack 20
  9515  002C76  0E00               	movlw	0
  9516  002C78  6E10               	movwf	(fputs@i+1)^0,c
  9517  002C7A  0E00               	movlw	0
  9518  002C7C  6E0F               	movwf	fputs@i^0,c
  9519  002C7E  EF4C  F016         	goto	l3089
  9520  002C82                     l3085:
  9521  002C82  C00E  F001         	movff	fputs@c,fputc@c
  9522  002C86  6A02               	clrf	(fputc@c+1)^0,c
  9523  002C88  C00C  F003         	movff	fputs@fp,fputc@fp
  9524  002C8C  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  9525  002C90  EC71  F00F         	call	_fputc	;wreg free
  9526  002C94  4A0F               	infsnz	fputs@i^0,f,c
  9527  002C96  2A10               	incf	(fputs@i+1)^0,f,c
  9528  002C98                     l3089:
  9529  002C98  500F               	movf	fputs@i^0,w,c
  9530  002C9A  240A               	addwf	fputs@s^0,w,c
  9531  002C9C  6ED9               	movwf	fsr2l,c
  9532  002C9E  5010               	movf	(fputs@i+1)^0,w,c
  9533  002CA0  200B               	addwfc	(fputs@s+1)^0,w,c
  9534  002CA2  6EDA               	movwf	fsr2h,c
  9535  002CA4  50DF               	movf	indf2,w,c
  9536  002CA6  6E0E               	movwf	fputs@c^0,c
  9537  002CA8  500E               	movf	fputs@c^0,w,c
  9538  002CAA  A4D8               	btfss	status,2,c
  9539  002CAC  EF5A  F016         	goto	u1891
  9540  002CB0  EF5C  F016         	goto	u1890
  9541  002CB4                     u1891:
  9542  002CB4  EF41  F016         	goto	l3085
  9543  002CB8                     u1890:
  9544  002CB8  0012               	return		;funcret
  9545  002CBA                     __end_of_fputs:
  9546                           	opt callstack 0
  9547                           
  9548 ;; *************** function _fputc *****************
  9549 ;; Defined at:
  9550 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  9551 ;; Parameters:    Size  Location     Type
  9552 ;;  c               2    0[COMRAM] int 
  9553 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  9554 ;;		 -> sprintf@f(6), 
  9555 ;; Auto vars:     Size  Location     Type
  9556 ;;		None
  9557 ;; Return value:  Size  Location     Type
  9558 ;;                  2    0[COMRAM] int 
  9559 ;; Registers used:
  9560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9561 ;; Tracked objects:
  9562 ;;		On entry : 0/0
  9563 ;;		On exit  : 0/0
  9564 ;;		Unchanged: 0/0
  9565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9566 ;;      Params:         4       0       0       0       0       0       0       0       0
  9567 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9568 ;;      Temps:          5       0       0       0       0       0       0       0       0
  9569 ;;      Totals:         9       0       0       0       0       0       0       0       0
  9570 ;;Total ram usage:        9 bytes
  9571 ;; Hardware stack levels used:    1
  9572 ;; Hardware stack levels required when called:    2
  9573 ;; This function calls:
  9574 ;;		_putch
  9575 ;; This function is called by:
  9576 ;;		_pad
  9577 ;;		_stoa
  9578 ;;		_vfpfcnvrt
  9579 ;;		_fputs
  9580 ;; This function uses a non-reentrant model
  9581 ;;
  9582                           
  9583                           	psect	text46
  9584  001EE2                     __ptext46:
  9585                           	opt callstack 0
  9586  001EE2                     _fputc:
  9587                           	opt callstack 22
  9588  001EE2  5003               	movf	fputc@fp^0,w,c
  9589  001EE4  1004               	iorwf	(fputc@fp+1)^0,w,c
  9590  001EE6  B4D8               	btfsc	status,2,c
  9591  001EE8  EF78  F00F         	goto	u1851
  9592  001EEC  EF7A  F00F         	goto	u1850
  9593  001EF0                     u1851:
  9594  001EF0  EF83  F00F         	goto	l3073
  9595  001EF4                     u1850:
  9596  001EF4  5003               	movf	fputc@fp^0,w,c
  9597  001EF6  1004               	iorwf	(fputc@fp+1)^0,w,c
  9598  001EF8  A4D8               	btfss	status,2,c
  9599  001EFA  EF81  F00F         	goto	u1861
  9600  001EFE  EF83  F00F         	goto	u1860
  9601  001F02                     u1861:
  9602  001F02  EF88  F00F         	goto	l3075
  9603  001F06                     u1860:
  9604  001F06                     l3073:
  9605  001F06  5001               	movf	fputc@c^0,w,c
  9606  001F08  ECEF  F017         	call	_putch
  9607  001F0C  EFD5  F00F         	goto	l1325
  9608  001F10                     l3075:
  9609  001F10  EE20 F004          	lfsr	2,4
  9610  001F14  5003               	movf	fputc@fp^0,w,c
  9611  001F16  26D9               	addwf	fsr2l,f,c
  9612  001F18  5004               	movf	(fputc@fp+1)^0,w,c
  9613  001F1A  22DA               	addwfc	fsr2h,f,c
  9614  001F1C  50DE               	movf	postinc2,w,c
  9615  001F1E  10DE               	iorwf	postinc2,w,c
  9616  001F20  B4D8               	btfsc	status,2,c
  9617  001F22  EF95  F00F         	goto	u1871
  9618  001F26  EF97  F00F         	goto	u1870
  9619  001F2A                     u1871:
  9620  001F2A  EFB2  F00F         	goto	l3079
  9621  001F2E                     u1870:
  9622  001F2E  EE20 F004          	lfsr	2,4
  9623  001F32  5003               	movf	fputc@fp^0,w,c
  9624  001F34  26D9               	addwf	fsr2l,f,c
  9625  001F36  5004               	movf	(fputc@fp+1)^0,w,c
  9626  001F38  22DA               	addwfc	fsr2h,f,c
  9627  001F3A  EE10 F002          	lfsr	1,2
  9628  001F3E  5003               	movf	fputc@fp^0,w,c
  9629  001F40  26E1               	addwf	fsr1l,f,c
  9630  001F42  5004               	movf	(fputc@fp+1)^0,w,c
  9631  001F44  22E2               	addwfc	fsr1h,f,c
  9632  001F46  50DE               	movf	postinc2,w,c
  9633  001F48  5CE6               	subwf	postinc1,w,c
  9634  001F4A  50E6               	movf	postinc1,w,c
  9635  001F4C  0A80               	xorlw	128
  9636  001F4E  6E09               	movwf	(??_fputc+4)^0,c
  9637  001F50  50DE               	movf	postinc2,w,c
  9638  001F52  0A80               	xorlw	128
  9639  001F54  5809               	subwfb	(??_fputc+4)^0,w,c
  9640  001F56  B0D8               	btfsc	status,0,c
  9641  001F58  EFB0  F00F         	goto	u1881
  9642  001F5C  EFB2  F00F         	goto	u1880
  9643  001F60                     u1881:
  9644  001F60  EFD5  F00F         	goto	l1325
  9645  001F64                     u1880:
  9646  001F64                     l3079:
  9647  001F64  EE20 F002          	lfsr	2,2
  9648  001F68  5003               	movf	fputc@fp^0,w,c
  9649  001F6A  26D9               	addwf	fsr2l,f,c
  9650  001F6C  5004               	movf	(fputc@fp+1)^0,w,c
  9651  001F6E  22DA               	addwfc	fsr2h,f,c
  9652  001F70  CFDE F005          	movff	postinc2,??_fputc
  9653  001F74  CFDD F006          	movff	postdec2,??_fputc+1
  9654  001F78  C003  FFD9         	movff	fputc@fp,fsr2l
  9655  001F7C  C004  FFDA         	movff	fputc@fp+1,fsr2h
  9656  001F80  CFDE F007          	movff	postinc2,??_fputc+2
  9657  001F84  CFDD F008          	movff	postdec2,??_fputc+3
  9658  001F88  5005               	movf	??_fputc^0,w,c
  9659  001F8A  2407               	addwf	(??_fputc+2)^0,w,c
  9660  001F8C  6ED9               	movwf	fsr2l,c
  9661  001F8E  5006               	movf	(??_fputc+1)^0,w,c
  9662  001F90  2008               	addwfc	(??_fputc+3)^0,w,c
  9663  001F92  6EDA               	movwf	fsr2h,c
  9664  001F94  C001  FFDF         	movff	fputc@c,indf2
  9665  001F98  EE20 F002          	lfsr	2,2
  9666  001F9C  5003               	movf	fputc@fp^0,w,c
  9667  001F9E  26D9               	addwf	fsr2l,f,c
  9668  001FA0  5004               	movf	(fputc@fp+1)^0,w,c
  9669  001FA2  22DA               	addwfc	fsr2h,f,c
  9670  001FA4  2ADE               	incf	postinc2,f,c
  9671  001FA6  0E00               	movlw	0
  9672  001FA8  22DD               	addwfc	postdec2,f,c
  9673  001FAA                     l1325:
  9674  001FAA  0012               	return		;funcret
  9675  001FAC                     __end_of_fputc:
  9676                           	opt callstack 0
  9677                           
  9678 ;; *************** function _putch *****************
  9679 ;; Defined at:
  9680 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  9681 ;; Parameters:    Size  Location     Type
  9682 ;;  c               1    wreg     unsigned char 
  9683 ;; Auto vars:     Size  Location     Type
  9684 ;;  c               1    0[COMRAM] unsigned char 
  9685 ;; Return value:  Size  Location     Type
  9686 ;;                  1    wreg      void 
  9687 ;; Registers used:
  9688 ;;		wreg
  9689 ;; Tracked objects:
  9690 ;;		On entry : 0/0
  9691 ;;		On exit  : 0/0
  9692 ;;		Unchanged: 0/0
  9693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9694 ;;      Params:         0       0       0       0       0       0       0       0       0
  9695 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9696 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9697 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9698 ;;Total ram usage:        0 bytes
  9699 ;; Hardware stack levels used:    1
  9700 ;; Hardware stack levels required when called:    1
  9701 ;; This function calls:
  9702 ;;		Nothing
  9703 ;; This function is called by:
  9704 ;;		_fputc
  9705 ;; This function uses a non-reentrant model
  9706 ;;
  9707                           
  9708                           	psect	text47
  9709  002FDE                     __ptext47:
  9710                           	opt callstack 0
  9711  002FDE                     _putch:
  9712                           	opt callstack 22
  9713  002FDE  0012               	return		;funcret
  9714  002FE0                     __end_of_putch:
  9715                           	opt callstack 0
  9716                           
  9717 ;; *************** function _atoi *****************
  9718 ;; Defined at:
  9719 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  9720 ;; Parameters:    Size  Location     Type
  9721 ;;  s               2    7[COMRAM] PTR const unsigned char 
  9722 ;;		 -> STR_42(29), STR_41(32), STR_40(45), STR_39(45), 
  9723 ;;		 -> STR_38(29), STR_37(32), STR_34(53), STR_19(51), 
  9724 ;;		 -> STR_12(9), 
  9725 ;; Auto vars:     Size  Location     Type
  9726 ;;  n               2   20[COMRAM] int 
  9727 ;;  neg             2   13[COMRAM] int 
  9728 ;; Return value:  Size  Location     Type
  9729 ;;                  2    7[COMRAM] int 
  9730 ;; Registers used:
  9731 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9732 ;; Tracked objects:
  9733 ;;		On entry : 0/0
  9734 ;;		On exit  : 0/0
  9735 ;;		Unchanged: 0/0
  9736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9737 ;;      Params:         2       0       0       0       0       0       0       0       0
  9738 ;;      Locals:         9       0       0       0       0       0       0       0       0
  9739 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9740 ;;      Totals:        15       0       0       0       0       0       0       0       0
  9741 ;;Total ram usage:       15 bytes
  9742 ;; Hardware stack levels used:    1
  9743 ;; Hardware stack levels required when called:    2
  9744 ;; This function calls:
  9745 ;;		___wmul
  9746 ;;		_isdigit
  9747 ;;		_isspace
  9748 ;; This function is called by:
  9749 ;;		_vfpfcnvrt
  9750 ;; This function uses a non-reentrant model
  9751 ;;
  9752                           
  9753                           	psect	text48
  9754  000D22                     __ptext48:
  9755                           	opt callstack 0
  9756  000D22                     _atoi:
  9757                           	opt callstack 23
  9758  000D22  0E00               	movlw	0
  9759  000D24  6E16               	movwf	(atoi@n+1)^0,c
  9760  000D26  0E00               	movlw	0
  9761  000D28  6E15               	movwf	atoi@n^0,c
  9762  000D2A  0E00               	movlw	0
  9763  000D2C  6E0F               	movwf	(atoi@neg+1)^0,c
  9764  000D2E  0E00               	movlw	0
  9765  000D30  6E0E               	movwf	atoi@neg^0,c
  9766  000D32  EF9D  F006         	goto	l3351
  9767  000D36                     l3349:
  9768  000D36  4A08               	infsnz	atoi@s^0,f,c
  9769  000D38  2A09               	incf	(atoi@s+1)^0,f,c
  9770  000D3A                     l3351:
  9771  000D3A  0E01               	movlw	1
  9772  000D3C  6E14               	movwf	_atoi$1565^0,c
  9773  000D3E  C008  FFF6         	movff	atoi@s,tblptrl
  9774  000D42  C009  FFF7         	movff	atoi@s+1,tblptrh
  9775  000D46                     	if	0	;tblptru may be non-zero
  9776  000D46                     	endif
  9777  000D46                     	if	0	;tblptru may be non-zero
  9778  000D46                     	endif
  9779  000D46  0008               	tblrd		*
  9780  000D48  50F5               	movf	tablat,w,c
  9781  000D4A  0A20               	xorlw	32
  9782  000D4C  B4D8               	btfsc	status,2,c
  9783  000D4E  EFAB  F006         	goto	u2381
  9784  000D52  EFAD  F006         	goto	u2380
  9785  000D56                     u2381:
  9786  000D56  EFCA  F006         	goto	l3359
  9787  000D5A                     u2380:
  9788  000D5A  0EF7               	movlw	247
  9789  000D5C  6E0A               	movwf	??_atoi^0,c
  9790  000D5E  0EFF               	movlw	255
  9791  000D60  6E0B               	movwf	(??_atoi+1)^0,c
  9792  000D62  C008  FFF6         	movff	atoi@s,tblptrl
  9793  000D66  C009  FFF7         	movff	atoi@s+1,tblptrh
  9794  000D6A                     	if	0	;tblptru may be non-zero
  9795  000D6A                     	endif
  9796  000D6A                     	if	0	;tblptru may be non-zero
  9797  000D6A                     	endif
  9798  000D6A  0008               	tblrd		*
  9799  000D6C  50F5               	movf	tablat,w,c
  9800  000D6E  6E0C               	movwf	(??_atoi+2)^0,c
  9801  000D70  6A0D               	clrf	(??_atoi+3)^0,c
  9802  000D72  500A               	movf	??_atoi^0,w,c
  9803  000D74  260C               	addwf	(??_atoi+2)^0,f,c
  9804  000D76  500B               	movf	(??_atoi+1)^0,w,c
  9805  000D78  220D               	addwfc	(??_atoi+3)^0,f,c
  9806  000D7A  500D               	movf	(??_atoi+3)^0,w,c
  9807  000D7C  E109               	bnz	u2390
  9808  000D7E  0E05               	movlw	5
  9809  000D80  5C0C               	subwf	(??_atoi+2)^0,w,c
  9810  000D82  A0D8               	btfss	status,0,c
  9811  000D84  EFC6  F006         	goto	u2391
  9812  000D88  EFC8  F006         	goto	u2390
  9813  000D8C                     u2391:
  9814  000D8C  EFCA  F006         	goto	l3359
  9815  000D90                     u2390:
  9816  000D90  0E00               	movlw	0
  9817  000D92  6E14               	movwf	_atoi$1565^0,c
  9818  000D94                     l3359:
  9819  000D94  C014  F010         	movff	_atoi$1565,_atoi$1564
  9820  000D98  6A11               	clrf	(_atoi$1564+1)^0,c
  9821  000D9A  5010               	movf	_atoi$1564^0,w,c
  9822  000D9C  1011               	iorwf	(_atoi$1564+1)^0,w,c
  9823  000D9E  A4D8               	btfss	status,2,c
  9824  000DA0  EFD4  F006         	goto	u2401
  9825  000DA4  EFD6  F006         	goto	u2400
  9826  000DA8                     u2401:
  9827  000DA8  EF9B  F006         	goto	l3349
  9828  000DAC                     u2400:
  9829  000DAC  EFE0  F006         	goto	l3369
  9830  000DB0                     l3365:
  9831  000DB0  0E00               	movlw	0
  9832  000DB2  6E0F               	movwf	(atoi@neg+1)^0,c
  9833  000DB4  0E01               	movlw	1
  9834  000DB6  6E0E               	movwf	atoi@neg^0,c
  9835  000DB8                     l3367:
  9836  000DB8  4A08               	infsnz	atoi@s^0,f,c
  9837  000DBA  2A09               	incf	(atoi@s+1)^0,f,c
  9838  000DBC  EF15  F007         	goto	l3375
  9839  000DC0                     l3369:
  9840  000DC0  C008  FFF6         	movff	atoi@s,tblptrl
  9841  000DC4  C009  FFF7         	movff	atoi@s+1,tblptrh
  9842  000DC8                     	if	0	;tblptru may be non-zero
  9843  000DC8                     	endif
  9844  000DC8                     	if	0	;tblptru may be non-zero
  9845  000DC8                     	endif
  9846  000DC8  0008               	tblrd		*
  9847  000DCA  50F5               	movf	tablat,w,c
  9848  000DCC  6E0A               	movwf	??_atoi^0,c
  9849  000DCE  6A0B               	clrf	(??_atoi+1)^0,c
  9850                           
  9851                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9852                           ; Switch size 1, requested type "simple"
  9853                           ; Number of cases is 1, Range of values is 0 to 0
  9854                           ; switch strategies available:
  9855                           ; Name         Instructions Cycles
  9856                           ; simple_byte            4     3 (average)
  9857                           ;	Chosen strategy is simple_byte
  9858  000DD0  500B               	movf	(??_atoi+1)^0,w,c
  9859  000DD2  0A00               	xorlw	0	; case 0
  9860  000DD4  B4D8               	btfsc	status,2,c
  9861  000DD6  EFEF  F006         	goto	l4795
  9862  000DDA  EF15  F007         	goto	l3375
  9863  000DDE                     l4795:
  9864                           
  9865                           ; Switch size 1, requested type "simple"
  9866                           ; Number of cases is 2, Range of values is 43 to 45
  9867                           ; switch strategies available:
  9868                           ; Name         Instructions Cycles
  9869                           ; simple_byte            7     4 (average)
  9870                           ;	Chosen strategy is simple_byte
  9871  000DDE  500A               	movf	??_atoi^0,w,c
  9872  000DE0  0A2B               	xorlw	43	; case 43
  9873  000DE2  B4D8               	btfsc	status,2,c
  9874  000DE4  EFDC  F006         	goto	l3367
  9875  000DE8  0A06               	xorlw	6	; case 45
  9876  000DEA  B4D8               	btfsc	status,2,c
  9877  000DEC  EFD8  F006         	goto	l3365
  9878  000DF0  EF15  F007         	goto	l3375
  9879  000DF4                     l3371:
  9880  000DF4  C015  F001         	movff	atoi@n,___wmul@multiplier
  9881  000DF8  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  9882  000DFC  0E00               	movlw	0
  9883  000DFE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9884  000E00  0E0A               	movlw	10
  9885  000E02  6E03               	movwf	___wmul@multiplicand^0,c
  9886  000E04  EC60  F017         	call	___wmul	;wreg free
  9887  000E08  C008  FFF6         	movff	atoi@s,tblptrl
  9888  000E0C  C009  FFF7         	movff	atoi@s+1,tblptrh
  9889  000E10                     	if	0	;tblptru may be non-zero
  9890  000E10                     	endif
  9891  000E10                     	if	0	;tblptru may be non-zero
  9892  000E10                     	endif
  9893  000E10  0008               	tblrd		*
  9894  000E12  50F5               	movf	tablat,w,c
  9895  000E14  5E01               	subwf	?___wmul^0,f,c
  9896  000E16  0E00               	movlw	0
  9897  000E18  5A02               	subwfb	(?___wmul+1)^0,f,c
  9898  000E1A  0E30               	movlw	48
  9899  000E1C  2401               	addwf	?___wmul^0,w,c
  9900  000E1E  6E15               	movwf	atoi@n^0,c
  9901  000E20  0E00               	movlw	0
  9902  000E22  2002               	addwfc	(?___wmul+1)^0,w,c
  9903  000E24  6E16               	movwf	(atoi@n+1)^0,c
  9904  000E26  EFDC  F006         	goto	l3367
  9905  000E2A                     l3375:
  9906  000E2A  0ED0               	movlw	208
  9907  000E2C  6E0A               	movwf	??_atoi^0,c
  9908  000E2E  0EFF               	movlw	255
  9909  000E30  6E0B               	movwf	(??_atoi+1)^0,c
  9910  000E32  C008  FFF6         	movff	atoi@s,tblptrl
  9911  000E36  C009  FFF7         	movff	atoi@s+1,tblptrh
  9912  000E3A                     	if	0	;tblptru may be non-zero
  9913  000E3A                     	endif
  9914  000E3A                     	if	0	;tblptru may be non-zero
  9915  000E3A                     	endif
  9916  000E3A  0008               	tblrd		*
  9917  000E3C  50F5               	movf	tablat,w,c
  9918  000E3E  6E0C               	movwf	(??_atoi+2)^0,c
  9919  000E40  6A0D               	clrf	(??_atoi+3)^0,c
  9920  000E42  500A               	movf	??_atoi^0,w,c
  9921  000E44  260C               	addwf	(??_atoi+2)^0,f,c
  9922  000E46  500B               	movf	(??_atoi+1)^0,w,c
  9923  000E48  220D               	addwfc	(??_atoi+3)^0,f,c
  9924  000E4A  500D               	movf	(??_atoi+3)^0,w,c
  9925  000E4C  E10A               	bnz	u2410
  9926  000E4E  0E0A               	movlw	10
  9927  000E50  5C0C               	subwf	(??_atoi+2)^0,w,c
  9928  000E52  A0D8               	btfss	status,0,c
  9929  000E54  EF2E  F007         	goto	u2411
  9930  000E58  EF31  F007         	goto	u2410
  9931  000E5C                     u2411:
  9932  000E5C  0E01               	movlw	1
  9933  000E5E  EF32  F007         	goto	u2420
  9934  000E62                     u2410:
  9935  000E62  0E00               	movlw	0
  9936  000E64                     u2420:
  9937  000E64  6E12               	movwf	_atoi$1566^0,c
  9938  000E66  6A13               	clrf	(_atoi$1566+1)^0,c
  9939  000E68  5012               	movf	_atoi$1566^0,w,c
  9940  000E6A  1013               	iorwf	(_atoi$1566+1)^0,w,c
  9941  000E6C  A4D8               	btfss	status,2,c
  9942  000E6E  EF3B  F007         	goto	u2431
  9943  000E72  EF3D  F007         	goto	u2430
  9944  000E76                     u2431:
  9945  000E76  EFFA  F006         	goto	l3371
  9946  000E7A                     u2430:
  9947  000E7A  500E               	movf	atoi@neg^0,w,c
  9948  000E7C  100F               	iorwf	(atoi@neg+1)^0,w,c
  9949  000E7E  A4D8               	btfss	status,2,c
  9950  000E80  EF44  F007         	goto	u2441
  9951  000E84  EF46  F007         	goto	u2440
  9952  000E88                     u2441:
  9953  000E88  EF54  F007         	goto	l1296
  9954  000E8C                     u2440:
  9955  000E8C  C015  F00A         	movff	atoi@n,??_atoi
  9956  000E90  C016  F00B         	movff	atoi@n+1,??_atoi+1
  9957  000E94  1E0A               	comf	??_atoi^0,f,c
  9958  000E96  1E0B               	comf	(??_atoi+1)^0,f,c
  9959  000E98  4A0A               	infsnz	??_atoi^0,f,c
  9960  000E9A  2A0B               	incf	(??_atoi+1)^0,f,c
  9961  000E9C  C00A  F008         	movff	??_atoi,?_atoi
  9962  000EA0  C00B  F009         	movff	??_atoi+1,?_atoi+1
  9963  000EA4  EF58  F007         	goto	l1299
  9964  000EA8                     l1296:
  9965  000EA8  C015  F008         	movff	atoi@n,?_atoi
  9966  000EAC  C016  F009         	movff	atoi@n+1,?_atoi+1
  9967  000EB0                     l1299:
  9968  000EB0  0012               	return		;funcret
  9969  000EB2                     __end_of_atoi:
  9970                           	opt callstack 0
  9971                           
  9972 ;; *************** function _isspace *****************
  9973 ;; Defined at:
  9974 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  9975 ;; Parameters:    Size  Location     Type
  9976 ;;  c               2    0[COMRAM] int 
  9977 ;; Auto vars:     Size  Location     Type
  9978 ;;		None
  9979 ;; Return value:  Size  Location     Type
  9980 ;;                  2    0[COMRAM] int 
  9981 ;; Registers used:
  9982 ;;		wreg, status,2, status,0
  9983 ;; Tracked objects:
  9984 ;;		On entry : 0/0
  9985 ;;		On exit  : 0/0
  9986 ;;		Unchanged: 0/0
  9987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9988 ;;      Params:         2       0       0       0       0       0       0       0       0
  9989 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9990 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9991 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9992 ;;Total ram usage:        7 bytes
  9993 ;; Hardware stack levels used:    1
  9994 ;; Hardware stack levels required when called:    1
  9995 ;; This function calls:
  9996 ;;		Nothing
  9997 ;; This function is called by:
  9998 ;;		_atoi
  9999 ;; This function uses a non-reentrant model
 10000 ;;
 10001                           
 10002                           	psect	text49
 10003  002B4A                     __ptext49:
 10004                           	opt callstack 0
 10005  002B4A                     _isspace:
 10006                           	opt callstack 23
 10007  002B4A  0E01               	movlw	1
 10008  002B4C  6E07               	movwf	_isspace$1582^0,c
 10009  002B4E  0E20               	movlw	32
 10010  002B50  1801               	xorwf	isspace@c^0,w,c
 10011  002B52  1002               	iorwf	(isspace@c+1)^0,w,c
 10012  002B54  B4D8               	btfsc	status,2,c
 10013  002B56  EFAF  F015         	goto	u2111
 10014  002B5A  EFB1  F015         	goto	u2110
 10015  002B5E                     u2111:
 10016  002B5E  EFCA  F015         	goto	l3225
 10017  002B62                     u2110:
 10018  002B62  0EF7               	movlw	247
 10019  002B64  6E03               	movwf	??_isspace^0,c
 10020  002B66  0EFF               	movlw	255
 10021  002B68  6E04               	movwf	(??_isspace+1)^0,c
 10022  002B6A  C001  F005         	movff	isspace@c,??_isspace+2
 10023  002B6E  C002  F006         	movff	isspace@c+1,??_isspace+3
 10024  002B72  5003               	movf	??_isspace^0,w,c
 10025  002B74  2605               	addwf	(??_isspace+2)^0,f,c
 10026  002B76  5004               	movf	(??_isspace+1)^0,w,c
 10027  002B78  2206               	addwfc	(??_isspace+3)^0,f,c
 10028  002B7A  5006               	movf	(??_isspace+3)^0,w,c
 10029  002B7C  E109               	bnz	u2120
 10030  002B7E  0E05               	movlw	5
 10031  002B80  5C05               	subwf	(??_isspace+2)^0,w,c
 10032  002B82  A0D8               	btfss	status,0,c
 10033  002B84  EFC6  F015         	goto	u2121
 10034  002B88  EFC8  F015         	goto	u2120
 10035  002B8C                     u2121:
 10036  002B8C  EFCA  F015         	goto	l3225
 10037  002B90                     u2120:
 10038  002B90  0E00               	movlw	0
 10039  002B92  6E07               	movwf	_isspace$1582^0,c
 10040  002B94                     l3225:
 10041  002B94  C007  F001         	movff	_isspace$1582,?_isspace
 10042  002B98  6A02               	clrf	(?_isspace+1)^0,c
 10043  002B9A  0012               	return		;funcret
 10044  002B9C                     __end_of_isspace:
 10045                           	opt callstack 0
 10046                           
 10047 ;; *************** function _isdigit *****************
 10048 ;; Defined at:
 10049 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 10050 ;; Parameters:    Size  Location     Type
 10051 ;;  c               2    0[COMRAM] int 
 10052 ;; Auto vars:     Size  Location     Type
 10053 ;;		None
 10054 ;; Return value:  Size  Location     Type
 10055 ;;                  2    0[COMRAM] int 
 10056 ;; Registers used:
 10057 ;;		wreg, status,2, status,0
 10058 ;; Tracked objects:
 10059 ;;		On entry : 0/0
 10060 ;;		On exit  : 0/0
 10061 ;;		Unchanged: 0/0
 10062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10063 ;;      Params:         2       0       0       0       0       0       0       0       0
 10064 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10065 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10066 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10067 ;;Total ram usage:        6 bytes
 10068 ;; Hardware stack levels used:    1
 10069 ;; Hardware stack levels required when called:    1
 10070 ;; This function calls:
 10071 ;;		Nothing
 10072 ;; This function is called by:
 10073 ;;		_vfpfcnvrt
 10074 ;;		_atoi
 10075 ;; This function uses a non-reentrant model
 10076 ;;
 10077                           
 10078                           	psect	text50
 10079  002D76                     __ptext50:
 10080                           	opt callstack 0
 10081  002D76                     _isdigit:
 10082                           	opt callstack 24
 10083  002D76  0ED0               	movlw	208
 10084  002D78  6E03               	movwf	??_isdigit^0,c
 10085  002D7A  0EFF               	movlw	255
 10086  002D7C  6E04               	movwf	(??_isdigit+1)^0,c
 10087  002D7E  C001  F005         	movff	isdigit@c,??_isdigit+2
 10088  002D82  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 10089  002D86  5003               	movf	??_isdigit^0,w,c
 10090  002D88  2605               	addwf	(??_isdigit+2)^0,f,c
 10091  002D8A  5004               	movf	(??_isdigit+1)^0,w,c
 10092  002D8C  2206               	addwfc	(??_isdigit+3)^0,f,c
 10093  002D8E  5006               	movf	(??_isdigit+3)^0,w,c
 10094  002D90  E10A               	bnz	u1960
 10095  002D92  0E0A               	movlw	10
 10096  002D94  5C05               	subwf	(??_isdigit+2)^0,w,c
 10097  002D96  A0D8               	btfss	status,0,c
 10098  002D98  EFD0  F016         	goto	u1961
 10099  002D9C  EFD3  F016         	goto	u1960
 10100  002DA0                     u1961:
 10101  002DA0  0E01               	movlw	1
 10102  002DA2  EFD4  F016         	goto	u1970
 10103  002DA6                     u1960:
 10104  002DA6  0E00               	movlw	0
 10105  002DA8                     u1970:
 10106  002DA8  6E01               	movwf	?_isdigit^0,c
 10107  002DAA  6A02               	clrf	(?_isdigit+1)^0,c
 10108  002DAC  0012               	return		;funcret
 10109  002DAE                     __end_of_isdigit:
 10110                           	opt callstack 0
 10111                           
 10112 ;; *************** function _getValue *****************
 10113 ;; Defined at:
 10114 ;;		line 804 in file "main.c"
 10115 ;; Parameters:    Size  Location     Type
 10116 ;;  numCharacter    2    3[COMRAM] short 
 10117 ;; Auto vars:     Size  Location     Type
 10118 ;;  i               2   10[COMRAM] int 
 10119 ;;  i               2    8[COMRAM] int 
 10120 ;;  Rx              1   13[COMRAM] unsigned char 
 10121 ;;  dato            1   12[COMRAM] unsigned char 
 10122 ;;  datoIncorrec    1    7[COMRAM] unsigned char 
 10123 ;; Return value:  Size  Location     Type
 10124 ;;                  1    wreg      unsigned char 
 10125 ;; Registers used:
 10126 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10127 ;; Tracked objects:
 10128 ;;		On entry : 0/0
 10129 ;;		On exit  : 0/0
 10130 ;;		Unchanged: 0/0
 10131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10132 ;;      Params:         2       0       0       0       0       0       0       0       0
 10133 ;;      Locals:         7       0       0       0       0       0       0       0       0
 10134 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10135 ;;      Totals:        11       0       0       0       0       0       0       0       0
 10136 ;;Total ram usage:       11 bytes
 10137 ;; Hardware stack levels used:    1
 10138 ;; Hardware stack levels required when called:    3
 10139 ;; This function calls:
 10140 ;;		_UART_printf
 10141 ;;		_UART_read
 10142 ;;		_UART_write
 10143 ;; This function is called by:
 10144 ;;		_setRtc
 10145 ;;		_asignarHorarios
 10146 ;;		_setTiempoRegar
 10147 ;;		_lecturaWifi
 10148 ;;		_regadoRapido
 10149 ;; This function uses a non-reentrant model
 10150 ;;
 10151                           
 10152                           	psect	text51
 10153  0008FE                     __ptext51:
 10154                           	opt callstack 0
 10155  0008FE                     _getValue:
 10156                           	opt callstack 25
 10157  0008FE                     
 10158                           ;main.c: 807:     unsigned char datoIncorrecto = 0;
 10159  0008FE  0E00               	movlw	0
 10160  000900  6E08               	movwf	getValue@datoIncorrecto^0,c
 10161                           
 10162                           ;main.c: 808:     unsigned char dato = 0;
 10163  000902  0E00               	movlw	0
 10164  000904  6E0D               	movwf	getValue@dato^0,c
 10165                           
 10166                           ;main.c: 810:     switch (numCharacters) {
 10167  000906  EF5B  F005         	goto	l3747
 10168  00090A                     l3669:
 10169                           
 10170                           ;main.c: 813:             Rx = UART_read();
 10171  00090A  EC52  F015         	call	_UART_read	;wreg free
 10172  00090E  6E0E               	movwf	getValue@Rx^0,c
 10173  000910                     
 10174                           ;main.c: 815:             if (Rx >= 48 && Rx <= 57) {
 10175  000910  0E2F               	movlw	47
 10176  000912  640E               	cpfsgt	getValue@Rx^0,c
 10177  000914  EF8E  F004         	goto	u2821
 10178  000918  EF90  F004         	goto	u2820
 10179  00091C                     u2821:
 10180  00091C  EF9E  F004         	goto	l3679
 10181  000920                     u2820:
 10182  000920  0E3A               	movlw	58
 10183  000922  600E               	cpfslt	getValue@Rx^0,c
 10184  000924  EF96  F004         	goto	u2831
 10185  000928  EF98  F004         	goto	u2830
 10186  00092C                     u2831:
 10187  00092C  EF9E  F004         	goto	l3679
 10188  000930                     u2830:
 10189  000930                     
 10190                           ;main.c: 816:                 Rx -= 48;
 10191  000930  0E30               	movlw	48
 10192  000932  5E0E               	subwf	getValue@Rx^0,f,c
 10193  000934                     
 10194                           ;main.c: 817:                 dato = Rx;
 10195  000934  C00E  F00D         	movff	getValue@Rx,getValue@dato
 10196                           
 10197                           ;main.c: 818:             } else {
 10198  000938  EF75  F005         	goto	l3749
 10199  00093C                     l3679:
 10200                           
 10201                           ;main.c: 819:                 UART_write('F');
 10202  00093C  0E46               	movlw	70
 10203  00093E  ECAF  F017         	call	_UART_write
 10204  000942                     
 10205                           ;main.c: 820:                 datoIncorrecto = 1;
 10206  000942  0E01               	movlw	1
 10207  000944  6E08               	movwf	getValue@datoIncorrecto^0,c
 10208  000946  EF75  F005         	goto	l3749
 10209  00094A                     l3683:
 10210                           
 10211                           ;main.c: 826:             for (int i = 0; i < 2; i++) {
 10212  00094A  0E00               	movlw	0
 10213  00094C  6E0A               	movwf	(getValue@i+1)^0,c
 10214  00094E  0E00               	movlw	0
 10215  000950  6E09               	movwf	getValue@i^0,c
 10216  000952                     l3689:
 10217                           
 10218                           ;main.c: 828:                 Rx = UART_read();
 10219  000952  EC52  F015         	call	_UART_read	;wreg free
 10220  000956  6E0E               	movwf	getValue@Rx^0,c
 10221  000958                     
 10222                           ;main.c: 830:                 if (Rx >= 48 && Rx <= 57) {
 10223  000958  0E2F               	movlw	47
 10224  00095A  640E               	cpfsgt	getValue@Rx^0,c
 10225  00095C  EFB2  F004         	goto	u2841
 10226  000960  EFB4  F004         	goto	u2840
 10227  000964                     u2841:
 10228  000964  EFE2  F004         	goto	l3705
 10229  000968                     u2840:
 10230  000968  0E3A               	movlw	58
 10231  00096A  600E               	cpfslt	getValue@Rx^0,c
 10232  00096C  EFBA  F004         	goto	u2851
 10233  000970  EFBC  F004         	goto	u2850
 10234  000974                     u2851:
 10235  000974  EFE2  F004         	goto	l3705
 10236  000978                     u2850:
 10237  000978                     
 10238                           ;main.c: 832:                     Rx -= 48;
 10239  000978  0E30               	movlw	48
 10240  00097A  5E0E               	subwf	getValue@Rx^0,f,c
 10241                           
 10242                           ;main.c: 834:                     switch (i) {
 10243  00097C  EFCC  F004         	goto	l3703
 10244  000980                     l421:
 10245                           
 10246                           ;main.c: 836:                             dato = Rx;
 10247  000980  C00E  F00D         	movff	getValue@Rx,getValue@dato
 10248  000984                     
 10249                           ;main.c: 837:                             dato *= 10;
 10250  000984  0E0A               	movlw	10
 10251  000986  020D               	mulwf	getValue@dato^0,c
 10252  000988  50F3               	movf	prodl,w,c
 10253  00098A  6E0D               	movwf	getValue@dato^0,c
 10254                           
 10255                           ;main.c: 838:                             break;
 10256  00098C  EFE9  F004         	goto	l3709
 10257  000990                     l3699:
 10258                           
 10259                           ;main.c: 841:                             dato += Rx;
 10260  000990  500E               	movf	getValue@Rx^0,w,c
 10261  000992  260D               	addwf	getValue@dato^0,f,c
 10262                           
 10263                           ;main.c: 842:                             break;
 10264  000994  EFE9  F004         	goto	l3709
 10265  000998                     l3703:
 10266  000998  C009  F006         	movff	getValue@i,??_getValue
 10267  00099C  C00A  F007         	movff	getValue@i+1,??_getValue+1
 10268                           
 10269                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10270                           ; Switch size 1, requested type "simple"
 10271                           ; Number of cases is 1, Range of values is 0 to 0
 10272                           ; switch strategies available:
 10273                           ; Name         Instructions Cycles
 10274                           ; simple_byte            4     3 (average)
 10275                           ;	Chosen strategy is simple_byte
 10276  0009A0  5007               	movf	(??_getValue+1)^0,w,c
 10277  0009A2  0A00               	xorlw	0	; case 0
 10278  0009A4  B4D8               	btfsc	status,2,c
 10279  0009A6  EFD7  F004         	goto	l4797
 10280  0009AA  EFE9  F004         	goto	l3709
 10281  0009AE                     l4797:
 10282                           
 10283                           ; Switch size 1, requested type "simple"
 10284                           ; Number of cases is 2, Range of values is 0 to 1
 10285                           ; switch strategies available:
 10286                           ; Name         Instructions Cycles
 10287                           ; simple_byte            7     4 (average)
 10288                           ;	Chosen strategy is simple_byte
 10289  0009AE  5006               	movf	??_getValue^0,w,c
 10290  0009B0  0A00               	xorlw	0	; case 0
 10291  0009B2  B4D8               	btfsc	status,2,c
 10292  0009B4  EFC0  F004         	goto	l421
 10293  0009B8  0A01               	xorlw	1	; case 1
 10294  0009BA  B4D8               	btfsc	status,2,c
 10295  0009BC  EFC8  F004         	goto	l3699
 10296  0009C0  EFE9  F004         	goto	l3709
 10297  0009C4                     l3705:
 10298                           
 10299                           ;main.c: 850:                     datoIncorrecto = 1;
 10300  0009C4  0E01               	movlw	1
 10301  0009C6  6E08               	movwf	getValue@datoIncorrecto^0,c
 10302  0009C8                     
 10303                           ;main.c: 851:                     UART_write('F');
 10304  0009C8  0E46               	movlw	70
 10305  0009CA  ECAF  F017         	call	_UART_write
 10306                           
 10307                           ;main.c: 852:                     break;
 10308  0009CE  EF75  F005         	goto	l3749
 10309  0009D2                     l3709:
 10310                           
 10311                           ;main.c: 854:             }
 10312  0009D2  4A09               	infsnz	getValue@i^0,f,c
 10313  0009D4  2A0A               	incf	(getValue@i+1)^0,f,c
 10314  0009D6  BE0A               	btfsc	(getValue@i+1)^0,7,c
 10315  0009D8  EFF7  F004         	goto	u2861
 10316  0009DC  500A               	movf	(getValue@i+1)^0,w,c
 10317  0009DE  E109               	bnz	u2860
 10318  0009E0  0E02               	movlw	2
 10319  0009E2  5C09               	subwf	getValue@i^0,w,c
 10320  0009E4  A0D8               	btfss	status,0,c
 10321  0009E6  EFF7  F004         	goto	u2861
 10322  0009EA  EFF9  F004         	goto	u2860
 10323  0009EE                     u2861:
 10324  0009EE  EFA9  F004         	goto	l3689
 10325  0009F2                     u2860:
 10326  0009F2  EF75  F005         	goto	l3749
 10327  0009F6                     l3713:
 10328                           
 10329                           ;main.c: 858:             for (int i = 0; i < 3; i++) {
 10330  0009F6  0E00               	movlw	0
 10331  0009F8  6E0C               	movwf	(getValue@i_989+1)^0,c
 10332  0009FA  0E00               	movlw	0
 10333  0009FC  6E0B               	movwf	getValue@i_989^0,c
 10334  0009FE                     l3719:
 10335                           
 10336                           ;main.c: 860:                 Rx = UART_read();
 10337  0009FE  EC52  F015         	call	_UART_read	;wreg free
 10338  000A02  6E0E               	movwf	getValue@Rx^0,c
 10339  000A04                     
 10340                           ;main.c: 862:                 if (Rx >= 48 && Rx <= 57) {
 10341  000A04  0E2F               	movlw	47
 10342  000A06  640E               	cpfsgt	getValue@Rx^0,c
 10343  000A08  EF08  F005         	goto	u2871
 10344  000A0C  EF0A  F005         	goto	u2870
 10345  000A10                     u2871:
 10346  000A10  EF42  F005         	goto	l3737
 10347  000A14                     u2870:
 10348  000A14  0E3A               	movlw	58
 10349  000A16  600E               	cpfslt	getValue@Rx^0,c
 10350  000A18  EF10  F005         	goto	u2881
 10351  000A1C  EF12  F005         	goto	u2880
 10352  000A20                     u2881:
 10353  000A20  EF42  F005         	goto	l3737
 10354  000A24                     u2880:
 10355  000A24                     
 10356                           ;main.c: 864:                     Rx -= 48;
 10357  000A24  0E30               	movlw	48
 10358  000A26  5E0E               	subwf	getValue@Rx^0,f,c
 10359                           
 10360                           ;main.c: 866:                     switch (i) {
 10361  000A28  EF28  F005         	goto	l3735
 10362  000A2C                     l431:
 10363                           
 10364                           ;main.c: 868:                             dato = Rx;
 10365  000A2C  C00E  F00D         	movff	getValue@Rx,getValue@dato
 10366  000A30                     
 10367                           ;main.c: 869:                             dato *= 100;
 10368  000A30  0E64               	movlw	100
 10369  000A32  020D               	mulwf	getValue@dato^0,c
 10370  000A34  50F3               	movf	prodl,w,c
 10371  000A36  6E0D               	movwf	getValue@dato^0,c
 10372                           
 10373                           ;main.c: 870:                             break;
 10374  000A38  EF49  F005         	goto	l3741
 10375  000A3C                     l3729:
 10376                           
 10377                           ;main.c: 873:                             dato += (Rx * 10);
 10378  000A3C  500E               	movf	getValue@Rx^0,w,c
 10379  000A3E  0D0A               	mullw	10
 10380  000A40  50F3               	movf	243,w,c
 10381  000A42  260D               	addwf	getValue@dato^0,f,c
 10382                           
 10383                           ;main.c: 874:                             break;
 10384  000A44  EF49  F005         	goto	l3741
 10385  000A48                     l3731:
 10386                           
 10387                           ;main.c: 877:                             dato += Rx;
 10388  000A48  500E               	movf	getValue@Rx^0,w,c
 10389  000A4A  260D               	addwf	getValue@dato^0,f,c
 10390                           
 10391                           ;main.c: 878:                             break;
 10392  000A4C  EF49  F005         	goto	l3741
 10393  000A50                     l3735:
 10394  000A50  C00B  F006         	movff	getValue@i_989,??_getValue
 10395  000A54  C00C  F007         	movff	getValue@i_989+1,??_getValue+1
 10396                           
 10397                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10398                           ; Switch size 1, requested type "simple"
 10399                           ; Number of cases is 1, Range of values is 0 to 0
 10400                           ; switch strategies available:
 10401                           ; Name         Instructions Cycles
 10402                           ; simple_byte            4     3 (average)
 10403                           ;	Chosen strategy is simple_byte
 10404  000A58  5007               	movf	(??_getValue+1)^0,w,c
 10405  000A5A  0A00               	xorlw	0	; case 0
 10406  000A5C  B4D8               	btfsc	status,2,c
 10407  000A5E  EF33  F005         	goto	l4799
 10408  000A62  EF49  F005         	goto	l3741
 10409  000A66                     l4799:
 10410                           
 10411                           ; Switch size 1, requested type "simple"
 10412                           ; Number of cases is 3, Range of values is 0 to 2
 10413                           ; switch strategies available:
 10414                           ; Name         Instructions Cycles
 10415                           ; simple_byte           10     6 (average)
 10416                           ;	Chosen strategy is simple_byte
 10417  000A66  5006               	movf	??_getValue^0,w,c
 10418  000A68  0A00               	xorlw	0	; case 0
 10419  000A6A  B4D8               	btfsc	status,2,c
 10420  000A6C  EF16  F005         	goto	l431
 10421  000A70  0A01               	xorlw	1	; case 1
 10422  000A72  B4D8               	btfsc	status,2,c
 10423  000A74  EF1E  F005         	goto	l3729
 10424  000A78  0A03               	xorlw	3	; case 2
 10425  000A7A  B4D8               	btfsc	status,2,c
 10426  000A7C  EF24  F005         	goto	l3731
 10427  000A80  EF49  F005         	goto	l3741
 10428  000A84                     l3737:
 10429                           
 10430                           ;main.c: 886:                     datoIncorrecto = 1;
 10431  000A84  0E01               	movlw	1
 10432  000A86  6E08               	movwf	getValue@datoIncorrecto^0,c
 10433  000A88                     
 10434                           ;main.c: 887:                     UART_write('F');
 10435  000A88  0E46               	movlw	70
 10436  000A8A  ECAF  F017         	call	_UART_write
 10437                           
 10438                           ;main.c: 888:                     break;
 10439  000A8E  EF75  F005         	goto	l3749
 10440  000A92                     l3741:
 10441                           
 10442                           ;main.c: 890:             }
 10443  000A92  4A0B               	infsnz	getValue@i_989^0,f,c
 10444  000A94  2A0C               	incf	(getValue@i_989+1)^0,f,c
 10445  000A96  BE0C               	btfsc	(getValue@i_989+1)^0,7,c
 10446  000A98  EF57  F005         	goto	u2891
 10447  000A9C  500C               	movf	(getValue@i_989+1)^0,w,c
 10448  000A9E  E109               	bnz	u2890
 10449  000AA0  0E03               	movlw	3
 10450  000AA2  5C0B               	subwf	getValue@i_989^0,w,c
 10451  000AA4  A0D8               	btfss	status,0,c
 10452  000AA6  EF57  F005         	goto	u2891
 10453  000AAA  EF59  F005         	goto	u2890
 10454  000AAE                     u2891:
 10455  000AAE  EFFF  F004         	goto	l3719
 10456  000AB2                     u2890:
 10457  000AB2  EF75  F005         	goto	l3749
 10458  000AB6                     l3747:
 10459  000AB6  C004  F006         	movff	getValue@numCharacters,??_getValue
 10460  000ABA  C005  F007         	movff	getValue@numCharacters+1,??_getValue+1
 10461                           
 10462                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10463                           ; Switch size 1, requested type "simple"
 10464                           ; Number of cases is 1, Range of values is 0 to 0
 10465                           ; switch strategies available:
 10466                           ; Name         Instructions Cycles
 10467                           ; simple_byte            4     3 (average)
 10468                           ;	Chosen strategy is simple_byte
 10469  000ABE  5007               	movf	(??_getValue+1)^0,w,c
 10470  000AC0  0A00               	xorlw	0	; case 0
 10471  000AC2  B4D8               	btfsc	status,2,c
 10472  000AC4  EF66  F005         	goto	l4801
 10473  000AC8  EF75  F005         	goto	l3749
 10474  000ACC                     l4801:
 10475                           
 10476                           ; Switch size 1, requested type "simple"
 10477                           ; Number of cases is 3, Range of values is 1 to 3
 10478                           ; switch strategies available:
 10479                           ; Name         Instructions Cycles
 10480                           ; simple_byte           10     6 (average)
 10481                           ;	Chosen strategy is simple_byte
 10482  000ACC  5006               	movf	??_getValue^0,w,c
 10483  000ACE  0A01               	xorlw	1	; case 1
 10484  000AD0  B4D8               	btfsc	status,2,c
 10485  000AD2  EF85  F004         	goto	l3669
 10486  000AD6  0A03               	xorlw	3	; case 2
 10487  000AD8  B4D8               	btfsc	status,2,c
 10488  000ADA  EFA5  F004         	goto	l3683
 10489  000ADE  0A01               	xorlw	1	; case 3
 10490  000AE0  B4D8               	btfsc	status,2,c
 10491  000AE2  EFFB  F004         	goto	l3713
 10492  000AE6  EF75  F005         	goto	l3749
 10493  000AEA                     l3749:
 10494                           
 10495                           ;main.c: 899:     if (esperandoDatos || datoIncorrecto) {
 10496  000AEA  0100               	movlb	0	; () banked
 10497  000AEC  51FC               	movf	_esperandoDatos& (0+255),w,b
 10498  000AEE  A4D8               	btfss	status,2,c
 10499  000AF0  EF7C  F005         	goto	u2901
 10500  000AF4  EF7E  F005         	goto	u2900
 10501  000AF8                     u2901:
 10502  000AF8  EF86  F005         	goto	l3753
 10503  000AFC                     u2900:
 10504  000AFC                     
 10505                           ; BSR set to: 0
 10506  000AFC  5008               	movf	getValue@datoIncorrecto^0,w,c
 10507  000AFE  B4D8               	btfsc	status,2,c
 10508  000B00  EF84  F005         	goto	u2911
 10509  000B04  EF86  F005         	goto	u2910
 10510  000B08                     u2911:
 10511  000B08  EF8F  F005         	goto	l3761
 10512  000B0C                     u2910:
 10513  000B0C                     l3753:
 10514                           
 10515                           ; BSR set to: 0
 10516                           ;main.c: 901:         UART_printf("\nFALLO EL SETEO\r\n");
 10517  000B0C  0EA1               	movlw	low STR_46
 10518  000B0E  6E02               	movwf	UART_printf@cadena^0,c
 10519  000B10  0E7F               	movlw	high STR_46
 10520  000B12  6E03               	movwf	(UART_printf@cadena+1)^0,c
 10521  000B14  EC9A  F014         	call	_UART_printf	;wreg free
 10522  000B18                     
 10523                           ;main.c: 902:         return 'F';
 10524  000B18  0E46               	movlw	70
 10525  000B1A  EF90  F005         	goto	l441
 10526  000B1E                     l3761:
 10527                           
 10528                           ; BSR set to: 0
 10529                           ;main.c: 904:         return dato;
 10530  000B1E  500D               	movf	getValue@dato^0,w,c
 10531  000B20                     l441:
 10532  000B20  0012               	return		;funcret
 10533  000B22                     __end_of_getValue:
 10534                           	opt callstack 0
 10535                           
 10536 ;; *************** function _UART_read *****************
 10537 ;; Defined at:
 10538 ;;		line 34 in file "./UART.h"
 10539 ;; Parameters:    Size  Location     Type
 10540 ;;		None
 10541 ;; Auto vars:     Size  Location     Type
 10542 ;;		None
 10543 ;; Return value:  Size  Location     Type
 10544 ;;                  1    wreg      unsigned char 
 10545 ;; Registers used:
 10546 ;;		wreg, status,2
 10547 ;; Tracked objects:
 10548 ;;		On entry : 0/0
 10549 ;;		On exit  : 0/0
 10550 ;;		Unchanged: 0/0
 10551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10552 ;;      Params:         0       0       0       0       0       0       0       0       0
 10553 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10554 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10555 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10556 ;;Total ram usage:        0 bytes
 10557 ;; Hardware stack levels used:    1
 10558 ;; Hardware stack levels required when called:    1
 10559 ;; This function calls:
 10560 ;;		Nothing
 10561 ;; This function is called by:
 10562 ;;		_lecturaWifi
 10563 ;;		_getValue
 10564 ;; This function uses a non-reentrant model
 10565 ;;
 10566                           
 10567                           	psect	text52
 10568  002AA4                     __ptext52:
 10569                           	opt callstack 0
 10570  002AA4                     _UART_read:
 10571                           	opt callstack 26
 10572  002AA4                     
 10573                           ;./UART.h: 36:     TMR0 = VALOR_TIMER0UART;
 10574  002AA4  0E67               	movlw	103
 10575  002AA6  6ED7               	movwf	215,c	;volatile
 10576  002AA8  0E69               	movlw	105
 10577  002AAA  6ED6               	movwf	214,c	;volatile
 10578                           
 10579                           ;./UART.h: 37:     esperaDatoConcluida = 0;
 10580  002AAC  0E00               	movlw	0
 10581  002AAE  0100               	movlb	0	; () banked
 10582  002AB0  6FFD               	movwf	_esperaDatoConcluida& (0+255),b
 10583                           
 10584                           ;./UART.h: 38:     esperandoDatos = 1;
 10585  002AB2  0E01               	movlw	1
 10586  002AB4  6FFC               	movwf	_esperandoDatos& (0+255),b
 10587                           
 10588                           ;./UART.h: 39:     byteUart = 0;
 10589  002AB6  0E00               	movlw	0
 10590  002AB8  6FFE               	movwf	_byteUart& (0+255),b
 10591                           
 10592                           ;./UART.h: 40:     tiempoInactividadTrans = 0;
 10593  002ABA  0E00               	movlw	0
 10594  002ABC  6FFF               	movwf	_tiempoInactividadTrans& (0+255),b
 10595  002ABE                     l127:
 10596                           
 10597                           ; BSR set to: 0
 10598  002ABE  BA9E               	btfsc	158,5,c	;volatile
 10599  002AC0  EF64  F015         	goto	u2591
 10600  002AC4  EF66  F015         	goto	u2590
 10601  002AC8                     u2591:
 10602  002AC8  EF6E  F015         	goto	l3493
 10603  002ACC                     u2590:
 10604  002ACC                     
 10605                           ; BSR set to: 0
 10606  002ACC  51FD               	movf	_esperaDatoConcluida& (0+255),w,b
 10607  002ACE  B4D8               	btfsc	status,2,c
 10608  002AD0  EF6C  F015         	goto	u2601
 10609  002AD4  EF6E  F015         	goto	u2600
 10610  002AD8                     u2601:
 10611  002AD8  EF5F  F015         	goto	l127
 10612  002ADC                     u2600:
 10613  002ADC                     l3493:
 10614                           
 10615                           ; BSR set to: 0
 10616                           ;./UART.h: 44:     if (!esperaDatoConcluida) {
 10617  002ADC  51FD               	movf	_esperaDatoConcluida& (0+255),w,b
 10618  002ADE  A4D8               	btfss	status,2,c
 10619  002AE0  EF74  F015         	goto	u2611
 10620  002AE4  EF76  F015         	goto	u2610
 10621  002AE8                     u2611:
 10622  002AE8  EF7A  F015         	goto	l132
 10623  002AEC                     u2610:
 10624  002AEC                     
 10625                           ; BSR set to: 0
 10626                           ;./UART.h: 45:         byteUart = RCREG;
 10627  002AEC  CFAE F0FE          	movff	4014,_byteUart	;volatile
 10628  002AF0                     
 10629                           ; BSR set to: 0
 10630                           ;./UART.h: 46:         esperandoDatos = 0;
 10631  002AF0  0E00               	movlw	0
 10632  002AF2  6FFC               	movwf	_esperandoDatos& (0+255),b
 10633  002AF4                     l132:
 10634                           
 10635                           ; BSR set to: 0
 10636                           ;./UART.h: 49:     return byteUart;
 10637  002AF4  51FE               	movf	_byteUart& (0+255),w,b
 10638  002AF6                     
 10639                           ; BSR set to: 0
 10640  002AF6  0012               	return		;funcret
 10641  002AF8                     __end_of_UART_read:
 10642                           	opt callstack 0
 10643                           
 10644 ;; *************** function _UART_printf *****************
 10645 ;; Defined at:
 10646 ;;		line 57 in file "./UART.h"
 10647 ;; Parameters:    Size  Location     Type
 10648 ;;  cadena          2    1[COMRAM] PTR unsigned char 
 10649 ;;		 -> STR_50(58), STR_49(57), STR_48(57), STR_47(20), 
 10650 ;;		 -> STR_46(18), STR_45(11), STR_44(9), STR_43(17), 
 10651 ;;		 -> mostrarDatosSensoresWIFI@buffer(50), mostrarDatosSensores@buffer(50), STR_36(21), STR_35(25), 
 10652 ;;		 -> dameDatosSistema@buffer(50), STR_33(55), STR_32(62), STR_31(42), 
 10653 ;;		 -> STR_30(3), STR_29(14), STR_28(26), STR_27(23), 
 10654 ;;		 -> STR_26(34), STR_25(32), STR_24(49), STR_23(37), 
 10655 ;;		 -> STR_22(27), STR_21(37), STR_20(32), lecturaWifi@buffer(50), 
 10656 ;;		 -> STR_18(38), STR_17(37), STR_16(72), STR_15(51), 
 10657 ;;		 -> STR_14(23), STR_13(26), asignarHorarios@buffer(50), STR_11(37), 
 10658 ;;		 -> STR_10(59), STR_9(59), STR_8(51), STR_7(25), 
 10659 ;;		 -> STR_6(37), STR_5(31), STR_4(43), STR_3(16), 
 10660 ;;		 -> STR_2(36), STR_1(65), 
 10661 ;; Auto vars:     Size  Location     Type
 10662 ;;		None
 10663 ;; Return value:  Size  Location     Type
 10664 ;;                  1    wreg      void 
 10665 ;; Registers used:
 10666 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10667 ;; Tracked objects:
 10668 ;;		On entry : 0/0
 10669 ;;		On exit  : 0/0
 10670 ;;		Unchanged: 0/0
 10671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10672 ;;      Params:         2       0       0       0       0       0       0       0       0
 10673 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10674 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10675 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10676 ;;Total ram usage:        2 bytes
 10677 ;; Hardware stack levels used:    1
 10678 ;; Hardware stack levels required when called:    2
 10679 ;; This function calls:
 10680 ;;		_UART_write
 10681 ;; This function is called by:
 10682 ;;		_fijaDiaRtc
 10683 ;;		_fijaHoraRtc
 10684 ;;		_asignarHorarios
 10685 ;;		_setTiempoRegar
 10686 ;;		_lecturaWifi
 10687 ;;		_mostrarMenu
 10688 ;;		_sistemaPrincipal
 10689 ;;		_dameDatosSistema
 10690 ;;		_dameTemperaturaHumedad
 10691 ;;		_mostrarDatosSensores
 10692 ;;		_mostrarDatosSensoresWIFI
 10693 ;;		_getValue
 10694 ;;		_regadoRapido
 10695 ;;		_configBluetoothHC_06
 10696 ;; This function uses a non-reentrant model
 10697 ;;
 10698                           
 10699                           	psect	text53
 10700  002934                     __ptext53:
 10701                           	opt callstack 0
 10702  002934                     _UART_printf:
 10703                           	opt callstack 26
 10704  002934                     
 10705                           ;./UART.h: 58:     while (*cadena) {
 10706  002934  EFB0  F014         	goto	l3507
 10707  002938                     l3503:
 10708                           
 10709                           ;./UART.h: 59:         UART_write(*cadena++);
 10710  002938  C002  FFF6         	movff	UART_printf@cadena,tblptrl
 10711  00293C  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
 10712  002940  6AF8               	clrf	tblptru,c
 10713  002942  0E07               	movlw	(high __ramtop+-1)
 10714  002944  64F7               	cpfsgt	tblptrh,c
 10715  002946  D003               	bra	u2627
 10716  002948  0008               	tblrd		*
 10717  00294A  50F5               	movf	tablat,w,c
 10718  00294C  D005               	bra	u2620
 10719  00294E                     u2627:
 10720  00294E  CFF6 FFE1          	movff	tblptrl,fsr1l
 10721  002952  CFF7 FFE2          	movff	tblptrh,fsr1h
 10722  002956  50E7               	movf	indf1,w,c
 10723  002958                     u2620:
 10724  002958  ECAF  F017         	call	_UART_write
 10725  00295C  4A02               	infsnz	UART_printf@cadena^0,f,c
 10726  00295E  2A03               	incf	(UART_printf@cadena+1)^0,f,c
 10727  002960                     l3507:
 10728                           
 10729                           ;./UART.h: 58:     while (*cadena) {
 10730  002960  C002  FFF6         	movff	UART_printf@cadena,tblptrl
 10731  002964  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
 10732  002968  6AF8               	clrf	tblptru,c
 10733  00296A  0E07               	movlw	(high __ramtop+-1)
 10734  00296C  64F7               	cpfsgt	tblptrh,c
 10735  00296E  D003               	bra	u2637
 10736  002970  0008               	tblrd		*
 10737  002972  50F5               	movf	tablat,w,c
 10738  002974  D005               	bra	u2630
 10739  002976                     u2637:
 10740  002976  CFF6 FFE1          	movff	tblptrl,fsr1l
 10741  00297A  CFF7 FFE2          	movff	tblptrh,fsr1h
 10742  00297E  50E7               	movf	indf1,w,c
 10743  002980                     u2630:
 10744  002980  0900               	iorlw	0
 10745  002982  A4D8               	btfss	status,2,c
 10746  002984  EFC6  F014         	goto	u2641
 10747  002988  EFC8  F014         	goto	u2640
 10748  00298C                     u2641:
 10749  00298C  EF9C  F014         	goto	l3503
 10750  002990                     u2640:
 10751  002990  0012               	return		;funcret
 10752  002992                     __end_of_UART_printf:
 10753                           	opt callstack 0
 10754                           
 10755 ;; *************** function _UART_write *****************
 10756 ;; Defined at:
 10757 ;;		line 52 in file "./UART.h"
 10758 ;; Parameters:    Size  Location     Type
 10759 ;;  dato            1    wreg     unsigned char 
 10760 ;; Auto vars:     Size  Location     Type
 10761 ;;  dato            1    0[COMRAM] unsigned char 
 10762 ;; Return value:  Size  Location     Type
 10763 ;;                  1    wreg      void 
 10764 ;; Registers used:
 10765 ;;		wreg
 10766 ;; Tracked objects:
 10767 ;;		On entry : 0/0
 10768 ;;		On exit  : 0/0
 10769 ;;		Unchanged: 0/0
 10770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10771 ;;      Params:         0       0       0       0       0       0       0       0       0
 10772 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10773 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10774 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10775 ;;Total ram usage:        1 bytes
 10776 ;; Hardware stack levels used:    1
 10777 ;; Hardware stack levels required when called:    1
 10778 ;; This function calls:
 10779 ;;		Nothing
 10780 ;; This function is called by:
 10781 ;;		_UART_printf
 10782 ;;		_lecturaWifi
 10783 ;;		_dameDatosSistema
 10784 ;;		_mostrarDatosSensores
 10785 ;;		_mostrarDatosSensoresWIFI
 10786 ;;		_getValue
 10787 ;; This function uses a non-reentrant model
 10788 ;;
 10789                           
 10790                           	psect	text54
 10791  002F5E                     __ptext54:
 10792                           	opt callstack 0
 10793  002F5E                     _UART_write:
 10794                           	opt callstack 26
 10795                           
 10796                           ;incstack = 0
 10797                           ;UART_write@dato stored from wreg
 10798  002F5E  6E01               	movwf	UART_write@dato^0,c
 10799  002F60                     
 10800                           ;./UART.h: 53:     TXREG = dato;
 10801  002F60  C001  FFAD         	movff	UART_write@dato,4013	;volatile
 10802  002F64                     l136:
 10803  002F64  A2AC               	btfss	172,1,c	;volatile
 10804  002F66  EFB7  F017         	goto	u2471
 10805  002F6A  EFB9  F017         	goto	u2470
 10806  002F6E                     u2471:
 10807  002F6E  EFB2  F017         	goto	l136
 10808  002F72                     u2470:
 10809  002F72  0012               	return		;funcret
 10810  002F74                     __end_of_UART_write:
 10811                           	opt callstack 0
 10812                           
 10813 ;; *************** function _escribeHorariosMemoria *****************
 10814 ;; Defined at:
 10815 ;;		line 247 in file "main.c"
 10816 ;; Parameters:    Size  Location     Type
 10817 ;;		None
 10818 ;; Auto vars:     Size  Location     Type
 10819 ;;  j               2   12[COMRAM] int 
 10820 ;;  i               2   16[COMRAM] int 
 10821 ;;  contMemoria     2   14[COMRAM] int 
 10822 ;; Return value:  Size  Location     Type
 10823 ;;                  1    wreg      void 
 10824 ;; Registers used:
 10825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10826 ;; Tracked objects:
 10827 ;;		On entry : 0/0
 10828 ;;		On exit  : 0/0
 10829 ;;		Unchanged: 0/0
 10830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10831 ;;      Params:         0       0       0       0       0       0       0       0       0
 10832 ;;      Locals:         6       0       0       0       0       0       0       0       0
 10833 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10834 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10835 ;;Total ram usage:        8 bytes
 10836 ;; Hardware stack levels used:    1
 10837 ;; Hardware stack levels required when called:    4
 10838 ;; This function calls:
 10839 ;;		___wmul
 10840 ;;		_escribe_eeprom
 10841 ;; This function is called by:
 10842 ;;		_asignarHorarios
 10843 ;;		_setTiempoRegar
 10844 ;; This function uses a non-reentrant model
 10845 ;;
 10846                           
 10847                           	psect	text55
 10848  001748                     __ptext55:
 10849                           	opt callstack 0
 10850  001748                     _escribeHorariosMemoria:
 10851                           	opt callstack 24
 10852  001748                     
 10853                           ;main.c: 249:     int contMemoria = 0;
 10854  001748  0E00               	movlw	0
 10855  00174A  6E10               	movwf	(escribeHorariosMemoria@contMemoria+1)^0,c
 10856  00174C  0E00               	movlw	0
 10857  00174E  6E0F               	movwf	escribeHorariosMemoria@contMemoria^0,c
 10858                           
 10859                           ;main.c: 250:     for (int i = 0; i < 24; i++) {
 10860  001750  0E00               	movlw	0
 10861  001752  6E12               	movwf	(escribeHorariosMemoria@i+1)^0,c
 10862  001754  0E00               	movlw	0
 10863  001756  6E11               	movwf	escribeHorariosMemoria@i^0,c
 10864  001758                     l3949:
 10865                           
 10866                           ;main.c: 251:         escribe_eeprom(contMemoria++, horarios[i].hora);
 10867  001758  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
 10868  00175C  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
 10869  001760  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
 10870  001764  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
 10871  001768  0E00               	movlw	0
 10872  00176A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10873  00176C  0E0C               	movlw	12
 10874  00176E  6E03               	movwf	___wmul@multiplicand^0,c
 10875  001770  EC60  F017         	call	___wmul	;wreg free
 10876  001774  0EE0               	movlw	low _horarios
 10877  001776  2401               	addwf	?___wmul^0,w,c
 10878  001778  6ED9               	movwf	fsr2l,c
 10879  00177A  0E06               	movlw	high _horarios
 10880  00177C  2002               	addwfc	(?___wmul+1)^0,w,c
 10881  00177E  6EDA               	movwf	fsr2h,c
 10882  001780  50DF               	movf	indf2,w,c
 10883  001782  6E09               	movwf	escribe_eeprom@dato^0,c
 10884  001784  EC0A  F017         	call	_escribe_eeprom	;wreg free
 10885  001788  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 10886  00178A  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 10887  00178C                     
 10888                           ;main.c: 253:         for (int j = 0; j < 7; j++) {
 10889  00178C  0E00               	movlw	0
 10890  00178E  6E0E               	movwf	(escribeHorariosMemoria@j+1)^0,c
 10891  001790  0E00               	movlw	0
 10892  001792  6E0D               	movwf	escribeHorariosMemoria@j^0,c
 10893  001794                     l3959:
 10894                           
 10895                           ;main.c: 254:             escribe_eeprom(contMemoria++, horarios[i].dias[j]);
 10896  001794  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
 10897  001798  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
 10898  00179C  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
 10899  0017A0  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
 10900  0017A4  0E00               	movlw	0
 10901  0017A6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10902  0017A8  0E0C               	movlw	12
 10903  0017AA  6E03               	movwf	___wmul@multiplicand^0,c
 10904  0017AC  EC60  F017         	call	___wmul	;wreg free
 10905  0017B0  0EE0               	movlw	low _horarios
 10906  0017B2  6E0B               	movwf	??_escribeHorariosMemoria^0,c
 10907  0017B4  0E06               	movlw	high _horarios
 10908  0017B6  6E0C               	movwf	(??_escribeHorariosMemoria+1)^0,c
 10909  0017B8  0E01               	movlw	1
 10910  0017BA  260B               	addwf	??_escribeHorariosMemoria^0,f,c
 10911  0017BC  0E00               	movlw	0
 10912  0017BE  220C               	addwfc	(??_escribeHorariosMemoria+1)^0,f,c
 10913  0017C0  5001               	movf	?___wmul^0,w,c
 10914  0017C2  260B               	addwf	??_escribeHorariosMemoria^0,f,c
 10915  0017C4  5002               	movf	(?___wmul+1)^0,w,c
 10916  0017C6  220C               	addwfc	(??_escribeHorariosMemoria+1)^0,f,c
 10917  0017C8  500D               	movf	escribeHorariosMemoria@j^0,w,c
 10918  0017CA  240B               	addwf	??_escribeHorariosMemoria^0,w,c
 10919  0017CC  6ED9               	movwf	fsr2l,c
 10920  0017CE  500E               	movf	(escribeHorariosMemoria@j+1)^0,w,c
 10921  0017D0  200C               	addwfc	(??_escribeHorariosMemoria+1)^0,w,c
 10922  0017D2  6EDA               	movwf	fsr2h,c
 10923  0017D4  50DF               	movf	indf2,w,c
 10924  0017D6  6E09               	movwf	escribe_eeprom@dato^0,c
 10925  0017D8  EC0A  F017         	call	_escribe_eeprom	;wreg free
 10926  0017DC  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 10927  0017DE  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 10928  0017E0                     
 10929                           ;main.c: 255:         }
 10930  0017E0  4A0D               	infsnz	escribeHorariosMemoria@j^0,f,c
 10931  0017E2  2A0E               	incf	(escribeHorariosMemoria@j+1)^0,f,c
 10932  0017E4  BE0E               	btfsc	(escribeHorariosMemoria@j+1)^0,7,c
 10933  0017E6  EFFE  F00B         	goto	u3091
 10934  0017EA  500E               	movf	(escribeHorariosMemoria@j+1)^0,w,c
 10935  0017EC  E109               	bnz	u3090
 10936  0017EE  0E07               	movlw	7
 10937  0017F0  5C0D               	subwf	escribeHorariosMemoria@j^0,w,c
 10938  0017F2  A0D8               	btfss	status,0,c
 10939  0017F4  EFFE  F00B         	goto	u3091
 10940  0017F8  EF00  F00C         	goto	u3090
 10941  0017FC                     u3091:
 10942  0017FC  EFCA  F00B         	goto	l3959
 10943  001800                     u3090:
 10944  001800                     
 10945                           ;main.c: 257:         escribe_eeprom(contMemoria++, horarios[i].regar);
 10946  001800  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
 10947  001804  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
 10948  001808  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
 10949  00180C  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
 10950  001810  0E00               	movlw	0
 10951  001812  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10952  001814  0E0C               	movlw	12
 10953  001816  6E03               	movwf	___wmul@multiplicand^0,c
 10954  001818  EC60  F017         	call	___wmul	;wreg free
 10955  00181C  0EE9               	movlw	low (_horarios+9)
 10956  00181E  2401               	addwf	?___wmul^0,w,c
 10957  001820  6ED9               	movwf	fsr2l,c
 10958  001822  0E06               	movlw	high (_horarios+9)
 10959  001824  2002               	addwfc	(?___wmul+1)^0,w,c
 10960  001826  6EDA               	movwf	fsr2h,c
 10961  001828  50DF               	movf	indf2,w,c
 10962  00182A  6E09               	movwf	escribe_eeprom@dato^0,c
 10963  00182C  EC0A  F017         	call	_escribe_eeprom	;wreg free
 10964  001830  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 10965  001832  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 10966  001834                     
 10967                           ;main.c: 258:         escribe_eeprom(contMemoria++, horarios[i].tiempoRegar);
 10968  001834  C00F  F007         	movff	escribeHorariosMemoria@contMemoria,escribe_eeprom@direccion
 10969  001838  C010  F008         	movff	escribeHorariosMemoria@contMemoria+1,escribe_eeprom@direccion+1
 10970  00183C  C011  F001         	movff	escribeHorariosMemoria@i,___wmul@multiplier
 10971  001840  C012  F002         	movff	escribeHorariosMemoria@i+1,___wmul@multiplier+1
 10972  001844  0E00               	movlw	0
 10973  001846  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10974  001848  0E0C               	movlw	12
 10975  00184A  6E03               	movwf	___wmul@multiplicand^0,c
 10976  00184C  EC60  F017         	call	___wmul	;wreg free
 10977  001850  0EEB               	movlw	low (_horarios+11)
 10978  001852  2401               	addwf	?___wmul^0,w,c
 10979  001854  6ED9               	movwf	fsr2l,c
 10980  001856  0E06               	movlw	high (_horarios+11)
 10981  001858  2002               	addwfc	(?___wmul+1)^0,w,c
 10982  00185A  6EDA               	movwf	fsr2h,c
 10983  00185C  50DF               	movf	indf2,w,c
 10984  00185E  6E09               	movwf	escribe_eeprom@dato^0,c
 10985  001860  EC0A  F017         	call	_escribe_eeprom	;wreg free
 10986  001864  4A0F               	infsnz	escribeHorariosMemoria@contMemoria^0,f,c
 10987  001866  2A10               	incf	(escribeHorariosMemoria@contMemoria+1)^0,f,c
 10988                           
 10989                           ;main.c: 259:     }
 10990  001868  4A11               	infsnz	escribeHorariosMemoria@i^0,f,c
 10991  00186A  2A12               	incf	(escribeHorariosMemoria@i+1)^0,f,c
 10992  00186C  BE12               	btfsc	(escribeHorariosMemoria@i+1)^0,7,c
 10993  00186E  EF42  F00C         	goto	u3101
 10994  001872  5012               	movf	(escribeHorariosMemoria@i+1)^0,w,c
 10995  001874  E109               	bnz	u3100
 10996  001876  0E18               	movlw	24
 10997  001878  5C11               	subwf	escribeHorariosMemoria@i^0,w,c
 10998  00187A  A0D8               	btfss	status,0,c
 10999  00187C  EF42  F00C         	goto	u3101
 11000  001880  EF44  F00C         	goto	u3100
 11001  001884                     u3101:
 11002  001884  EFAC  F00B         	goto	l3949
 11003  001888                     u3100:
 11004  001888  0012               	return		;funcret
 11005  00188A                     __end_of_escribeHorariosMemoria:
 11006                           	opt callstack 0
 11007                           
 11008 ;; *************** function _escribe_eeprom *****************
 11009 ;; Defined at:
 11010 ;;		line 218 in file "main.c"
 11011 ;; Parameters:    Size  Location     Type
 11012 ;;  direccion       2    6[COMRAM] unsigned short 
 11013 ;;  dato            1    8[COMRAM] unsigned char 
 11014 ;; Auto vars:     Size  Location     Type
 11015 ;;		None
 11016 ;; Return value:  Size  Location     Type
 11017 ;;                  1    wreg      void 
 11018 ;; Registers used:
 11019 ;;		wreg, status,2, status,0, cstack
 11020 ;; Tracked objects:
 11021 ;;		On entry : 0/0
 11022 ;;		On exit  : 0/0
 11023 ;;		Unchanged: 0/0
 11024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11025 ;;      Params:         3       0       0       0       0       0       0       0       0
 11026 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11027 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11028 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11029 ;;Total ram usage:        4 bytes
 11030 ;; Hardware stack levels used:    1
 11031 ;; Hardware stack levels required when called:    3
 11032 ;; This function calls:
 11033 ;;		_i2c_detener
 11034 ;;		_i2c_envia_dato
 11035 ;;		_i2c_inicia_com
 11036 ;; This function is called by:
 11037 ;;		_escribeHorariosMemoria
 11038 ;; This function uses a non-reentrant model
 11039 ;;
 11040                           
 11041                           	psect	text56
 11042  002E14                     __ptext56:
 11043                           	opt callstack 0
 11044  002E14                     _escribe_eeprom:
 11045                           	opt callstack 24
 11046  002E14                     
 11047                           ;main.c: 219:     i2c_inicia_com();
 11048  002E14  ECE7  F017         	call	_i2c_inicia_com	;wreg free
 11049                           
 11050                           ;main.c: 220:     i2c_envia_dato(0xAE);
 11051  002E18  0EAE               	movlw	174
 11052  002E1A  ECCD  F017         	call	_i2c_envia_dato
 11053                           
 11054                           ;main.c: 221:     i2c_envia_dato(direccion >> 8);
 11055  002E1E  5008               	movf	(escribe_eeprom@direccion+1)^0,w,c
 11056  002E20  ECCD  F017         	call	_i2c_envia_dato
 11057                           
 11058                           ;main.c: 223:     i2c_envia_dato(direccion);
 11059  002E24  5007               	movf	escribe_eeprom@direccion^0,w,c
 11060  002E26  ECCD  F017         	call	_i2c_envia_dato
 11061                           
 11062                           ;main.c: 225:     i2c_envia_dato(dato);
 11063  002E2A  5009               	movf	escribe_eeprom@dato^0,w,c
 11064  002E2C  ECCD  F017         	call	_i2c_envia_dato
 11065                           
 11066                           ;main.c: 226:     i2c_detener();
 11067  002E30  ECEB  F017         	call	_i2c_detener	;wreg free
 11068  002E34                     
 11069                           ;main.c: 227:     _delay((unsigned long)((10)*(4000000/4000.0)));
 11070  002E34  0E0D               	movlw	13
 11071  002E36  6E0A               	movwf	??_escribe_eeprom^0,c
 11072  002E38  0EFC               	movlw	252
 11073  002E3A                     u3777:
 11074  002E3A  2EE8               	decfsz	wreg,f,c
 11075  002E3C  D7FE               	bra	u3777
 11076  002E3E  2E0A               	decfsz	??_escribe_eeprom^0,f,c
 11077  002E40  D7FC               	bra	u3777
 11078  002E42  0012               	return		;funcret
 11079  002E44                     __end_of_escribe_eeprom:
 11080                           	opt callstack 0
 11081                           
 11082 ;; *************** function _leeHorariosMemoria *****************
 11083 ;; Defined at:
 11084 ;;		line 262 in file "main.c"
 11085 ;; Parameters:    Size  Location     Type
 11086 ;;		None
 11087 ;; Auto vars:     Size  Location     Type
 11088 ;;  j               2    8[COMRAM] int 
 11089 ;;  i               2   12[COMRAM] int 
 11090 ;;  contMemoria     2   10[COMRAM] int 
 11091 ;; Return value:  Size  Location     Type
 11092 ;;                  1    wreg      void 
 11093 ;; Registers used:
 11094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11095 ;; Tracked objects:
 11096 ;;		On entry : 0/0
 11097 ;;		On exit  : 0/0
 11098 ;;		Unchanged: 0/0
 11099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11100 ;;      Params:         0       0       0       0       0       0       0       0       0
 11101 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11102 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11103 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11104 ;;Total ram usage:        8 bytes
 11105 ;; Hardware stack levels used:    1
 11106 ;; Hardware stack levels required when called:    4
 11107 ;; This function calls:
 11108 ;;		___wmul
 11109 ;;		_leer_eeprom
 11110 ;; This function is called by:
 11111 ;;		_main
 11112 ;; This function uses a non-reentrant model
 11113 ;;
 11114                           
 11115                           	psect	text57
 11116  00188A                     __ptext57:
 11117                           	opt callstack 0
 11118  00188A                     _leeHorariosMemoria:
 11119                           	opt callstack 26
 11120  00188A                     
 11121                           ;main.c: 264:     int contMemoria = 0;
 11122  00188A  0E00               	movlw	0
 11123  00188C  6E0C               	movwf	(leeHorariosMemoria@contMemoria+1)^0,c
 11124  00188E  0E00               	movlw	0
 11125  001890  6E0B               	movwf	leeHorariosMemoria@contMemoria^0,c
 11126                           
 11127                           ;main.c: 266:     for (int i = 0; i < 24; i++) {
 11128  001892  0E00               	movlw	0
 11129  001894  6E0E               	movwf	(leeHorariosMemoria@i+1)^0,c
 11130  001896  0E00               	movlw	0
 11131  001898  6E0D               	movwf	leeHorariosMemoria@i^0,c
 11132  00189A                     l4425:
 11133                           
 11134                           ;main.c: 267:         horarios[i].hora = leer_eeprom(contMemoria++);
 11135  00189A  C00D  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
 11136  00189E  C00E  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
 11137  0018A2  0E00               	movlw	0
 11138  0018A4  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11139  0018A6  0E0C               	movlw	12
 11140  0018A8  6E03               	movwf	___wmul@multiplicand^0,c
 11141  0018AA  EC60  F017         	call	___wmul	;wreg free
 11142  0018AE  0EE0               	movlw	low _horarios
 11143  0018B0  2401               	addwf	?___wmul^0,w,c
 11144  0018B2  6ED9               	movwf	fsr2l,c
 11145  0018B4  0E06               	movlw	high _horarios
 11146  0018B6  2002               	addwfc	(?___wmul+1)^0,w,c
 11147  0018B8  6EDA               	movwf	fsr2h,c
 11148  0018BA  C00B  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
 11149  0018BE  C00C  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
 11150  0018C2  EC9D  F016         	call	_leer_eeprom	;wreg free
 11151  0018C6  6EDF               	movwf	indf2,c
 11152  0018C8  4A0B               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
 11153  0018CA  2A0C               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
 11154  0018CC                     
 11155                           ;main.c: 269:         for (int j = 0; j < 7; j++) {
 11156  0018CC  0E00               	movlw	0
 11157  0018CE  6E0A               	movwf	(leeHorariosMemoria@j+1)^0,c
 11158  0018D0  0E00               	movlw	0
 11159  0018D2  6E09               	movwf	leeHorariosMemoria@j^0,c
 11160  0018D4                     l4435:
 11161                           
 11162                           ;main.c: 270:             horarios[i].dias[j] = leer_eeprom(contMemoria++);
 11163  0018D4  C00D  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
 11164  0018D8  C00E  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
 11165  0018DC  0E00               	movlw	0
 11166  0018DE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11167  0018E0  0E0C               	movlw	12
 11168  0018E2  6E03               	movwf	___wmul@multiplicand^0,c
 11169  0018E4  EC60  F017         	call	___wmul	;wreg free
 11170  0018E8  0EE0               	movlw	low _horarios
 11171  0018EA  6E07               	movwf	??_leeHorariosMemoria^0,c
 11172  0018EC  0E06               	movlw	high _horarios
 11173  0018EE  6E08               	movwf	(??_leeHorariosMemoria+1)^0,c
 11174  0018F0  0E01               	movlw	1
 11175  0018F2  2607               	addwf	??_leeHorariosMemoria^0,f,c
 11176  0018F4  0E00               	movlw	0
 11177  0018F6  2208               	addwfc	(??_leeHorariosMemoria+1)^0,f,c
 11178  0018F8  5001               	movf	?___wmul^0,w,c
 11179  0018FA  2607               	addwf	??_leeHorariosMemoria^0,f,c
 11180  0018FC  5002               	movf	(?___wmul+1)^0,w,c
 11181  0018FE  2208               	addwfc	(??_leeHorariosMemoria+1)^0,f,c
 11182  001900  5009               	movf	leeHorariosMemoria@j^0,w,c
 11183  001902  2407               	addwf	??_leeHorariosMemoria^0,w,c
 11184  001904  6ED9               	movwf	fsr2l,c
 11185  001906  500A               	movf	(leeHorariosMemoria@j+1)^0,w,c
 11186  001908  2008               	addwfc	(??_leeHorariosMemoria+1)^0,w,c
 11187  00190A  6EDA               	movwf	fsr2h,c
 11188  00190C  C00B  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
 11189  001910  C00C  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
 11190  001914  EC9D  F016         	call	_leer_eeprom	;wreg free
 11191  001918  6EDF               	movwf	indf2,c
 11192  00191A  4A0B               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
 11193  00191C  2A0C               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
 11194  00191E                     
 11195                           ;main.c: 271:         }
 11196  00191E  4A09               	infsnz	leeHorariosMemoria@j^0,f,c
 11197  001920  2A0A               	incf	(leeHorariosMemoria@j+1)^0,f,c
 11198  001922  BE0A               	btfsc	(leeHorariosMemoria@j+1)^0,7,c
 11199  001924  EF9D  F00C         	goto	u3491
 11200  001928  500A               	movf	(leeHorariosMemoria@j+1)^0,w,c
 11201  00192A  E109               	bnz	u3490
 11202  00192C  0E07               	movlw	7
 11203  00192E  5C09               	subwf	leeHorariosMemoria@j^0,w,c
 11204  001930  A0D8               	btfss	status,0,c
 11205  001932  EF9D  F00C         	goto	u3491
 11206  001936  EF9F  F00C         	goto	u3490
 11207  00193A                     u3491:
 11208  00193A  EF6A  F00C         	goto	l4435
 11209  00193E                     u3490:
 11210  00193E                     
 11211                           ;main.c: 273:         horarios[i].regar = leer_eeprom(contMemoria++);
 11212  00193E  C00D  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
 11213  001942  C00E  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
 11214  001946  0E00               	movlw	0
 11215  001948  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11216  00194A  0E0C               	movlw	12
 11217  00194C  6E03               	movwf	___wmul@multiplicand^0,c
 11218  00194E  EC60  F017         	call	___wmul	;wreg free
 11219  001952  0EE9               	movlw	low (_horarios+9)
 11220  001954  2401               	addwf	?___wmul^0,w,c
 11221  001956  6ED9               	movwf	fsr2l,c
 11222  001958  0E06               	movlw	high (_horarios+9)
 11223  00195A  2002               	addwfc	(?___wmul+1)^0,w,c
 11224  00195C  6EDA               	movwf	fsr2h,c
 11225  00195E  C00B  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
 11226  001962  C00C  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
 11227  001966  EC9D  F016         	call	_leer_eeprom	;wreg free
 11228  00196A  6EDF               	movwf	indf2,c
 11229  00196C  4A0B               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
 11230  00196E  2A0C               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
 11231  001970                     
 11232                           ;main.c: 274:         horarios[i].tiempoRegar = leer_eeprom(contMemoria++);
 11233  001970  C00D  F001         	movff	leeHorariosMemoria@i,___wmul@multiplier
 11234  001974  C00E  F002         	movff	leeHorariosMemoria@i+1,___wmul@multiplier+1
 11235  001978  0E00               	movlw	0
 11236  00197A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11237  00197C  0E0C               	movlw	12
 11238  00197E  6E03               	movwf	___wmul@multiplicand^0,c
 11239  001980  EC60  F017         	call	___wmul	;wreg free
 11240  001984  0EEB               	movlw	low (_horarios+11)
 11241  001986  2401               	addwf	?___wmul^0,w,c
 11242  001988  6ED9               	movwf	fsr2l,c
 11243  00198A  0E06               	movlw	high (_horarios+11)
 11244  00198C  2002               	addwfc	(?___wmul+1)^0,w,c
 11245  00198E  6EDA               	movwf	fsr2h,c
 11246  001990  C00B  F003         	movff	leeHorariosMemoria@contMemoria,leer_eeprom@direccion
 11247  001994  C00C  F004         	movff	leeHorariosMemoria@contMemoria+1,leer_eeprom@direccion+1
 11248  001998  EC9D  F016         	call	_leer_eeprom	;wreg free
 11249  00199C  6EDF               	movwf	indf2,c
 11250  00199E  4A0B               	infsnz	leeHorariosMemoria@contMemoria^0,f,c
 11251  0019A0  2A0C               	incf	(leeHorariosMemoria@contMemoria+1)^0,f,c
 11252                           
 11253                           ;main.c: 275:     }
 11254  0019A2  4A0D               	infsnz	leeHorariosMemoria@i^0,f,c
 11255  0019A4  2A0E               	incf	(leeHorariosMemoria@i+1)^0,f,c
 11256  0019A6  BE0E               	btfsc	(leeHorariosMemoria@i+1)^0,7,c
 11257  0019A8  EFDF  F00C         	goto	u3501
 11258  0019AC  500E               	movf	(leeHorariosMemoria@i+1)^0,w,c
 11259  0019AE  E109               	bnz	u3500
 11260  0019B0  0E18               	movlw	24
 11261  0019B2  5C0D               	subwf	leeHorariosMemoria@i^0,w,c
 11262  0019B4  A0D8               	btfss	status,0,c
 11263  0019B6  EFDF  F00C         	goto	u3501
 11264  0019BA  EFE1  F00C         	goto	u3500
 11265  0019BE                     u3501:
 11266  0019BE  EF4D  F00C         	goto	l4425
 11267  0019C2                     u3500:
 11268  0019C2  0012               	return		;funcret
 11269  0019C4                     __end_of_leeHorariosMemoria:
 11270                           	opt callstack 0
 11271                           
 11272 ;; *************** function _leer_eeprom *****************
 11273 ;; Defined at:
 11274 ;;		line 230 in file "main.c"
 11275 ;; Parameters:    Size  Location     Type
 11276 ;;  direccion       2    2[COMRAM] unsigned short 
 11277 ;; Auto vars:     Size  Location     Type
 11278 ;;  dato            1    5[COMRAM] unsigned char 
 11279 ;; Return value:  Size  Location     Type
 11280 ;;                  1    wreg      unsigned char 
 11281 ;; Registers used:
 11282 ;;		wreg, status,2, status,0, cstack
 11283 ;; Tracked objects:
 11284 ;;		On entry : 0/0
 11285 ;;		On exit  : 0/0
 11286 ;;		Unchanged: 0/0
 11287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11288 ;;      Params:         2       0       0       0       0       0       0       0       0
 11289 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11290 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11291 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11292 ;;Total ram usage:        4 bytes
 11293 ;; Hardware stack levels used:    1
 11294 ;; Hardware stack levels required when called:    3
 11295 ;; This function calls:
 11296 ;;		_i2c_detener
 11297 ;;		_i2c_envia_dato
 11298 ;;		_i2c_inicia_com
 11299 ;;		_i2c_recibe_dato
 11300 ;;		_i2c_reinicia_com
 11301 ;; This function is called by:
 11302 ;;		_leeHorariosMemoria
 11303 ;; This function uses a non-reentrant model
 11304 ;;
 11305                           
 11306                           	psect	text58
 11307  002D3A                     __ptext58:
 11308                           	opt callstack 0
 11309  002D3A                     _leer_eeprom:
 11310                           	opt callstack 26
 11311  002D3A                     
 11312                           ;main.c: 232:     unsigned char dato;;main.c: 234:     i2c_inicia_com();
 11313  002D3A  ECE7  F017         	call	_i2c_inicia_com	;wreg free
 11314                           
 11315                           ;main.c: 235:     i2c_envia_dato(0xAE);
 11316  002D3E  0EAE               	movlw	174
 11317  002D40  ECCD  F017         	call	_i2c_envia_dato
 11318                           
 11319                           ;main.c: 236:     i2c_envia_dato(direccion >> 8);
 11320  002D44  5004               	movf	(leer_eeprom@direccion+1)^0,w,c
 11321  002D46  ECCD  F017         	call	_i2c_envia_dato
 11322                           
 11323                           ;main.c: 237:     i2c_envia_dato(direccion);
 11324  002D4A  5003               	movf	leer_eeprom@direccion^0,w,c
 11325  002D4C  ECCD  F017         	call	_i2c_envia_dato
 11326                           
 11327                           ;main.c: 238:     i2c_reinicia_com();
 11328  002D50  ECE3  F017         	call	_i2c_reinicia_com	;wreg free
 11329                           
 11330                           ;main.c: 239:     i2c_envia_dato(0xAF);
 11331  002D54  0EAF               	movlw	175
 11332  002D56  ECCD  F017         	call	_i2c_envia_dato
 11333                           
 11334                           ;main.c: 240:     dato = i2c_recibe_dato();
 11335  002D5A  ECA2  F017         	call	_i2c_recibe_dato	;wreg free
 11336  002D5E  6E06               	movwf	leer_eeprom@dato^0,c
 11337                           
 11338                           ;main.c: 241:     i2c_detener();
 11339  002D60  ECEB  F017         	call	_i2c_detener	;wreg free
 11340  002D64                     
 11341                           ;main.c: 242:     _delay((unsigned long)((10)*(4000000/4000.0)));
 11342  002D64  0E0D               	movlw	13
 11343  002D66  6E05               	movwf	??_leer_eeprom^0,c
 11344  002D68  0EFC               	movlw	252
 11345  002D6A                     u3787:
 11346  002D6A  2EE8               	decfsz	wreg,f,c
 11347  002D6C  D7FE               	bra	u3787
 11348  002D6E  2E05               	decfsz	??_leer_eeprom^0,f,c
 11349  002D70  D7FC               	bra	u3787
 11350  002D72                     
 11351                           ;main.c: 244:     return dato;
 11352  002D72  5006               	movf	leer_eeprom@dato^0,w,c
 11353  002D74  0012               	return		;funcret
 11354  002D76                     __end_of_leer_eeprom:
 11355                           	opt callstack 0
 11356                           
 11357 ;; *************** function _i2c_reinicia_com *****************
 11358 ;; Defined at:
 11359 ;;		line 37 in file "./I2C.h"
 11360 ;; Parameters:    Size  Location     Type
 11361 ;;		None
 11362 ;; Auto vars:     Size  Location     Type
 11363 ;;		None
 11364 ;; Return value:  Size  Location     Type
 11365 ;;                  1    wreg      void 
 11366 ;; Registers used:
 11367 ;;		wreg, status,2, status,0, cstack
 11368 ;; Tracked objects:
 11369 ;;		On entry : 0/0
 11370 ;;		On exit  : 0/0
 11371 ;;		Unchanged: 0/0
 11372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11373 ;;      Params:         0       0       0       0       0       0       0       0       0
 11374 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11375 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11376 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11377 ;;Total ram usage:        0 bytes
 11378 ;; Hardware stack levels used:    1
 11379 ;; Hardware stack levels required when called:    2
 11380 ;; This function calls:
 11381 ;;		_i2c_espera
 11382 ;; This function is called by:
 11383 ;;		_leer_rtc
 11384 ;;		_leer_eeprom
 11385 ;; This function uses a non-reentrant model
 11386 ;;
 11387                           
 11388                           	psect	text59
 11389  002FC6                     __ptext59:
 11390                           	opt callstack 0
 11391  002FC6                     _i2c_reinicia_com:
 11392                           	opt callstack 25
 11393  002FC6                     
 11394                           ;./I2C.h: 38:     i2c_espera();
 11395  002FC6  EC4D  F017         	call	_i2c_espera	;wreg free
 11396  002FCA                     
 11397                           ;./I2C.h: 39:     SSPCON2bits.RSEN = 1;
 11398  002FCA  82C5               	bsf	197,1,c	;volatile
 11399  002FCC  0012               	return		;funcret
 11400  002FCE                     __end_of_i2c_reinicia_com:
 11401                           	opt callstack 0
 11402                           
 11403 ;; *************** function _i2c_recibe_dato *****************
 11404 ;; Defined at:
 11405 ;;		line 68 in file "./I2C.h"
 11406 ;; Parameters:    Size  Location     Type
 11407 ;;		None
 11408 ;; Auto vars:     Size  Location     Type
 11409 ;;  datoleido       1    1[COMRAM] unsigned char 
 11410 ;; Return value:  Size  Location     Type
 11411 ;;                  1    wreg      unsigned char 
 11412 ;; Registers used:
 11413 ;;		wreg, status,2, status,0, cstack
 11414 ;; Tracked objects:
 11415 ;;		On entry : 0/0
 11416 ;;		On exit  : 0/0
 11417 ;;		Unchanged: 0/0
 11418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11419 ;;      Params:         0       0       0       0       0       0       0       0       0
 11420 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11421 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11422 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11423 ;;Total ram usage:        1 bytes
 11424 ;; Hardware stack levels used:    1
 11425 ;; Hardware stack levels required when called:    2
 11426 ;; This function calls:
 11427 ;;		_i2c_espera
 11428 ;; This function is called by:
 11429 ;;		_leer_rtc
 11430 ;;		_leer_eeprom
 11431 ;; This function uses a non-reentrant model
 11432 ;;
 11433                           
 11434                           	psect	text60
 11435  002F44                     __ptext60:
 11436                           	opt callstack 0
 11437  002F44                     _i2c_recibe_dato:
 11438                           	opt callstack 25
 11439  002F44                     
 11440                           ;./I2C.h: 70:     unsigned char datoleido;;./I2C.h: 73:     i2c_espera();
 11441  002F44  EC4D  F017         	call	_i2c_espera	;wreg free
 11442  002F48                     
 11443                           ;./I2C.h: 74:     SSPCON2bits.RCEN = 1;
 11444  002F48  86C5               	bsf	197,3,c	;volatile
 11445                           
 11446                           ;./I2C.h: 76:     i2c_espera();
 11447  002F4A  EC4D  F017         	call	_i2c_espera	;wreg free
 11448  002F4E                     
 11449                           ;./I2C.h: 77:     datoleido = SSPBUF;
 11450  002F4E  CFC9 F002          	movff	4041,i2c_recibe_dato@datoleido	;volatile
 11451                           
 11452                           ;./I2C.h: 80:     i2c_espera();
 11453  002F52  EC4D  F017         	call	_i2c_espera	;wreg free
 11454  002F56                     
 11455                           ;./I2C.h: 82:     SSPCON2bits.ACKDT = 1;
 11456  002F56  8AC5               	bsf	197,5,c	;volatile
 11457  002F58                     
 11458                           ;./I2C.h: 87:     SSPCON2bits.ACKEN = 1;
 11459  002F58  88C5               	bsf	197,4,c	;volatile
 11460  002F5A                     
 11461                           ;./I2C.h: 91:     return datoleido;
 11462  002F5A  5002               	movf	i2c_recibe_dato@datoleido^0,w,c
 11463  002F5C  0012               	return		;funcret
 11464  002F5E                     __end_of_i2c_recibe_dato:
 11465                           	opt callstack 0
 11466                           
 11467 ;; *************** function _i2c_inicia_com *****************
 11468 ;; Defined at:
 11469 ;;		line 28 in file "./I2C.h"
 11470 ;; Parameters:    Size  Location     Type
 11471 ;;		None
 11472 ;; Auto vars:     Size  Location     Type
 11473 ;;		None
 11474 ;; Return value:  Size  Location     Type
 11475 ;;                  1    wreg      void 
 11476 ;; Registers used:
 11477 ;;		wreg, status,2, status,0, cstack
 11478 ;; Tracked objects:
 11479 ;;		On entry : 0/0
 11480 ;;		On exit  : 0/0
 11481 ;;		Unchanged: 0/0
 11482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11483 ;;      Params:         0       0       0       0       0       0       0       0       0
 11484 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11485 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11486 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11487 ;;Total ram usage:        0 bytes
 11488 ;; Hardware stack levels used:    1
 11489 ;; Hardware stack levels required when called:    2
 11490 ;; This function calls:
 11491 ;;		_i2c_espera
 11492 ;; This function is called by:
 11493 ;;		_escribe_rtc
 11494 ;;		_leer_rtc
 11495 ;;		_escribe_eeprom
 11496 ;;		_leer_eeprom
 11497 ;; This function uses a non-reentrant model
 11498 ;;
 11499                           
 11500                           	psect	text61
 11501  002FCE                     __ptext61:
 11502                           	opt callstack 0
 11503  002FCE                     _i2c_inicia_com:
 11504                           	opt callstack 25
 11505  002FCE                     
 11506                           ;./I2C.h: 29:     i2c_espera();
 11507  002FCE  EC4D  F017         	call	_i2c_espera	;wreg free
 11508  002FD2                     
 11509                           ;./I2C.h: 30:     SSPCON2bits.SEN = 1;
 11510  002FD2  80C5               	bsf	197,0,c	;volatile
 11511  002FD4  0012               	return		;funcret
 11512  002FD6                     __end_of_i2c_inicia_com:
 11513                           	opt callstack 0
 11514                           
 11515 ;; *************** function _i2c_envia_dato *****************
 11516 ;; Defined at:
 11517 ;;		line 57 in file "./I2C.h"
 11518 ;; Parameters:    Size  Location     Type
 11519 ;;  dato            1    wreg     unsigned char 
 11520 ;; Auto vars:     Size  Location     Type
 11521 ;;  dato            1    1[COMRAM] unsigned char 
 11522 ;; Return value:  Size  Location     Type
 11523 ;;                  1    wreg      unsigned char 
 11524 ;; Registers used:
 11525 ;;		wreg, status,2, status,0, cstack
 11526 ;; Tracked objects:
 11527 ;;		On entry : 0/0
 11528 ;;		On exit  : 0/0
 11529 ;;		Unchanged: 0/0
 11530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11531 ;;      Params:         0       0       0       0       0       0       0       0       0
 11532 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11533 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11534 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11535 ;;Total ram usage:        1 bytes
 11536 ;; Hardware stack levels used:    1
 11537 ;; Hardware stack levels required when called:    2
 11538 ;; This function calls:
 11539 ;;		_i2c_espera
 11540 ;; This function is called by:
 11541 ;;		_escribe_rtc
 11542 ;;		_leer_rtc
 11543 ;;		_escribe_eeprom
 11544 ;;		_leer_eeprom
 11545 ;; This function uses a non-reentrant model
 11546 ;;
 11547                           
 11548                           	psect	text62
 11549  002F9A                     __ptext62:
 11550                           	opt callstack 0
 11551  002F9A                     _i2c_envia_dato:
 11552                           	opt callstack 25
 11553                           
 11554                           ;incstack = 0
 11555                           ;i2c_envia_dato@dato stored from wreg
 11556  002F9A  6E02               	movwf	i2c_envia_dato@dato^0,c
 11557  002F9C                     
 11558                           ;./I2C.h: 58:     i2c_espera();
 11559  002F9C  EC4D  F017         	call	_i2c_espera	;wreg free
 11560  002FA0                     
 11561                           ;./I2C.h: 59:     SSPBUF = dato;
 11562  002FA0  C002  FFC9         	movff	i2c_envia_dato@dato,4041	;volatile
 11563  002FA4  0012               	return		;funcret
 11564  002FA6                     __end_of_i2c_envia_dato:
 11565                           	opt callstack 0
 11566                           
 11567 ;; *************** function _i2c_detener *****************
 11568 ;; Defined at:
 11569 ;;		line 46 in file "./I2C.h"
 11570 ;; Parameters:    Size  Location     Type
 11571 ;;		None
 11572 ;; Auto vars:     Size  Location     Type
 11573 ;;		None
 11574 ;; Return value:  Size  Location     Type
 11575 ;;                  1    wreg      void 
 11576 ;; Registers used:
 11577 ;;		wreg, status,2, status,0, cstack
 11578 ;; Tracked objects:
 11579 ;;		On entry : 0/0
 11580 ;;		On exit  : 0/0
 11581 ;;		Unchanged: 0/0
 11582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11583 ;;      Params:         0       0       0       0       0       0       0       0       0
 11584 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11585 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11586 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11587 ;;Total ram usage:        0 bytes
 11588 ;; Hardware stack levels used:    1
 11589 ;; Hardware stack levels required when called:    2
 11590 ;; This function calls:
 11591 ;;		_i2c_espera
 11592 ;; This function is called by:
 11593 ;;		_escribe_rtc
 11594 ;;		_leer_rtc
 11595 ;;		_escribe_eeprom
 11596 ;;		_leer_eeprom
 11597 ;; This function uses a non-reentrant model
 11598 ;;
 11599                           
 11600                           	psect	text63
 11601  002FD6                     __ptext63:
 11602                           	opt callstack 0
 11603  002FD6                     _i2c_detener:
 11604                           	opt callstack 25
 11605  002FD6                     
 11606                           ;./I2C.h: 47:     i2c_espera();
 11607  002FD6  EC4D  F017         	call	_i2c_espera	;wreg free
 11608  002FDA                     
 11609                           ;./I2C.h: 48:     SSPCON2bits.PEN = 1;
 11610  002FDA  84C5               	bsf	197,2,c	;volatile
 11611  002FDC  0012               	return		;funcret
 11612  002FDE                     __end_of_i2c_detener:
 11613                           	opt callstack 0
 11614                           
 11615 ;; *************** function _i2c_espera *****************
 11616 ;; Defined at:
 11617 ;;		line 20 in file "./I2C.h"
 11618 ;; Parameters:    Size  Location     Type
 11619 ;;		None
 11620 ;; Auto vars:     Size  Location     Type
 11621 ;;		None
 11622 ;; Return value:  Size  Location     Type
 11623 ;;                  1    wreg      void 
 11624 ;; Registers used:
 11625 ;;		wreg, status,2, status,0
 11626 ;; Tracked objects:
 11627 ;;		On entry : 0/0
 11628 ;;		On exit  : 0/0
 11629 ;;		Unchanged: 0/0
 11630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11631 ;;      Params:         0       0       0       0       0       0       0       0       0
 11632 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11633 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11634 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11635 ;;Total ram usage:        1 bytes
 11636 ;; Hardware stack levels used:    1
 11637 ;; Hardware stack levels required when called:    1
 11638 ;; This function calls:
 11639 ;;		Nothing
 11640 ;; This function is called by:
 11641 ;;		_i2c_inicia_com
 11642 ;;		_i2c_reinicia_com
 11643 ;;		_i2c_detener
 11644 ;;		_i2c_envia_dato
 11645 ;;		_i2c_recibe_dato
 11646 ;; This function uses a non-reentrant model
 11647 ;;
 11648                           
 11649                           	psect	text64
 11650  002E9A                     __ptext64:
 11651                           	opt callstack 0
 11652  002E9A                     _i2c_espera:
 11653                           	opt callstack 25
 11654  002E9A                     l3391:
 11655  002E9A  CFC5 F001          	movff	4037,??_i2c_espera	;volatile
 11656  002E9E  0E1F               	movlw	31
 11657  002EA0  1601               	andwf	??_i2c_espera^0,f,c
 11658  002EA2  A4D8               	btfss	status,2,c
 11659  002EA4  EF56  F017         	goto	u2451
 11660  002EA8  EF58  F017         	goto	u2450
 11661  002EAC                     u2451:
 11662  002EAC  EF4D  F017         	goto	l3391
 11663  002EB0                     u2450:
 11664  002EB0  B4C7               	btfsc	199,2,c	;volatile
 11665  002EB2  EF5D  F017         	goto	u2461
 11666  002EB6  EF5F  F017         	goto	u2460
 11667  002EBA                     u2461:
 11668  002EBA  EF4D  F017         	goto	l3391
 11669  002EBE                     u2460:
 11670  002EBE  0012               	return		;funcret
 11671  002EC0                     __end_of_i2c_espera:
 11672                           	opt callstack 0
 11673                           
 11674 ;; *************** function _inicializarObjetos *****************
 11675 ;; Defined at:
 11676 ;;		line 158 in file "main.c"
 11677 ;; Parameters:    Size  Location     Type
 11678 ;;		None
 11679 ;; Auto vars:     Size  Location     Type
 11680 ;;  j               2    8[COMRAM] int 
 11681 ;;  i               2   10[COMRAM] int 
 11682 ;;  i               2   12[COMRAM] int 
 11683 ;; Return value:  Size  Location     Type
 11684 ;;                  1    wreg      void 
 11685 ;; Registers used:
 11686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11687 ;; Tracked objects:
 11688 ;;		On entry : 0/0
 11689 ;;		On exit  : 0/0
 11690 ;;		Unchanged: 0/0
 11691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11692 ;;      Params:         0       0       0       0       0       0       0       0       0
 11693 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11694 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11695 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11696 ;;Total ram usage:        8 bytes
 11697 ;; Hardware stack levels used:    1
 11698 ;; Hardware stack levels required when called:    2
 11699 ;; This function calls:
 11700 ;;		___wmul
 11701 ;; This function is called by:
 11702 ;;		_main
 11703 ;; This function uses a non-reentrant model
 11704 ;;
 11705                           
 11706                           	psect	text65
 11707  001330                     __ptext65:
 11708                           	opt callstack 0
 11709  001330                     _inicializarObjetos:
 11710                           	opt callstack 28
 11711  001330                     
 11712                           ;main.c: 160:     for (int i = 0; i < 24; i++) {
 11713  001330  0E00               	movlw	0
 11714  001332  6E0E               	movwf	(inicializarObjetos@i+1)^0,c
 11715  001334  0E00               	movlw	0
 11716  001336  6E0D               	movwf	inicializarObjetos@i^0,c
 11717  001338                     l4389:
 11718                           
 11719                           ;main.c: 161:         horarios[i].hora = i;
 11720  001338  C00D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
 11721  00133C  C00E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
 11722  001340  0E00               	movlw	0
 11723  001342  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11724  001344  0E0C               	movlw	12
 11725  001346  6E03               	movwf	___wmul@multiplicand^0,c
 11726  001348  EC60  F017         	call	___wmul	;wreg free
 11727  00134C  0EE0               	movlw	low _horarios
 11728  00134E  2401               	addwf	?___wmul^0,w,c
 11729  001350  6ED9               	movwf	fsr2l,c
 11730  001352  0E06               	movlw	high _horarios
 11731  001354  2002               	addwfc	(?___wmul+1)^0,w,c
 11732  001356  6EDA               	movwf	fsr2h,c
 11733  001358  C00D  FFDF         	movff	inicializarObjetos@i,indf2
 11734                           
 11735                           ;main.c: 162:         horarios[i].regar = 0;
 11736  00135C  C00D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
 11737  001360  C00E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
 11738  001364  0E00               	movlw	0
 11739  001366  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11740  001368  0E0C               	movlw	12
 11741  00136A  6E03               	movwf	___wmul@multiplicand^0,c
 11742  00136C  EC60  F017         	call	___wmul	;wreg free
 11743  001370  0EE9               	movlw	low (_horarios+9)
 11744  001372  2401               	addwf	?___wmul^0,w,c
 11745  001374  6ED9               	movwf	fsr2l,c
 11746  001376  0E06               	movlw	high (_horarios+9)
 11747  001378  2002               	addwfc	(?___wmul+1)^0,w,c
 11748  00137A  6EDA               	movwf	fsr2h,c
 11749  00137C  0E00               	movlw	0
 11750  00137E  6EDF               	movwf	indf2,c
 11751                           
 11752                           ;main.c: 163:         horarios[i].regado = 0;
 11753  001380  C00D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
 11754  001384  C00E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
 11755  001388  0E00               	movlw	0
 11756  00138A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11757  00138C  0E0C               	movlw	12
 11758  00138E  6E03               	movwf	___wmul@multiplicand^0,c
 11759  001390  EC60  F017         	call	___wmul	;wreg free
 11760  001394  0EEA               	movlw	low (_horarios+10)
 11761  001396  2401               	addwf	?___wmul^0,w,c
 11762  001398  6ED9               	movwf	fsr2l,c
 11763  00139A  0E06               	movlw	high (_horarios+10)
 11764  00139C  2002               	addwfc	(?___wmul+1)^0,w,c
 11765  00139E  6EDA               	movwf	fsr2h,c
 11766  0013A0  0E00               	movlw	0
 11767  0013A2  6EDF               	movwf	indf2,c
 11768                           
 11769                           ;main.c: 164:         horarios[i].tiempoRegar = 15;
 11770  0013A4  C00D  F001         	movff	inicializarObjetos@i,___wmul@multiplier
 11771  0013A8  C00E  F002         	movff	inicializarObjetos@i+1,___wmul@multiplier+1
 11772  0013AC  0E00               	movlw	0
 11773  0013AE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11774  0013B0  0E0C               	movlw	12
 11775  0013B2  6E03               	movwf	___wmul@multiplicand^0,c
 11776  0013B4  EC60  F017         	call	___wmul	;wreg free
 11777  0013B8  0EEB               	movlw	low (_horarios+11)
 11778  0013BA  2401               	addwf	?___wmul^0,w,c
 11779  0013BC  6ED9               	movwf	fsr2l,c
 11780  0013BE  0E06               	movlw	high (_horarios+11)
 11781  0013C0  2002               	addwfc	(?___wmul+1)^0,w,c
 11782  0013C2  6EDA               	movwf	fsr2h,c
 11783  0013C4  0E0F               	movlw	15
 11784  0013C6  6EDF               	movwf	indf2,c
 11785  0013C8                     
 11786                           ;main.c: 165:     }
 11787  0013C8  4A0D               	infsnz	inicializarObjetos@i^0,f,c
 11788  0013CA  2A0E               	incf	(inicializarObjetos@i+1)^0,f,c
 11789  0013CC  BE0E               	btfsc	(inicializarObjetos@i+1)^0,7,c
 11790  0013CE  EFF2  F009         	goto	u3461
 11791  0013D2  500E               	movf	(inicializarObjetos@i+1)^0,w,c
 11792  0013D4  E109               	bnz	u3460
 11793  0013D6  0E18               	movlw	24
 11794  0013D8  5C0D               	subwf	inicializarObjetos@i^0,w,c
 11795  0013DA  A0D8               	btfss	status,0,c
 11796  0013DC  EFF2  F009         	goto	u3461
 11797  0013E0  EFF4  F009         	goto	u3460
 11798  0013E4                     u3461:
 11799  0013E4  EF9C  F009         	goto	l4389
 11800  0013E8                     u3460:
 11801  0013E8                     
 11802                           ;main.c: 167:     for (int i = 0; i < 24; i++) {
 11803  0013E8  0E00               	movlw	0
 11804  0013EA  6E0C               	movwf	(inicializarObjetos@i_806+1)^0,c
 11805  0013EC  0E00               	movlw	0
 11806  0013EE  6E0B               	movwf	inicializarObjetos@i_806^0,c
 11807  0013F0                     l4401:
 11808                           
 11809                           ;main.c: 169:         for (int j = 0; j < 7; j++)
 11810  0013F0  0E00               	movlw	0
 11811  0013F2  6E0A               	movwf	(inicializarObjetos@j+1)^0,c
 11812  0013F4  0E00               	movlw	0
 11813  0013F6  6E09               	movwf	inicializarObjetos@j^0,c
 11814  0013F8                     l4407:
 11815                           
 11816                           ;main.c: 170:             horarios[i].dias[j] = 0;
 11817  0013F8  C00B  F001         	movff	inicializarObjetos@i_806,___wmul@multiplier
 11818  0013FC  C00C  F002         	movff	inicializarObjetos@i_806+1,___wmul@multiplier+1
 11819  001400  0E00               	movlw	0
 11820  001402  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11821  001404  0E0C               	movlw	12
 11822  001406  6E03               	movwf	___wmul@multiplicand^0,c
 11823  001408  EC60  F017         	call	___wmul	;wreg free
 11824  00140C  0EE0               	movlw	low _horarios
 11825  00140E  6E07               	movwf	??_inicializarObjetos^0,c
 11826  001410  0E06               	movlw	high _horarios
 11827  001412  6E08               	movwf	(??_inicializarObjetos+1)^0,c
 11828  001414  0E01               	movlw	1
 11829  001416  2607               	addwf	??_inicializarObjetos^0,f,c
 11830  001418  0E00               	movlw	0
 11831  00141A  2208               	addwfc	(??_inicializarObjetos+1)^0,f,c
 11832  00141C  5001               	movf	?___wmul^0,w,c
 11833  00141E  2607               	addwf	??_inicializarObjetos^0,f,c
 11834  001420  5002               	movf	(?___wmul+1)^0,w,c
 11835  001422  2208               	addwfc	(??_inicializarObjetos+1)^0,f,c
 11836  001424  5009               	movf	inicializarObjetos@j^0,w,c
 11837  001426  2407               	addwf	??_inicializarObjetos^0,w,c
 11838  001428  6ED9               	movwf	fsr2l,c
 11839  00142A  500A               	movf	(inicializarObjetos@j+1)^0,w,c
 11840  00142C  2008               	addwfc	(??_inicializarObjetos+1)^0,w,c
 11841  00142E  6EDA               	movwf	fsr2h,c
 11842  001430  0E00               	movlw	0
 11843  001432  6EDF               	movwf	indf2,c
 11844  001434  4A09               	infsnz	inicializarObjetos@j^0,f,c
 11845  001436  2A0A               	incf	(inicializarObjetos@j+1)^0,f,c
 11846  001438  BE0A               	btfsc	(inicializarObjetos@j+1)^0,7,c
 11847  00143A  EF28  F00A         	goto	u3471
 11848  00143E  500A               	movf	(inicializarObjetos@j+1)^0,w,c
 11849  001440  E109               	bnz	u3470
 11850  001442  0E07               	movlw	7
 11851  001444  5C09               	subwf	inicializarObjetos@j^0,w,c
 11852  001446  A0D8               	btfss	status,0,c
 11853  001448  EF28  F00A         	goto	u3471
 11854  00144C  EF2A  F00A         	goto	u3470
 11855  001450                     u3471:
 11856  001450  EFFC  F009         	goto	l4407
 11857  001454                     u3470:
 11858  001454                     
 11859                           ;main.c: 172:         horarios[i].dias[7] = '\0';
 11860  001454  C00B  F001         	movff	inicializarObjetos@i_806,___wmul@multiplier
 11861  001458  C00C  F002         	movff	inicializarObjetos@i_806+1,___wmul@multiplier+1
 11862  00145C  0E00               	movlw	0
 11863  00145E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11864  001460  0E0C               	movlw	12
 11865  001462  6E03               	movwf	___wmul@multiplicand^0,c
 11866  001464  EC60  F017         	call	___wmul	;wreg free
 11867  001468  0EE8               	movlw	low (_horarios+8)
 11868  00146A  2401               	addwf	?___wmul^0,w,c
 11869  00146C  6ED9               	movwf	fsr2l,c
 11870  00146E  0E06               	movlw	high (_horarios+8)
 11871  001470  2002               	addwfc	(?___wmul+1)^0,w,c
 11872  001472  6EDA               	movwf	fsr2h,c
 11873  001474  0E00               	movlw	0
 11874  001476  6EDF               	movwf	indf2,c
 11875  001478                     
 11876                           ;main.c: 173:     }
 11877  001478  4A0B               	infsnz	inicializarObjetos@i_806^0,f,c
 11878  00147A  2A0C               	incf	(inicializarObjetos@i_806+1)^0,f,c
 11879  00147C  BE0C               	btfsc	(inicializarObjetos@i_806+1)^0,7,c
 11880  00147E  EF4A  F00A         	goto	u3481
 11881  001482  500C               	movf	(inicializarObjetos@i_806+1)^0,w,c
 11882  001484  E109               	bnz	u3480
 11883  001486  0E18               	movlw	24
 11884  001488  5C0B               	subwf	inicializarObjetos@i_806^0,w,c
 11885  00148A  A0D8               	btfss	status,0,c
 11886  00148C  EF4A  F00A         	goto	u3481
 11887  001490  EF4C  F00A         	goto	u3480
 11888  001494                     u3481:
 11889  001494  EFF8  F009         	goto	l4401
 11890  001498                     u3480:
 11891  001498  0012               	return		;funcret
 11892  00149A                     __end_of_inicializarObjetos:
 11893                           	opt callstack 0
 11894                           
 11895 ;; *************** function ___wmul *****************
 11896 ;; Defined at:
 11897 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 11898 ;; Parameters:    Size  Location     Type
 11899 ;;  multiplier      2    0[COMRAM] unsigned int 
 11900 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11901 ;; Auto vars:     Size  Location     Type
 11902 ;;  product         2    4[COMRAM] unsigned int 
 11903 ;; Return value:  Size  Location     Type
 11904 ;;                  2    0[COMRAM] unsigned int 
 11905 ;; Registers used:
 11906 ;;		wreg, status,2, status,0, prodl, prodh
 11907 ;; Tracked objects:
 11908 ;;		On entry : 0/0
 11909 ;;		On exit  : 0/0
 11910 ;;		Unchanged: 0/0
 11911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11912 ;;      Params:         4       0       0       0       0       0       0       0       0
 11913 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11914 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11915 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11916 ;;Total ram usage:        6 bytes
 11917 ;; Hardware stack levels used:    1
 11918 ;; Hardware stack levels required when called:    1
 11919 ;; This function calls:
 11920 ;;		Nothing
 11921 ;; This function is called by:
 11922 ;;		_inicializarObjetos
 11923 ;;		_escribeHorariosMemoria
 11924 ;;		_leeHorariosMemoria
 11925 ;;		_dameDatosSistema
 11926 ;;		_atoi
 11927 ;; This function uses a non-reentrant model
 11928 ;;
 11929                           
 11930                           	psect	text66
 11931  002EC0                     __ptext66:
 11932                           	opt callstack 0
 11933  002EC0                     ___wmul:
 11934                           	opt callstack 23
 11935  002EC0  5001               	movf	___wmul@multiplier^0,w,c
 11936  002EC2  0203               	mulwf	___wmul@multiplicand^0,c
 11937  002EC4  CFF3 F005          	movff	prodl,___wmul@product
 11938  002EC8  CFF4 F006          	movff	prodh,___wmul@product+1
 11939  002ECC  5001               	movf	___wmul@multiplier^0,w,c
 11940  002ECE  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11941  002ED0  50F3               	movf	243,w,c
 11942  002ED2  2606               	addwf	(___wmul@product+1)^0,f,c
 11943  002ED4  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11944  002ED6  0203               	mulwf	___wmul@multiplicand^0,c
 11945  002ED8  50F3               	movf	243,w,c
 11946  002EDA  2606               	addwf	(___wmul@product+1)^0,f,c
 11947  002EDC  C005  F001         	movff	___wmul@product,?___wmul
 11948  002EE0  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11949  002EE4  0012               	return		;funcret
 11950  002EE6                     __end_of___wmul:
 11951                           	opt callstack 0
 11952                           
 11953 ;; *************** function _i2c_iniciar *****************
 11954 ;; Defined at:
 11955 ;;		line 4 in file "./I2C.h"
 11956 ;; Parameters:    Size  Location     Type
 11957 ;;		None
 11958 ;; Auto vars:     Size  Location     Type
 11959 ;;		None
 11960 ;; Return value:  Size  Location     Type
 11961 ;;                  1    wreg      void 
 11962 ;; Registers used:
 11963 ;;		wreg, status,2
 11964 ;; Tracked objects:
 11965 ;;		On entry : 0/0
 11966 ;;		On exit  : 0/0
 11967 ;;		Unchanged: 0/0
 11968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11969 ;;      Params:         0       0       0       0       0       0       0       0       0
 11970 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11971 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11972 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11973 ;;Total ram usage:        0 bytes
 11974 ;; Hardware stack levels used:    1
 11975 ;; Hardware stack levels required when called:    1
 11976 ;; This function calls:
 11977 ;;		Nothing
 11978 ;; This function is called by:
 11979 ;;		_main
 11980 ;; This function uses a non-reentrant model
 11981 ;;
 11982                           
 11983                           	psect	text67
 11984  002F74                     __ptext67:
 11985                           	opt callstack 0
 11986  002F74                     _i2c_iniciar:
 11987                           	opt callstack 29
 11988  002F74                     
 11989                           ;./I2C.h: 5:     TRISBbits.RB0 = 1;
 11990  002F74  8093               	bsf	147,0,c	;volatile
 11991                           
 11992                           ;./I2C.h: 6:     TRISBbits.RB1 = 1;
 11993  002F76  8293               	bsf	147,1,c	;volatile
 11994  002F78                     
 11995                           ;./I2C.h: 7:     SSPSTAT = 0b10000000;
 11996  002F78  0E80               	movlw	128
 11997  002F7A  6EC7               	movwf	199,c	;volatile
 11998                           
 11999                           ;./I2C.h: 8:     SSPCON1 = 0b00101000;
 12000  002F7C  0E28               	movlw	40
 12001  002F7E  6EC6               	movwf	198,c	;volatile
 12002                           
 12003                           ;./I2C.h: 9:     SSPCON2 = 0b00000000;
 12004  002F80  0E00               	movlw	0
 12005  002F82  6EC5               	movwf	197,c	;volatile
 12006                           
 12007                           ;./I2C.h: 10:     SSPADD = 9;
 12008  002F84  0E09               	movlw	9
 12009  002F86  6EC8               	movwf	200,c	;volatile
 12010  002F88  0012               	return		;funcret
 12011  002F8A                     __end_of_i2c_iniciar:
 12012                           	opt callstack 0
 12013                           
 12014 ;; *************** function _configurarAdc *****************
 12015 ;; Defined at:
 12016 ;;		line 138 in file "main.c"
 12017 ;; Parameters:    Size  Location     Type
 12018 ;;		None
 12019 ;; Auto vars:     Size  Location     Type
 12020 ;;		None
 12021 ;; Return value:  Size  Location     Type
 12022 ;;                  1    wreg      void 
 12023 ;; Registers used:
 12024 ;;		wreg, status,2
 12025 ;; Tracked objects:
 12026 ;;		On entry : 0/0
 12027 ;;		On exit  : 0/0
 12028 ;;		Unchanged: 0/0
 12029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12030 ;;      Params:         0       0       0       0       0       0       0       0       0
 12031 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12032 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12033 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12034 ;;Total ram usage:        0 bytes
 12035 ;; Hardware stack levels used:    1
 12036 ;; Hardware stack levels required when called:    1
 12037 ;; This function calls:
 12038 ;;		Nothing
 12039 ;; This function is called by:
 12040 ;;		_main
 12041 ;; This function uses a non-reentrant model
 12042 ;;
 12043                           
 12044                           	psect	text68
 12045  002FBC                     __ptext68:
 12046                           	opt callstack 0
 12047  002FBC                     _configurarAdc:
 12048                           	opt callstack 29
 12049  002FBC                     
 12050                           ;main.c: 139:     ADCON1 = 0b00000000;
 12051  002FBC  0E00               	movlw	0
 12052  002FBE  6EC1               	movwf	193,c	;volatile
 12053                           
 12054                           ;main.c: 140:     ADCON2 = 0b10100101;
 12055  002FC0  0EA5               	movlw	165
 12056  002FC2  6EC0               	movwf	192,c	;volatile
 12057  002FC4  0012               	return		;funcret
 12058  002FC6                     __end_of_configurarAdc:
 12059                           	opt callstack 0
 12060                           
 12061 ;; *************** function _UART_init *****************
 12062 ;; Defined at:
 12063 ;;		line 12 in file "./UART.h"
 12064 ;; Parameters:    Size  Location     Type
 12065 ;;  BAUD            4   26[COMRAM] long 
 12066 ;; Auto vars:     Size  Location     Type
 12067 ;;  frecuenciaCr    4    0        long 
 12068 ;; Return value:  Size  Location     Type
 12069 ;;                  1    wreg      void 
 12070 ;; Registers used:
 12071 ;;		wreg, status,2, status,0, cstack
 12072 ;; Tracked objects:
 12073 ;;		On entry : 0/0
 12074 ;;		On exit  : 0/0
 12075 ;;		Unchanged: 0/0
 12076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12077 ;;      Params:         4       0       0       0       0       0       0       0       0
 12078 ;;      Locals:         8       0       0       0       0       0       0       0       0
 12079 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12080 ;;      Totals:        12       0       0       0       0       0       0       0       0
 12081 ;;Total ram usage:       12 bytes
 12082 ;; Hardware stack levels used:    1
 12083 ;; Hardware stack levels required when called:    2
 12084 ;; This function calls:
 12085 ;;		___aldiv
 12086 ;; This function is called by:
 12087 ;;		_main
 12088 ;; This function uses a non-reentrant model
 12089 ;;
 12090                           
 12091                           	psect	text69
 12092  00272E                     __ptext69:
 12093                           	opt callstack 0
 12094  00272E                     _UART_init:
 12095                           	opt callstack 28
 12096  00272E                     
 12097                           ;./UART.h: 14:     TRISCbits.TRISC6 = 0;
 12098  00272E  9C94               	bcf	148,6,c	;volatile
 12099  002730                     
 12100                           ;./UART.h: 15:     TRISCbits.TRISC7 = 1;
 12101  002730  8E94               	bsf	148,7,c	;volatile
 12102  002732                     
 12103                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 12104  002732  0E10               	movlw	16
 12105  002734  6E11               	movwf	___aldiv@divisor^0,c
 12106  002736  0E00               	movlw	0
 12107  002738  6E12               	movwf	(___aldiv@divisor+1)^0,c
 12108  00273A  0E00               	movlw	0
 12109  00273C  6E13               	movwf	(___aldiv@divisor+2)^0,c
 12110  00273E  0E00               	movlw	0
 12111  002740  6E14               	movwf	(___aldiv@divisor+3)^0,c
 12112  002742  0E00               	movlw	0
 12113  002744  6E0D               	movwf	___aldiv@dividend^0,c
 12114  002746  0E09               	movlw	9
 12115  002748  6E0E               	movwf	(___aldiv@dividend+1)^0,c
 12116  00274A  0E3D               	movlw	61
 12117  00274C  6E0F               	movwf	(___aldiv@dividend+2)^0,c
 12118  00274E  0E00               	movlw	0
 12119  002750  6E10               	movwf	(___aldiv@dividend+3)^0,c
 12120  002752  EC7D  F00D         	call	___aldiv	;wreg free
 12121  002756  C00D  F023         	movff	?___aldiv,_UART_init$1915
 12122  00275A  C00E  F024         	movff	?___aldiv+1,_UART_init$1915+1
 12123  00275E  C00F  F025         	movff	?___aldiv+2,_UART_init$1915+2
 12124  002762  C010  F026         	movff	?___aldiv+3,_UART_init$1915+3
 12125  002766                     
 12126                           ;./UART.h: 18:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 12127  002766  C023  F00D         	movff	_UART_init$1915,___aldiv@dividend
 12128  00276A  C024  F00E         	movff	_UART_init$1915+1,___aldiv@dividend+1
 12129  00276E  C025  F00F         	movff	_UART_init$1915+2,___aldiv@dividend+2
 12130  002772  C026  F010         	movff	_UART_init$1915+3,___aldiv@dividend+3
 12131  002776  C01B  F011         	movff	UART_init@BAUD,___aldiv@divisor
 12132  00277A  C01C  F012         	movff	UART_init@BAUD+1,___aldiv@divisor+1
 12133  00277E  C01D  F013         	movff	UART_init@BAUD+2,___aldiv@divisor+2
 12134  002782  C01E  F014         	movff	UART_init@BAUD+3,___aldiv@divisor+3
 12135  002786  EC7D  F00D         	call	___aldiv	;wreg free
 12136  00278A  040D               	decf	?___aldiv^0,w,c
 12137  00278C  6EAF               	movwf	175,c	;volatile
 12138  00278E                     
 12139                           ;./UART.h: 21:     TXSTAbits.BRGH = 1;
 12140  00278E  84AC               	bsf	172,2,c	;volatile
 12141  002790                     
 12142                           ;./UART.h: 22:     TXSTAbits.SYNC = 0;
 12143  002790  98AC               	bcf	172,4,c	;volatile
 12144  002792                     
 12145                           ;./UART.h: 23:     RCSTAbits.SPEN = 1;
 12146  002792  8EAB               	bsf	171,7,c	;volatile
 12147  002794                     
 12148                           ;./UART.h: 26:     TXSTAbits.TX9 = 0;
 12149  002794  9CAC               	bcf	172,6,c	;volatile
 12150  002796                     
 12151                           ;./UART.h: 27:     TXSTAbits.TXEN = 1;
 12152  002796  8AAC               	bsf	172,5,c	;volatile
 12153  002798                     
 12154                           ;./UART.h: 30:     RCSTAbits.RC9 = 0;
 12155  002798  9CAB               	bcf	171,6,c	;volatile
 12156  00279A                     
 12157                           ;./UART.h: 31:     RCSTAbits.CREN = 1;
 12158  00279A  88AB               	bsf	171,4,c	;volatile
 12159  00279C  0012               	return		;funcret
 12160  00279E                     __end_of_UART_init:
 12161                           	opt callstack 0
 12162                           
 12163 ;; *************** function ___aldiv *****************
 12164 ;; Defined at:
 12165 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 12166 ;; Parameters:    Size  Location     Type
 12167 ;;  dividend        4   12[COMRAM] long 
 12168 ;;  divisor         4   16[COMRAM] long 
 12169 ;; Auto vars:     Size  Location     Type
 12170 ;;  quotient        4   22[COMRAM] long 
 12171 ;;  sign            1   21[COMRAM] unsigned char 
 12172 ;;  counter         1   20[COMRAM] unsigned char 
 12173 ;; Return value:  Size  Location     Type
 12174 ;;                  4   12[COMRAM] long 
 12175 ;; Registers used:
 12176 ;;		wreg, status,2, status,0
 12177 ;; Tracked objects:
 12178 ;;		On entry : 0/0
 12179 ;;		On exit  : 0/0
 12180 ;;		Unchanged: 0/0
 12181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12182 ;;      Params:         8       0       0       0       0       0       0       0       0
 12183 ;;      Locals:         6       0       0       0       0       0       0       0       0
 12184 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12185 ;;      Totals:        14       0       0       0       0       0       0       0       0
 12186 ;;Total ram usage:       14 bytes
 12187 ;; Hardware stack levels used:    1
 12188 ;; Hardware stack levels required when called:    1
 12189 ;; This function calls:
 12190 ;;		Nothing
 12191 ;; This function is called by:
 12192 ;;		_UART_init
 12193 ;;		_map
 12194 ;; This function uses a non-reentrant model
 12195 ;;
 12196                           
 12197                           	psect	text70
 12198  001AFA                     __ptext70:
 12199                           	opt callstack 0
 12200  001AFA                     ___aldiv:
 12201                           	opt callstack 26
 12202  001AFA  0E00               	movlw	0
 12203  001AFC  6E16               	movwf	___aldiv@sign^0,c
 12204  001AFE  BE14               	btfsc	(___aldiv@divisor+3)^0,7,c
 12205  001B00  EF86  F00D         	goto	u2740
 12206  001B04  EF84  F00D         	goto	u2741
 12207  001B08                     u2741:
 12208  001B08  EF90  F00D         	goto	l3585
 12209  001B0C                     u2740:
 12210  001B0C  1E14               	comf	(___aldiv@divisor+3)^0,f,c
 12211  001B0E  1E13               	comf	(___aldiv@divisor+2)^0,f,c
 12212  001B10  1E12               	comf	(___aldiv@divisor+1)^0,f,c
 12213  001B12  6C11               	negf	___aldiv@divisor^0,c
 12214  001B14  0E00               	movlw	0
 12215  001B16  2212               	addwfc	(___aldiv@divisor+1)^0,f,c
 12216  001B18  2213               	addwfc	(___aldiv@divisor+2)^0,f,c
 12217  001B1A  2214               	addwfc	(___aldiv@divisor+3)^0,f,c
 12218  001B1C  0E01               	movlw	1
 12219  001B1E  6E16               	movwf	___aldiv@sign^0,c
 12220  001B20                     l3585:
 12221  001B20  BE10               	btfsc	(___aldiv@dividend+3)^0,7,c
 12222  001B22  EF97  F00D         	goto	u2750
 12223  001B26  EF95  F00D         	goto	u2751
 12224  001B2A                     u2751:
 12225  001B2A  EFA1  F00D         	goto	l3591
 12226  001B2E                     u2750:
 12227  001B2E  1E10               	comf	(___aldiv@dividend+3)^0,f,c
 12228  001B30  1E0F               	comf	(___aldiv@dividend+2)^0,f,c
 12229  001B32  1E0E               	comf	(___aldiv@dividend+1)^0,f,c
 12230  001B34  6C0D               	negf	___aldiv@dividend^0,c
 12231  001B36  0E00               	movlw	0
 12232  001B38  220E               	addwfc	(___aldiv@dividend+1)^0,f,c
 12233  001B3A  220F               	addwfc	(___aldiv@dividend+2)^0,f,c
 12234  001B3C  2210               	addwfc	(___aldiv@dividend+3)^0,f,c
 12235  001B3E  0E01               	movlw	1
 12236  001B40  1A16               	xorwf	___aldiv@sign^0,f,c
 12237  001B42                     l3591:
 12238  001B42  0E00               	movlw	0
 12239  001B44  6E17               	movwf	___aldiv@quotient^0,c
 12240  001B46  0E00               	movlw	0
 12241  001B48  6E18               	movwf	(___aldiv@quotient+1)^0,c
 12242  001B4A  0E00               	movlw	0
 12243  001B4C  6E19               	movwf	(___aldiv@quotient+2)^0,c
 12244  001B4E  0E00               	movlw	0
 12245  001B50  6E1A               	movwf	(___aldiv@quotient+3)^0,c
 12246  001B52  5011               	movf	___aldiv@divisor^0,w,c
 12247  001B54  1012               	iorwf	(___aldiv@divisor+1)^0,w,c
 12248  001B56  1013               	iorwf	(___aldiv@divisor+2)^0,w,c
 12249  001B58  1014               	iorwf	(___aldiv@divisor+3)^0,w,c
 12250  001B5A  B4D8               	btfsc	status,2,c
 12251  001B5C  EFB2  F00D         	goto	u2761
 12252  001B60  EFB4  F00D         	goto	u2760
 12253  001B64                     u2761:
 12254  001B64  EFEA  F00D         	goto	l3613
 12255  001B68                     u2760:
 12256  001B68  0E01               	movlw	1
 12257  001B6A  6E15               	movwf	___aldiv@counter^0,c
 12258  001B6C  EFBE  F00D         	goto	l3599
 12259  001B70                     l3597:
 12260  001B70  90D8               	bcf	status,0,c
 12261  001B72  3611               	rlcf	___aldiv@divisor^0,f,c
 12262  001B74  3612               	rlcf	(___aldiv@divisor+1)^0,f,c
 12263  001B76  3613               	rlcf	(___aldiv@divisor+2)^0,f,c
 12264  001B78  3614               	rlcf	(___aldiv@divisor+3)^0,f,c
 12265  001B7A  2A15               	incf	___aldiv@counter^0,f,c
 12266  001B7C                     l3599:
 12267  001B7C  AE14               	btfss	(___aldiv@divisor+3)^0,7,c
 12268  001B7E  EFC3  F00D         	goto	u2771
 12269  001B82  EFC5  F00D         	goto	u2770
 12270  001B86                     u2771:
 12271  001B86  EFB8  F00D         	goto	l3597
 12272  001B8A                     u2770:
 12273  001B8A                     l3601:
 12274  001B8A  90D8               	bcf	status,0,c
 12275  001B8C  3617               	rlcf	___aldiv@quotient^0,f,c
 12276  001B8E  3618               	rlcf	(___aldiv@quotient+1)^0,f,c
 12277  001B90  3619               	rlcf	(___aldiv@quotient+2)^0,f,c
 12278  001B92  361A               	rlcf	(___aldiv@quotient+3)^0,f,c
 12279  001B94  5011               	movf	___aldiv@divisor^0,w,c
 12280  001B96  5C0D               	subwf	___aldiv@dividend^0,w,c
 12281  001B98  5012               	movf	(___aldiv@divisor+1)^0,w,c
 12282  001B9A  580E               	subwfb	(___aldiv@dividend+1)^0,w,c
 12283  001B9C  5013               	movf	(___aldiv@divisor+2)^0,w,c
 12284  001B9E  580F               	subwfb	(___aldiv@dividend+2)^0,w,c
 12285  001BA0  5014               	movf	(___aldiv@divisor+3)^0,w,c
 12286  001BA2  5810               	subwfb	(___aldiv@dividend+3)^0,w,c
 12287  001BA4  A0D8               	btfss	status,0,c
 12288  001BA6  EFD7  F00D         	goto	u2781
 12289  001BAA  EFD9  F00D         	goto	u2780
 12290  001BAE                     u2781:
 12291  001BAE  EFE2  F00D         	goto	l3609
 12292  001BB2                     u2780:
 12293  001BB2  5011               	movf	___aldiv@divisor^0,w,c
 12294  001BB4  5E0D               	subwf	___aldiv@dividend^0,f,c
 12295  001BB6  5012               	movf	(___aldiv@divisor+1)^0,w,c
 12296  001BB8  5A0E               	subwfb	(___aldiv@dividend+1)^0,f,c
 12297  001BBA  5013               	movf	(___aldiv@divisor+2)^0,w,c
 12298  001BBC  5A0F               	subwfb	(___aldiv@dividend+2)^0,f,c
 12299  001BBE  5014               	movf	(___aldiv@divisor+3)^0,w,c
 12300  001BC0  5A10               	subwfb	(___aldiv@dividend+3)^0,f,c
 12301  001BC2  8017               	bsf	___aldiv@quotient^0,0,c
 12302  001BC4                     l3609:
 12303  001BC4  90D8               	bcf	status,0,c
 12304  001BC6  3214               	rrcf	(___aldiv@divisor+3)^0,f,c
 12305  001BC8  3213               	rrcf	(___aldiv@divisor+2)^0,f,c
 12306  001BCA  3212               	rrcf	(___aldiv@divisor+1)^0,f,c
 12307  001BCC  3211               	rrcf	___aldiv@divisor^0,f,c
 12308  001BCE  2E15               	decfsz	___aldiv@counter^0,f,c
 12309  001BD0  EFC5  F00D         	goto	l3601
 12310  001BD4                     l3613:
 12311  001BD4  5016               	movf	___aldiv@sign^0,w,c
 12312  001BD6  B4D8               	btfsc	status,2,c
 12313  001BD8  EFF0  F00D         	goto	u2791
 12314  001BDC  EFF2  F00D         	goto	u2790
 12315  001BE0                     u2791:
 12316  001BE0  EFFA  F00D         	goto	l3617
 12317  001BE4                     u2790:
 12318  001BE4  1E1A               	comf	(___aldiv@quotient+3)^0,f,c
 12319  001BE6  1E19               	comf	(___aldiv@quotient+2)^0,f,c
 12320  001BE8  1E18               	comf	(___aldiv@quotient+1)^0,f,c
 12321  001BEA  6C17               	negf	___aldiv@quotient^0,c
 12322  001BEC  0E00               	movlw	0
 12323  001BEE  2218               	addwfc	(___aldiv@quotient+1)^0,f,c
 12324  001BF0  2219               	addwfc	(___aldiv@quotient+2)^0,f,c
 12325  001BF2  221A               	addwfc	(___aldiv@quotient+3)^0,f,c
 12326  001BF4                     l3617:
 12327  001BF4  C017  F00D         	movff	___aldiv@quotient,?___aldiv
 12328  001BF8  C018  F00E         	movff	___aldiv@quotient+1,?___aldiv+1
 12329  001BFC  C019  F00F         	movff	___aldiv@quotient+2,?___aldiv+2
 12330  001C00  C01A  F010         	movff	___aldiv@quotient+3,?___aldiv+3
 12331  001C04  0012               	return		;funcret
 12332  001C06                     __end_of___aldiv:
 12333                           	opt callstack 0
 12334                           
 12335 ;; *************** function _desbordamiento *****************
 12336 ;; Defined at:
 12337 ;;		line 100 in file "main.c"
 12338 ;; Parameters:    Size  Location     Type
 12339 ;;		None
 12340 ;; Auto vars:     Size  Location     Type
 12341 ;;		None
 12342 ;; Return value:  Size  Location     Type
 12343 ;;                  1    wreg      void 
 12344 ;; Registers used:
 12345 ;;		wreg, status,2, status,0
 12346 ;; Tracked objects:
 12347 ;;		On entry : 0/0
 12348 ;;		On exit  : 0/0
 12349 ;;		Unchanged: 0/0
 12350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12351 ;;      Params:         0       0       0       0       0       0       0       0       0
 12352 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12353 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12354 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12355 ;;Total ram usage:        0 bytes
 12356 ;; Hardware stack levels used:    1
 12357 ;; This function calls:
 12358 ;;		Nothing
 12359 ;; This function is called by:
 12360 ;;		Interrupt level 2
 12361 ;; This function uses a non-reentrant model
 12362 ;;
 12363                           
 12364                           	psect	intcode
 12365  000008                     __pintcode:
 12366                           	opt callstack 0
 12367  000008                     _desbordamiento:
 12368                           	opt callstack 19
 12369                           
 12370                           ;incstack = 0
 12371  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12372  00000A  ED69  F014         	call	int_func,f	;refresh shadow registers
 12373                           
 12374                           	psect	intcode_body
 12375  0028D2                     __pintcode_body:
 12376                           	opt callstack 19
 12377  0028D2                     int_func:
 12378                           	opt callstack 19
 12379  0028D2  0006               	pop		; remove dummy address from shadow register refresh
 12380  0028D4                     
 12381                           ;main.c: 102:     if (INTCONbits.TMR0IF) {
 12382  0028D4  A4F2               	btfss	242,2,c	;volatile
 12383  0028D6  EF6F  F014         	goto	i2u363_41
 12384  0028DA  EF71  F014         	goto	i2u363_40
 12385  0028DE                     i2u363_41:
 12386  0028DE  EF8C  F014         	goto	i2l4555
 12387  0028E2                     i2u363_40:
 12388  0028E2                     
 12389                           ;main.c: 104:         if (esperandoDatos) {
 12390  0028E2  0100               	movlb	0	; () banked
 12391  0028E4  51FC               	movf	_esperandoDatos& (0+255),w,b
 12392  0028E6  B4D8               	btfsc	status,2,c
 12393  0028E8  EF78  F014         	goto	i2u364_41
 12394  0028EC  EF7A  F014         	goto	i2u364_40
 12395  0028F0                     i2u364_41:
 12396  0028F0  EF85  F014         	goto	i2l4551
 12397  0028F4                     i2u364_40:
 12398  0028F4                     
 12399                           ; BSR set to: 0
 12400                           ;main.c: 106:             tiempoInactividadTrans++;
 12401  0028F4  2BFF               	incf	_tiempoInactividadTrans& (0+255),f,b
 12402  0028F6                     
 12403                           ; BSR set to: 0
 12404                           ;main.c: 108:             if (tiempoInactividadTrans == 1)
 12405  0028F6  05FF               	decf	_tiempoInactividadTrans& (0+255),w,b
 12406  0028F8  A4D8               	btfss	status,2,c
 12407  0028FA  EF81  F014         	goto	i2u365_41
 12408  0028FE  EF83  F014         	goto	i2u365_40
 12409  002902                     i2u365_41:
 12410  002902  EF85  F014         	goto	i2l4551
 12411  002906                     i2u365_40:
 12412  002906                     
 12413                           ; BSR set to: 0
 12414                           ;main.c: 109:                 esperaDatoConcluida = 1;
 12415  002906  0E01               	movlw	1
 12416  002908  6FFD               	movwf	_esperaDatoConcluida& (0+255),b
 12417  00290A                     i2l4551:
 12418                           
 12419                           ; BSR set to: 0
 12420                           ;main.c: 114:         INTCONbits.TMR0IF = 0;
 12421  00290A  94F2               	bcf	242,2,c	;volatile
 12422  00290C                     
 12423                           ; BSR set to: 0
 12424                           ;main.c: 115:         TMR0 = VALOR_TIMER0;
 12425  00290C  C13D  FFD6         	movff	_VALOR_TIMER0,4054	;volatile
 12426  002910  C13E  FFD7         	movff	_VALOR_TIMER0+1,4055	;volatile
 12427                           
 12428                           ;main.c: 116:         overflowTimer = 1;
 12429  002914  0E01               	movlw	1
 12430  002916  6FF7               	movwf	_overflowTimer& (0+255),b
 12431  002918                     i2l4555:
 12432                           
 12433                           ;main.c: 120:     if (PIR1bits.RCIF) {
 12434  002918  AA9E               	btfss	158,5,c	;volatile
 12435  00291A  EF91  F014         	goto	i2u366_41
 12436  00291E  EF93  F014         	goto	i2u366_40
 12437  002922                     i2u366_41:
 12438  002922  EF98  F014         	goto	i2l209
 12439  002926                     i2u366_40:
 12440  002926                     
 12441                           ;main.c: 122:         byteUart = RCREG;
 12442  002926  CFAE F0FE          	movff	4014,_byteUart	;volatile
 12443  00292A                     
 12444                           ;main.c: 123:         datoRecibido = 1;
 12445  00292A  0E01               	movlw	1
 12446  00292C  0100               	movlb	0	; () banked
 12447  00292E  6FF8               	movwf	_datoRecibido& (0+255),b
 12448  002930                     i2l209:
 12449  002930  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12450  002932  0011               	retfie		f
 12451  002934                     __end_of_desbordamiento:
 12452                           	opt callstack 0
 12453                           
 12454                           	psect	rparam
 12455  0000                     
 12456                           	psect	temp
 12457  00005F                     btemp:
 12458                           	opt callstack 0
 12459  00005F                     	ds	1
 12460  0000                     int$flags	set	btemp
 12461  0000                     wtemp8	set	btemp+1
 12462  0000                     ttemp5	set	btemp+1
 12463  0000                     ttemp6	set	btemp+4
 12464  0000                     ttemp7	set	btemp+8
 12465                           tosu	equ	0xFFF
 12466                           tosh	equ	0xFFE
 12467                           tosl	equ	0xFFD
 12468                           stkptr	equ	0xFFC
 12469                           pclatu	equ	0xFFB
 12470                           pclath	equ	0xFFA
 12471                           pcl	equ	0xFF9
 12472                           tblptru	equ	0xFF8
 12473                           tblptrh	equ	0xFF7
 12474                           tblptrl	equ	0xFF6
 12475                           tablat	equ	0xFF5
 12476                           prodh	equ	0xFF4
 12477                           prodl	equ	0xFF3
 12478                           indf0	equ	0xFEF
 12479                           postinc0	equ	0xFEE
 12480                           postdec0	equ	0xFED
 12481                           preinc0	equ	0xFEC
 12482                           plusw0	equ	0xFEB
 12483                           fsr0h	equ	0xFEA
 12484                           fsr0l	equ	0xFE9
 12485                           wreg	equ	0xFE8
 12486                           indf1	equ	0xFE7
 12487                           postinc1	equ	0xFE6
 12488                           postdec1	equ	0xFE5
 12489                           preinc1	equ	0xFE4
 12490                           plusw1	equ	0xFE3
 12491                           fsr1h	equ	0xFE2
 12492                           fsr1l	equ	0xFE1
 12493                           bsr	equ	0xFE0
 12494                           indf2	equ	0xFDF
 12495                           postinc2	equ	0xFDE
 12496                           postdec2	equ	0xFDD
 12497                           preinc2	equ	0xFDC
 12498                           plusw2	equ	0xFDB
 12499                           fsr2h	equ	0xFDA
 12500                           fsr2l	equ	0xFD9
 12501                           status	equ	0xFD8


Data Sizes:
    Strings     1578
    Constant    0
    Data        11
    BSS         363
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    139     160
    BANK1           256      0      65
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), dameDatosSistema@diasRegar(BANK0[50]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), dameDatosSistema@diasRegar(BANK0[50]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 53
		 -> STR_42(CODE[29]), STR_41(CODE[32]), STR_40(CODE[45]), STR_39(CODE[45]), 
		 -> STR_38(CODE[29]), STR_37(CODE[32]), STR_34(CODE[53]), STR_19(CODE[51]), 
		 -> STR_12(CODE[9]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), lecturaWifi@buffer(BANK0[50]), 
		 -> asignarHorarios@buffer(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), lecturaWifi@buffer(BANK0[50]), 
		 -> asignarHorarios@buffer(BANK0[50]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1586_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), lecturaWifi@buffer(BANK0[50]), 
		 -> asignarHorarios@buffer(BANK0[50]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), dameDatosSistema@buffer(BANK0[50]), lecturaWifi@buffer(BANK0[50]), 
		 -> asignarHorarios@buffer(BANK0[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 53
		 -> STR_42(CODE[29]), STR_41(CODE[32]), STR_40(CODE[45]), STR_39(CODE[45]), 
		 -> STR_38(CODE[29]), STR_37(CODE[32]), STR_34(CODE[53]), STR_19(CODE[51]), 
		 -> STR_12(CODE[9]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 53
		 -> STR_42(CODE[29]), STR_41(CODE[32]), STR_40(CODE[45]), STR_39(CODE[45]), 
		 -> STR_38(CODE[29]), STR_37(CODE[32]), STR_34(CODE[53]), STR_19(CODE[51]), 
		 -> STR_12(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 53
		 -> STR_42(CODE[29]), STR_41(CODE[32]), STR_40(CODE[45]), STR_39(CODE[45]), 
		 -> STR_38(CODE[29]), STR_37(CODE[32]), STR_34(CODE[53]), STR_19(CODE[51]), 
		 -> STR_12(CODE[9]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), dameDatosSistema@diasRegar(BANK0[50]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), dameDatosSistema@diasRegar(BANK0[50]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dameDatosSistema@diasRegar(BANK0[50]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    dameTemperaturaHumedad@Temperatura	PTR unsigned char  size(2) Largest target is 1
		 -> mostrarDatosSensoresWIFI@temperatura(BANK0[1]), mostrarDatosSensores@temperatura(BANK0[1]), estaSeco@temperatura(COMRAM[1]), 

    dameTemperaturaHumedad@Humedad	PTR unsigned char  size(2) Largest target is 1
		 -> mostrarDatosSensoresWIFI@humedad(BANK0[1]), mostrarDatosSensores@humedad(BANK0[1]), NULL(NULL[0]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 72
		 -> STR_50(CODE[58]), STR_49(CODE[57]), STR_48(CODE[57]), STR_47(CODE[20]), 
		 -> STR_46(CODE[18]), STR_45(CODE[11]), STR_44(CODE[9]), STR_43(CODE[17]), 
		 -> mostrarDatosSensoresWIFI@buffer(BANK0[50]), mostrarDatosSensores@buffer(BANK0[50]), STR_36(CODE[21]), STR_35(CODE[25]), 
		 -> dameDatosSistema@buffer(BANK0[50]), STR_33(CODE[55]), STR_32(CODE[62]), STR_31(CODE[42]), 
		 -> STR_30(CODE[3]), STR_29(CODE[14]), STR_28(CODE[26]), STR_27(CODE[23]), 
		 -> STR_26(CODE[34]), STR_25(CODE[32]), STR_24(CODE[49]), STR_23(CODE[37]), 
		 -> STR_22(CODE[27]), STR_21(CODE[37]), STR_20(CODE[32]), lecturaWifi@buffer(BANK0[50]), 
		 -> STR_18(CODE[38]), STR_17(CODE[37]), STR_16(CODE[72]), STR_15(CODE[51]), 
		 -> STR_14(CODE[23]), STR_13(CODE[26]), asignarHorarios@buffer(BANK0[50]), STR_11(CODE[37]), 
		 -> STR_10(CODE[59]), STR_9(CODE[59]), STR_8(CODE[51]), STR_7(CODE[25]), 
		 -> STR_6(CODE[37]), STR_5(CODE[31]), STR_4(CODE[43]), STR_3(CODE[16]), 
		 -> STR_2(CODE[36]), STR_1(CODE[65]), 


Critical Paths under _main in COMRAM

    _encenderBombas->_estaSeco
    _estaSeco->_dameTemperaturaHumedad
    _dameHoraActual->_leer_rtc
    _dameDiaActual->_leer_rtc
    _leer_rtc->_i2c_envia_dato
    _leer_rtc->_i2c_recibe_dato
    _setTiempoRegar->_escribeHorariosMemoria
    _regadoRapido->_getValue
    _mostrarMenu->_UART_printf
    _restablecerDatosSensor->_constructorSensor
    _lecturaAnalogaSensores->_map
    _map->___aldiv
    _dameTemperaturaHumedad->_UART_printf
    _fijaHoraRtc->_setRtc
    _fijaDiaRtc->_setRtc
    _setRtc->_getValue
    _escribe_rtc->_i2c_envia_dato
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _getValue->_UART_printf
    _UART_printf->_UART_write
    _escribeHorariosMemoria->_escribe_eeprom
    _escribe_eeprom->___wmul
    _leeHorariosMemoria->___wmul
    _leeHorariosMemoria->_leer_eeprom
    _leer_eeprom->_i2c_envia_dato
    _leer_eeprom->_i2c_recibe_dato
    _i2c_reinicia_com->_i2c_espera
    _i2c_recibe_dato->_i2c_espera
    _i2c_inicia_com->_i2c_espera
    _i2c_envia_dato->_i2c_espera
    _i2c_detener->_i2c_espera
    _inicializarObjetos->___wmul
    _UART_init->___aldiv
    ___aldiv->___lmul

Critical Paths under _desbordamiento in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sistemaPrincipal
    _sistemaRegado->_lecturaWifi
    _sistemaPrincipal->_dameDatosSistema
    _mostrarDatosSensoresWIFI->_lecturaWifi
    _lecturaWifi->_sprintf
    _mostrarDatosSensores->_sprintf
    _dameDatosSistema->_sprintf
    _asignarHorarios->_sprintf

Critical Paths under _desbordamiento in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _desbordamiento in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _desbordamiento in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _desbordamiento in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _desbordamiento in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _desbordamiento in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _desbordamiento in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _desbordamiento in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  259100
                          _UART_init
                      _configurarAdc
                        _i2c_iniciar
                 _inicializarObjetos
                 _leeHorariosMemoria
                        _mostrarMenu
             _restablecerDatosSensor
                   _sistemaPrincipal
                      _sistemaRegado
 ---------------------------------------------------------------------------------
 (1) _sistemaRegado                                        0     0      0   41741
                      _dameDiaActual
                     _dameHoraActual
                     _encenderBombas
                          _horaRegar
             _lecturaAnalogaSensores
                        _lecturaWifi
                        _mostrarMenu
 ---------------------------------------------------------------------------------
 (2) _horaRegar                                            5     3      2      24
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _encenderBombas                                       5     5      0    5641
                                             19 COMRAM     5     5      0
                           _estaSeco
 ---------------------------------------------------------------------------------
 (3) _estaSeco                                             4     2      2    5366
                                             15 COMRAM     4     2      2
             _dameTemperaturaHumedad
 ---------------------------------------------------------------------------------
 (2) _dameHoraActual                                       0     0      0     181
                      _convertirDato
                           _leer_rtc
 ---------------------------------------------------------------------------------
 (2) _dameDiaActual                                        0     0      0     181
                      _convertirDato
                           _leer_rtc
 ---------------------------------------------------------------------------------
 (3) _leer_rtc                                             2     2      0      90
                                              2 COMRAM     2     2      0
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (3) _convertirDato                                        3     3      0      91
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _sistemaPrincipal                                     3     3      0  204414
                                            136 BANK0      3     3      0
                        _UART_printf
                    _asignarHorarios
                   _dameDatosSistema
                         _fijaDiaRtc
                        _fijaHoraRtc
               _mostrarDatosSensores
           _mostrarDatosSensoresWIFI
                        _mostrarMenu
                       _regadoRapido
                     _setTiempoRegar
 ---------------------------------------------------------------------------------
 (2) _setTiempoRegar                                       2     2      0   13412
                                             18 COMRAM     2     2      0
                        _UART_printf
             _escribeHorariosMemoria
                           _getValue
 ---------------------------------------------------------------------------------
 (2) _regadoRapido                                         4     4      0    9017
                                             14 COMRAM     4     4      0
                        _UART_printf
                           _getValue
 ---------------------------------------------------------------------------------
 (2) _mostrarMenu                                          0     0      0    3867
                        _UART_printf
 ---------------------------------------------------------------------------------
 (2) _mostrarDatosSensoresWIFI                            55    55      0   59459
                                             76 BANK0     55    55      0
                        _UART_printf
                         _UART_write
             _dameTemperaturaHumedad
                        _lecturaWifi
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lecturaWifi                                         54    54      0   30075
                                             22 BANK0     54    54      0
                        _UART_printf
                          _UART_read
                         _UART_write
                           _getValue
             _restablecerDatosSensor
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _restablecerDatosSensor                               2     2      0     387
                                              4 COMRAM     2     2      0
                  _constructorSensor
 ---------------------------------------------------------------------------------
 (4) _constructorSensor                                    4     0      4     297
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _mostrarDatosSensores                                55    55      0   31156
                                             22 BANK0     55    55      0
                        _UART_printf
                         _UART_write
             _dameTemperaturaHumedad
             _lecturaAnalogaSensores
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lecturaAnalogaSensores                               3     3      0    1772
                                             46 COMRAM     3     3      0
                   _dameHumedadSuelo
                                _map
 ---------------------------------------------------------------------------------
 (3) _map                                                 20     0     20    1660
                                             26 COMRAM    20     0     20
                            ___aldiv
                             ___lmul
                   _dameHumedadSuelo (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _dameHumedadSuelo                                     5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _dameTemperaturaHumedad                              12     8      4    4666
                                              3 COMRAM    12     8      4
                     _DHT11_ReadData
                        _DHT11_Start
                        _UART_printf
                     _check_response
 ---------------------------------------------------------------------------------
 (5) _check_response                                       1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _DHT11_ReadData                                       2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fijaHoraRtc                                          0     0      0   10857
                        _UART_printf
                        _escribe_rtc
                             _setRtc
 ---------------------------------------------------------------------------------
 (2) _fijaDiaRtc                                           0     0      0   10411
                        _UART_printf
                             _setRtc
 ---------------------------------------------------------------------------------
 (3) _setRtc                                               4     4      0    6544
                                             14 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
                        _escribe_rtc
                           _getValue
 ---------------------------------------------------------------------------------
 (4) _escribe_rtc                                          2     1      1     446
                                              2 COMRAM     2     1      1
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _dameDatosSistema                                   114   114      0   28240
                                             22 BANK0    114   114      0
                        _UART_printf
                         _UART_write
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _asignarHorarios                                     57    57      0   34106
                                             22 BANK0     57    57      0
                        _UART_printf
             _escribeHorariosMemoria
                           _getValue
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             22    10     12   20509
                                              0 BANK0     22    10     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   18936
                                             86 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           45    39      6   18568
                                             63 COMRAM    23    17      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5574
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 7     4      3    4145
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3925
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    4224
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _getValue                                            11     9      2    5059
                                              3 COMRAM    11     9      2
                        _UART_printf
                          _UART_read
                         _UART_write
 ---------------------------------------------------------------------------------
 (4) _UART_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART_printf                                          2     0      2    3867
                                              1 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (4) _UART_write                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _escribeHorariosMemoria                               8     8      0    4374
                                             10 COMRAM     8     8      0
                             ___wmul
                     _escribe_eeprom
 ---------------------------------------------------------------------------------
 (4) _escribe_eeprom                                       4     1      3     696
                                              6 COMRAM     4     1      3
                             ___wmul (ARG)
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (1) _leeHorariosMemoria                                   8     8      0    4094
                                              6 COMRAM     8     8      0
                             ___wmul
                        _leer_eeprom
 ---------------------------------------------------------------------------------
 (2) _leer_eeprom                                          4     2      2     416
                                              2 COMRAM     4     2      2
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (4) _i2c_reinicia_com                                     0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_recibe_dato                                      1     1      0      23
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_inicia_com                                       0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_envia_dato                                       1     1      0      22
                                              1 COMRAM     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_detener                                          0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (5) _i2c_espera                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _inicializarObjetos                                   8     8      0    3697
                                              6 COMRAM     8     8      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    3383
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _i2c_iniciar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4     900
                                             26 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     756
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _desbordamiento                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
       ___lmul (ARG)
   _configurarAdc
   _i2c_iniciar
   _inicializarObjetos
     ___wmul
   _leeHorariosMemoria
     ___wmul
     _leer_eeprom
       _i2c_detener
         _i2c_espera
       _i2c_envia_dato
         _i2c_espera
       _i2c_inicia_com
         _i2c_espera
       _i2c_recibe_dato
         _i2c_espera
       _i2c_reinicia_com
         _i2c_espera
   _mostrarMenu
     _UART_printf
       _UART_write
   _restablecerDatosSensor
     _constructorSensor
   _sistemaPrincipal
     _UART_printf
       _UART_write
     _asignarHorarios
       _UART_printf
         _UART_write
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
       _getValue
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _dameDatosSistema
       _UART_printf
         _UART_write
       _UART_write
       ___wmul
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _fijaDiaRtc
       _UART_printf
         _UART_write
       _setRtc
         ___awdiv
         ___awmod
         _escribe_rtc
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
         _getValue
           _UART_printf
             _UART_write
           _UART_read
           _UART_write
     _fijaHoraRtc
       _UART_printf
         _UART_write
       _escribe_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
       _setRtc
         ___awdiv
         ___awmod
         _escribe_rtc
           _i2c_detener
             _i2c_espera
           _i2c_envia_dato
             _i2c_espera
           _i2c_inicia_com
             _i2c_espera
         _getValue
           _UART_printf
             _UART_write
           _UART_read
           _UART_write
     _mostrarDatosSensores
       _UART_printf
         _UART_write
       _UART_write
       _dameTemperaturaHumedad
         _DHT11_ReadData
         _DHT11_Start
         _UART_printf
           _UART_write
         _check_response
       _lecturaAnalogaSensores
         _dameHumedadSuelo
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
           _dameHumedadSuelo (ARG)
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _mostrarDatosSensoresWIFI
       _UART_printf
         _UART_write
       _UART_write
       _dameTemperaturaHumedad
         _DHT11_ReadData
         _DHT11_Start
         _UART_printf
           _UART_write
         _check_response
       _lecturaWifi
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
         _getValue
           _UART_printf
             _UART_write
           _UART_read
           _UART_write
         _restablecerDatosSensor
           _constructorSensor
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
               _isdigit
               _stoa
                 _fputc
                   _putch
                 _strlen
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _mostrarMenu
       _UART_printf
         _UART_write
     _regadoRapido
       _UART_printf
         _UART_write
       _getValue
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
     _setTiempoRegar
       _UART_printf
         _UART_write
       _escribeHorariosMemoria
         ___wmul
         _escribe_eeprom
           ___wmul (ARG)
           _i2c_detener (ARG)
             _i2c_espera
           _i2c_envia_dato (ARG)
             _i2c_espera
           _i2c_inicia_com (ARG)
             _i2c_espera
       _getValue
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
   _sistemaRegado
     _dameDiaActual
       _convertirDato
       _leer_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _dameHoraActual
       _convertirDato
       _leer_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
         _i2c_recibe_dato
           _i2c_espera
         _i2c_reinicia_com
           _i2c_espera
     _encenderBombas
       _estaSeco
         _dameTemperaturaHumedad
           _DHT11_ReadData
           _DHT11_Start
           _UART_printf
             _UART_write
           _check_response
     _horaRegar
     _lecturaAnalogaSensores
       _dameHumedadSuelo
       _map
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _dameHumedadSuelo (ARG)
     _lecturaWifi
       _UART_printf
         _UART_write
       _UART_read
       _UART_write
       _getValue
         _UART_printf
           _UART_write
         _UART_read
         _UART_write
       _restablecerDatosSensor
         _constructorSensor
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _stoa
               _fputc
                 _putch
               _strlen
     _mostrarMenu
       _UART_printf
         _UART_write

 _desbordamiento (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     120      21       14.1%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      41       7       25.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8B      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13F      20        0.0%
DATA                 0      0     25F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Jun 17 01:05:54 2020

                 __size_of_escribe_eeprom 0030                                        l81 2F88  
                                      l90 2FD4                                        l93 2FCC  
                                      l87 2EBE                                        l96 2FDC  
                                      l99 2FA4                              ___awdiv@sign 0006  
                          ?_configurarAdc 0001                       ___wmul@multiplicand 0003  
                             __CFG_BORV$3 000000            __end_of_dameTemperaturaHumedad 22B0  
                            __CFG_CP0$OFF 000000                              __CFG_CP1$OFF 000000  
                            __CFG_CP2$OFF 000000                              __CFG_CP3$OFF 000000  
                 regadoRapido@tiempoRegar 0011                                       l102 2F5C  
                                     l111 2F04                                       l105 2F42  
                                     l124 279C                                       l132 2AF4  
                                     l212 26BC                                       l108 2E98  
                                     l133 2AF6                                       l150 299A  
                                     l127 2ABE                                       l311 1746  
                                     l303 286E                                       l215 2FBA  
                                     l223 2C74                                       l136 2F64  
                                     l240 2E6E                                       l145 2990  
                                     l161 2F24                                       l321 2C1C  
                                     l218 2FC4                                       l322 2C30  
                                     l139 2F72                                       l251 272C  
                                     l155 29CA                                       l243 2F98  
                                     l500 20B8                                       l316 24AA  
                                     l228 25C8                                       l237 1498  
                                     l421 0980                                       l341 240A  
                                     l405 1D02                                       l254 2E42  
                                     l158 29EC                                       l166 2CF8  
                                     l271 19C2                                       l431 0A2C  
                                     l503 20FA                                       l247 2E12  
                                     l319 2C0E                                       l327 2BEA  
                                     l264 1888                                       l512 2A48  
                                     l520 0456                                       l336 1DF2  
                                     l344 2642                                       l257 2D74  
                                     l441 0B20                                       l505 2136  
                                     l601 27F6                                       l602 2806  
                                     l451 1A46                                       l452 1A4C  
                                     l453 1A52                                       l518 044E  
                                     l454 1A58                                       l455 1A5E  
                                     l359 2070                                       l375 132E  
                                     l704 1038                                       l456 1A64  
                                     l561 11BE                                       l545 10BA  
                                     l457 1A6A                                       l449 1A40  
                                     l538 0690                                       l394 22AE  
                                     l298 08FC                                       l547 10C2  
                                     l387 0D20                                       l459 1AF8  
                                     l556 116C                                       l717 15FC  
                                     l557 11B6                                       l821 21FA  
                                     l590 2EE4                                       l399 1EE0  
                                     l576 03AC                                       l586 28C8  
                                     l834 235E                                       l587 28D0  
                                     l669 1C04                              __CFG_CPB$OFF 000000  
                            __CFG_CPD$OFF 000000                              __CFG_BOR$OFF 000000  
                                     _abs 2CFA                                       _pad 2072  
                                     _map 2644                              ___awmod@sign 0006  
                                     prod 000FF3                                       wreg 000FE8  
                __end_of_dameDatosSistema 0D22                              __CFG_LVP$OFF 000000  
                       ?_i2c_reinicia_com 0001                              ?_escribe_rtc 0003  
                            __CFG_WDT$OFF 000000                                      ?_abs 0013  
                                    l1302 2DAC                                      l1310 2B9A  
                                    l1340 2B48                                      l1325 1FAA  
                                    l1333 2CB8                                      l3101 2072  
                                    l1343 2FDE                                      l3111 20C4  
                                    l3103 2082                                      l3113 20D8  
                                    l3105 2096                                      l3201 1546  
                                    l1265 2D30                                      l4001 1D7A  
                                    l3131 2EC0                                      l3115 20DC  
                                    l3107 20A4                                      l3211 15BC  
                                    l3203 1574                                      l3123 2CFA  
                                    l4011 1DDC                                      l4003 1D8C  
                                    l1268 2D38                                      l3133 2EDC  
                                    l3221 2B62                                      l1349 2DE2  
                                    l3117 210A                                      l3109 20B0  
                                    l3141 0EC4                                      l3213 15DC  
                                    l3205 1594                                      l3125 2D14  
                                    l3301 0668                                      l4005 1DA6  
                                    l4013 1DEC                                      l4101 07E4  
                                    l3127 2D76                                      l3223 2B90  
                                    l3071 1EF4                                      l3119 211E  
                                    l3231 2A02                                      l3151 0F1A  
                                    l3143 0EE4                                      l3207 15A6  
                                    l3311 1066                                      l4023 2368  
                                    l4015 1DF0                                      l4007 1DBC  
                                    l4111 0820                                      l4031 2548  
                                    l1296 0EA8                                      l3225 2B94  
                                    l3217 2B4A                                      l3073 1F06  
                                    l3233 2A0E                                      l3161 0F6E  
                                    l3153 0F26                                      l3145 0EE8  
                                    l3137 0EB2                                      l3209 15AC  
                                    l3313 106E                                      l3305 103A  
                                    l3401 0044                                      l4025 23DA  
                                    l4017 2360                                      l4009 1DC0  
                                    l4201 247C                                      l4113 0850  
                                    l4105 07EA                                      l4121 08B2  
                                    l4041 25C2                                      l4033 254C  
                                    l3219 2B4E                                      l1299 0EB0  
                                    l3075 1F10                                      l3083 2C76  
                                    l3091 2DAE                                      l3235 2A1A  
                                    l3171 0FE2                                      l3163 0F80  
                                    l3155 0F44                                      l3147 0EF6  
                                    l3139 0EB6                                      l3251 0426  
                                    l3243 03AE                                      l3331 1128  
                                    l3323 10E6                                      l3315 1082  
                                    l3307 104C                                      l3411 00C2  
                                    l3403 0056                                      l4211 0B28  
                                    l4051 2DF0                                      l4027 23EA  
                                    l4203 2490                                      l4123 08B6  
                                    l4107 081A                                      l4035 256E  
                                    l3501 2934                                      l3077 1F2E  
                                    l3069 1EE2                                      l3085 2C82  
                                    l3093 2DBA                                      l3237 2A1E  
                                    l3229 29EE                                      l3165 0FAE  
                                    l3157 0F4C                                      l3173 0FE8  
                                    l3149 0F16                                      l3181 149A  
                                    l3261 047E                                      l3253 0428  
                                    l3245 03CE                                      l3341 1180  
                                    l3333 1146                                      l3325 10FA  
                                    l3317 108A                                      l3309 1054  
                                    l3421 0144                                      l3413 00D0  
                                    l3405 005A                                      l4221 0B4A  
                                    l4213 0B34                                      l4053 2E06  
                                    l4141 2842                                      l4029 23EE  
                                    l4301 1E5E                                      l4205 24A6  
                                    l4045 2E44                                      l4125 08D2  
                                    l4037 258E                                      l4055 2D3A  
                                    l3503 2938                                      l3351 0D3A  
                                    l3079 1F64                                      l3087 2C94  
                                    l3095 2DBE                                      l3239 2A24  
                                    l3175 0FF8                                      l3167 0FCE  
                                    l3159 0F60                                      l3191 14DE  
                                    l3183 149E                                      l3271 051E  
                                    l3263 0484                                      l3255 0442  
                                    l3247 03F6                                      l3343 1194  
                                    l3335 114A                                      l3327 10FE  
                                    l3319 1098                                      l3431 01C8  
                                    l3415 00F0                                      l3423 0156  
                                    l3407 007E                                      l4151 1626  
                                    l4231 0B9C                                      l4223 0B7A  
                                    l4215 0B40                                      l4143 2858  
                                    l4135 2808                                      l4311 1EAC  
                                    l4303 1E62                                      l4207 25CA  
                                    l4047 2F8A                                      l4127 08E2  
                                    l4071 06D2                                      l4119 0856  
                                    l4063 0692                                      l4039 25BE  
                                    l3601 1B8A                                      l4401 13F0  
                                    l4057 2D64                                      l3505 295C  
                                    l3353 0D3E                                      l3089 2C98  
                                    l3097 2DD6                                      l3177 1018  
                                    l3169 0FD0                                      l3193 14FE  
                                    l3185 14AC                                      l3281 05C6  
                                    l3273 0524                                      l3265 048C  
                                    l3257 045E                                      l3249 0416  
                                    l3345 1198                                      l3337 114E  
                                    l3329 111C                                      l3441 0290  
                                    l3433 01EC                                      l3425 017A  
                                    l3417 00FE                                      l3409 00B4  
                                    l4161 167E                                      l4153 1638  
                                    l4241 0C34                                      l4209 0B22  
                                    l4049 2DE4                                      l4145 2864  
                                    l4137 2820                                      l3521 29C4  
                                    l4313 1EB8                                      l4321 19D0  
                                    l4129 08E8                                      l4081 0712  
                                    l4073 06D4                                      l3611 1BCE  
                                    l3603 1B94                                      l4411 1438  
                                    l4059 2D72                                      l3507 2960  
                                    l3371 0DF4                                      l3363 0D9A  
                                    l3355 0D5A                                      l3347 0D22  
                                    l3195 151C                                      l3187 14CC  
                                    l3291 062C                                      l3283 05E0  
                                    l3275 052A                                      l3267 0496  
                                    l3259 0470                                      l3451 032E  
                                    l3443 02B4                                      l3435 0210  
                                    l3427 01AC                                      l4171 16B4  
                                    l4155 1644                                      l4147 15FE  
                                    l4251 0D1A                                      l4243 0CB8  
                                    l4235 0BB0                                      l4139 2836  
                                    l3523 29D8                                      l3515 29A8  
                                    l3531 2F06                                      l4315 1EBE  
                                    l4331 1A1A                                      l4323 19E2  
                                    l4083 0742                                      l4075 06DC  
                                    l3605 1BB2                                      l3613 1BD4  
                                    l4413 1454                                      l3621 2FC6  
                                    l3381 0E7A                                      l3365 0DB0  
                                    l3357 0D90                                      l3349 0D36  
                                    l3197 1524                                      l3189 14D0  
                                    l3293 0632                                      l3285 05FA  
                                    l3269 049C                                      l3277 058E  
                                    l3461 036A                                      l3453 033C  
                                    l3445 02EA                                      l3437 0258  
                                    l4181 1722                                      l4173 16C4  
                                    l4157 1654                                      l4149 1616  
                                    l4245 0CEC                                      l4237 0C14  
                                    l4229 0B88                                      l3525 29DA  
                                    l3517 29AE                                      l3509 2992  
                                    l3533 2F0A                                      l3541 2CBE  
                                    l4317 1EDA                                      l4309 1E6C  
                                    l4261 1C10                                      l4341 1ACA  
                                    l4333 1A28                                      l4325 19EE  
                                    l4093 077E                                      l4077 070C  
                                    l4069 06A2                                      l4501 122A  
                                    l3615 1BE4                                      l3607 1BC2  
                                    l4415 1478                                      l4407 13F8  
                                    l3391 2E9A                                      l3631 2F56  
                                    l3623 2FCA                                      l3711 09D6  
                                    l3703 0998                                      l3383 0E8C  
                                    l3375 0E2A                                      l3367 0DB8  
                                    l3359 0D94                                      l3199 1538  
                                    l3295 0644                                      l3279 05A8  
                                    l3287 060A                                      l3455 0350  
                                    l4183 1736                                      l4175 16D6  
                                    l4167 1688                                      l4159 1666  
                                    l4239 0C18                                      l4247 0CF8  
                                    l3527 29EA                                      l3519 29BC  
                                    l3535 2F1A                                      l3551 2CF2  
                                    l3543 2CC6                                      l4271 1C6A  
                                    l4263 1C22                                      l4343 1AD0  
                                    l4335 1A3A                                      l4327 19FC  
                                    l4319 19C4                                      l4191 2432  
                                    l4095 07AE                                      l4087 0748  
                                    l4511 1262                                      l4503 122E  
                                    l3617 1BF4                                      l3609 1BC4  
                                    l4361 2730                                      l4353 2F74  
                                    l4417 147C                                      l4409 1434  
                                    l3393 2EB0                                      l3481 2F9C  
                                    l3473 2FCE                                      l3633 2F58  
                                    l3625 2F44                                      l4441 1922  
                                    l4425 189A                                      l3721 0A04  
                                    l3713 09F6                                      l3705 09C4  
                                    l3369 0DC0                                      l3297 0650  
                                    l3289 061C                                      l3449 030A  
                                    l3465 0376                                      l3561 2878  
                                    l4185 173A                                      l4177 1702  
                                    l4169 16A8                                      l4249 0CFE  
                                    l3537 2F22                                      l3545 2CD4  
                                    l3553 2CF6                                      l3801 2C0C  
                                    l3641 2644                                      l4281 1CC8  
                                    l4273 1C76                                      l4257 1C06  
                                    l4345 1AE4                                      l4329 1A0E  
                                    l4193 2444                                      l4089 0778  
                                    l4521 12B2                                      l4513 1276  
                                    l4505 1236                                      l4601 24E8  
                                    l4371 2792                                      l4363 2732  
                                    l4355 2F78                                      l3483 2FA0  
                                    l3475 2FD2                                      l3635 2F5A  
                                    l3627 2F48                                      l4443 193E  
                                    l4435 18D4                                      l4427 18C8  
                                    l4419 188A                                      l3395 2F60  
                                    l3491 2ACC                                      l3731 0A48  
                                    l3723 0A14                                      l3707 09C8  
                                    l3379 0E68                                      l3299 0658  
                                    l3467 039A                                      l3459 035C  
                                    l3563 2886                                      l4179 1706  
                                    l3547 2CDC                                      l3539 2CBA  
                                    l3651 2204                                      l3803 2C1E  
                                    l3571 27BC                                      l4291 1E08  
                                    l4283 1CD4                                      l4275 1C7C  
                                    l4259 1C0A                                      l4339 1A70  
                                    l4347 1AEC                                      l4195 2450  
                                    l4187 240C                                      l4451 1FB0  
                                    l4099 07B4                                      l4531 1304  
                                    l4523 12C8                                      l4515 127A  
                                    l4507 123E                                      l4611 24FC  
                                    l4603 24EC                                      l3581 1B0C  
                                    l4373 2794                                      l4365 2766  
                                    l4357 272E                                      l4381 2FBC  
                                    l3389 2E9A                                      l3477 2FD6  
                                    l3485 2FA4                                      l3629 2F4E  
                                    l4445 196C                                      l4437 191A  
                                    l4429 18CC                                      l3493 2ADC  
                                    l3741 0A92                                      l3725 0A24  
                                    l3709 09D2                                      l3397 0012  
                                    l3565 28AC                                      l3821 213C  
                                    l3549 2CEA                                      l3653 2218  
                                    l3661 229E                                      l3645 21FC  
                                    l3573 27CC                                      l4293 1E0E  
                                    l3557 2FB2                                      l3813 2BA4  
                                    l4285 1CF0                                      l4269 1C2A  
                                    l4277 1C98                                      l4197 245E  
                                    l4189 2424                                      l4461 1FD6  
                                    l4453 1FB6                                      l3901 2E96  
                                    l4533 1308                                      l4525 12DA  
                                    l4517 128A                                      l4509 1252  
                                    l4621 2522                                      l4613 2502  
                                    l4605 24F4                                      ?_map 001B  
                                    ?_pad 0011                                      l3591 1B42  
                                    l3583 1B1C                                      l4375 2796  
                                    l4367 278E                                      l4359 272E  
                                    l4391 13C8                                      l4383 1330  
                                    l3479 2FDA                                      l4447 1970  
                                    l4439 191E                                      l3495 2AEC  
                                    l3751 0AFC                                      l3743 0A96  
                                    l3727 0A30                                      l3735 0A50  
                                    l3719 09FE                                      l3671 0910  
                                    l3399 0036                                      l3559 2870  
                                    l3831 216C                                      l3823 214A  
                                    l3639 2F28                                      l3663 22AA  
                                    l3655 223C                                      l3647 2200  
                                    l3575 27D6                                      l3567 279E  
                                    l4295 1E2A                                      l3815 2BCA  
                                    l3807 2B9C                                      l4287 1CFC  
                                    l4279 1CAC                                      l4199 2470  
                                    l4471 2006                                      l4463 1FE6  
                                    l4455 1FBE                                      l3911 2F02  
                                    l4527 12DE                                      l4535 1310  
                                    l4519 12A0                                      l4623 2534  
                                    l4615 2514                                      l4607 24F6  
                                    l3593 1B52                                      l3585 1B20  
                                    l3577 1AFA                                      l4377 2798  
                                    l4369 2790                                      l4393 13CC  
                                    l4449 19A6                                      l3497 2AF0  
                                    l3489 2AA4                                      l3761 0B1E  
                                    l3753 0B0C                                      l4801 0ACC  
                                    l3729 0A3C                                      l3737 0A84  
                                    l3681 0942                                      l3673 0920  
                                    l3841 219A                                      l3833 2170  
                                    l3825 2152                                      l3665 22AC  
                                    l3657 2272                                      l3649 2200  
                                    l3569 27AE                                      l4297 1E36  
                                    l4289 1DF4                                      l3817 2BCE  
                                    l4465 1FEE                                      l4457 1FC6  
                                    l3905 2EE8                                      l3921 2C5A  
                                    l4537 1314                                      l4529 12F0  
                                    l4625 253C                                      l4617 2518  
                                    l4609 24F8                                      l3595 1B68  
                                    l3587 1B2E                                      l3579 1AFE  
                                    l4379 279A                                      l4395 13E8  
                                    l3755 0B18                                      l3739 0A88  
                                    l3691 0958                                      l3683 094A  
                                    l3675 0930                                      l3747 0AB6  
                                    l3667 08FE                                      l3851 21CE  
                                    l3843 21A8                                      l3835 2178  
                                    l3827 2156                                      l3819 2138  
                                    l3931 26C8                                      l3659 2282  
                                    l4299 1E52                                      l4467 1FF6  
                                    l4459 1FCE                                      l4475 2016  
                                    l3907 2EE8                                      l3923 2C6A  
                                    l3915 2C32                                      l4539 132A  
                                    l4491 11EC                                      l4619 251C  
                                    l3597 1B70                                      l3589 1B3E  
                                    l4389 1338                                      l3693 0968  
                                    l3749 0AEA                                      l3677 0934  
                                    l3669 090A                                      l3781 2AF8  
                                    l3853 21D4                                      l3845 21AE  
                                    l3837 218A                                      l3829 2164  
                                    l3933 26D6                                      l4469 1FFE  
                                    l4477 206A                                      l3909 2EF0  
                                    l3925 2C6E                                      l3917 2C46  
                                    l4493 11F4                                      l4485 11C0  
                                    l4581 24AC                                      l3599 1B7C  
                                    l3951 1788                                      l3943 1748  
                                    l3695 0978                                      l3679 093C  
                                    l3783 2B0A                                      l3847 21C4  
                                    l3839 2192                                      l3855 21DA  
                                    l3871 22CE                                      l3863 22B0  
                                    l3935 26E8                                      l4479 206E  
                                    l3919 2C4A                                      l4495 11F8  
                                    l4487 11D2                                      l4591 24D4  
                                    l4583 24B6                                      l3777 2E14  
                                    l3961 17DC                                      l3953 178C  
                                    l3697 0984                                      l3689 0952  
                                    l3785 2B12                                      l3857 21EA  
                                    l3849 21CC                                      l3881 2306  
                                    l3873 22DC                                      l3865 22B4  
                                    l3937 2726                                      l3929 26C0  
                                    l3793 2BEE                                      l4497 120A  
                                    l4489 11D8                                      l4593 24D8  
                                    l4585 24BA                                      l3779 2E34  
                                    l3971 1834                                      l3963 17E0  
                                    l3699 0990                                      l3787 2B1A  
                                    l3859 21F2                                      l3883 2314  
                                    l3891 233E                                      l3875 22E4  
                                    l3867 22C2                                      l3939 272A  
                                    l3795 2BF6                                      l4499 1216  
                                    l4595 24DC                                      l4587 24BC  
                                    l3973 186C                                      l3965 17E4  
                                    l3949 1758                                      l3789 2B36  
                                    l3893 234E                                      l3885 232A  
                                    l3877 22F6                                      l3869 22CA  
                                    l3797 2BF8                                      l3981 1D0A  
                                    l4597 24E0                                      l4589 24C0  
                                    l3967 1800                                      l3959 1794  
                                    l3895 2356                                      l3887 2332  
                                    l3879 22FE                                      l3799 2C0A  
                                    l3983 1D10                                      l3975 1D04  
                                    l4791 1A84                                      l4599 24E4  
                                    l3969 1830                                      l4793 0BFE  
                                    l3889 2338                                      l3985 1D1C  
                                    l3977 1D06                                      l4795 0DDE  
                                    l3995 1D42                                      l3987 1D24  
                                    l3979 1D06                                      l3899 2E72  
                                    l4787 086C                                      l4797 09AE  
                                    l3997 1D5E                                      l3989 1D36  
                                    l4789 202C                                      l4799 0A66  
                                    l3999 1D6A                              ?_leer_eeprom 0003  
                                    STR_1 7A1D                                      STR_2 7DE7  
                                    STR_3 7FC4                                      STR_4 7CB3  
                                    STR_5 7E8D                                      STR_6 7D78  
                                    STR_7 7F18                                      STR_8 7BEF  
                                    STR_9 7A9C                                      u2001 0F20  
                                    u2010 0F44                                      u2011 0F40  
                                    u2020 0F6E                                      u2100 15BC  
                                    u2021 0F6A                                      u2101 15B8  
                                    u2110 2B62                                      u2030 0FAE  
                                    u2111 2B5E                                      u2031 0FAA  
                                    u2120 2B90                                      u2040 0FF8  
                                    u2200 047E                                      u3000 22C2  
                                    u2121 2B8C                                      u2041 0FF4  
                                    u2201 047A                                      u3001 22BE  
                                    u2130 2A02                                      u2050 14AC  
                                    u2210 05A8                                      u3010 22DC  
                                    u2131 29FE                                      u2051 14A8  
                                    u2211 05A4                                      u3011 22D8  
                                    u3100 1888                                      u2060 14DE  
                                    u2220 05C6                                      u2140 03DE  
                                    u2300 1066                                      u3020 22F6  
                                    u3101 1884                                      u2061 14DA  
                                    u2221 05C2                                      u2141 03D8  
                                    u2301 1062                                      u3021 22F2  
                                    u2070 151C                                      u2230 05E0  
                                    u2150 03E0                                      u2310 1098  
                                    u3030 2314                                      u3110 1D36  
                                    u2071 1518                                      u2231 05DC  
                                    u2311 1094                                      u3031 2310  
                                    u3111 1D32                                      u2400 0DAC  
                                    u2080 1546                                      u2240 05FA  
                                    u2160 03F6                                      u2320 10B6  
                                    u3040 232A                                      u3120 1D8C  
                                    u3200 070C                                      _LATD 000F8C  
                                    u2401 0DA8                                      u2081 1542  
                                    u2241 05F6                                      u2161 03F2  
                                    u2321 10B2                                      u3041 2326  
                                    u3121 1D88                                      u3201 0708  
                                    u2410 0E62                                      u2090 1574  
                                    u2250 060A                                      u2170 0426  
                                    u2330 10E2                                      u3050 234E  
                                    u3130 1DDC                                      u3210 0742  
                                    u2411 0E5C                                      u2091 1570  
                                    u2251 0606                                      u2171 0422  
                                    u2331 10DE                                      u3051 234A  
                                    u3131 1DD8                                      u3211 073E  
                                    u2420 0E64                                      u2260 061C  
                                    u2180 0442                                      u2340 111C  
                                    u2500 00C2                                      u3300 2858  
                                    u3140 240A                                      u3060 2C5A  
                                    u3220 0778                                      u2261 0618  
                                    u2181 043E                                      u2341 1118  
                                    u2501 00BE                                      u3301 2854  
                                    u3141 2406                                      u3061 2C56  
                                    u3221 0774                                      u2430 0E7A  
                                    u2270 062C                                      u2190 0470  
                                    u2350 116C                                      u2510 013E  
                                    u3310 1638                                      u3070 2C6A  
                                    u3230 07AE                                      u3150 256E  
                                    u2431 0E76                                      u2271 0628  
                                    u2191 046C                                      u2351 1168  
                                    u2511 0138                                      u3311 1634  
                                    u3071 2C66                                      u3231 07AA  
                                    u3151 256A                                      u2600 2ADC  
                                    u2440 0E8C                                      u2280 0644  
                                    u2360 117C                                      u2520 0140  
                                    u3320 1666                                      u3080 26E8  
                                    u3400 1C22                                      u3240 07E4  
                                    u3160 258E                                      u2601 2AD8  
                                    u2441 0E88                                      u2281 0640  
                                    u2361 1178                                      u3321 1662  
                                    u3081 26E4                                      u3401 1C1E  
                                    u3241 07E0                                      u3161 258A  
                                    u2450 2EB0                                      u3090 1800  
                                    u2610 2AEC                                      u2370 11B6  
                                    u2530 0156                                      u3330 16D6  
                                    u3410 1C98                                      u3250 081A  
                                    u3170 25BE                                      u2451 2EAC  
                                    u3091 17FC                                      u2611 2AE8  
                                    u2371 11B2                                      u2291 1044  
                                    u2531 0152                                      u3331 16D2  
                                    u3411 1C94                                      u3251 0816  
                                    u3171 25BA                                      u2460 2EBE  
                                    u3500 19C2                                      u2620 2958  
                                    u2380 0D5A                                      u1900 2DD6  
                                    u2540 017A                                      u3340 1722  
                                    u3180 2E06                                      u2700 2CEA  
                                    u3420 1EDA                                      u3260 0850  
                                    u2461 2EBA                                      u3501 19BE  
                                    u2381 0D56                                      u1901 2DD2  
                                    u2541 0176                                      u3341 171E  
                                    u3181 2E02                                      u2701 2CE6  
                                    u3421 1ED6                                      u3261 084C  
                                    u2470 2F72                                      u2630 2980  
                                    u2390 0D90                                      u1910 2082  
                                    u2550 01EC                                      u2710 28C8  
                                    u3430 19E2                                      u3350 2444  
                                    u3510 1FE6                                      u3270 08D2  
                                    u3190 06D2                                      u2471 2F6E  
                                    u2391 0D8C                                      u1911 207E  
                                    u2551 01E8                                      u2711 28C4  
                                    u3431 19DE                                      u3351 2440  
                                    u3511 1FE2                                      u3271 08CE  
                                    u3191 06CE                                      u2640 2990  
                                    u1920 20A4                                      u2560 0210  
                                    u2480 0036                                      u2800 2218  
                                    u2720 27BC                                      u3440 1A0E  
                                    u3360 2470                                      u3280 08E2  
                                    u3600 12C8                                      u3520 11D2  
                                    u2641 298C                                      u1921 20A0  
                                    u2561 020C                                      u2481 0032  
                                    u2801 2214                                      u2721 27B8  
                                    u3441 1A0A                                      u3361 246C  
                                    u3281 08DE                                      u3601 12C4  
                                    u3521 11CE                                      u1850 1EF4  
                                    u1930 20FA                                      u2570 02B4  
                                    u2490 007E                                      u3370 0B7A  
                                    u3290 2836                                      u2650 29A8  
                                    u2810 2272                                      u2730 27F6  
                                    u3450 1A3A                                      u3610 12DA  
                                    u3530 11EC                                      u2627 294E  
                                    u1851 1EF0                                      u1931 20F6  
                                    u2571 02B0                                      u2491 007A  
                                    u3371 0B76                                      u3291 2832  
                                    u2651 29A4                                      u2811 226E  
                                    u2731 27F2                                      u3451 1A36  
                                    u3611 12D6                                      u3531 11E8  
                                    u2740 1B0C                                      u3460 13E8  
                                    u2900 0AFC                                      u2820 0920  
                                    u1860 1F06                                      u1940 210A  
                                    u2580 032E                                      u3380 0C34  
                                    u2660 29BC                                      u3620 12F0  
                                    u3540 120A                                      u2741 1B08  
                                    u3461 13E4                                      u2637 2976  
                                    u2901 0AF8                                      u2821 091C  
                                    u1861 1F02                                      u1941 2106  
                                    u2581 032A                                      u3381 0C30  
                                    u2661 29B8                                      u3621 12EC  
                                    u3541 1206                                      u2750 1B2E  
                                    u3470 1454                                      u2590 2ACC  
                                    u2910 0B0C                                      u2830 0930  
                                    u1870 1F2E                                      u1950 2D14  
                                    u3390 0D1A                                      u2670 29D8  
                                    u3550 1252                                      u2751 1B2A  
                                    u3471 1450                                      u2591 2AC8  
                                    u2911 0B08                                      u2831 092C  
                                    u1871 1F2A                                      u1951 2D10  
                                    u3391 0D16                                      u2671 29D4  
                                    u3551 124E                                      u2760 1B68  
                                    u3480 1498                                      u2840 0968  
                                    u1960 2DA6                                      u1880 1F64  
                                    u2680 29EA                                      u2920 2C1C  
                                    u3560 1262                                      u2761 1B64  
                                    u3481 1494                                      u2841 0964  
                                    u1961 2DA0                                      u1881 1F60  
                                    u2681 29E6                                      u2921 2C18  
                                    u3561 125E                                      u2770 1B8A  
                                    u3490 193E                                      u2850 0978  
                                    u1970 2DA8                                      u1890 2CB8  
                                    u2690 2CD4                                      u2930 2BEA  
                                    u3570 128A                                      u2771 1B86  
                                    u3491 193A                                      u2851 0974  
                                    u1891 2CB4                                      u2691 2CD0  
                                    u3707 2BF0                                      u2931 2BE6  
                                    u3571 1286                                      u2780 1BB2  
                                    u2860 09F2                                      u1980 0EC4  
                                    u2940 214A                                      u3580 12A0  
                                    u2781 1BAE                                      u2861 09EE  
                                    u1981 0EC0                                      u2941 2146  
                                    u3717 2CC0                                      u3581 129C  
                                    u2790 1BE4                                      u2870 0A14  
                                    u1990 0EF6                                      u2950 2164  
                                    u3590 12B2                                      u3670 2514  
                                    u2791 1BE0                                      u2871 0A10  
                                    u1991 0EF2                                      u2951 2160  
                                    u3727 2CD6                                      u3591 12AE  
                                    u3671 2510                                      u2880 0A24  
                                    u2960 218A                                      u3680 2534  
                                    u2881 0A20                                      u2961 2186  
                                    u3737 2CEC                                      u3681 2530  
                                    u2890 0AB2                                      u2970 21A8  
                                    u2891 0AAE                                      u2971 21A4  
                                    u3747 2F10                                      u2980 21C4  
                                    u2981 21C0                                      u3757 2F1E  
                                    u2990 21EA                                      u2991 21E6  
                                    u3767 29AA                                      u3777 2E3A  
                                    u3697 23E0                                      u3787 2D6A  
                                    _TMR0 000FD6                      _minutosTranscurridos 00F3  
                      ??_i2c_reinicia_com 0002                            _check_response 2CBA  
                 escribeHorariosMemoria@i 0011                   escribeHorariosMemoria@j 000D  
                           ??_i2c_detener 0002                                      abs@a 0013  
                                    _dbuf 0116                                      _atoi 0D22  
                                    _ctoa 29EE                                      _main 24AC  
                                    _dtoa 03AE                                      _hora 00FA  
                                    _prec 00ED                                      _nout 0110  
                                    pad@i 0018                                      pad@p 0015  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    indf1 000FE7                                      indf2 000FDF  
                                    fsr1l 000FE1                                      pad@w 001A  
                                    map@x 001B                                      fsr2l 000FD9  
                                    _stoa 103A                                      btemp 005F  
                          ?_sistemaRegado 0001                  __size_of_asignarHorarios 014A  
                           ??_i2c_iniciar 0001                                      prodh 000FF4  
                                    prodl 000FF3                                      start 000E  
                ??_restablecerDatosSensor 0005                             __CFG_IESO$OFF 000000  
                        ??_DHT11_ReadData 0001                         _constructorSensor 2FB2  
                    __size_of_DHT11_Start 0020                              ?_lecturaWifi 0001  
                 __size_of_setTiempoRegar 00A0                              ___param_bank 000000  
                      ?_constructorSensor 0001                        setTiempoRegar@hora 0014  
                      _leeHorariosMemoria 188A                          ??_encenderBombas 0014  
                                   ??_abs 0015                                     ??_map 002F  
                                   ??_pad 0017                            _i2c_envia_dato 2F9A  
                           __CFG_PLLDIV$1 000000                            _i2c_inicia_com 2FCE  
                         __end_of___aldiv 1C06                           __end_of___aodiv 103A  
                                   ?_atoi 0008                                     ?_ctoa 001C  
                                   ?_main 0001                                     ?_dtoa 001C  
                         __end_of___aomod 15FE                             _convertirDato 2EE6  
                         __end_of___awdiv 21FC                                     STR_10 7A9C  
                                   STR_11 7D9D                                     STR_12 7FED  
                                   STR_20 7E2D                                     STR_13 7EE4  
                                   STR_21 7D53                                     STR_30 7EFB  
                                   STR_14 7F4A                                     STR_22 7EC9  
                                   STR_15 7BEF                                     STR_23 7DC2  
                                   STR_31 7CDE                                     STR_40 7C86  
                                   STR_24 7C55                                     STR_32 7A5E  
                                   STR_16 79D5                                     STR_41 7E6D  
                                   STR_25 7E4D                                     STR_17 7D2E  
                                   STR_33 7B83                                     STR_42 7EAC  
                                   STR_26 7E0B                                     STR_18 7D08  
                                   STR_34 7BBA                                     STR_50 7AD7  
                                   STR_43 7FB3                                     STR_27 7F61  
                                   STR_35 7F31                                     STR_19 7C22  
                                   STR_44 7FF6                                     STR_36 7F78  
                                   STR_28 7EFE                           __end_of___awmod 2360  
                                   STR_45 7FE2                                     STR_29 7FD4  
                                   STR_37 7E6D                                     STR_46 7FA1  
                                   STR_38 7EAC                                     STR_47 7F8D  
                                   STR_39 7C86                                     STR_48 7B4A  
                                   STR_49 7B11                       ??_constructorSensor 0005  
                                   ?_stoa 000A                         convertirDato@dato 0002  
                                   _T0CON 000FD5                           ___awdiv@divisor 0003  
                                   i2l209 2930                       ?_leeHorariosMemoria 0001  
                         ___awdiv@counter 0005                                     _RCREG 000FAE  
                            vfpfcnvrt@fmt 0042                                     _SPBRG 000FAF  
                           __CFG_USBDIV$1 000000                                     _TRISD 000F95  
                                   _TXREG 000FAD                             __CFG_PWRT$OFF 000000  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                       ___lmul@multiplicand 0005  
                           __CFG_WRT3$OFF 000000                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            __CFG_EBTRB$OFF 000000  
                      __size_of_UART_init 0070                        __size_of_UART_read 0054  
                                   _flags 00EF                                     _fputc 1EE2  
                                   _fputs 2C76                           __end_of_isdigit 2DAE  
                  __end_of_check_response 2CFA                               ?_UART_write 0001  
                                   atoi@n 0015                                     pad@fp 0011  
                                   atoi@s 0008                                     _width 00EB  
                                   ctoa@c 001E                                     _putch 2FDE  
                                   ctoa@w 001F                                     dtoa@d 001E  
                                   dtoa@i 003E                                     dtoa@n 0036  
                                   dtoa@p 0030                                     dtoa@s 0034  
                                   dtoa@w 0032                           __end_of_isspace 2B9C  
                                   tablat 000FF5                                     plusw1 000FE3  
                                   plusw2 000FDB                                     stoa@i 0016  
                                   stoa@l 001E                                     stoa@p 001C  
                                   stoa@s 000C         __size_of_mostrarDatosSensoresWIFI 00FE  
                                   stoa@w 0018                                     ttemp5 0060  
                                   ttemp6 0063                                     ttemp7 0067  
                                   status 000FD8                 ?_mostrarDatosSensoresWIFI 0001  
                                   wtemp8 0060                           __end_of_sprintf 2B4A  
                      escribe_eeprom@dato 0009                 __end_of_constructorSensor 2FBC  
                    ??_leeHorariosMemoria 0007                            __CFG_ICPRT$OFF 000000  
                              _i2c_espera 2E9A                          ??_dameHoraActual 0005  
                          __CFG_MCLRE$OFF 000000                           __initialization 2A4A  
                     __end_of_i2c_detener 2FDE           __size_of_lecturaAnalogaSensores 00AC  
                  __end_of_i2c_envia_dato 2FA6                              __end_of_atoi 0EB2  
                            __end_of_ctoa 2A4A                              __end_of_main 2548  
                            __end_of_dtoa 0692                  ??_escribeHorariosMemoria 000B  
                         ??_configurarAdc 0001                              __end_of_stoa 11C0  
                  __end_of_i2c_inicia_com 2FD6                        _inicializarObjetos 1330  
                     __end_of_i2c_iniciar 2F8A                    sistemaPrincipal@opcion 00EA  
                        _dameHumedadSuelo 2BEC                            ?_convertirDato 0001  
                    __size_of_fijaHoraRtc 0068                                    ??_atoi 000A  
                                  ??_ctoa 001F                                    ??_main 005F  
                                  ??_dtoa 0026                                    ??_stoa 000E  
               setTiempoRegar@tiempoRegar 0013                             __activetblptr 000002  
                     ?_inicializarObjetos 0001                        i2c_envia_dato@dato 0002  
                         __CFG_CCP2MX$OFF 000000                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                                    ?_fputc 0001  
                                  ?_fputs 000A                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                           ?_check_response 0001  
                        ___awdiv@dividend 0001                    encenderBombas@flagSeco 0016  
                                  ?_putch 0001                        convertirDato@datoR 0003  
                           _horaRegar$803 0005                                    i2l4541 28D4  
                                  i2l4551 290A                                    i2l4543 28E2  
                                  i2l4553 290C                                    i2l4545 28F4  
                                  i2l4547 28F6                                    i2l4555 2918  
                                  i2l4557 2926                                    i2l4549 2906  
                                  i2l4559 292A                           ??_sistemaRegado 005F  
                                  _SSPADD 000FC8                                    _SSPBUF 000FC9  
                    ??_inicializarObjetos 0007           __size_of_restablecerDatosSensor 0050  
                          __CFG_XINST$OFF 000000                          __end_of_getValue 0B22  
                            vfprintf@cfmt 005D                  __end_of_sistemaPrincipal 2072  
                          _escribe_eeprom 2E14                                    ___lmul 279E  
                         ?_i2c_envia_dato 0001                                 ??___aldiv 0015  
                               ??___aodiv 0011                                 ??___aomod 0011  
                                  ___wmul 2EC0                         __end_of_UART_init 279E  
                       __end_of_UART_read 2AF8                                 ??___awdiv 0005  
                               ??___awmod 0005                         ??_asignarHorarios 0076  
                        __end_of_leer_rtc 2E9A                           ?_i2c_inicia_com 0001  
                        __end_of_estaSeco 2C76                       __size_of_UART_write 0016  
                            ?_UART_printf 0002                                    clear_0 2A72  
                                  clear_1 2A84                                    clear_2 2A90  
                        ___awdiv@quotient 0007                           ___awmod@divisor 0003  
                                  _setRtc 26BE                           ___awmod@counter 0005  
                                  pad@buf 0013                                    ctoa@fp 001C  
     mostrarDatosSensoresWIFI@temperatura 00DF                                    dtoa@fp 001C  
                                  _strlen 2DAE                           _i2c_recibe_dato 2F44  
                  __size_of_dameDiaActual 0010                              ?_mostrarMenu 0001  
                                  fputc@c 0001                                    fputs@c 000E  
                                  fputs@i 000F                                    fputs@s 000A  
                               ??_isdigit 0003                      escribe_rtc@direccion 0004  
                            __mediumconst 79D4                                 ??_isspace 0003  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                    _lecturaAnalogaSensores 2360  
            __end_of_mostrarDatosSensores 1EE2                                    stoa@cp 001A  
                                  stoa@fp 000A                                    putch@c 0001  
                        __end_of_vfprintf 28D2                                 ??_sprintf 005F  
                           ?_regadoRapido 0001                                __accesstop 0060  
                 __end_of__initialization 2A96                      __size_of_escribe_rtc 001E  
                         __CFG_PBADEN$OFF 000000                      __size_of_leer_eeprom 003C  
                         __CFG_FOSC$XT_XT 000000                               _i2c_detener 2FD6  
              __size_of_constructorSensor 000A                             ___rparam_used 000001  
                             _i2c_iniciar 2F74                    __end_of_escribe_eeprom 2E44  
                             ?_i2c_espera 0001                            _setTiempoRegar 240C  
                          __pcstackCOMRAM 0001                              leer_rtc@dato 0004  
                            __pidataBANK1 2FA6                      __size_of_lecturaWifi 00F0  
         __size_of_escribeHorariosMemoria 0142                           ??_convertirDato 0001  
                           __end_of_fputc 1FAC                             __end_of_fputs 2CBA  
                     estaSeco@temperatura 0013                             __end_of_putch 2FE0  
                  _restablecerDatosSensor 2B9C                              _datoRecibido 00F8  
                       ?_dameDatosSistema 0001                            ??_regadoRapido 000F  
                                 ??_fputc 0005                                   ??_fputs 000E  
                                 ??_putch 0001                                __pbssBANK0 00EB  
                              __pbssBANK1 0100                        ??_dameDatosSistema 0076  
                 __size_of_desbordamiento 292C                        __size_of_horaRegar 0082  
                  __end_of_setTiempoRegar 24AC                             _dameDiaActual 2F8A  
       constructorSensor@porcientoHumedad 0003                              lecturaWifi@i 00AA  
                         ?_escribe_eeprom 0007             dameTemperaturaHumedad@Humedad 0004  
                              _fijaDiaRtc 2DE4                        _contInterrupciones 0112  
               __size_of_i2c_reinicia_com 0008                                   ?___lmul 0001  
                                 ?___wmul 0001                                _flagRegado 00F5  
              mostrarDatosSensores@buffer 0077                   __end_of_i2c_recibe_dato 2F5E  
                                 _ACKSTAT 007E2E                            ___lmul@product 0009  
                                 ?_setRtc 0001                                   ?_strlen 0001  
         mostrarDatosSensores@temperatura 00A9             dameTemperaturaHumedad@humedad 000E  
                      __size_of_vfpfcnvrt 039C                       __size_of_i2c_espera 0026  
                               ?_getValue 0004                    _escribeHorariosMemoria 1748  
                                 _SSPCON1 000FC6                                   _SSPCON2 000FC5  
                            ??_UART_write 0001                                   _SSPSTAT 000FC7  
                __end_of_dameHumedadSuelo 2C32                                 ?_leer_rtc 0001  
                               ?_estaSeco 0010                           __CFG_VREGEN$OFF 000000  
                          ?_dameDiaActual 0001                             ??_DHT11_Start 0001  
                         ?_setTiempoRegar 0001                                   __Hparam 0000  
                                 __Lparam 0000         dameTemperaturaHumedad@Temperatura 0006  
                                 ___aldiv 1AFA                                   ___aodiv 0EB2  
                                 ___aomod 149A                                   ___awdiv 2138  
                         __size_of___lmul 006A                      _mostrarDatosSensores 1DF4  
                                 ___awmod 22B0                           __size_of___wmul 0026  
                               ?_vfprintf 0057                           __CFG_STVREN$OFF 000000  
                                 __pcinit 2A4A                                   __ramtop 0800  
                      __end_of_UART_write 2F74                           __size_of_setRtc 0070  
                                 __ptext0 24AC                                   __ptext1 11C0  
                                 __ptext2 2548                                   __ptext3 0692  
                                 __ptext4 2C32                                   __ptext5 2E44  
                                 __ptext6 2F8A                                   __ptext7 2E70  
                                 __ptext8 2EE6                                   __ptext9 1FAC  
                 check_response@respuesta 0001                         __end_of_horaRegar 25CA  
                               _T0CONbits 000FD5                           __size_of_strlen 0036  
                    __size_of_UART_printf 005E                              __size_of_abs 0040  
                            __size_of_pad 00C6                              __size_of_map 007A  
                        ??_check_response 0001                                   _isdigit 2D76  
                        ___awmod@dividend 0001                                   _regando 00F2  
                   regadoRapido@areaRegar 0012                          ___aldiv@dividend 000D  
                                 _isspace 2B4A                                   _minutos 0115  
                    __size_of_mostrarMenu 007A                                   atoi@neg 000E  
                              ??_getValue 0006                                   _sprintf 2AF8  
                          __pintcode_body 28D2                      end_of_initialization 2A96  
          mostrarDatosSensoresWIFI@buffer 00AD                                ??_leer_rtc 0003  
                              ??_estaSeco 0012                                   fputc@fp 0003  
                         _asignarHorarios 15FE                             __Lmediumconst 79D4  
                                 int_func 28D2                                   fputs@fp 000C  
                        ??_i2c_envia_dato 0002               __size_of_leeHorariosMemoria 013A  
                        ??_i2c_inicia_com 0002                               ?_fijaDiaRtc 0001  
                        _VALOR_TIMER0UART 013F                         __end_of_vfpfcnvrt 03AE  
                ??_dameTemperaturaHumedad 0008                                 _RCSTAbits 000FAB  
                        ___aldiv@quotient 0017                     ?_mostrarDatosSensores 0001  
                     __end_of_DHT11_Start 2F26                                   postdec1 000FE5  
                                 postdec2 000FDD                         ?_sistemaPrincipal 0001  
                 _peticionLecturaSensores 00F1                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                           ??_fijaHoraRtc 0013                      __end_of_regadoRapido 1AFA  
                        ?_i2c_recibe_dato 0001                                ??_vfprintf 005D  
                           setRtc@datoRtc 0011                     __end_of_configurarAdc 2FC6  
                      ??_sistemaPrincipal 00E8                                   strlen@a 0003  
                                 strlen@s 0001                                 _UART_init 272E  
                              getValue@Rx 000E                                 _UART_read 2AA4  
                               _PORTDbits 000F83                   __size_of_DHT11_ReadData 005C  
                 ?_lecturaAnalogaSensores 0001                             setRtc@seteado 0010  
               dameHumedadSuelo@canalLeer 0005                   lecturaAnalogaSensores@i 0030  
                               _TRISBbits 000F93                                 _TRISCbits 000F94  
                               _TRISDbits 000F95                   __size_of_encenderBombas 026C  
                _mostrarDatosSensoresWIFI 1C06                         lecturaWifi@buffer 0076  
                         ??_dameDiaActual 0005                                map@out_max 002B  
                              map@out_min 0027                            _desbordamiento 0008  
                          _esperandoDatos 00FC                            _UART_init$1915 0023  
                            ?_i2c_detener 0001                     __end_of_sistemaRegado 1330  
                               _TXSTAbits 000FAC                         dameDatosSistema@i 00E6  
                       dameDatosSistema@j 00E4               __size_of_inicializarObjetos 016A  
                            ?_i2c_iniciar 0001                              ??_i2c_espera 0001  
                       _MODO_COMUNICACION 00FB                        DHT11_ReadData@data 0002  
                        _i2c_reinicia_com 2FC6                 dameDatosSistema@diasRegar 00AC  
                          __end_of___lmul 2808                               vfpfcnvrt@ap 0044  
                             vfpfcnvrt@cp 0052                               vfpfcnvrt@fp 0040  
                             vfpfcnvrt@ll 004A                            __end_of___wmul 2EE6  
                 ?_restablecerDatosSensor 0001            __end_of_lecturaAnalogaSensores 240C  
                              ?_UART_init 001B                                ?_UART_read 0001  
                 __size_of_dameHoraActual 002C                            __end_of_setRtc 272E  
                     __end_of_fijaHoraRtc 2870                            __end_of_strlen 2DE4  
                     start_initialization 2A4A                              _estaSeco$796 0012  
                             __end_of_abs 2D3A                               __end_of_pad 2138  
                 __end_of_asignarHorarios 1748                               __end_of_map 26BE  
                     __size_of_fijaDiaRtc 0030         escribeHorariosMemoria@contMemoria 000F  
                  __end_of_desbordamiento 2934                        __end_of_i2c_espera 2EC0  
                           ??_escribe_rtc 0004                             ??_leer_eeprom 0005  
                        ??_escribe_eeprom 000A                       leeHorariosMemoria@i 000D  
                     leeHorariosMemoria@j 0009                      constructorSensor@pin 0004  
                             _DHT11_Start 2F06                     _dameDatosSistema$1916 00DE  
                   _dameDatosSistema$1917 00E0                     _dameDatosSistema$1918 00E2  
                           ??_lecturaWifi 005F                    ??_mostrarDatosSensores 0076  
                             vfprintf@fmt 0059                 __size_of_dameDatosSistema 0200  
         __size_of_dameTemperaturaHumedad 00B4                                  ??___lmul 0009  
                                ??___wmul 0005            __end_of_restablecerDatosSensor 2BEC  
                             __pdataBANK1 0136                          __CFG_LPT1OSC$OFF 000000  
                       leer_rtc@direccion 0003                                  ??_setRtc 000F  
                   __end_of_convertirDato 2F06                                  ??_strlen 0003  
                             __pbssBIGRAM 06E0                   ?_escribeHorariosMemoria 0001  
                           __pcstackBANK0 0060                          ___aodiv@dividend 0001  
                         ?_desbordamiento 0001                          ??_setTiempoRegar 0013  
                               _diaActual 00F9                   inicializarObjetos@i_806 000B  
                       __size_of_getValue 0224                         ?_dameHumedadSuelo 0001  
                  getValue@datoIncorrecto 0008                         UART_printf@cadena 0002  
                           lecturaWifi@Rx 00A8                                 _atoi$1564 0010  
                               _atoi$1565 0014                                 _atoi$1566 0012  
                      ??_dameHumedadSuelo 0003                         __size_of_leer_rtc 002A  
                       __size_of_estaSeco 0044                       __end_of_escribe_rtc 2F44  
                     __end_of_leer_eeprom 2D76                     __size_of_regadoRapido 0136  
                               _dtoa$1081 002E                                 __pintcode 0008  
                           __pmediumconst 79D4                                  ?___aldiv 000D  
                                ?___aodiv 0001                                  ?___aomod 0001  
                                ?___awdiv 0001                          ___aodiv@quotient 0013  
                                ?___awmod 0001                               _fijaHoraRtc 2808  
                     __end_of_lecturaWifi 1DF4                            _DHT11_ReadData 2992  
                              setRtc@dato 0012                               ??_UART_init 001F  
                             ??_UART_read 0001                         __size_of_vfprintf 0062  
             mostrarDatosSensores@humedad 00AA            __end_of_escribeHorariosMemoria 188A  
                                ?_isdigit 0001                            _encenderBombas 0692  
                                ?_isspace 0001                                 _horaRegar 2548  
          dameTemperaturaHumedad@checkSum 000A                    _dameTemperaturaHumedad 21FC  
                        ?_asignarHorarios 0001                                  ?_sprintf 0060  
                          __size_of_fputc 00CA                            __size_of_fputs 0044  
                            _regadoRapido 19C4                            __size_of_putch 0002  
                         ___aldiv@divisor 0011                           ___aldiv@counter 0015  
                          ___wmul@product 0005                                  _LATDbits 000F8C  
                                _PIE1bits 000F9D                      __size_of_i2c_detener 0008  
                            ??_fijaDiaRtc 0013                                  _PIR1bits 000F9E  
                                i2u363_40 28E2                                  i2u363_41 28DE  
                                i2u364_40 28F4                                  i2u364_41 28F0  
                                i2u365_40 2906                                  i2u365_41 2902  
                                i2u366_40 2926                                  i2u366_41 2922  
                 restablecerDatosSensor@i 0005                      __size_of_i2c_iniciar 0016  
                        __CFG_WDTPS$32768 000000                    _tiempoInactividadTrans 00FF  
           leeHorariosMemoria@contMemoria 000B                       asignarHorarios@hora 00AC  
                  __end_of_DHT11_ReadData 29EE                                 getValue@i 0009  
                           ??_UART_printf 0004                    dameDatosSistema@buffer 007A  
                               _vfpfcnvrt 0012                                 map@in_max 0023  
                               map@in_min 001F                                _ADCON0bits 000FC2  
                          _dameHoraActual 2E44                         ___wmul@multiplier 0001  
              ??_mostrarDatosSensoresWIFI 00AC                    __end_of_encenderBombas 08FE  
                           ??_mostrarMenu 0004                            UART_write@dato 0001  
                              ?_horaRegar 0001                     mostrarDatosSensores@i 00AB  
                            _isspace$1582 0007                 __size_of_sistemaPrincipal 00C6  
                __end_of_i2c_reinicia_com 2FCE                                vfpfcnvrt@c 0056  
                      __end_of_fijaDiaRtc 2E14                         ___lmul@multiplier 0001  
                               copy_data0 2A5E                               _escribe_rtc 2F26  
                             _leer_eeprom 2D3A                              _VALOR_TIMER0 013D  
              __end_of_leeHorariosMemoria 19C4                                 estaSeco@s 0010  
                 asignarHorarios@diaRegar 00AB                                  __Hrparam 0000  
                   getValue@numCharacters 0004                              _minutosRegar 00F4  
                             _lecturaWifi 1D04                             UART_init@BAUD 001B  
                              vfprintf@ap 005B                                  __Lrparam 0000  
                              vfprintf@fp 0057                          _dameDatosSistema 0B22  
dameTemperaturaHumedad@temperaturaDecimal 000D                       _esperaDatoConcluida 00FD  
                        __size_of___aldiv 010C                           ?_DHT11_ReadData 0001  
                        __size_of___aodiv 0188                          __size_of___aomod 0164  
                        __size_of___awdiv 00C4                    __end_of_dameHoraActual 2E70  
                        __size_of___awmod 00B0                                ?_vfpfcnvrt 0040  
                         DHT11_ReadData@i 0001                           ___aodiv@divisor 0009  
                         ___aodiv@counter 0011                           ?_encenderBombas 0001  
                              sprintf@fmt 0062                  __size_of_i2c_recibe_dato 001A  
                     __end_of_UART_printf 2992                          __size_of_isdigit 0038  
                        __size_of_isspace 0052                                  __ptext10 240C  
                                __ptext11 19C4                                  __ptext20 279E  
                                __ptext12 25CA                                  __ptext21 2BEC  
                                __ptext13 1C06                                  __ptext30 22B0  
                                __ptext22 21FC                                  __ptext14 1D04  
                                __ptext31 2138                                  __ptext23 2CBA  
                                __ptext15 2B9C                                  __ptext40 149A  
                                __ptext32 0B22                                  __ptext24 2F06  
                                __ptext16 2FB2                                  __ptext41 0EB2  
                                __ptext33 15FE                                  __ptext25 2992  
                                __ptext17 1DF4                                  __ptext50 2D76  
                                __ptext42 29EE                                  __ptext34 2AF8  
                                __ptext26 2808                                  __ptext18 2360  
                                __ptext51 08FE                                  __ptext43 2072  
                                __ptext35 2870                                  __ptext27 2DE4  
                                __ptext19 2644                                  __ptext60 2F44  
                                __ptext52 2AA4                                  __ptext44 2DAE  
                                __ptext36 0012                                  __ptext28 26BE  
                                __ptext61 2FCE                                  __ptext53 2934  
                                __ptext45 2C76                                  __ptext37 103A  
                                __ptext29 2F26                                  __ptext70 1AFA  
                                __ptext62 2F9A                                  __ptext54 2F5E  
                                __ptext46 1EE2                                  __ptext38 03AE  
                                __ptext63 2FD6                                  __ptext55 1748  
                                __ptext47 2FDE                                  __ptext39 2CFA  
                                __ptext64 2E9A                                  __ptext56 2E14  
                                __ptext48 0D22                                  __ptext65 1330  
                                __ptext57 188A                                  __ptext49 2B4A  
                                __ptext66 2EC0                                  __ptext58 2D3A  
                                __ptext67 2F74                                  __ptext59 2FC6  
                                __ptext68 2FBC                                  __ptext69 272E  
                                _getValue 08FE                       __end_of_mostrarMenu 2644  
                        __size_of_sprintf 0052                                  _leer_rtc 2E70  
                                _estaSeco 2C32                __end_of_inicializarObjetos 149A  
                                _byteUart 00FE                    __size_of_configurarAdc 000A  
                lecturaWifi@humedadMedida 00A9                   __size_of_check_response 0040  
                   __end_of_dameDiaActual 2F9A                       inicializarObjetos@i 000D  
                     inicializarObjetos@j 0009                             __size_of_atoi 0190  
                           __size_of_ctoa 005C                             __size_of_main 009C  
                           __size_of_dtoa 02E4                                  _horarios 06E0  
                            ?_DHT11_Start 0001                             __size_of_stoa 0186  
    dameTemperaturaHumedad@humedadDecimal 000C                                  _tempHora 00F6  
                                _segundos 0114                                 stoa@F1144 0136  
                         encenderBombas@i 0017                                  _sensores 0100  
               mostrarDatosSensoresWIFI@i 00E1                                  int$flags 005F  
                                _vfprintf 2870                           ?_dameHoraActual 0001  
                 __size_of_i2c_envia_dato 000C                             getValue@i_989 000B  
                 __size_of_i2c_inicia_com 0008                  i2c_recibe_dato@datoleido 0002  
                        ___aomod@dividend 0001                     __CFG_CPUDIV$OSC1_PLL2 000000  
                        ??_desbordamiento 0001                            _vfpfcnvrt$1105 0054  
                  __size_of_sistemaRegado 0170                                _INTCONbits 000FF2  
                      constructorSensor@s 0001                               ??_horaRegar 0003  
         mostrarDatosSensoresWIFI@humedad 00E0                   escribe_eeprom@direccion 0007  
                                isdigit@c 0001                                  intlevel2 0000  
                               sprintf@ap 006E                           escribe_rtc@dato 0003  
                                isspace@c 0001                           setRtc@direccion 000F  
                       asignarHorarios@Rx 00AA             __size_of_mostrarDatosSensores 00EE  
                           _overflowTimer 00F7                              ?_fijaHoraRtc 0001  
       dameTemperaturaHumedad@temperatura 000F                           ___aomod@divisor 0009  
                            getValue@dato 000D                 __size_of_dameHumedadSuelo 0046  
                             ??_vfpfcnvrt 0046                                  stoa@nuls 000F  
                         ___aomod@counter 0011                               _UART_printf 2934  
                           _configurarAdc 2FBC          __end_of_mostrarDatosSensoresWIFI 1D04  
                   asignarHorarios@buffer 0078                                  sprintf@f 0070  
                                sprintf@s 0060                   ?_dameTemperaturaHumedad 0004  
                             _mostrarMenu 25CA                              ___aldiv@sign 0016  
                        asignarHorarios@i 00AD                          _sistemaPrincipal 1FAC  
                         leer_eeprom@dato 0006                               _SSPCON2bits 000FC5  
                              _UART_write 2F5E                              ___aodiv@sign 0012  
                       ??_i2c_recibe_dato 0002                    __size_of_convertirDato 0020  
                    leer_eeprom@direccion 0003                             _sistemaRegado 11C0  
                            ___aomod@sign 0012                  ??_lecturaAnalogaSensores 002F  
